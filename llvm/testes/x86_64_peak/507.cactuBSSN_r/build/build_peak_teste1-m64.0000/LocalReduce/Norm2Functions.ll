; ModuleID = 'LocalReduce/Norm2Functions.c'
source_filename = "LocalReduce/Norm2Functions.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [29 x i8] c"LocalReduce/Norm2Functions.c\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"LocalReduce\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"indices out of bounds, this should not happen\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"offsets and strides access unallocated memory\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"weight_on is not set to a valid value\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"num_points\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"weight_sum\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm2_BYTE(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5473 [
    i32 101, label %22
    i32 102, label %624
    i32 103, label %1231
    i32 104, label %1833
    i32 105, label %2442
    i32 106, label %3049
    i32 107, label %3657
    i32 108, label %4261
    i32 109, label %4869
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load i8, ptr %24, align 1, !tbaa !11
  %30 = mul i8 %29, %29
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5473

31:                                               ; preds = %22
  switch i32 %1, label %622 [
    i32 1, label %32
    i32 0, label %330
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5473

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %193

46:                                               ; preds = %32
  br i1 %36, label %47, label %5473

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %191
  %56 = phi i32 [ 0, %47 ], [ %143, %191 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %142, %191 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !12

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !16

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !17

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds i8, ptr %24, i64 %130
  %134 = load i8, ptr %133, align 1, !tbaa !11
  %135 = load i8, ptr %26, align 1, !tbaa !11
  %136 = uitofp i8 %135 to double
  %137 = uitofp i8 %134 to double
  %138 = fmul fast double %132, %137
  %139 = fmul fast double %138, %138
  %140 = fadd fast double %139, %136
  %141 = fptoui double %140 to i8
  store i8 %141, ptr %26, align 1, !tbaa !11
  %142 = fadd fast double %132, %57
  %143 = add nuw nsw i32 %56, 1
  br i1 %49, label %144, label %191

144:                                              ; preds = %128
  %145 = load i32, ptr %4, align 4, !tbaa !5
  %146 = load i32, ptr %12, align 4, !tbaa !5
  %147 = add nsw i32 %146, -1
  %148 = icmp slt i32 %145, %147
  br i1 %148, label %168, label %149

149:                                              ; preds = %144
  %150 = icmp eq i32 %145, %147
  br i1 %150, label %151, label %184

151:                                              ; preds = %149
  store i32 0, ptr %4, align 4, !tbaa !5
  %152 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %152, ptr %6, align 4, !tbaa !5
  br i1 %54, label %191, label %153

153:                                              ; preds = %151, %178
  %154 = phi i64 [ %182, %178 ], [ 1, %151 ]
  %155 = getelementptr inbounds i32, ptr %4, i64 %154
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = getelementptr inbounds i32, ptr %12, i64 %154
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = add nsw i32 %158, -1
  %160 = icmp slt i32 %156, %159
  br i1 %160, label %161, label %176

161:                                              ; preds = %153
  br i1 %148, label %168, label %162

162:                                              ; preds = %161
  %163 = getelementptr inbounds i32, ptr %7, i64 %154
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = getelementptr inbounds i32, ptr %6, i64 %154
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = add nsw i32 %166, %164
  store i32 %167, ptr %165, align 4, !tbaa !5
  br label %186

168:                                              ; preds = %144, %161
  %169 = phi i32 [ %156, %161 ], [ %145, %144 ]
  %170 = phi ptr [ %155, %161 ], [ %4, %144 ]
  %171 = phi i64 [ %154, %161 ], [ 0, %144 ]
  %172 = add nsw i32 %169, 1
  store i32 %172, ptr %170, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %7, i64 %171
  %174 = load i32, ptr %173, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %6, i64 %171
  br label %186

176:                                              ; preds = %153
  %177 = icmp eq i32 %156, %159
  br i1 %177, label %178, label %184

178:                                              ; preds = %176
  store i32 0, ptr %155, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %8, i64 %154
  %180 = load i32, ptr %179, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %6, i64 %154
  store i32 %180, ptr %181, align 4, !tbaa !5
  %182 = add nuw nsw i64 %154, 1
  %183 = icmp eq i64 %182, %52
  br i1 %183, label %191, label %153, !llvm.loop !20

184:                                              ; preds = %149, %176
  %185 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

186:                                              ; preds = %162, %168
  %187 = phi ptr [ %175, %168 ], [ %155, %162 ]
  %188 = phi i32 [ %174, %168 ], [ 1, %162 ]
  %189 = load i32, ptr %187, align 4, !tbaa !5
  %190 = add nsw i32 %189, %188
  store i32 %190, ptr %187, align 4, !tbaa !5
  br label %191

191:                                              ; preds = %178, %186, %151, %128
  %192 = icmp eq i32 %143, %5
  br i1 %192, label %5473, label %55, !llvm.loop !22

193:                                              ; preds = %38, %328
  %194 = phi i32 [ 0, %38 ], [ %277, %328 ]
  %195 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %196, label %265

196:                                              ; preds = %193, %255
  %197 = phi i32 [ %264, %255 ], [ 0, %193 ]
  %198 = phi i64 [ %206, %255 ], [ %43, %193 ]
  %199 = phi i64 [ %263, %255 ], [ %42, %193 ]
  %200 = phi i32 [ %261, %255 ], [ %195, %193 ]
  %201 = sub i32 %41, %197
  %202 = tail call i32 @llvm.smin.i32(i32 %201, i32 0)
  %203 = sub i32 %201, %202
  %204 = zext i32 %203 to i64
  %205 = add nuw nsw i64 %204, 1
  %206 = add nsw i64 %198, -1
  %207 = icmp ult i32 %203, 31
  br i1 %207, label %243, label %208

208:                                              ; preds = %196
  %209 = and i64 %205, 8589934560
  %210 = sub i64 %199, %209
  br label %211

211:                                              ; preds = %211, %208
  %212 = phi i64 [ 0, %208 ], [ %235, %211 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %231, %211 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %232, %211 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %233, %211 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %234, %211 ]
  %217 = sub i64 %199, %212
  %218 = getelementptr inbounds i32, ptr %11, i64 %217
  %219 = getelementptr inbounds i32, ptr %218, i64 -7
  %220 = load <8 x i32>, ptr %219, align 4, !tbaa !5
  %221 = shufflevector <8 x i32> %220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %222 = getelementptr inbounds i32, ptr %218, i64 -15
  %223 = load <8 x i32>, ptr %222, align 4, !tbaa !5
  %224 = shufflevector <8 x i32> %223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %225 = getelementptr inbounds i32, ptr %218, i64 -23
  %226 = load <8 x i32>, ptr %225, align 4, !tbaa !5
  %227 = shufflevector <8 x i32> %226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %228 = getelementptr inbounds i32, ptr %218, i64 -31
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = mul <8 x i32> %221, %213
  %232 = mul <8 x i32> %224, %214
  %233 = mul <8 x i32> %227, %215
  %234 = mul <8 x i32> %230, %216
  %235 = add nuw i64 %212, 32
  %236 = icmp eq i64 %235, %209
  br i1 %236, label %237, label %211, !llvm.loop !23

237:                                              ; preds = %211
  %238 = mul <8 x i32> %232, %231
  %239 = mul <8 x i32> %233, %238
  %240 = mul <8 x i32> %234, %239
  %241 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %240)
  %242 = icmp eq i64 %205, %209
  br i1 %242, label %255, label %243

243:                                              ; preds = %196, %237
  %244 = phi i64 [ %199, %196 ], [ %210, %237 ]
  %245 = phi i32 [ 1, %196 ], [ %241, %237 ]
  br label %246

246:                                              ; preds = %243, %246
  %247 = phi i64 [ %252, %246 ], [ %244, %243 ]
  %248 = phi i32 [ %251, %246 ], [ %245, %243 ]
  %249 = getelementptr inbounds i32, ptr %11, i64 %247
  %250 = load i32, ptr %249, align 4, !tbaa !5
  %251 = mul nsw i32 %250, %248
  %252 = add nsw i64 %247, -1
  %253 = trunc i64 %247 to i32
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %246, label %255, !llvm.loop !24

255:                                              ; preds = %246, %237
  %256 = phi i32 [ %241, %237 ], [ %251, %246 ]
  %257 = and i64 %206, 4294967295
  %258 = getelementptr inbounds i32, ptr %6, i64 %257
  %259 = load i32, ptr %258, align 4, !tbaa !5
  %260 = mul nsw i32 %259, %256
  %261 = add nsw i32 %260, %200
  %262 = icmp sgt i64 %198, 2
  %263 = add nsw i64 %199, -1
  %264 = add i32 %197, 1
  br i1 %262, label %196, label %265, !llvm.loop !25

265:                                              ; preds = %255, %193
  %266 = phi i32 [ %195, %193 ], [ %261, %255 ]
  %267 = icmp slt i32 %266, %5
  br i1 %267, label %270, label %268

268:                                              ; preds = %265
  %269 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

270:                                              ; preds = %265
  %271 = sext i32 %266 to i64
  %272 = getelementptr inbounds i8, ptr %24, i64 %271
  %273 = load i8, ptr %272, align 1, !tbaa !11
  %274 = load i8, ptr %26, align 1, !tbaa !11
  %275 = mul i8 %273, %273
  %276 = add i8 %275, %274
  store i8 %276, ptr %26, align 1, !tbaa !11
  %277 = add nuw nsw i32 %194, 1
  br i1 %40, label %278, label %328

278:                                              ; preds = %270
  %279 = load i32, ptr %4, align 4, !tbaa !5
  %280 = load i32, ptr %12, align 4, !tbaa !5
  %281 = add nsw i32 %280, -1
  %282 = icmp slt i32 %279, %281
  br i1 %282, label %305, label %283

283:                                              ; preds = %278
  %284 = icmp eq i32 %279, %281
  br i1 %284, label %285, label %321

285:                                              ; preds = %283
  store i32 0, ptr %4, align 4, !tbaa !5
  %286 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %286, ptr %6, align 4, !tbaa !5
  br i1 %45, label %328, label %287

287:                                              ; preds = %285, %315
  %288 = phi i64 [ %319, %315 ], [ 1, %285 ]
  %289 = getelementptr inbounds i32, ptr %4, i64 %288
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = getelementptr inbounds i32, ptr %12, i64 %288
  %292 = load i32, ptr %291, align 4, !tbaa !5
  %293 = add nsw i32 %292, -1
  %294 = icmp slt i32 %290, %293
  br i1 %294, label %295, label %313

295:                                              ; preds = %287
  br i1 %282, label %305, label %296

296:                                              ; preds = %295
  %297 = shl i64 %288, 32
  %298 = add i64 %297, -4294967296
  %299 = ashr exact i64 %298, 32
  %300 = getelementptr inbounds i32, ptr %7, i64 %299
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = getelementptr inbounds i32, ptr %6, i64 %288
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = add nsw i32 %303, %301
  store i32 %304, ptr %302, align 4, !tbaa !5
  br label %323

305:                                              ; preds = %278, %295
  %306 = phi i32 [ %290, %295 ], [ %279, %278 ]
  %307 = phi ptr [ %289, %295 ], [ %4, %278 ]
  %308 = phi i64 [ %288, %295 ], [ 0, %278 ]
  %309 = add nsw i32 %306, 1
  store i32 %309, ptr %307, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %7, i64 %308
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = getelementptr inbounds i32, ptr %6, i64 %308
  br label %323

313:                                              ; preds = %287
  %314 = icmp eq i32 %290, %293
  br i1 %314, label %315, label %321

315:                                              ; preds = %313
  store i32 0, ptr %289, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %8, i64 %288
  %317 = load i32, ptr %316, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %6, i64 %288
  store i32 %317, ptr %318, align 4, !tbaa !5
  %319 = add nuw nsw i64 %288, 1
  %320 = icmp eq i64 %319, %43
  br i1 %320, label %328, label %287, !llvm.loop !26

321:                                              ; preds = %283, %313
  %322 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

323:                                              ; preds = %296, %305
  %324 = phi ptr [ %312, %305 ], [ %289, %296 ]
  %325 = phi i32 [ %311, %305 ], [ 1, %296 ]
  %326 = load i32, ptr %324, align 4, !tbaa !5
  %327 = add nsw i32 %326, %325
  store i32 %327, ptr %324, align 4, !tbaa !5
  br label %328

328:                                              ; preds = %315, %323, %285, %270
  %329 = icmp eq i32 %277, %5
  br i1 %329, label %5473, label %193, !llvm.loop !27

330:                                              ; preds = %31
  %331 = getelementptr inbounds i32, ptr %3, i64 %19
  %332 = load i32, ptr %331, align 4, !tbaa !5
  %333 = icmp eq i32 %332, 0
  %334 = icmp sgt i32 %5, 0
  br i1 %333, label %344, label %335

335:                                              ; preds = %330
  br i1 %334, label %336, label %5473

336:                                              ; preds = %335
  %337 = icmp sgt i32 %13, 1
  %338 = icmp sgt i32 %13, 0
  %339 = add i32 %13, -2
  %340 = zext i32 %339 to i64
  %341 = zext i32 %13 to i64
  %342 = add nuw i32 %5, 1
  %343 = icmp eq i32 %13, 1
  br label %485

344:                                              ; preds = %330
  br i1 %334, label %345, label %5473

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %353

353:                                              ; preds = %345, %483
  %354 = phi i32 [ 0, %345 ], [ %435, %483 ]
  %355 = phi double [ 0.000000e+00, %345 ], [ %434, %483 ]
  %356 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %346, label %357, label %426

357:                                              ; preds = %353, %416
  %358 = phi i32 [ %425, %416 ], [ 0, %353 ]
  %359 = phi i64 [ %367, %416 ], [ %350, %353 ]
  %360 = phi i64 [ %424, %416 ], [ %349, %353 ]
  %361 = phi i32 [ %422, %416 ], [ %356, %353 ]
  %362 = sub i32 %348, %358
  %363 = tail call i32 @llvm.smin.i32(i32 %362, i32 0)
  %364 = sub i32 %362, %363
  %365 = zext i32 %364 to i64
  %366 = add nuw nsw i64 %365, 1
  %367 = add nsw i64 %359, -1
  %368 = icmp ult i32 %364, 31
  br i1 %368, label %404, label %369

369:                                              ; preds = %357
  %370 = and i64 %366, 8589934560
  %371 = sub i64 %360, %370
  br label %372

372:                                              ; preds = %372, %369
  %373 = phi i64 [ 0, %369 ], [ %396, %372 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %392, %372 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %393, %372 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %394, %372 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %395, %372 ]
  %378 = sub i64 %360, %373
  %379 = getelementptr inbounds i32, ptr %9, i64 %378
  %380 = getelementptr inbounds i32, ptr %379, i64 -7
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %379, i64 -15
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %379, i64 -23
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %379, i64 -31
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = mul <8 x i32> %382, %374
  %393 = mul <8 x i32> %385, %375
  %394 = mul <8 x i32> %388, %376
  %395 = mul <8 x i32> %391, %377
  %396 = add nuw i64 %373, 32
  %397 = icmp eq i64 %396, %370
  br i1 %397, label %398, label %372, !llvm.loop !28

398:                                              ; preds = %372
  %399 = mul <8 x i32> %393, %392
  %400 = mul <8 x i32> %394, %399
  %401 = mul <8 x i32> %395, %400
  %402 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %401)
  %403 = icmp eq i64 %366, %370
  br i1 %403, label %416, label %404

404:                                              ; preds = %357, %398
  %405 = phi i64 [ %360, %357 ], [ %371, %398 ]
  %406 = phi i32 [ 1, %357 ], [ %402, %398 ]
  br label %407

407:                                              ; preds = %404, %407
  %408 = phi i64 [ %413, %407 ], [ %405, %404 ]
  %409 = phi i32 [ %412, %407 ], [ %406, %404 ]
  %410 = getelementptr inbounds i32, ptr %9, i64 %408
  %411 = load i32, ptr %410, align 4, !tbaa !5
  %412 = mul nsw i32 %411, %409
  %413 = add nsw i64 %408, -1
  %414 = trunc i64 %408 to i32
  %415 = icmp sgt i32 %414, 0
  br i1 %415, label %407, label %416, !llvm.loop !29

416:                                              ; preds = %407, %398
  %417 = phi i32 [ %402, %398 ], [ %412, %407 ]
  %418 = and i64 %367, 4294967295
  %419 = getelementptr inbounds i32, ptr %6, i64 %418
  %420 = load i32, ptr %419, align 4, !tbaa !5
  %421 = mul nsw i32 %420, %417
  %422 = add nsw i32 %421, %361
  %423 = icmp sgt i64 %359, 2
  %424 = add nsw i64 %360, -1
  %425 = add i32 %358, 1
  br i1 %423, label %357, label %426, !llvm.loop !30

426:                                              ; preds = %416, %353
  %427 = phi i32 [ %356, %353 ], [ %422, %416 ]
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds i8, ptr %24, i64 %428
  %430 = load i8, ptr %429, align 1, !tbaa !11
  %431 = load i8, ptr %26, align 1, !tbaa !11
  %432 = mul i8 %430, %430
  %433 = add i8 %432, %431
  store i8 %433, ptr %26, align 1, !tbaa !11
  %434 = fadd fast double %355, 1.000000e+00
  %435 = add nuw nsw i32 %354, 1
  br i1 %347, label %436, label %483

436:                                              ; preds = %426
  %437 = load i32, ptr %4, align 4, !tbaa !5
  %438 = load i32, ptr %12, align 4, !tbaa !5
  %439 = add nsw i32 %438, -1
  %440 = icmp slt i32 %437, %439
  br i1 %440, label %460, label %441

441:                                              ; preds = %436
  %442 = icmp eq i32 %437, %439
  br i1 %442, label %443, label %476

443:                                              ; preds = %441
  store i32 0, ptr %4, align 4, !tbaa !5
  %444 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %444, ptr %6, align 4, !tbaa !5
  br i1 %352, label %483, label %445

445:                                              ; preds = %443, %470
  %446 = phi i64 [ %474, %470 ], [ 1, %443 ]
  %447 = getelementptr inbounds i32, ptr %4, i64 %446
  %448 = load i32, ptr %447, align 4, !tbaa !5
  %449 = getelementptr inbounds i32, ptr %12, i64 %446
  %450 = load i32, ptr %449, align 4, !tbaa !5
  %451 = add nsw i32 %450, -1
  %452 = icmp slt i32 %448, %451
  br i1 %452, label %453, label %468

453:                                              ; preds = %445
  br i1 %440, label %460, label %454

454:                                              ; preds = %453
  %455 = getelementptr inbounds i32, ptr %7, i64 %446
  %456 = load i32, ptr %455, align 4, !tbaa !5
  %457 = getelementptr inbounds i32, ptr %6, i64 %446
  %458 = load i32, ptr %457, align 4, !tbaa !5
  %459 = add nsw i32 %458, %456
  store i32 %459, ptr %457, align 4, !tbaa !5
  br label %478

460:                                              ; preds = %436, %453
  %461 = phi i32 [ %448, %453 ], [ %437, %436 ]
  %462 = phi ptr [ %447, %453 ], [ %4, %436 ]
  %463 = phi i64 [ %446, %453 ], [ 0, %436 ]
  %464 = add nsw i32 %461, 1
  store i32 %464, ptr %462, align 4, !tbaa !5
  %465 = getelementptr inbounds i32, ptr %7, i64 %463
  %466 = load i32, ptr %465, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %6, i64 %463
  br label %478

468:                                              ; preds = %445
  %469 = icmp eq i32 %448, %451
  br i1 %469, label %470, label %476

470:                                              ; preds = %468
  store i32 0, ptr %447, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %8, i64 %446
  %472 = load i32, ptr %471, align 4, !tbaa !5
  %473 = getelementptr inbounds i32, ptr %6, i64 %446
  store i32 %472, ptr %473, align 4, !tbaa !5
  %474 = add nuw nsw i64 %446, 1
  %475 = icmp eq i64 %474, %350
  br i1 %475, label %483, label %445, !llvm.loop !31

476:                                              ; preds = %441, %468
  %477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

478:                                              ; preds = %454, %460
  %479 = phi ptr [ %467, %460 ], [ %447, %454 ]
  %480 = phi i32 [ %466, %460 ], [ 1, %454 ]
  %481 = load i32, ptr %479, align 4, !tbaa !5
  %482 = add nsw i32 %481, %480
  store i32 %482, ptr %479, align 4, !tbaa !5
  br label %483

483:                                              ; preds = %470, %478, %443, %426
  %484 = icmp eq i32 %435, %5
  br i1 %484, label %5473, label %353, !llvm.loop !32

485:                                              ; preds = %336, %620
  %486 = phi i32 [ 0, %336 ], [ %569, %620 ]
  %487 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %337, label %488, label %557

488:                                              ; preds = %485, %547
  %489 = phi i32 [ %556, %547 ], [ 0, %485 ]
  %490 = phi i64 [ %498, %547 ], [ %341, %485 ]
  %491 = phi i64 [ %555, %547 ], [ %340, %485 ]
  %492 = phi i32 [ %553, %547 ], [ %487, %485 ]
  %493 = sub i32 %339, %489
  %494 = tail call i32 @llvm.smin.i32(i32 %493, i32 0)
  %495 = sub i32 %493, %494
  %496 = zext i32 %495 to i64
  %497 = add nuw nsw i64 %496, 1
  %498 = add nsw i64 %490, -1
  %499 = icmp ult i32 %495, 31
  br i1 %499, label %535, label %500

500:                                              ; preds = %488
  %501 = and i64 %497, 8589934560
  %502 = sub i64 %491, %501
  br label %503

503:                                              ; preds = %503, %500
  %504 = phi i64 [ 0, %500 ], [ %527, %503 ]
  %505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %523, %503 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %524, %503 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %525, %503 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %526, %503 ]
  %509 = sub i64 %491, %504
  %510 = getelementptr inbounds i32, ptr %11, i64 %509
  %511 = getelementptr inbounds i32, ptr %510, i64 -7
  %512 = load <8 x i32>, ptr %511, align 4, !tbaa !5
  %513 = shufflevector <8 x i32> %512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %514 = getelementptr inbounds i32, ptr %510, i64 -15
  %515 = load <8 x i32>, ptr %514, align 4, !tbaa !5
  %516 = shufflevector <8 x i32> %515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %517 = getelementptr inbounds i32, ptr %510, i64 -23
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !5
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = getelementptr inbounds i32, ptr %510, i64 -31
  %521 = load <8 x i32>, ptr %520, align 4, !tbaa !5
  %522 = shufflevector <8 x i32> %521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %523 = mul <8 x i32> %513, %505
  %524 = mul <8 x i32> %516, %506
  %525 = mul <8 x i32> %519, %507
  %526 = mul <8 x i32> %522, %508
  %527 = add nuw i64 %504, 32
  %528 = icmp eq i64 %527, %501
  br i1 %528, label %529, label %503, !llvm.loop !33

529:                                              ; preds = %503
  %530 = mul <8 x i32> %524, %523
  %531 = mul <8 x i32> %525, %530
  %532 = mul <8 x i32> %526, %531
  %533 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %532)
  %534 = icmp eq i64 %497, %501
  br i1 %534, label %547, label %535

535:                                              ; preds = %488, %529
  %536 = phi i64 [ %491, %488 ], [ %502, %529 ]
  %537 = phi i32 [ 1, %488 ], [ %533, %529 ]
  br label %538

538:                                              ; preds = %535, %538
  %539 = phi i64 [ %544, %538 ], [ %536, %535 ]
  %540 = phi i32 [ %543, %538 ], [ %537, %535 ]
  %541 = getelementptr inbounds i32, ptr %11, i64 %539
  %542 = load i32, ptr %541, align 4, !tbaa !5
  %543 = mul nsw i32 %542, %540
  %544 = add nsw i64 %539, -1
  %545 = trunc i64 %539 to i32
  %546 = icmp sgt i32 %545, 0
  br i1 %546, label %538, label %547, !llvm.loop !34

547:                                              ; preds = %538, %529
  %548 = phi i32 [ %533, %529 ], [ %543, %538 ]
  %549 = and i64 %498, 4294967295
  %550 = getelementptr inbounds i32, ptr %6, i64 %549
  %551 = load i32, ptr %550, align 4, !tbaa !5
  %552 = mul nsw i32 %551, %548
  %553 = add nsw i32 %552, %492
  %554 = icmp sgt i64 %490, 2
  %555 = add nsw i64 %491, -1
  %556 = add i32 %489, 1
  br i1 %554, label %488, label %557, !llvm.loop !35

557:                                              ; preds = %547, %485
  %558 = phi i32 [ %487, %485 ], [ %553, %547 ]
  %559 = icmp slt i32 %558, %5
  br i1 %559, label %562, label %560

560:                                              ; preds = %557
  %561 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

562:                                              ; preds = %557
  %563 = sext i32 %558 to i64
  %564 = getelementptr inbounds i8, ptr %24, i64 %563
  %565 = load i8, ptr %564, align 1, !tbaa !11
  %566 = load i8, ptr %26, align 1, !tbaa !11
  %567 = mul i8 %565, %565
  %568 = add i8 %567, %566
  store i8 %568, ptr %26, align 1, !tbaa !11
  %569 = add nuw nsw i32 %486, 1
  br i1 %338, label %570, label %620

570:                                              ; preds = %562
  %571 = load i32, ptr %4, align 4, !tbaa !5
  %572 = load i32, ptr %12, align 4, !tbaa !5
  %573 = add nsw i32 %572, -1
  %574 = icmp slt i32 %571, %573
  br i1 %574, label %597, label %575

575:                                              ; preds = %570
  %576 = icmp eq i32 %571, %573
  br i1 %576, label %577, label %613

577:                                              ; preds = %575
  store i32 0, ptr %4, align 4, !tbaa !5
  %578 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %578, ptr %6, align 4, !tbaa !5
  br i1 %343, label %620, label %579

579:                                              ; preds = %577, %607
  %580 = phi i64 [ %611, %607 ], [ 1, %577 ]
  %581 = getelementptr inbounds i32, ptr %4, i64 %580
  %582 = load i32, ptr %581, align 4, !tbaa !5
  %583 = getelementptr inbounds i32, ptr %12, i64 %580
  %584 = load i32, ptr %583, align 4, !tbaa !5
  %585 = add nsw i32 %584, -1
  %586 = icmp slt i32 %582, %585
  br i1 %586, label %587, label %605

587:                                              ; preds = %579
  br i1 %574, label %597, label %588

588:                                              ; preds = %587
  %589 = shl i64 %580, 32
  %590 = add i64 %589, -4294967296
  %591 = ashr exact i64 %590, 32
  %592 = getelementptr inbounds i32, ptr %7, i64 %591
  %593 = load i32, ptr %592, align 4, !tbaa !5
  %594 = getelementptr inbounds i32, ptr %6, i64 %580
  %595 = load i32, ptr %594, align 4, !tbaa !5
  %596 = add nsw i32 %595, %593
  store i32 %596, ptr %594, align 4, !tbaa !5
  br label %615

597:                                              ; preds = %570, %587
  %598 = phi i32 [ %582, %587 ], [ %571, %570 ]
  %599 = phi ptr [ %581, %587 ], [ %4, %570 ]
  %600 = phi i64 [ %580, %587 ], [ 0, %570 ]
  %601 = add nsw i32 %598, 1
  store i32 %601, ptr %599, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %7, i64 %600
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %6, i64 %600
  br label %615

605:                                              ; preds = %579
  %606 = icmp eq i32 %582, %585
  br i1 %606, label %607, label %613

607:                                              ; preds = %605
  store i32 0, ptr %581, align 4, !tbaa !5
  %608 = getelementptr inbounds i32, ptr %8, i64 %580
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %580
  store i32 %609, ptr %610, align 4, !tbaa !5
  %611 = add nuw nsw i64 %580, 1
  %612 = icmp eq i64 %611, %341
  br i1 %612, label %620, label %579, !llvm.loop !36

613:                                              ; preds = %575, %605
  %614 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

615:                                              ; preds = %588, %597
  %616 = phi ptr [ %604, %597 ], [ %581, %588 ]
  %617 = phi i32 [ %603, %597 ], [ 1, %588 ]
  %618 = load i32, ptr %616, align 4, !tbaa !5
  %619 = add nsw i32 %618, %617
  store i32 %619, ptr %616, align 4, !tbaa !5
  br label %620

620:                                              ; preds = %607, %615, %577, %562
  %621 = icmp eq i32 %569, %5
  br i1 %621, label %5473, label %485, !llvm.loop !37

622:                                              ; preds = %31
  %623 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5473

624:                                              ; preds = %18
  %625 = getelementptr inbounds ptr, ptr %14, i64 %19
  %626 = load ptr, ptr %625, align 8, !tbaa !9
  %627 = getelementptr inbounds ptr, ptr %16, i64 %19
  %628 = load ptr, ptr %627, align 8, !tbaa !9
  store i32 0, ptr %628, align 4, !tbaa !5
  %629 = icmp eq i32 %13, 0
  br i1 %629, label %630, label %634

630:                                              ; preds = %624
  %631 = load i8, ptr %626, align 1, !tbaa !11
  %632 = zext i8 %631 to i32
  %633 = mul nuw nsw i32 %632, %632
  store i32 %633, ptr %628, align 4, !tbaa !5
  br label %5473

634:                                              ; preds = %624
  switch i32 %1, label %1229 [
    i32 1, label %635
    i32 0, label %935
  ]

635:                                              ; preds = %634
  %636 = getelementptr inbounds i32, ptr %3, i64 %19
  %637 = load i32, ptr %636, align 4, !tbaa !5
  %638 = icmp eq i32 %637, 0
  %639 = icmp sgt i32 %5, 0
  br i1 %638, label %649, label %640

640:                                              ; preds = %635
  br i1 %639, label %641, label %5473

641:                                              ; preds = %640
  %642 = icmp sgt i32 %13, 1
  %643 = icmp sgt i32 %13, 0
  %644 = add i32 %13, -2
  %645 = zext i32 %644 to i64
  %646 = zext i32 %13 to i64
  %647 = add nuw i32 %5, 1
  %648 = icmp eq i32 %13, 1
  br label %796

649:                                              ; preds = %635
  br i1 %639, label %650, label %5473

650:                                              ; preds = %649
  %651 = icmp sgt i32 %13, 1
  %652 = icmp sgt i32 %13, 0
  %653 = add i32 %13, -2
  %654 = zext i32 %653 to i64
  %655 = zext i32 %13 to i64
  %656 = add nuw i32 %5, 1
  %657 = icmp eq i32 %13, 1
  br label %658

658:                                              ; preds = %650, %794
  %659 = phi i32 [ 0, %650 ], [ %746, %794 ]
  %660 = phi double [ 0.000000e+00, %650 ], [ %745, %794 ]
  %661 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %651, label %662, label %731

662:                                              ; preds = %658, %721
  %663 = phi i32 [ %730, %721 ], [ 0, %658 ]
  %664 = phi i64 [ %672, %721 ], [ %655, %658 ]
  %665 = phi i64 [ %729, %721 ], [ %654, %658 ]
  %666 = phi i32 [ %727, %721 ], [ %661, %658 ]
  %667 = sub i32 %653, %663
  %668 = tail call i32 @llvm.smin.i32(i32 %667, i32 0)
  %669 = sub i32 %667, %668
  %670 = zext i32 %669 to i64
  %671 = add nuw nsw i64 %670, 1
  %672 = add nsw i64 %664, -1
  %673 = icmp ult i32 %669, 31
  br i1 %673, label %709, label %674

674:                                              ; preds = %662
  %675 = and i64 %671, 8589934560
  %676 = sub i64 %665, %675
  br label %677

677:                                              ; preds = %677, %674
  %678 = phi i64 [ 0, %674 ], [ %701, %677 ]
  %679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %697, %677 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %698, %677 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %699, %677 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %700, %677 ]
  %683 = sub i64 %665, %678
  %684 = getelementptr inbounds i32, ptr %9, i64 %683
  %685 = getelementptr inbounds i32, ptr %684, i64 -7
  %686 = load <8 x i32>, ptr %685, align 4, !tbaa !5
  %687 = shufflevector <8 x i32> %686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %688 = getelementptr inbounds i32, ptr %684, i64 -15
  %689 = load <8 x i32>, ptr %688, align 4, !tbaa !5
  %690 = shufflevector <8 x i32> %689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %691 = getelementptr inbounds i32, ptr %684, i64 -23
  %692 = load <8 x i32>, ptr %691, align 4, !tbaa !5
  %693 = shufflevector <8 x i32> %692, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %694 = getelementptr inbounds i32, ptr %684, i64 -31
  %695 = load <8 x i32>, ptr %694, align 4, !tbaa !5
  %696 = shufflevector <8 x i32> %695, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %697 = mul <8 x i32> %687, %679
  %698 = mul <8 x i32> %690, %680
  %699 = mul <8 x i32> %693, %681
  %700 = mul <8 x i32> %696, %682
  %701 = add nuw i64 %678, 32
  %702 = icmp eq i64 %701, %675
  br i1 %702, label %703, label %677, !llvm.loop !38

703:                                              ; preds = %677
  %704 = mul <8 x i32> %698, %697
  %705 = mul <8 x i32> %699, %704
  %706 = mul <8 x i32> %700, %705
  %707 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %706)
  %708 = icmp eq i64 %671, %675
  br i1 %708, label %721, label %709

709:                                              ; preds = %662, %703
  %710 = phi i64 [ %665, %662 ], [ %676, %703 ]
  %711 = phi i32 [ 1, %662 ], [ %707, %703 ]
  br label %712

712:                                              ; preds = %709, %712
  %713 = phi i64 [ %718, %712 ], [ %710, %709 ]
  %714 = phi i32 [ %717, %712 ], [ %711, %709 ]
  %715 = getelementptr inbounds i32, ptr %9, i64 %713
  %716 = load i32, ptr %715, align 4, !tbaa !5
  %717 = mul nsw i32 %716, %714
  %718 = add nsw i64 %713, -1
  %719 = trunc i64 %713 to i32
  %720 = icmp sgt i32 %719, 0
  br i1 %720, label %712, label %721, !llvm.loop !39

721:                                              ; preds = %712, %703
  %722 = phi i32 [ %707, %703 ], [ %717, %712 ]
  %723 = and i64 %672, 4294967295
  %724 = getelementptr inbounds i32, ptr %6, i64 %723
  %725 = load i32, ptr %724, align 4, !tbaa !5
  %726 = mul nsw i32 %725, %722
  %727 = add nsw i32 %726, %666
  %728 = icmp sgt i64 %664, 2
  %729 = add nsw i64 %665, -1
  %730 = add i32 %663, 1
  br i1 %728, label %662, label %731, !llvm.loop !40

731:                                              ; preds = %721, %658
  %732 = phi i32 [ %661, %658 ], [ %727, %721 ]
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds double, ptr %2, i64 %733
  %735 = load double, ptr %734, align 8, !tbaa !18
  %736 = getelementptr inbounds i8, ptr %626, i64 %733
  %737 = load i8, ptr %736, align 1, !tbaa !11
  %738 = load i32, ptr %628, align 4, !tbaa !5
  %739 = sitofp i32 %738 to double
  %740 = uitofp i8 %737 to double
  %741 = fmul fast double %735, %740
  %742 = fmul fast double %741, %741
  %743 = fadd fast double %742, %739
  %744 = fptosi double %743 to i32
  store i32 %744, ptr %628, align 4, !tbaa !5
  %745 = fadd fast double %735, %660
  %746 = add nuw nsw i32 %659, 1
  br i1 %652, label %747, label %794

747:                                              ; preds = %731
  %748 = load i32, ptr %4, align 4, !tbaa !5
  %749 = load i32, ptr %12, align 4, !tbaa !5
  %750 = add nsw i32 %749, -1
  %751 = icmp slt i32 %748, %750
  br i1 %751, label %771, label %752

752:                                              ; preds = %747
  %753 = icmp eq i32 %748, %750
  br i1 %753, label %754, label %787

754:                                              ; preds = %752
  store i32 0, ptr %4, align 4, !tbaa !5
  %755 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %755, ptr %6, align 4, !tbaa !5
  br i1 %657, label %794, label %756

756:                                              ; preds = %754, %781
  %757 = phi i64 [ %785, %781 ], [ 1, %754 ]
  %758 = getelementptr inbounds i32, ptr %4, i64 %757
  %759 = load i32, ptr %758, align 4, !tbaa !5
  %760 = getelementptr inbounds i32, ptr %12, i64 %757
  %761 = load i32, ptr %760, align 4, !tbaa !5
  %762 = add nsw i32 %761, -1
  %763 = icmp slt i32 %759, %762
  br i1 %763, label %764, label %779

764:                                              ; preds = %756
  br i1 %751, label %771, label %765

765:                                              ; preds = %764
  %766 = getelementptr inbounds i32, ptr %7, i64 %757
  %767 = load i32, ptr %766, align 4, !tbaa !5
  %768 = getelementptr inbounds i32, ptr %6, i64 %757
  %769 = load i32, ptr %768, align 4, !tbaa !5
  %770 = add nsw i32 %769, %767
  store i32 %770, ptr %768, align 4, !tbaa !5
  br label %789

771:                                              ; preds = %747, %764
  %772 = phi i32 [ %759, %764 ], [ %748, %747 ]
  %773 = phi ptr [ %758, %764 ], [ %4, %747 ]
  %774 = phi i64 [ %757, %764 ], [ 0, %747 ]
  %775 = add nsw i32 %772, 1
  store i32 %775, ptr %773, align 4, !tbaa !5
  %776 = getelementptr inbounds i32, ptr %7, i64 %774
  %777 = load i32, ptr %776, align 4, !tbaa !5
  %778 = getelementptr inbounds i32, ptr %6, i64 %774
  br label %789

779:                                              ; preds = %756
  %780 = icmp eq i32 %759, %762
  br i1 %780, label %781, label %787

781:                                              ; preds = %779
  store i32 0, ptr %758, align 4, !tbaa !5
  %782 = getelementptr inbounds i32, ptr %8, i64 %757
  %783 = load i32, ptr %782, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %6, i64 %757
  store i32 %783, ptr %784, align 4, !tbaa !5
  %785 = add nuw nsw i64 %757, 1
  %786 = icmp eq i64 %785, %655
  br i1 %786, label %794, label %756, !llvm.loop !41

787:                                              ; preds = %752, %779
  %788 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

789:                                              ; preds = %765, %771
  %790 = phi ptr [ %778, %771 ], [ %758, %765 ]
  %791 = phi i32 [ %777, %771 ], [ 1, %765 ]
  %792 = load i32, ptr %790, align 4, !tbaa !5
  %793 = add nsw i32 %792, %791
  store i32 %793, ptr %790, align 4, !tbaa !5
  br label %794

794:                                              ; preds = %781, %789, %754, %731
  %795 = icmp eq i32 %746, %5
  br i1 %795, label %5473, label %658, !llvm.loop !42

796:                                              ; preds = %641, %933
  %797 = phi i32 [ 0, %641 ], [ %882, %933 ]
  %798 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %642, label %799, label %868

799:                                              ; preds = %796, %858
  %800 = phi i32 [ %867, %858 ], [ 0, %796 ]
  %801 = phi i64 [ %809, %858 ], [ %646, %796 ]
  %802 = phi i64 [ %866, %858 ], [ %645, %796 ]
  %803 = phi i32 [ %864, %858 ], [ %798, %796 ]
  %804 = sub i32 %644, %800
  %805 = tail call i32 @llvm.smin.i32(i32 %804, i32 0)
  %806 = sub i32 %804, %805
  %807 = zext i32 %806 to i64
  %808 = add nuw nsw i64 %807, 1
  %809 = add nsw i64 %801, -1
  %810 = icmp ult i32 %806, 31
  br i1 %810, label %846, label %811

811:                                              ; preds = %799
  %812 = and i64 %808, 8589934560
  %813 = sub i64 %802, %812
  br label %814

814:                                              ; preds = %814, %811
  %815 = phi i64 [ 0, %811 ], [ %838, %814 ]
  %816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %834, %814 ]
  %817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %835, %814 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %836, %814 ]
  %819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %837, %814 ]
  %820 = sub i64 %802, %815
  %821 = getelementptr inbounds i32, ptr %11, i64 %820
  %822 = getelementptr inbounds i32, ptr %821, i64 -7
  %823 = load <8 x i32>, ptr %822, align 4, !tbaa !5
  %824 = shufflevector <8 x i32> %823, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %825 = getelementptr inbounds i32, ptr %821, i64 -15
  %826 = load <8 x i32>, ptr %825, align 4, !tbaa !5
  %827 = shufflevector <8 x i32> %826, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %828 = getelementptr inbounds i32, ptr %821, i64 -23
  %829 = load <8 x i32>, ptr %828, align 4, !tbaa !5
  %830 = shufflevector <8 x i32> %829, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %831 = getelementptr inbounds i32, ptr %821, i64 -31
  %832 = load <8 x i32>, ptr %831, align 4, !tbaa !5
  %833 = shufflevector <8 x i32> %832, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %834 = mul <8 x i32> %824, %816
  %835 = mul <8 x i32> %827, %817
  %836 = mul <8 x i32> %830, %818
  %837 = mul <8 x i32> %833, %819
  %838 = add nuw i64 %815, 32
  %839 = icmp eq i64 %838, %812
  br i1 %839, label %840, label %814, !llvm.loop !43

840:                                              ; preds = %814
  %841 = mul <8 x i32> %835, %834
  %842 = mul <8 x i32> %836, %841
  %843 = mul <8 x i32> %837, %842
  %844 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %843)
  %845 = icmp eq i64 %808, %812
  br i1 %845, label %858, label %846

846:                                              ; preds = %799, %840
  %847 = phi i64 [ %802, %799 ], [ %813, %840 ]
  %848 = phi i32 [ 1, %799 ], [ %844, %840 ]
  br label %849

849:                                              ; preds = %846, %849
  %850 = phi i64 [ %855, %849 ], [ %847, %846 ]
  %851 = phi i32 [ %854, %849 ], [ %848, %846 ]
  %852 = getelementptr inbounds i32, ptr %11, i64 %850
  %853 = load i32, ptr %852, align 4, !tbaa !5
  %854 = mul nsw i32 %853, %851
  %855 = add nsw i64 %850, -1
  %856 = trunc i64 %850 to i32
  %857 = icmp sgt i32 %856, 0
  br i1 %857, label %849, label %858, !llvm.loop !44

858:                                              ; preds = %849, %840
  %859 = phi i32 [ %844, %840 ], [ %854, %849 ]
  %860 = and i64 %809, 4294967295
  %861 = getelementptr inbounds i32, ptr %6, i64 %860
  %862 = load i32, ptr %861, align 4, !tbaa !5
  %863 = mul nsw i32 %862, %859
  %864 = add nsw i32 %863, %803
  %865 = icmp sgt i64 %801, 2
  %866 = add nsw i64 %802, -1
  %867 = add i32 %800, 1
  br i1 %865, label %799, label %868, !llvm.loop !45

868:                                              ; preds = %858, %796
  %869 = phi i32 [ %798, %796 ], [ %864, %858 ]
  %870 = icmp slt i32 %869, %5
  br i1 %870, label %873, label %871

871:                                              ; preds = %868
  %872 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

873:                                              ; preds = %868
  %874 = sext i32 %869 to i64
  %875 = getelementptr inbounds i8, ptr %626, i64 %874
  %876 = load i8, ptr %875, align 1, !tbaa !11
  %877 = load i32, ptr %628, align 4, !tbaa !5
  %878 = zext i8 %876 to i64
  %879 = mul nuw nsw i64 %878, %878
  %880 = trunc i64 %879 to i32
  %881 = add i32 %877, %880
  store i32 %881, ptr %628, align 4, !tbaa !5
  %882 = add nuw nsw i32 %797, 1
  br i1 %643, label %883, label %933

883:                                              ; preds = %873
  %884 = load i32, ptr %4, align 4, !tbaa !5
  %885 = load i32, ptr %12, align 4, !tbaa !5
  %886 = add nsw i32 %885, -1
  %887 = icmp slt i32 %884, %886
  br i1 %887, label %910, label %888

888:                                              ; preds = %883
  %889 = icmp eq i32 %884, %886
  br i1 %889, label %890, label %926

890:                                              ; preds = %888
  store i32 0, ptr %4, align 4, !tbaa !5
  %891 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %891, ptr %6, align 4, !tbaa !5
  br i1 %648, label %933, label %892

892:                                              ; preds = %890, %920
  %893 = phi i64 [ %924, %920 ], [ 1, %890 ]
  %894 = getelementptr inbounds i32, ptr %4, i64 %893
  %895 = load i32, ptr %894, align 4, !tbaa !5
  %896 = getelementptr inbounds i32, ptr %12, i64 %893
  %897 = load i32, ptr %896, align 4, !tbaa !5
  %898 = add nsw i32 %897, -1
  %899 = icmp slt i32 %895, %898
  br i1 %899, label %900, label %918

900:                                              ; preds = %892
  br i1 %887, label %910, label %901

901:                                              ; preds = %900
  %902 = shl i64 %893, 32
  %903 = add i64 %902, -4294967296
  %904 = ashr exact i64 %903, 32
  %905 = getelementptr inbounds i32, ptr %7, i64 %904
  %906 = load i32, ptr %905, align 4, !tbaa !5
  %907 = getelementptr inbounds i32, ptr %6, i64 %893
  %908 = load i32, ptr %907, align 4, !tbaa !5
  %909 = add nsw i32 %908, %906
  store i32 %909, ptr %907, align 4, !tbaa !5
  br label %928

910:                                              ; preds = %883, %900
  %911 = phi i32 [ %895, %900 ], [ %884, %883 ]
  %912 = phi ptr [ %894, %900 ], [ %4, %883 ]
  %913 = phi i64 [ %893, %900 ], [ 0, %883 ]
  %914 = add nsw i32 %911, 1
  store i32 %914, ptr %912, align 4, !tbaa !5
  %915 = getelementptr inbounds i32, ptr %7, i64 %913
  %916 = load i32, ptr %915, align 4, !tbaa !5
  %917 = getelementptr inbounds i32, ptr %6, i64 %913
  br label %928

918:                                              ; preds = %892
  %919 = icmp eq i32 %895, %898
  br i1 %919, label %920, label %926

920:                                              ; preds = %918
  store i32 0, ptr %894, align 4, !tbaa !5
  %921 = getelementptr inbounds i32, ptr %8, i64 %893
  %922 = load i32, ptr %921, align 4, !tbaa !5
  %923 = getelementptr inbounds i32, ptr %6, i64 %893
  store i32 %922, ptr %923, align 4, !tbaa !5
  %924 = add nuw nsw i64 %893, 1
  %925 = icmp eq i64 %924, %646
  br i1 %925, label %933, label %892, !llvm.loop !46

926:                                              ; preds = %888, %918
  %927 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

928:                                              ; preds = %901, %910
  %929 = phi ptr [ %917, %910 ], [ %894, %901 ]
  %930 = phi i32 [ %916, %910 ], [ 1, %901 ]
  %931 = load i32, ptr %929, align 4, !tbaa !5
  %932 = add nsw i32 %931, %930
  store i32 %932, ptr %929, align 4, !tbaa !5
  br label %933

933:                                              ; preds = %920, %928, %890, %873
  %934 = icmp eq i32 %882, %5
  br i1 %934, label %5473, label %796, !llvm.loop !47

935:                                              ; preds = %634
  %936 = getelementptr inbounds i32, ptr %3, i64 %19
  %937 = load i32, ptr %936, align 4, !tbaa !5
  %938 = icmp eq i32 %937, 0
  %939 = icmp sgt i32 %5, 0
  br i1 %938, label %949, label %940

940:                                              ; preds = %935
  br i1 %939, label %941, label %5473

941:                                              ; preds = %940
  %942 = icmp sgt i32 %13, 1
  %943 = icmp sgt i32 %13, 0
  %944 = add i32 %13, -2
  %945 = zext i32 %944 to i64
  %946 = zext i32 %13 to i64
  %947 = add nuw i32 %5, 1
  %948 = icmp eq i32 %13, 1
  br label %1091

949:                                              ; preds = %935
  br i1 %939, label %950, label %5473

950:                                              ; preds = %949
  %951 = icmp sgt i32 %13, 1
  %952 = icmp sgt i32 %13, 0
  %953 = add i32 %13, -2
  %954 = zext i32 %953 to i64
  %955 = zext i32 %13 to i64
  %956 = add nuw i32 %5, 1
  %957 = icmp eq i32 %13, 1
  br label %958

958:                                              ; preds = %950, %1089
  %959 = phi i32 [ 0, %950 ], [ %1041, %1089 ]
  %960 = phi double [ 0.000000e+00, %950 ], [ %1040, %1089 ]
  %961 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %951, label %962, label %1031

962:                                              ; preds = %958, %1021
  %963 = phi i32 [ %1030, %1021 ], [ 0, %958 ]
  %964 = phi i64 [ %972, %1021 ], [ %955, %958 ]
  %965 = phi i64 [ %1029, %1021 ], [ %954, %958 ]
  %966 = phi i32 [ %1027, %1021 ], [ %961, %958 ]
  %967 = sub i32 %953, %963
  %968 = tail call i32 @llvm.smin.i32(i32 %967, i32 0)
  %969 = sub i32 %967, %968
  %970 = zext i32 %969 to i64
  %971 = add nuw nsw i64 %970, 1
  %972 = add nsw i64 %964, -1
  %973 = icmp ult i32 %969, 31
  br i1 %973, label %1009, label %974

974:                                              ; preds = %962
  %975 = and i64 %971, 8589934560
  %976 = sub i64 %965, %975
  br label %977

977:                                              ; preds = %977, %974
  %978 = phi i64 [ 0, %974 ], [ %1001, %977 ]
  %979 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %974 ], [ %997, %977 ]
  %980 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %974 ], [ %998, %977 ]
  %981 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %974 ], [ %999, %977 ]
  %982 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %974 ], [ %1000, %977 ]
  %983 = sub i64 %965, %978
  %984 = getelementptr inbounds i32, ptr %9, i64 %983
  %985 = getelementptr inbounds i32, ptr %984, i64 -7
  %986 = load <8 x i32>, ptr %985, align 4, !tbaa !5
  %987 = shufflevector <8 x i32> %986, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %988 = getelementptr inbounds i32, ptr %984, i64 -15
  %989 = load <8 x i32>, ptr %988, align 4, !tbaa !5
  %990 = shufflevector <8 x i32> %989, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %991 = getelementptr inbounds i32, ptr %984, i64 -23
  %992 = load <8 x i32>, ptr %991, align 4, !tbaa !5
  %993 = shufflevector <8 x i32> %992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %994 = getelementptr inbounds i32, ptr %984, i64 -31
  %995 = load <8 x i32>, ptr %994, align 4, !tbaa !5
  %996 = shufflevector <8 x i32> %995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %997 = mul <8 x i32> %987, %979
  %998 = mul <8 x i32> %990, %980
  %999 = mul <8 x i32> %993, %981
  %1000 = mul <8 x i32> %996, %982
  %1001 = add nuw i64 %978, 32
  %1002 = icmp eq i64 %1001, %975
  br i1 %1002, label %1003, label %977, !llvm.loop !48

1003:                                             ; preds = %977
  %1004 = mul <8 x i32> %998, %997
  %1005 = mul <8 x i32> %999, %1004
  %1006 = mul <8 x i32> %1000, %1005
  %1007 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1006)
  %1008 = icmp eq i64 %971, %975
  br i1 %1008, label %1021, label %1009

1009:                                             ; preds = %962, %1003
  %1010 = phi i64 [ %965, %962 ], [ %976, %1003 ]
  %1011 = phi i32 [ 1, %962 ], [ %1007, %1003 ]
  br label %1012

1012:                                             ; preds = %1009, %1012
  %1013 = phi i64 [ %1018, %1012 ], [ %1010, %1009 ]
  %1014 = phi i32 [ %1017, %1012 ], [ %1011, %1009 ]
  %1015 = getelementptr inbounds i32, ptr %9, i64 %1013
  %1016 = load i32, ptr %1015, align 4, !tbaa !5
  %1017 = mul nsw i32 %1016, %1014
  %1018 = add nsw i64 %1013, -1
  %1019 = trunc i64 %1013 to i32
  %1020 = icmp sgt i32 %1019, 0
  br i1 %1020, label %1012, label %1021, !llvm.loop !49

1021:                                             ; preds = %1012, %1003
  %1022 = phi i32 [ %1007, %1003 ], [ %1017, %1012 ]
  %1023 = and i64 %972, 4294967295
  %1024 = getelementptr inbounds i32, ptr %6, i64 %1023
  %1025 = load i32, ptr %1024, align 4, !tbaa !5
  %1026 = mul nsw i32 %1025, %1022
  %1027 = add nsw i32 %1026, %966
  %1028 = icmp sgt i64 %964, 2
  %1029 = add nsw i64 %965, -1
  %1030 = add i32 %963, 1
  br i1 %1028, label %962, label %1031, !llvm.loop !50

1031:                                             ; preds = %1021, %958
  %1032 = phi i32 [ %961, %958 ], [ %1027, %1021 ]
  %1033 = sext i32 %1032 to i64
  %1034 = getelementptr inbounds i8, ptr %626, i64 %1033
  %1035 = load i8, ptr %1034, align 1, !tbaa !11
  %1036 = zext i8 %1035 to i32
  %1037 = load i32, ptr %628, align 4, !tbaa !5
  %1038 = mul nuw nsw i32 %1036, %1036
  %1039 = add nsw i32 %1038, %1037
  store i32 %1039, ptr %628, align 4, !tbaa !5
  %1040 = fadd fast double %960, 1.000000e+00
  %1041 = add nuw nsw i32 %959, 1
  br i1 %952, label %1042, label %1089

1042:                                             ; preds = %1031
  %1043 = load i32, ptr %4, align 4, !tbaa !5
  %1044 = load i32, ptr %12, align 4, !tbaa !5
  %1045 = add nsw i32 %1044, -1
  %1046 = icmp slt i32 %1043, %1045
  br i1 %1046, label %1066, label %1047

1047:                                             ; preds = %1042
  %1048 = icmp eq i32 %1043, %1045
  br i1 %1048, label %1049, label %1082

1049:                                             ; preds = %1047
  store i32 0, ptr %4, align 4, !tbaa !5
  %1050 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1050, ptr %6, align 4, !tbaa !5
  br i1 %957, label %1089, label %1051

1051:                                             ; preds = %1049, %1076
  %1052 = phi i64 [ %1080, %1076 ], [ 1, %1049 ]
  %1053 = getelementptr inbounds i32, ptr %4, i64 %1052
  %1054 = load i32, ptr %1053, align 4, !tbaa !5
  %1055 = getelementptr inbounds i32, ptr %12, i64 %1052
  %1056 = load i32, ptr %1055, align 4, !tbaa !5
  %1057 = add nsw i32 %1056, -1
  %1058 = icmp slt i32 %1054, %1057
  br i1 %1058, label %1059, label %1074

1059:                                             ; preds = %1051
  br i1 %1046, label %1066, label %1060

1060:                                             ; preds = %1059
  %1061 = getelementptr inbounds i32, ptr %7, i64 %1052
  %1062 = load i32, ptr %1061, align 4, !tbaa !5
  %1063 = getelementptr inbounds i32, ptr %6, i64 %1052
  %1064 = load i32, ptr %1063, align 4, !tbaa !5
  %1065 = add nsw i32 %1064, %1062
  store i32 %1065, ptr %1063, align 4, !tbaa !5
  br label %1084

1066:                                             ; preds = %1042, %1059
  %1067 = phi i32 [ %1054, %1059 ], [ %1043, %1042 ]
  %1068 = phi ptr [ %1053, %1059 ], [ %4, %1042 ]
  %1069 = phi i64 [ %1052, %1059 ], [ 0, %1042 ]
  %1070 = add nsw i32 %1067, 1
  store i32 %1070, ptr %1068, align 4, !tbaa !5
  %1071 = getelementptr inbounds i32, ptr %7, i64 %1069
  %1072 = load i32, ptr %1071, align 4, !tbaa !5
  %1073 = getelementptr inbounds i32, ptr %6, i64 %1069
  br label %1084

1074:                                             ; preds = %1051
  %1075 = icmp eq i32 %1054, %1057
  br i1 %1075, label %1076, label %1082

1076:                                             ; preds = %1074
  store i32 0, ptr %1053, align 4, !tbaa !5
  %1077 = getelementptr inbounds i32, ptr %8, i64 %1052
  %1078 = load i32, ptr %1077, align 4, !tbaa !5
  %1079 = getelementptr inbounds i32, ptr %6, i64 %1052
  store i32 %1078, ptr %1079, align 4, !tbaa !5
  %1080 = add nuw nsw i64 %1052, 1
  %1081 = icmp eq i64 %1080, %955
  br i1 %1081, label %1089, label %1051, !llvm.loop !51

1082:                                             ; preds = %1047, %1074
  %1083 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

1084:                                             ; preds = %1060, %1066
  %1085 = phi ptr [ %1073, %1066 ], [ %1053, %1060 ]
  %1086 = phi i32 [ %1072, %1066 ], [ 1, %1060 ]
  %1087 = load i32, ptr %1085, align 4, !tbaa !5
  %1088 = add nsw i32 %1087, %1086
  store i32 %1088, ptr %1085, align 4, !tbaa !5
  br label %1089

1089:                                             ; preds = %1076, %1084, %1049, %1031
  %1090 = icmp eq i32 %1041, %5
  br i1 %1090, label %5473, label %958, !llvm.loop !52

1091:                                             ; preds = %941, %1227
  %1092 = phi i32 [ 0, %941 ], [ %1176, %1227 ]
  %1093 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %942, label %1094, label %1163

1094:                                             ; preds = %1091, %1153
  %1095 = phi i32 [ %1162, %1153 ], [ 0, %1091 ]
  %1096 = phi i64 [ %1104, %1153 ], [ %946, %1091 ]
  %1097 = phi i64 [ %1161, %1153 ], [ %945, %1091 ]
  %1098 = phi i32 [ %1159, %1153 ], [ %1093, %1091 ]
  %1099 = sub i32 %944, %1095
  %1100 = tail call i32 @llvm.smin.i32(i32 %1099, i32 0)
  %1101 = sub i32 %1099, %1100
  %1102 = zext i32 %1101 to i64
  %1103 = add nuw nsw i64 %1102, 1
  %1104 = add nsw i64 %1096, -1
  %1105 = icmp ult i32 %1101, 31
  br i1 %1105, label %1141, label %1106

1106:                                             ; preds = %1094
  %1107 = and i64 %1103, 8589934560
  %1108 = sub i64 %1097, %1107
  br label %1109

1109:                                             ; preds = %1109, %1106
  %1110 = phi i64 [ 0, %1106 ], [ %1133, %1109 ]
  %1111 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1106 ], [ %1129, %1109 ]
  %1112 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1106 ], [ %1130, %1109 ]
  %1113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1106 ], [ %1131, %1109 ]
  %1114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1106 ], [ %1132, %1109 ]
  %1115 = sub i64 %1097, %1110
  %1116 = getelementptr inbounds i32, ptr %11, i64 %1115
  %1117 = getelementptr inbounds i32, ptr %1116, i64 -7
  %1118 = load <8 x i32>, ptr %1117, align 4, !tbaa !5
  %1119 = shufflevector <8 x i32> %1118, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1120 = getelementptr inbounds i32, ptr %1116, i64 -15
  %1121 = load <8 x i32>, ptr %1120, align 4, !tbaa !5
  %1122 = shufflevector <8 x i32> %1121, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1123 = getelementptr inbounds i32, ptr %1116, i64 -23
  %1124 = load <8 x i32>, ptr %1123, align 4, !tbaa !5
  %1125 = shufflevector <8 x i32> %1124, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1126 = getelementptr inbounds i32, ptr %1116, i64 -31
  %1127 = load <8 x i32>, ptr %1126, align 4, !tbaa !5
  %1128 = shufflevector <8 x i32> %1127, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1129 = mul <8 x i32> %1119, %1111
  %1130 = mul <8 x i32> %1122, %1112
  %1131 = mul <8 x i32> %1125, %1113
  %1132 = mul <8 x i32> %1128, %1114
  %1133 = add nuw i64 %1110, 32
  %1134 = icmp eq i64 %1133, %1107
  br i1 %1134, label %1135, label %1109, !llvm.loop !53

1135:                                             ; preds = %1109
  %1136 = mul <8 x i32> %1130, %1129
  %1137 = mul <8 x i32> %1131, %1136
  %1138 = mul <8 x i32> %1132, %1137
  %1139 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1138)
  %1140 = icmp eq i64 %1103, %1107
  br i1 %1140, label %1153, label %1141

1141:                                             ; preds = %1094, %1135
  %1142 = phi i64 [ %1097, %1094 ], [ %1108, %1135 ]
  %1143 = phi i32 [ 1, %1094 ], [ %1139, %1135 ]
  br label %1144

1144:                                             ; preds = %1141, %1144
  %1145 = phi i64 [ %1150, %1144 ], [ %1142, %1141 ]
  %1146 = phi i32 [ %1149, %1144 ], [ %1143, %1141 ]
  %1147 = getelementptr inbounds i32, ptr %11, i64 %1145
  %1148 = load i32, ptr %1147, align 4, !tbaa !5
  %1149 = mul nsw i32 %1148, %1146
  %1150 = add nsw i64 %1145, -1
  %1151 = trunc i64 %1145 to i32
  %1152 = icmp sgt i32 %1151, 0
  br i1 %1152, label %1144, label %1153, !llvm.loop !54

1153:                                             ; preds = %1144, %1135
  %1154 = phi i32 [ %1139, %1135 ], [ %1149, %1144 ]
  %1155 = and i64 %1104, 4294967295
  %1156 = getelementptr inbounds i32, ptr %6, i64 %1155
  %1157 = load i32, ptr %1156, align 4, !tbaa !5
  %1158 = mul nsw i32 %1157, %1154
  %1159 = add nsw i32 %1158, %1098
  %1160 = icmp sgt i64 %1096, 2
  %1161 = add nsw i64 %1097, -1
  %1162 = add i32 %1095, 1
  br i1 %1160, label %1094, label %1163, !llvm.loop !55

1163:                                             ; preds = %1153, %1091
  %1164 = phi i32 [ %1093, %1091 ], [ %1159, %1153 ]
  %1165 = icmp slt i32 %1164, %5
  br i1 %1165, label %1168, label %1166

1166:                                             ; preds = %1163
  %1167 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

1168:                                             ; preds = %1163
  %1169 = sext i32 %1164 to i64
  %1170 = getelementptr inbounds i8, ptr %626, i64 %1169
  %1171 = load i8, ptr %1170, align 1, !tbaa !11
  %1172 = zext i8 %1171 to i32
  %1173 = load i32, ptr %628, align 4, !tbaa !5
  %1174 = mul nuw nsw i32 %1172, %1172
  %1175 = add nsw i32 %1174, %1173
  store i32 %1175, ptr %628, align 4, !tbaa !5
  %1176 = add nuw nsw i32 %1092, 1
  br i1 %943, label %1177, label %1227

1177:                                             ; preds = %1168
  %1178 = load i32, ptr %4, align 4, !tbaa !5
  %1179 = load i32, ptr %12, align 4, !tbaa !5
  %1180 = add nsw i32 %1179, -1
  %1181 = icmp slt i32 %1178, %1180
  br i1 %1181, label %1204, label %1182

1182:                                             ; preds = %1177
  %1183 = icmp eq i32 %1178, %1180
  br i1 %1183, label %1184, label %1220

1184:                                             ; preds = %1182
  store i32 0, ptr %4, align 4, !tbaa !5
  %1185 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1185, ptr %6, align 4, !tbaa !5
  br i1 %948, label %1227, label %1186

1186:                                             ; preds = %1184, %1214
  %1187 = phi i64 [ %1218, %1214 ], [ 1, %1184 ]
  %1188 = getelementptr inbounds i32, ptr %4, i64 %1187
  %1189 = load i32, ptr %1188, align 4, !tbaa !5
  %1190 = getelementptr inbounds i32, ptr %12, i64 %1187
  %1191 = load i32, ptr %1190, align 4, !tbaa !5
  %1192 = add nsw i32 %1191, -1
  %1193 = icmp slt i32 %1189, %1192
  br i1 %1193, label %1194, label %1212

1194:                                             ; preds = %1186
  br i1 %1181, label %1204, label %1195

1195:                                             ; preds = %1194
  %1196 = shl i64 %1187, 32
  %1197 = add i64 %1196, -4294967296
  %1198 = ashr exact i64 %1197, 32
  %1199 = getelementptr inbounds i32, ptr %7, i64 %1198
  %1200 = load i32, ptr %1199, align 4, !tbaa !5
  %1201 = getelementptr inbounds i32, ptr %6, i64 %1187
  %1202 = load i32, ptr %1201, align 4, !tbaa !5
  %1203 = add nsw i32 %1202, %1200
  store i32 %1203, ptr %1201, align 4, !tbaa !5
  br label %1222

1204:                                             ; preds = %1177, %1194
  %1205 = phi i32 [ %1189, %1194 ], [ %1178, %1177 ]
  %1206 = phi ptr [ %1188, %1194 ], [ %4, %1177 ]
  %1207 = phi i64 [ %1187, %1194 ], [ 0, %1177 ]
  %1208 = add nsw i32 %1205, 1
  store i32 %1208, ptr %1206, align 4, !tbaa !5
  %1209 = getelementptr inbounds i32, ptr %7, i64 %1207
  %1210 = load i32, ptr %1209, align 4, !tbaa !5
  %1211 = getelementptr inbounds i32, ptr %6, i64 %1207
  br label %1222

1212:                                             ; preds = %1186
  %1213 = icmp eq i32 %1189, %1192
  br i1 %1213, label %1214, label %1220

1214:                                             ; preds = %1212
  store i32 0, ptr %1188, align 4, !tbaa !5
  %1215 = getelementptr inbounds i32, ptr %8, i64 %1187
  %1216 = load i32, ptr %1215, align 4, !tbaa !5
  %1217 = getelementptr inbounds i32, ptr %6, i64 %1187
  store i32 %1216, ptr %1217, align 4, !tbaa !5
  %1218 = add nuw nsw i64 %1187, 1
  %1219 = icmp eq i64 %1218, %946
  br i1 %1219, label %1227, label %1186, !llvm.loop !56

1220:                                             ; preds = %1182, %1212
  %1221 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

1222:                                             ; preds = %1195, %1204
  %1223 = phi ptr [ %1211, %1204 ], [ %1188, %1195 ]
  %1224 = phi i32 [ %1210, %1204 ], [ 1, %1195 ]
  %1225 = load i32, ptr %1223, align 4, !tbaa !5
  %1226 = add nsw i32 %1225, %1224
  store i32 %1226, ptr %1223, align 4, !tbaa !5
  br label %1227

1227:                                             ; preds = %1214, %1222, %1184, %1168
  %1228 = icmp eq i32 %1176, %5
  br i1 %1228, label %5473, label %1091, !llvm.loop !57

1229:                                             ; preds = %634
  %1230 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5473

1231:                                             ; preds = %18
  %1232 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1233 = load ptr, ptr %1232, align 8, !tbaa !9
  %1234 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1235 = load ptr, ptr %1234, align 8, !tbaa !9
  store i8 0, ptr %1235, align 1, !tbaa !11
  %1236 = icmp eq i32 %13, 0
  br i1 %1236, label %1237, label %1240

1237:                                             ; preds = %1231
  %1238 = load i8, ptr %1233, align 1, !tbaa !11
  %1239 = mul i8 %1238, %1238
  store i8 %1239, ptr %1235, align 1, !tbaa !11
  br label %5473

1240:                                             ; preds = %1231
  switch i32 %1, label %1831 [
    i32 1, label %1241
    i32 0, label %1539
  ]

1241:                                             ; preds = %1240
  %1242 = getelementptr inbounds i32, ptr %3, i64 %19
  %1243 = load i32, ptr %1242, align 4, !tbaa !5
  %1244 = icmp eq i32 %1243, 0
  %1245 = icmp sgt i32 %5, 0
  br i1 %1244, label %1255, label %1246

1246:                                             ; preds = %1241
  br i1 %1245, label %1247, label %5473

1247:                                             ; preds = %1246
  %1248 = icmp sgt i32 %13, 1
  %1249 = icmp sgt i32 %13, 0
  %1250 = add i32 %13, -2
  %1251 = zext i32 %1250 to i64
  %1252 = zext i32 %13 to i64
  %1253 = add nuw i32 %5, 1
  %1254 = icmp eq i32 %13, 1
  br label %1402

1255:                                             ; preds = %1241
  br i1 %1245, label %1256, label %5473

1256:                                             ; preds = %1255
  %1257 = icmp sgt i32 %13, 1
  %1258 = icmp sgt i32 %13, 0
  %1259 = add i32 %13, -2
  %1260 = zext i32 %1259 to i64
  %1261 = zext i32 %13 to i64
  %1262 = add nuw i32 %5, 1
  %1263 = icmp eq i32 %13, 1
  br label %1264

1264:                                             ; preds = %1256, %1400
  %1265 = phi i32 [ 0, %1256 ], [ %1352, %1400 ]
  %1266 = phi double [ 0.000000e+00, %1256 ], [ %1351, %1400 ]
  %1267 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1257, label %1268, label %1337

1268:                                             ; preds = %1264, %1327
  %1269 = phi i32 [ %1336, %1327 ], [ 0, %1264 ]
  %1270 = phi i64 [ %1278, %1327 ], [ %1261, %1264 ]
  %1271 = phi i64 [ %1335, %1327 ], [ %1260, %1264 ]
  %1272 = phi i32 [ %1333, %1327 ], [ %1267, %1264 ]
  %1273 = sub i32 %1259, %1269
  %1274 = tail call i32 @llvm.smin.i32(i32 %1273, i32 0)
  %1275 = sub i32 %1273, %1274
  %1276 = zext i32 %1275 to i64
  %1277 = add nuw nsw i64 %1276, 1
  %1278 = add nsw i64 %1270, -1
  %1279 = icmp ult i32 %1275, 31
  br i1 %1279, label %1315, label %1280

1280:                                             ; preds = %1268
  %1281 = and i64 %1277, 8589934560
  %1282 = sub i64 %1271, %1281
  br label %1283

1283:                                             ; preds = %1283, %1280
  %1284 = phi i64 [ 0, %1280 ], [ %1307, %1283 ]
  %1285 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1280 ], [ %1303, %1283 ]
  %1286 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1280 ], [ %1304, %1283 ]
  %1287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1280 ], [ %1305, %1283 ]
  %1288 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1280 ], [ %1306, %1283 ]
  %1289 = sub i64 %1271, %1284
  %1290 = getelementptr inbounds i32, ptr %9, i64 %1289
  %1291 = getelementptr inbounds i32, ptr %1290, i64 -7
  %1292 = load <8 x i32>, ptr %1291, align 4, !tbaa !5
  %1293 = shufflevector <8 x i32> %1292, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1294 = getelementptr inbounds i32, ptr %1290, i64 -15
  %1295 = load <8 x i32>, ptr %1294, align 4, !tbaa !5
  %1296 = shufflevector <8 x i32> %1295, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1297 = getelementptr inbounds i32, ptr %1290, i64 -23
  %1298 = load <8 x i32>, ptr %1297, align 4, !tbaa !5
  %1299 = shufflevector <8 x i32> %1298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1300 = getelementptr inbounds i32, ptr %1290, i64 -31
  %1301 = load <8 x i32>, ptr %1300, align 4, !tbaa !5
  %1302 = shufflevector <8 x i32> %1301, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1303 = mul <8 x i32> %1293, %1285
  %1304 = mul <8 x i32> %1296, %1286
  %1305 = mul <8 x i32> %1299, %1287
  %1306 = mul <8 x i32> %1302, %1288
  %1307 = add nuw i64 %1284, 32
  %1308 = icmp eq i64 %1307, %1281
  br i1 %1308, label %1309, label %1283, !llvm.loop !58

1309:                                             ; preds = %1283
  %1310 = mul <8 x i32> %1304, %1303
  %1311 = mul <8 x i32> %1305, %1310
  %1312 = mul <8 x i32> %1306, %1311
  %1313 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1312)
  %1314 = icmp eq i64 %1277, %1281
  br i1 %1314, label %1327, label %1315

1315:                                             ; preds = %1268, %1309
  %1316 = phi i64 [ %1271, %1268 ], [ %1282, %1309 ]
  %1317 = phi i32 [ 1, %1268 ], [ %1313, %1309 ]
  br label %1318

1318:                                             ; preds = %1315, %1318
  %1319 = phi i64 [ %1324, %1318 ], [ %1316, %1315 ]
  %1320 = phi i32 [ %1323, %1318 ], [ %1317, %1315 ]
  %1321 = getelementptr inbounds i32, ptr %9, i64 %1319
  %1322 = load i32, ptr %1321, align 4, !tbaa !5
  %1323 = mul nsw i32 %1322, %1320
  %1324 = add nsw i64 %1319, -1
  %1325 = trunc i64 %1319 to i32
  %1326 = icmp sgt i32 %1325, 0
  br i1 %1326, label %1318, label %1327, !llvm.loop !59

1327:                                             ; preds = %1318, %1309
  %1328 = phi i32 [ %1313, %1309 ], [ %1323, %1318 ]
  %1329 = and i64 %1278, 4294967295
  %1330 = getelementptr inbounds i32, ptr %6, i64 %1329
  %1331 = load i32, ptr %1330, align 4, !tbaa !5
  %1332 = mul nsw i32 %1331, %1328
  %1333 = add nsw i32 %1332, %1272
  %1334 = icmp sgt i64 %1270, 2
  %1335 = add nsw i64 %1271, -1
  %1336 = add i32 %1269, 1
  br i1 %1334, label %1268, label %1337, !llvm.loop !60

1337:                                             ; preds = %1327, %1264
  %1338 = phi i32 [ %1267, %1264 ], [ %1333, %1327 ]
  %1339 = sext i32 %1338 to i64
  %1340 = getelementptr inbounds double, ptr %2, i64 %1339
  %1341 = load double, ptr %1340, align 8, !tbaa !18
  %1342 = getelementptr inbounds i8, ptr %1233, i64 %1339
  %1343 = load i8, ptr %1342, align 1, !tbaa !11
  %1344 = load i8, ptr %1235, align 1, !tbaa !11
  %1345 = sitofp i8 %1344 to double
  %1346 = sitofp i8 %1343 to double
  %1347 = fmul fast double %1341, %1346
  %1348 = fmul fast double %1347, %1347
  %1349 = fadd fast double %1348, %1345
  %1350 = fptosi double %1349 to i8
  store i8 %1350, ptr %1235, align 1, !tbaa !11
  %1351 = fadd fast double %1341, %1266
  %1352 = add nuw nsw i32 %1265, 1
  br i1 %1258, label %1353, label %1400

1353:                                             ; preds = %1337
  %1354 = load i32, ptr %4, align 4, !tbaa !5
  %1355 = load i32, ptr %12, align 4, !tbaa !5
  %1356 = add nsw i32 %1355, -1
  %1357 = icmp slt i32 %1354, %1356
  br i1 %1357, label %1377, label %1358

1358:                                             ; preds = %1353
  %1359 = icmp eq i32 %1354, %1356
  br i1 %1359, label %1360, label %1393

1360:                                             ; preds = %1358
  store i32 0, ptr %4, align 4, !tbaa !5
  %1361 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1361, ptr %6, align 4, !tbaa !5
  br i1 %1263, label %1400, label %1362

1362:                                             ; preds = %1360, %1387
  %1363 = phi i64 [ %1391, %1387 ], [ 1, %1360 ]
  %1364 = getelementptr inbounds i32, ptr %4, i64 %1363
  %1365 = load i32, ptr %1364, align 4, !tbaa !5
  %1366 = getelementptr inbounds i32, ptr %12, i64 %1363
  %1367 = load i32, ptr %1366, align 4, !tbaa !5
  %1368 = add nsw i32 %1367, -1
  %1369 = icmp slt i32 %1365, %1368
  br i1 %1369, label %1370, label %1385

1370:                                             ; preds = %1362
  br i1 %1357, label %1377, label %1371

1371:                                             ; preds = %1370
  %1372 = getelementptr inbounds i32, ptr %7, i64 %1363
  %1373 = load i32, ptr %1372, align 4, !tbaa !5
  %1374 = getelementptr inbounds i32, ptr %6, i64 %1363
  %1375 = load i32, ptr %1374, align 4, !tbaa !5
  %1376 = add nsw i32 %1375, %1373
  store i32 %1376, ptr %1374, align 4, !tbaa !5
  br label %1395

1377:                                             ; preds = %1353, %1370
  %1378 = phi i32 [ %1365, %1370 ], [ %1354, %1353 ]
  %1379 = phi ptr [ %1364, %1370 ], [ %4, %1353 ]
  %1380 = phi i64 [ %1363, %1370 ], [ 0, %1353 ]
  %1381 = add nsw i32 %1378, 1
  store i32 %1381, ptr %1379, align 4, !tbaa !5
  %1382 = getelementptr inbounds i32, ptr %7, i64 %1380
  %1383 = load i32, ptr %1382, align 4, !tbaa !5
  %1384 = getelementptr inbounds i32, ptr %6, i64 %1380
  br label %1395

1385:                                             ; preds = %1362
  %1386 = icmp eq i32 %1365, %1368
  br i1 %1386, label %1387, label %1393

1387:                                             ; preds = %1385
  store i32 0, ptr %1364, align 4, !tbaa !5
  %1388 = getelementptr inbounds i32, ptr %8, i64 %1363
  %1389 = load i32, ptr %1388, align 4, !tbaa !5
  %1390 = getelementptr inbounds i32, ptr %6, i64 %1363
  store i32 %1389, ptr %1390, align 4, !tbaa !5
  %1391 = add nuw nsw i64 %1363, 1
  %1392 = icmp eq i64 %1391, %1261
  br i1 %1392, label %1400, label %1362, !llvm.loop !61

1393:                                             ; preds = %1358, %1385
  %1394 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

1395:                                             ; preds = %1371, %1377
  %1396 = phi ptr [ %1384, %1377 ], [ %1364, %1371 ]
  %1397 = phi i32 [ %1383, %1377 ], [ 1, %1371 ]
  %1398 = load i32, ptr %1396, align 4, !tbaa !5
  %1399 = add nsw i32 %1398, %1397
  store i32 %1399, ptr %1396, align 4, !tbaa !5
  br label %1400

1400:                                             ; preds = %1387, %1395, %1360, %1337
  %1401 = icmp eq i32 %1352, %5
  br i1 %1401, label %5473, label %1264, !llvm.loop !62

1402:                                             ; preds = %1247, %1537
  %1403 = phi i32 [ 0, %1247 ], [ %1486, %1537 ]
  %1404 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1248, label %1405, label %1474

1405:                                             ; preds = %1402, %1464
  %1406 = phi i32 [ %1473, %1464 ], [ 0, %1402 ]
  %1407 = phi i64 [ %1415, %1464 ], [ %1252, %1402 ]
  %1408 = phi i64 [ %1472, %1464 ], [ %1251, %1402 ]
  %1409 = phi i32 [ %1470, %1464 ], [ %1404, %1402 ]
  %1410 = sub i32 %1250, %1406
  %1411 = tail call i32 @llvm.smin.i32(i32 %1410, i32 0)
  %1412 = sub i32 %1410, %1411
  %1413 = zext i32 %1412 to i64
  %1414 = add nuw nsw i64 %1413, 1
  %1415 = add nsw i64 %1407, -1
  %1416 = icmp ult i32 %1412, 31
  br i1 %1416, label %1452, label %1417

1417:                                             ; preds = %1405
  %1418 = and i64 %1414, 8589934560
  %1419 = sub i64 %1408, %1418
  br label %1420

1420:                                             ; preds = %1420, %1417
  %1421 = phi i64 [ 0, %1417 ], [ %1444, %1420 ]
  %1422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1417 ], [ %1440, %1420 ]
  %1423 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1417 ], [ %1441, %1420 ]
  %1424 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1417 ], [ %1442, %1420 ]
  %1425 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1417 ], [ %1443, %1420 ]
  %1426 = sub i64 %1408, %1421
  %1427 = getelementptr inbounds i32, ptr %11, i64 %1426
  %1428 = getelementptr inbounds i32, ptr %1427, i64 -7
  %1429 = load <8 x i32>, ptr %1428, align 4, !tbaa !5
  %1430 = shufflevector <8 x i32> %1429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1431 = getelementptr inbounds i32, ptr %1427, i64 -15
  %1432 = load <8 x i32>, ptr %1431, align 4, !tbaa !5
  %1433 = shufflevector <8 x i32> %1432, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1434 = getelementptr inbounds i32, ptr %1427, i64 -23
  %1435 = load <8 x i32>, ptr %1434, align 4, !tbaa !5
  %1436 = shufflevector <8 x i32> %1435, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1437 = getelementptr inbounds i32, ptr %1427, i64 -31
  %1438 = load <8 x i32>, ptr %1437, align 4, !tbaa !5
  %1439 = shufflevector <8 x i32> %1438, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1440 = mul <8 x i32> %1430, %1422
  %1441 = mul <8 x i32> %1433, %1423
  %1442 = mul <8 x i32> %1436, %1424
  %1443 = mul <8 x i32> %1439, %1425
  %1444 = add nuw i64 %1421, 32
  %1445 = icmp eq i64 %1444, %1418
  br i1 %1445, label %1446, label %1420, !llvm.loop !63

1446:                                             ; preds = %1420
  %1447 = mul <8 x i32> %1441, %1440
  %1448 = mul <8 x i32> %1442, %1447
  %1449 = mul <8 x i32> %1443, %1448
  %1450 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1449)
  %1451 = icmp eq i64 %1414, %1418
  br i1 %1451, label %1464, label %1452

1452:                                             ; preds = %1405, %1446
  %1453 = phi i64 [ %1408, %1405 ], [ %1419, %1446 ]
  %1454 = phi i32 [ 1, %1405 ], [ %1450, %1446 ]
  br label %1455

1455:                                             ; preds = %1452, %1455
  %1456 = phi i64 [ %1461, %1455 ], [ %1453, %1452 ]
  %1457 = phi i32 [ %1460, %1455 ], [ %1454, %1452 ]
  %1458 = getelementptr inbounds i32, ptr %11, i64 %1456
  %1459 = load i32, ptr %1458, align 4, !tbaa !5
  %1460 = mul nsw i32 %1459, %1457
  %1461 = add nsw i64 %1456, -1
  %1462 = trunc i64 %1456 to i32
  %1463 = icmp sgt i32 %1462, 0
  br i1 %1463, label %1455, label %1464, !llvm.loop !64

1464:                                             ; preds = %1455, %1446
  %1465 = phi i32 [ %1450, %1446 ], [ %1460, %1455 ]
  %1466 = and i64 %1415, 4294967295
  %1467 = getelementptr inbounds i32, ptr %6, i64 %1466
  %1468 = load i32, ptr %1467, align 4, !tbaa !5
  %1469 = mul nsw i32 %1468, %1465
  %1470 = add nsw i32 %1469, %1409
  %1471 = icmp sgt i64 %1407, 2
  %1472 = add nsw i64 %1408, -1
  %1473 = add i32 %1406, 1
  br i1 %1471, label %1405, label %1474, !llvm.loop !65

1474:                                             ; preds = %1464, %1402
  %1475 = phi i32 [ %1404, %1402 ], [ %1470, %1464 ]
  %1476 = icmp slt i32 %1475, %5
  br i1 %1476, label %1479, label %1477

1477:                                             ; preds = %1474
  %1478 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

1479:                                             ; preds = %1474
  %1480 = sext i32 %1475 to i64
  %1481 = getelementptr inbounds i8, ptr %1233, i64 %1480
  %1482 = load i8, ptr %1481, align 1, !tbaa !11
  %1483 = load i8, ptr %1235, align 1, !tbaa !11
  %1484 = mul i8 %1482, %1482
  %1485 = add i8 %1484, %1483
  store i8 %1485, ptr %1235, align 1, !tbaa !11
  %1486 = add nuw nsw i32 %1403, 1
  br i1 %1249, label %1487, label %1537

1487:                                             ; preds = %1479
  %1488 = load i32, ptr %4, align 4, !tbaa !5
  %1489 = load i32, ptr %12, align 4, !tbaa !5
  %1490 = add nsw i32 %1489, -1
  %1491 = icmp slt i32 %1488, %1490
  br i1 %1491, label %1514, label %1492

1492:                                             ; preds = %1487
  %1493 = icmp eq i32 %1488, %1490
  br i1 %1493, label %1494, label %1530

1494:                                             ; preds = %1492
  store i32 0, ptr %4, align 4, !tbaa !5
  %1495 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1495, ptr %6, align 4, !tbaa !5
  br i1 %1254, label %1537, label %1496

1496:                                             ; preds = %1494, %1524
  %1497 = phi i64 [ %1528, %1524 ], [ 1, %1494 ]
  %1498 = getelementptr inbounds i32, ptr %4, i64 %1497
  %1499 = load i32, ptr %1498, align 4, !tbaa !5
  %1500 = getelementptr inbounds i32, ptr %12, i64 %1497
  %1501 = load i32, ptr %1500, align 4, !tbaa !5
  %1502 = add nsw i32 %1501, -1
  %1503 = icmp slt i32 %1499, %1502
  br i1 %1503, label %1504, label %1522

1504:                                             ; preds = %1496
  br i1 %1491, label %1514, label %1505

1505:                                             ; preds = %1504
  %1506 = shl i64 %1497, 32
  %1507 = add i64 %1506, -4294967296
  %1508 = ashr exact i64 %1507, 32
  %1509 = getelementptr inbounds i32, ptr %7, i64 %1508
  %1510 = load i32, ptr %1509, align 4, !tbaa !5
  %1511 = getelementptr inbounds i32, ptr %6, i64 %1497
  %1512 = load i32, ptr %1511, align 4, !tbaa !5
  %1513 = add nsw i32 %1512, %1510
  store i32 %1513, ptr %1511, align 4, !tbaa !5
  br label %1532

1514:                                             ; preds = %1487, %1504
  %1515 = phi i32 [ %1499, %1504 ], [ %1488, %1487 ]
  %1516 = phi ptr [ %1498, %1504 ], [ %4, %1487 ]
  %1517 = phi i64 [ %1497, %1504 ], [ 0, %1487 ]
  %1518 = add nsw i32 %1515, 1
  store i32 %1518, ptr %1516, align 4, !tbaa !5
  %1519 = getelementptr inbounds i32, ptr %7, i64 %1517
  %1520 = load i32, ptr %1519, align 4, !tbaa !5
  %1521 = getelementptr inbounds i32, ptr %6, i64 %1517
  br label %1532

1522:                                             ; preds = %1496
  %1523 = icmp eq i32 %1499, %1502
  br i1 %1523, label %1524, label %1530

1524:                                             ; preds = %1522
  store i32 0, ptr %1498, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %8, i64 %1497
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = getelementptr inbounds i32, ptr %6, i64 %1497
  store i32 %1526, ptr %1527, align 4, !tbaa !5
  %1528 = add nuw nsw i64 %1497, 1
  %1529 = icmp eq i64 %1528, %1252
  br i1 %1529, label %1537, label %1496, !llvm.loop !66

1530:                                             ; preds = %1492, %1522
  %1531 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

1532:                                             ; preds = %1505, %1514
  %1533 = phi ptr [ %1521, %1514 ], [ %1498, %1505 ]
  %1534 = phi i32 [ %1520, %1514 ], [ 1, %1505 ]
  %1535 = load i32, ptr %1533, align 4, !tbaa !5
  %1536 = add nsw i32 %1535, %1534
  store i32 %1536, ptr %1533, align 4, !tbaa !5
  br label %1537

1537:                                             ; preds = %1524, %1532, %1494, %1479
  %1538 = icmp eq i32 %1486, %5
  br i1 %1538, label %5473, label %1402, !llvm.loop !67

1539:                                             ; preds = %1240
  %1540 = getelementptr inbounds i32, ptr %3, i64 %19
  %1541 = load i32, ptr %1540, align 4, !tbaa !5
  %1542 = icmp eq i32 %1541, 0
  %1543 = icmp sgt i32 %5, 0
  br i1 %1542, label %1553, label %1544

1544:                                             ; preds = %1539
  br i1 %1543, label %1545, label %5473

1545:                                             ; preds = %1544
  %1546 = icmp sgt i32 %13, 1
  %1547 = icmp sgt i32 %13, 0
  %1548 = add i32 %13, -2
  %1549 = zext i32 %1548 to i64
  %1550 = zext i32 %13 to i64
  %1551 = add nuw i32 %5, 1
  %1552 = icmp eq i32 %13, 1
  br label %1694

1553:                                             ; preds = %1539
  br i1 %1543, label %1554, label %5473

1554:                                             ; preds = %1553
  %1555 = icmp sgt i32 %13, 1
  %1556 = icmp sgt i32 %13, 0
  %1557 = add i32 %13, -2
  %1558 = zext i32 %1557 to i64
  %1559 = zext i32 %13 to i64
  %1560 = add nuw i32 %5, 1
  %1561 = icmp eq i32 %13, 1
  br label %1562

1562:                                             ; preds = %1554, %1692
  %1563 = phi i32 [ 0, %1554 ], [ %1644, %1692 ]
  %1564 = phi double [ 0.000000e+00, %1554 ], [ %1643, %1692 ]
  %1565 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1555, label %1566, label %1635

1566:                                             ; preds = %1562, %1625
  %1567 = phi i32 [ %1634, %1625 ], [ 0, %1562 ]
  %1568 = phi i64 [ %1576, %1625 ], [ %1559, %1562 ]
  %1569 = phi i64 [ %1633, %1625 ], [ %1558, %1562 ]
  %1570 = phi i32 [ %1631, %1625 ], [ %1565, %1562 ]
  %1571 = sub i32 %1557, %1567
  %1572 = tail call i32 @llvm.smin.i32(i32 %1571, i32 0)
  %1573 = sub i32 %1571, %1572
  %1574 = zext i32 %1573 to i64
  %1575 = add nuw nsw i64 %1574, 1
  %1576 = add nsw i64 %1568, -1
  %1577 = icmp ult i32 %1573, 31
  br i1 %1577, label %1613, label %1578

1578:                                             ; preds = %1566
  %1579 = and i64 %1575, 8589934560
  %1580 = sub i64 %1569, %1579
  br label %1581

1581:                                             ; preds = %1581, %1578
  %1582 = phi i64 [ 0, %1578 ], [ %1605, %1581 ]
  %1583 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1578 ], [ %1601, %1581 ]
  %1584 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1578 ], [ %1602, %1581 ]
  %1585 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1578 ], [ %1603, %1581 ]
  %1586 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1578 ], [ %1604, %1581 ]
  %1587 = sub i64 %1569, %1582
  %1588 = getelementptr inbounds i32, ptr %9, i64 %1587
  %1589 = getelementptr inbounds i32, ptr %1588, i64 -7
  %1590 = load <8 x i32>, ptr %1589, align 4, !tbaa !5
  %1591 = shufflevector <8 x i32> %1590, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1592 = getelementptr inbounds i32, ptr %1588, i64 -15
  %1593 = load <8 x i32>, ptr %1592, align 4, !tbaa !5
  %1594 = shufflevector <8 x i32> %1593, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1595 = getelementptr inbounds i32, ptr %1588, i64 -23
  %1596 = load <8 x i32>, ptr %1595, align 4, !tbaa !5
  %1597 = shufflevector <8 x i32> %1596, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1598 = getelementptr inbounds i32, ptr %1588, i64 -31
  %1599 = load <8 x i32>, ptr %1598, align 4, !tbaa !5
  %1600 = shufflevector <8 x i32> %1599, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1601 = mul <8 x i32> %1591, %1583
  %1602 = mul <8 x i32> %1594, %1584
  %1603 = mul <8 x i32> %1597, %1585
  %1604 = mul <8 x i32> %1600, %1586
  %1605 = add nuw i64 %1582, 32
  %1606 = icmp eq i64 %1605, %1579
  br i1 %1606, label %1607, label %1581, !llvm.loop !68

1607:                                             ; preds = %1581
  %1608 = mul <8 x i32> %1602, %1601
  %1609 = mul <8 x i32> %1603, %1608
  %1610 = mul <8 x i32> %1604, %1609
  %1611 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1610)
  %1612 = icmp eq i64 %1575, %1579
  br i1 %1612, label %1625, label %1613

1613:                                             ; preds = %1566, %1607
  %1614 = phi i64 [ %1569, %1566 ], [ %1580, %1607 ]
  %1615 = phi i32 [ 1, %1566 ], [ %1611, %1607 ]
  br label %1616

1616:                                             ; preds = %1613, %1616
  %1617 = phi i64 [ %1622, %1616 ], [ %1614, %1613 ]
  %1618 = phi i32 [ %1621, %1616 ], [ %1615, %1613 ]
  %1619 = getelementptr inbounds i32, ptr %9, i64 %1617
  %1620 = load i32, ptr %1619, align 4, !tbaa !5
  %1621 = mul nsw i32 %1620, %1618
  %1622 = add nsw i64 %1617, -1
  %1623 = trunc i64 %1617 to i32
  %1624 = icmp sgt i32 %1623, 0
  br i1 %1624, label %1616, label %1625, !llvm.loop !69

1625:                                             ; preds = %1616, %1607
  %1626 = phi i32 [ %1611, %1607 ], [ %1621, %1616 ]
  %1627 = and i64 %1576, 4294967295
  %1628 = getelementptr inbounds i32, ptr %6, i64 %1627
  %1629 = load i32, ptr %1628, align 4, !tbaa !5
  %1630 = mul nsw i32 %1629, %1626
  %1631 = add nsw i32 %1630, %1570
  %1632 = icmp sgt i64 %1568, 2
  %1633 = add nsw i64 %1569, -1
  %1634 = add i32 %1567, 1
  br i1 %1632, label %1566, label %1635, !llvm.loop !70

1635:                                             ; preds = %1625, %1562
  %1636 = phi i32 [ %1565, %1562 ], [ %1631, %1625 ]
  %1637 = sext i32 %1636 to i64
  %1638 = getelementptr inbounds i8, ptr %1233, i64 %1637
  %1639 = load i8, ptr %1638, align 1, !tbaa !11
  %1640 = load i8, ptr %1235, align 1, !tbaa !11
  %1641 = mul i8 %1639, %1639
  %1642 = add i8 %1641, %1640
  store i8 %1642, ptr %1235, align 1, !tbaa !11
  %1643 = fadd fast double %1564, 1.000000e+00
  %1644 = add nuw nsw i32 %1563, 1
  br i1 %1556, label %1645, label %1692

1645:                                             ; preds = %1635
  %1646 = load i32, ptr %4, align 4, !tbaa !5
  %1647 = load i32, ptr %12, align 4, !tbaa !5
  %1648 = add nsw i32 %1647, -1
  %1649 = icmp slt i32 %1646, %1648
  br i1 %1649, label %1669, label %1650

1650:                                             ; preds = %1645
  %1651 = icmp eq i32 %1646, %1648
  br i1 %1651, label %1652, label %1685

1652:                                             ; preds = %1650
  store i32 0, ptr %4, align 4, !tbaa !5
  %1653 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1653, ptr %6, align 4, !tbaa !5
  br i1 %1561, label %1692, label %1654

1654:                                             ; preds = %1652, %1679
  %1655 = phi i64 [ %1683, %1679 ], [ 1, %1652 ]
  %1656 = getelementptr inbounds i32, ptr %4, i64 %1655
  %1657 = load i32, ptr %1656, align 4, !tbaa !5
  %1658 = getelementptr inbounds i32, ptr %12, i64 %1655
  %1659 = load i32, ptr %1658, align 4, !tbaa !5
  %1660 = add nsw i32 %1659, -1
  %1661 = icmp slt i32 %1657, %1660
  br i1 %1661, label %1662, label %1677

1662:                                             ; preds = %1654
  br i1 %1649, label %1669, label %1663

1663:                                             ; preds = %1662
  %1664 = getelementptr inbounds i32, ptr %7, i64 %1655
  %1665 = load i32, ptr %1664, align 4, !tbaa !5
  %1666 = getelementptr inbounds i32, ptr %6, i64 %1655
  %1667 = load i32, ptr %1666, align 4, !tbaa !5
  %1668 = add nsw i32 %1667, %1665
  store i32 %1668, ptr %1666, align 4, !tbaa !5
  br label %1687

1669:                                             ; preds = %1645, %1662
  %1670 = phi i32 [ %1657, %1662 ], [ %1646, %1645 ]
  %1671 = phi ptr [ %1656, %1662 ], [ %4, %1645 ]
  %1672 = phi i64 [ %1655, %1662 ], [ 0, %1645 ]
  %1673 = add nsw i32 %1670, 1
  store i32 %1673, ptr %1671, align 4, !tbaa !5
  %1674 = getelementptr inbounds i32, ptr %7, i64 %1672
  %1675 = load i32, ptr %1674, align 4, !tbaa !5
  %1676 = getelementptr inbounds i32, ptr %6, i64 %1672
  br label %1687

1677:                                             ; preds = %1654
  %1678 = icmp eq i32 %1657, %1660
  br i1 %1678, label %1679, label %1685

1679:                                             ; preds = %1677
  store i32 0, ptr %1656, align 4, !tbaa !5
  %1680 = getelementptr inbounds i32, ptr %8, i64 %1655
  %1681 = load i32, ptr %1680, align 4, !tbaa !5
  %1682 = getelementptr inbounds i32, ptr %6, i64 %1655
  store i32 %1681, ptr %1682, align 4, !tbaa !5
  %1683 = add nuw nsw i64 %1655, 1
  %1684 = icmp eq i64 %1683, %1559
  br i1 %1684, label %1692, label %1654, !llvm.loop !71

1685:                                             ; preds = %1650, %1677
  %1686 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

1687:                                             ; preds = %1663, %1669
  %1688 = phi ptr [ %1676, %1669 ], [ %1656, %1663 ]
  %1689 = phi i32 [ %1675, %1669 ], [ 1, %1663 ]
  %1690 = load i32, ptr %1688, align 4, !tbaa !5
  %1691 = add nsw i32 %1690, %1689
  store i32 %1691, ptr %1688, align 4, !tbaa !5
  br label %1692

1692:                                             ; preds = %1679, %1687, %1652, %1635
  %1693 = icmp eq i32 %1644, %5
  br i1 %1693, label %5473, label %1562, !llvm.loop !72

1694:                                             ; preds = %1545, %1829
  %1695 = phi i32 [ 0, %1545 ], [ %1778, %1829 ]
  %1696 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1546, label %1697, label %1766

1697:                                             ; preds = %1694, %1756
  %1698 = phi i32 [ %1765, %1756 ], [ 0, %1694 ]
  %1699 = phi i64 [ %1707, %1756 ], [ %1550, %1694 ]
  %1700 = phi i64 [ %1764, %1756 ], [ %1549, %1694 ]
  %1701 = phi i32 [ %1762, %1756 ], [ %1696, %1694 ]
  %1702 = sub i32 %1548, %1698
  %1703 = tail call i32 @llvm.smin.i32(i32 %1702, i32 0)
  %1704 = sub i32 %1702, %1703
  %1705 = zext i32 %1704 to i64
  %1706 = add nuw nsw i64 %1705, 1
  %1707 = add nsw i64 %1699, -1
  %1708 = icmp ult i32 %1704, 31
  br i1 %1708, label %1744, label %1709

1709:                                             ; preds = %1697
  %1710 = and i64 %1706, 8589934560
  %1711 = sub i64 %1700, %1710
  br label %1712

1712:                                             ; preds = %1712, %1709
  %1713 = phi i64 [ 0, %1709 ], [ %1736, %1712 ]
  %1714 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1709 ], [ %1732, %1712 ]
  %1715 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1709 ], [ %1733, %1712 ]
  %1716 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1709 ], [ %1734, %1712 ]
  %1717 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1709 ], [ %1735, %1712 ]
  %1718 = sub i64 %1700, %1713
  %1719 = getelementptr inbounds i32, ptr %11, i64 %1718
  %1720 = getelementptr inbounds i32, ptr %1719, i64 -7
  %1721 = load <8 x i32>, ptr %1720, align 4, !tbaa !5
  %1722 = shufflevector <8 x i32> %1721, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1723 = getelementptr inbounds i32, ptr %1719, i64 -15
  %1724 = load <8 x i32>, ptr %1723, align 4, !tbaa !5
  %1725 = shufflevector <8 x i32> %1724, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1726 = getelementptr inbounds i32, ptr %1719, i64 -23
  %1727 = load <8 x i32>, ptr %1726, align 4, !tbaa !5
  %1728 = shufflevector <8 x i32> %1727, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1729 = getelementptr inbounds i32, ptr %1719, i64 -31
  %1730 = load <8 x i32>, ptr %1729, align 4, !tbaa !5
  %1731 = shufflevector <8 x i32> %1730, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1732 = mul <8 x i32> %1722, %1714
  %1733 = mul <8 x i32> %1725, %1715
  %1734 = mul <8 x i32> %1728, %1716
  %1735 = mul <8 x i32> %1731, %1717
  %1736 = add nuw i64 %1713, 32
  %1737 = icmp eq i64 %1736, %1710
  br i1 %1737, label %1738, label %1712, !llvm.loop !73

1738:                                             ; preds = %1712
  %1739 = mul <8 x i32> %1733, %1732
  %1740 = mul <8 x i32> %1734, %1739
  %1741 = mul <8 x i32> %1735, %1740
  %1742 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1741)
  %1743 = icmp eq i64 %1706, %1710
  br i1 %1743, label %1756, label %1744

1744:                                             ; preds = %1697, %1738
  %1745 = phi i64 [ %1700, %1697 ], [ %1711, %1738 ]
  %1746 = phi i32 [ 1, %1697 ], [ %1742, %1738 ]
  br label %1747

1747:                                             ; preds = %1744, %1747
  %1748 = phi i64 [ %1753, %1747 ], [ %1745, %1744 ]
  %1749 = phi i32 [ %1752, %1747 ], [ %1746, %1744 ]
  %1750 = getelementptr inbounds i32, ptr %11, i64 %1748
  %1751 = load i32, ptr %1750, align 4, !tbaa !5
  %1752 = mul nsw i32 %1751, %1749
  %1753 = add nsw i64 %1748, -1
  %1754 = trunc i64 %1748 to i32
  %1755 = icmp sgt i32 %1754, 0
  br i1 %1755, label %1747, label %1756, !llvm.loop !74

1756:                                             ; preds = %1747, %1738
  %1757 = phi i32 [ %1742, %1738 ], [ %1752, %1747 ]
  %1758 = and i64 %1707, 4294967295
  %1759 = getelementptr inbounds i32, ptr %6, i64 %1758
  %1760 = load i32, ptr %1759, align 4, !tbaa !5
  %1761 = mul nsw i32 %1760, %1757
  %1762 = add nsw i32 %1761, %1701
  %1763 = icmp sgt i64 %1699, 2
  %1764 = add nsw i64 %1700, -1
  %1765 = add i32 %1698, 1
  br i1 %1763, label %1697, label %1766, !llvm.loop !75

1766:                                             ; preds = %1756, %1694
  %1767 = phi i32 [ %1696, %1694 ], [ %1762, %1756 ]
  %1768 = icmp slt i32 %1767, %5
  br i1 %1768, label %1771, label %1769

1769:                                             ; preds = %1766
  %1770 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

1771:                                             ; preds = %1766
  %1772 = sext i32 %1767 to i64
  %1773 = getelementptr inbounds i8, ptr %1233, i64 %1772
  %1774 = load i8, ptr %1773, align 1, !tbaa !11
  %1775 = load i8, ptr %1235, align 1, !tbaa !11
  %1776 = mul i8 %1774, %1774
  %1777 = add i8 %1776, %1775
  store i8 %1777, ptr %1235, align 1, !tbaa !11
  %1778 = add nuw nsw i32 %1695, 1
  br i1 %1547, label %1779, label %1829

1779:                                             ; preds = %1771
  %1780 = load i32, ptr %4, align 4, !tbaa !5
  %1781 = load i32, ptr %12, align 4, !tbaa !5
  %1782 = add nsw i32 %1781, -1
  %1783 = icmp slt i32 %1780, %1782
  br i1 %1783, label %1806, label %1784

1784:                                             ; preds = %1779
  %1785 = icmp eq i32 %1780, %1782
  br i1 %1785, label %1786, label %1822

1786:                                             ; preds = %1784
  store i32 0, ptr %4, align 4, !tbaa !5
  %1787 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1787, ptr %6, align 4, !tbaa !5
  br i1 %1552, label %1829, label %1788

1788:                                             ; preds = %1786, %1816
  %1789 = phi i64 [ %1820, %1816 ], [ 1, %1786 ]
  %1790 = getelementptr inbounds i32, ptr %4, i64 %1789
  %1791 = load i32, ptr %1790, align 4, !tbaa !5
  %1792 = getelementptr inbounds i32, ptr %12, i64 %1789
  %1793 = load i32, ptr %1792, align 4, !tbaa !5
  %1794 = add nsw i32 %1793, -1
  %1795 = icmp slt i32 %1791, %1794
  br i1 %1795, label %1796, label %1814

1796:                                             ; preds = %1788
  br i1 %1783, label %1806, label %1797

1797:                                             ; preds = %1796
  %1798 = shl i64 %1789, 32
  %1799 = add i64 %1798, -4294967296
  %1800 = ashr exact i64 %1799, 32
  %1801 = getelementptr inbounds i32, ptr %7, i64 %1800
  %1802 = load i32, ptr %1801, align 4, !tbaa !5
  %1803 = getelementptr inbounds i32, ptr %6, i64 %1789
  %1804 = load i32, ptr %1803, align 4, !tbaa !5
  %1805 = add nsw i32 %1804, %1802
  store i32 %1805, ptr %1803, align 4, !tbaa !5
  br label %1824

1806:                                             ; preds = %1779, %1796
  %1807 = phi i32 [ %1791, %1796 ], [ %1780, %1779 ]
  %1808 = phi ptr [ %1790, %1796 ], [ %4, %1779 ]
  %1809 = phi i64 [ %1789, %1796 ], [ 0, %1779 ]
  %1810 = add nsw i32 %1807, 1
  store i32 %1810, ptr %1808, align 4, !tbaa !5
  %1811 = getelementptr inbounds i32, ptr %7, i64 %1809
  %1812 = load i32, ptr %1811, align 4, !tbaa !5
  %1813 = getelementptr inbounds i32, ptr %6, i64 %1809
  br label %1824

1814:                                             ; preds = %1788
  %1815 = icmp eq i32 %1791, %1794
  br i1 %1815, label %1816, label %1822

1816:                                             ; preds = %1814
  store i32 0, ptr %1790, align 4, !tbaa !5
  %1817 = getelementptr inbounds i32, ptr %8, i64 %1789
  %1818 = load i32, ptr %1817, align 4, !tbaa !5
  %1819 = getelementptr inbounds i32, ptr %6, i64 %1789
  store i32 %1818, ptr %1819, align 4, !tbaa !5
  %1820 = add nuw nsw i64 %1789, 1
  %1821 = icmp eq i64 %1820, %1550
  br i1 %1821, label %1829, label %1788, !llvm.loop !76

1822:                                             ; preds = %1784, %1814
  %1823 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

1824:                                             ; preds = %1797, %1806
  %1825 = phi ptr [ %1813, %1806 ], [ %1790, %1797 ]
  %1826 = phi i32 [ %1812, %1806 ], [ 1, %1797 ]
  %1827 = load i32, ptr %1825, align 4, !tbaa !5
  %1828 = add nsw i32 %1827, %1826
  store i32 %1828, ptr %1825, align 4, !tbaa !5
  br label %1829

1829:                                             ; preds = %1816, %1824, %1786, %1771
  %1830 = icmp eq i32 %1778, %5
  br i1 %1830, label %5473, label %1694, !llvm.loop !77

1831:                                             ; preds = %1240
  %1832 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5473

1833:                                             ; preds = %18
  %1834 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1835 = load ptr, ptr %1834, align 8, !tbaa !9
  %1836 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1837 = load ptr, ptr %1836, align 8, !tbaa !9
  store i16 0, ptr %1837, align 2, !tbaa !78
  %1838 = icmp eq i32 %13, 0
  br i1 %1838, label %1839, label %1843

1839:                                             ; preds = %1833
  %1840 = load i8, ptr %1835, align 1, !tbaa !11
  %1841 = zext i8 %1840 to i16
  %1842 = mul nuw i16 %1841, %1841
  store i16 %1842, ptr %1837, align 2, !tbaa !78
  br label %5473

1843:                                             ; preds = %1833
  switch i32 %1, label %2440 [
    i32 1, label %1844
    i32 0, label %2146
  ]

1844:                                             ; preds = %1843
  %1845 = getelementptr inbounds i32, ptr %3, i64 %19
  %1846 = load i32, ptr %1845, align 4, !tbaa !5
  %1847 = icmp eq i32 %1846, 0
  %1848 = icmp sgt i32 %5, 0
  br i1 %1847, label %1858, label %1849

1849:                                             ; preds = %1844
  br i1 %1848, label %1850, label %5473

1850:                                             ; preds = %1849
  %1851 = icmp sgt i32 %13, 1
  %1852 = icmp sgt i32 %13, 0
  %1853 = add i32 %13, -2
  %1854 = zext i32 %1853 to i64
  %1855 = zext i32 %13 to i64
  %1856 = add nuw i32 %5, 1
  %1857 = icmp eq i32 %13, 1
  br label %2005

1858:                                             ; preds = %1844
  br i1 %1848, label %1859, label %5473

1859:                                             ; preds = %1858
  %1860 = icmp sgt i32 %13, 1
  %1861 = icmp sgt i32 %13, 0
  %1862 = add i32 %13, -2
  %1863 = zext i32 %1862 to i64
  %1864 = zext i32 %13 to i64
  %1865 = add nuw i32 %5, 1
  %1866 = icmp eq i32 %13, 1
  br label %1867

1867:                                             ; preds = %1859, %2003
  %1868 = phi i16 [ 0, %1859 ], [ %1953, %2003 ]
  %1869 = phi i32 [ 0, %1859 ], [ %1955, %2003 ]
  %1870 = phi double [ 0.000000e+00, %1859 ], [ %1954, %2003 ]
  %1871 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1860, label %1872, label %1941

1872:                                             ; preds = %1867, %1931
  %1873 = phi i32 [ %1940, %1931 ], [ 0, %1867 ]
  %1874 = phi i64 [ %1882, %1931 ], [ %1864, %1867 ]
  %1875 = phi i64 [ %1939, %1931 ], [ %1863, %1867 ]
  %1876 = phi i32 [ %1937, %1931 ], [ %1871, %1867 ]
  %1877 = sub i32 %1862, %1873
  %1878 = tail call i32 @llvm.smin.i32(i32 %1877, i32 0)
  %1879 = sub i32 %1877, %1878
  %1880 = zext i32 %1879 to i64
  %1881 = add nuw nsw i64 %1880, 1
  %1882 = add nsw i64 %1874, -1
  %1883 = icmp ult i32 %1879, 31
  br i1 %1883, label %1919, label %1884

1884:                                             ; preds = %1872
  %1885 = and i64 %1881, 8589934560
  %1886 = sub i64 %1875, %1885
  br label %1887

1887:                                             ; preds = %1887, %1884
  %1888 = phi i64 [ 0, %1884 ], [ %1911, %1887 ]
  %1889 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1884 ], [ %1907, %1887 ]
  %1890 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1884 ], [ %1908, %1887 ]
  %1891 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1884 ], [ %1909, %1887 ]
  %1892 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1884 ], [ %1910, %1887 ]
  %1893 = sub i64 %1875, %1888
  %1894 = getelementptr inbounds i32, ptr %9, i64 %1893
  %1895 = getelementptr inbounds i32, ptr %1894, i64 -7
  %1896 = load <8 x i32>, ptr %1895, align 4, !tbaa !5
  %1897 = shufflevector <8 x i32> %1896, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1898 = getelementptr inbounds i32, ptr %1894, i64 -15
  %1899 = load <8 x i32>, ptr %1898, align 4, !tbaa !5
  %1900 = shufflevector <8 x i32> %1899, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1901 = getelementptr inbounds i32, ptr %1894, i64 -23
  %1902 = load <8 x i32>, ptr %1901, align 4, !tbaa !5
  %1903 = shufflevector <8 x i32> %1902, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1904 = getelementptr inbounds i32, ptr %1894, i64 -31
  %1905 = load <8 x i32>, ptr %1904, align 4, !tbaa !5
  %1906 = shufflevector <8 x i32> %1905, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1907 = mul <8 x i32> %1897, %1889
  %1908 = mul <8 x i32> %1900, %1890
  %1909 = mul <8 x i32> %1903, %1891
  %1910 = mul <8 x i32> %1906, %1892
  %1911 = add nuw i64 %1888, 32
  %1912 = icmp eq i64 %1911, %1885
  br i1 %1912, label %1913, label %1887, !llvm.loop !80

1913:                                             ; preds = %1887
  %1914 = mul <8 x i32> %1908, %1907
  %1915 = mul <8 x i32> %1909, %1914
  %1916 = mul <8 x i32> %1910, %1915
  %1917 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1916)
  %1918 = icmp eq i64 %1881, %1885
  br i1 %1918, label %1931, label %1919

1919:                                             ; preds = %1872, %1913
  %1920 = phi i64 [ %1875, %1872 ], [ %1886, %1913 ]
  %1921 = phi i32 [ 1, %1872 ], [ %1917, %1913 ]
  br label %1922

1922:                                             ; preds = %1919, %1922
  %1923 = phi i64 [ %1928, %1922 ], [ %1920, %1919 ]
  %1924 = phi i32 [ %1927, %1922 ], [ %1921, %1919 ]
  %1925 = getelementptr inbounds i32, ptr %9, i64 %1923
  %1926 = load i32, ptr %1925, align 4, !tbaa !5
  %1927 = mul nsw i32 %1926, %1924
  %1928 = add nsw i64 %1923, -1
  %1929 = trunc i64 %1923 to i32
  %1930 = icmp sgt i32 %1929, 0
  br i1 %1930, label %1922, label %1931, !llvm.loop !81

1931:                                             ; preds = %1922, %1913
  %1932 = phi i32 [ %1917, %1913 ], [ %1927, %1922 ]
  %1933 = and i64 %1882, 4294967295
  %1934 = getelementptr inbounds i32, ptr %6, i64 %1933
  %1935 = load i32, ptr %1934, align 4, !tbaa !5
  %1936 = mul nsw i32 %1935, %1932
  %1937 = add nsw i32 %1936, %1876
  %1938 = icmp sgt i64 %1874, 2
  %1939 = add nsw i64 %1875, -1
  %1940 = add i32 %1873, 1
  br i1 %1938, label %1872, label %1941, !llvm.loop !82

1941:                                             ; preds = %1931, %1867
  %1942 = phi i32 [ %1871, %1867 ], [ %1937, %1931 ]
  %1943 = sext i32 %1942 to i64
  %1944 = getelementptr inbounds double, ptr %2, i64 %1943
  %1945 = load double, ptr %1944, align 8, !tbaa !18
  %1946 = getelementptr inbounds i8, ptr %1835, i64 %1943
  %1947 = load i8, ptr %1946, align 1, !tbaa !11
  %1948 = sitofp i16 %1868 to double
  %1949 = uitofp i8 %1947 to double
  %1950 = fmul fast double %1945, %1949
  %1951 = fmul fast double %1950, %1950
  %1952 = fadd fast double %1951, %1948
  %1953 = fptosi double %1952 to i16
  store i16 %1953, ptr %1837, align 2, !tbaa !78
  %1954 = fadd fast double %1945, %1870
  %1955 = add nuw nsw i32 %1869, 1
  br i1 %1861, label %1956, label %2003

1956:                                             ; preds = %1941
  %1957 = load i32, ptr %4, align 4, !tbaa !5
  %1958 = load i32, ptr %12, align 4, !tbaa !5
  %1959 = add nsw i32 %1958, -1
  %1960 = icmp slt i32 %1957, %1959
  br i1 %1960, label %1980, label %1961

1961:                                             ; preds = %1956
  %1962 = icmp eq i32 %1957, %1959
  br i1 %1962, label %1963, label %1996

1963:                                             ; preds = %1961
  store i32 0, ptr %4, align 4, !tbaa !5
  %1964 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1964, ptr %6, align 4, !tbaa !5
  br i1 %1866, label %2003, label %1965

1965:                                             ; preds = %1963, %1990
  %1966 = phi i64 [ %1994, %1990 ], [ 1, %1963 ]
  %1967 = getelementptr inbounds i32, ptr %4, i64 %1966
  %1968 = load i32, ptr %1967, align 4, !tbaa !5
  %1969 = getelementptr inbounds i32, ptr %12, i64 %1966
  %1970 = load i32, ptr %1969, align 4, !tbaa !5
  %1971 = add nsw i32 %1970, -1
  %1972 = icmp slt i32 %1968, %1971
  br i1 %1972, label %1973, label %1988

1973:                                             ; preds = %1965
  br i1 %1960, label %1980, label %1974

1974:                                             ; preds = %1973
  %1975 = getelementptr inbounds i32, ptr %7, i64 %1966
  %1976 = load i32, ptr %1975, align 4, !tbaa !5
  %1977 = getelementptr inbounds i32, ptr %6, i64 %1966
  %1978 = load i32, ptr %1977, align 4, !tbaa !5
  %1979 = add nsw i32 %1978, %1976
  store i32 %1979, ptr %1977, align 4, !tbaa !5
  br label %1998

1980:                                             ; preds = %1956, %1973
  %1981 = phi i32 [ %1968, %1973 ], [ %1957, %1956 ]
  %1982 = phi ptr [ %1967, %1973 ], [ %4, %1956 ]
  %1983 = phi i64 [ %1966, %1973 ], [ 0, %1956 ]
  %1984 = add nsw i32 %1981, 1
  store i32 %1984, ptr %1982, align 4, !tbaa !5
  %1985 = getelementptr inbounds i32, ptr %7, i64 %1983
  %1986 = load i32, ptr %1985, align 4, !tbaa !5
  %1987 = getelementptr inbounds i32, ptr %6, i64 %1983
  br label %1998

1988:                                             ; preds = %1965
  %1989 = icmp eq i32 %1968, %1971
  br i1 %1989, label %1990, label %1996

1990:                                             ; preds = %1988
  store i32 0, ptr %1967, align 4, !tbaa !5
  %1991 = getelementptr inbounds i32, ptr %8, i64 %1966
  %1992 = load i32, ptr %1991, align 4, !tbaa !5
  %1993 = getelementptr inbounds i32, ptr %6, i64 %1966
  store i32 %1992, ptr %1993, align 4, !tbaa !5
  %1994 = add nuw nsw i64 %1966, 1
  %1995 = icmp eq i64 %1994, %1864
  br i1 %1995, label %2003, label %1965, !llvm.loop !83

1996:                                             ; preds = %1961, %1988
  %1997 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

1998:                                             ; preds = %1974, %1980
  %1999 = phi ptr [ %1987, %1980 ], [ %1967, %1974 ]
  %2000 = phi i32 [ %1986, %1980 ], [ 1, %1974 ]
  %2001 = load i32, ptr %1999, align 4, !tbaa !5
  %2002 = add nsw i32 %2001, %2000
  store i32 %2002, ptr %1999, align 4, !tbaa !5
  br label %2003

2003:                                             ; preds = %1990, %1998, %1963, %1941
  %2004 = icmp eq i32 %1955, %5
  br i1 %2004, label %5473, label %1867, !llvm.loop !84

2005:                                             ; preds = %1850, %2144
  %2006 = phi i32 [ 0, %1850 ], [ %2091, %2144 ]
  %2007 = phi i32 [ 0, %1850 ], [ %2093, %2144 ]
  %2008 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1851, label %2009, label %2078

2009:                                             ; preds = %2005, %2068
  %2010 = phi i32 [ %2077, %2068 ], [ 0, %2005 ]
  %2011 = phi i64 [ %2019, %2068 ], [ %1855, %2005 ]
  %2012 = phi i64 [ %2076, %2068 ], [ %1854, %2005 ]
  %2013 = phi i32 [ %2074, %2068 ], [ %2008, %2005 ]
  %2014 = sub i32 %1853, %2010
  %2015 = tail call i32 @llvm.smin.i32(i32 %2014, i32 0)
  %2016 = sub i32 %2014, %2015
  %2017 = zext i32 %2016 to i64
  %2018 = add nuw nsw i64 %2017, 1
  %2019 = add nsw i64 %2011, -1
  %2020 = icmp ult i32 %2016, 31
  br i1 %2020, label %2056, label %2021

2021:                                             ; preds = %2009
  %2022 = and i64 %2018, 8589934560
  %2023 = sub i64 %2012, %2022
  br label %2024

2024:                                             ; preds = %2024, %2021
  %2025 = phi i64 [ 0, %2021 ], [ %2048, %2024 ]
  %2026 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2021 ], [ %2044, %2024 ]
  %2027 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2021 ], [ %2045, %2024 ]
  %2028 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2021 ], [ %2046, %2024 ]
  %2029 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2021 ], [ %2047, %2024 ]
  %2030 = sub i64 %2012, %2025
  %2031 = getelementptr inbounds i32, ptr %11, i64 %2030
  %2032 = getelementptr inbounds i32, ptr %2031, i64 -7
  %2033 = load <8 x i32>, ptr %2032, align 4, !tbaa !5
  %2034 = shufflevector <8 x i32> %2033, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2035 = getelementptr inbounds i32, ptr %2031, i64 -15
  %2036 = load <8 x i32>, ptr %2035, align 4, !tbaa !5
  %2037 = shufflevector <8 x i32> %2036, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2038 = getelementptr inbounds i32, ptr %2031, i64 -23
  %2039 = load <8 x i32>, ptr %2038, align 4, !tbaa !5
  %2040 = shufflevector <8 x i32> %2039, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2041 = getelementptr inbounds i32, ptr %2031, i64 -31
  %2042 = load <8 x i32>, ptr %2041, align 4, !tbaa !5
  %2043 = shufflevector <8 x i32> %2042, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2044 = mul <8 x i32> %2034, %2026
  %2045 = mul <8 x i32> %2037, %2027
  %2046 = mul <8 x i32> %2040, %2028
  %2047 = mul <8 x i32> %2043, %2029
  %2048 = add nuw i64 %2025, 32
  %2049 = icmp eq i64 %2048, %2022
  br i1 %2049, label %2050, label %2024, !llvm.loop !85

2050:                                             ; preds = %2024
  %2051 = mul <8 x i32> %2045, %2044
  %2052 = mul <8 x i32> %2046, %2051
  %2053 = mul <8 x i32> %2047, %2052
  %2054 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2053)
  %2055 = icmp eq i64 %2018, %2022
  br i1 %2055, label %2068, label %2056

2056:                                             ; preds = %2009, %2050
  %2057 = phi i64 [ %2012, %2009 ], [ %2023, %2050 ]
  %2058 = phi i32 [ 1, %2009 ], [ %2054, %2050 ]
  br label %2059

2059:                                             ; preds = %2056, %2059
  %2060 = phi i64 [ %2065, %2059 ], [ %2057, %2056 ]
  %2061 = phi i32 [ %2064, %2059 ], [ %2058, %2056 ]
  %2062 = getelementptr inbounds i32, ptr %11, i64 %2060
  %2063 = load i32, ptr %2062, align 4, !tbaa !5
  %2064 = mul nsw i32 %2063, %2061
  %2065 = add nsw i64 %2060, -1
  %2066 = trunc i64 %2060 to i32
  %2067 = icmp sgt i32 %2066, 0
  br i1 %2067, label %2059, label %2068, !llvm.loop !86

2068:                                             ; preds = %2059, %2050
  %2069 = phi i32 [ %2054, %2050 ], [ %2064, %2059 ]
  %2070 = and i64 %2019, 4294967295
  %2071 = getelementptr inbounds i32, ptr %6, i64 %2070
  %2072 = load i32, ptr %2071, align 4, !tbaa !5
  %2073 = mul nsw i32 %2072, %2069
  %2074 = add nsw i32 %2073, %2013
  %2075 = icmp sgt i64 %2011, 2
  %2076 = add nsw i64 %2012, -1
  %2077 = add i32 %2010, 1
  br i1 %2075, label %2009, label %2078, !llvm.loop !87

2078:                                             ; preds = %2068, %2005
  %2079 = phi i32 [ %2008, %2005 ], [ %2074, %2068 ]
  %2080 = icmp slt i32 %2079, %5
  br i1 %2080, label %2083, label %2081

2081:                                             ; preds = %2078
  %2082 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

2083:                                             ; preds = %2078
  %2084 = sext i32 %2079 to i64
  %2085 = getelementptr inbounds i8, ptr %1835, i64 %2084
  %2086 = load i8, ptr %2085, align 1, !tbaa !11
  %2087 = shl i32 %2006, 16
  %2088 = ashr exact i32 %2087, 16
  %2089 = zext i8 %2086 to i32
  %2090 = mul nuw nsw i32 %2089, %2089
  %2091 = add nsw i32 %2090, %2088
  %2092 = trunc i32 %2091 to i16
  store i16 %2092, ptr %1837, align 2, !tbaa !78
  %2093 = add nuw nsw i32 %2007, 1
  br i1 %1852, label %2094, label %2144

2094:                                             ; preds = %2083
  %2095 = load i32, ptr %4, align 4, !tbaa !5
  %2096 = load i32, ptr %12, align 4, !tbaa !5
  %2097 = add nsw i32 %2096, -1
  %2098 = icmp slt i32 %2095, %2097
  br i1 %2098, label %2121, label %2099

2099:                                             ; preds = %2094
  %2100 = icmp eq i32 %2095, %2097
  br i1 %2100, label %2101, label %2137

2101:                                             ; preds = %2099
  store i32 0, ptr %4, align 4, !tbaa !5
  %2102 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2102, ptr %6, align 4, !tbaa !5
  br i1 %1857, label %2144, label %2103

2103:                                             ; preds = %2101, %2131
  %2104 = phi i64 [ %2135, %2131 ], [ 1, %2101 ]
  %2105 = getelementptr inbounds i32, ptr %4, i64 %2104
  %2106 = load i32, ptr %2105, align 4, !tbaa !5
  %2107 = getelementptr inbounds i32, ptr %12, i64 %2104
  %2108 = load i32, ptr %2107, align 4, !tbaa !5
  %2109 = add nsw i32 %2108, -1
  %2110 = icmp slt i32 %2106, %2109
  br i1 %2110, label %2111, label %2129

2111:                                             ; preds = %2103
  br i1 %2098, label %2121, label %2112

2112:                                             ; preds = %2111
  %2113 = shl i64 %2104, 32
  %2114 = add i64 %2113, -4294967296
  %2115 = ashr exact i64 %2114, 32
  %2116 = getelementptr inbounds i32, ptr %7, i64 %2115
  %2117 = load i32, ptr %2116, align 4, !tbaa !5
  %2118 = getelementptr inbounds i32, ptr %6, i64 %2104
  %2119 = load i32, ptr %2118, align 4, !tbaa !5
  %2120 = add nsw i32 %2119, %2117
  store i32 %2120, ptr %2118, align 4, !tbaa !5
  br label %2139

2121:                                             ; preds = %2094, %2111
  %2122 = phi i32 [ %2106, %2111 ], [ %2095, %2094 ]
  %2123 = phi ptr [ %2105, %2111 ], [ %4, %2094 ]
  %2124 = phi i64 [ %2104, %2111 ], [ 0, %2094 ]
  %2125 = add nsw i32 %2122, 1
  store i32 %2125, ptr %2123, align 4, !tbaa !5
  %2126 = getelementptr inbounds i32, ptr %7, i64 %2124
  %2127 = load i32, ptr %2126, align 4, !tbaa !5
  %2128 = getelementptr inbounds i32, ptr %6, i64 %2124
  br label %2139

2129:                                             ; preds = %2103
  %2130 = icmp eq i32 %2106, %2109
  br i1 %2130, label %2131, label %2137

2131:                                             ; preds = %2129
  store i32 0, ptr %2105, align 4, !tbaa !5
  %2132 = getelementptr inbounds i32, ptr %8, i64 %2104
  %2133 = load i32, ptr %2132, align 4, !tbaa !5
  %2134 = getelementptr inbounds i32, ptr %6, i64 %2104
  store i32 %2133, ptr %2134, align 4, !tbaa !5
  %2135 = add nuw nsw i64 %2104, 1
  %2136 = icmp eq i64 %2135, %1855
  br i1 %2136, label %2144, label %2103, !llvm.loop !88

2137:                                             ; preds = %2099, %2129
  %2138 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

2139:                                             ; preds = %2112, %2121
  %2140 = phi ptr [ %2128, %2121 ], [ %2105, %2112 ]
  %2141 = phi i32 [ %2127, %2121 ], [ 1, %2112 ]
  %2142 = load i32, ptr %2140, align 4, !tbaa !5
  %2143 = add nsw i32 %2142, %2141
  store i32 %2143, ptr %2140, align 4, !tbaa !5
  br label %2144

2144:                                             ; preds = %2131, %2139, %2101, %2083
  %2145 = icmp eq i32 %2093, %5
  br i1 %2145, label %5473, label %2005, !llvm.loop !89

2146:                                             ; preds = %1843
  %2147 = getelementptr inbounds i32, ptr %3, i64 %19
  %2148 = load i32, ptr %2147, align 4, !tbaa !5
  %2149 = icmp eq i32 %2148, 0
  %2150 = icmp sgt i32 %5, 0
  br i1 %2149, label %2160, label %2151

2151:                                             ; preds = %2146
  br i1 %2150, label %2152, label %5473

2152:                                             ; preds = %2151
  %2153 = icmp sgt i32 %13, 1
  %2154 = icmp sgt i32 %13, 0
  %2155 = add i32 %13, -2
  %2156 = zext i32 %2155 to i64
  %2157 = zext i32 %13 to i64
  %2158 = add nuw i32 %5, 1
  %2159 = icmp eq i32 %13, 1
  br label %2302

2160:                                             ; preds = %2146
  br i1 %2150, label %2161, label %5473

2161:                                             ; preds = %2160
  %2162 = icmp sgt i32 %13, 1
  %2163 = icmp sgt i32 %13, 0
  %2164 = add i32 %13, -2
  %2165 = zext i32 %2164 to i64
  %2166 = zext i32 %13 to i64
  %2167 = add nuw i32 %5, 1
  %2168 = icmp eq i32 %13, 1
  br label %2169

2169:                                             ; preds = %2161, %2300
  %2170 = phi i16 [ 0, %2161 ], [ %2250, %2300 ]
  %2171 = phi i32 [ 0, %2161 ], [ %2252, %2300 ]
  %2172 = phi double [ 0.000000e+00, %2161 ], [ %2251, %2300 ]
  %2173 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2162, label %2174, label %2243

2174:                                             ; preds = %2169, %2233
  %2175 = phi i32 [ %2242, %2233 ], [ 0, %2169 ]
  %2176 = phi i64 [ %2184, %2233 ], [ %2166, %2169 ]
  %2177 = phi i64 [ %2241, %2233 ], [ %2165, %2169 ]
  %2178 = phi i32 [ %2239, %2233 ], [ %2173, %2169 ]
  %2179 = sub i32 %2164, %2175
  %2180 = tail call i32 @llvm.smin.i32(i32 %2179, i32 0)
  %2181 = sub i32 %2179, %2180
  %2182 = zext i32 %2181 to i64
  %2183 = add nuw nsw i64 %2182, 1
  %2184 = add nsw i64 %2176, -1
  %2185 = icmp ult i32 %2181, 31
  br i1 %2185, label %2221, label %2186

2186:                                             ; preds = %2174
  %2187 = and i64 %2183, 8589934560
  %2188 = sub i64 %2177, %2187
  br label %2189

2189:                                             ; preds = %2189, %2186
  %2190 = phi i64 [ 0, %2186 ], [ %2213, %2189 ]
  %2191 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2186 ], [ %2209, %2189 ]
  %2192 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2186 ], [ %2210, %2189 ]
  %2193 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2186 ], [ %2211, %2189 ]
  %2194 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2186 ], [ %2212, %2189 ]
  %2195 = sub i64 %2177, %2190
  %2196 = getelementptr inbounds i32, ptr %9, i64 %2195
  %2197 = getelementptr inbounds i32, ptr %2196, i64 -7
  %2198 = load <8 x i32>, ptr %2197, align 4, !tbaa !5
  %2199 = shufflevector <8 x i32> %2198, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2200 = getelementptr inbounds i32, ptr %2196, i64 -15
  %2201 = load <8 x i32>, ptr %2200, align 4, !tbaa !5
  %2202 = shufflevector <8 x i32> %2201, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2203 = getelementptr inbounds i32, ptr %2196, i64 -23
  %2204 = load <8 x i32>, ptr %2203, align 4, !tbaa !5
  %2205 = shufflevector <8 x i32> %2204, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2206 = getelementptr inbounds i32, ptr %2196, i64 -31
  %2207 = load <8 x i32>, ptr %2206, align 4, !tbaa !5
  %2208 = shufflevector <8 x i32> %2207, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2209 = mul <8 x i32> %2199, %2191
  %2210 = mul <8 x i32> %2202, %2192
  %2211 = mul <8 x i32> %2205, %2193
  %2212 = mul <8 x i32> %2208, %2194
  %2213 = add nuw i64 %2190, 32
  %2214 = icmp eq i64 %2213, %2187
  br i1 %2214, label %2215, label %2189, !llvm.loop !90

2215:                                             ; preds = %2189
  %2216 = mul <8 x i32> %2210, %2209
  %2217 = mul <8 x i32> %2211, %2216
  %2218 = mul <8 x i32> %2212, %2217
  %2219 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2218)
  %2220 = icmp eq i64 %2183, %2187
  br i1 %2220, label %2233, label %2221

2221:                                             ; preds = %2174, %2215
  %2222 = phi i64 [ %2177, %2174 ], [ %2188, %2215 ]
  %2223 = phi i32 [ 1, %2174 ], [ %2219, %2215 ]
  br label %2224

2224:                                             ; preds = %2221, %2224
  %2225 = phi i64 [ %2230, %2224 ], [ %2222, %2221 ]
  %2226 = phi i32 [ %2229, %2224 ], [ %2223, %2221 ]
  %2227 = getelementptr inbounds i32, ptr %9, i64 %2225
  %2228 = load i32, ptr %2227, align 4, !tbaa !5
  %2229 = mul nsw i32 %2228, %2226
  %2230 = add nsw i64 %2225, -1
  %2231 = trunc i64 %2225 to i32
  %2232 = icmp sgt i32 %2231, 0
  br i1 %2232, label %2224, label %2233, !llvm.loop !91

2233:                                             ; preds = %2224, %2215
  %2234 = phi i32 [ %2219, %2215 ], [ %2229, %2224 ]
  %2235 = and i64 %2184, 4294967295
  %2236 = getelementptr inbounds i32, ptr %6, i64 %2235
  %2237 = load i32, ptr %2236, align 4, !tbaa !5
  %2238 = mul nsw i32 %2237, %2234
  %2239 = add nsw i32 %2238, %2178
  %2240 = icmp sgt i64 %2176, 2
  %2241 = add nsw i64 %2177, -1
  %2242 = add i32 %2175, 1
  br i1 %2240, label %2174, label %2243, !llvm.loop !92

2243:                                             ; preds = %2233, %2169
  %2244 = phi i32 [ %2173, %2169 ], [ %2239, %2233 ]
  %2245 = sext i32 %2244 to i64
  %2246 = getelementptr inbounds i8, ptr %1835, i64 %2245
  %2247 = load i8, ptr %2246, align 1, !tbaa !11
  %2248 = zext i8 %2247 to i16
  %2249 = mul nuw i16 %2248, %2248
  %2250 = add i16 %2249, %2170
  store i16 %2250, ptr %1837, align 2, !tbaa !78
  %2251 = fadd fast double %2172, 1.000000e+00
  %2252 = add nuw nsw i32 %2171, 1
  br i1 %2163, label %2253, label %2300

2253:                                             ; preds = %2243
  %2254 = load i32, ptr %4, align 4, !tbaa !5
  %2255 = load i32, ptr %12, align 4, !tbaa !5
  %2256 = add nsw i32 %2255, -1
  %2257 = icmp slt i32 %2254, %2256
  br i1 %2257, label %2277, label %2258

2258:                                             ; preds = %2253
  %2259 = icmp eq i32 %2254, %2256
  br i1 %2259, label %2260, label %2293

2260:                                             ; preds = %2258
  store i32 0, ptr %4, align 4, !tbaa !5
  %2261 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2261, ptr %6, align 4, !tbaa !5
  br i1 %2168, label %2300, label %2262

2262:                                             ; preds = %2260, %2287
  %2263 = phi i64 [ %2291, %2287 ], [ 1, %2260 ]
  %2264 = getelementptr inbounds i32, ptr %4, i64 %2263
  %2265 = load i32, ptr %2264, align 4, !tbaa !5
  %2266 = getelementptr inbounds i32, ptr %12, i64 %2263
  %2267 = load i32, ptr %2266, align 4, !tbaa !5
  %2268 = add nsw i32 %2267, -1
  %2269 = icmp slt i32 %2265, %2268
  br i1 %2269, label %2270, label %2285

2270:                                             ; preds = %2262
  br i1 %2257, label %2277, label %2271

2271:                                             ; preds = %2270
  %2272 = getelementptr inbounds i32, ptr %7, i64 %2263
  %2273 = load i32, ptr %2272, align 4, !tbaa !5
  %2274 = getelementptr inbounds i32, ptr %6, i64 %2263
  %2275 = load i32, ptr %2274, align 4, !tbaa !5
  %2276 = add nsw i32 %2275, %2273
  store i32 %2276, ptr %2274, align 4, !tbaa !5
  br label %2295

2277:                                             ; preds = %2253, %2270
  %2278 = phi i32 [ %2265, %2270 ], [ %2254, %2253 ]
  %2279 = phi ptr [ %2264, %2270 ], [ %4, %2253 ]
  %2280 = phi i64 [ %2263, %2270 ], [ 0, %2253 ]
  %2281 = add nsw i32 %2278, 1
  store i32 %2281, ptr %2279, align 4, !tbaa !5
  %2282 = getelementptr inbounds i32, ptr %7, i64 %2280
  %2283 = load i32, ptr %2282, align 4, !tbaa !5
  %2284 = getelementptr inbounds i32, ptr %6, i64 %2280
  br label %2295

2285:                                             ; preds = %2262
  %2286 = icmp eq i32 %2265, %2268
  br i1 %2286, label %2287, label %2293

2287:                                             ; preds = %2285
  store i32 0, ptr %2264, align 4, !tbaa !5
  %2288 = getelementptr inbounds i32, ptr %8, i64 %2263
  %2289 = load i32, ptr %2288, align 4, !tbaa !5
  %2290 = getelementptr inbounds i32, ptr %6, i64 %2263
  store i32 %2289, ptr %2290, align 4, !tbaa !5
  %2291 = add nuw nsw i64 %2263, 1
  %2292 = icmp eq i64 %2291, %2166
  br i1 %2292, label %2300, label %2262, !llvm.loop !93

2293:                                             ; preds = %2258, %2285
  %2294 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

2295:                                             ; preds = %2271, %2277
  %2296 = phi ptr [ %2284, %2277 ], [ %2264, %2271 ]
  %2297 = phi i32 [ %2283, %2277 ], [ 1, %2271 ]
  %2298 = load i32, ptr %2296, align 4, !tbaa !5
  %2299 = add nsw i32 %2298, %2297
  store i32 %2299, ptr %2296, align 4, !tbaa !5
  br label %2300

2300:                                             ; preds = %2287, %2295, %2260, %2243
  %2301 = icmp eq i32 %2252, %5
  br i1 %2301, label %5473, label %2169, !llvm.loop !94

2302:                                             ; preds = %2152, %2438
  %2303 = phi i16 [ 0, %2152 ], [ %2386, %2438 ]
  %2304 = phi i32 [ 0, %2152 ], [ %2387, %2438 ]
  %2305 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2153, label %2306, label %2375

2306:                                             ; preds = %2302, %2365
  %2307 = phi i32 [ %2374, %2365 ], [ 0, %2302 ]
  %2308 = phi i64 [ %2316, %2365 ], [ %2157, %2302 ]
  %2309 = phi i64 [ %2373, %2365 ], [ %2156, %2302 ]
  %2310 = phi i32 [ %2371, %2365 ], [ %2305, %2302 ]
  %2311 = sub i32 %2155, %2307
  %2312 = tail call i32 @llvm.smin.i32(i32 %2311, i32 0)
  %2313 = sub i32 %2311, %2312
  %2314 = zext i32 %2313 to i64
  %2315 = add nuw nsw i64 %2314, 1
  %2316 = add nsw i64 %2308, -1
  %2317 = icmp ult i32 %2313, 31
  br i1 %2317, label %2353, label %2318

2318:                                             ; preds = %2306
  %2319 = and i64 %2315, 8589934560
  %2320 = sub i64 %2309, %2319
  br label %2321

2321:                                             ; preds = %2321, %2318
  %2322 = phi i64 [ 0, %2318 ], [ %2345, %2321 ]
  %2323 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2318 ], [ %2341, %2321 ]
  %2324 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2318 ], [ %2342, %2321 ]
  %2325 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2318 ], [ %2343, %2321 ]
  %2326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2318 ], [ %2344, %2321 ]
  %2327 = sub i64 %2309, %2322
  %2328 = getelementptr inbounds i32, ptr %11, i64 %2327
  %2329 = getelementptr inbounds i32, ptr %2328, i64 -7
  %2330 = load <8 x i32>, ptr %2329, align 4, !tbaa !5
  %2331 = shufflevector <8 x i32> %2330, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2332 = getelementptr inbounds i32, ptr %2328, i64 -15
  %2333 = load <8 x i32>, ptr %2332, align 4, !tbaa !5
  %2334 = shufflevector <8 x i32> %2333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2335 = getelementptr inbounds i32, ptr %2328, i64 -23
  %2336 = load <8 x i32>, ptr %2335, align 4, !tbaa !5
  %2337 = shufflevector <8 x i32> %2336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2338 = getelementptr inbounds i32, ptr %2328, i64 -31
  %2339 = load <8 x i32>, ptr %2338, align 4, !tbaa !5
  %2340 = shufflevector <8 x i32> %2339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2341 = mul <8 x i32> %2331, %2323
  %2342 = mul <8 x i32> %2334, %2324
  %2343 = mul <8 x i32> %2337, %2325
  %2344 = mul <8 x i32> %2340, %2326
  %2345 = add nuw i64 %2322, 32
  %2346 = icmp eq i64 %2345, %2319
  br i1 %2346, label %2347, label %2321, !llvm.loop !95

2347:                                             ; preds = %2321
  %2348 = mul <8 x i32> %2342, %2341
  %2349 = mul <8 x i32> %2343, %2348
  %2350 = mul <8 x i32> %2344, %2349
  %2351 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2350)
  %2352 = icmp eq i64 %2315, %2319
  br i1 %2352, label %2365, label %2353

2353:                                             ; preds = %2306, %2347
  %2354 = phi i64 [ %2309, %2306 ], [ %2320, %2347 ]
  %2355 = phi i32 [ 1, %2306 ], [ %2351, %2347 ]
  br label %2356

2356:                                             ; preds = %2353, %2356
  %2357 = phi i64 [ %2362, %2356 ], [ %2354, %2353 ]
  %2358 = phi i32 [ %2361, %2356 ], [ %2355, %2353 ]
  %2359 = getelementptr inbounds i32, ptr %11, i64 %2357
  %2360 = load i32, ptr %2359, align 4, !tbaa !5
  %2361 = mul nsw i32 %2360, %2358
  %2362 = add nsw i64 %2357, -1
  %2363 = trunc i64 %2357 to i32
  %2364 = icmp sgt i32 %2363, 0
  br i1 %2364, label %2356, label %2365, !llvm.loop !96

2365:                                             ; preds = %2356, %2347
  %2366 = phi i32 [ %2351, %2347 ], [ %2361, %2356 ]
  %2367 = and i64 %2316, 4294967295
  %2368 = getelementptr inbounds i32, ptr %6, i64 %2367
  %2369 = load i32, ptr %2368, align 4, !tbaa !5
  %2370 = mul nsw i32 %2369, %2366
  %2371 = add nsw i32 %2370, %2310
  %2372 = icmp sgt i64 %2308, 2
  %2373 = add nsw i64 %2309, -1
  %2374 = add i32 %2307, 1
  br i1 %2372, label %2306, label %2375, !llvm.loop !97

2375:                                             ; preds = %2365, %2302
  %2376 = phi i32 [ %2305, %2302 ], [ %2371, %2365 ]
  %2377 = icmp slt i32 %2376, %5
  br i1 %2377, label %2380, label %2378

2378:                                             ; preds = %2375
  %2379 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

2380:                                             ; preds = %2375
  %2381 = sext i32 %2376 to i64
  %2382 = getelementptr inbounds i8, ptr %1835, i64 %2381
  %2383 = load i8, ptr %2382, align 1, !tbaa !11
  %2384 = zext i8 %2383 to i16
  %2385 = mul nuw i16 %2384, %2384
  %2386 = add i16 %2385, %2303
  store i16 %2386, ptr %1837, align 2, !tbaa !78
  %2387 = add nuw nsw i32 %2304, 1
  br i1 %2154, label %2388, label %2438

2388:                                             ; preds = %2380
  %2389 = load i32, ptr %4, align 4, !tbaa !5
  %2390 = load i32, ptr %12, align 4, !tbaa !5
  %2391 = add nsw i32 %2390, -1
  %2392 = icmp slt i32 %2389, %2391
  br i1 %2392, label %2415, label %2393

2393:                                             ; preds = %2388
  %2394 = icmp eq i32 %2389, %2391
  br i1 %2394, label %2395, label %2431

2395:                                             ; preds = %2393
  store i32 0, ptr %4, align 4, !tbaa !5
  %2396 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2396, ptr %6, align 4, !tbaa !5
  br i1 %2159, label %2438, label %2397

2397:                                             ; preds = %2395, %2425
  %2398 = phi i64 [ %2429, %2425 ], [ 1, %2395 ]
  %2399 = getelementptr inbounds i32, ptr %4, i64 %2398
  %2400 = load i32, ptr %2399, align 4, !tbaa !5
  %2401 = getelementptr inbounds i32, ptr %12, i64 %2398
  %2402 = load i32, ptr %2401, align 4, !tbaa !5
  %2403 = add nsw i32 %2402, -1
  %2404 = icmp slt i32 %2400, %2403
  br i1 %2404, label %2405, label %2423

2405:                                             ; preds = %2397
  br i1 %2392, label %2415, label %2406

2406:                                             ; preds = %2405
  %2407 = shl i64 %2398, 32
  %2408 = add i64 %2407, -4294967296
  %2409 = ashr exact i64 %2408, 32
  %2410 = getelementptr inbounds i32, ptr %7, i64 %2409
  %2411 = load i32, ptr %2410, align 4, !tbaa !5
  %2412 = getelementptr inbounds i32, ptr %6, i64 %2398
  %2413 = load i32, ptr %2412, align 4, !tbaa !5
  %2414 = add nsw i32 %2413, %2411
  store i32 %2414, ptr %2412, align 4, !tbaa !5
  br label %2433

2415:                                             ; preds = %2388, %2405
  %2416 = phi i32 [ %2400, %2405 ], [ %2389, %2388 ]
  %2417 = phi ptr [ %2399, %2405 ], [ %4, %2388 ]
  %2418 = phi i64 [ %2398, %2405 ], [ 0, %2388 ]
  %2419 = add nsw i32 %2416, 1
  store i32 %2419, ptr %2417, align 4, !tbaa !5
  %2420 = getelementptr inbounds i32, ptr %7, i64 %2418
  %2421 = load i32, ptr %2420, align 4, !tbaa !5
  %2422 = getelementptr inbounds i32, ptr %6, i64 %2418
  br label %2433

2423:                                             ; preds = %2397
  %2424 = icmp eq i32 %2400, %2403
  br i1 %2424, label %2425, label %2431

2425:                                             ; preds = %2423
  store i32 0, ptr %2399, align 4, !tbaa !5
  %2426 = getelementptr inbounds i32, ptr %8, i64 %2398
  %2427 = load i32, ptr %2426, align 4, !tbaa !5
  %2428 = getelementptr inbounds i32, ptr %6, i64 %2398
  store i32 %2427, ptr %2428, align 4, !tbaa !5
  %2429 = add nuw nsw i64 %2398, 1
  %2430 = icmp eq i64 %2429, %2157
  br i1 %2430, label %2438, label %2397, !llvm.loop !98

2431:                                             ; preds = %2393, %2423
  %2432 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

2433:                                             ; preds = %2406, %2415
  %2434 = phi ptr [ %2422, %2415 ], [ %2399, %2406 ]
  %2435 = phi i32 [ %2421, %2415 ], [ 1, %2406 ]
  %2436 = load i32, ptr %2434, align 4, !tbaa !5
  %2437 = add nsw i32 %2436, %2435
  store i32 %2437, ptr %2434, align 4, !tbaa !5
  br label %2438

2438:                                             ; preds = %2425, %2433, %2395, %2380
  %2439 = icmp eq i32 %2387, %5
  br i1 %2439, label %5473, label %2302, !llvm.loop !99

2440:                                             ; preds = %1843
  %2441 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 69, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5473

2442:                                             ; preds = %18
  %2443 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2444 = load ptr, ptr %2443, align 8, !tbaa !9
  %2445 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2446 = load ptr, ptr %2445, align 8, !tbaa !9
  store i32 0, ptr %2446, align 4, !tbaa !5
  %2447 = icmp eq i32 %13, 0
  br i1 %2447, label %2448, label %2452

2448:                                             ; preds = %2442
  %2449 = load i8, ptr %2444, align 1, !tbaa !11
  %2450 = zext i8 %2449 to i32
  %2451 = mul nuw nsw i32 %2450, %2450
  store i32 %2451, ptr %2446, align 4, !tbaa !5
  br label %5473

2452:                                             ; preds = %2442
  switch i32 %1, label %3047 [
    i32 1, label %2453
    i32 0, label %2753
  ]

2453:                                             ; preds = %2452
  %2454 = getelementptr inbounds i32, ptr %3, i64 %19
  %2455 = load i32, ptr %2454, align 4, !tbaa !5
  %2456 = icmp eq i32 %2455, 0
  %2457 = icmp sgt i32 %5, 0
  br i1 %2456, label %2467, label %2458

2458:                                             ; preds = %2453
  br i1 %2457, label %2459, label %5473

2459:                                             ; preds = %2458
  %2460 = icmp sgt i32 %13, 1
  %2461 = icmp sgt i32 %13, 0
  %2462 = add i32 %13, -2
  %2463 = zext i32 %2462 to i64
  %2464 = zext i32 %13 to i64
  %2465 = add nuw i32 %5, 1
  %2466 = icmp eq i32 %13, 1
  br label %2614

2467:                                             ; preds = %2453
  br i1 %2457, label %2468, label %5473

2468:                                             ; preds = %2467
  %2469 = icmp sgt i32 %13, 1
  %2470 = icmp sgt i32 %13, 0
  %2471 = add i32 %13, -2
  %2472 = zext i32 %2471 to i64
  %2473 = zext i32 %13 to i64
  %2474 = add nuw i32 %5, 1
  %2475 = icmp eq i32 %13, 1
  br label %2476

2476:                                             ; preds = %2468, %2612
  %2477 = phi i32 [ 0, %2468 ], [ %2564, %2612 ]
  %2478 = phi double [ 0.000000e+00, %2468 ], [ %2563, %2612 ]
  %2479 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2469, label %2480, label %2549

2480:                                             ; preds = %2476, %2539
  %2481 = phi i32 [ %2548, %2539 ], [ 0, %2476 ]
  %2482 = phi i64 [ %2490, %2539 ], [ %2473, %2476 ]
  %2483 = phi i64 [ %2547, %2539 ], [ %2472, %2476 ]
  %2484 = phi i32 [ %2545, %2539 ], [ %2479, %2476 ]
  %2485 = sub i32 %2471, %2481
  %2486 = tail call i32 @llvm.smin.i32(i32 %2485, i32 0)
  %2487 = sub i32 %2485, %2486
  %2488 = zext i32 %2487 to i64
  %2489 = add nuw nsw i64 %2488, 1
  %2490 = add nsw i64 %2482, -1
  %2491 = icmp ult i32 %2487, 31
  br i1 %2491, label %2527, label %2492

2492:                                             ; preds = %2480
  %2493 = and i64 %2489, 8589934560
  %2494 = sub i64 %2483, %2493
  br label %2495

2495:                                             ; preds = %2495, %2492
  %2496 = phi i64 [ 0, %2492 ], [ %2519, %2495 ]
  %2497 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2492 ], [ %2515, %2495 ]
  %2498 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2492 ], [ %2516, %2495 ]
  %2499 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2492 ], [ %2517, %2495 ]
  %2500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2492 ], [ %2518, %2495 ]
  %2501 = sub i64 %2483, %2496
  %2502 = getelementptr inbounds i32, ptr %9, i64 %2501
  %2503 = getelementptr inbounds i32, ptr %2502, i64 -7
  %2504 = load <8 x i32>, ptr %2503, align 4, !tbaa !5
  %2505 = shufflevector <8 x i32> %2504, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2506 = getelementptr inbounds i32, ptr %2502, i64 -15
  %2507 = load <8 x i32>, ptr %2506, align 4, !tbaa !5
  %2508 = shufflevector <8 x i32> %2507, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2509 = getelementptr inbounds i32, ptr %2502, i64 -23
  %2510 = load <8 x i32>, ptr %2509, align 4, !tbaa !5
  %2511 = shufflevector <8 x i32> %2510, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2512 = getelementptr inbounds i32, ptr %2502, i64 -31
  %2513 = load <8 x i32>, ptr %2512, align 4, !tbaa !5
  %2514 = shufflevector <8 x i32> %2513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2515 = mul <8 x i32> %2505, %2497
  %2516 = mul <8 x i32> %2508, %2498
  %2517 = mul <8 x i32> %2511, %2499
  %2518 = mul <8 x i32> %2514, %2500
  %2519 = add nuw i64 %2496, 32
  %2520 = icmp eq i64 %2519, %2493
  br i1 %2520, label %2521, label %2495, !llvm.loop !100

2521:                                             ; preds = %2495
  %2522 = mul <8 x i32> %2516, %2515
  %2523 = mul <8 x i32> %2517, %2522
  %2524 = mul <8 x i32> %2518, %2523
  %2525 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2524)
  %2526 = icmp eq i64 %2489, %2493
  br i1 %2526, label %2539, label %2527

2527:                                             ; preds = %2480, %2521
  %2528 = phi i64 [ %2483, %2480 ], [ %2494, %2521 ]
  %2529 = phi i32 [ 1, %2480 ], [ %2525, %2521 ]
  br label %2530

2530:                                             ; preds = %2527, %2530
  %2531 = phi i64 [ %2536, %2530 ], [ %2528, %2527 ]
  %2532 = phi i32 [ %2535, %2530 ], [ %2529, %2527 ]
  %2533 = getelementptr inbounds i32, ptr %9, i64 %2531
  %2534 = load i32, ptr %2533, align 4, !tbaa !5
  %2535 = mul nsw i32 %2534, %2532
  %2536 = add nsw i64 %2531, -1
  %2537 = trunc i64 %2531 to i32
  %2538 = icmp sgt i32 %2537, 0
  br i1 %2538, label %2530, label %2539, !llvm.loop !101

2539:                                             ; preds = %2530, %2521
  %2540 = phi i32 [ %2525, %2521 ], [ %2535, %2530 ]
  %2541 = and i64 %2490, 4294967295
  %2542 = getelementptr inbounds i32, ptr %6, i64 %2541
  %2543 = load i32, ptr %2542, align 4, !tbaa !5
  %2544 = mul nsw i32 %2543, %2540
  %2545 = add nsw i32 %2544, %2484
  %2546 = icmp sgt i64 %2482, 2
  %2547 = add nsw i64 %2483, -1
  %2548 = add i32 %2481, 1
  br i1 %2546, label %2480, label %2549, !llvm.loop !102

2549:                                             ; preds = %2539, %2476
  %2550 = phi i32 [ %2479, %2476 ], [ %2545, %2539 ]
  %2551 = sext i32 %2550 to i64
  %2552 = getelementptr inbounds double, ptr %2, i64 %2551
  %2553 = load double, ptr %2552, align 8, !tbaa !18
  %2554 = getelementptr inbounds i8, ptr %2444, i64 %2551
  %2555 = load i8, ptr %2554, align 1, !tbaa !11
  %2556 = load i32, ptr %2446, align 4, !tbaa !5
  %2557 = sitofp i32 %2556 to double
  %2558 = uitofp i8 %2555 to double
  %2559 = fmul fast double %2553, %2558
  %2560 = fmul fast double %2559, %2559
  %2561 = fadd fast double %2560, %2557
  %2562 = fptosi double %2561 to i32
  store i32 %2562, ptr %2446, align 4, !tbaa !5
  %2563 = fadd fast double %2553, %2478
  %2564 = add nuw nsw i32 %2477, 1
  br i1 %2470, label %2565, label %2612

2565:                                             ; preds = %2549
  %2566 = load i32, ptr %4, align 4, !tbaa !5
  %2567 = load i32, ptr %12, align 4, !tbaa !5
  %2568 = add nsw i32 %2567, -1
  %2569 = icmp slt i32 %2566, %2568
  br i1 %2569, label %2589, label %2570

2570:                                             ; preds = %2565
  %2571 = icmp eq i32 %2566, %2568
  br i1 %2571, label %2572, label %2605

2572:                                             ; preds = %2570
  store i32 0, ptr %4, align 4, !tbaa !5
  %2573 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2573, ptr %6, align 4, !tbaa !5
  br i1 %2475, label %2612, label %2574

2574:                                             ; preds = %2572, %2599
  %2575 = phi i64 [ %2603, %2599 ], [ 1, %2572 ]
  %2576 = getelementptr inbounds i32, ptr %4, i64 %2575
  %2577 = load i32, ptr %2576, align 4, !tbaa !5
  %2578 = getelementptr inbounds i32, ptr %12, i64 %2575
  %2579 = load i32, ptr %2578, align 4, !tbaa !5
  %2580 = add nsw i32 %2579, -1
  %2581 = icmp slt i32 %2577, %2580
  br i1 %2581, label %2582, label %2597

2582:                                             ; preds = %2574
  br i1 %2569, label %2589, label %2583

2583:                                             ; preds = %2582
  %2584 = getelementptr inbounds i32, ptr %7, i64 %2575
  %2585 = load i32, ptr %2584, align 4, !tbaa !5
  %2586 = getelementptr inbounds i32, ptr %6, i64 %2575
  %2587 = load i32, ptr %2586, align 4, !tbaa !5
  %2588 = add nsw i32 %2587, %2585
  store i32 %2588, ptr %2586, align 4, !tbaa !5
  br label %2607

2589:                                             ; preds = %2565, %2582
  %2590 = phi i32 [ %2577, %2582 ], [ %2566, %2565 ]
  %2591 = phi ptr [ %2576, %2582 ], [ %4, %2565 ]
  %2592 = phi i64 [ %2575, %2582 ], [ 0, %2565 ]
  %2593 = add nsw i32 %2590, 1
  store i32 %2593, ptr %2591, align 4, !tbaa !5
  %2594 = getelementptr inbounds i32, ptr %7, i64 %2592
  %2595 = load i32, ptr %2594, align 4, !tbaa !5
  %2596 = getelementptr inbounds i32, ptr %6, i64 %2592
  br label %2607

2597:                                             ; preds = %2574
  %2598 = icmp eq i32 %2577, %2580
  br i1 %2598, label %2599, label %2605

2599:                                             ; preds = %2597
  store i32 0, ptr %2576, align 4, !tbaa !5
  %2600 = getelementptr inbounds i32, ptr %8, i64 %2575
  %2601 = load i32, ptr %2600, align 4, !tbaa !5
  %2602 = getelementptr inbounds i32, ptr %6, i64 %2575
  store i32 %2601, ptr %2602, align 4, !tbaa !5
  %2603 = add nuw nsw i64 %2575, 1
  %2604 = icmp eq i64 %2603, %2473
  br i1 %2604, label %2612, label %2574, !llvm.loop !103

2605:                                             ; preds = %2570, %2597
  %2606 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

2607:                                             ; preds = %2583, %2589
  %2608 = phi ptr [ %2596, %2589 ], [ %2576, %2583 ]
  %2609 = phi i32 [ %2595, %2589 ], [ 1, %2583 ]
  %2610 = load i32, ptr %2608, align 4, !tbaa !5
  %2611 = add nsw i32 %2610, %2609
  store i32 %2611, ptr %2608, align 4, !tbaa !5
  br label %2612

2612:                                             ; preds = %2599, %2607, %2572, %2549
  %2613 = icmp eq i32 %2564, %5
  br i1 %2613, label %5473, label %2476, !llvm.loop !104

2614:                                             ; preds = %2459, %2751
  %2615 = phi i32 [ 0, %2459 ], [ %2700, %2751 ]
  %2616 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2460, label %2617, label %2686

2617:                                             ; preds = %2614, %2676
  %2618 = phi i32 [ %2685, %2676 ], [ 0, %2614 ]
  %2619 = phi i64 [ %2627, %2676 ], [ %2464, %2614 ]
  %2620 = phi i64 [ %2684, %2676 ], [ %2463, %2614 ]
  %2621 = phi i32 [ %2682, %2676 ], [ %2616, %2614 ]
  %2622 = sub i32 %2462, %2618
  %2623 = tail call i32 @llvm.smin.i32(i32 %2622, i32 0)
  %2624 = sub i32 %2622, %2623
  %2625 = zext i32 %2624 to i64
  %2626 = add nuw nsw i64 %2625, 1
  %2627 = add nsw i64 %2619, -1
  %2628 = icmp ult i32 %2624, 31
  br i1 %2628, label %2664, label %2629

2629:                                             ; preds = %2617
  %2630 = and i64 %2626, 8589934560
  %2631 = sub i64 %2620, %2630
  br label %2632

2632:                                             ; preds = %2632, %2629
  %2633 = phi i64 [ 0, %2629 ], [ %2656, %2632 ]
  %2634 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2629 ], [ %2652, %2632 ]
  %2635 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2629 ], [ %2653, %2632 ]
  %2636 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2629 ], [ %2654, %2632 ]
  %2637 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2629 ], [ %2655, %2632 ]
  %2638 = sub i64 %2620, %2633
  %2639 = getelementptr inbounds i32, ptr %11, i64 %2638
  %2640 = getelementptr inbounds i32, ptr %2639, i64 -7
  %2641 = load <8 x i32>, ptr %2640, align 4, !tbaa !5
  %2642 = shufflevector <8 x i32> %2641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2643 = getelementptr inbounds i32, ptr %2639, i64 -15
  %2644 = load <8 x i32>, ptr %2643, align 4, !tbaa !5
  %2645 = shufflevector <8 x i32> %2644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2646 = getelementptr inbounds i32, ptr %2639, i64 -23
  %2647 = load <8 x i32>, ptr %2646, align 4, !tbaa !5
  %2648 = shufflevector <8 x i32> %2647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2649 = getelementptr inbounds i32, ptr %2639, i64 -31
  %2650 = load <8 x i32>, ptr %2649, align 4, !tbaa !5
  %2651 = shufflevector <8 x i32> %2650, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2652 = mul <8 x i32> %2642, %2634
  %2653 = mul <8 x i32> %2645, %2635
  %2654 = mul <8 x i32> %2648, %2636
  %2655 = mul <8 x i32> %2651, %2637
  %2656 = add nuw i64 %2633, 32
  %2657 = icmp eq i64 %2656, %2630
  br i1 %2657, label %2658, label %2632, !llvm.loop !105

2658:                                             ; preds = %2632
  %2659 = mul <8 x i32> %2653, %2652
  %2660 = mul <8 x i32> %2654, %2659
  %2661 = mul <8 x i32> %2655, %2660
  %2662 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2661)
  %2663 = icmp eq i64 %2626, %2630
  br i1 %2663, label %2676, label %2664

2664:                                             ; preds = %2617, %2658
  %2665 = phi i64 [ %2620, %2617 ], [ %2631, %2658 ]
  %2666 = phi i32 [ 1, %2617 ], [ %2662, %2658 ]
  br label %2667

2667:                                             ; preds = %2664, %2667
  %2668 = phi i64 [ %2673, %2667 ], [ %2665, %2664 ]
  %2669 = phi i32 [ %2672, %2667 ], [ %2666, %2664 ]
  %2670 = getelementptr inbounds i32, ptr %11, i64 %2668
  %2671 = load i32, ptr %2670, align 4, !tbaa !5
  %2672 = mul nsw i32 %2671, %2669
  %2673 = add nsw i64 %2668, -1
  %2674 = trunc i64 %2668 to i32
  %2675 = icmp sgt i32 %2674, 0
  br i1 %2675, label %2667, label %2676, !llvm.loop !106

2676:                                             ; preds = %2667, %2658
  %2677 = phi i32 [ %2662, %2658 ], [ %2672, %2667 ]
  %2678 = and i64 %2627, 4294967295
  %2679 = getelementptr inbounds i32, ptr %6, i64 %2678
  %2680 = load i32, ptr %2679, align 4, !tbaa !5
  %2681 = mul nsw i32 %2680, %2677
  %2682 = add nsw i32 %2681, %2621
  %2683 = icmp sgt i64 %2619, 2
  %2684 = add nsw i64 %2620, -1
  %2685 = add i32 %2618, 1
  br i1 %2683, label %2617, label %2686, !llvm.loop !107

2686:                                             ; preds = %2676, %2614
  %2687 = phi i32 [ %2616, %2614 ], [ %2682, %2676 ]
  %2688 = icmp slt i32 %2687, %5
  br i1 %2688, label %2691, label %2689

2689:                                             ; preds = %2686
  %2690 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

2691:                                             ; preds = %2686
  %2692 = sext i32 %2687 to i64
  %2693 = getelementptr inbounds i8, ptr %2444, i64 %2692
  %2694 = load i8, ptr %2693, align 1, !tbaa !11
  %2695 = load i32, ptr %2446, align 4, !tbaa !5
  %2696 = zext i8 %2694 to i64
  %2697 = mul nuw nsw i64 %2696, %2696
  %2698 = trunc i64 %2697 to i32
  %2699 = add i32 %2695, %2698
  store i32 %2699, ptr %2446, align 4, !tbaa !5
  %2700 = add nuw nsw i32 %2615, 1
  br i1 %2461, label %2701, label %2751

2701:                                             ; preds = %2691
  %2702 = load i32, ptr %4, align 4, !tbaa !5
  %2703 = load i32, ptr %12, align 4, !tbaa !5
  %2704 = add nsw i32 %2703, -1
  %2705 = icmp slt i32 %2702, %2704
  br i1 %2705, label %2728, label %2706

2706:                                             ; preds = %2701
  %2707 = icmp eq i32 %2702, %2704
  br i1 %2707, label %2708, label %2744

2708:                                             ; preds = %2706
  store i32 0, ptr %4, align 4, !tbaa !5
  %2709 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2709, ptr %6, align 4, !tbaa !5
  br i1 %2466, label %2751, label %2710

2710:                                             ; preds = %2708, %2738
  %2711 = phi i64 [ %2742, %2738 ], [ 1, %2708 ]
  %2712 = getelementptr inbounds i32, ptr %4, i64 %2711
  %2713 = load i32, ptr %2712, align 4, !tbaa !5
  %2714 = getelementptr inbounds i32, ptr %12, i64 %2711
  %2715 = load i32, ptr %2714, align 4, !tbaa !5
  %2716 = add nsw i32 %2715, -1
  %2717 = icmp slt i32 %2713, %2716
  br i1 %2717, label %2718, label %2736

2718:                                             ; preds = %2710
  br i1 %2705, label %2728, label %2719

2719:                                             ; preds = %2718
  %2720 = shl i64 %2711, 32
  %2721 = add i64 %2720, -4294967296
  %2722 = ashr exact i64 %2721, 32
  %2723 = getelementptr inbounds i32, ptr %7, i64 %2722
  %2724 = load i32, ptr %2723, align 4, !tbaa !5
  %2725 = getelementptr inbounds i32, ptr %6, i64 %2711
  %2726 = load i32, ptr %2725, align 4, !tbaa !5
  %2727 = add nsw i32 %2726, %2724
  store i32 %2727, ptr %2725, align 4, !tbaa !5
  br label %2746

2728:                                             ; preds = %2701, %2718
  %2729 = phi i32 [ %2713, %2718 ], [ %2702, %2701 ]
  %2730 = phi ptr [ %2712, %2718 ], [ %4, %2701 ]
  %2731 = phi i64 [ %2711, %2718 ], [ 0, %2701 ]
  %2732 = add nsw i32 %2729, 1
  store i32 %2732, ptr %2730, align 4, !tbaa !5
  %2733 = getelementptr inbounds i32, ptr %7, i64 %2731
  %2734 = load i32, ptr %2733, align 4, !tbaa !5
  %2735 = getelementptr inbounds i32, ptr %6, i64 %2731
  br label %2746

2736:                                             ; preds = %2710
  %2737 = icmp eq i32 %2713, %2716
  br i1 %2737, label %2738, label %2744

2738:                                             ; preds = %2736
  store i32 0, ptr %2712, align 4, !tbaa !5
  %2739 = getelementptr inbounds i32, ptr %8, i64 %2711
  %2740 = load i32, ptr %2739, align 4, !tbaa !5
  %2741 = getelementptr inbounds i32, ptr %6, i64 %2711
  store i32 %2740, ptr %2741, align 4, !tbaa !5
  %2742 = add nuw nsw i64 %2711, 1
  %2743 = icmp eq i64 %2742, %2464
  br i1 %2743, label %2751, label %2710, !llvm.loop !108

2744:                                             ; preds = %2706, %2736
  %2745 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

2746:                                             ; preds = %2719, %2728
  %2747 = phi ptr [ %2735, %2728 ], [ %2712, %2719 ]
  %2748 = phi i32 [ %2734, %2728 ], [ 1, %2719 ]
  %2749 = load i32, ptr %2747, align 4, !tbaa !5
  %2750 = add nsw i32 %2749, %2748
  store i32 %2750, ptr %2747, align 4, !tbaa !5
  br label %2751

2751:                                             ; preds = %2738, %2746, %2708, %2691
  %2752 = icmp eq i32 %2700, %5
  br i1 %2752, label %5473, label %2614, !llvm.loop !109

2753:                                             ; preds = %2452
  %2754 = getelementptr inbounds i32, ptr %3, i64 %19
  %2755 = load i32, ptr %2754, align 4, !tbaa !5
  %2756 = icmp eq i32 %2755, 0
  %2757 = icmp sgt i32 %5, 0
  br i1 %2756, label %2767, label %2758

2758:                                             ; preds = %2753
  br i1 %2757, label %2759, label %5473

2759:                                             ; preds = %2758
  %2760 = icmp sgt i32 %13, 1
  %2761 = icmp sgt i32 %13, 0
  %2762 = add i32 %13, -2
  %2763 = zext i32 %2762 to i64
  %2764 = zext i32 %13 to i64
  %2765 = add nuw i32 %5, 1
  %2766 = icmp eq i32 %13, 1
  br label %2909

2767:                                             ; preds = %2753
  br i1 %2757, label %2768, label %5473

2768:                                             ; preds = %2767
  %2769 = icmp sgt i32 %13, 1
  %2770 = icmp sgt i32 %13, 0
  %2771 = add i32 %13, -2
  %2772 = zext i32 %2771 to i64
  %2773 = zext i32 %13 to i64
  %2774 = add nuw i32 %5, 1
  %2775 = icmp eq i32 %13, 1
  br label %2776

2776:                                             ; preds = %2768, %2907
  %2777 = phi i32 [ 0, %2768 ], [ %2859, %2907 ]
  %2778 = phi double [ 0.000000e+00, %2768 ], [ %2858, %2907 ]
  %2779 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2769, label %2780, label %2849

2780:                                             ; preds = %2776, %2839
  %2781 = phi i32 [ %2848, %2839 ], [ 0, %2776 ]
  %2782 = phi i64 [ %2790, %2839 ], [ %2773, %2776 ]
  %2783 = phi i64 [ %2847, %2839 ], [ %2772, %2776 ]
  %2784 = phi i32 [ %2845, %2839 ], [ %2779, %2776 ]
  %2785 = sub i32 %2771, %2781
  %2786 = tail call i32 @llvm.smin.i32(i32 %2785, i32 0)
  %2787 = sub i32 %2785, %2786
  %2788 = zext i32 %2787 to i64
  %2789 = add nuw nsw i64 %2788, 1
  %2790 = add nsw i64 %2782, -1
  %2791 = icmp ult i32 %2787, 31
  br i1 %2791, label %2827, label %2792

2792:                                             ; preds = %2780
  %2793 = and i64 %2789, 8589934560
  %2794 = sub i64 %2783, %2793
  br label %2795

2795:                                             ; preds = %2795, %2792
  %2796 = phi i64 [ 0, %2792 ], [ %2819, %2795 ]
  %2797 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2792 ], [ %2815, %2795 ]
  %2798 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2792 ], [ %2816, %2795 ]
  %2799 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2792 ], [ %2817, %2795 ]
  %2800 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2792 ], [ %2818, %2795 ]
  %2801 = sub i64 %2783, %2796
  %2802 = getelementptr inbounds i32, ptr %9, i64 %2801
  %2803 = getelementptr inbounds i32, ptr %2802, i64 -7
  %2804 = load <8 x i32>, ptr %2803, align 4, !tbaa !5
  %2805 = shufflevector <8 x i32> %2804, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2806 = getelementptr inbounds i32, ptr %2802, i64 -15
  %2807 = load <8 x i32>, ptr %2806, align 4, !tbaa !5
  %2808 = shufflevector <8 x i32> %2807, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2809 = getelementptr inbounds i32, ptr %2802, i64 -23
  %2810 = load <8 x i32>, ptr %2809, align 4, !tbaa !5
  %2811 = shufflevector <8 x i32> %2810, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2812 = getelementptr inbounds i32, ptr %2802, i64 -31
  %2813 = load <8 x i32>, ptr %2812, align 4, !tbaa !5
  %2814 = shufflevector <8 x i32> %2813, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2815 = mul <8 x i32> %2805, %2797
  %2816 = mul <8 x i32> %2808, %2798
  %2817 = mul <8 x i32> %2811, %2799
  %2818 = mul <8 x i32> %2814, %2800
  %2819 = add nuw i64 %2796, 32
  %2820 = icmp eq i64 %2819, %2793
  br i1 %2820, label %2821, label %2795, !llvm.loop !110

2821:                                             ; preds = %2795
  %2822 = mul <8 x i32> %2816, %2815
  %2823 = mul <8 x i32> %2817, %2822
  %2824 = mul <8 x i32> %2818, %2823
  %2825 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2824)
  %2826 = icmp eq i64 %2789, %2793
  br i1 %2826, label %2839, label %2827

2827:                                             ; preds = %2780, %2821
  %2828 = phi i64 [ %2783, %2780 ], [ %2794, %2821 ]
  %2829 = phi i32 [ 1, %2780 ], [ %2825, %2821 ]
  br label %2830

2830:                                             ; preds = %2827, %2830
  %2831 = phi i64 [ %2836, %2830 ], [ %2828, %2827 ]
  %2832 = phi i32 [ %2835, %2830 ], [ %2829, %2827 ]
  %2833 = getelementptr inbounds i32, ptr %9, i64 %2831
  %2834 = load i32, ptr %2833, align 4, !tbaa !5
  %2835 = mul nsw i32 %2834, %2832
  %2836 = add nsw i64 %2831, -1
  %2837 = trunc i64 %2831 to i32
  %2838 = icmp sgt i32 %2837, 0
  br i1 %2838, label %2830, label %2839, !llvm.loop !111

2839:                                             ; preds = %2830, %2821
  %2840 = phi i32 [ %2825, %2821 ], [ %2835, %2830 ]
  %2841 = and i64 %2790, 4294967295
  %2842 = getelementptr inbounds i32, ptr %6, i64 %2841
  %2843 = load i32, ptr %2842, align 4, !tbaa !5
  %2844 = mul nsw i32 %2843, %2840
  %2845 = add nsw i32 %2844, %2784
  %2846 = icmp sgt i64 %2782, 2
  %2847 = add nsw i64 %2783, -1
  %2848 = add i32 %2781, 1
  br i1 %2846, label %2780, label %2849, !llvm.loop !112

2849:                                             ; preds = %2839, %2776
  %2850 = phi i32 [ %2779, %2776 ], [ %2845, %2839 ]
  %2851 = sext i32 %2850 to i64
  %2852 = getelementptr inbounds i8, ptr %2444, i64 %2851
  %2853 = load i8, ptr %2852, align 1, !tbaa !11
  %2854 = zext i8 %2853 to i32
  %2855 = load i32, ptr %2446, align 4, !tbaa !5
  %2856 = mul nuw nsw i32 %2854, %2854
  %2857 = add nsw i32 %2856, %2855
  store i32 %2857, ptr %2446, align 4, !tbaa !5
  %2858 = fadd fast double %2778, 1.000000e+00
  %2859 = add nuw nsw i32 %2777, 1
  br i1 %2770, label %2860, label %2907

2860:                                             ; preds = %2849
  %2861 = load i32, ptr %4, align 4, !tbaa !5
  %2862 = load i32, ptr %12, align 4, !tbaa !5
  %2863 = add nsw i32 %2862, -1
  %2864 = icmp slt i32 %2861, %2863
  br i1 %2864, label %2884, label %2865

2865:                                             ; preds = %2860
  %2866 = icmp eq i32 %2861, %2863
  br i1 %2866, label %2867, label %2900

2867:                                             ; preds = %2865
  store i32 0, ptr %4, align 4, !tbaa !5
  %2868 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2868, ptr %6, align 4, !tbaa !5
  br i1 %2775, label %2907, label %2869

2869:                                             ; preds = %2867, %2894
  %2870 = phi i64 [ %2898, %2894 ], [ 1, %2867 ]
  %2871 = getelementptr inbounds i32, ptr %4, i64 %2870
  %2872 = load i32, ptr %2871, align 4, !tbaa !5
  %2873 = getelementptr inbounds i32, ptr %12, i64 %2870
  %2874 = load i32, ptr %2873, align 4, !tbaa !5
  %2875 = add nsw i32 %2874, -1
  %2876 = icmp slt i32 %2872, %2875
  br i1 %2876, label %2877, label %2892

2877:                                             ; preds = %2869
  br i1 %2864, label %2884, label %2878

2878:                                             ; preds = %2877
  %2879 = getelementptr inbounds i32, ptr %7, i64 %2870
  %2880 = load i32, ptr %2879, align 4, !tbaa !5
  %2881 = getelementptr inbounds i32, ptr %6, i64 %2870
  %2882 = load i32, ptr %2881, align 4, !tbaa !5
  %2883 = add nsw i32 %2882, %2880
  store i32 %2883, ptr %2881, align 4, !tbaa !5
  br label %2902

2884:                                             ; preds = %2860, %2877
  %2885 = phi i32 [ %2872, %2877 ], [ %2861, %2860 ]
  %2886 = phi ptr [ %2871, %2877 ], [ %4, %2860 ]
  %2887 = phi i64 [ %2870, %2877 ], [ 0, %2860 ]
  %2888 = add nsw i32 %2885, 1
  store i32 %2888, ptr %2886, align 4, !tbaa !5
  %2889 = getelementptr inbounds i32, ptr %7, i64 %2887
  %2890 = load i32, ptr %2889, align 4, !tbaa !5
  %2891 = getelementptr inbounds i32, ptr %6, i64 %2887
  br label %2902

2892:                                             ; preds = %2869
  %2893 = icmp eq i32 %2872, %2875
  br i1 %2893, label %2894, label %2900

2894:                                             ; preds = %2892
  store i32 0, ptr %2871, align 4, !tbaa !5
  %2895 = getelementptr inbounds i32, ptr %8, i64 %2870
  %2896 = load i32, ptr %2895, align 4, !tbaa !5
  %2897 = getelementptr inbounds i32, ptr %6, i64 %2870
  store i32 %2896, ptr %2897, align 4, !tbaa !5
  %2898 = add nuw nsw i64 %2870, 1
  %2899 = icmp eq i64 %2898, %2773
  br i1 %2899, label %2907, label %2869, !llvm.loop !113

2900:                                             ; preds = %2865, %2892
  %2901 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

2902:                                             ; preds = %2878, %2884
  %2903 = phi ptr [ %2891, %2884 ], [ %2871, %2878 ]
  %2904 = phi i32 [ %2890, %2884 ], [ 1, %2878 ]
  %2905 = load i32, ptr %2903, align 4, !tbaa !5
  %2906 = add nsw i32 %2905, %2904
  store i32 %2906, ptr %2903, align 4, !tbaa !5
  br label %2907

2907:                                             ; preds = %2894, %2902, %2867, %2849
  %2908 = icmp eq i32 %2859, %5
  br i1 %2908, label %5473, label %2776, !llvm.loop !114

2909:                                             ; preds = %2759, %3045
  %2910 = phi i32 [ 0, %2759 ], [ %2994, %3045 ]
  %2911 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2760, label %2912, label %2981

2912:                                             ; preds = %2909, %2971
  %2913 = phi i32 [ %2980, %2971 ], [ 0, %2909 ]
  %2914 = phi i64 [ %2922, %2971 ], [ %2764, %2909 ]
  %2915 = phi i64 [ %2979, %2971 ], [ %2763, %2909 ]
  %2916 = phi i32 [ %2977, %2971 ], [ %2911, %2909 ]
  %2917 = sub i32 %2762, %2913
  %2918 = tail call i32 @llvm.smin.i32(i32 %2917, i32 0)
  %2919 = sub i32 %2917, %2918
  %2920 = zext i32 %2919 to i64
  %2921 = add nuw nsw i64 %2920, 1
  %2922 = add nsw i64 %2914, -1
  %2923 = icmp ult i32 %2919, 31
  br i1 %2923, label %2959, label %2924

2924:                                             ; preds = %2912
  %2925 = and i64 %2921, 8589934560
  %2926 = sub i64 %2915, %2925
  br label %2927

2927:                                             ; preds = %2927, %2924
  %2928 = phi i64 [ 0, %2924 ], [ %2951, %2927 ]
  %2929 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2924 ], [ %2947, %2927 ]
  %2930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2924 ], [ %2948, %2927 ]
  %2931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2924 ], [ %2949, %2927 ]
  %2932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2924 ], [ %2950, %2927 ]
  %2933 = sub i64 %2915, %2928
  %2934 = getelementptr inbounds i32, ptr %11, i64 %2933
  %2935 = getelementptr inbounds i32, ptr %2934, i64 -7
  %2936 = load <8 x i32>, ptr %2935, align 4, !tbaa !5
  %2937 = shufflevector <8 x i32> %2936, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2938 = getelementptr inbounds i32, ptr %2934, i64 -15
  %2939 = load <8 x i32>, ptr %2938, align 4, !tbaa !5
  %2940 = shufflevector <8 x i32> %2939, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2941 = getelementptr inbounds i32, ptr %2934, i64 -23
  %2942 = load <8 x i32>, ptr %2941, align 4, !tbaa !5
  %2943 = shufflevector <8 x i32> %2942, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2944 = getelementptr inbounds i32, ptr %2934, i64 -31
  %2945 = load <8 x i32>, ptr %2944, align 4, !tbaa !5
  %2946 = shufflevector <8 x i32> %2945, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2947 = mul <8 x i32> %2937, %2929
  %2948 = mul <8 x i32> %2940, %2930
  %2949 = mul <8 x i32> %2943, %2931
  %2950 = mul <8 x i32> %2946, %2932
  %2951 = add nuw i64 %2928, 32
  %2952 = icmp eq i64 %2951, %2925
  br i1 %2952, label %2953, label %2927, !llvm.loop !115

2953:                                             ; preds = %2927
  %2954 = mul <8 x i32> %2948, %2947
  %2955 = mul <8 x i32> %2949, %2954
  %2956 = mul <8 x i32> %2950, %2955
  %2957 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2956)
  %2958 = icmp eq i64 %2921, %2925
  br i1 %2958, label %2971, label %2959

2959:                                             ; preds = %2912, %2953
  %2960 = phi i64 [ %2915, %2912 ], [ %2926, %2953 ]
  %2961 = phi i32 [ 1, %2912 ], [ %2957, %2953 ]
  br label %2962

2962:                                             ; preds = %2959, %2962
  %2963 = phi i64 [ %2968, %2962 ], [ %2960, %2959 ]
  %2964 = phi i32 [ %2967, %2962 ], [ %2961, %2959 ]
  %2965 = getelementptr inbounds i32, ptr %11, i64 %2963
  %2966 = load i32, ptr %2965, align 4, !tbaa !5
  %2967 = mul nsw i32 %2966, %2964
  %2968 = add nsw i64 %2963, -1
  %2969 = trunc i64 %2963 to i32
  %2970 = icmp sgt i32 %2969, 0
  br i1 %2970, label %2962, label %2971, !llvm.loop !116

2971:                                             ; preds = %2962, %2953
  %2972 = phi i32 [ %2957, %2953 ], [ %2967, %2962 ]
  %2973 = and i64 %2922, 4294967295
  %2974 = getelementptr inbounds i32, ptr %6, i64 %2973
  %2975 = load i32, ptr %2974, align 4, !tbaa !5
  %2976 = mul nsw i32 %2975, %2972
  %2977 = add nsw i32 %2976, %2916
  %2978 = icmp sgt i64 %2914, 2
  %2979 = add nsw i64 %2915, -1
  %2980 = add i32 %2913, 1
  br i1 %2978, label %2912, label %2981, !llvm.loop !117

2981:                                             ; preds = %2971, %2909
  %2982 = phi i32 [ %2911, %2909 ], [ %2977, %2971 ]
  %2983 = icmp slt i32 %2982, %5
  br i1 %2983, label %2986, label %2984

2984:                                             ; preds = %2981
  %2985 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

2986:                                             ; preds = %2981
  %2987 = sext i32 %2982 to i64
  %2988 = getelementptr inbounds i8, ptr %2444, i64 %2987
  %2989 = load i8, ptr %2988, align 1, !tbaa !11
  %2990 = zext i8 %2989 to i32
  %2991 = load i32, ptr %2446, align 4, !tbaa !5
  %2992 = mul nuw nsw i32 %2990, %2990
  %2993 = add nsw i32 %2992, %2991
  store i32 %2993, ptr %2446, align 4, !tbaa !5
  %2994 = add nuw nsw i32 %2910, 1
  br i1 %2761, label %2995, label %3045

2995:                                             ; preds = %2986
  %2996 = load i32, ptr %4, align 4, !tbaa !5
  %2997 = load i32, ptr %12, align 4, !tbaa !5
  %2998 = add nsw i32 %2997, -1
  %2999 = icmp slt i32 %2996, %2998
  br i1 %2999, label %3022, label %3000

3000:                                             ; preds = %2995
  %3001 = icmp eq i32 %2996, %2998
  br i1 %3001, label %3002, label %3038

3002:                                             ; preds = %3000
  store i32 0, ptr %4, align 4, !tbaa !5
  %3003 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3003, ptr %6, align 4, !tbaa !5
  br i1 %2766, label %3045, label %3004

3004:                                             ; preds = %3002, %3032
  %3005 = phi i64 [ %3036, %3032 ], [ 1, %3002 ]
  %3006 = getelementptr inbounds i32, ptr %4, i64 %3005
  %3007 = load i32, ptr %3006, align 4, !tbaa !5
  %3008 = getelementptr inbounds i32, ptr %12, i64 %3005
  %3009 = load i32, ptr %3008, align 4, !tbaa !5
  %3010 = add nsw i32 %3009, -1
  %3011 = icmp slt i32 %3007, %3010
  br i1 %3011, label %3012, label %3030

3012:                                             ; preds = %3004
  br i1 %2999, label %3022, label %3013

3013:                                             ; preds = %3012
  %3014 = shl i64 %3005, 32
  %3015 = add i64 %3014, -4294967296
  %3016 = ashr exact i64 %3015, 32
  %3017 = getelementptr inbounds i32, ptr %7, i64 %3016
  %3018 = load i32, ptr %3017, align 4, !tbaa !5
  %3019 = getelementptr inbounds i32, ptr %6, i64 %3005
  %3020 = load i32, ptr %3019, align 4, !tbaa !5
  %3021 = add nsw i32 %3020, %3018
  store i32 %3021, ptr %3019, align 4, !tbaa !5
  br label %3040

3022:                                             ; preds = %2995, %3012
  %3023 = phi i32 [ %3007, %3012 ], [ %2996, %2995 ]
  %3024 = phi ptr [ %3006, %3012 ], [ %4, %2995 ]
  %3025 = phi i64 [ %3005, %3012 ], [ 0, %2995 ]
  %3026 = add nsw i32 %3023, 1
  store i32 %3026, ptr %3024, align 4, !tbaa !5
  %3027 = getelementptr inbounds i32, ptr %7, i64 %3025
  %3028 = load i32, ptr %3027, align 4, !tbaa !5
  %3029 = getelementptr inbounds i32, ptr %6, i64 %3025
  br label %3040

3030:                                             ; preds = %3004
  %3031 = icmp eq i32 %3007, %3010
  br i1 %3031, label %3032, label %3038

3032:                                             ; preds = %3030
  store i32 0, ptr %3006, align 4, !tbaa !5
  %3033 = getelementptr inbounds i32, ptr %8, i64 %3005
  %3034 = load i32, ptr %3033, align 4, !tbaa !5
  %3035 = getelementptr inbounds i32, ptr %6, i64 %3005
  store i32 %3034, ptr %3035, align 4, !tbaa !5
  %3036 = add nuw nsw i64 %3005, 1
  %3037 = icmp eq i64 %3036, %2764
  br i1 %3037, label %3045, label %3004, !llvm.loop !118

3038:                                             ; preds = %3000, %3030
  %3039 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

3040:                                             ; preds = %3013, %3022
  %3041 = phi ptr [ %3029, %3022 ], [ %3006, %3013 ]
  %3042 = phi i32 [ %3028, %3022 ], [ 1, %3013 ]
  %3043 = load i32, ptr %3041, align 4, !tbaa !5
  %3044 = add nsw i32 %3043, %3042
  store i32 %3044, ptr %3041, align 4, !tbaa !5
  br label %3045

3045:                                             ; preds = %3032, %3040, %3002, %2986
  %3046 = icmp eq i32 %2994, %5
  br i1 %3046, label %5473, label %2909, !llvm.loop !119

3047:                                             ; preds = %2452
  %3048 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 74, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5473

3049:                                             ; preds = %18
  %3050 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3051 = load ptr, ptr %3050, align 8, !tbaa !9
  %3052 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3053 = load ptr, ptr %3052, align 8, !tbaa !9
  store i64 0, ptr %3053, align 8, !tbaa !120
  %3054 = icmp eq i32 %13, 0
  br i1 %3054, label %3055, label %3059

3055:                                             ; preds = %3049
  %3056 = load i8, ptr %3051, align 1, !tbaa !11
  %3057 = zext i8 %3056 to i64
  %3058 = mul nuw nsw i64 %3057, %3057
  store i64 %3058, ptr %3053, align 8, !tbaa !120
  br label %5473

3059:                                             ; preds = %3049
  switch i32 %1, label %3655 [
    i32 1, label %3060
    i32 0, label %3361
  ]

3060:                                             ; preds = %3059
  %3061 = getelementptr inbounds i32, ptr %3, i64 %19
  %3062 = load i32, ptr %3061, align 4, !tbaa !5
  %3063 = icmp eq i32 %3062, 0
  %3064 = icmp sgt i32 %5, 0
  br i1 %3063, label %3074, label %3065

3065:                                             ; preds = %3060
  br i1 %3064, label %3066, label %5473

3066:                                             ; preds = %3065
  %3067 = icmp sgt i32 %13, 1
  %3068 = icmp sgt i32 %13, 0
  %3069 = add i32 %13, -2
  %3070 = zext i32 %3069 to i64
  %3071 = zext i32 %13 to i64
  %3072 = add nuw i32 %5, 1
  %3073 = icmp eq i32 %13, 1
  br label %3221

3074:                                             ; preds = %3060
  br i1 %3064, label %3075, label %5473

3075:                                             ; preds = %3074
  %3076 = icmp sgt i32 %13, 1
  %3077 = icmp sgt i32 %13, 0
  %3078 = add i32 %13, -2
  %3079 = zext i32 %3078 to i64
  %3080 = zext i32 %13 to i64
  %3081 = add nuw i32 %5, 1
  %3082 = icmp eq i32 %13, 1
  br label %3083

3083:                                             ; preds = %3075, %3219
  %3084 = phi i64 [ 0, %3075 ], [ %3169, %3219 ]
  %3085 = phi i32 [ 0, %3075 ], [ %3171, %3219 ]
  %3086 = phi double [ 0.000000e+00, %3075 ], [ %3170, %3219 ]
  %3087 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3076, label %3088, label %3157

3088:                                             ; preds = %3083, %3147
  %3089 = phi i32 [ %3156, %3147 ], [ 0, %3083 ]
  %3090 = phi i64 [ %3098, %3147 ], [ %3080, %3083 ]
  %3091 = phi i64 [ %3155, %3147 ], [ %3079, %3083 ]
  %3092 = phi i32 [ %3153, %3147 ], [ %3087, %3083 ]
  %3093 = sub i32 %3078, %3089
  %3094 = tail call i32 @llvm.smin.i32(i32 %3093, i32 0)
  %3095 = sub i32 %3093, %3094
  %3096 = zext i32 %3095 to i64
  %3097 = add nuw nsw i64 %3096, 1
  %3098 = add nsw i64 %3090, -1
  %3099 = icmp ult i32 %3095, 31
  br i1 %3099, label %3135, label %3100

3100:                                             ; preds = %3088
  %3101 = and i64 %3097, 8589934560
  %3102 = sub i64 %3091, %3101
  br label %3103

3103:                                             ; preds = %3103, %3100
  %3104 = phi i64 [ 0, %3100 ], [ %3127, %3103 ]
  %3105 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3100 ], [ %3123, %3103 ]
  %3106 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3100 ], [ %3124, %3103 ]
  %3107 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3100 ], [ %3125, %3103 ]
  %3108 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3100 ], [ %3126, %3103 ]
  %3109 = sub i64 %3091, %3104
  %3110 = getelementptr inbounds i32, ptr %9, i64 %3109
  %3111 = getelementptr inbounds i32, ptr %3110, i64 -7
  %3112 = load <8 x i32>, ptr %3111, align 4, !tbaa !5
  %3113 = shufflevector <8 x i32> %3112, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3114 = getelementptr inbounds i32, ptr %3110, i64 -15
  %3115 = load <8 x i32>, ptr %3114, align 4, !tbaa !5
  %3116 = shufflevector <8 x i32> %3115, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3117 = getelementptr inbounds i32, ptr %3110, i64 -23
  %3118 = load <8 x i32>, ptr %3117, align 4, !tbaa !5
  %3119 = shufflevector <8 x i32> %3118, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3120 = getelementptr inbounds i32, ptr %3110, i64 -31
  %3121 = load <8 x i32>, ptr %3120, align 4, !tbaa !5
  %3122 = shufflevector <8 x i32> %3121, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3123 = mul <8 x i32> %3113, %3105
  %3124 = mul <8 x i32> %3116, %3106
  %3125 = mul <8 x i32> %3119, %3107
  %3126 = mul <8 x i32> %3122, %3108
  %3127 = add nuw i64 %3104, 32
  %3128 = icmp eq i64 %3127, %3101
  br i1 %3128, label %3129, label %3103, !llvm.loop !122

3129:                                             ; preds = %3103
  %3130 = mul <8 x i32> %3124, %3123
  %3131 = mul <8 x i32> %3125, %3130
  %3132 = mul <8 x i32> %3126, %3131
  %3133 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3132)
  %3134 = icmp eq i64 %3097, %3101
  br i1 %3134, label %3147, label %3135

3135:                                             ; preds = %3088, %3129
  %3136 = phi i64 [ %3091, %3088 ], [ %3102, %3129 ]
  %3137 = phi i32 [ 1, %3088 ], [ %3133, %3129 ]
  br label %3138

3138:                                             ; preds = %3135, %3138
  %3139 = phi i64 [ %3144, %3138 ], [ %3136, %3135 ]
  %3140 = phi i32 [ %3143, %3138 ], [ %3137, %3135 ]
  %3141 = getelementptr inbounds i32, ptr %9, i64 %3139
  %3142 = load i32, ptr %3141, align 4, !tbaa !5
  %3143 = mul nsw i32 %3142, %3140
  %3144 = add nsw i64 %3139, -1
  %3145 = trunc i64 %3139 to i32
  %3146 = icmp sgt i32 %3145, 0
  br i1 %3146, label %3138, label %3147, !llvm.loop !123

3147:                                             ; preds = %3138, %3129
  %3148 = phi i32 [ %3133, %3129 ], [ %3143, %3138 ]
  %3149 = and i64 %3098, 4294967295
  %3150 = getelementptr inbounds i32, ptr %6, i64 %3149
  %3151 = load i32, ptr %3150, align 4, !tbaa !5
  %3152 = mul nsw i32 %3151, %3148
  %3153 = add nsw i32 %3152, %3092
  %3154 = icmp sgt i64 %3090, 2
  %3155 = add nsw i64 %3091, -1
  %3156 = add i32 %3089, 1
  br i1 %3154, label %3088, label %3157, !llvm.loop !124

3157:                                             ; preds = %3147, %3083
  %3158 = phi i32 [ %3087, %3083 ], [ %3153, %3147 ]
  %3159 = sext i32 %3158 to i64
  %3160 = getelementptr inbounds double, ptr %2, i64 %3159
  %3161 = load double, ptr %3160, align 8, !tbaa !18
  %3162 = getelementptr inbounds i8, ptr %3051, i64 %3159
  %3163 = load i8, ptr %3162, align 1, !tbaa !11
  %3164 = sitofp i64 %3084 to double
  %3165 = uitofp i8 %3163 to double
  %3166 = fmul fast double %3161, %3165
  %3167 = fmul fast double %3166, %3166
  %3168 = fadd fast double %3167, %3164
  %3169 = fptosi double %3168 to i64
  store i64 %3169, ptr %3053, align 8, !tbaa !120
  %3170 = fadd fast double %3161, %3086
  %3171 = add nuw nsw i32 %3085, 1
  br i1 %3077, label %3172, label %3219

3172:                                             ; preds = %3157
  %3173 = load i32, ptr %4, align 4, !tbaa !5
  %3174 = load i32, ptr %12, align 4, !tbaa !5
  %3175 = add nsw i32 %3174, -1
  %3176 = icmp slt i32 %3173, %3175
  br i1 %3176, label %3196, label %3177

3177:                                             ; preds = %3172
  %3178 = icmp eq i32 %3173, %3175
  br i1 %3178, label %3179, label %3212

3179:                                             ; preds = %3177
  store i32 0, ptr %4, align 4, !tbaa !5
  %3180 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3180, ptr %6, align 4, !tbaa !5
  br i1 %3082, label %3219, label %3181

3181:                                             ; preds = %3179, %3206
  %3182 = phi i64 [ %3210, %3206 ], [ 1, %3179 ]
  %3183 = getelementptr inbounds i32, ptr %4, i64 %3182
  %3184 = load i32, ptr %3183, align 4, !tbaa !5
  %3185 = getelementptr inbounds i32, ptr %12, i64 %3182
  %3186 = load i32, ptr %3185, align 4, !tbaa !5
  %3187 = add nsw i32 %3186, -1
  %3188 = icmp slt i32 %3184, %3187
  br i1 %3188, label %3189, label %3204

3189:                                             ; preds = %3181
  br i1 %3176, label %3196, label %3190

3190:                                             ; preds = %3189
  %3191 = getelementptr inbounds i32, ptr %7, i64 %3182
  %3192 = load i32, ptr %3191, align 4, !tbaa !5
  %3193 = getelementptr inbounds i32, ptr %6, i64 %3182
  %3194 = load i32, ptr %3193, align 4, !tbaa !5
  %3195 = add nsw i32 %3194, %3192
  store i32 %3195, ptr %3193, align 4, !tbaa !5
  br label %3214

3196:                                             ; preds = %3172, %3189
  %3197 = phi i32 [ %3184, %3189 ], [ %3173, %3172 ]
  %3198 = phi ptr [ %3183, %3189 ], [ %4, %3172 ]
  %3199 = phi i64 [ %3182, %3189 ], [ 0, %3172 ]
  %3200 = add nsw i32 %3197, 1
  store i32 %3200, ptr %3198, align 4, !tbaa !5
  %3201 = getelementptr inbounds i32, ptr %7, i64 %3199
  %3202 = load i32, ptr %3201, align 4, !tbaa !5
  %3203 = getelementptr inbounds i32, ptr %6, i64 %3199
  br label %3214

3204:                                             ; preds = %3181
  %3205 = icmp eq i32 %3184, %3187
  br i1 %3205, label %3206, label %3212

3206:                                             ; preds = %3204
  store i32 0, ptr %3183, align 4, !tbaa !5
  %3207 = getelementptr inbounds i32, ptr %8, i64 %3182
  %3208 = load i32, ptr %3207, align 4, !tbaa !5
  %3209 = getelementptr inbounds i32, ptr %6, i64 %3182
  store i32 %3208, ptr %3209, align 4, !tbaa !5
  %3210 = add nuw nsw i64 %3182, 1
  %3211 = icmp eq i64 %3210, %3080
  br i1 %3211, label %3219, label %3181, !llvm.loop !125

3212:                                             ; preds = %3177, %3204
  %3213 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

3214:                                             ; preds = %3190, %3196
  %3215 = phi ptr [ %3203, %3196 ], [ %3183, %3190 ]
  %3216 = phi i32 [ %3202, %3196 ], [ 1, %3190 ]
  %3217 = load i32, ptr %3215, align 4, !tbaa !5
  %3218 = add nsw i32 %3217, %3216
  store i32 %3218, ptr %3215, align 4, !tbaa !5
  br label %3219

3219:                                             ; preds = %3206, %3214, %3179, %3157
  %3220 = icmp eq i32 %3171, %5
  br i1 %3220, label %5473, label %3083, !llvm.loop !126

3221:                                             ; preds = %3066, %3359
  %3222 = phi i64 [ 0, %3066 ], [ %3307, %3359 ]
  %3223 = phi i32 [ 0, %3066 ], [ %3308, %3359 ]
  %3224 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3067, label %3225, label %3294

3225:                                             ; preds = %3221, %3284
  %3226 = phi i32 [ %3293, %3284 ], [ 0, %3221 ]
  %3227 = phi i64 [ %3235, %3284 ], [ %3071, %3221 ]
  %3228 = phi i64 [ %3292, %3284 ], [ %3070, %3221 ]
  %3229 = phi i32 [ %3290, %3284 ], [ %3224, %3221 ]
  %3230 = sub i32 %3069, %3226
  %3231 = tail call i32 @llvm.smin.i32(i32 %3230, i32 0)
  %3232 = sub i32 %3230, %3231
  %3233 = zext i32 %3232 to i64
  %3234 = add nuw nsw i64 %3233, 1
  %3235 = add nsw i64 %3227, -1
  %3236 = icmp ult i32 %3232, 31
  br i1 %3236, label %3272, label %3237

3237:                                             ; preds = %3225
  %3238 = and i64 %3234, 8589934560
  %3239 = sub i64 %3228, %3238
  br label %3240

3240:                                             ; preds = %3240, %3237
  %3241 = phi i64 [ 0, %3237 ], [ %3264, %3240 ]
  %3242 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3237 ], [ %3260, %3240 ]
  %3243 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3237 ], [ %3261, %3240 ]
  %3244 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3237 ], [ %3262, %3240 ]
  %3245 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3237 ], [ %3263, %3240 ]
  %3246 = sub i64 %3228, %3241
  %3247 = getelementptr inbounds i32, ptr %11, i64 %3246
  %3248 = getelementptr inbounds i32, ptr %3247, i64 -7
  %3249 = load <8 x i32>, ptr %3248, align 4, !tbaa !5
  %3250 = shufflevector <8 x i32> %3249, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3251 = getelementptr inbounds i32, ptr %3247, i64 -15
  %3252 = load <8 x i32>, ptr %3251, align 4, !tbaa !5
  %3253 = shufflevector <8 x i32> %3252, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3254 = getelementptr inbounds i32, ptr %3247, i64 -23
  %3255 = load <8 x i32>, ptr %3254, align 4, !tbaa !5
  %3256 = shufflevector <8 x i32> %3255, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3257 = getelementptr inbounds i32, ptr %3247, i64 -31
  %3258 = load <8 x i32>, ptr %3257, align 4, !tbaa !5
  %3259 = shufflevector <8 x i32> %3258, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3260 = mul <8 x i32> %3250, %3242
  %3261 = mul <8 x i32> %3253, %3243
  %3262 = mul <8 x i32> %3256, %3244
  %3263 = mul <8 x i32> %3259, %3245
  %3264 = add nuw i64 %3241, 32
  %3265 = icmp eq i64 %3264, %3238
  br i1 %3265, label %3266, label %3240, !llvm.loop !127

3266:                                             ; preds = %3240
  %3267 = mul <8 x i32> %3261, %3260
  %3268 = mul <8 x i32> %3262, %3267
  %3269 = mul <8 x i32> %3263, %3268
  %3270 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3269)
  %3271 = icmp eq i64 %3234, %3238
  br i1 %3271, label %3284, label %3272

3272:                                             ; preds = %3225, %3266
  %3273 = phi i64 [ %3228, %3225 ], [ %3239, %3266 ]
  %3274 = phi i32 [ 1, %3225 ], [ %3270, %3266 ]
  br label %3275

3275:                                             ; preds = %3272, %3275
  %3276 = phi i64 [ %3281, %3275 ], [ %3273, %3272 ]
  %3277 = phi i32 [ %3280, %3275 ], [ %3274, %3272 ]
  %3278 = getelementptr inbounds i32, ptr %11, i64 %3276
  %3279 = load i32, ptr %3278, align 4, !tbaa !5
  %3280 = mul nsw i32 %3279, %3277
  %3281 = add nsw i64 %3276, -1
  %3282 = trunc i64 %3276 to i32
  %3283 = icmp sgt i32 %3282, 0
  br i1 %3283, label %3275, label %3284, !llvm.loop !128

3284:                                             ; preds = %3275, %3266
  %3285 = phi i32 [ %3270, %3266 ], [ %3280, %3275 ]
  %3286 = and i64 %3235, 4294967295
  %3287 = getelementptr inbounds i32, ptr %6, i64 %3286
  %3288 = load i32, ptr %3287, align 4, !tbaa !5
  %3289 = mul nsw i32 %3288, %3285
  %3290 = add nsw i32 %3289, %3229
  %3291 = icmp sgt i64 %3227, 2
  %3292 = add nsw i64 %3228, -1
  %3293 = add i32 %3226, 1
  br i1 %3291, label %3225, label %3294, !llvm.loop !129

3294:                                             ; preds = %3284, %3221
  %3295 = phi i32 [ %3224, %3221 ], [ %3290, %3284 ]
  %3296 = icmp slt i32 %3295, %5
  br i1 %3296, label %3299, label %3297

3297:                                             ; preds = %3294
  %3298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

3299:                                             ; preds = %3294
  %3300 = sext i32 %3295 to i64
  %3301 = getelementptr inbounds i8, ptr %3051, i64 %3300
  %3302 = load i8, ptr %3301, align 1, !tbaa !11
  %3303 = sitofp i64 %3222 to double
  %3304 = uitofp i8 %3302 to double
  %3305 = fmul fast double %3304, %3304
  %3306 = fadd fast double %3305, %3303
  %3307 = fptosi double %3306 to i64
  store i64 %3307, ptr %3053, align 8, !tbaa !120
  %3308 = add nuw nsw i32 %3223, 1
  br i1 %3068, label %3309, label %3359

3309:                                             ; preds = %3299
  %3310 = load i32, ptr %4, align 4, !tbaa !5
  %3311 = load i32, ptr %12, align 4, !tbaa !5
  %3312 = add nsw i32 %3311, -1
  %3313 = icmp slt i32 %3310, %3312
  br i1 %3313, label %3336, label %3314

3314:                                             ; preds = %3309
  %3315 = icmp eq i32 %3310, %3312
  br i1 %3315, label %3316, label %3352

3316:                                             ; preds = %3314
  store i32 0, ptr %4, align 4, !tbaa !5
  %3317 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3317, ptr %6, align 4, !tbaa !5
  br i1 %3073, label %3359, label %3318

3318:                                             ; preds = %3316, %3346
  %3319 = phi i64 [ %3350, %3346 ], [ 1, %3316 ]
  %3320 = getelementptr inbounds i32, ptr %4, i64 %3319
  %3321 = load i32, ptr %3320, align 4, !tbaa !5
  %3322 = getelementptr inbounds i32, ptr %12, i64 %3319
  %3323 = load i32, ptr %3322, align 4, !tbaa !5
  %3324 = add nsw i32 %3323, -1
  %3325 = icmp slt i32 %3321, %3324
  br i1 %3325, label %3326, label %3344

3326:                                             ; preds = %3318
  br i1 %3313, label %3336, label %3327

3327:                                             ; preds = %3326
  %3328 = shl i64 %3319, 32
  %3329 = add i64 %3328, -4294967296
  %3330 = ashr exact i64 %3329, 32
  %3331 = getelementptr inbounds i32, ptr %7, i64 %3330
  %3332 = load i32, ptr %3331, align 4, !tbaa !5
  %3333 = getelementptr inbounds i32, ptr %6, i64 %3319
  %3334 = load i32, ptr %3333, align 4, !tbaa !5
  %3335 = add nsw i32 %3334, %3332
  store i32 %3335, ptr %3333, align 4, !tbaa !5
  br label %3354

3336:                                             ; preds = %3309, %3326
  %3337 = phi i32 [ %3321, %3326 ], [ %3310, %3309 ]
  %3338 = phi ptr [ %3320, %3326 ], [ %4, %3309 ]
  %3339 = phi i64 [ %3319, %3326 ], [ 0, %3309 ]
  %3340 = add nsw i32 %3337, 1
  store i32 %3340, ptr %3338, align 4, !tbaa !5
  %3341 = getelementptr inbounds i32, ptr %7, i64 %3339
  %3342 = load i32, ptr %3341, align 4, !tbaa !5
  %3343 = getelementptr inbounds i32, ptr %6, i64 %3339
  br label %3354

3344:                                             ; preds = %3318
  %3345 = icmp eq i32 %3321, %3324
  br i1 %3345, label %3346, label %3352

3346:                                             ; preds = %3344
  store i32 0, ptr %3320, align 4, !tbaa !5
  %3347 = getelementptr inbounds i32, ptr %8, i64 %3319
  %3348 = load i32, ptr %3347, align 4, !tbaa !5
  %3349 = getelementptr inbounds i32, ptr %6, i64 %3319
  store i32 %3348, ptr %3349, align 4, !tbaa !5
  %3350 = add nuw nsw i64 %3319, 1
  %3351 = icmp eq i64 %3350, %3071
  br i1 %3351, label %3359, label %3318, !llvm.loop !130

3352:                                             ; preds = %3314, %3344
  %3353 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

3354:                                             ; preds = %3327, %3336
  %3355 = phi ptr [ %3343, %3336 ], [ %3320, %3327 ]
  %3356 = phi i32 [ %3342, %3336 ], [ 1, %3327 ]
  %3357 = load i32, ptr %3355, align 4, !tbaa !5
  %3358 = add nsw i32 %3357, %3356
  store i32 %3358, ptr %3355, align 4, !tbaa !5
  br label %3359

3359:                                             ; preds = %3346, %3354, %3316, %3299
  %3360 = icmp eq i32 %3308, %5
  br i1 %3360, label %5473, label %3221, !llvm.loop !131

3361:                                             ; preds = %3059
  %3362 = getelementptr inbounds i32, ptr %3, i64 %19
  %3363 = load i32, ptr %3362, align 4, !tbaa !5
  %3364 = icmp eq i32 %3363, 0
  %3365 = icmp sgt i32 %5, 0
  br i1 %3364, label %3375, label %3366

3366:                                             ; preds = %3361
  br i1 %3365, label %3367, label %5473

3367:                                             ; preds = %3366
  %3368 = icmp sgt i32 %13, 1
  %3369 = icmp sgt i32 %13, 0
  %3370 = add i32 %13, -2
  %3371 = zext i32 %3370 to i64
  %3372 = zext i32 %13 to i64
  %3373 = add nuw i32 %5, 1
  %3374 = icmp eq i32 %13, 1
  br label %3517

3375:                                             ; preds = %3361
  br i1 %3365, label %3376, label %5473

3376:                                             ; preds = %3375
  %3377 = icmp sgt i32 %13, 1
  %3378 = icmp sgt i32 %13, 0
  %3379 = add i32 %13, -2
  %3380 = zext i32 %3379 to i64
  %3381 = zext i32 %13 to i64
  %3382 = add nuw i32 %5, 1
  %3383 = icmp eq i32 %13, 1
  br label %3384

3384:                                             ; preds = %3376, %3515
  %3385 = phi i64 [ 0, %3376 ], [ %3465, %3515 ]
  %3386 = phi i32 [ 0, %3376 ], [ %3467, %3515 ]
  %3387 = phi double [ 0.000000e+00, %3376 ], [ %3466, %3515 ]
  %3388 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3377, label %3389, label %3458

3389:                                             ; preds = %3384, %3448
  %3390 = phi i32 [ %3457, %3448 ], [ 0, %3384 ]
  %3391 = phi i64 [ %3399, %3448 ], [ %3381, %3384 ]
  %3392 = phi i64 [ %3456, %3448 ], [ %3380, %3384 ]
  %3393 = phi i32 [ %3454, %3448 ], [ %3388, %3384 ]
  %3394 = sub i32 %3379, %3390
  %3395 = tail call i32 @llvm.smin.i32(i32 %3394, i32 0)
  %3396 = sub i32 %3394, %3395
  %3397 = zext i32 %3396 to i64
  %3398 = add nuw nsw i64 %3397, 1
  %3399 = add nsw i64 %3391, -1
  %3400 = icmp ult i32 %3396, 31
  br i1 %3400, label %3436, label %3401

3401:                                             ; preds = %3389
  %3402 = and i64 %3398, 8589934560
  %3403 = sub i64 %3392, %3402
  br label %3404

3404:                                             ; preds = %3404, %3401
  %3405 = phi i64 [ 0, %3401 ], [ %3428, %3404 ]
  %3406 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3401 ], [ %3424, %3404 ]
  %3407 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3401 ], [ %3425, %3404 ]
  %3408 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3401 ], [ %3426, %3404 ]
  %3409 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3401 ], [ %3427, %3404 ]
  %3410 = sub i64 %3392, %3405
  %3411 = getelementptr inbounds i32, ptr %9, i64 %3410
  %3412 = getelementptr inbounds i32, ptr %3411, i64 -7
  %3413 = load <8 x i32>, ptr %3412, align 4, !tbaa !5
  %3414 = shufflevector <8 x i32> %3413, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3415 = getelementptr inbounds i32, ptr %3411, i64 -15
  %3416 = load <8 x i32>, ptr %3415, align 4, !tbaa !5
  %3417 = shufflevector <8 x i32> %3416, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3418 = getelementptr inbounds i32, ptr %3411, i64 -23
  %3419 = load <8 x i32>, ptr %3418, align 4, !tbaa !5
  %3420 = shufflevector <8 x i32> %3419, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3421 = getelementptr inbounds i32, ptr %3411, i64 -31
  %3422 = load <8 x i32>, ptr %3421, align 4, !tbaa !5
  %3423 = shufflevector <8 x i32> %3422, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3424 = mul <8 x i32> %3414, %3406
  %3425 = mul <8 x i32> %3417, %3407
  %3426 = mul <8 x i32> %3420, %3408
  %3427 = mul <8 x i32> %3423, %3409
  %3428 = add nuw i64 %3405, 32
  %3429 = icmp eq i64 %3428, %3402
  br i1 %3429, label %3430, label %3404, !llvm.loop !132

3430:                                             ; preds = %3404
  %3431 = mul <8 x i32> %3425, %3424
  %3432 = mul <8 x i32> %3426, %3431
  %3433 = mul <8 x i32> %3427, %3432
  %3434 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3433)
  %3435 = icmp eq i64 %3398, %3402
  br i1 %3435, label %3448, label %3436

3436:                                             ; preds = %3389, %3430
  %3437 = phi i64 [ %3392, %3389 ], [ %3403, %3430 ]
  %3438 = phi i32 [ 1, %3389 ], [ %3434, %3430 ]
  br label %3439

3439:                                             ; preds = %3436, %3439
  %3440 = phi i64 [ %3445, %3439 ], [ %3437, %3436 ]
  %3441 = phi i32 [ %3444, %3439 ], [ %3438, %3436 ]
  %3442 = getelementptr inbounds i32, ptr %9, i64 %3440
  %3443 = load i32, ptr %3442, align 4, !tbaa !5
  %3444 = mul nsw i32 %3443, %3441
  %3445 = add nsw i64 %3440, -1
  %3446 = trunc i64 %3440 to i32
  %3447 = icmp sgt i32 %3446, 0
  br i1 %3447, label %3439, label %3448, !llvm.loop !133

3448:                                             ; preds = %3439, %3430
  %3449 = phi i32 [ %3434, %3430 ], [ %3444, %3439 ]
  %3450 = and i64 %3399, 4294967295
  %3451 = getelementptr inbounds i32, ptr %6, i64 %3450
  %3452 = load i32, ptr %3451, align 4, !tbaa !5
  %3453 = mul nsw i32 %3452, %3449
  %3454 = add nsw i32 %3453, %3393
  %3455 = icmp sgt i64 %3391, 2
  %3456 = add nsw i64 %3392, -1
  %3457 = add i32 %3390, 1
  br i1 %3455, label %3389, label %3458, !llvm.loop !134

3458:                                             ; preds = %3448, %3384
  %3459 = phi i32 [ %3388, %3384 ], [ %3454, %3448 ]
  %3460 = sext i32 %3459 to i64
  %3461 = getelementptr inbounds i8, ptr %3051, i64 %3460
  %3462 = load i8, ptr %3461, align 1, !tbaa !11
  %3463 = zext i8 %3462 to i64
  %3464 = mul nuw nsw i64 %3463, %3463
  %3465 = add nuw nsw i64 %3464, %3385
  store i64 %3465, ptr %3053, align 8, !tbaa !120
  %3466 = fadd fast double %3387, 1.000000e+00
  %3467 = add nuw nsw i32 %3386, 1
  br i1 %3378, label %3468, label %3515

3468:                                             ; preds = %3458
  %3469 = load i32, ptr %4, align 4, !tbaa !5
  %3470 = load i32, ptr %12, align 4, !tbaa !5
  %3471 = add nsw i32 %3470, -1
  %3472 = icmp slt i32 %3469, %3471
  br i1 %3472, label %3492, label %3473

3473:                                             ; preds = %3468
  %3474 = icmp eq i32 %3469, %3471
  br i1 %3474, label %3475, label %3508

3475:                                             ; preds = %3473
  store i32 0, ptr %4, align 4, !tbaa !5
  %3476 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3476, ptr %6, align 4, !tbaa !5
  br i1 %3383, label %3515, label %3477

3477:                                             ; preds = %3475, %3502
  %3478 = phi i64 [ %3506, %3502 ], [ 1, %3475 ]
  %3479 = getelementptr inbounds i32, ptr %4, i64 %3478
  %3480 = load i32, ptr %3479, align 4, !tbaa !5
  %3481 = getelementptr inbounds i32, ptr %12, i64 %3478
  %3482 = load i32, ptr %3481, align 4, !tbaa !5
  %3483 = add nsw i32 %3482, -1
  %3484 = icmp slt i32 %3480, %3483
  br i1 %3484, label %3485, label %3500

3485:                                             ; preds = %3477
  br i1 %3472, label %3492, label %3486

3486:                                             ; preds = %3485
  %3487 = getelementptr inbounds i32, ptr %7, i64 %3478
  %3488 = load i32, ptr %3487, align 4, !tbaa !5
  %3489 = getelementptr inbounds i32, ptr %6, i64 %3478
  %3490 = load i32, ptr %3489, align 4, !tbaa !5
  %3491 = add nsw i32 %3490, %3488
  store i32 %3491, ptr %3489, align 4, !tbaa !5
  br label %3510

3492:                                             ; preds = %3468, %3485
  %3493 = phi i32 [ %3480, %3485 ], [ %3469, %3468 ]
  %3494 = phi ptr [ %3479, %3485 ], [ %4, %3468 ]
  %3495 = phi i64 [ %3478, %3485 ], [ 0, %3468 ]
  %3496 = add nsw i32 %3493, 1
  store i32 %3496, ptr %3494, align 4, !tbaa !5
  %3497 = getelementptr inbounds i32, ptr %7, i64 %3495
  %3498 = load i32, ptr %3497, align 4, !tbaa !5
  %3499 = getelementptr inbounds i32, ptr %6, i64 %3495
  br label %3510

3500:                                             ; preds = %3477
  %3501 = icmp eq i32 %3480, %3483
  br i1 %3501, label %3502, label %3508

3502:                                             ; preds = %3500
  store i32 0, ptr %3479, align 4, !tbaa !5
  %3503 = getelementptr inbounds i32, ptr %8, i64 %3478
  %3504 = load i32, ptr %3503, align 4, !tbaa !5
  %3505 = getelementptr inbounds i32, ptr %6, i64 %3478
  store i32 %3504, ptr %3505, align 4, !tbaa !5
  %3506 = add nuw nsw i64 %3478, 1
  %3507 = icmp eq i64 %3506, %3381
  br i1 %3507, label %3515, label %3477, !llvm.loop !135

3508:                                             ; preds = %3473, %3500
  %3509 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

3510:                                             ; preds = %3486, %3492
  %3511 = phi ptr [ %3499, %3492 ], [ %3479, %3486 ]
  %3512 = phi i32 [ %3498, %3492 ], [ 1, %3486 ]
  %3513 = load i32, ptr %3511, align 4, !tbaa !5
  %3514 = add nsw i32 %3513, %3512
  store i32 %3514, ptr %3511, align 4, !tbaa !5
  br label %3515

3515:                                             ; preds = %3502, %3510, %3475, %3458
  %3516 = icmp eq i32 %3467, %5
  br i1 %3516, label %5473, label %3384, !llvm.loop !136

3517:                                             ; preds = %3367, %3653
  %3518 = phi i64 [ 0, %3367 ], [ %3601, %3653 ]
  %3519 = phi i32 [ 0, %3367 ], [ %3602, %3653 ]
  %3520 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3368, label %3521, label %3590

3521:                                             ; preds = %3517, %3580
  %3522 = phi i32 [ %3589, %3580 ], [ 0, %3517 ]
  %3523 = phi i64 [ %3531, %3580 ], [ %3372, %3517 ]
  %3524 = phi i64 [ %3588, %3580 ], [ %3371, %3517 ]
  %3525 = phi i32 [ %3586, %3580 ], [ %3520, %3517 ]
  %3526 = sub i32 %3370, %3522
  %3527 = tail call i32 @llvm.smin.i32(i32 %3526, i32 0)
  %3528 = sub i32 %3526, %3527
  %3529 = zext i32 %3528 to i64
  %3530 = add nuw nsw i64 %3529, 1
  %3531 = add nsw i64 %3523, -1
  %3532 = icmp ult i32 %3528, 31
  br i1 %3532, label %3568, label %3533

3533:                                             ; preds = %3521
  %3534 = and i64 %3530, 8589934560
  %3535 = sub i64 %3524, %3534
  br label %3536

3536:                                             ; preds = %3536, %3533
  %3537 = phi i64 [ 0, %3533 ], [ %3560, %3536 ]
  %3538 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3533 ], [ %3556, %3536 ]
  %3539 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3533 ], [ %3557, %3536 ]
  %3540 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3533 ], [ %3558, %3536 ]
  %3541 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3533 ], [ %3559, %3536 ]
  %3542 = sub i64 %3524, %3537
  %3543 = getelementptr inbounds i32, ptr %11, i64 %3542
  %3544 = getelementptr inbounds i32, ptr %3543, i64 -7
  %3545 = load <8 x i32>, ptr %3544, align 4, !tbaa !5
  %3546 = shufflevector <8 x i32> %3545, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3547 = getelementptr inbounds i32, ptr %3543, i64 -15
  %3548 = load <8 x i32>, ptr %3547, align 4, !tbaa !5
  %3549 = shufflevector <8 x i32> %3548, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3550 = getelementptr inbounds i32, ptr %3543, i64 -23
  %3551 = load <8 x i32>, ptr %3550, align 4, !tbaa !5
  %3552 = shufflevector <8 x i32> %3551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3553 = getelementptr inbounds i32, ptr %3543, i64 -31
  %3554 = load <8 x i32>, ptr %3553, align 4, !tbaa !5
  %3555 = shufflevector <8 x i32> %3554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3556 = mul <8 x i32> %3546, %3538
  %3557 = mul <8 x i32> %3549, %3539
  %3558 = mul <8 x i32> %3552, %3540
  %3559 = mul <8 x i32> %3555, %3541
  %3560 = add nuw i64 %3537, 32
  %3561 = icmp eq i64 %3560, %3534
  br i1 %3561, label %3562, label %3536, !llvm.loop !137

3562:                                             ; preds = %3536
  %3563 = mul <8 x i32> %3557, %3556
  %3564 = mul <8 x i32> %3558, %3563
  %3565 = mul <8 x i32> %3559, %3564
  %3566 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3565)
  %3567 = icmp eq i64 %3530, %3534
  br i1 %3567, label %3580, label %3568

3568:                                             ; preds = %3521, %3562
  %3569 = phi i64 [ %3524, %3521 ], [ %3535, %3562 ]
  %3570 = phi i32 [ 1, %3521 ], [ %3566, %3562 ]
  br label %3571

3571:                                             ; preds = %3568, %3571
  %3572 = phi i64 [ %3577, %3571 ], [ %3569, %3568 ]
  %3573 = phi i32 [ %3576, %3571 ], [ %3570, %3568 ]
  %3574 = getelementptr inbounds i32, ptr %11, i64 %3572
  %3575 = load i32, ptr %3574, align 4, !tbaa !5
  %3576 = mul nsw i32 %3575, %3573
  %3577 = add nsw i64 %3572, -1
  %3578 = trunc i64 %3572 to i32
  %3579 = icmp sgt i32 %3578, 0
  br i1 %3579, label %3571, label %3580, !llvm.loop !138

3580:                                             ; preds = %3571, %3562
  %3581 = phi i32 [ %3566, %3562 ], [ %3576, %3571 ]
  %3582 = and i64 %3531, 4294967295
  %3583 = getelementptr inbounds i32, ptr %6, i64 %3582
  %3584 = load i32, ptr %3583, align 4, !tbaa !5
  %3585 = mul nsw i32 %3584, %3581
  %3586 = add nsw i32 %3585, %3525
  %3587 = icmp sgt i64 %3523, 2
  %3588 = add nsw i64 %3524, -1
  %3589 = add i32 %3522, 1
  br i1 %3587, label %3521, label %3590, !llvm.loop !139

3590:                                             ; preds = %3580, %3517
  %3591 = phi i32 [ %3520, %3517 ], [ %3586, %3580 ]
  %3592 = icmp slt i32 %3591, %5
  br i1 %3592, label %3595, label %3593

3593:                                             ; preds = %3590
  %3594 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

3595:                                             ; preds = %3590
  %3596 = sext i32 %3591 to i64
  %3597 = getelementptr inbounds i8, ptr %3051, i64 %3596
  %3598 = load i8, ptr %3597, align 1, !tbaa !11
  %3599 = zext i8 %3598 to i64
  %3600 = mul nuw nsw i64 %3599, %3599
  %3601 = add nuw nsw i64 %3600, %3518
  store i64 %3601, ptr %3053, align 8, !tbaa !120
  %3602 = add nuw nsw i32 %3519, 1
  br i1 %3369, label %3603, label %3653

3603:                                             ; preds = %3595
  %3604 = load i32, ptr %4, align 4, !tbaa !5
  %3605 = load i32, ptr %12, align 4, !tbaa !5
  %3606 = add nsw i32 %3605, -1
  %3607 = icmp slt i32 %3604, %3606
  br i1 %3607, label %3630, label %3608

3608:                                             ; preds = %3603
  %3609 = icmp eq i32 %3604, %3606
  br i1 %3609, label %3610, label %3646

3610:                                             ; preds = %3608
  store i32 0, ptr %4, align 4, !tbaa !5
  %3611 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3611, ptr %6, align 4, !tbaa !5
  br i1 %3374, label %3653, label %3612

3612:                                             ; preds = %3610, %3640
  %3613 = phi i64 [ %3644, %3640 ], [ 1, %3610 ]
  %3614 = getelementptr inbounds i32, ptr %4, i64 %3613
  %3615 = load i32, ptr %3614, align 4, !tbaa !5
  %3616 = getelementptr inbounds i32, ptr %12, i64 %3613
  %3617 = load i32, ptr %3616, align 4, !tbaa !5
  %3618 = add nsw i32 %3617, -1
  %3619 = icmp slt i32 %3615, %3618
  br i1 %3619, label %3620, label %3638

3620:                                             ; preds = %3612
  br i1 %3607, label %3630, label %3621

3621:                                             ; preds = %3620
  %3622 = shl i64 %3613, 32
  %3623 = add i64 %3622, -4294967296
  %3624 = ashr exact i64 %3623, 32
  %3625 = getelementptr inbounds i32, ptr %7, i64 %3624
  %3626 = load i32, ptr %3625, align 4, !tbaa !5
  %3627 = getelementptr inbounds i32, ptr %6, i64 %3613
  %3628 = load i32, ptr %3627, align 4, !tbaa !5
  %3629 = add nsw i32 %3628, %3626
  store i32 %3629, ptr %3627, align 4, !tbaa !5
  br label %3648

3630:                                             ; preds = %3603, %3620
  %3631 = phi i32 [ %3615, %3620 ], [ %3604, %3603 ]
  %3632 = phi ptr [ %3614, %3620 ], [ %4, %3603 ]
  %3633 = phi i64 [ %3613, %3620 ], [ 0, %3603 ]
  %3634 = add nsw i32 %3631, 1
  store i32 %3634, ptr %3632, align 4, !tbaa !5
  %3635 = getelementptr inbounds i32, ptr %7, i64 %3633
  %3636 = load i32, ptr %3635, align 4, !tbaa !5
  %3637 = getelementptr inbounds i32, ptr %6, i64 %3633
  br label %3648

3638:                                             ; preds = %3612
  %3639 = icmp eq i32 %3615, %3618
  br i1 %3639, label %3640, label %3646

3640:                                             ; preds = %3638
  store i32 0, ptr %3614, align 4, !tbaa !5
  %3641 = getelementptr inbounds i32, ptr %8, i64 %3613
  %3642 = load i32, ptr %3641, align 4, !tbaa !5
  %3643 = getelementptr inbounds i32, ptr %6, i64 %3613
  store i32 %3642, ptr %3643, align 4, !tbaa !5
  %3644 = add nuw nsw i64 %3613, 1
  %3645 = icmp eq i64 %3644, %3372
  br i1 %3645, label %3653, label %3612, !llvm.loop !140

3646:                                             ; preds = %3608, %3638
  %3647 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

3648:                                             ; preds = %3621, %3630
  %3649 = phi ptr [ %3637, %3630 ], [ %3614, %3621 ]
  %3650 = phi i32 [ %3636, %3630 ], [ 1, %3621 ]
  %3651 = load i32, ptr %3649, align 4, !tbaa !5
  %3652 = add nsw i32 %3651, %3650
  store i32 %3652, ptr %3649, align 4, !tbaa !5
  br label %3653

3653:                                             ; preds = %3640, %3648, %3610, %3595
  %3654 = icmp eq i32 %3602, %5
  br i1 %3654, label %5473, label %3517, !llvm.loop !141

3655:                                             ; preds = %3059
  %3656 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5473

3657:                                             ; preds = %18
  %3658 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3659 = load ptr, ptr %3658, align 8, !tbaa !9
  %3660 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3661 = load ptr, ptr %3660, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3661, align 8, !tbaa !18
  %3662 = icmp eq i32 %13, 0
  br i1 %3662, label %3663, label %3667

3663:                                             ; preds = %3657
  %3664 = load i8, ptr %3659, align 1, !tbaa !11
  %3665 = uitofp i8 %3664 to double
  %3666 = fmul fast double %3665, %3665
  store double %3666, ptr %3661, align 8, !tbaa !18
  br label %5473

3667:                                             ; preds = %3657
  switch i32 %1, label %4259 [
    i32 1, label %3668
    i32 0, label %3965
  ]

3668:                                             ; preds = %3667
  %3669 = getelementptr inbounds i32, ptr %3, i64 %19
  %3670 = load i32, ptr %3669, align 4, !tbaa !5
  %3671 = icmp eq i32 %3670, 0
  %3672 = icmp sgt i32 %5, 0
  br i1 %3671, label %3682, label %3673

3673:                                             ; preds = %3668
  br i1 %3672, label %3674, label %5473

3674:                                             ; preds = %3673
  %3675 = icmp sgt i32 %13, 1
  %3676 = icmp sgt i32 %13, 0
  %3677 = add i32 %13, -2
  %3678 = zext i32 %3677 to i64
  %3679 = zext i32 %13 to i64
  %3680 = add nuw i32 %5, 1
  %3681 = icmp eq i32 %13, 1
  br label %3827

3682:                                             ; preds = %3668
  br i1 %3672, label %3683, label %5473

3683:                                             ; preds = %3682
  %3684 = icmp sgt i32 %13, 1
  %3685 = icmp sgt i32 %13, 0
  %3686 = add i32 %13, -2
  %3687 = zext i32 %3686 to i64
  %3688 = zext i32 %13 to i64
  %3689 = add nuw i32 %5, 1
  %3690 = icmp eq i32 %13, 1
  br label %3691

3691:                                             ; preds = %3683, %3825
  %3692 = phi double [ 0.000000e+00, %3683 ], [ %3775, %3825 ]
  %3693 = phi i32 [ 0, %3683 ], [ %3777, %3825 ]
  %3694 = phi double [ 0.000000e+00, %3683 ], [ %3776, %3825 ]
  %3695 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3684, label %3696, label %3765

3696:                                             ; preds = %3691, %3755
  %3697 = phi i32 [ %3764, %3755 ], [ 0, %3691 ]
  %3698 = phi i64 [ %3706, %3755 ], [ %3688, %3691 ]
  %3699 = phi i64 [ %3763, %3755 ], [ %3687, %3691 ]
  %3700 = phi i32 [ %3761, %3755 ], [ %3695, %3691 ]
  %3701 = sub i32 %3686, %3697
  %3702 = tail call i32 @llvm.smin.i32(i32 %3701, i32 0)
  %3703 = sub i32 %3701, %3702
  %3704 = zext i32 %3703 to i64
  %3705 = add nuw nsw i64 %3704, 1
  %3706 = add nsw i64 %3698, -1
  %3707 = icmp ult i32 %3703, 31
  br i1 %3707, label %3743, label %3708

3708:                                             ; preds = %3696
  %3709 = and i64 %3705, 8589934560
  %3710 = sub i64 %3699, %3709
  br label %3711

3711:                                             ; preds = %3711, %3708
  %3712 = phi i64 [ 0, %3708 ], [ %3735, %3711 ]
  %3713 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3708 ], [ %3731, %3711 ]
  %3714 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3708 ], [ %3732, %3711 ]
  %3715 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3708 ], [ %3733, %3711 ]
  %3716 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3708 ], [ %3734, %3711 ]
  %3717 = sub i64 %3699, %3712
  %3718 = getelementptr inbounds i32, ptr %9, i64 %3717
  %3719 = getelementptr inbounds i32, ptr %3718, i64 -7
  %3720 = load <8 x i32>, ptr %3719, align 4, !tbaa !5
  %3721 = shufflevector <8 x i32> %3720, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3722 = getelementptr inbounds i32, ptr %3718, i64 -15
  %3723 = load <8 x i32>, ptr %3722, align 4, !tbaa !5
  %3724 = shufflevector <8 x i32> %3723, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3725 = getelementptr inbounds i32, ptr %3718, i64 -23
  %3726 = load <8 x i32>, ptr %3725, align 4, !tbaa !5
  %3727 = shufflevector <8 x i32> %3726, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3728 = getelementptr inbounds i32, ptr %3718, i64 -31
  %3729 = load <8 x i32>, ptr %3728, align 4, !tbaa !5
  %3730 = shufflevector <8 x i32> %3729, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3731 = mul <8 x i32> %3721, %3713
  %3732 = mul <8 x i32> %3724, %3714
  %3733 = mul <8 x i32> %3727, %3715
  %3734 = mul <8 x i32> %3730, %3716
  %3735 = add nuw i64 %3712, 32
  %3736 = icmp eq i64 %3735, %3709
  br i1 %3736, label %3737, label %3711, !llvm.loop !142

3737:                                             ; preds = %3711
  %3738 = mul <8 x i32> %3732, %3731
  %3739 = mul <8 x i32> %3733, %3738
  %3740 = mul <8 x i32> %3734, %3739
  %3741 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3740)
  %3742 = icmp eq i64 %3705, %3709
  br i1 %3742, label %3755, label %3743

3743:                                             ; preds = %3696, %3737
  %3744 = phi i64 [ %3699, %3696 ], [ %3710, %3737 ]
  %3745 = phi i32 [ 1, %3696 ], [ %3741, %3737 ]
  br label %3746

3746:                                             ; preds = %3743, %3746
  %3747 = phi i64 [ %3752, %3746 ], [ %3744, %3743 ]
  %3748 = phi i32 [ %3751, %3746 ], [ %3745, %3743 ]
  %3749 = getelementptr inbounds i32, ptr %9, i64 %3747
  %3750 = load i32, ptr %3749, align 4, !tbaa !5
  %3751 = mul nsw i32 %3750, %3748
  %3752 = add nsw i64 %3747, -1
  %3753 = trunc i64 %3747 to i32
  %3754 = icmp sgt i32 %3753, 0
  br i1 %3754, label %3746, label %3755, !llvm.loop !143

3755:                                             ; preds = %3746, %3737
  %3756 = phi i32 [ %3741, %3737 ], [ %3751, %3746 ]
  %3757 = and i64 %3706, 4294967295
  %3758 = getelementptr inbounds i32, ptr %6, i64 %3757
  %3759 = load i32, ptr %3758, align 4, !tbaa !5
  %3760 = mul nsw i32 %3759, %3756
  %3761 = add nsw i32 %3760, %3700
  %3762 = icmp sgt i64 %3698, 2
  %3763 = add nsw i64 %3699, -1
  %3764 = add i32 %3697, 1
  br i1 %3762, label %3696, label %3765, !llvm.loop !144

3765:                                             ; preds = %3755, %3691
  %3766 = phi i32 [ %3695, %3691 ], [ %3761, %3755 ]
  %3767 = sext i32 %3766 to i64
  %3768 = getelementptr inbounds double, ptr %2, i64 %3767
  %3769 = load double, ptr %3768, align 8, !tbaa !18
  %3770 = getelementptr inbounds i8, ptr %3659, i64 %3767
  %3771 = load i8, ptr %3770, align 1, !tbaa !11
  %3772 = uitofp i8 %3771 to double
  %3773 = fmul fast double %3769, %3772
  %3774 = fmul fast double %3773, %3773
  %3775 = fadd fast double %3774, %3692
  store double %3775, ptr %3661, align 8, !tbaa !18
  %3776 = fadd fast double %3769, %3694
  %3777 = add nuw nsw i32 %3693, 1
  br i1 %3685, label %3778, label %3825

3778:                                             ; preds = %3765
  %3779 = load i32, ptr %4, align 4, !tbaa !5
  %3780 = load i32, ptr %12, align 4, !tbaa !5
  %3781 = add nsw i32 %3780, -1
  %3782 = icmp slt i32 %3779, %3781
  br i1 %3782, label %3802, label %3783

3783:                                             ; preds = %3778
  %3784 = icmp eq i32 %3779, %3781
  br i1 %3784, label %3785, label %3818

3785:                                             ; preds = %3783
  store i32 0, ptr %4, align 4, !tbaa !5
  %3786 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3786, ptr %6, align 4, !tbaa !5
  br i1 %3690, label %3825, label %3787

3787:                                             ; preds = %3785, %3812
  %3788 = phi i64 [ %3816, %3812 ], [ 1, %3785 ]
  %3789 = getelementptr inbounds i32, ptr %4, i64 %3788
  %3790 = load i32, ptr %3789, align 4, !tbaa !5
  %3791 = getelementptr inbounds i32, ptr %12, i64 %3788
  %3792 = load i32, ptr %3791, align 4, !tbaa !5
  %3793 = add nsw i32 %3792, -1
  %3794 = icmp slt i32 %3790, %3793
  br i1 %3794, label %3795, label %3810

3795:                                             ; preds = %3787
  br i1 %3782, label %3802, label %3796

3796:                                             ; preds = %3795
  %3797 = getelementptr inbounds i32, ptr %7, i64 %3788
  %3798 = load i32, ptr %3797, align 4, !tbaa !5
  %3799 = getelementptr inbounds i32, ptr %6, i64 %3788
  %3800 = load i32, ptr %3799, align 4, !tbaa !5
  %3801 = add nsw i32 %3800, %3798
  store i32 %3801, ptr %3799, align 4, !tbaa !5
  br label %3820

3802:                                             ; preds = %3778, %3795
  %3803 = phi i32 [ %3790, %3795 ], [ %3779, %3778 ]
  %3804 = phi ptr [ %3789, %3795 ], [ %4, %3778 ]
  %3805 = phi i64 [ %3788, %3795 ], [ 0, %3778 ]
  %3806 = add nsw i32 %3803, 1
  store i32 %3806, ptr %3804, align 4, !tbaa !5
  %3807 = getelementptr inbounds i32, ptr %7, i64 %3805
  %3808 = load i32, ptr %3807, align 4, !tbaa !5
  %3809 = getelementptr inbounds i32, ptr %6, i64 %3805
  br label %3820

3810:                                             ; preds = %3787
  %3811 = icmp eq i32 %3790, %3793
  br i1 %3811, label %3812, label %3818

3812:                                             ; preds = %3810
  store i32 0, ptr %3789, align 4, !tbaa !5
  %3813 = getelementptr inbounds i32, ptr %8, i64 %3788
  %3814 = load i32, ptr %3813, align 4, !tbaa !5
  %3815 = getelementptr inbounds i32, ptr %6, i64 %3788
  store i32 %3814, ptr %3815, align 4, !tbaa !5
  %3816 = add nuw nsw i64 %3788, 1
  %3817 = icmp eq i64 %3816, %3688
  br i1 %3817, label %3825, label %3787, !llvm.loop !145

3818:                                             ; preds = %3783, %3810
  %3819 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

3820:                                             ; preds = %3796, %3802
  %3821 = phi ptr [ %3809, %3802 ], [ %3789, %3796 ]
  %3822 = phi i32 [ %3808, %3802 ], [ 1, %3796 ]
  %3823 = load i32, ptr %3821, align 4, !tbaa !5
  %3824 = add nsw i32 %3823, %3822
  store i32 %3824, ptr %3821, align 4, !tbaa !5
  br label %3825

3825:                                             ; preds = %3812, %3820, %3785, %3765
  %3826 = icmp eq i32 %3777, %5
  br i1 %3826, label %5473, label %3691, !llvm.loop !146

3827:                                             ; preds = %3674, %3963
  %3828 = phi double [ 0.000000e+00, %3674 ], [ %3911, %3963 ]
  %3829 = phi i32 [ 0, %3674 ], [ %3912, %3963 ]
  %3830 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3675, label %3831, label %3900

3831:                                             ; preds = %3827, %3890
  %3832 = phi i32 [ %3899, %3890 ], [ 0, %3827 ]
  %3833 = phi i64 [ %3841, %3890 ], [ %3679, %3827 ]
  %3834 = phi i64 [ %3898, %3890 ], [ %3678, %3827 ]
  %3835 = phi i32 [ %3896, %3890 ], [ %3830, %3827 ]
  %3836 = sub i32 %3677, %3832
  %3837 = tail call i32 @llvm.smin.i32(i32 %3836, i32 0)
  %3838 = sub i32 %3836, %3837
  %3839 = zext i32 %3838 to i64
  %3840 = add nuw nsw i64 %3839, 1
  %3841 = add nsw i64 %3833, -1
  %3842 = icmp ult i32 %3838, 31
  br i1 %3842, label %3878, label %3843

3843:                                             ; preds = %3831
  %3844 = and i64 %3840, 8589934560
  %3845 = sub i64 %3834, %3844
  br label %3846

3846:                                             ; preds = %3846, %3843
  %3847 = phi i64 [ 0, %3843 ], [ %3870, %3846 ]
  %3848 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3843 ], [ %3866, %3846 ]
  %3849 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3843 ], [ %3867, %3846 ]
  %3850 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3843 ], [ %3868, %3846 ]
  %3851 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3843 ], [ %3869, %3846 ]
  %3852 = sub i64 %3834, %3847
  %3853 = getelementptr inbounds i32, ptr %11, i64 %3852
  %3854 = getelementptr inbounds i32, ptr %3853, i64 -7
  %3855 = load <8 x i32>, ptr %3854, align 4, !tbaa !5
  %3856 = shufflevector <8 x i32> %3855, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3857 = getelementptr inbounds i32, ptr %3853, i64 -15
  %3858 = load <8 x i32>, ptr %3857, align 4, !tbaa !5
  %3859 = shufflevector <8 x i32> %3858, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3860 = getelementptr inbounds i32, ptr %3853, i64 -23
  %3861 = load <8 x i32>, ptr %3860, align 4, !tbaa !5
  %3862 = shufflevector <8 x i32> %3861, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3863 = getelementptr inbounds i32, ptr %3853, i64 -31
  %3864 = load <8 x i32>, ptr %3863, align 4, !tbaa !5
  %3865 = shufflevector <8 x i32> %3864, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3866 = mul <8 x i32> %3856, %3848
  %3867 = mul <8 x i32> %3859, %3849
  %3868 = mul <8 x i32> %3862, %3850
  %3869 = mul <8 x i32> %3865, %3851
  %3870 = add nuw i64 %3847, 32
  %3871 = icmp eq i64 %3870, %3844
  br i1 %3871, label %3872, label %3846, !llvm.loop !147

3872:                                             ; preds = %3846
  %3873 = mul <8 x i32> %3867, %3866
  %3874 = mul <8 x i32> %3868, %3873
  %3875 = mul <8 x i32> %3869, %3874
  %3876 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3875)
  %3877 = icmp eq i64 %3840, %3844
  br i1 %3877, label %3890, label %3878

3878:                                             ; preds = %3831, %3872
  %3879 = phi i64 [ %3834, %3831 ], [ %3845, %3872 ]
  %3880 = phi i32 [ 1, %3831 ], [ %3876, %3872 ]
  br label %3881

3881:                                             ; preds = %3878, %3881
  %3882 = phi i64 [ %3887, %3881 ], [ %3879, %3878 ]
  %3883 = phi i32 [ %3886, %3881 ], [ %3880, %3878 ]
  %3884 = getelementptr inbounds i32, ptr %11, i64 %3882
  %3885 = load i32, ptr %3884, align 4, !tbaa !5
  %3886 = mul nsw i32 %3885, %3883
  %3887 = add nsw i64 %3882, -1
  %3888 = trunc i64 %3882 to i32
  %3889 = icmp sgt i32 %3888, 0
  br i1 %3889, label %3881, label %3890, !llvm.loop !148

3890:                                             ; preds = %3881, %3872
  %3891 = phi i32 [ %3876, %3872 ], [ %3886, %3881 ]
  %3892 = and i64 %3841, 4294967295
  %3893 = getelementptr inbounds i32, ptr %6, i64 %3892
  %3894 = load i32, ptr %3893, align 4, !tbaa !5
  %3895 = mul nsw i32 %3894, %3891
  %3896 = add nsw i32 %3895, %3835
  %3897 = icmp sgt i64 %3833, 2
  %3898 = add nsw i64 %3834, -1
  %3899 = add i32 %3832, 1
  br i1 %3897, label %3831, label %3900, !llvm.loop !149

3900:                                             ; preds = %3890, %3827
  %3901 = phi i32 [ %3830, %3827 ], [ %3896, %3890 ]
  %3902 = icmp slt i32 %3901, %5
  br i1 %3902, label %3905, label %3903

3903:                                             ; preds = %3900
  %3904 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

3905:                                             ; preds = %3900
  %3906 = sext i32 %3901 to i64
  %3907 = getelementptr inbounds i8, ptr %3659, i64 %3906
  %3908 = load i8, ptr %3907, align 1, !tbaa !11
  %3909 = uitofp i8 %3908 to double
  %3910 = fmul fast double %3909, %3909
  %3911 = fadd fast double %3910, %3828
  store double %3911, ptr %3661, align 8, !tbaa !18
  %3912 = add nuw nsw i32 %3829, 1
  br i1 %3676, label %3913, label %3963

3913:                                             ; preds = %3905
  %3914 = load i32, ptr %4, align 4, !tbaa !5
  %3915 = load i32, ptr %12, align 4, !tbaa !5
  %3916 = add nsw i32 %3915, -1
  %3917 = icmp slt i32 %3914, %3916
  br i1 %3917, label %3940, label %3918

3918:                                             ; preds = %3913
  %3919 = icmp eq i32 %3914, %3916
  br i1 %3919, label %3920, label %3956

3920:                                             ; preds = %3918
  store i32 0, ptr %4, align 4, !tbaa !5
  %3921 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3921, ptr %6, align 4, !tbaa !5
  br i1 %3681, label %3963, label %3922

3922:                                             ; preds = %3920, %3950
  %3923 = phi i64 [ %3954, %3950 ], [ 1, %3920 ]
  %3924 = getelementptr inbounds i32, ptr %4, i64 %3923
  %3925 = load i32, ptr %3924, align 4, !tbaa !5
  %3926 = getelementptr inbounds i32, ptr %12, i64 %3923
  %3927 = load i32, ptr %3926, align 4, !tbaa !5
  %3928 = add nsw i32 %3927, -1
  %3929 = icmp slt i32 %3925, %3928
  br i1 %3929, label %3930, label %3948

3930:                                             ; preds = %3922
  br i1 %3917, label %3940, label %3931

3931:                                             ; preds = %3930
  %3932 = shl i64 %3923, 32
  %3933 = add i64 %3932, -4294967296
  %3934 = ashr exact i64 %3933, 32
  %3935 = getelementptr inbounds i32, ptr %7, i64 %3934
  %3936 = load i32, ptr %3935, align 4, !tbaa !5
  %3937 = getelementptr inbounds i32, ptr %6, i64 %3923
  %3938 = load i32, ptr %3937, align 4, !tbaa !5
  %3939 = add nsw i32 %3938, %3936
  store i32 %3939, ptr %3937, align 4, !tbaa !5
  br label %3958

3940:                                             ; preds = %3913, %3930
  %3941 = phi i32 [ %3925, %3930 ], [ %3914, %3913 ]
  %3942 = phi ptr [ %3924, %3930 ], [ %4, %3913 ]
  %3943 = phi i64 [ %3923, %3930 ], [ 0, %3913 ]
  %3944 = add nsw i32 %3941, 1
  store i32 %3944, ptr %3942, align 4, !tbaa !5
  %3945 = getelementptr inbounds i32, ptr %7, i64 %3943
  %3946 = load i32, ptr %3945, align 4, !tbaa !5
  %3947 = getelementptr inbounds i32, ptr %6, i64 %3943
  br label %3958

3948:                                             ; preds = %3922
  %3949 = icmp eq i32 %3925, %3928
  br i1 %3949, label %3950, label %3956

3950:                                             ; preds = %3948
  store i32 0, ptr %3924, align 4, !tbaa !5
  %3951 = getelementptr inbounds i32, ptr %8, i64 %3923
  %3952 = load i32, ptr %3951, align 4, !tbaa !5
  %3953 = getelementptr inbounds i32, ptr %6, i64 %3923
  store i32 %3952, ptr %3953, align 4, !tbaa !5
  %3954 = add nuw nsw i64 %3923, 1
  %3955 = icmp eq i64 %3954, %3679
  br i1 %3955, label %3963, label %3922, !llvm.loop !150

3956:                                             ; preds = %3918, %3948
  %3957 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

3958:                                             ; preds = %3931, %3940
  %3959 = phi ptr [ %3947, %3940 ], [ %3924, %3931 ]
  %3960 = phi i32 [ %3946, %3940 ], [ 1, %3931 ]
  %3961 = load i32, ptr %3959, align 4, !tbaa !5
  %3962 = add nsw i32 %3961, %3960
  store i32 %3962, ptr %3959, align 4, !tbaa !5
  br label %3963

3963:                                             ; preds = %3950, %3958, %3920, %3905
  %3964 = icmp eq i32 %3912, %5
  br i1 %3964, label %5473, label %3827, !llvm.loop !151

3965:                                             ; preds = %3667
  %3966 = getelementptr inbounds i32, ptr %3, i64 %19
  %3967 = load i32, ptr %3966, align 4, !tbaa !5
  %3968 = icmp eq i32 %3967, 0
  %3969 = icmp sgt i32 %5, 0
  br i1 %3968, label %3979, label %3970

3970:                                             ; preds = %3965
  br i1 %3969, label %3971, label %5473

3971:                                             ; preds = %3970
  %3972 = icmp sgt i32 %13, 1
  %3973 = icmp sgt i32 %13, 0
  %3974 = add i32 %13, -2
  %3975 = zext i32 %3974 to i64
  %3976 = zext i32 %13 to i64
  %3977 = add nuw i32 %5, 1
  %3978 = icmp eq i32 %13, 1
  br label %4121

3979:                                             ; preds = %3965
  br i1 %3969, label %3980, label %5473

3980:                                             ; preds = %3979
  %3981 = icmp sgt i32 %13, 1
  %3982 = icmp sgt i32 %13, 0
  %3983 = add i32 %13, -2
  %3984 = zext i32 %3983 to i64
  %3985 = zext i32 %13 to i64
  %3986 = add nuw i32 %5, 1
  %3987 = icmp eq i32 %13, 1
  br label %3988

3988:                                             ; preds = %3980, %4119
  %3989 = phi double [ 0.000000e+00, %3980 ], [ %4069, %4119 ]
  %3990 = phi i32 [ 0, %3980 ], [ %4071, %4119 ]
  %3991 = phi double [ 0.000000e+00, %3980 ], [ %4070, %4119 ]
  %3992 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3981, label %3993, label %4062

3993:                                             ; preds = %3988, %4052
  %3994 = phi i32 [ %4061, %4052 ], [ 0, %3988 ]
  %3995 = phi i64 [ %4003, %4052 ], [ %3985, %3988 ]
  %3996 = phi i64 [ %4060, %4052 ], [ %3984, %3988 ]
  %3997 = phi i32 [ %4058, %4052 ], [ %3992, %3988 ]
  %3998 = sub i32 %3983, %3994
  %3999 = tail call i32 @llvm.smin.i32(i32 %3998, i32 0)
  %4000 = sub i32 %3998, %3999
  %4001 = zext i32 %4000 to i64
  %4002 = add nuw nsw i64 %4001, 1
  %4003 = add nsw i64 %3995, -1
  %4004 = icmp ult i32 %4000, 31
  br i1 %4004, label %4040, label %4005

4005:                                             ; preds = %3993
  %4006 = and i64 %4002, 8589934560
  %4007 = sub i64 %3996, %4006
  br label %4008

4008:                                             ; preds = %4008, %4005
  %4009 = phi i64 [ 0, %4005 ], [ %4032, %4008 ]
  %4010 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4005 ], [ %4028, %4008 ]
  %4011 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4005 ], [ %4029, %4008 ]
  %4012 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4005 ], [ %4030, %4008 ]
  %4013 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4005 ], [ %4031, %4008 ]
  %4014 = sub i64 %3996, %4009
  %4015 = getelementptr inbounds i32, ptr %9, i64 %4014
  %4016 = getelementptr inbounds i32, ptr %4015, i64 -7
  %4017 = load <8 x i32>, ptr %4016, align 4, !tbaa !5
  %4018 = shufflevector <8 x i32> %4017, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4019 = getelementptr inbounds i32, ptr %4015, i64 -15
  %4020 = load <8 x i32>, ptr %4019, align 4, !tbaa !5
  %4021 = shufflevector <8 x i32> %4020, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4022 = getelementptr inbounds i32, ptr %4015, i64 -23
  %4023 = load <8 x i32>, ptr %4022, align 4, !tbaa !5
  %4024 = shufflevector <8 x i32> %4023, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4025 = getelementptr inbounds i32, ptr %4015, i64 -31
  %4026 = load <8 x i32>, ptr %4025, align 4, !tbaa !5
  %4027 = shufflevector <8 x i32> %4026, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4028 = mul <8 x i32> %4018, %4010
  %4029 = mul <8 x i32> %4021, %4011
  %4030 = mul <8 x i32> %4024, %4012
  %4031 = mul <8 x i32> %4027, %4013
  %4032 = add nuw i64 %4009, 32
  %4033 = icmp eq i64 %4032, %4006
  br i1 %4033, label %4034, label %4008, !llvm.loop !152

4034:                                             ; preds = %4008
  %4035 = mul <8 x i32> %4029, %4028
  %4036 = mul <8 x i32> %4030, %4035
  %4037 = mul <8 x i32> %4031, %4036
  %4038 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4037)
  %4039 = icmp eq i64 %4002, %4006
  br i1 %4039, label %4052, label %4040

4040:                                             ; preds = %3993, %4034
  %4041 = phi i64 [ %3996, %3993 ], [ %4007, %4034 ]
  %4042 = phi i32 [ 1, %3993 ], [ %4038, %4034 ]
  br label %4043

4043:                                             ; preds = %4040, %4043
  %4044 = phi i64 [ %4049, %4043 ], [ %4041, %4040 ]
  %4045 = phi i32 [ %4048, %4043 ], [ %4042, %4040 ]
  %4046 = getelementptr inbounds i32, ptr %9, i64 %4044
  %4047 = load i32, ptr %4046, align 4, !tbaa !5
  %4048 = mul nsw i32 %4047, %4045
  %4049 = add nsw i64 %4044, -1
  %4050 = trunc i64 %4044 to i32
  %4051 = icmp sgt i32 %4050, 0
  br i1 %4051, label %4043, label %4052, !llvm.loop !153

4052:                                             ; preds = %4043, %4034
  %4053 = phi i32 [ %4038, %4034 ], [ %4048, %4043 ]
  %4054 = and i64 %4003, 4294967295
  %4055 = getelementptr inbounds i32, ptr %6, i64 %4054
  %4056 = load i32, ptr %4055, align 4, !tbaa !5
  %4057 = mul nsw i32 %4056, %4053
  %4058 = add nsw i32 %4057, %3997
  %4059 = icmp sgt i64 %3995, 2
  %4060 = add nsw i64 %3996, -1
  %4061 = add i32 %3994, 1
  br i1 %4059, label %3993, label %4062, !llvm.loop !154

4062:                                             ; preds = %4052, %3988
  %4063 = phi i32 [ %3992, %3988 ], [ %4058, %4052 ]
  %4064 = sext i32 %4063 to i64
  %4065 = getelementptr inbounds i8, ptr %3659, i64 %4064
  %4066 = load i8, ptr %4065, align 1, !tbaa !11
  %4067 = uitofp i8 %4066 to double
  %4068 = fmul fast double %4067, %4067
  %4069 = fadd fast double %4068, %3989
  store double %4069, ptr %3661, align 8, !tbaa !18
  %4070 = fadd fast double %3991, 1.000000e+00
  %4071 = add nuw nsw i32 %3990, 1
  br i1 %3982, label %4072, label %4119

4072:                                             ; preds = %4062
  %4073 = load i32, ptr %4, align 4, !tbaa !5
  %4074 = load i32, ptr %12, align 4, !tbaa !5
  %4075 = add nsw i32 %4074, -1
  %4076 = icmp slt i32 %4073, %4075
  br i1 %4076, label %4096, label %4077

4077:                                             ; preds = %4072
  %4078 = icmp eq i32 %4073, %4075
  br i1 %4078, label %4079, label %4112

4079:                                             ; preds = %4077
  store i32 0, ptr %4, align 4, !tbaa !5
  %4080 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4080, ptr %6, align 4, !tbaa !5
  br i1 %3987, label %4119, label %4081

4081:                                             ; preds = %4079, %4106
  %4082 = phi i64 [ %4110, %4106 ], [ 1, %4079 ]
  %4083 = getelementptr inbounds i32, ptr %4, i64 %4082
  %4084 = load i32, ptr %4083, align 4, !tbaa !5
  %4085 = getelementptr inbounds i32, ptr %12, i64 %4082
  %4086 = load i32, ptr %4085, align 4, !tbaa !5
  %4087 = add nsw i32 %4086, -1
  %4088 = icmp slt i32 %4084, %4087
  br i1 %4088, label %4089, label %4104

4089:                                             ; preds = %4081
  br i1 %4076, label %4096, label %4090

4090:                                             ; preds = %4089
  %4091 = getelementptr inbounds i32, ptr %7, i64 %4082
  %4092 = load i32, ptr %4091, align 4, !tbaa !5
  %4093 = getelementptr inbounds i32, ptr %6, i64 %4082
  %4094 = load i32, ptr %4093, align 4, !tbaa !5
  %4095 = add nsw i32 %4094, %4092
  store i32 %4095, ptr %4093, align 4, !tbaa !5
  br label %4114

4096:                                             ; preds = %4072, %4089
  %4097 = phi i32 [ %4084, %4089 ], [ %4073, %4072 ]
  %4098 = phi ptr [ %4083, %4089 ], [ %4, %4072 ]
  %4099 = phi i64 [ %4082, %4089 ], [ 0, %4072 ]
  %4100 = add nsw i32 %4097, 1
  store i32 %4100, ptr %4098, align 4, !tbaa !5
  %4101 = getelementptr inbounds i32, ptr %7, i64 %4099
  %4102 = load i32, ptr %4101, align 4, !tbaa !5
  %4103 = getelementptr inbounds i32, ptr %6, i64 %4099
  br label %4114

4104:                                             ; preds = %4081
  %4105 = icmp eq i32 %4084, %4087
  br i1 %4105, label %4106, label %4112

4106:                                             ; preds = %4104
  store i32 0, ptr %4083, align 4, !tbaa !5
  %4107 = getelementptr inbounds i32, ptr %8, i64 %4082
  %4108 = load i32, ptr %4107, align 4, !tbaa !5
  %4109 = getelementptr inbounds i32, ptr %6, i64 %4082
  store i32 %4108, ptr %4109, align 4, !tbaa !5
  %4110 = add nuw nsw i64 %4082, 1
  %4111 = icmp eq i64 %4110, %3985
  br i1 %4111, label %4119, label %4081, !llvm.loop !155

4112:                                             ; preds = %4077, %4104
  %4113 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

4114:                                             ; preds = %4090, %4096
  %4115 = phi ptr [ %4103, %4096 ], [ %4083, %4090 ]
  %4116 = phi i32 [ %4102, %4096 ], [ 1, %4090 ]
  %4117 = load i32, ptr %4115, align 4, !tbaa !5
  %4118 = add nsw i32 %4117, %4116
  store i32 %4118, ptr %4115, align 4, !tbaa !5
  br label %4119

4119:                                             ; preds = %4106, %4114, %4079, %4062
  %4120 = icmp eq i32 %4071, %5
  br i1 %4120, label %5473, label %3988, !llvm.loop !156

4121:                                             ; preds = %3971, %4257
  %4122 = phi double [ 0.000000e+00, %3971 ], [ %4205, %4257 ]
  %4123 = phi i32 [ 0, %3971 ], [ %4206, %4257 ]
  %4124 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3972, label %4125, label %4194

4125:                                             ; preds = %4121, %4184
  %4126 = phi i32 [ %4193, %4184 ], [ 0, %4121 ]
  %4127 = phi i64 [ %4135, %4184 ], [ %3976, %4121 ]
  %4128 = phi i64 [ %4192, %4184 ], [ %3975, %4121 ]
  %4129 = phi i32 [ %4190, %4184 ], [ %4124, %4121 ]
  %4130 = sub i32 %3974, %4126
  %4131 = tail call i32 @llvm.smin.i32(i32 %4130, i32 0)
  %4132 = sub i32 %4130, %4131
  %4133 = zext i32 %4132 to i64
  %4134 = add nuw nsw i64 %4133, 1
  %4135 = add nsw i64 %4127, -1
  %4136 = icmp ult i32 %4132, 31
  br i1 %4136, label %4172, label %4137

4137:                                             ; preds = %4125
  %4138 = and i64 %4134, 8589934560
  %4139 = sub i64 %4128, %4138
  br label %4140

4140:                                             ; preds = %4140, %4137
  %4141 = phi i64 [ 0, %4137 ], [ %4164, %4140 ]
  %4142 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4137 ], [ %4160, %4140 ]
  %4143 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4137 ], [ %4161, %4140 ]
  %4144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4137 ], [ %4162, %4140 ]
  %4145 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4137 ], [ %4163, %4140 ]
  %4146 = sub i64 %4128, %4141
  %4147 = getelementptr inbounds i32, ptr %11, i64 %4146
  %4148 = getelementptr inbounds i32, ptr %4147, i64 -7
  %4149 = load <8 x i32>, ptr %4148, align 4, !tbaa !5
  %4150 = shufflevector <8 x i32> %4149, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4151 = getelementptr inbounds i32, ptr %4147, i64 -15
  %4152 = load <8 x i32>, ptr %4151, align 4, !tbaa !5
  %4153 = shufflevector <8 x i32> %4152, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4154 = getelementptr inbounds i32, ptr %4147, i64 -23
  %4155 = load <8 x i32>, ptr %4154, align 4, !tbaa !5
  %4156 = shufflevector <8 x i32> %4155, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4157 = getelementptr inbounds i32, ptr %4147, i64 -31
  %4158 = load <8 x i32>, ptr %4157, align 4, !tbaa !5
  %4159 = shufflevector <8 x i32> %4158, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4160 = mul <8 x i32> %4150, %4142
  %4161 = mul <8 x i32> %4153, %4143
  %4162 = mul <8 x i32> %4156, %4144
  %4163 = mul <8 x i32> %4159, %4145
  %4164 = add nuw i64 %4141, 32
  %4165 = icmp eq i64 %4164, %4138
  br i1 %4165, label %4166, label %4140, !llvm.loop !157

4166:                                             ; preds = %4140
  %4167 = mul <8 x i32> %4161, %4160
  %4168 = mul <8 x i32> %4162, %4167
  %4169 = mul <8 x i32> %4163, %4168
  %4170 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4169)
  %4171 = icmp eq i64 %4134, %4138
  br i1 %4171, label %4184, label %4172

4172:                                             ; preds = %4125, %4166
  %4173 = phi i64 [ %4128, %4125 ], [ %4139, %4166 ]
  %4174 = phi i32 [ 1, %4125 ], [ %4170, %4166 ]
  br label %4175

4175:                                             ; preds = %4172, %4175
  %4176 = phi i64 [ %4181, %4175 ], [ %4173, %4172 ]
  %4177 = phi i32 [ %4180, %4175 ], [ %4174, %4172 ]
  %4178 = getelementptr inbounds i32, ptr %11, i64 %4176
  %4179 = load i32, ptr %4178, align 4, !tbaa !5
  %4180 = mul nsw i32 %4179, %4177
  %4181 = add nsw i64 %4176, -1
  %4182 = trunc i64 %4176 to i32
  %4183 = icmp sgt i32 %4182, 0
  br i1 %4183, label %4175, label %4184, !llvm.loop !158

4184:                                             ; preds = %4175, %4166
  %4185 = phi i32 [ %4170, %4166 ], [ %4180, %4175 ]
  %4186 = and i64 %4135, 4294967295
  %4187 = getelementptr inbounds i32, ptr %6, i64 %4186
  %4188 = load i32, ptr %4187, align 4, !tbaa !5
  %4189 = mul nsw i32 %4188, %4185
  %4190 = add nsw i32 %4189, %4129
  %4191 = icmp sgt i64 %4127, 2
  %4192 = add nsw i64 %4128, -1
  %4193 = add i32 %4126, 1
  br i1 %4191, label %4125, label %4194, !llvm.loop !159

4194:                                             ; preds = %4184, %4121
  %4195 = phi i32 [ %4124, %4121 ], [ %4190, %4184 ]
  %4196 = icmp slt i32 %4195, %5
  br i1 %4196, label %4199, label %4197

4197:                                             ; preds = %4194
  %4198 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

4199:                                             ; preds = %4194
  %4200 = sext i32 %4195 to i64
  %4201 = getelementptr inbounds i8, ptr %3659, i64 %4200
  %4202 = load i8, ptr %4201, align 1, !tbaa !11
  %4203 = uitofp i8 %4202 to double
  %4204 = fmul fast double %4203, %4203
  %4205 = fadd fast double %4204, %4122
  store double %4205, ptr %3661, align 8, !tbaa !18
  %4206 = add nuw nsw i32 %4123, 1
  br i1 %3973, label %4207, label %4257

4207:                                             ; preds = %4199
  %4208 = load i32, ptr %4, align 4, !tbaa !5
  %4209 = load i32, ptr %12, align 4, !tbaa !5
  %4210 = add nsw i32 %4209, -1
  %4211 = icmp slt i32 %4208, %4210
  br i1 %4211, label %4234, label %4212

4212:                                             ; preds = %4207
  %4213 = icmp eq i32 %4208, %4210
  br i1 %4213, label %4214, label %4250

4214:                                             ; preds = %4212
  store i32 0, ptr %4, align 4, !tbaa !5
  %4215 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4215, ptr %6, align 4, !tbaa !5
  br i1 %3978, label %4257, label %4216

4216:                                             ; preds = %4214, %4244
  %4217 = phi i64 [ %4248, %4244 ], [ 1, %4214 ]
  %4218 = getelementptr inbounds i32, ptr %4, i64 %4217
  %4219 = load i32, ptr %4218, align 4, !tbaa !5
  %4220 = getelementptr inbounds i32, ptr %12, i64 %4217
  %4221 = load i32, ptr %4220, align 4, !tbaa !5
  %4222 = add nsw i32 %4221, -1
  %4223 = icmp slt i32 %4219, %4222
  br i1 %4223, label %4224, label %4242

4224:                                             ; preds = %4216
  br i1 %4211, label %4234, label %4225

4225:                                             ; preds = %4224
  %4226 = shl i64 %4217, 32
  %4227 = add i64 %4226, -4294967296
  %4228 = ashr exact i64 %4227, 32
  %4229 = getelementptr inbounds i32, ptr %7, i64 %4228
  %4230 = load i32, ptr %4229, align 4, !tbaa !5
  %4231 = getelementptr inbounds i32, ptr %6, i64 %4217
  %4232 = load i32, ptr %4231, align 4, !tbaa !5
  %4233 = add nsw i32 %4232, %4230
  store i32 %4233, ptr %4231, align 4, !tbaa !5
  br label %4252

4234:                                             ; preds = %4207, %4224
  %4235 = phi i32 [ %4219, %4224 ], [ %4208, %4207 ]
  %4236 = phi ptr [ %4218, %4224 ], [ %4, %4207 ]
  %4237 = phi i64 [ %4217, %4224 ], [ 0, %4207 ]
  %4238 = add nsw i32 %4235, 1
  store i32 %4238, ptr %4236, align 4, !tbaa !5
  %4239 = getelementptr inbounds i32, ptr %7, i64 %4237
  %4240 = load i32, ptr %4239, align 4, !tbaa !5
  %4241 = getelementptr inbounds i32, ptr %6, i64 %4237
  br label %4252

4242:                                             ; preds = %4216
  %4243 = icmp eq i32 %4219, %4222
  br i1 %4243, label %4244, label %4250

4244:                                             ; preds = %4242
  store i32 0, ptr %4218, align 4, !tbaa !5
  %4245 = getelementptr inbounds i32, ptr %8, i64 %4217
  %4246 = load i32, ptr %4245, align 4, !tbaa !5
  %4247 = getelementptr inbounds i32, ptr %6, i64 %4217
  store i32 %4246, ptr %4247, align 4, !tbaa !5
  %4248 = add nuw nsw i64 %4217, 1
  %4249 = icmp eq i64 %4248, %3976
  br i1 %4249, label %4257, label %4216, !llvm.loop !160

4250:                                             ; preds = %4212, %4242
  %4251 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

4252:                                             ; preds = %4225, %4234
  %4253 = phi ptr [ %4241, %4234 ], [ %4218, %4225 ]
  %4254 = phi i32 [ %4240, %4234 ], [ 1, %4225 ]
  %4255 = load i32, ptr %4253, align 4, !tbaa !5
  %4256 = add nsw i32 %4255, %4254
  store i32 %4256, ptr %4253, align 4, !tbaa !5
  br label %4257

4257:                                             ; preds = %4244, %4252, %4214, %4199
  %4258 = icmp eq i32 %4206, %5
  br i1 %4258, label %5473, label %4121, !llvm.loop !161

4259:                                             ; preds = %3667
  %4260 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5473

4261:                                             ; preds = %18
  %4262 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4263 = load ptr, ptr %4262, align 8, !tbaa !9
  %4264 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4265 = load ptr, ptr %4264, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4265, align 4, !tbaa !162
  %4266 = icmp eq i32 %13, 0
  br i1 %4266, label %4267, label %4271

4267:                                             ; preds = %4261
  %4268 = load i8, ptr %4263, align 1, !tbaa !11
  %4269 = uitofp i8 %4268 to float
  %4270 = fmul fast float %4269, %4269
  store float %4270, ptr %4265, align 4, !tbaa !162
  br label %5473

4271:                                             ; preds = %4261
  switch i32 %1, label %4867 [
    i32 1, label %4272
    i32 0, label %4573
  ]

4272:                                             ; preds = %4271
  %4273 = getelementptr inbounds i32, ptr %3, i64 %19
  %4274 = load i32, ptr %4273, align 4, !tbaa !5
  %4275 = icmp eq i32 %4274, 0
  %4276 = icmp sgt i32 %5, 0
  br i1 %4275, label %4286, label %4277

4277:                                             ; preds = %4272
  br i1 %4276, label %4278, label %5473

4278:                                             ; preds = %4277
  %4279 = icmp sgt i32 %13, 1
  %4280 = icmp sgt i32 %13, 0
  %4281 = add i32 %13, -2
  %4282 = zext i32 %4281 to i64
  %4283 = zext i32 %13 to i64
  %4284 = add nuw i32 %5, 1
  %4285 = icmp eq i32 %13, 1
  br label %4433

4286:                                             ; preds = %4272
  br i1 %4276, label %4287, label %5473

4287:                                             ; preds = %4286
  %4288 = icmp sgt i32 %13, 1
  %4289 = icmp sgt i32 %13, 0
  %4290 = add i32 %13, -2
  %4291 = zext i32 %4290 to i64
  %4292 = zext i32 %13 to i64
  %4293 = add nuw i32 %5, 1
  %4294 = icmp eq i32 %13, 1
  br label %4295

4295:                                             ; preds = %4287, %4431
  %4296 = phi float [ 0.000000e+00, %4287 ], [ %4381, %4431 ]
  %4297 = phi i32 [ 0, %4287 ], [ %4383, %4431 ]
  %4298 = phi double [ 0.000000e+00, %4287 ], [ %4382, %4431 ]
  %4299 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4288, label %4300, label %4369

4300:                                             ; preds = %4295, %4359
  %4301 = phi i32 [ %4368, %4359 ], [ 0, %4295 ]
  %4302 = phi i64 [ %4310, %4359 ], [ %4292, %4295 ]
  %4303 = phi i64 [ %4367, %4359 ], [ %4291, %4295 ]
  %4304 = phi i32 [ %4365, %4359 ], [ %4299, %4295 ]
  %4305 = sub i32 %4290, %4301
  %4306 = tail call i32 @llvm.smin.i32(i32 %4305, i32 0)
  %4307 = sub i32 %4305, %4306
  %4308 = zext i32 %4307 to i64
  %4309 = add nuw nsw i64 %4308, 1
  %4310 = add nsw i64 %4302, -1
  %4311 = icmp ult i32 %4307, 31
  br i1 %4311, label %4347, label %4312

4312:                                             ; preds = %4300
  %4313 = and i64 %4309, 8589934560
  %4314 = sub i64 %4303, %4313
  br label %4315

4315:                                             ; preds = %4315, %4312
  %4316 = phi i64 [ 0, %4312 ], [ %4339, %4315 ]
  %4317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4312 ], [ %4335, %4315 ]
  %4318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4312 ], [ %4336, %4315 ]
  %4319 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4312 ], [ %4337, %4315 ]
  %4320 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4312 ], [ %4338, %4315 ]
  %4321 = sub i64 %4303, %4316
  %4322 = getelementptr inbounds i32, ptr %9, i64 %4321
  %4323 = getelementptr inbounds i32, ptr %4322, i64 -7
  %4324 = load <8 x i32>, ptr %4323, align 4, !tbaa !5
  %4325 = shufflevector <8 x i32> %4324, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4326 = getelementptr inbounds i32, ptr %4322, i64 -15
  %4327 = load <8 x i32>, ptr %4326, align 4, !tbaa !5
  %4328 = shufflevector <8 x i32> %4327, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4329 = getelementptr inbounds i32, ptr %4322, i64 -23
  %4330 = load <8 x i32>, ptr %4329, align 4, !tbaa !5
  %4331 = shufflevector <8 x i32> %4330, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4332 = getelementptr inbounds i32, ptr %4322, i64 -31
  %4333 = load <8 x i32>, ptr %4332, align 4, !tbaa !5
  %4334 = shufflevector <8 x i32> %4333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4335 = mul <8 x i32> %4325, %4317
  %4336 = mul <8 x i32> %4328, %4318
  %4337 = mul <8 x i32> %4331, %4319
  %4338 = mul <8 x i32> %4334, %4320
  %4339 = add nuw i64 %4316, 32
  %4340 = icmp eq i64 %4339, %4313
  br i1 %4340, label %4341, label %4315, !llvm.loop !164

4341:                                             ; preds = %4315
  %4342 = mul <8 x i32> %4336, %4335
  %4343 = mul <8 x i32> %4337, %4342
  %4344 = mul <8 x i32> %4338, %4343
  %4345 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4344)
  %4346 = icmp eq i64 %4309, %4313
  br i1 %4346, label %4359, label %4347

4347:                                             ; preds = %4300, %4341
  %4348 = phi i64 [ %4303, %4300 ], [ %4314, %4341 ]
  %4349 = phi i32 [ 1, %4300 ], [ %4345, %4341 ]
  br label %4350

4350:                                             ; preds = %4347, %4350
  %4351 = phi i64 [ %4356, %4350 ], [ %4348, %4347 ]
  %4352 = phi i32 [ %4355, %4350 ], [ %4349, %4347 ]
  %4353 = getelementptr inbounds i32, ptr %9, i64 %4351
  %4354 = load i32, ptr %4353, align 4, !tbaa !5
  %4355 = mul nsw i32 %4354, %4352
  %4356 = add nsw i64 %4351, -1
  %4357 = trunc i64 %4351 to i32
  %4358 = icmp sgt i32 %4357, 0
  br i1 %4358, label %4350, label %4359, !llvm.loop !165

4359:                                             ; preds = %4350, %4341
  %4360 = phi i32 [ %4345, %4341 ], [ %4355, %4350 ]
  %4361 = and i64 %4310, 4294967295
  %4362 = getelementptr inbounds i32, ptr %6, i64 %4361
  %4363 = load i32, ptr %4362, align 4, !tbaa !5
  %4364 = mul nsw i32 %4363, %4360
  %4365 = add nsw i32 %4364, %4304
  %4366 = icmp sgt i64 %4302, 2
  %4367 = add nsw i64 %4303, -1
  %4368 = add i32 %4301, 1
  br i1 %4366, label %4300, label %4369, !llvm.loop !166

4369:                                             ; preds = %4359, %4295
  %4370 = phi i32 [ %4299, %4295 ], [ %4365, %4359 ]
  %4371 = sext i32 %4370 to i64
  %4372 = getelementptr inbounds double, ptr %2, i64 %4371
  %4373 = load double, ptr %4372, align 8, !tbaa !18
  %4374 = getelementptr inbounds i8, ptr %4263, i64 %4371
  %4375 = load i8, ptr %4374, align 1, !tbaa !11
  %4376 = fpext float %4296 to double
  %4377 = uitofp i8 %4375 to double
  %4378 = fmul fast double %4373, %4377
  %4379 = fmul fast double %4378, %4378
  %4380 = fadd fast double %4379, %4376
  %4381 = fptrunc double %4380 to float
  store float %4381, ptr %4265, align 4, !tbaa !162
  %4382 = fadd fast double %4373, %4298
  %4383 = add nuw nsw i32 %4297, 1
  br i1 %4289, label %4384, label %4431

4384:                                             ; preds = %4369
  %4385 = load i32, ptr %4, align 4, !tbaa !5
  %4386 = load i32, ptr %12, align 4, !tbaa !5
  %4387 = add nsw i32 %4386, -1
  %4388 = icmp slt i32 %4385, %4387
  br i1 %4388, label %4408, label %4389

4389:                                             ; preds = %4384
  %4390 = icmp eq i32 %4385, %4387
  br i1 %4390, label %4391, label %4424

4391:                                             ; preds = %4389
  store i32 0, ptr %4, align 4, !tbaa !5
  %4392 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4392, ptr %6, align 4, !tbaa !5
  br i1 %4294, label %4431, label %4393

4393:                                             ; preds = %4391, %4418
  %4394 = phi i64 [ %4422, %4418 ], [ 1, %4391 ]
  %4395 = getelementptr inbounds i32, ptr %4, i64 %4394
  %4396 = load i32, ptr %4395, align 4, !tbaa !5
  %4397 = getelementptr inbounds i32, ptr %12, i64 %4394
  %4398 = load i32, ptr %4397, align 4, !tbaa !5
  %4399 = add nsw i32 %4398, -1
  %4400 = icmp slt i32 %4396, %4399
  br i1 %4400, label %4401, label %4416

4401:                                             ; preds = %4393
  br i1 %4388, label %4408, label %4402

4402:                                             ; preds = %4401
  %4403 = getelementptr inbounds i32, ptr %7, i64 %4394
  %4404 = load i32, ptr %4403, align 4, !tbaa !5
  %4405 = getelementptr inbounds i32, ptr %6, i64 %4394
  %4406 = load i32, ptr %4405, align 4, !tbaa !5
  %4407 = add nsw i32 %4406, %4404
  store i32 %4407, ptr %4405, align 4, !tbaa !5
  br label %4426

4408:                                             ; preds = %4384, %4401
  %4409 = phi i32 [ %4396, %4401 ], [ %4385, %4384 ]
  %4410 = phi ptr [ %4395, %4401 ], [ %4, %4384 ]
  %4411 = phi i64 [ %4394, %4401 ], [ 0, %4384 ]
  %4412 = add nsw i32 %4409, 1
  store i32 %4412, ptr %4410, align 4, !tbaa !5
  %4413 = getelementptr inbounds i32, ptr %7, i64 %4411
  %4414 = load i32, ptr %4413, align 4, !tbaa !5
  %4415 = getelementptr inbounds i32, ptr %6, i64 %4411
  br label %4426

4416:                                             ; preds = %4393
  %4417 = icmp eq i32 %4396, %4399
  br i1 %4417, label %4418, label %4424

4418:                                             ; preds = %4416
  store i32 0, ptr %4395, align 4, !tbaa !5
  %4419 = getelementptr inbounds i32, ptr %8, i64 %4394
  %4420 = load i32, ptr %4419, align 4, !tbaa !5
  %4421 = getelementptr inbounds i32, ptr %6, i64 %4394
  store i32 %4420, ptr %4421, align 4, !tbaa !5
  %4422 = add nuw nsw i64 %4394, 1
  %4423 = icmp eq i64 %4422, %4292
  br i1 %4423, label %4431, label %4393, !llvm.loop !167

4424:                                             ; preds = %4389, %4416
  %4425 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

4426:                                             ; preds = %4402, %4408
  %4427 = phi ptr [ %4415, %4408 ], [ %4395, %4402 ]
  %4428 = phi i32 [ %4414, %4408 ], [ 1, %4402 ]
  %4429 = load i32, ptr %4427, align 4, !tbaa !5
  %4430 = add nsw i32 %4429, %4428
  store i32 %4430, ptr %4427, align 4, !tbaa !5
  br label %4431

4431:                                             ; preds = %4418, %4426, %4391, %4369
  %4432 = icmp eq i32 %4383, %5
  br i1 %4432, label %5473, label %4295, !llvm.loop !168

4433:                                             ; preds = %4278, %4571
  %4434 = phi float [ 0.000000e+00, %4278 ], [ %4519, %4571 ]
  %4435 = phi i32 [ 0, %4278 ], [ %4520, %4571 ]
  %4436 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4279, label %4437, label %4506

4437:                                             ; preds = %4433, %4496
  %4438 = phi i32 [ %4505, %4496 ], [ 0, %4433 ]
  %4439 = phi i64 [ %4447, %4496 ], [ %4283, %4433 ]
  %4440 = phi i64 [ %4504, %4496 ], [ %4282, %4433 ]
  %4441 = phi i32 [ %4502, %4496 ], [ %4436, %4433 ]
  %4442 = sub i32 %4281, %4438
  %4443 = tail call i32 @llvm.smin.i32(i32 %4442, i32 0)
  %4444 = sub i32 %4442, %4443
  %4445 = zext i32 %4444 to i64
  %4446 = add nuw nsw i64 %4445, 1
  %4447 = add nsw i64 %4439, -1
  %4448 = icmp ult i32 %4444, 31
  br i1 %4448, label %4484, label %4449

4449:                                             ; preds = %4437
  %4450 = and i64 %4446, 8589934560
  %4451 = sub i64 %4440, %4450
  br label %4452

4452:                                             ; preds = %4452, %4449
  %4453 = phi i64 [ 0, %4449 ], [ %4476, %4452 ]
  %4454 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4449 ], [ %4472, %4452 ]
  %4455 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4449 ], [ %4473, %4452 ]
  %4456 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4449 ], [ %4474, %4452 ]
  %4457 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4449 ], [ %4475, %4452 ]
  %4458 = sub i64 %4440, %4453
  %4459 = getelementptr inbounds i32, ptr %11, i64 %4458
  %4460 = getelementptr inbounds i32, ptr %4459, i64 -7
  %4461 = load <8 x i32>, ptr %4460, align 4, !tbaa !5
  %4462 = shufflevector <8 x i32> %4461, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4463 = getelementptr inbounds i32, ptr %4459, i64 -15
  %4464 = load <8 x i32>, ptr %4463, align 4, !tbaa !5
  %4465 = shufflevector <8 x i32> %4464, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4466 = getelementptr inbounds i32, ptr %4459, i64 -23
  %4467 = load <8 x i32>, ptr %4466, align 4, !tbaa !5
  %4468 = shufflevector <8 x i32> %4467, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4469 = getelementptr inbounds i32, ptr %4459, i64 -31
  %4470 = load <8 x i32>, ptr %4469, align 4, !tbaa !5
  %4471 = shufflevector <8 x i32> %4470, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4472 = mul <8 x i32> %4462, %4454
  %4473 = mul <8 x i32> %4465, %4455
  %4474 = mul <8 x i32> %4468, %4456
  %4475 = mul <8 x i32> %4471, %4457
  %4476 = add nuw i64 %4453, 32
  %4477 = icmp eq i64 %4476, %4450
  br i1 %4477, label %4478, label %4452, !llvm.loop !169

4478:                                             ; preds = %4452
  %4479 = mul <8 x i32> %4473, %4472
  %4480 = mul <8 x i32> %4474, %4479
  %4481 = mul <8 x i32> %4475, %4480
  %4482 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4481)
  %4483 = icmp eq i64 %4446, %4450
  br i1 %4483, label %4496, label %4484

4484:                                             ; preds = %4437, %4478
  %4485 = phi i64 [ %4440, %4437 ], [ %4451, %4478 ]
  %4486 = phi i32 [ 1, %4437 ], [ %4482, %4478 ]
  br label %4487

4487:                                             ; preds = %4484, %4487
  %4488 = phi i64 [ %4493, %4487 ], [ %4485, %4484 ]
  %4489 = phi i32 [ %4492, %4487 ], [ %4486, %4484 ]
  %4490 = getelementptr inbounds i32, ptr %11, i64 %4488
  %4491 = load i32, ptr %4490, align 4, !tbaa !5
  %4492 = mul nsw i32 %4491, %4489
  %4493 = add nsw i64 %4488, -1
  %4494 = trunc i64 %4488 to i32
  %4495 = icmp sgt i32 %4494, 0
  br i1 %4495, label %4487, label %4496, !llvm.loop !170

4496:                                             ; preds = %4487, %4478
  %4497 = phi i32 [ %4482, %4478 ], [ %4492, %4487 ]
  %4498 = and i64 %4447, 4294967295
  %4499 = getelementptr inbounds i32, ptr %6, i64 %4498
  %4500 = load i32, ptr %4499, align 4, !tbaa !5
  %4501 = mul nsw i32 %4500, %4497
  %4502 = add nsw i32 %4501, %4441
  %4503 = icmp sgt i64 %4439, 2
  %4504 = add nsw i64 %4440, -1
  %4505 = add i32 %4438, 1
  br i1 %4503, label %4437, label %4506, !llvm.loop !171

4506:                                             ; preds = %4496, %4433
  %4507 = phi i32 [ %4436, %4433 ], [ %4502, %4496 ]
  %4508 = icmp slt i32 %4507, %5
  br i1 %4508, label %4511, label %4509

4509:                                             ; preds = %4506
  %4510 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

4511:                                             ; preds = %4506
  %4512 = sext i32 %4507 to i64
  %4513 = getelementptr inbounds i8, ptr %4263, i64 %4512
  %4514 = load i8, ptr %4513, align 1, !tbaa !11
  %4515 = fpext float %4434 to double
  %4516 = uitofp i8 %4514 to double
  %4517 = fmul fast double %4516, %4516
  %4518 = fadd fast double %4517, %4515
  %4519 = fptrunc double %4518 to float
  store float %4519, ptr %4265, align 4, !tbaa !162
  %4520 = add nuw nsw i32 %4435, 1
  br i1 %4280, label %4521, label %4571

4521:                                             ; preds = %4511
  %4522 = load i32, ptr %4, align 4, !tbaa !5
  %4523 = load i32, ptr %12, align 4, !tbaa !5
  %4524 = add nsw i32 %4523, -1
  %4525 = icmp slt i32 %4522, %4524
  br i1 %4525, label %4548, label %4526

4526:                                             ; preds = %4521
  %4527 = icmp eq i32 %4522, %4524
  br i1 %4527, label %4528, label %4564

4528:                                             ; preds = %4526
  store i32 0, ptr %4, align 4, !tbaa !5
  %4529 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4529, ptr %6, align 4, !tbaa !5
  br i1 %4285, label %4571, label %4530

4530:                                             ; preds = %4528, %4558
  %4531 = phi i64 [ %4562, %4558 ], [ 1, %4528 ]
  %4532 = getelementptr inbounds i32, ptr %4, i64 %4531
  %4533 = load i32, ptr %4532, align 4, !tbaa !5
  %4534 = getelementptr inbounds i32, ptr %12, i64 %4531
  %4535 = load i32, ptr %4534, align 4, !tbaa !5
  %4536 = add nsw i32 %4535, -1
  %4537 = icmp slt i32 %4533, %4536
  br i1 %4537, label %4538, label %4556

4538:                                             ; preds = %4530
  br i1 %4525, label %4548, label %4539

4539:                                             ; preds = %4538
  %4540 = shl i64 %4531, 32
  %4541 = add i64 %4540, -4294967296
  %4542 = ashr exact i64 %4541, 32
  %4543 = getelementptr inbounds i32, ptr %7, i64 %4542
  %4544 = load i32, ptr %4543, align 4, !tbaa !5
  %4545 = getelementptr inbounds i32, ptr %6, i64 %4531
  %4546 = load i32, ptr %4545, align 4, !tbaa !5
  %4547 = add nsw i32 %4546, %4544
  store i32 %4547, ptr %4545, align 4, !tbaa !5
  br label %4566

4548:                                             ; preds = %4521, %4538
  %4549 = phi i32 [ %4533, %4538 ], [ %4522, %4521 ]
  %4550 = phi ptr [ %4532, %4538 ], [ %4, %4521 ]
  %4551 = phi i64 [ %4531, %4538 ], [ 0, %4521 ]
  %4552 = add nsw i32 %4549, 1
  store i32 %4552, ptr %4550, align 4, !tbaa !5
  %4553 = getelementptr inbounds i32, ptr %7, i64 %4551
  %4554 = load i32, ptr %4553, align 4, !tbaa !5
  %4555 = getelementptr inbounds i32, ptr %6, i64 %4551
  br label %4566

4556:                                             ; preds = %4530
  %4557 = icmp eq i32 %4533, %4536
  br i1 %4557, label %4558, label %4564

4558:                                             ; preds = %4556
  store i32 0, ptr %4532, align 4, !tbaa !5
  %4559 = getelementptr inbounds i32, ptr %8, i64 %4531
  %4560 = load i32, ptr %4559, align 4, !tbaa !5
  %4561 = getelementptr inbounds i32, ptr %6, i64 %4531
  store i32 %4560, ptr %4561, align 4, !tbaa !5
  %4562 = add nuw nsw i64 %4531, 1
  %4563 = icmp eq i64 %4562, %4283
  br i1 %4563, label %4571, label %4530, !llvm.loop !172

4564:                                             ; preds = %4526, %4556
  %4565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

4566:                                             ; preds = %4539, %4548
  %4567 = phi ptr [ %4555, %4548 ], [ %4532, %4539 ]
  %4568 = phi i32 [ %4554, %4548 ], [ 1, %4539 ]
  %4569 = load i32, ptr %4567, align 4, !tbaa !5
  %4570 = add nsw i32 %4569, %4568
  store i32 %4570, ptr %4567, align 4, !tbaa !5
  br label %4571

4571:                                             ; preds = %4558, %4566, %4528, %4511
  %4572 = icmp eq i32 %4520, %5
  br i1 %4572, label %5473, label %4433, !llvm.loop !173

4573:                                             ; preds = %4271
  %4574 = getelementptr inbounds i32, ptr %3, i64 %19
  %4575 = load i32, ptr %4574, align 4, !tbaa !5
  %4576 = icmp eq i32 %4575, 0
  %4577 = icmp sgt i32 %5, 0
  br i1 %4576, label %4587, label %4578

4578:                                             ; preds = %4573
  br i1 %4577, label %4579, label %5473

4579:                                             ; preds = %4578
  %4580 = icmp sgt i32 %13, 1
  %4581 = icmp sgt i32 %13, 0
  %4582 = add i32 %13, -2
  %4583 = zext i32 %4582 to i64
  %4584 = zext i32 %13 to i64
  %4585 = add nuw i32 %5, 1
  %4586 = icmp eq i32 %13, 1
  br label %4729

4587:                                             ; preds = %4573
  br i1 %4577, label %4588, label %5473

4588:                                             ; preds = %4587
  %4589 = icmp sgt i32 %13, 1
  %4590 = icmp sgt i32 %13, 0
  %4591 = add i32 %13, -2
  %4592 = zext i32 %4591 to i64
  %4593 = zext i32 %13 to i64
  %4594 = add nuw i32 %5, 1
  %4595 = icmp eq i32 %13, 1
  br label %4596

4596:                                             ; preds = %4588, %4727
  %4597 = phi float [ 0.000000e+00, %4588 ], [ %4677, %4727 ]
  %4598 = phi i32 [ 0, %4588 ], [ %4679, %4727 ]
  %4599 = phi double [ 0.000000e+00, %4588 ], [ %4678, %4727 ]
  %4600 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4589, label %4601, label %4670

4601:                                             ; preds = %4596, %4660
  %4602 = phi i32 [ %4669, %4660 ], [ 0, %4596 ]
  %4603 = phi i64 [ %4611, %4660 ], [ %4593, %4596 ]
  %4604 = phi i64 [ %4668, %4660 ], [ %4592, %4596 ]
  %4605 = phi i32 [ %4666, %4660 ], [ %4600, %4596 ]
  %4606 = sub i32 %4591, %4602
  %4607 = tail call i32 @llvm.smin.i32(i32 %4606, i32 0)
  %4608 = sub i32 %4606, %4607
  %4609 = zext i32 %4608 to i64
  %4610 = add nuw nsw i64 %4609, 1
  %4611 = add nsw i64 %4603, -1
  %4612 = icmp ult i32 %4608, 31
  br i1 %4612, label %4648, label %4613

4613:                                             ; preds = %4601
  %4614 = and i64 %4610, 8589934560
  %4615 = sub i64 %4604, %4614
  br label %4616

4616:                                             ; preds = %4616, %4613
  %4617 = phi i64 [ 0, %4613 ], [ %4640, %4616 ]
  %4618 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4613 ], [ %4636, %4616 ]
  %4619 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4613 ], [ %4637, %4616 ]
  %4620 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4613 ], [ %4638, %4616 ]
  %4621 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4613 ], [ %4639, %4616 ]
  %4622 = sub i64 %4604, %4617
  %4623 = getelementptr inbounds i32, ptr %9, i64 %4622
  %4624 = getelementptr inbounds i32, ptr %4623, i64 -7
  %4625 = load <8 x i32>, ptr %4624, align 4, !tbaa !5
  %4626 = shufflevector <8 x i32> %4625, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4627 = getelementptr inbounds i32, ptr %4623, i64 -15
  %4628 = load <8 x i32>, ptr %4627, align 4, !tbaa !5
  %4629 = shufflevector <8 x i32> %4628, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4630 = getelementptr inbounds i32, ptr %4623, i64 -23
  %4631 = load <8 x i32>, ptr %4630, align 4, !tbaa !5
  %4632 = shufflevector <8 x i32> %4631, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4633 = getelementptr inbounds i32, ptr %4623, i64 -31
  %4634 = load <8 x i32>, ptr %4633, align 4, !tbaa !5
  %4635 = shufflevector <8 x i32> %4634, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4636 = mul <8 x i32> %4626, %4618
  %4637 = mul <8 x i32> %4629, %4619
  %4638 = mul <8 x i32> %4632, %4620
  %4639 = mul <8 x i32> %4635, %4621
  %4640 = add nuw i64 %4617, 32
  %4641 = icmp eq i64 %4640, %4614
  br i1 %4641, label %4642, label %4616, !llvm.loop !174

4642:                                             ; preds = %4616
  %4643 = mul <8 x i32> %4637, %4636
  %4644 = mul <8 x i32> %4638, %4643
  %4645 = mul <8 x i32> %4639, %4644
  %4646 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4645)
  %4647 = icmp eq i64 %4610, %4614
  br i1 %4647, label %4660, label %4648

4648:                                             ; preds = %4601, %4642
  %4649 = phi i64 [ %4604, %4601 ], [ %4615, %4642 ]
  %4650 = phi i32 [ 1, %4601 ], [ %4646, %4642 ]
  br label %4651

4651:                                             ; preds = %4648, %4651
  %4652 = phi i64 [ %4657, %4651 ], [ %4649, %4648 ]
  %4653 = phi i32 [ %4656, %4651 ], [ %4650, %4648 ]
  %4654 = getelementptr inbounds i32, ptr %9, i64 %4652
  %4655 = load i32, ptr %4654, align 4, !tbaa !5
  %4656 = mul nsw i32 %4655, %4653
  %4657 = add nsw i64 %4652, -1
  %4658 = trunc i64 %4652 to i32
  %4659 = icmp sgt i32 %4658, 0
  br i1 %4659, label %4651, label %4660, !llvm.loop !175

4660:                                             ; preds = %4651, %4642
  %4661 = phi i32 [ %4646, %4642 ], [ %4656, %4651 ]
  %4662 = and i64 %4611, 4294967295
  %4663 = getelementptr inbounds i32, ptr %6, i64 %4662
  %4664 = load i32, ptr %4663, align 4, !tbaa !5
  %4665 = mul nsw i32 %4664, %4661
  %4666 = add nsw i32 %4665, %4605
  %4667 = icmp sgt i64 %4603, 2
  %4668 = add nsw i64 %4604, -1
  %4669 = add i32 %4602, 1
  br i1 %4667, label %4601, label %4670, !llvm.loop !176

4670:                                             ; preds = %4660, %4596
  %4671 = phi i32 [ %4600, %4596 ], [ %4666, %4660 ]
  %4672 = sext i32 %4671 to i64
  %4673 = getelementptr inbounds i8, ptr %4263, i64 %4672
  %4674 = load i8, ptr %4673, align 1, !tbaa !11
  %4675 = uitofp i8 %4674 to float
  %4676 = fmul fast float %4675, %4675
  %4677 = fadd fast float %4676, %4597
  store float %4677, ptr %4265, align 4, !tbaa !162
  %4678 = fadd fast double %4599, 1.000000e+00
  %4679 = add nuw nsw i32 %4598, 1
  br i1 %4590, label %4680, label %4727

4680:                                             ; preds = %4670
  %4681 = load i32, ptr %4, align 4, !tbaa !5
  %4682 = load i32, ptr %12, align 4, !tbaa !5
  %4683 = add nsw i32 %4682, -1
  %4684 = icmp slt i32 %4681, %4683
  br i1 %4684, label %4704, label %4685

4685:                                             ; preds = %4680
  %4686 = icmp eq i32 %4681, %4683
  br i1 %4686, label %4687, label %4720

4687:                                             ; preds = %4685
  store i32 0, ptr %4, align 4, !tbaa !5
  %4688 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4688, ptr %6, align 4, !tbaa !5
  br i1 %4595, label %4727, label %4689

4689:                                             ; preds = %4687, %4714
  %4690 = phi i64 [ %4718, %4714 ], [ 1, %4687 ]
  %4691 = getelementptr inbounds i32, ptr %4, i64 %4690
  %4692 = load i32, ptr %4691, align 4, !tbaa !5
  %4693 = getelementptr inbounds i32, ptr %12, i64 %4690
  %4694 = load i32, ptr %4693, align 4, !tbaa !5
  %4695 = add nsw i32 %4694, -1
  %4696 = icmp slt i32 %4692, %4695
  br i1 %4696, label %4697, label %4712

4697:                                             ; preds = %4689
  br i1 %4684, label %4704, label %4698

4698:                                             ; preds = %4697
  %4699 = getelementptr inbounds i32, ptr %7, i64 %4690
  %4700 = load i32, ptr %4699, align 4, !tbaa !5
  %4701 = getelementptr inbounds i32, ptr %6, i64 %4690
  %4702 = load i32, ptr %4701, align 4, !tbaa !5
  %4703 = add nsw i32 %4702, %4700
  store i32 %4703, ptr %4701, align 4, !tbaa !5
  br label %4722

4704:                                             ; preds = %4680, %4697
  %4705 = phi i32 [ %4692, %4697 ], [ %4681, %4680 ]
  %4706 = phi ptr [ %4691, %4697 ], [ %4, %4680 ]
  %4707 = phi i64 [ %4690, %4697 ], [ 0, %4680 ]
  %4708 = add nsw i32 %4705, 1
  store i32 %4708, ptr %4706, align 4, !tbaa !5
  %4709 = getelementptr inbounds i32, ptr %7, i64 %4707
  %4710 = load i32, ptr %4709, align 4, !tbaa !5
  %4711 = getelementptr inbounds i32, ptr %6, i64 %4707
  br label %4722

4712:                                             ; preds = %4689
  %4713 = icmp eq i32 %4692, %4695
  br i1 %4713, label %4714, label %4720

4714:                                             ; preds = %4712
  store i32 0, ptr %4691, align 4, !tbaa !5
  %4715 = getelementptr inbounds i32, ptr %8, i64 %4690
  %4716 = load i32, ptr %4715, align 4, !tbaa !5
  %4717 = getelementptr inbounds i32, ptr %6, i64 %4690
  store i32 %4716, ptr %4717, align 4, !tbaa !5
  %4718 = add nuw nsw i64 %4690, 1
  %4719 = icmp eq i64 %4718, %4593
  br i1 %4719, label %4727, label %4689, !llvm.loop !177

4720:                                             ; preds = %4685, %4712
  %4721 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

4722:                                             ; preds = %4698, %4704
  %4723 = phi ptr [ %4711, %4704 ], [ %4691, %4698 ]
  %4724 = phi i32 [ %4710, %4704 ], [ 1, %4698 ]
  %4725 = load i32, ptr %4723, align 4, !tbaa !5
  %4726 = add nsw i32 %4725, %4724
  store i32 %4726, ptr %4723, align 4, !tbaa !5
  br label %4727

4727:                                             ; preds = %4714, %4722, %4687, %4670
  %4728 = icmp eq i32 %4679, %5
  br i1 %4728, label %5473, label %4596, !llvm.loop !178

4729:                                             ; preds = %4579, %4865
  %4730 = phi float [ 0.000000e+00, %4579 ], [ %4813, %4865 ]
  %4731 = phi i32 [ 0, %4579 ], [ %4814, %4865 ]
  %4732 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4580, label %4733, label %4802

4733:                                             ; preds = %4729, %4792
  %4734 = phi i32 [ %4801, %4792 ], [ 0, %4729 ]
  %4735 = phi i64 [ %4743, %4792 ], [ %4584, %4729 ]
  %4736 = phi i64 [ %4800, %4792 ], [ %4583, %4729 ]
  %4737 = phi i32 [ %4798, %4792 ], [ %4732, %4729 ]
  %4738 = sub i32 %4582, %4734
  %4739 = tail call i32 @llvm.smin.i32(i32 %4738, i32 0)
  %4740 = sub i32 %4738, %4739
  %4741 = zext i32 %4740 to i64
  %4742 = add nuw nsw i64 %4741, 1
  %4743 = add nsw i64 %4735, -1
  %4744 = icmp ult i32 %4740, 31
  br i1 %4744, label %4780, label %4745

4745:                                             ; preds = %4733
  %4746 = and i64 %4742, 8589934560
  %4747 = sub i64 %4736, %4746
  br label %4748

4748:                                             ; preds = %4748, %4745
  %4749 = phi i64 [ 0, %4745 ], [ %4772, %4748 ]
  %4750 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4745 ], [ %4768, %4748 ]
  %4751 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4745 ], [ %4769, %4748 ]
  %4752 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4745 ], [ %4770, %4748 ]
  %4753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4745 ], [ %4771, %4748 ]
  %4754 = sub i64 %4736, %4749
  %4755 = getelementptr inbounds i32, ptr %11, i64 %4754
  %4756 = getelementptr inbounds i32, ptr %4755, i64 -7
  %4757 = load <8 x i32>, ptr %4756, align 4, !tbaa !5
  %4758 = shufflevector <8 x i32> %4757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4759 = getelementptr inbounds i32, ptr %4755, i64 -15
  %4760 = load <8 x i32>, ptr %4759, align 4, !tbaa !5
  %4761 = shufflevector <8 x i32> %4760, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4762 = getelementptr inbounds i32, ptr %4755, i64 -23
  %4763 = load <8 x i32>, ptr %4762, align 4, !tbaa !5
  %4764 = shufflevector <8 x i32> %4763, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4765 = getelementptr inbounds i32, ptr %4755, i64 -31
  %4766 = load <8 x i32>, ptr %4765, align 4, !tbaa !5
  %4767 = shufflevector <8 x i32> %4766, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4768 = mul <8 x i32> %4758, %4750
  %4769 = mul <8 x i32> %4761, %4751
  %4770 = mul <8 x i32> %4764, %4752
  %4771 = mul <8 x i32> %4767, %4753
  %4772 = add nuw i64 %4749, 32
  %4773 = icmp eq i64 %4772, %4746
  br i1 %4773, label %4774, label %4748, !llvm.loop !179

4774:                                             ; preds = %4748
  %4775 = mul <8 x i32> %4769, %4768
  %4776 = mul <8 x i32> %4770, %4775
  %4777 = mul <8 x i32> %4771, %4776
  %4778 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4777)
  %4779 = icmp eq i64 %4742, %4746
  br i1 %4779, label %4792, label %4780

4780:                                             ; preds = %4733, %4774
  %4781 = phi i64 [ %4736, %4733 ], [ %4747, %4774 ]
  %4782 = phi i32 [ 1, %4733 ], [ %4778, %4774 ]
  br label %4783

4783:                                             ; preds = %4780, %4783
  %4784 = phi i64 [ %4789, %4783 ], [ %4781, %4780 ]
  %4785 = phi i32 [ %4788, %4783 ], [ %4782, %4780 ]
  %4786 = getelementptr inbounds i32, ptr %11, i64 %4784
  %4787 = load i32, ptr %4786, align 4, !tbaa !5
  %4788 = mul nsw i32 %4787, %4785
  %4789 = add nsw i64 %4784, -1
  %4790 = trunc i64 %4784 to i32
  %4791 = icmp sgt i32 %4790, 0
  br i1 %4791, label %4783, label %4792, !llvm.loop !180

4792:                                             ; preds = %4783, %4774
  %4793 = phi i32 [ %4778, %4774 ], [ %4788, %4783 ]
  %4794 = and i64 %4743, 4294967295
  %4795 = getelementptr inbounds i32, ptr %6, i64 %4794
  %4796 = load i32, ptr %4795, align 4, !tbaa !5
  %4797 = mul nsw i32 %4796, %4793
  %4798 = add nsw i32 %4797, %4737
  %4799 = icmp sgt i64 %4735, 2
  %4800 = add nsw i64 %4736, -1
  %4801 = add i32 %4734, 1
  br i1 %4799, label %4733, label %4802, !llvm.loop !181

4802:                                             ; preds = %4792, %4729
  %4803 = phi i32 [ %4732, %4729 ], [ %4798, %4792 ]
  %4804 = icmp slt i32 %4803, %5
  br i1 %4804, label %4807, label %4805

4805:                                             ; preds = %4802
  %4806 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

4807:                                             ; preds = %4802
  %4808 = sext i32 %4803 to i64
  %4809 = getelementptr inbounds i8, ptr %4263, i64 %4808
  %4810 = load i8, ptr %4809, align 1, !tbaa !11
  %4811 = uitofp i8 %4810 to float
  %4812 = fmul fast float %4811, %4811
  %4813 = fadd fast float %4812, %4730
  store float %4813, ptr %4265, align 4, !tbaa !162
  %4814 = add nuw nsw i32 %4731, 1
  br i1 %4581, label %4815, label %4865

4815:                                             ; preds = %4807
  %4816 = load i32, ptr %4, align 4, !tbaa !5
  %4817 = load i32, ptr %12, align 4, !tbaa !5
  %4818 = add nsw i32 %4817, -1
  %4819 = icmp slt i32 %4816, %4818
  br i1 %4819, label %4842, label %4820

4820:                                             ; preds = %4815
  %4821 = icmp eq i32 %4816, %4818
  br i1 %4821, label %4822, label %4858

4822:                                             ; preds = %4820
  store i32 0, ptr %4, align 4, !tbaa !5
  %4823 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4823, ptr %6, align 4, !tbaa !5
  br i1 %4586, label %4865, label %4824

4824:                                             ; preds = %4822, %4852
  %4825 = phi i64 [ %4856, %4852 ], [ 1, %4822 ]
  %4826 = getelementptr inbounds i32, ptr %4, i64 %4825
  %4827 = load i32, ptr %4826, align 4, !tbaa !5
  %4828 = getelementptr inbounds i32, ptr %12, i64 %4825
  %4829 = load i32, ptr %4828, align 4, !tbaa !5
  %4830 = add nsw i32 %4829, -1
  %4831 = icmp slt i32 %4827, %4830
  br i1 %4831, label %4832, label %4850

4832:                                             ; preds = %4824
  br i1 %4819, label %4842, label %4833

4833:                                             ; preds = %4832
  %4834 = shl i64 %4825, 32
  %4835 = add i64 %4834, -4294967296
  %4836 = ashr exact i64 %4835, 32
  %4837 = getelementptr inbounds i32, ptr %7, i64 %4836
  %4838 = load i32, ptr %4837, align 4, !tbaa !5
  %4839 = getelementptr inbounds i32, ptr %6, i64 %4825
  %4840 = load i32, ptr %4839, align 4, !tbaa !5
  %4841 = add nsw i32 %4840, %4838
  store i32 %4841, ptr %4839, align 4, !tbaa !5
  br label %4860

4842:                                             ; preds = %4815, %4832
  %4843 = phi i32 [ %4827, %4832 ], [ %4816, %4815 ]
  %4844 = phi ptr [ %4826, %4832 ], [ %4, %4815 ]
  %4845 = phi i64 [ %4825, %4832 ], [ 0, %4815 ]
  %4846 = add nsw i32 %4843, 1
  store i32 %4846, ptr %4844, align 4, !tbaa !5
  %4847 = getelementptr inbounds i32, ptr %7, i64 %4845
  %4848 = load i32, ptr %4847, align 4, !tbaa !5
  %4849 = getelementptr inbounds i32, ptr %6, i64 %4845
  br label %4860

4850:                                             ; preds = %4824
  %4851 = icmp eq i32 %4827, %4830
  br i1 %4851, label %4852, label %4858

4852:                                             ; preds = %4850
  store i32 0, ptr %4826, align 4, !tbaa !5
  %4853 = getelementptr inbounds i32, ptr %8, i64 %4825
  %4854 = load i32, ptr %4853, align 4, !tbaa !5
  %4855 = getelementptr inbounds i32, ptr %6, i64 %4825
  store i32 %4854, ptr %4855, align 4, !tbaa !5
  %4856 = add nuw nsw i64 %4825, 1
  %4857 = icmp eq i64 %4856, %4584
  br i1 %4857, label %4865, label %4824, !llvm.loop !182

4858:                                             ; preds = %4820, %4850
  %4859 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

4860:                                             ; preds = %4833, %4842
  %4861 = phi ptr [ %4849, %4842 ], [ %4826, %4833 ]
  %4862 = phi i32 [ %4848, %4842 ], [ 1, %4833 ]
  %4863 = load i32, ptr %4861, align 4, !tbaa !5
  %4864 = add nsw i32 %4863, %4862
  store i32 %4864, ptr %4861, align 4, !tbaa !5
  br label %4865

4865:                                             ; preds = %4852, %4860, %4822, %4807
  %4866 = icmp eq i32 %4814, %5
  br i1 %4866, label %5473, label %4729, !llvm.loop !183

4867:                                             ; preds = %4271
  %4868 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5473

4869:                                             ; preds = %18
  %4870 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4871 = load ptr, ptr %4870, align 8, !tbaa !9
  %4872 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4873 = load ptr, ptr %4872, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4873, align 8, !tbaa !18
  %4874 = icmp eq i32 %13, 0
  br i1 %4874, label %4875, label %4879

4875:                                             ; preds = %4869
  %4876 = load i8, ptr %4871, align 1, !tbaa !11
  %4877 = uitofp i8 %4876 to double
  %4878 = fmul fast double %4877, %4877
  store double %4878, ptr %4873, align 8, !tbaa !18
  br label %5473

4879:                                             ; preds = %4869
  switch i32 %1, label %5471 [
    i32 1, label %4880
    i32 0, label %5177
  ]

4880:                                             ; preds = %4879
  %4881 = getelementptr inbounds i32, ptr %3, i64 %19
  %4882 = load i32, ptr %4881, align 4, !tbaa !5
  %4883 = icmp eq i32 %4882, 0
  %4884 = icmp sgt i32 %5, 0
  br i1 %4883, label %4894, label %4885

4885:                                             ; preds = %4880
  br i1 %4884, label %4886, label %5473

4886:                                             ; preds = %4885
  %4887 = icmp sgt i32 %13, 1
  %4888 = icmp sgt i32 %13, 0
  %4889 = add i32 %13, -2
  %4890 = zext i32 %4889 to i64
  %4891 = zext i32 %13 to i64
  %4892 = add nuw i32 %5, 1
  %4893 = icmp eq i32 %13, 1
  br label %5039

4894:                                             ; preds = %4880
  br i1 %4884, label %4895, label %5473

4895:                                             ; preds = %4894
  %4896 = icmp sgt i32 %13, 1
  %4897 = icmp sgt i32 %13, 0
  %4898 = add i32 %13, -2
  %4899 = zext i32 %4898 to i64
  %4900 = zext i32 %13 to i64
  %4901 = add nuw i32 %5, 1
  %4902 = icmp eq i32 %13, 1
  br label %4903

4903:                                             ; preds = %4895, %5037
  %4904 = phi double [ 0.000000e+00, %4895 ], [ %4987, %5037 ]
  %4905 = phi i32 [ 0, %4895 ], [ %4989, %5037 ]
  %4906 = phi double [ 0.000000e+00, %4895 ], [ %4988, %5037 ]
  %4907 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4896, label %4908, label %4977

4908:                                             ; preds = %4903, %4967
  %4909 = phi i32 [ %4976, %4967 ], [ 0, %4903 ]
  %4910 = phi i64 [ %4918, %4967 ], [ %4900, %4903 ]
  %4911 = phi i64 [ %4975, %4967 ], [ %4899, %4903 ]
  %4912 = phi i32 [ %4973, %4967 ], [ %4907, %4903 ]
  %4913 = sub i32 %4898, %4909
  %4914 = tail call i32 @llvm.smin.i32(i32 %4913, i32 0)
  %4915 = sub i32 %4913, %4914
  %4916 = zext i32 %4915 to i64
  %4917 = add nuw nsw i64 %4916, 1
  %4918 = add nsw i64 %4910, -1
  %4919 = icmp ult i32 %4915, 31
  br i1 %4919, label %4955, label %4920

4920:                                             ; preds = %4908
  %4921 = and i64 %4917, 8589934560
  %4922 = sub i64 %4911, %4921
  br label %4923

4923:                                             ; preds = %4923, %4920
  %4924 = phi i64 [ 0, %4920 ], [ %4947, %4923 ]
  %4925 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4920 ], [ %4943, %4923 ]
  %4926 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4920 ], [ %4944, %4923 ]
  %4927 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4920 ], [ %4945, %4923 ]
  %4928 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4920 ], [ %4946, %4923 ]
  %4929 = sub i64 %4911, %4924
  %4930 = getelementptr inbounds i32, ptr %9, i64 %4929
  %4931 = getelementptr inbounds i32, ptr %4930, i64 -7
  %4932 = load <8 x i32>, ptr %4931, align 4, !tbaa !5
  %4933 = shufflevector <8 x i32> %4932, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4934 = getelementptr inbounds i32, ptr %4930, i64 -15
  %4935 = load <8 x i32>, ptr %4934, align 4, !tbaa !5
  %4936 = shufflevector <8 x i32> %4935, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4937 = getelementptr inbounds i32, ptr %4930, i64 -23
  %4938 = load <8 x i32>, ptr %4937, align 4, !tbaa !5
  %4939 = shufflevector <8 x i32> %4938, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4940 = getelementptr inbounds i32, ptr %4930, i64 -31
  %4941 = load <8 x i32>, ptr %4940, align 4, !tbaa !5
  %4942 = shufflevector <8 x i32> %4941, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4943 = mul <8 x i32> %4933, %4925
  %4944 = mul <8 x i32> %4936, %4926
  %4945 = mul <8 x i32> %4939, %4927
  %4946 = mul <8 x i32> %4942, %4928
  %4947 = add nuw i64 %4924, 32
  %4948 = icmp eq i64 %4947, %4921
  br i1 %4948, label %4949, label %4923, !llvm.loop !184

4949:                                             ; preds = %4923
  %4950 = mul <8 x i32> %4944, %4943
  %4951 = mul <8 x i32> %4945, %4950
  %4952 = mul <8 x i32> %4946, %4951
  %4953 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4952)
  %4954 = icmp eq i64 %4917, %4921
  br i1 %4954, label %4967, label %4955

4955:                                             ; preds = %4908, %4949
  %4956 = phi i64 [ %4911, %4908 ], [ %4922, %4949 ]
  %4957 = phi i32 [ 1, %4908 ], [ %4953, %4949 ]
  br label %4958

4958:                                             ; preds = %4955, %4958
  %4959 = phi i64 [ %4964, %4958 ], [ %4956, %4955 ]
  %4960 = phi i32 [ %4963, %4958 ], [ %4957, %4955 ]
  %4961 = getelementptr inbounds i32, ptr %9, i64 %4959
  %4962 = load i32, ptr %4961, align 4, !tbaa !5
  %4963 = mul nsw i32 %4962, %4960
  %4964 = add nsw i64 %4959, -1
  %4965 = trunc i64 %4959 to i32
  %4966 = icmp sgt i32 %4965, 0
  br i1 %4966, label %4958, label %4967, !llvm.loop !185

4967:                                             ; preds = %4958, %4949
  %4968 = phi i32 [ %4953, %4949 ], [ %4963, %4958 ]
  %4969 = and i64 %4918, 4294967295
  %4970 = getelementptr inbounds i32, ptr %6, i64 %4969
  %4971 = load i32, ptr %4970, align 4, !tbaa !5
  %4972 = mul nsw i32 %4971, %4968
  %4973 = add nsw i32 %4972, %4912
  %4974 = icmp sgt i64 %4910, 2
  %4975 = add nsw i64 %4911, -1
  %4976 = add i32 %4909, 1
  br i1 %4974, label %4908, label %4977, !llvm.loop !186

4977:                                             ; preds = %4967, %4903
  %4978 = phi i32 [ %4907, %4903 ], [ %4973, %4967 ]
  %4979 = sext i32 %4978 to i64
  %4980 = getelementptr inbounds double, ptr %2, i64 %4979
  %4981 = load double, ptr %4980, align 8, !tbaa !18
  %4982 = getelementptr inbounds i8, ptr %4871, i64 %4979
  %4983 = load i8, ptr %4982, align 1, !tbaa !11
  %4984 = uitofp i8 %4983 to double
  %4985 = fmul fast double %4981, %4984
  %4986 = fmul fast double %4985, %4985
  %4987 = fadd fast double %4986, %4904
  store double %4987, ptr %4873, align 8, !tbaa !18
  %4988 = fadd fast double %4981, %4906
  %4989 = add nuw nsw i32 %4905, 1
  br i1 %4897, label %4990, label %5037

4990:                                             ; preds = %4977
  %4991 = load i32, ptr %4, align 4, !tbaa !5
  %4992 = load i32, ptr %12, align 4, !tbaa !5
  %4993 = add nsw i32 %4992, -1
  %4994 = icmp slt i32 %4991, %4993
  br i1 %4994, label %5014, label %4995

4995:                                             ; preds = %4990
  %4996 = icmp eq i32 %4991, %4993
  br i1 %4996, label %4997, label %5030

4997:                                             ; preds = %4995
  store i32 0, ptr %4, align 4, !tbaa !5
  %4998 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4998, ptr %6, align 4, !tbaa !5
  br i1 %4902, label %5037, label %4999

4999:                                             ; preds = %4997, %5024
  %5000 = phi i64 [ %5028, %5024 ], [ 1, %4997 ]
  %5001 = getelementptr inbounds i32, ptr %4, i64 %5000
  %5002 = load i32, ptr %5001, align 4, !tbaa !5
  %5003 = getelementptr inbounds i32, ptr %12, i64 %5000
  %5004 = load i32, ptr %5003, align 4, !tbaa !5
  %5005 = add nsw i32 %5004, -1
  %5006 = icmp slt i32 %5002, %5005
  br i1 %5006, label %5007, label %5022

5007:                                             ; preds = %4999
  br i1 %4994, label %5014, label %5008

5008:                                             ; preds = %5007
  %5009 = getelementptr inbounds i32, ptr %7, i64 %5000
  %5010 = load i32, ptr %5009, align 4, !tbaa !5
  %5011 = getelementptr inbounds i32, ptr %6, i64 %5000
  %5012 = load i32, ptr %5011, align 4, !tbaa !5
  %5013 = add nsw i32 %5012, %5010
  store i32 %5013, ptr %5011, align 4, !tbaa !5
  br label %5032

5014:                                             ; preds = %4990, %5007
  %5015 = phi i32 [ %5002, %5007 ], [ %4991, %4990 ]
  %5016 = phi ptr [ %5001, %5007 ], [ %4, %4990 ]
  %5017 = phi i64 [ %5000, %5007 ], [ 0, %4990 ]
  %5018 = add nsw i32 %5015, 1
  store i32 %5018, ptr %5016, align 4, !tbaa !5
  %5019 = getelementptr inbounds i32, ptr %7, i64 %5017
  %5020 = load i32, ptr %5019, align 4, !tbaa !5
  %5021 = getelementptr inbounds i32, ptr %6, i64 %5017
  br label %5032

5022:                                             ; preds = %4999
  %5023 = icmp eq i32 %5002, %5005
  br i1 %5023, label %5024, label %5030

5024:                                             ; preds = %5022
  store i32 0, ptr %5001, align 4, !tbaa !5
  %5025 = getelementptr inbounds i32, ptr %8, i64 %5000
  %5026 = load i32, ptr %5025, align 4, !tbaa !5
  %5027 = getelementptr inbounds i32, ptr %6, i64 %5000
  store i32 %5026, ptr %5027, align 4, !tbaa !5
  %5028 = add nuw nsw i64 %5000, 1
  %5029 = icmp eq i64 %5028, %4900
  br i1 %5029, label %5037, label %4999, !llvm.loop !187

5030:                                             ; preds = %4995, %5022
  %5031 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

5032:                                             ; preds = %5008, %5014
  %5033 = phi ptr [ %5021, %5014 ], [ %5001, %5008 ]
  %5034 = phi i32 [ %5020, %5014 ], [ 1, %5008 ]
  %5035 = load i32, ptr %5033, align 4, !tbaa !5
  %5036 = add nsw i32 %5035, %5034
  store i32 %5036, ptr %5033, align 4, !tbaa !5
  br label %5037

5037:                                             ; preds = %5024, %5032, %4997, %4977
  %5038 = icmp eq i32 %4989, %5
  br i1 %5038, label %5473, label %4903, !llvm.loop !188

5039:                                             ; preds = %4886, %5175
  %5040 = phi double [ 0.000000e+00, %4886 ], [ %5123, %5175 ]
  %5041 = phi i32 [ 0, %4886 ], [ %5124, %5175 ]
  %5042 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4887, label %5043, label %5112

5043:                                             ; preds = %5039, %5102
  %5044 = phi i32 [ %5111, %5102 ], [ 0, %5039 ]
  %5045 = phi i64 [ %5053, %5102 ], [ %4891, %5039 ]
  %5046 = phi i64 [ %5110, %5102 ], [ %4890, %5039 ]
  %5047 = phi i32 [ %5108, %5102 ], [ %5042, %5039 ]
  %5048 = sub i32 %4889, %5044
  %5049 = tail call i32 @llvm.smin.i32(i32 %5048, i32 0)
  %5050 = sub i32 %5048, %5049
  %5051 = zext i32 %5050 to i64
  %5052 = add nuw nsw i64 %5051, 1
  %5053 = add nsw i64 %5045, -1
  %5054 = icmp ult i32 %5050, 31
  br i1 %5054, label %5090, label %5055

5055:                                             ; preds = %5043
  %5056 = and i64 %5052, 8589934560
  %5057 = sub i64 %5046, %5056
  br label %5058

5058:                                             ; preds = %5058, %5055
  %5059 = phi i64 [ 0, %5055 ], [ %5082, %5058 ]
  %5060 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5055 ], [ %5078, %5058 ]
  %5061 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5055 ], [ %5079, %5058 ]
  %5062 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5055 ], [ %5080, %5058 ]
  %5063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5055 ], [ %5081, %5058 ]
  %5064 = sub i64 %5046, %5059
  %5065 = getelementptr inbounds i32, ptr %11, i64 %5064
  %5066 = getelementptr inbounds i32, ptr %5065, i64 -7
  %5067 = load <8 x i32>, ptr %5066, align 4, !tbaa !5
  %5068 = shufflevector <8 x i32> %5067, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5069 = getelementptr inbounds i32, ptr %5065, i64 -15
  %5070 = load <8 x i32>, ptr %5069, align 4, !tbaa !5
  %5071 = shufflevector <8 x i32> %5070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5072 = getelementptr inbounds i32, ptr %5065, i64 -23
  %5073 = load <8 x i32>, ptr %5072, align 4, !tbaa !5
  %5074 = shufflevector <8 x i32> %5073, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5075 = getelementptr inbounds i32, ptr %5065, i64 -31
  %5076 = load <8 x i32>, ptr %5075, align 4, !tbaa !5
  %5077 = shufflevector <8 x i32> %5076, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5078 = mul <8 x i32> %5068, %5060
  %5079 = mul <8 x i32> %5071, %5061
  %5080 = mul <8 x i32> %5074, %5062
  %5081 = mul <8 x i32> %5077, %5063
  %5082 = add nuw i64 %5059, 32
  %5083 = icmp eq i64 %5082, %5056
  br i1 %5083, label %5084, label %5058, !llvm.loop !189

5084:                                             ; preds = %5058
  %5085 = mul <8 x i32> %5079, %5078
  %5086 = mul <8 x i32> %5080, %5085
  %5087 = mul <8 x i32> %5081, %5086
  %5088 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5087)
  %5089 = icmp eq i64 %5052, %5056
  br i1 %5089, label %5102, label %5090

5090:                                             ; preds = %5043, %5084
  %5091 = phi i64 [ %5046, %5043 ], [ %5057, %5084 ]
  %5092 = phi i32 [ 1, %5043 ], [ %5088, %5084 ]
  br label %5093

5093:                                             ; preds = %5090, %5093
  %5094 = phi i64 [ %5099, %5093 ], [ %5091, %5090 ]
  %5095 = phi i32 [ %5098, %5093 ], [ %5092, %5090 ]
  %5096 = getelementptr inbounds i32, ptr %11, i64 %5094
  %5097 = load i32, ptr %5096, align 4, !tbaa !5
  %5098 = mul nsw i32 %5097, %5095
  %5099 = add nsw i64 %5094, -1
  %5100 = trunc i64 %5094 to i32
  %5101 = icmp sgt i32 %5100, 0
  br i1 %5101, label %5093, label %5102, !llvm.loop !190

5102:                                             ; preds = %5093, %5084
  %5103 = phi i32 [ %5088, %5084 ], [ %5098, %5093 ]
  %5104 = and i64 %5053, 4294967295
  %5105 = getelementptr inbounds i32, ptr %6, i64 %5104
  %5106 = load i32, ptr %5105, align 4, !tbaa !5
  %5107 = mul nsw i32 %5106, %5103
  %5108 = add nsw i32 %5107, %5047
  %5109 = icmp sgt i64 %5045, 2
  %5110 = add nsw i64 %5046, -1
  %5111 = add i32 %5044, 1
  br i1 %5109, label %5043, label %5112, !llvm.loop !191

5112:                                             ; preds = %5102, %5039
  %5113 = phi i32 [ %5042, %5039 ], [ %5108, %5102 ]
  %5114 = icmp slt i32 %5113, %5
  br i1 %5114, label %5117, label %5115

5115:                                             ; preds = %5112
  %5116 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

5117:                                             ; preds = %5112
  %5118 = sext i32 %5113 to i64
  %5119 = getelementptr inbounds i8, ptr %4871, i64 %5118
  %5120 = load i8, ptr %5119, align 1, !tbaa !11
  %5121 = uitofp i8 %5120 to double
  %5122 = fmul fast double %5121, %5121
  %5123 = fadd fast double %5122, %5040
  store double %5123, ptr %4873, align 8, !tbaa !18
  %5124 = add nuw nsw i32 %5041, 1
  br i1 %4888, label %5125, label %5175

5125:                                             ; preds = %5117
  %5126 = load i32, ptr %4, align 4, !tbaa !5
  %5127 = load i32, ptr %12, align 4, !tbaa !5
  %5128 = add nsw i32 %5127, -1
  %5129 = icmp slt i32 %5126, %5128
  br i1 %5129, label %5152, label %5130

5130:                                             ; preds = %5125
  %5131 = icmp eq i32 %5126, %5128
  br i1 %5131, label %5132, label %5168

5132:                                             ; preds = %5130
  store i32 0, ptr %4, align 4, !tbaa !5
  %5133 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5133, ptr %6, align 4, !tbaa !5
  br i1 %4893, label %5175, label %5134

5134:                                             ; preds = %5132, %5162
  %5135 = phi i64 [ %5166, %5162 ], [ 1, %5132 ]
  %5136 = getelementptr inbounds i32, ptr %4, i64 %5135
  %5137 = load i32, ptr %5136, align 4, !tbaa !5
  %5138 = getelementptr inbounds i32, ptr %12, i64 %5135
  %5139 = load i32, ptr %5138, align 4, !tbaa !5
  %5140 = add nsw i32 %5139, -1
  %5141 = icmp slt i32 %5137, %5140
  br i1 %5141, label %5142, label %5160

5142:                                             ; preds = %5134
  br i1 %5129, label %5152, label %5143

5143:                                             ; preds = %5142
  %5144 = shl i64 %5135, 32
  %5145 = add i64 %5144, -4294967296
  %5146 = ashr exact i64 %5145, 32
  %5147 = getelementptr inbounds i32, ptr %7, i64 %5146
  %5148 = load i32, ptr %5147, align 4, !tbaa !5
  %5149 = getelementptr inbounds i32, ptr %6, i64 %5135
  %5150 = load i32, ptr %5149, align 4, !tbaa !5
  %5151 = add nsw i32 %5150, %5148
  store i32 %5151, ptr %5149, align 4, !tbaa !5
  br label %5170

5152:                                             ; preds = %5125, %5142
  %5153 = phi i32 [ %5137, %5142 ], [ %5126, %5125 ]
  %5154 = phi ptr [ %5136, %5142 ], [ %4, %5125 ]
  %5155 = phi i64 [ %5135, %5142 ], [ 0, %5125 ]
  %5156 = add nsw i32 %5153, 1
  store i32 %5156, ptr %5154, align 4, !tbaa !5
  %5157 = getelementptr inbounds i32, ptr %7, i64 %5155
  %5158 = load i32, ptr %5157, align 4, !tbaa !5
  %5159 = getelementptr inbounds i32, ptr %6, i64 %5155
  br label %5170

5160:                                             ; preds = %5134
  %5161 = icmp eq i32 %5137, %5140
  br i1 %5161, label %5162, label %5168

5162:                                             ; preds = %5160
  store i32 0, ptr %5136, align 4, !tbaa !5
  %5163 = getelementptr inbounds i32, ptr %8, i64 %5135
  %5164 = load i32, ptr %5163, align 4, !tbaa !5
  %5165 = getelementptr inbounds i32, ptr %6, i64 %5135
  store i32 %5164, ptr %5165, align 4, !tbaa !5
  %5166 = add nuw nsw i64 %5135, 1
  %5167 = icmp eq i64 %5166, %4891
  br i1 %5167, label %5175, label %5134, !llvm.loop !192

5168:                                             ; preds = %5130, %5160
  %5169 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

5170:                                             ; preds = %5143, %5152
  %5171 = phi ptr [ %5159, %5152 ], [ %5136, %5143 ]
  %5172 = phi i32 [ %5158, %5152 ], [ 1, %5143 ]
  %5173 = load i32, ptr %5171, align 4, !tbaa !5
  %5174 = add nsw i32 %5173, %5172
  store i32 %5174, ptr %5171, align 4, !tbaa !5
  br label %5175

5175:                                             ; preds = %5162, %5170, %5132, %5117
  %5176 = icmp eq i32 %5124, %5
  br i1 %5176, label %5473, label %5039, !llvm.loop !193

5177:                                             ; preds = %4879
  %5178 = getelementptr inbounds i32, ptr %3, i64 %19
  %5179 = load i32, ptr %5178, align 4, !tbaa !5
  %5180 = icmp eq i32 %5179, 0
  %5181 = icmp sgt i32 %5, 0
  br i1 %5180, label %5191, label %5182

5182:                                             ; preds = %5177
  br i1 %5181, label %5183, label %5473

5183:                                             ; preds = %5182
  %5184 = icmp sgt i32 %13, 1
  %5185 = icmp sgt i32 %13, 0
  %5186 = add i32 %13, -2
  %5187 = zext i32 %5186 to i64
  %5188 = zext i32 %13 to i64
  %5189 = add nuw i32 %5, 1
  %5190 = icmp eq i32 %13, 1
  br label %5333

5191:                                             ; preds = %5177
  br i1 %5181, label %5192, label %5473

5192:                                             ; preds = %5191
  %5193 = icmp sgt i32 %13, 1
  %5194 = icmp sgt i32 %13, 0
  %5195 = add i32 %13, -2
  %5196 = zext i32 %5195 to i64
  %5197 = zext i32 %13 to i64
  %5198 = add nuw i32 %5, 1
  %5199 = icmp eq i32 %13, 1
  br label %5200

5200:                                             ; preds = %5192, %5331
  %5201 = phi double [ 0.000000e+00, %5192 ], [ %5281, %5331 ]
  %5202 = phi i32 [ 0, %5192 ], [ %5283, %5331 ]
  %5203 = phi double [ 0.000000e+00, %5192 ], [ %5282, %5331 ]
  %5204 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5193, label %5205, label %5274

5205:                                             ; preds = %5200, %5264
  %5206 = phi i32 [ %5273, %5264 ], [ 0, %5200 ]
  %5207 = phi i64 [ %5215, %5264 ], [ %5197, %5200 ]
  %5208 = phi i64 [ %5272, %5264 ], [ %5196, %5200 ]
  %5209 = phi i32 [ %5270, %5264 ], [ %5204, %5200 ]
  %5210 = sub i32 %5195, %5206
  %5211 = tail call i32 @llvm.smin.i32(i32 %5210, i32 0)
  %5212 = sub i32 %5210, %5211
  %5213 = zext i32 %5212 to i64
  %5214 = add nuw nsw i64 %5213, 1
  %5215 = add nsw i64 %5207, -1
  %5216 = icmp ult i32 %5212, 31
  br i1 %5216, label %5252, label %5217

5217:                                             ; preds = %5205
  %5218 = and i64 %5214, 8589934560
  %5219 = sub i64 %5208, %5218
  br label %5220

5220:                                             ; preds = %5220, %5217
  %5221 = phi i64 [ 0, %5217 ], [ %5244, %5220 ]
  %5222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5217 ], [ %5240, %5220 ]
  %5223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5217 ], [ %5241, %5220 ]
  %5224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5217 ], [ %5242, %5220 ]
  %5225 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5217 ], [ %5243, %5220 ]
  %5226 = sub i64 %5208, %5221
  %5227 = getelementptr inbounds i32, ptr %9, i64 %5226
  %5228 = getelementptr inbounds i32, ptr %5227, i64 -7
  %5229 = load <8 x i32>, ptr %5228, align 4, !tbaa !5
  %5230 = shufflevector <8 x i32> %5229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5231 = getelementptr inbounds i32, ptr %5227, i64 -15
  %5232 = load <8 x i32>, ptr %5231, align 4, !tbaa !5
  %5233 = shufflevector <8 x i32> %5232, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5234 = getelementptr inbounds i32, ptr %5227, i64 -23
  %5235 = load <8 x i32>, ptr %5234, align 4, !tbaa !5
  %5236 = shufflevector <8 x i32> %5235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5237 = getelementptr inbounds i32, ptr %5227, i64 -31
  %5238 = load <8 x i32>, ptr %5237, align 4, !tbaa !5
  %5239 = shufflevector <8 x i32> %5238, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5240 = mul <8 x i32> %5230, %5222
  %5241 = mul <8 x i32> %5233, %5223
  %5242 = mul <8 x i32> %5236, %5224
  %5243 = mul <8 x i32> %5239, %5225
  %5244 = add nuw i64 %5221, 32
  %5245 = icmp eq i64 %5244, %5218
  br i1 %5245, label %5246, label %5220, !llvm.loop !194

5246:                                             ; preds = %5220
  %5247 = mul <8 x i32> %5241, %5240
  %5248 = mul <8 x i32> %5242, %5247
  %5249 = mul <8 x i32> %5243, %5248
  %5250 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5249)
  %5251 = icmp eq i64 %5214, %5218
  br i1 %5251, label %5264, label %5252

5252:                                             ; preds = %5205, %5246
  %5253 = phi i64 [ %5208, %5205 ], [ %5219, %5246 ]
  %5254 = phi i32 [ 1, %5205 ], [ %5250, %5246 ]
  br label %5255

5255:                                             ; preds = %5252, %5255
  %5256 = phi i64 [ %5261, %5255 ], [ %5253, %5252 ]
  %5257 = phi i32 [ %5260, %5255 ], [ %5254, %5252 ]
  %5258 = getelementptr inbounds i32, ptr %9, i64 %5256
  %5259 = load i32, ptr %5258, align 4, !tbaa !5
  %5260 = mul nsw i32 %5259, %5257
  %5261 = add nsw i64 %5256, -1
  %5262 = trunc i64 %5256 to i32
  %5263 = icmp sgt i32 %5262, 0
  br i1 %5263, label %5255, label %5264, !llvm.loop !195

5264:                                             ; preds = %5255, %5246
  %5265 = phi i32 [ %5250, %5246 ], [ %5260, %5255 ]
  %5266 = and i64 %5215, 4294967295
  %5267 = getelementptr inbounds i32, ptr %6, i64 %5266
  %5268 = load i32, ptr %5267, align 4, !tbaa !5
  %5269 = mul nsw i32 %5268, %5265
  %5270 = add nsw i32 %5269, %5209
  %5271 = icmp sgt i64 %5207, 2
  %5272 = add nsw i64 %5208, -1
  %5273 = add i32 %5206, 1
  br i1 %5271, label %5205, label %5274, !llvm.loop !196

5274:                                             ; preds = %5264, %5200
  %5275 = phi i32 [ %5204, %5200 ], [ %5270, %5264 ]
  %5276 = sext i32 %5275 to i64
  %5277 = getelementptr inbounds i8, ptr %4871, i64 %5276
  %5278 = load i8, ptr %5277, align 1, !tbaa !11
  %5279 = uitofp i8 %5278 to double
  %5280 = fmul fast double %5279, %5279
  %5281 = fadd fast double %5280, %5201
  store double %5281, ptr %4873, align 8, !tbaa !18
  %5282 = fadd fast double %5203, 1.000000e+00
  %5283 = add nuw nsw i32 %5202, 1
  br i1 %5194, label %5284, label %5331

5284:                                             ; preds = %5274
  %5285 = load i32, ptr %4, align 4, !tbaa !5
  %5286 = load i32, ptr %12, align 4, !tbaa !5
  %5287 = add nsw i32 %5286, -1
  %5288 = icmp slt i32 %5285, %5287
  br i1 %5288, label %5308, label %5289

5289:                                             ; preds = %5284
  %5290 = icmp eq i32 %5285, %5287
  br i1 %5290, label %5291, label %5324

5291:                                             ; preds = %5289
  store i32 0, ptr %4, align 4, !tbaa !5
  %5292 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5292, ptr %6, align 4, !tbaa !5
  br i1 %5199, label %5331, label %5293

5293:                                             ; preds = %5291, %5318
  %5294 = phi i64 [ %5322, %5318 ], [ 1, %5291 ]
  %5295 = getelementptr inbounds i32, ptr %4, i64 %5294
  %5296 = load i32, ptr %5295, align 4, !tbaa !5
  %5297 = getelementptr inbounds i32, ptr %12, i64 %5294
  %5298 = load i32, ptr %5297, align 4, !tbaa !5
  %5299 = add nsw i32 %5298, -1
  %5300 = icmp slt i32 %5296, %5299
  br i1 %5300, label %5301, label %5316

5301:                                             ; preds = %5293
  br i1 %5288, label %5308, label %5302

5302:                                             ; preds = %5301
  %5303 = getelementptr inbounds i32, ptr %7, i64 %5294
  %5304 = load i32, ptr %5303, align 4, !tbaa !5
  %5305 = getelementptr inbounds i32, ptr %6, i64 %5294
  %5306 = load i32, ptr %5305, align 4, !tbaa !5
  %5307 = add nsw i32 %5306, %5304
  store i32 %5307, ptr %5305, align 4, !tbaa !5
  br label %5326

5308:                                             ; preds = %5284, %5301
  %5309 = phi i32 [ %5296, %5301 ], [ %5285, %5284 ]
  %5310 = phi ptr [ %5295, %5301 ], [ %4, %5284 ]
  %5311 = phi i64 [ %5294, %5301 ], [ 0, %5284 ]
  %5312 = add nsw i32 %5309, 1
  store i32 %5312, ptr %5310, align 4, !tbaa !5
  %5313 = getelementptr inbounds i32, ptr %7, i64 %5311
  %5314 = load i32, ptr %5313, align 4, !tbaa !5
  %5315 = getelementptr inbounds i32, ptr %6, i64 %5311
  br label %5326

5316:                                             ; preds = %5293
  %5317 = icmp eq i32 %5296, %5299
  br i1 %5317, label %5318, label %5324

5318:                                             ; preds = %5316
  store i32 0, ptr %5295, align 4, !tbaa !5
  %5319 = getelementptr inbounds i32, ptr %8, i64 %5294
  %5320 = load i32, ptr %5319, align 4, !tbaa !5
  %5321 = getelementptr inbounds i32, ptr %6, i64 %5294
  store i32 %5320, ptr %5321, align 4, !tbaa !5
  %5322 = add nuw nsw i64 %5294, 1
  %5323 = icmp eq i64 %5322, %5197
  br i1 %5323, label %5331, label %5293, !llvm.loop !197

5324:                                             ; preds = %5289, %5316
  %5325 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

5326:                                             ; preds = %5302, %5308
  %5327 = phi ptr [ %5315, %5308 ], [ %5295, %5302 ]
  %5328 = phi i32 [ %5314, %5308 ], [ 1, %5302 ]
  %5329 = load i32, ptr %5327, align 4, !tbaa !5
  %5330 = add nsw i32 %5329, %5328
  store i32 %5330, ptr %5327, align 4, !tbaa !5
  br label %5331

5331:                                             ; preds = %5318, %5326, %5291, %5274
  %5332 = icmp eq i32 %5283, %5
  br i1 %5332, label %5473, label %5200, !llvm.loop !198

5333:                                             ; preds = %5183, %5469
  %5334 = phi double [ 0.000000e+00, %5183 ], [ %5417, %5469 ]
  %5335 = phi i32 [ 0, %5183 ], [ %5418, %5469 ]
  %5336 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5184, label %5337, label %5406

5337:                                             ; preds = %5333, %5396
  %5338 = phi i32 [ %5405, %5396 ], [ 0, %5333 ]
  %5339 = phi i64 [ %5347, %5396 ], [ %5188, %5333 ]
  %5340 = phi i64 [ %5404, %5396 ], [ %5187, %5333 ]
  %5341 = phi i32 [ %5402, %5396 ], [ %5336, %5333 ]
  %5342 = sub i32 %5186, %5338
  %5343 = tail call i32 @llvm.smin.i32(i32 %5342, i32 0)
  %5344 = sub i32 %5342, %5343
  %5345 = zext i32 %5344 to i64
  %5346 = add nuw nsw i64 %5345, 1
  %5347 = add nsw i64 %5339, -1
  %5348 = icmp ult i32 %5344, 31
  br i1 %5348, label %5384, label %5349

5349:                                             ; preds = %5337
  %5350 = and i64 %5346, 8589934560
  %5351 = sub i64 %5340, %5350
  br label %5352

5352:                                             ; preds = %5352, %5349
  %5353 = phi i64 [ 0, %5349 ], [ %5376, %5352 ]
  %5354 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5349 ], [ %5372, %5352 ]
  %5355 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5349 ], [ %5373, %5352 ]
  %5356 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5349 ], [ %5374, %5352 ]
  %5357 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5349 ], [ %5375, %5352 ]
  %5358 = sub i64 %5340, %5353
  %5359 = getelementptr inbounds i32, ptr %11, i64 %5358
  %5360 = getelementptr inbounds i32, ptr %5359, i64 -7
  %5361 = load <8 x i32>, ptr %5360, align 4, !tbaa !5
  %5362 = shufflevector <8 x i32> %5361, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5363 = getelementptr inbounds i32, ptr %5359, i64 -15
  %5364 = load <8 x i32>, ptr %5363, align 4, !tbaa !5
  %5365 = shufflevector <8 x i32> %5364, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5366 = getelementptr inbounds i32, ptr %5359, i64 -23
  %5367 = load <8 x i32>, ptr %5366, align 4, !tbaa !5
  %5368 = shufflevector <8 x i32> %5367, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5369 = getelementptr inbounds i32, ptr %5359, i64 -31
  %5370 = load <8 x i32>, ptr %5369, align 4, !tbaa !5
  %5371 = shufflevector <8 x i32> %5370, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5372 = mul <8 x i32> %5362, %5354
  %5373 = mul <8 x i32> %5365, %5355
  %5374 = mul <8 x i32> %5368, %5356
  %5375 = mul <8 x i32> %5371, %5357
  %5376 = add nuw i64 %5353, 32
  %5377 = icmp eq i64 %5376, %5350
  br i1 %5377, label %5378, label %5352, !llvm.loop !199

5378:                                             ; preds = %5352
  %5379 = mul <8 x i32> %5373, %5372
  %5380 = mul <8 x i32> %5374, %5379
  %5381 = mul <8 x i32> %5375, %5380
  %5382 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5381)
  %5383 = icmp eq i64 %5346, %5350
  br i1 %5383, label %5396, label %5384

5384:                                             ; preds = %5337, %5378
  %5385 = phi i64 [ %5340, %5337 ], [ %5351, %5378 ]
  %5386 = phi i32 [ 1, %5337 ], [ %5382, %5378 ]
  br label %5387

5387:                                             ; preds = %5384, %5387
  %5388 = phi i64 [ %5393, %5387 ], [ %5385, %5384 ]
  %5389 = phi i32 [ %5392, %5387 ], [ %5386, %5384 ]
  %5390 = getelementptr inbounds i32, ptr %11, i64 %5388
  %5391 = load i32, ptr %5390, align 4, !tbaa !5
  %5392 = mul nsw i32 %5391, %5389
  %5393 = add nsw i64 %5388, -1
  %5394 = trunc i64 %5388 to i32
  %5395 = icmp sgt i32 %5394, 0
  br i1 %5395, label %5387, label %5396, !llvm.loop !200

5396:                                             ; preds = %5387, %5378
  %5397 = phi i32 [ %5382, %5378 ], [ %5392, %5387 ]
  %5398 = and i64 %5347, 4294967295
  %5399 = getelementptr inbounds i32, ptr %6, i64 %5398
  %5400 = load i32, ptr %5399, align 4, !tbaa !5
  %5401 = mul nsw i32 %5400, %5397
  %5402 = add nsw i32 %5401, %5341
  %5403 = icmp sgt i64 %5339, 2
  %5404 = add nsw i64 %5340, -1
  %5405 = add i32 %5338, 1
  br i1 %5403, label %5337, label %5406, !llvm.loop !201

5406:                                             ; preds = %5396, %5333
  %5407 = phi i32 [ %5336, %5333 ], [ %5402, %5396 ]
  %5408 = icmp slt i32 %5407, %5
  br i1 %5408, label %5411, label %5409

5409:                                             ; preds = %5406
  %5410 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5478

5411:                                             ; preds = %5406
  %5412 = sext i32 %5407 to i64
  %5413 = getelementptr inbounds i8, ptr %4871, i64 %5412
  %5414 = load i8, ptr %5413, align 1, !tbaa !11
  %5415 = uitofp i8 %5414 to double
  %5416 = fmul fast double %5415, %5415
  %5417 = fadd fast double %5416, %5334
  store double %5417, ptr %4873, align 8, !tbaa !18
  %5418 = add nuw nsw i32 %5335, 1
  br i1 %5185, label %5419, label %5469

5419:                                             ; preds = %5411
  %5420 = load i32, ptr %4, align 4, !tbaa !5
  %5421 = load i32, ptr %12, align 4, !tbaa !5
  %5422 = add nsw i32 %5421, -1
  %5423 = icmp slt i32 %5420, %5422
  br i1 %5423, label %5446, label %5424

5424:                                             ; preds = %5419
  %5425 = icmp eq i32 %5420, %5422
  br i1 %5425, label %5426, label %5462

5426:                                             ; preds = %5424
  store i32 0, ptr %4, align 4, !tbaa !5
  %5427 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5427, ptr %6, align 4, !tbaa !5
  br i1 %5190, label %5469, label %5428

5428:                                             ; preds = %5426, %5456
  %5429 = phi i64 [ %5460, %5456 ], [ 1, %5426 ]
  %5430 = getelementptr inbounds i32, ptr %4, i64 %5429
  %5431 = load i32, ptr %5430, align 4, !tbaa !5
  %5432 = getelementptr inbounds i32, ptr %12, i64 %5429
  %5433 = load i32, ptr %5432, align 4, !tbaa !5
  %5434 = add nsw i32 %5433, -1
  %5435 = icmp slt i32 %5431, %5434
  br i1 %5435, label %5436, label %5454

5436:                                             ; preds = %5428
  br i1 %5423, label %5446, label %5437

5437:                                             ; preds = %5436
  %5438 = shl i64 %5429, 32
  %5439 = add i64 %5438, -4294967296
  %5440 = ashr exact i64 %5439, 32
  %5441 = getelementptr inbounds i32, ptr %7, i64 %5440
  %5442 = load i32, ptr %5441, align 4, !tbaa !5
  %5443 = getelementptr inbounds i32, ptr %6, i64 %5429
  %5444 = load i32, ptr %5443, align 4, !tbaa !5
  %5445 = add nsw i32 %5444, %5442
  store i32 %5445, ptr %5443, align 4, !tbaa !5
  br label %5464

5446:                                             ; preds = %5419, %5436
  %5447 = phi i32 [ %5431, %5436 ], [ %5420, %5419 ]
  %5448 = phi ptr [ %5430, %5436 ], [ %4, %5419 ]
  %5449 = phi i64 [ %5429, %5436 ], [ 0, %5419 ]
  %5450 = add nsw i32 %5447, 1
  store i32 %5450, ptr %5448, align 4, !tbaa !5
  %5451 = getelementptr inbounds i32, ptr %7, i64 %5449
  %5452 = load i32, ptr %5451, align 4, !tbaa !5
  %5453 = getelementptr inbounds i32, ptr %6, i64 %5449
  br label %5464

5454:                                             ; preds = %5428
  %5455 = icmp eq i32 %5431, %5434
  br i1 %5455, label %5456, label %5462

5456:                                             ; preds = %5454
  store i32 0, ptr %5430, align 4, !tbaa !5
  %5457 = getelementptr inbounds i32, ptr %8, i64 %5429
  %5458 = load i32, ptr %5457, align 4, !tbaa !5
  %5459 = getelementptr inbounds i32, ptr %6, i64 %5429
  store i32 %5458, ptr %5459, align 4, !tbaa !5
  %5460 = add nuw nsw i64 %5429, 1
  %5461 = icmp eq i64 %5460, %5188
  br i1 %5461, label %5469, label %5428, !llvm.loop !202

5462:                                             ; preds = %5424, %5454
  %5463 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5478

5464:                                             ; preds = %5437, %5446
  %5465 = phi ptr [ %5453, %5446 ], [ %5430, %5437 ]
  %5466 = phi i32 [ %5452, %5446 ], [ 1, %5437 ]
  %5467 = load i32, ptr %5465, align 4, !tbaa !5
  %5468 = add nsw i32 %5467, %5466
  store i32 %5468, ptr %5465, align 4, !tbaa !5
  br label %5469

5469:                                             ; preds = %5456, %5464, %5426, %5411
  %5470 = icmp eq i32 %5418, %5
  br i1 %5470, label %5473, label %5333, !llvm.loop !203

5471:                                             ; preds = %4879
  %5472 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 92, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5473

5473:                                             ; preds = %5469, %5331, %5175, %5037, %4865, %4727, %4571, %4431, %4257, %4119, %3963, %3825, %3653, %3515, %3359, %3219, %3045, %2907, %2751, %2612, %2438, %2300, %2144, %2003, %1829, %1692, %1537, %1400, %1227, %1089, %933, %794, %620, %483, %328, %191, %5182, %5191, %4885, %4894, %4578, %4587, %4277, %4286, %3970, %3979, %3673, %3682, %3366, %3375, %3065, %3074, %2758, %2767, %2458, %2467, %2151, %2160, %1849, %1858, %1544, %1553, %1246, %1255, %940, %949, %640, %649, %335, %344, %37, %46, %4875, %5471, %4267, %4867, %3663, %4259, %3055, %3655, %2448, %3047, %1839, %2440, %1237, %1831, %630, %1229, %28, %622, %18
  %5474 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %622 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1229 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %1831 ], [ 0.000000e+00, %1237 ], [ 0.000000e+00, %2440 ], [ 0.000000e+00, %1839 ], [ 0.000000e+00, %3047 ], [ 0.000000e+00, %2448 ], [ 0.000000e+00, %3655 ], [ 0.000000e+00, %3055 ], [ 0.000000e+00, %4259 ], [ 0.000000e+00, %3663 ], [ 0.000000e+00, %4867 ], [ 0.000000e+00, %4267 ], [ 0.000000e+00, %5471 ], [ 0.000000e+00, %4875 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %335 ], [ 0.000000e+00, %649 ], [ 0.000000e+00, %640 ], [ 0.000000e+00, %949 ], [ 0.000000e+00, %940 ], [ 0.000000e+00, %1255 ], [ 0.000000e+00, %1246 ], [ 0.000000e+00, %1553 ], [ 0.000000e+00, %1544 ], [ 0.000000e+00, %1858 ], [ 0.000000e+00, %1849 ], [ 0.000000e+00, %2160 ], [ 0.000000e+00, %2151 ], [ 0.000000e+00, %2467 ], [ 0.000000e+00, %2458 ], [ 0.000000e+00, %2767 ], [ 0.000000e+00, %2758 ], [ 0.000000e+00, %3074 ], [ 0.000000e+00, %3065 ], [ 0.000000e+00, %3375 ], [ 0.000000e+00, %3366 ], [ 0.000000e+00, %3682 ], [ 0.000000e+00, %3673 ], [ 0.000000e+00, %3979 ], [ 0.000000e+00, %3970 ], [ 0.000000e+00, %4286 ], [ 0.000000e+00, %4277 ], [ 0.000000e+00, %4587 ], [ 0.000000e+00, %4578 ], [ 0.000000e+00, %4894 ], [ 0.000000e+00, %4885 ], [ 0.000000e+00, %5191 ], [ 0.000000e+00, %5182 ], [ %142, %191 ], [ 0.000000e+00, %328 ], [ %434, %483 ], [ 0.000000e+00, %620 ], [ %745, %794 ], [ 0.000000e+00, %933 ], [ %1040, %1089 ], [ 0.000000e+00, %1227 ], [ %1351, %1400 ], [ 0.000000e+00, %1537 ], [ %1643, %1692 ], [ 0.000000e+00, %1829 ], [ %1954, %2003 ], [ 0.000000e+00, %2144 ], [ %2251, %2300 ], [ 0.000000e+00, %2438 ], [ %2563, %2612 ], [ 0.000000e+00, %2751 ], [ %2858, %2907 ], [ 0.000000e+00, %3045 ], [ %3170, %3219 ], [ 0.000000e+00, %3359 ], [ %3466, %3515 ], [ 0.000000e+00, %3653 ], [ %3776, %3825 ], [ 0.000000e+00, %3963 ], [ %4070, %4119 ], [ 0.000000e+00, %4257 ], [ %4382, %4431 ], [ 0.000000e+00, %4571 ], [ %4678, %4727 ], [ 0.000000e+00, %4865 ], [ %4988, %5037 ], [ 0.000000e+00, %5175 ], [ %5282, %5331 ], [ 0.000000e+00, %5469 ]
  %5475 = phi i32 [ %10, %18 ], [ 1, %622 ], [ 1, %28 ], [ 1, %1229 ], [ 1, %630 ], [ 1, %1831 ], [ 1, %1237 ], [ 1, %2440 ], [ 1, %1839 ], [ 1, %3047 ], [ 1, %2448 ], [ 1, %3655 ], [ 1, %3055 ], [ 1, %4259 ], [ 1, %3663 ], [ 1, %4867 ], [ 1, %4267 ], [ 1, %5471 ], [ 1, %4875 ], [ 1, %46 ], [ 1, %37 ], [ 1, %344 ], [ 1, %335 ], [ 1, %649 ], [ 1, %640 ], [ 1, %949 ], [ 1, %940 ], [ 1, %1255 ], [ 1, %1246 ], [ 1, %1553 ], [ 1, %1544 ], [ 1, %1858 ], [ 1, %1849 ], [ 1, %2160 ], [ 1, %2151 ], [ 1, %2467 ], [ 1, %2458 ], [ 1, %2767 ], [ 1, %2758 ], [ 1, %3074 ], [ 1, %3065 ], [ 1, %3375 ], [ 1, %3366 ], [ 1, %3682 ], [ 1, %3673 ], [ 1, %3979 ], [ 1, %3970 ], [ 1, %4286 ], [ 1, %4277 ], [ 1, %4587 ], [ 1, %4578 ], [ 1, %4894 ], [ 1, %4885 ], [ 1, %5191 ], [ 1, %5182 ], [ %53, %191 ], [ %44, %328 ], [ %351, %483 ], [ %342, %620 ], [ %656, %794 ], [ %647, %933 ], [ %956, %1089 ], [ %947, %1227 ], [ %1262, %1400 ], [ %1253, %1537 ], [ %1560, %1692 ], [ %1551, %1829 ], [ %1865, %2003 ], [ %1856, %2144 ], [ %2167, %2300 ], [ %2158, %2438 ], [ %2474, %2612 ], [ %2465, %2751 ], [ %2774, %2907 ], [ %2765, %3045 ], [ %3081, %3219 ], [ %3072, %3359 ], [ %3382, %3515 ], [ %3373, %3653 ], [ %3689, %3825 ], [ %3680, %3963 ], [ %3986, %4119 ], [ %3977, %4257 ], [ %4293, %4431 ], [ %4284, %4571 ], [ %4594, %4727 ], [ %4585, %4865 ], [ %4901, %5037 ], [ %4892, %5175 ], [ %5198, %5331 ], [ %5189, %5469 ]
  %5476 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5475, ptr noundef nonnull @.str.5) #3
  %5477 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5474, ptr noundef nonnull @.str.6) #3
  br label %5478

5478:                                             ; preds = %5030, %5115, %5168, %5324, %5409, %5462, %4424, %4509, %4564, %4720, %4805, %4858, %3818, %3903, %3956, %4112, %4197, %4250, %3212, %3297, %3352, %3508, %3593, %3646, %2605, %2689, %2744, %2900, %2984, %3038, %1996, %2081, %2137, %2293, %2378, %2431, %1393, %1477, %1530, %1685, %1769, %1822, %787, %871, %926, %1082, %1166, %1220, %184, %268, %321, %476, %560, %613, %5473
  %5479 = phi i32 [ 0, %5473 ], [ -1, %613 ], [ -1, %560 ], [ -1, %476 ], [ -1, %321 ], [ -1, %268 ], [ -1, %184 ], [ -1, %1220 ], [ -1, %1166 ], [ -1, %1082 ], [ -1, %926 ], [ -1, %871 ], [ -1, %787 ], [ -1, %1822 ], [ -1, %1769 ], [ -1, %1685 ], [ -1, %1530 ], [ -1, %1477 ], [ -1, %1393 ], [ -1, %2431 ], [ -1, %2378 ], [ -1, %2293 ], [ -1, %2137 ], [ -1, %2081 ], [ -1, %1996 ], [ -1, %3038 ], [ -1, %2984 ], [ -1, %2900 ], [ -1, %2744 ], [ -1, %2689 ], [ -1, %2605 ], [ -1, %3646 ], [ -1, %3593 ], [ -1, %3508 ], [ -1, %3352 ], [ -1, %3297 ], [ -1, %3212 ], [ -1, %4250 ], [ -1, %4197 ], [ -1, %4112 ], [ -1, %3956 ], [ -1, %3903 ], [ -1, %3818 ], [ -1, %4858 ], [ -1, %4805 ], [ -1, %4720 ], [ -1, %4564 ], [ -1, %4509 ], [ -1, %4424 ], [ -1, %5462 ], [ -1, %5409 ], [ -1, %5324 ], [ -1, %5168 ], [ -1, %5115 ], [ -1, %5030 ]
  ret i32 %5479
}

declare i32 @CCTK_Warn(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetInt(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetReal(i32 noundef, double noundef nofpclass(nan inf), ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm2_INT(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5500 [
    i32 101, label %22
    i32 102, label %632
    i32 103, label %1237
    i32 104, label %1849
    i32 105, label %2461
    i32 106, label %3066
    i32 107, label %3674
    i32 108, label %4278
    i32 109, label %4888
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = load i32, ptr %24, align 4, !tbaa !5
  %30 = mul i32 %29, %29
  %31 = trunc i32 %30 to i8
  store i8 %31, ptr %26, align 1, !tbaa !11
  br label %5500

32:                                               ; preds = %22
  switch i32 %1, label %630 [
    i32 1, label %33
    i32 0, label %336
  ]

33:                                               ; preds = %32
  %34 = getelementptr inbounds i32, ptr %3, i64 %19
  %35 = load i32, ptr %34, align 4, !tbaa !5
  %36 = icmp eq i32 %35, 0
  %37 = icmp sgt i32 %5, 0
  br i1 %36, label %47, label %38

38:                                               ; preds = %33
  br i1 %37, label %39, label %5500

39:                                               ; preds = %38
  %40 = icmp sgt i32 %13, 1
  %41 = icmp sgt i32 %13, 0
  %42 = add i32 %13, -2
  %43 = zext i32 %42 to i64
  %44 = zext i32 %13 to i64
  %45 = add nuw i32 %5, 1
  %46 = icmp eq i32 %13, 1
  br label %195

47:                                               ; preds = %33
  br i1 %37, label %48, label %5500

48:                                               ; preds = %47
  %49 = icmp sgt i32 %13, 1
  %50 = icmp sgt i32 %13, 0
  %51 = add i32 %13, -2
  %52 = zext i32 %51 to i64
  %53 = zext i32 %13 to i64
  %54 = add nuw i32 %5, 1
  %55 = icmp eq i32 %13, 1
  br label %56

56:                                               ; preds = %48, %193
  %57 = phi i32 [ 0, %48 ], [ %145, %193 ]
  %58 = phi double [ 0.000000e+00, %48 ], [ %144, %193 ]
  %59 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %49, label %60, label %129

60:                                               ; preds = %56, %119
  %61 = phi i32 [ %128, %119 ], [ 0, %56 ]
  %62 = phi i64 [ %70, %119 ], [ %53, %56 ]
  %63 = phi i64 [ %127, %119 ], [ %52, %56 ]
  %64 = phi i32 [ %125, %119 ], [ %59, %56 ]
  %65 = sub i32 %51, %61
  %66 = tail call i32 @llvm.smin.i32(i32 %65, i32 0)
  %67 = sub i32 %65, %66
  %68 = zext i32 %67 to i64
  %69 = add nuw nsw i64 %68, 1
  %70 = add nsw i64 %62, -1
  %71 = icmp ult i32 %67, 31
  br i1 %71, label %107, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 8589934560
  %74 = sub i64 %63, %73
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi i64 [ 0, %72 ], [ %99, %75 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %95, %75 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %96, %75 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %97, %75 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %98, %75 ]
  %81 = sub i64 %63, %76
  %82 = getelementptr inbounds i32, ptr %9, i64 %81
  %83 = getelementptr inbounds i32, ptr %82, i64 -7
  %84 = load <8 x i32>, ptr %83, align 4, !tbaa !5
  %85 = shufflevector <8 x i32> %84, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %86 = getelementptr inbounds i32, ptr %82, i64 -15
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !5
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %82, i64 -23
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !5
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %82, i64 -31
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !5
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = mul <8 x i32> %85, %77
  %96 = mul <8 x i32> %88, %78
  %97 = mul <8 x i32> %91, %79
  %98 = mul <8 x i32> %94, %80
  %99 = add nuw i64 %76, 32
  %100 = icmp eq i64 %99, %73
  br i1 %100, label %101, label %75, !llvm.loop !204

101:                                              ; preds = %75
  %102 = mul <8 x i32> %96, %95
  %103 = mul <8 x i32> %97, %102
  %104 = mul <8 x i32> %98, %103
  %105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %104)
  %106 = icmp eq i64 %69, %73
  br i1 %106, label %119, label %107

107:                                              ; preds = %60, %101
  %108 = phi i64 [ %63, %60 ], [ %74, %101 ]
  %109 = phi i32 [ 1, %60 ], [ %105, %101 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, ptr %9, i64 %111
  %114 = load i32, ptr %113, align 4, !tbaa !5
  %115 = mul nsw i32 %114, %112
  %116 = add nsw i64 %111, -1
  %117 = trunc i64 %111 to i32
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %110, label %119, !llvm.loop !205

119:                                              ; preds = %110, %101
  %120 = phi i32 [ %105, %101 ], [ %115, %110 ]
  %121 = and i64 %70, 4294967295
  %122 = getelementptr inbounds i32, ptr %6, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !5
  %124 = mul nsw i32 %123, %120
  %125 = add nsw i32 %124, %64
  %126 = icmp sgt i64 %62, 2
  %127 = add nsw i64 %63, -1
  %128 = add i32 %61, 1
  br i1 %126, label %60, label %129, !llvm.loop !206

129:                                              ; preds = %119, %56
  %130 = phi i32 [ %59, %56 ], [ %125, %119 ]
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds double, ptr %2, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !18
  %134 = getelementptr inbounds i32, ptr %24, i64 %131
  %135 = load i32, ptr %134, align 4, !tbaa !5
  %136 = load i8, ptr %26, align 1, !tbaa !11
  %137 = uitofp i8 %136 to double
  %138 = and i32 %135, 255
  %139 = sitofp i32 %138 to double
  %140 = fmul fast double %133, %139
  %141 = fmul fast double %140, %140
  %142 = fadd fast double %141, %137
  %143 = fptoui double %142 to i8
  store i8 %143, ptr %26, align 1, !tbaa !11
  %144 = fadd fast double %133, %58
  %145 = add nuw nsw i32 %57, 1
  br i1 %50, label %146, label %193

146:                                              ; preds = %129
  %147 = load i32, ptr %4, align 4, !tbaa !5
  %148 = load i32, ptr %12, align 4, !tbaa !5
  %149 = add nsw i32 %148, -1
  %150 = icmp slt i32 %147, %149
  br i1 %150, label %170, label %151

151:                                              ; preds = %146
  %152 = icmp eq i32 %147, %149
  br i1 %152, label %153, label %186

153:                                              ; preds = %151
  store i32 0, ptr %4, align 4, !tbaa !5
  %154 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %154, ptr %6, align 4, !tbaa !5
  br i1 %55, label %193, label %155

155:                                              ; preds = %153, %180
  %156 = phi i64 [ %184, %180 ], [ 1, %153 ]
  %157 = getelementptr inbounds i32, ptr %4, i64 %156
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = getelementptr inbounds i32, ptr %12, i64 %156
  %160 = load i32, ptr %159, align 4, !tbaa !5
  %161 = add nsw i32 %160, -1
  %162 = icmp slt i32 %158, %161
  br i1 %162, label %163, label %178

163:                                              ; preds = %155
  br i1 %150, label %170, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds i32, ptr %7, i64 %156
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = getelementptr inbounds i32, ptr %6, i64 %156
  %168 = load i32, ptr %167, align 4, !tbaa !5
  %169 = add nsw i32 %168, %166
  store i32 %169, ptr %167, align 4, !tbaa !5
  br label %188

170:                                              ; preds = %146, %163
  %171 = phi i32 [ %158, %163 ], [ %147, %146 ]
  %172 = phi ptr [ %157, %163 ], [ %4, %146 ]
  %173 = phi i64 [ %156, %163 ], [ 0, %146 ]
  %174 = add nsw i32 %171, 1
  store i32 %174, ptr %172, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %7, i64 %173
  %176 = load i32, ptr %175, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %6, i64 %173
  br label %188

178:                                              ; preds = %155
  %179 = icmp eq i32 %158, %161
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  store i32 0, ptr %157, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %8, i64 %156
  %182 = load i32, ptr %181, align 4, !tbaa !5
  %183 = getelementptr inbounds i32, ptr %6, i64 %156
  store i32 %182, ptr %183, align 4, !tbaa !5
  %184 = add nuw nsw i64 %156, 1
  %185 = icmp eq i64 %184, %53
  br i1 %185, label %193, label %155, !llvm.loop !207

186:                                              ; preds = %151, %178
  %187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 334, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

188:                                              ; preds = %164, %170
  %189 = phi ptr [ %177, %170 ], [ %157, %164 ]
  %190 = phi i32 [ %176, %170 ], [ 1, %164 ]
  %191 = load i32, ptr %189, align 4, !tbaa !5
  %192 = add nsw i32 %191, %190
  store i32 %192, ptr %189, align 4, !tbaa !5
  br label %193

193:                                              ; preds = %180, %188, %153, %129
  %194 = icmp eq i32 %145, %5
  br i1 %194, label %5500, label %56, !llvm.loop !208

195:                                              ; preds = %39, %334
  %196 = phi i32 [ 0, %39 ], [ %283, %334 ]
  %197 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %40, label %198, label %267

198:                                              ; preds = %195, %257
  %199 = phi i32 [ %266, %257 ], [ 0, %195 ]
  %200 = phi i64 [ %208, %257 ], [ %44, %195 ]
  %201 = phi i64 [ %265, %257 ], [ %43, %195 ]
  %202 = phi i32 [ %263, %257 ], [ %197, %195 ]
  %203 = sub i32 %42, %199
  %204 = tail call i32 @llvm.smin.i32(i32 %203, i32 0)
  %205 = sub i32 %203, %204
  %206 = zext i32 %205 to i64
  %207 = add nuw nsw i64 %206, 1
  %208 = add nsw i64 %200, -1
  %209 = icmp ult i32 %205, 31
  br i1 %209, label %245, label %210

210:                                              ; preds = %198
  %211 = and i64 %207, 8589934560
  %212 = sub i64 %201, %211
  br label %213

213:                                              ; preds = %213, %210
  %214 = phi i64 [ 0, %210 ], [ %237, %213 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %233, %213 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %234, %213 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %235, %213 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %236, %213 ]
  %219 = sub i64 %201, %214
  %220 = getelementptr inbounds i32, ptr %11, i64 %219
  %221 = getelementptr inbounds i32, ptr %220, i64 -7
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %220, i64 -15
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %220, i64 -23
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %220, i64 -31
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = mul <8 x i32> %223, %215
  %234 = mul <8 x i32> %226, %216
  %235 = mul <8 x i32> %229, %217
  %236 = mul <8 x i32> %232, %218
  %237 = add nuw i64 %214, 32
  %238 = icmp eq i64 %237, %211
  br i1 %238, label %239, label %213, !llvm.loop !209

239:                                              ; preds = %213
  %240 = mul <8 x i32> %234, %233
  %241 = mul <8 x i32> %235, %240
  %242 = mul <8 x i32> %236, %241
  %243 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %242)
  %244 = icmp eq i64 %207, %211
  br i1 %244, label %257, label %245

245:                                              ; preds = %198, %239
  %246 = phi i64 [ %201, %198 ], [ %212, %239 ]
  %247 = phi i32 [ 1, %198 ], [ %243, %239 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %254, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %253, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i32, ptr %11, i64 %249
  %252 = load i32, ptr %251, align 4, !tbaa !5
  %253 = mul nsw i32 %252, %250
  %254 = add nsw i64 %249, -1
  %255 = trunc i64 %249 to i32
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %248, label %257, !llvm.loop !210

257:                                              ; preds = %248, %239
  %258 = phi i32 [ %243, %239 ], [ %253, %248 ]
  %259 = and i64 %208, 4294967295
  %260 = getelementptr inbounds i32, ptr %6, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !5
  %262 = mul nsw i32 %261, %258
  %263 = add nsw i32 %262, %202
  %264 = icmp sgt i64 %200, 2
  %265 = add nsw i64 %201, -1
  %266 = add i32 %199, 1
  br i1 %264, label %198, label %267, !llvm.loop !211

267:                                              ; preds = %257, %195
  %268 = phi i32 [ %197, %195 ], [ %263, %257 ]
  %269 = icmp slt i32 %268, %5
  br i1 %269, label %272, label %270

270:                                              ; preds = %267
  %271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 334, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

272:                                              ; preds = %267
  %273 = sext i32 %268 to i64
  %274 = getelementptr inbounds i32, ptr %24, i64 %273
  %275 = load i32, ptr %274, align 4, !tbaa !5
  %276 = load i8, ptr %26, align 1, !tbaa !11
  %277 = uitofp i8 %276 to double
  %278 = and i32 %275, 255
  %279 = sitofp i32 %278 to double
  %280 = fmul fast double %279, %279
  %281 = fadd fast double %280, %277
  %282 = fptoui double %281 to i8
  store i8 %282, ptr %26, align 1, !tbaa !11
  %283 = add nuw nsw i32 %196, 1
  br i1 %41, label %284, label %334

284:                                              ; preds = %272
  %285 = load i32, ptr %4, align 4, !tbaa !5
  %286 = load i32, ptr %12, align 4, !tbaa !5
  %287 = add nsw i32 %286, -1
  %288 = icmp slt i32 %285, %287
  br i1 %288, label %311, label %289

289:                                              ; preds = %284
  %290 = icmp eq i32 %285, %287
  br i1 %290, label %291, label %327

291:                                              ; preds = %289
  store i32 0, ptr %4, align 4, !tbaa !5
  %292 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %292, ptr %6, align 4, !tbaa !5
  br i1 %46, label %334, label %293

293:                                              ; preds = %291, %321
  %294 = phi i64 [ %325, %321 ], [ 1, %291 ]
  %295 = getelementptr inbounds i32, ptr %4, i64 %294
  %296 = load i32, ptr %295, align 4, !tbaa !5
  %297 = getelementptr inbounds i32, ptr %12, i64 %294
  %298 = load i32, ptr %297, align 4, !tbaa !5
  %299 = add nsw i32 %298, -1
  %300 = icmp slt i32 %296, %299
  br i1 %300, label %301, label %319

301:                                              ; preds = %293
  br i1 %288, label %311, label %302

302:                                              ; preds = %301
  %303 = shl i64 %294, 32
  %304 = add i64 %303, -4294967296
  %305 = ashr exact i64 %304, 32
  %306 = getelementptr inbounds i32, ptr %7, i64 %305
  %307 = load i32, ptr %306, align 4, !tbaa !5
  %308 = getelementptr inbounds i32, ptr %6, i64 %294
  %309 = load i32, ptr %308, align 4, !tbaa !5
  %310 = add nsw i32 %309, %307
  store i32 %310, ptr %308, align 4, !tbaa !5
  br label %329

311:                                              ; preds = %284, %301
  %312 = phi i32 [ %296, %301 ], [ %285, %284 ]
  %313 = phi ptr [ %295, %301 ], [ %4, %284 ]
  %314 = phi i64 [ %294, %301 ], [ 0, %284 ]
  %315 = add nsw i32 %312, 1
  store i32 %315, ptr %313, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %7, i64 %314
  %317 = load i32, ptr %316, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %6, i64 %314
  br label %329

319:                                              ; preds = %293
  %320 = icmp eq i32 %296, %299
  br i1 %320, label %321, label %327

321:                                              ; preds = %319
  store i32 0, ptr %295, align 4, !tbaa !5
  %322 = getelementptr inbounds i32, ptr %8, i64 %294
  %323 = load i32, ptr %322, align 4, !tbaa !5
  %324 = getelementptr inbounds i32, ptr %6, i64 %294
  store i32 %323, ptr %324, align 4, !tbaa !5
  %325 = add nuw nsw i64 %294, 1
  %326 = icmp eq i64 %325, %44
  br i1 %326, label %334, label %293, !llvm.loop !212

327:                                              ; preds = %289, %319
  %328 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 334, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

329:                                              ; preds = %302, %311
  %330 = phi ptr [ %318, %311 ], [ %295, %302 ]
  %331 = phi i32 [ %317, %311 ], [ 1, %302 ]
  %332 = load i32, ptr %330, align 4, !tbaa !5
  %333 = add nsw i32 %332, %331
  store i32 %333, ptr %330, align 4, !tbaa !5
  br label %334

334:                                              ; preds = %321, %329, %291, %272
  %335 = icmp eq i32 %283, %5
  br i1 %335, label %5500, label %195, !llvm.loop !213

336:                                              ; preds = %32
  %337 = getelementptr inbounds i32, ptr %3, i64 %19
  %338 = load i32, ptr %337, align 4, !tbaa !5
  %339 = icmp eq i32 %338, 0
  %340 = icmp sgt i32 %5, 0
  br i1 %339, label %350, label %341

341:                                              ; preds = %336
  br i1 %340, label %342, label %5500

342:                                              ; preds = %341
  %343 = icmp sgt i32 %13, 1
  %344 = icmp sgt i32 %13, 0
  %345 = add i32 %13, -2
  %346 = zext i32 %345 to i64
  %347 = zext i32 %13 to i64
  %348 = add nuw i32 %5, 1
  %349 = icmp eq i32 %13, 1
  br label %492

350:                                              ; preds = %336
  br i1 %340, label %351, label %5500

351:                                              ; preds = %350
  %352 = icmp sgt i32 %13, 1
  %353 = icmp sgt i32 %13, 0
  %354 = add i32 %13, -2
  %355 = zext i32 %354 to i64
  %356 = zext i32 %13 to i64
  %357 = add nuw i32 %5, 1
  %358 = icmp eq i32 %13, 1
  br label %359

359:                                              ; preds = %351, %490
  %360 = phi i32 [ 0, %351 ], [ %442, %490 ]
  %361 = phi double [ 0.000000e+00, %351 ], [ %441, %490 ]
  %362 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %352, label %363, label %432

363:                                              ; preds = %359, %422
  %364 = phi i32 [ %431, %422 ], [ 0, %359 ]
  %365 = phi i64 [ %373, %422 ], [ %356, %359 ]
  %366 = phi i64 [ %430, %422 ], [ %355, %359 ]
  %367 = phi i32 [ %428, %422 ], [ %362, %359 ]
  %368 = sub i32 %354, %364
  %369 = tail call i32 @llvm.smin.i32(i32 %368, i32 0)
  %370 = sub i32 %368, %369
  %371 = zext i32 %370 to i64
  %372 = add nuw nsw i64 %371, 1
  %373 = add nsw i64 %365, -1
  %374 = icmp ult i32 %370, 31
  br i1 %374, label %410, label %375

375:                                              ; preds = %363
  %376 = and i64 %372, 8589934560
  %377 = sub i64 %366, %376
  br label %378

378:                                              ; preds = %378, %375
  %379 = phi i64 [ 0, %375 ], [ %402, %378 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %398, %378 ]
  %381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %399, %378 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %400, %378 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %401, %378 ]
  %384 = sub i64 %366, %379
  %385 = getelementptr inbounds i32, ptr %9, i64 %384
  %386 = getelementptr inbounds i32, ptr %385, i64 -7
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %385, i64 -15
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %385, i64 -23
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !5
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %385, i64 -31
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !5
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = mul <8 x i32> %388, %380
  %399 = mul <8 x i32> %391, %381
  %400 = mul <8 x i32> %394, %382
  %401 = mul <8 x i32> %397, %383
  %402 = add nuw i64 %379, 32
  %403 = icmp eq i64 %402, %376
  br i1 %403, label %404, label %378, !llvm.loop !214

404:                                              ; preds = %378
  %405 = mul <8 x i32> %399, %398
  %406 = mul <8 x i32> %400, %405
  %407 = mul <8 x i32> %401, %406
  %408 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %407)
  %409 = icmp eq i64 %372, %376
  br i1 %409, label %422, label %410

410:                                              ; preds = %363, %404
  %411 = phi i64 [ %366, %363 ], [ %377, %404 ]
  %412 = phi i32 [ 1, %363 ], [ %408, %404 ]
  br label %413

413:                                              ; preds = %410, %413
  %414 = phi i64 [ %419, %413 ], [ %411, %410 ]
  %415 = phi i32 [ %418, %413 ], [ %412, %410 ]
  %416 = getelementptr inbounds i32, ptr %9, i64 %414
  %417 = load i32, ptr %416, align 4, !tbaa !5
  %418 = mul nsw i32 %417, %415
  %419 = add nsw i64 %414, -1
  %420 = trunc i64 %414 to i32
  %421 = icmp sgt i32 %420, 0
  br i1 %421, label %413, label %422, !llvm.loop !215

422:                                              ; preds = %413, %404
  %423 = phi i32 [ %408, %404 ], [ %418, %413 ]
  %424 = and i64 %373, 4294967295
  %425 = getelementptr inbounds i32, ptr %6, i64 %424
  %426 = load i32, ptr %425, align 4, !tbaa !5
  %427 = mul nsw i32 %426, %423
  %428 = add nsw i32 %427, %367
  %429 = icmp sgt i64 %365, 2
  %430 = add nsw i64 %366, -1
  %431 = add i32 %364, 1
  br i1 %429, label %363, label %432, !llvm.loop !216

432:                                              ; preds = %422, %359
  %433 = phi i32 [ %362, %359 ], [ %428, %422 ]
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds i32, ptr %24, i64 %434
  %436 = load i32, ptr %435, align 4, !tbaa !5
  %437 = load i8, ptr %26, align 1, !tbaa !11
  %438 = mul i32 %436, %436
  %439 = trunc i32 %438 to i8
  %440 = add i8 %437, %439
  store i8 %440, ptr %26, align 1, !tbaa !11
  %441 = fadd fast double %361, 1.000000e+00
  %442 = add nuw nsw i32 %360, 1
  br i1 %353, label %443, label %490

443:                                              ; preds = %432
  %444 = load i32, ptr %4, align 4, !tbaa !5
  %445 = load i32, ptr %12, align 4, !tbaa !5
  %446 = add nsw i32 %445, -1
  %447 = icmp slt i32 %444, %446
  br i1 %447, label %467, label %448

448:                                              ; preds = %443
  %449 = icmp eq i32 %444, %446
  br i1 %449, label %450, label %483

450:                                              ; preds = %448
  store i32 0, ptr %4, align 4, !tbaa !5
  %451 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %451, ptr %6, align 4, !tbaa !5
  br i1 %358, label %490, label %452

452:                                              ; preds = %450, %477
  %453 = phi i64 [ %481, %477 ], [ 1, %450 ]
  %454 = getelementptr inbounds i32, ptr %4, i64 %453
  %455 = load i32, ptr %454, align 4, !tbaa !5
  %456 = getelementptr inbounds i32, ptr %12, i64 %453
  %457 = load i32, ptr %456, align 4, !tbaa !5
  %458 = add nsw i32 %457, -1
  %459 = icmp slt i32 %455, %458
  br i1 %459, label %460, label %475

460:                                              ; preds = %452
  br i1 %447, label %467, label %461

461:                                              ; preds = %460
  %462 = getelementptr inbounds i32, ptr %7, i64 %453
  %463 = load i32, ptr %462, align 4, !tbaa !5
  %464 = getelementptr inbounds i32, ptr %6, i64 %453
  %465 = load i32, ptr %464, align 4, !tbaa !5
  %466 = add nsw i32 %465, %463
  store i32 %466, ptr %464, align 4, !tbaa !5
  br label %485

467:                                              ; preds = %443, %460
  %468 = phi i32 [ %455, %460 ], [ %444, %443 ]
  %469 = phi ptr [ %454, %460 ], [ %4, %443 ]
  %470 = phi i64 [ %453, %460 ], [ 0, %443 ]
  %471 = add nsw i32 %468, 1
  store i32 %471, ptr %469, align 4, !tbaa !5
  %472 = getelementptr inbounds i32, ptr %7, i64 %470
  %473 = load i32, ptr %472, align 4, !tbaa !5
  %474 = getelementptr inbounds i32, ptr %6, i64 %470
  br label %485

475:                                              ; preds = %452
  %476 = icmp eq i32 %455, %458
  br i1 %476, label %477, label %483

477:                                              ; preds = %475
  store i32 0, ptr %454, align 4, !tbaa !5
  %478 = getelementptr inbounds i32, ptr %8, i64 %453
  %479 = load i32, ptr %478, align 4, !tbaa !5
  %480 = getelementptr inbounds i32, ptr %6, i64 %453
  store i32 %479, ptr %480, align 4, !tbaa !5
  %481 = add nuw nsw i64 %453, 1
  %482 = icmp eq i64 %481, %356
  br i1 %482, label %490, label %452, !llvm.loop !217

483:                                              ; preds = %448, %475
  %484 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 334, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

485:                                              ; preds = %461, %467
  %486 = phi ptr [ %474, %467 ], [ %454, %461 ]
  %487 = phi i32 [ %473, %467 ], [ 1, %461 ]
  %488 = load i32, ptr %486, align 4, !tbaa !5
  %489 = add nsw i32 %488, %487
  store i32 %489, ptr %486, align 4, !tbaa !5
  br label %490

490:                                              ; preds = %477, %485, %450, %432
  %491 = icmp eq i32 %442, %5
  br i1 %491, label %5500, label %359, !llvm.loop !218

492:                                              ; preds = %342, %628
  %493 = phi i32 [ 0, %342 ], [ %577, %628 ]
  %494 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %343, label %495, label %564

495:                                              ; preds = %492, %554
  %496 = phi i32 [ %563, %554 ], [ 0, %492 ]
  %497 = phi i64 [ %505, %554 ], [ %347, %492 ]
  %498 = phi i64 [ %562, %554 ], [ %346, %492 ]
  %499 = phi i32 [ %560, %554 ], [ %494, %492 ]
  %500 = sub i32 %345, %496
  %501 = tail call i32 @llvm.smin.i32(i32 %500, i32 0)
  %502 = sub i32 %500, %501
  %503 = zext i32 %502 to i64
  %504 = add nuw nsw i64 %503, 1
  %505 = add nsw i64 %497, -1
  %506 = icmp ult i32 %502, 31
  br i1 %506, label %542, label %507

507:                                              ; preds = %495
  %508 = and i64 %504, 8589934560
  %509 = sub i64 %498, %508
  br label %510

510:                                              ; preds = %510, %507
  %511 = phi i64 [ 0, %507 ], [ %534, %510 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %530, %510 ]
  %513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %531, %510 ]
  %514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %532, %510 ]
  %515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %533, %510 ]
  %516 = sub i64 %498, %511
  %517 = getelementptr inbounds i32, ptr %11, i64 %516
  %518 = getelementptr inbounds i32, ptr %517, i64 -7
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %517, i64 -15
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %517, i64 -23
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !5
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = getelementptr inbounds i32, ptr %517, i64 -31
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !5
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = mul <8 x i32> %520, %512
  %531 = mul <8 x i32> %523, %513
  %532 = mul <8 x i32> %526, %514
  %533 = mul <8 x i32> %529, %515
  %534 = add nuw i64 %511, 32
  %535 = icmp eq i64 %534, %508
  br i1 %535, label %536, label %510, !llvm.loop !219

536:                                              ; preds = %510
  %537 = mul <8 x i32> %531, %530
  %538 = mul <8 x i32> %532, %537
  %539 = mul <8 x i32> %533, %538
  %540 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %539)
  %541 = icmp eq i64 %504, %508
  br i1 %541, label %554, label %542

542:                                              ; preds = %495, %536
  %543 = phi i64 [ %498, %495 ], [ %509, %536 ]
  %544 = phi i32 [ 1, %495 ], [ %540, %536 ]
  br label %545

545:                                              ; preds = %542, %545
  %546 = phi i64 [ %551, %545 ], [ %543, %542 ]
  %547 = phi i32 [ %550, %545 ], [ %544, %542 ]
  %548 = getelementptr inbounds i32, ptr %11, i64 %546
  %549 = load i32, ptr %548, align 4, !tbaa !5
  %550 = mul nsw i32 %549, %547
  %551 = add nsw i64 %546, -1
  %552 = trunc i64 %546 to i32
  %553 = icmp sgt i32 %552, 0
  br i1 %553, label %545, label %554, !llvm.loop !220

554:                                              ; preds = %545, %536
  %555 = phi i32 [ %540, %536 ], [ %550, %545 ]
  %556 = and i64 %505, 4294967295
  %557 = getelementptr inbounds i32, ptr %6, i64 %556
  %558 = load i32, ptr %557, align 4, !tbaa !5
  %559 = mul nsw i32 %558, %555
  %560 = add nsw i32 %559, %499
  %561 = icmp sgt i64 %497, 2
  %562 = add nsw i64 %498, -1
  %563 = add i32 %496, 1
  br i1 %561, label %495, label %564, !llvm.loop !221

564:                                              ; preds = %554, %492
  %565 = phi i32 [ %494, %492 ], [ %560, %554 ]
  %566 = icmp slt i32 %565, %5
  br i1 %566, label %569, label %567

567:                                              ; preds = %564
  %568 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 334, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

569:                                              ; preds = %564
  %570 = sext i32 %565 to i64
  %571 = getelementptr inbounds i32, ptr %24, i64 %570
  %572 = load i32, ptr %571, align 4, !tbaa !5
  %573 = load i8, ptr %26, align 1, !tbaa !11
  %574 = mul i32 %572, %572
  %575 = trunc i32 %574 to i8
  %576 = add i8 %573, %575
  store i8 %576, ptr %26, align 1, !tbaa !11
  %577 = add nuw nsw i32 %493, 1
  br i1 %344, label %578, label %628

578:                                              ; preds = %569
  %579 = load i32, ptr %4, align 4, !tbaa !5
  %580 = load i32, ptr %12, align 4, !tbaa !5
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %579, %581
  br i1 %582, label %605, label %583

583:                                              ; preds = %578
  %584 = icmp eq i32 %579, %581
  br i1 %584, label %585, label %621

585:                                              ; preds = %583
  store i32 0, ptr %4, align 4, !tbaa !5
  %586 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %586, ptr %6, align 4, !tbaa !5
  br i1 %349, label %628, label %587

587:                                              ; preds = %585, %615
  %588 = phi i64 [ %619, %615 ], [ 1, %585 ]
  %589 = getelementptr inbounds i32, ptr %4, i64 %588
  %590 = load i32, ptr %589, align 4, !tbaa !5
  %591 = getelementptr inbounds i32, ptr %12, i64 %588
  %592 = load i32, ptr %591, align 4, !tbaa !5
  %593 = add nsw i32 %592, -1
  %594 = icmp slt i32 %590, %593
  br i1 %594, label %595, label %613

595:                                              ; preds = %587
  br i1 %582, label %605, label %596

596:                                              ; preds = %595
  %597 = shl i64 %588, 32
  %598 = add i64 %597, -4294967296
  %599 = ashr exact i64 %598, 32
  %600 = getelementptr inbounds i32, ptr %7, i64 %599
  %601 = load i32, ptr %600, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %6, i64 %588
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = add nsw i32 %603, %601
  store i32 %604, ptr %602, align 4, !tbaa !5
  br label %623

605:                                              ; preds = %578, %595
  %606 = phi i32 [ %590, %595 ], [ %579, %578 ]
  %607 = phi ptr [ %589, %595 ], [ %4, %578 ]
  %608 = phi i64 [ %588, %595 ], [ 0, %578 ]
  %609 = add nsw i32 %606, 1
  store i32 %609, ptr %607, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %7, i64 %608
  %611 = load i32, ptr %610, align 4, !tbaa !5
  %612 = getelementptr inbounds i32, ptr %6, i64 %608
  br label %623

613:                                              ; preds = %587
  %614 = icmp eq i32 %590, %593
  br i1 %614, label %615, label %621

615:                                              ; preds = %613
  store i32 0, ptr %589, align 4, !tbaa !5
  %616 = getelementptr inbounds i32, ptr %8, i64 %588
  %617 = load i32, ptr %616, align 4, !tbaa !5
  %618 = getelementptr inbounds i32, ptr %6, i64 %588
  store i32 %617, ptr %618, align 4, !tbaa !5
  %619 = add nuw nsw i64 %588, 1
  %620 = icmp eq i64 %619, %347
  br i1 %620, label %628, label %587, !llvm.loop !222

621:                                              ; preds = %583, %613
  %622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 334, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

623:                                              ; preds = %596, %605
  %624 = phi ptr [ %612, %605 ], [ %589, %596 ]
  %625 = phi i32 [ %611, %605 ], [ 1, %596 ]
  %626 = load i32, ptr %624, align 4, !tbaa !5
  %627 = add nsw i32 %626, %625
  store i32 %627, ptr %624, align 4, !tbaa !5
  br label %628

628:                                              ; preds = %615, %623, %585, %569
  %629 = icmp eq i32 %577, %5
  br i1 %629, label %5500, label %492, !llvm.loop !223

630:                                              ; preds = %32
  %631 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 334, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

632:                                              ; preds = %18
  %633 = getelementptr inbounds ptr, ptr %14, i64 %19
  %634 = load ptr, ptr %633, align 8, !tbaa !9
  %635 = getelementptr inbounds ptr, ptr %16, i64 %19
  %636 = load ptr, ptr %635, align 8, !tbaa !9
  store i32 0, ptr %636, align 4, !tbaa !5
  %637 = icmp eq i32 %13, 0
  br i1 %637, label %638, label %641

638:                                              ; preds = %632
  %639 = load i32, ptr %634, align 4, !tbaa !5
  %640 = mul nsw i32 %639, %639
  store i32 %640, ptr %636, align 4, !tbaa !5
  br label %5500

641:                                              ; preds = %632
  switch i32 %1, label %1235 [
    i32 1, label %642
    i32 0, label %943
  ]

642:                                              ; preds = %641
  %643 = getelementptr inbounds i32, ptr %3, i64 %19
  %644 = load i32, ptr %643, align 4, !tbaa !5
  %645 = icmp eq i32 %644, 0
  %646 = icmp sgt i32 %5, 0
  br i1 %645, label %656, label %647

647:                                              ; preds = %642
  br i1 %646, label %648, label %5500

648:                                              ; preds = %647
  %649 = icmp sgt i32 %13, 1
  %650 = icmp sgt i32 %13, 0
  %651 = add i32 %13, -2
  %652 = zext i32 %651 to i64
  %653 = zext i32 %13 to i64
  %654 = add nuw i32 %5, 1
  %655 = icmp eq i32 %13, 1
  br label %803

656:                                              ; preds = %642
  br i1 %646, label %657, label %5500

657:                                              ; preds = %656
  %658 = icmp sgt i32 %13, 1
  %659 = icmp sgt i32 %13, 0
  %660 = add i32 %13, -2
  %661 = zext i32 %660 to i64
  %662 = zext i32 %13 to i64
  %663 = add nuw i32 %5, 1
  %664 = icmp eq i32 %13, 1
  br label %665

665:                                              ; preds = %657, %801
  %666 = phi i32 [ 0, %657 ], [ %753, %801 ]
  %667 = phi double [ 0.000000e+00, %657 ], [ %752, %801 ]
  %668 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %658, label %669, label %738

669:                                              ; preds = %665, %728
  %670 = phi i32 [ %737, %728 ], [ 0, %665 ]
  %671 = phi i64 [ %679, %728 ], [ %662, %665 ]
  %672 = phi i64 [ %736, %728 ], [ %661, %665 ]
  %673 = phi i32 [ %734, %728 ], [ %668, %665 ]
  %674 = sub i32 %660, %670
  %675 = tail call i32 @llvm.smin.i32(i32 %674, i32 0)
  %676 = sub i32 %674, %675
  %677 = zext i32 %676 to i64
  %678 = add nuw nsw i64 %677, 1
  %679 = add nsw i64 %671, -1
  %680 = icmp ult i32 %676, 31
  br i1 %680, label %716, label %681

681:                                              ; preds = %669
  %682 = and i64 %678, 8589934560
  %683 = sub i64 %672, %682
  br label %684

684:                                              ; preds = %684, %681
  %685 = phi i64 [ 0, %681 ], [ %708, %684 ]
  %686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %704, %684 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %705, %684 ]
  %688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %706, %684 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %707, %684 ]
  %690 = sub i64 %672, %685
  %691 = getelementptr inbounds i32, ptr %9, i64 %690
  %692 = getelementptr inbounds i32, ptr %691, i64 -7
  %693 = load <8 x i32>, ptr %692, align 4, !tbaa !5
  %694 = shufflevector <8 x i32> %693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %695 = getelementptr inbounds i32, ptr %691, i64 -15
  %696 = load <8 x i32>, ptr %695, align 4, !tbaa !5
  %697 = shufflevector <8 x i32> %696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %698 = getelementptr inbounds i32, ptr %691, i64 -23
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !5
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %691, i64 -31
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !5
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = mul <8 x i32> %694, %686
  %705 = mul <8 x i32> %697, %687
  %706 = mul <8 x i32> %700, %688
  %707 = mul <8 x i32> %703, %689
  %708 = add nuw i64 %685, 32
  %709 = icmp eq i64 %708, %682
  br i1 %709, label %710, label %684, !llvm.loop !224

710:                                              ; preds = %684
  %711 = mul <8 x i32> %705, %704
  %712 = mul <8 x i32> %706, %711
  %713 = mul <8 x i32> %707, %712
  %714 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %713)
  %715 = icmp eq i64 %678, %682
  br i1 %715, label %728, label %716

716:                                              ; preds = %669, %710
  %717 = phi i64 [ %672, %669 ], [ %683, %710 ]
  %718 = phi i32 [ 1, %669 ], [ %714, %710 ]
  br label %719

719:                                              ; preds = %716, %719
  %720 = phi i64 [ %725, %719 ], [ %717, %716 ]
  %721 = phi i32 [ %724, %719 ], [ %718, %716 ]
  %722 = getelementptr inbounds i32, ptr %9, i64 %720
  %723 = load i32, ptr %722, align 4, !tbaa !5
  %724 = mul nsw i32 %723, %721
  %725 = add nsw i64 %720, -1
  %726 = trunc i64 %720 to i32
  %727 = icmp sgt i32 %726, 0
  br i1 %727, label %719, label %728, !llvm.loop !225

728:                                              ; preds = %719, %710
  %729 = phi i32 [ %714, %710 ], [ %724, %719 ]
  %730 = and i64 %679, 4294967295
  %731 = getelementptr inbounds i32, ptr %6, i64 %730
  %732 = load i32, ptr %731, align 4, !tbaa !5
  %733 = mul nsw i32 %732, %729
  %734 = add nsw i32 %733, %673
  %735 = icmp sgt i64 %671, 2
  %736 = add nsw i64 %672, -1
  %737 = add i32 %670, 1
  br i1 %735, label %669, label %738, !llvm.loop !226

738:                                              ; preds = %728, %665
  %739 = phi i32 [ %668, %665 ], [ %734, %728 ]
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds double, ptr %2, i64 %740
  %742 = load double, ptr %741, align 8, !tbaa !18
  %743 = getelementptr inbounds i32, ptr %634, i64 %740
  %744 = load i32, ptr %743, align 4, !tbaa !5
  %745 = load i32, ptr %636, align 4, !tbaa !5
  %746 = sitofp i32 %745 to double
  %747 = sitofp i32 %744 to double
  %748 = fmul fast double %742, %747
  %749 = fmul fast double %748, %748
  %750 = fadd fast double %749, %746
  %751 = fptosi double %750 to i32
  store i32 %751, ptr %636, align 4, !tbaa !5
  %752 = fadd fast double %742, %667
  %753 = add nuw nsw i32 %666, 1
  br i1 %659, label %754, label %801

754:                                              ; preds = %738
  %755 = load i32, ptr %4, align 4, !tbaa !5
  %756 = load i32, ptr %12, align 4, !tbaa !5
  %757 = add nsw i32 %756, -1
  %758 = icmp slt i32 %755, %757
  br i1 %758, label %778, label %759

759:                                              ; preds = %754
  %760 = icmp eq i32 %755, %757
  br i1 %760, label %761, label %794

761:                                              ; preds = %759
  store i32 0, ptr %4, align 4, !tbaa !5
  %762 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %762, ptr %6, align 4, !tbaa !5
  br i1 %664, label %801, label %763

763:                                              ; preds = %761, %788
  %764 = phi i64 [ %792, %788 ], [ 1, %761 ]
  %765 = getelementptr inbounds i32, ptr %4, i64 %764
  %766 = load i32, ptr %765, align 4, !tbaa !5
  %767 = getelementptr inbounds i32, ptr %12, i64 %764
  %768 = load i32, ptr %767, align 4, !tbaa !5
  %769 = add nsw i32 %768, -1
  %770 = icmp slt i32 %766, %769
  br i1 %770, label %771, label %786

771:                                              ; preds = %763
  br i1 %758, label %778, label %772

772:                                              ; preds = %771
  %773 = getelementptr inbounds i32, ptr %7, i64 %764
  %774 = load i32, ptr %773, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %6, i64 %764
  %776 = load i32, ptr %775, align 4, !tbaa !5
  %777 = add nsw i32 %776, %774
  store i32 %777, ptr %775, align 4, !tbaa !5
  br label %796

778:                                              ; preds = %754, %771
  %779 = phi i32 [ %766, %771 ], [ %755, %754 ]
  %780 = phi ptr [ %765, %771 ], [ %4, %754 ]
  %781 = phi i64 [ %764, %771 ], [ 0, %754 ]
  %782 = add nsw i32 %779, 1
  store i32 %782, ptr %780, align 4, !tbaa !5
  %783 = getelementptr inbounds i32, ptr %7, i64 %781
  %784 = load i32, ptr %783, align 4, !tbaa !5
  %785 = getelementptr inbounds i32, ptr %6, i64 %781
  br label %796

786:                                              ; preds = %763
  %787 = icmp eq i32 %766, %769
  br i1 %787, label %788, label %794

788:                                              ; preds = %786
  store i32 0, ptr %765, align 4, !tbaa !5
  %789 = getelementptr inbounds i32, ptr %8, i64 %764
  %790 = load i32, ptr %789, align 4, !tbaa !5
  %791 = getelementptr inbounds i32, ptr %6, i64 %764
  store i32 %790, ptr %791, align 4, !tbaa !5
  %792 = add nuw nsw i64 %764, 1
  %793 = icmp eq i64 %792, %662
  br i1 %793, label %801, label %763, !llvm.loop !227

794:                                              ; preds = %759, %786
  %795 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 337, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

796:                                              ; preds = %772, %778
  %797 = phi ptr [ %785, %778 ], [ %765, %772 ]
  %798 = phi i32 [ %784, %778 ], [ 1, %772 ]
  %799 = load i32, ptr %797, align 4, !tbaa !5
  %800 = add nsw i32 %799, %798
  store i32 %800, ptr %797, align 4, !tbaa !5
  br label %801

801:                                              ; preds = %788, %796, %761, %738
  %802 = icmp eq i32 %753, %5
  br i1 %802, label %5500, label %665, !llvm.loop !228

803:                                              ; preds = %648, %941
  %804 = phi i32 [ 0, %648 ], [ %890, %941 ]
  %805 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %649, label %806, label %875

806:                                              ; preds = %803, %865
  %807 = phi i32 [ %874, %865 ], [ 0, %803 ]
  %808 = phi i64 [ %816, %865 ], [ %653, %803 ]
  %809 = phi i64 [ %873, %865 ], [ %652, %803 ]
  %810 = phi i32 [ %871, %865 ], [ %805, %803 ]
  %811 = sub i32 %651, %807
  %812 = tail call i32 @llvm.smin.i32(i32 %811, i32 0)
  %813 = sub i32 %811, %812
  %814 = zext i32 %813 to i64
  %815 = add nuw nsw i64 %814, 1
  %816 = add nsw i64 %808, -1
  %817 = icmp ult i32 %813, 31
  br i1 %817, label %853, label %818

818:                                              ; preds = %806
  %819 = and i64 %815, 8589934560
  %820 = sub i64 %809, %819
  br label %821

821:                                              ; preds = %821, %818
  %822 = phi i64 [ 0, %818 ], [ %845, %821 ]
  %823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %841, %821 ]
  %824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %842, %821 ]
  %825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %843, %821 ]
  %826 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %844, %821 ]
  %827 = sub i64 %809, %822
  %828 = getelementptr inbounds i32, ptr %11, i64 %827
  %829 = getelementptr inbounds i32, ptr %828, i64 -7
  %830 = load <8 x i32>, ptr %829, align 4, !tbaa !5
  %831 = shufflevector <8 x i32> %830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %832 = getelementptr inbounds i32, ptr %828, i64 -15
  %833 = load <8 x i32>, ptr %832, align 4, !tbaa !5
  %834 = shufflevector <8 x i32> %833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %835 = getelementptr inbounds i32, ptr %828, i64 -23
  %836 = load <8 x i32>, ptr %835, align 4, !tbaa !5
  %837 = shufflevector <8 x i32> %836, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %838 = getelementptr inbounds i32, ptr %828, i64 -31
  %839 = load <8 x i32>, ptr %838, align 4, !tbaa !5
  %840 = shufflevector <8 x i32> %839, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %841 = mul <8 x i32> %831, %823
  %842 = mul <8 x i32> %834, %824
  %843 = mul <8 x i32> %837, %825
  %844 = mul <8 x i32> %840, %826
  %845 = add nuw i64 %822, 32
  %846 = icmp eq i64 %845, %819
  br i1 %846, label %847, label %821, !llvm.loop !229

847:                                              ; preds = %821
  %848 = mul <8 x i32> %842, %841
  %849 = mul <8 x i32> %843, %848
  %850 = mul <8 x i32> %844, %849
  %851 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %850)
  %852 = icmp eq i64 %815, %819
  br i1 %852, label %865, label %853

853:                                              ; preds = %806, %847
  %854 = phi i64 [ %809, %806 ], [ %820, %847 ]
  %855 = phi i32 [ 1, %806 ], [ %851, %847 ]
  br label %856

856:                                              ; preds = %853, %856
  %857 = phi i64 [ %862, %856 ], [ %854, %853 ]
  %858 = phi i32 [ %861, %856 ], [ %855, %853 ]
  %859 = getelementptr inbounds i32, ptr %11, i64 %857
  %860 = load i32, ptr %859, align 4, !tbaa !5
  %861 = mul nsw i32 %860, %858
  %862 = add nsw i64 %857, -1
  %863 = trunc i64 %857 to i32
  %864 = icmp sgt i32 %863, 0
  br i1 %864, label %856, label %865, !llvm.loop !230

865:                                              ; preds = %856, %847
  %866 = phi i32 [ %851, %847 ], [ %861, %856 ]
  %867 = and i64 %816, 4294967295
  %868 = getelementptr inbounds i32, ptr %6, i64 %867
  %869 = load i32, ptr %868, align 4, !tbaa !5
  %870 = mul nsw i32 %869, %866
  %871 = add nsw i32 %870, %810
  %872 = icmp sgt i64 %808, 2
  %873 = add nsw i64 %809, -1
  %874 = add i32 %807, 1
  br i1 %872, label %806, label %875, !llvm.loop !231

875:                                              ; preds = %865, %803
  %876 = phi i32 [ %805, %803 ], [ %871, %865 ]
  %877 = icmp slt i32 %876, %5
  br i1 %877, label %880, label %878

878:                                              ; preds = %875
  %879 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 337, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

880:                                              ; preds = %875
  %881 = sext i32 %876 to i64
  %882 = getelementptr inbounds i32, ptr %634, i64 %881
  %883 = load i32, ptr %882, align 4, !tbaa !5
  %884 = load i32, ptr %636, align 4, !tbaa !5
  %885 = sitofp i32 %884 to double
  %886 = sitofp i32 %883 to double
  %887 = fmul fast double %886, %886
  %888 = fadd fast double %887, %885
  %889 = fptosi double %888 to i32
  store i32 %889, ptr %636, align 4, !tbaa !5
  %890 = add nuw nsw i32 %804, 1
  br i1 %650, label %891, label %941

891:                                              ; preds = %880
  %892 = load i32, ptr %4, align 4, !tbaa !5
  %893 = load i32, ptr %12, align 4, !tbaa !5
  %894 = add nsw i32 %893, -1
  %895 = icmp slt i32 %892, %894
  br i1 %895, label %918, label %896

896:                                              ; preds = %891
  %897 = icmp eq i32 %892, %894
  br i1 %897, label %898, label %934

898:                                              ; preds = %896
  store i32 0, ptr %4, align 4, !tbaa !5
  %899 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %899, ptr %6, align 4, !tbaa !5
  br i1 %655, label %941, label %900

900:                                              ; preds = %898, %928
  %901 = phi i64 [ %932, %928 ], [ 1, %898 ]
  %902 = getelementptr inbounds i32, ptr %4, i64 %901
  %903 = load i32, ptr %902, align 4, !tbaa !5
  %904 = getelementptr inbounds i32, ptr %12, i64 %901
  %905 = load i32, ptr %904, align 4, !tbaa !5
  %906 = add nsw i32 %905, -1
  %907 = icmp slt i32 %903, %906
  br i1 %907, label %908, label %926

908:                                              ; preds = %900
  br i1 %895, label %918, label %909

909:                                              ; preds = %908
  %910 = shl i64 %901, 32
  %911 = add i64 %910, -4294967296
  %912 = ashr exact i64 %911, 32
  %913 = getelementptr inbounds i32, ptr %7, i64 %912
  %914 = load i32, ptr %913, align 4, !tbaa !5
  %915 = getelementptr inbounds i32, ptr %6, i64 %901
  %916 = load i32, ptr %915, align 4, !tbaa !5
  %917 = add nsw i32 %916, %914
  store i32 %917, ptr %915, align 4, !tbaa !5
  br label %936

918:                                              ; preds = %891, %908
  %919 = phi i32 [ %903, %908 ], [ %892, %891 ]
  %920 = phi ptr [ %902, %908 ], [ %4, %891 ]
  %921 = phi i64 [ %901, %908 ], [ 0, %891 ]
  %922 = add nsw i32 %919, 1
  store i32 %922, ptr %920, align 4, !tbaa !5
  %923 = getelementptr inbounds i32, ptr %7, i64 %921
  %924 = load i32, ptr %923, align 4, !tbaa !5
  %925 = getelementptr inbounds i32, ptr %6, i64 %921
  br label %936

926:                                              ; preds = %900
  %927 = icmp eq i32 %903, %906
  br i1 %927, label %928, label %934

928:                                              ; preds = %926
  store i32 0, ptr %902, align 4, !tbaa !5
  %929 = getelementptr inbounds i32, ptr %8, i64 %901
  %930 = load i32, ptr %929, align 4, !tbaa !5
  %931 = getelementptr inbounds i32, ptr %6, i64 %901
  store i32 %930, ptr %931, align 4, !tbaa !5
  %932 = add nuw nsw i64 %901, 1
  %933 = icmp eq i64 %932, %653
  br i1 %933, label %941, label %900, !llvm.loop !232

934:                                              ; preds = %896, %926
  %935 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 337, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

936:                                              ; preds = %909, %918
  %937 = phi ptr [ %925, %918 ], [ %902, %909 ]
  %938 = phi i32 [ %924, %918 ], [ 1, %909 ]
  %939 = load i32, ptr %937, align 4, !tbaa !5
  %940 = add nsw i32 %939, %938
  store i32 %940, ptr %937, align 4, !tbaa !5
  br label %941

941:                                              ; preds = %928, %936, %898, %880
  %942 = icmp eq i32 %890, %5
  br i1 %942, label %5500, label %803, !llvm.loop !233

943:                                              ; preds = %641
  %944 = getelementptr inbounds i32, ptr %3, i64 %19
  %945 = load i32, ptr %944, align 4, !tbaa !5
  %946 = icmp eq i32 %945, 0
  %947 = icmp sgt i32 %5, 0
  br i1 %946, label %957, label %948

948:                                              ; preds = %943
  br i1 %947, label %949, label %5500

949:                                              ; preds = %948
  %950 = icmp sgt i32 %13, 1
  %951 = icmp sgt i32 %13, 0
  %952 = add i32 %13, -2
  %953 = zext i32 %952 to i64
  %954 = zext i32 %13 to i64
  %955 = add nuw i32 %5, 1
  %956 = icmp eq i32 %13, 1
  br label %1098

957:                                              ; preds = %943
  br i1 %947, label %958, label %5500

958:                                              ; preds = %957
  %959 = icmp sgt i32 %13, 1
  %960 = icmp sgt i32 %13, 0
  %961 = add i32 %13, -2
  %962 = zext i32 %961 to i64
  %963 = zext i32 %13 to i64
  %964 = add nuw i32 %5, 1
  %965 = icmp eq i32 %13, 1
  br label %966

966:                                              ; preds = %958, %1096
  %967 = phi i32 [ 0, %958 ], [ %1048, %1096 ]
  %968 = phi double [ 0.000000e+00, %958 ], [ %1047, %1096 ]
  %969 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %959, label %970, label %1039

970:                                              ; preds = %966, %1029
  %971 = phi i32 [ %1038, %1029 ], [ 0, %966 ]
  %972 = phi i64 [ %980, %1029 ], [ %963, %966 ]
  %973 = phi i64 [ %1037, %1029 ], [ %962, %966 ]
  %974 = phi i32 [ %1035, %1029 ], [ %969, %966 ]
  %975 = sub i32 %961, %971
  %976 = tail call i32 @llvm.smin.i32(i32 %975, i32 0)
  %977 = sub i32 %975, %976
  %978 = zext i32 %977 to i64
  %979 = add nuw nsw i64 %978, 1
  %980 = add nsw i64 %972, -1
  %981 = icmp ult i32 %977, 31
  br i1 %981, label %1017, label %982

982:                                              ; preds = %970
  %983 = and i64 %979, 8589934560
  %984 = sub i64 %973, %983
  br label %985

985:                                              ; preds = %985, %982
  %986 = phi i64 [ 0, %982 ], [ %1009, %985 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1005, %985 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1006, %985 ]
  %989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1007, %985 ]
  %990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1008, %985 ]
  %991 = sub i64 %973, %986
  %992 = getelementptr inbounds i32, ptr %9, i64 %991
  %993 = getelementptr inbounds i32, ptr %992, i64 -7
  %994 = load <8 x i32>, ptr %993, align 4, !tbaa !5
  %995 = shufflevector <8 x i32> %994, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %996 = getelementptr inbounds i32, ptr %992, i64 -15
  %997 = load <8 x i32>, ptr %996, align 4, !tbaa !5
  %998 = shufflevector <8 x i32> %997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %999 = getelementptr inbounds i32, ptr %992, i64 -23
  %1000 = load <8 x i32>, ptr %999, align 4, !tbaa !5
  %1001 = shufflevector <8 x i32> %1000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1002 = getelementptr inbounds i32, ptr %992, i64 -31
  %1003 = load <8 x i32>, ptr %1002, align 4, !tbaa !5
  %1004 = shufflevector <8 x i32> %1003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1005 = mul <8 x i32> %995, %987
  %1006 = mul <8 x i32> %998, %988
  %1007 = mul <8 x i32> %1001, %989
  %1008 = mul <8 x i32> %1004, %990
  %1009 = add nuw i64 %986, 32
  %1010 = icmp eq i64 %1009, %983
  br i1 %1010, label %1011, label %985, !llvm.loop !234

1011:                                             ; preds = %985
  %1012 = mul <8 x i32> %1006, %1005
  %1013 = mul <8 x i32> %1007, %1012
  %1014 = mul <8 x i32> %1008, %1013
  %1015 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1014)
  %1016 = icmp eq i64 %979, %983
  br i1 %1016, label %1029, label %1017

1017:                                             ; preds = %970, %1011
  %1018 = phi i64 [ %973, %970 ], [ %984, %1011 ]
  %1019 = phi i32 [ 1, %970 ], [ %1015, %1011 ]
  br label %1020

1020:                                             ; preds = %1017, %1020
  %1021 = phi i64 [ %1026, %1020 ], [ %1018, %1017 ]
  %1022 = phi i32 [ %1025, %1020 ], [ %1019, %1017 ]
  %1023 = getelementptr inbounds i32, ptr %9, i64 %1021
  %1024 = load i32, ptr %1023, align 4, !tbaa !5
  %1025 = mul nsw i32 %1024, %1022
  %1026 = add nsw i64 %1021, -1
  %1027 = trunc i64 %1021 to i32
  %1028 = icmp sgt i32 %1027, 0
  br i1 %1028, label %1020, label %1029, !llvm.loop !235

1029:                                             ; preds = %1020, %1011
  %1030 = phi i32 [ %1015, %1011 ], [ %1025, %1020 ]
  %1031 = and i64 %980, 4294967295
  %1032 = getelementptr inbounds i32, ptr %6, i64 %1031
  %1033 = load i32, ptr %1032, align 4, !tbaa !5
  %1034 = mul nsw i32 %1033, %1030
  %1035 = add nsw i32 %1034, %974
  %1036 = icmp sgt i64 %972, 2
  %1037 = add nsw i64 %973, -1
  %1038 = add i32 %971, 1
  br i1 %1036, label %970, label %1039, !llvm.loop !236

1039:                                             ; preds = %1029, %966
  %1040 = phi i32 [ %969, %966 ], [ %1035, %1029 ]
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds i32, ptr %634, i64 %1041
  %1043 = load i32, ptr %1042, align 4, !tbaa !5
  %1044 = load i32, ptr %636, align 4, !tbaa !5
  %1045 = mul nsw i32 %1043, %1043
  %1046 = add nsw i32 %1044, %1045
  store i32 %1046, ptr %636, align 4, !tbaa !5
  %1047 = fadd fast double %968, 1.000000e+00
  %1048 = add nuw nsw i32 %967, 1
  br i1 %960, label %1049, label %1096

1049:                                             ; preds = %1039
  %1050 = load i32, ptr %4, align 4, !tbaa !5
  %1051 = load i32, ptr %12, align 4, !tbaa !5
  %1052 = add nsw i32 %1051, -1
  %1053 = icmp slt i32 %1050, %1052
  br i1 %1053, label %1073, label %1054

1054:                                             ; preds = %1049
  %1055 = icmp eq i32 %1050, %1052
  br i1 %1055, label %1056, label %1089

1056:                                             ; preds = %1054
  store i32 0, ptr %4, align 4, !tbaa !5
  %1057 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1057, ptr %6, align 4, !tbaa !5
  br i1 %965, label %1096, label %1058

1058:                                             ; preds = %1056, %1083
  %1059 = phi i64 [ %1087, %1083 ], [ 1, %1056 ]
  %1060 = getelementptr inbounds i32, ptr %4, i64 %1059
  %1061 = load i32, ptr %1060, align 4, !tbaa !5
  %1062 = getelementptr inbounds i32, ptr %12, i64 %1059
  %1063 = load i32, ptr %1062, align 4, !tbaa !5
  %1064 = add nsw i32 %1063, -1
  %1065 = icmp slt i32 %1061, %1064
  br i1 %1065, label %1066, label %1081

1066:                                             ; preds = %1058
  br i1 %1053, label %1073, label %1067

1067:                                             ; preds = %1066
  %1068 = getelementptr inbounds i32, ptr %7, i64 %1059
  %1069 = load i32, ptr %1068, align 4, !tbaa !5
  %1070 = getelementptr inbounds i32, ptr %6, i64 %1059
  %1071 = load i32, ptr %1070, align 4, !tbaa !5
  %1072 = add nsw i32 %1071, %1069
  store i32 %1072, ptr %1070, align 4, !tbaa !5
  br label %1091

1073:                                             ; preds = %1049, %1066
  %1074 = phi i32 [ %1061, %1066 ], [ %1050, %1049 ]
  %1075 = phi ptr [ %1060, %1066 ], [ %4, %1049 ]
  %1076 = phi i64 [ %1059, %1066 ], [ 0, %1049 ]
  %1077 = add nsw i32 %1074, 1
  store i32 %1077, ptr %1075, align 4, !tbaa !5
  %1078 = getelementptr inbounds i32, ptr %7, i64 %1076
  %1079 = load i32, ptr %1078, align 4, !tbaa !5
  %1080 = getelementptr inbounds i32, ptr %6, i64 %1076
  br label %1091

1081:                                             ; preds = %1058
  %1082 = icmp eq i32 %1061, %1064
  br i1 %1082, label %1083, label %1089

1083:                                             ; preds = %1081
  store i32 0, ptr %1060, align 4, !tbaa !5
  %1084 = getelementptr inbounds i32, ptr %8, i64 %1059
  %1085 = load i32, ptr %1084, align 4, !tbaa !5
  %1086 = getelementptr inbounds i32, ptr %6, i64 %1059
  store i32 %1085, ptr %1086, align 4, !tbaa !5
  %1087 = add nuw nsw i64 %1059, 1
  %1088 = icmp eq i64 %1087, %963
  br i1 %1088, label %1096, label %1058, !llvm.loop !237

1089:                                             ; preds = %1054, %1081
  %1090 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 337, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

1091:                                             ; preds = %1067, %1073
  %1092 = phi ptr [ %1080, %1073 ], [ %1060, %1067 ]
  %1093 = phi i32 [ %1079, %1073 ], [ 1, %1067 ]
  %1094 = load i32, ptr %1092, align 4, !tbaa !5
  %1095 = add nsw i32 %1094, %1093
  store i32 %1095, ptr %1092, align 4, !tbaa !5
  br label %1096

1096:                                             ; preds = %1083, %1091, %1056, %1039
  %1097 = icmp eq i32 %1048, %5
  br i1 %1097, label %5500, label %966, !llvm.loop !238

1098:                                             ; preds = %949, %1233
  %1099 = phi i32 [ 0, %949 ], [ %1182, %1233 ]
  %1100 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %950, label %1101, label %1170

1101:                                             ; preds = %1098, %1160
  %1102 = phi i32 [ %1169, %1160 ], [ 0, %1098 ]
  %1103 = phi i64 [ %1111, %1160 ], [ %954, %1098 ]
  %1104 = phi i64 [ %1168, %1160 ], [ %953, %1098 ]
  %1105 = phi i32 [ %1166, %1160 ], [ %1100, %1098 ]
  %1106 = sub i32 %952, %1102
  %1107 = tail call i32 @llvm.smin.i32(i32 %1106, i32 0)
  %1108 = sub i32 %1106, %1107
  %1109 = zext i32 %1108 to i64
  %1110 = add nuw nsw i64 %1109, 1
  %1111 = add nsw i64 %1103, -1
  %1112 = icmp ult i32 %1108, 31
  br i1 %1112, label %1148, label %1113

1113:                                             ; preds = %1101
  %1114 = and i64 %1110, 8589934560
  %1115 = sub i64 %1104, %1114
  br label %1116

1116:                                             ; preds = %1116, %1113
  %1117 = phi i64 [ 0, %1113 ], [ %1140, %1116 ]
  %1118 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1113 ], [ %1136, %1116 ]
  %1119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1113 ], [ %1137, %1116 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1113 ], [ %1138, %1116 ]
  %1121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1113 ], [ %1139, %1116 ]
  %1122 = sub i64 %1104, %1117
  %1123 = getelementptr inbounds i32, ptr %11, i64 %1122
  %1124 = getelementptr inbounds i32, ptr %1123, i64 -7
  %1125 = load <8 x i32>, ptr %1124, align 4, !tbaa !5
  %1126 = shufflevector <8 x i32> %1125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1127 = getelementptr inbounds i32, ptr %1123, i64 -15
  %1128 = load <8 x i32>, ptr %1127, align 4, !tbaa !5
  %1129 = shufflevector <8 x i32> %1128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1130 = getelementptr inbounds i32, ptr %1123, i64 -23
  %1131 = load <8 x i32>, ptr %1130, align 4, !tbaa !5
  %1132 = shufflevector <8 x i32> %1131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1133 = getelementptr inbounds i32, ptr %1123, i64 -31
  %1134 = load <8 x i32>, ptr %1133, align 4, !tbaa !5
  %1135 = shufflevector <8 x i32> %1134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1136 = mul <8 x i32> %1126, %1118
  %1137 = mul <8 x i32> %1129, %1119
  %1138 = mul <8 x i32> %1132, %1120
  %1139 = mul <8 x i32> %1135, %1121
  %1140 = add nuw i64 %1117, 32
  %1141 = icmp eq i64 %1140, %1114
  br i1 %1141, label %1142, label %1116, !llvm.loop !239

1142:                                             ; preds = %1116
  %1143 = mul <8 x i32> %1137, %1136
  %1144 = mul <8 x i32> %1138, %1143
  %1145 = mul <8 x i32> %1139, %1144
  %1146 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1145)
  %1147 = icmp eq i64 %1110, %1114
  br i1 %1147, label %1160, label %1148

1148:                                             ; preds = %1101, %1142
  %1149 = phi i64 [ %1104, %1101 ], [ %1115, %1142 ]
  %1150 = phi i32 [ 1, %1101 ], [ %1146, %1142 ]
  br label %1151

1151:                                             ; preds = %1148, %1151
  %1152 = phi i64 [ %1157, %1151 ], [ %1149, %1148 ]
  %1153 = phi i32 [ %1156, %1151 ], [ %1150, %1148 ]
  %1154 = getelementptr inbounds i32, ptr %11, i64 %1152
  %1155 = load i32, ptr %1154, align 4, !tbaa !5
  %1156 = mul nsw i32 %1155, %1153
  %1157 = add nsw i64 %1152, -1
  %1158 = trunc i64 %1152 to i32
  %1159 = icmp sgt i32 %1158, 0
  br i1 %1159, label %1151, label %1160, !llvm.loop !240

1160:                                             ; preds = %1151, %1142
  %1161 = phi i32 [ %1146, %1142 ], [ %1156, %1151 ]
  %1162 = and i64 %1111, 4294967295
  %1163 = getelementptr inbounds i32, ptr %6, i64 %1162
  %1164 = load i32, ptr %1163, align 4, !tbaa !5
  %1165 = mul nsw i32 %1164, %1161
  %1166 = add nsw i32 %1165, %1105
  %1167 = icmp sgt i64 %1103, 2
  %1168 = add nsw i64 %1104, -1
  %1169 = add i32 %1102, 1
  br i1 %1167, label %1101, label %1170, !llvm.loop !241

1170:                                             ; preds = %1160, %1098
  %1171 = phi i32 [ %1100, %1098 ], [ %1166, %1160 ]
  %1172 = icmp slt i32 %1171, %5
  br i1 %1172, label %1175, label %1173

1173:                                             ; preds = %1170
  %1174 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 337, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

1175:                                             ; preds = %1170
  %1176 = sext i32 %1171 to i64
  %1177 = getelementptr inbounds i32, ptr %634, i64 %1176
  %1178 = load i32, ptr %1177, align 4, !tbaa !5
  %1179 = load i32, ptr %636, align 4, !tbaa !5
  %1180 = mul nsw i32 %1178, %1178
  %1181 = add nsw i32 %1179, %1180
  store i32 %1181, ptr %636, align 4, !tbaa !5
  %1182 = add nuw nsw i32 %1099, 1
  br i1 %951, label %1183, label %1233

1183:                                             ; preds = %1175
  %1184 = load i32, ptr %4, align 4, !tbaa !5
  %1185 = load i32, ptr %12, align 4, !tbaa !5
  %1186 = add nsw i32 %1185, -1
  %1187 = icmp slt i32 %1184, %1186
  br i1 %1187, label %1210, label %1188

1188:                                             ; preds = %1183
  %1189 = icmp eq i32 %1184, %1186
  br i1 %1189, label %1190, label %1226

1190:                                             ; preds = %1188
  store i32 0, ptr %4, align 4, !tbaa !5
  %1191 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1191, ptr %6, align 4, !tbaa !5
  br i1 %956, label %1233, label %1192

1192:                                             ; preds = %1190, %1220
  %1193 = phi i64 [ %1224, %1220 ], [ 1, %1190 ]
  %1194 = getelementptr inbounds i32, ptr %4, i64 %1193
  %1195 = load i32, ptr %1194, align 4, !tbaa !5
  %1196 = getelementptr inbounds i32, ptr %12, i64 %1193
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = add nsw i32 %1197, -1
  %1199 = icmp slt i32 %1195, %1198
  br i1 %1199, label %1200, label %1218

1200:                                             ; preds = %1192
  br i1 %1187, label %1210, label %1201

1201:                                             ; preds = %1200
  %1202 = shl i64 %1193, 32
  %1203 = add i64 %1202, -4294967296
  %1204 = ashr exact i64 %1203, 32
  %1205 = getelementptr inbounds i32, ptr %7, i64 %1204
  %1206 = load i32, ptr %1205, align 4, !tbaa !5
  %1207 = getelementptr inbounds i32, ptr %6, i64 %1193
  %1208 = load i32, ptr %1207, align 4, !tbaa !5
  %1209 = add nsw i32 %1208, %1206
  store i32 %1209, ptr %1207, align 4, !tbaa !5
  br label %1228

1210:                                             ; preds = %1183, %1200
  %1211 = phi i32 [ %1195, %1200 ], [ %1184, %1183 ]
  %1212 = phi ptr [ %1194, %1200 ], [ %4, %1183 ]
  %1213 = phi i64 [ %1193, %1200 ], [ 0, %1183 ]
  %1214 = add nsw i32 %1211, 1
  store i32 %1214, ptr %1212, align 4, !tbaa !5
  %1215 = getelementptr inbounds i32, ptr %7, i64 %1213
  %1216 = load i32, ptr %1215, align 4, !tbaa !5
  %1217 = getelementptr inbounds i32, ptr %6, i64 %1213
  br label %1228

1218:                                             ; preds = %1192
  %1219 = icmp eq i32 %1195, %1198
  br i1 %1219, label %1220, label %1226

1220:                                             ; preds = %1218
  store i32 0, ptr %1194, align 4, !tbaa !5
  %1221 = getelementptr inbounds i32, ptr %8, i64 %1193
  %1222 = load i32, ptr %1221, align 4, !tbaa !5
  %1223 = getelementptr inbounds i32, ptr %6, i64 %1193
  store i32 %1222, ptr %1223, align 4, !tbaa !5
  %1224 = add nuw nsw i64 %1193, 1
  %1225 = icmp eq i64 %1224, %954
  br i1 %1225, label %1233, label %1192, !llvm.loop !242

1226:                                             ; preds = %1188, %1218
  %1227 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 337, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

1228:                                             ; preds = %1201, %1210
  %1229 = phi ptr [ %1217, %1210 ], [ %1194, %1201 ]
  %1230 = phi i32 [ %1216, %1210 ], [ 1, %1201 ]
  %1231 = load i32, ptr %1229, align 4, !tbaa !5
  %1232 = add nsw i32 %1231, %1230
  store i32 %1232, ptr %1229, align 4, !tbaa !5
  br label %1233

1233:                                             ; preds = %1220, %1228, %1190, %1175
  %1234 = icmp eq i32 %1182, %5
  br i1 %1234, label %5500, label %1098, !llvm.loop !243

1235:                                             ; preds = %641
  %1236 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 337, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

1237:                                             ; preds = %18
  %1238 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1239 = load ptr, ptr %1238, align 8, !tbaa !9
  %1240 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1241 = load ptr, ptr %1240, align 8, !tbaa !9
  store i8 0, ptr %1241, align 1, !tbaa !11
  %1242 = icmp eq i32 %13, 0
  br i1 %1242, label %1243, label %1247

1243:                                             ; preds = %1237
  %1244 = load i32, ptr %1239, align 4, !tbaa !5
  %1245 = mul i32 %1244, %1244
  %1246 = trunc i32 %1245 to i8
  store i8 %1246, ptr %1241, align 1, !tbaa !11
  br label %5500

1247:                                             ; preds = %1237
  switch i32 %1, label %1847 [
    i32 1, label %1248
    i32 0, label %1553
  ]

1248:                                             ; preds = %1247
  %1249 = getelementptr inbounds i32, ptr %3, i64 %19
  %1250 = load i32, ptr %1249, align 4, !tbaa !5
  %1251 = icmp eq i32 %1250, 0
  %1252 = icmp sgt i32 %5, 0
  br i1 %1251, label %1262, label %1253

1253:                                             ; preds = %1248
  br i1 %1252, label %1254, label %5500

1254:                                             ; preds = %1253
  %1255 = icmp sgt i32 %13, 1
  %1256 = icmp sgt i32 %13, 0
  %1257 = add i32 %13, -2
  %1258 = zext i32 %1257 to i64
  %1259 = zext i32 %13 to i64
  %1260 = add nuw i32 %5, 1
  %1261 = icmp eq i32 %13, 1
  br label %1411

1262:                                             ; preds = %1248
  br i1 %1252, label %1263, label %5500

1263:                                             ; preds = %1262
  %1264 = icmp sgt i32 %13, 1
  %1265 = icmp sgt i32 %13, 0
  %1266 = add i32 %13, -2
  %1267 = zext i32 %1266 to i64
  %1268 = zext i32 %13 to i64
  %1269 = add nuw i32 %5, 1
  %1270 = icmp eq i32 %13, 1
  br label %1271

1271:                                             ; preds = %1263, %1409
  %1272 = phi i32 [ 0, %1263 ], [ %1361, %1409 ]
  %1273 = phi double [ 0.000000e+00, %1263 ], [ %1360, %1409 ]
  %1274 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1264, label %1275, label %1344

1275:                                             ; preds = %1271, %1334
  %1276 = phi i32 [ %1343, %1334 ], [ 0, %1271 ]
  %1277 = phi i64 [ %1285, %1334 ], [ %1268, %1271 ]
  %1278 = phi i64 [ %1342, %1334 ], [ %1267, %1271 ]
  %1279 = phi i32 [ %1340, %1334 ], [ %1274, %1271 ]
  %1280 = sub i32 %1266, %1276
  %1281 = tail call i32 @llvm.smin.i32(i32 %1280, i32 0)
  %1282 = sub i32 %1280, %1281
  %1283 = zext i32 %1282 to i64
  %1284 = add nuw nsw i64 %1283, 1
  %1285 = add nsw i64 %1277, -1
  %1286 = icmp ult i32 %1282, 31
  br i1 %1286, label %1322, label %1287

1287:                                             ; preds = %1275
  %1288 = and i64 %1284, 8589934560
  %1289 = sub i64 %1278, %1288
  br label %1290

1290:                                             ; preds = %1290, %1287
  %1291 = phi i64 [ 0, %1287 ], [ %1314, %1290 ]
  %1292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1310, %1290 ]
  %1293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1311, %1290 ]
  %1294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1312, %1290 ]
  %1295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1313, %1290 ]
  %1296 = sub i64 %1278, %1291
  %1297 = getelementptr inbounds i32, ptr %9, i64 %1296
  %1298 = getelementptr inbounds i32, ptr %1297, i64 -7
  %1299 = load <8 x i32>, ptr %1298, align 4, !tbaa !5
  %1300 = shufflevector <8 x i32> %1299, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1301 = getelementptr inbounds i32, ptr %1297, i64 -15
  %1302 = load <8 x i32>, ptr %1301, align 4, !tbaa !5
  %1303 = shufflevector <8 x i32> %1302, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1304 = getelementptr inbounds i32, ptr %1297, i64 -23
  %1305 = load <8 x i32>, ptr %1304, align 4, !tbaa !5
  %1306 = shufflevector <8 x i32> %1305, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1307 = getelementptr inbounds i32, ptr %1297, i64 -31
  %1308 = load <8 x i32>, ptr %1307, align 4, !tbaa !5
  %1309 = shufflevector <8 x i32> %1308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1310 = mul <8 x i32> %1300, %1292
  %1311 = mul <8 x i32> %1303, %1293
  %1312 = mul <8 x i32> %1306, %1294
  %1313 = mul <8 x i32> %1309, %1295
  %1314 = add nuw i64 %1291, 32
  %1315 = icmp eq i64 %1314, %1288
  br i1 %1315, label %1316, label %1290, !llvm.loop !244

1316:                                             ; preds = %1290
  %1317 = mul <8 x i32> %1311, %1310
  %1318 = mul <8 x i32> %1312, %1317
  %1319 = mul <8 x i32> %1313, %1318
  %1320 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1319)
  %1321 = icmp eq i64 %1284, %1288
  br i1 %1321, label %1334, label %1322

1322:                                             ; preds = %1275, %1316
  %1323 = phi i64 [ %1278, %1275 ], [ %1289, %1316 ]
  %1324 = phi i32 [ 1, %1275 ], [ %1320, %1316 ]
  br label %1325

1325:                                             ; preds = %1322, %1325
  %1326 = phi i64 [ %1331, %1325 ], [ %1323, %1322 ]
  %1327 = phi i32 [ %1330, %1325 ], [ %1324, %1322 ]
  %1328 = getelementptr inbounds i32, ptr %9, i64 %1326
  %1329 = load i32, ptr %1328, align 4, !tbaa !5
  %1330 = mul nsw i32 %1329, %1327
  %1331 = add nsw i64 %1326, -1
  %1332 = trunc i64 %1326 to i32
  %1333 = icmp sgt i32 %1332, 0
  br i1 %1333, label %1325, label %1334, !llvm.loop !245

1334:                                             ; preds = %1325, %1316
  %1335 = phi i32 [ %1320, %1316 ], [ %1330, %1325 ]
  %1336 = and i64 %1285, 4294967295
  %1337 = getelementptr inbounds i32, ptr %6, i64 %1336
  %1338 = load i32, ptr %1337, align 4, !tbaa !5
  %1339 = mul nsw i32 %1338, %1335
  %1340 = add nsw i32 %1339, %1279
  %1341 = icmp sgt i64 %1277, 2
  %1342 = add nsw i64 %1278, -1
  %1343 = add i32 %1276, 1
  br i1 %1341, label %1275, label %1344, !llvm.loop !246

1344:                                             ; preds = %1334, %1271
  %1345 = phi i32 [ %1274, %1271 ], [ %1340, %1334 ]
  %1346 = sext i32 %1345 to i64
  %1347 = getelementptr inbounds double, ptr %2, i64 %1346
  %1348 = load double, ptr %1347, align 8, !tbaa !18
  %1349 = getelementptr inbounds i32, ptr %1239, i64 %1346
  %1350 = load i32, ptr %1349, align 4, !tbaa !5
  %1351 = load i8, ptr %1241, align 1, !tbaa !11
  %1352 = sitofp i8 %1351 to double
  %1353 = shl i32 %1350, 24
  %1354 = ashr exact i32 %1353, 24
  %1355 = sitofp i32 %1354 to double
  %1356 = fmul fast double %1348, %1355
  %1357 = fmul fast double %1356, %1356
  %1358 = fadd fast double %1357, %1352
  %1359 = fptosi double %1358 to i8
  store i8 %1359, ptr %1241, align 1, !tbaa !11
  %1360 = fadd fast double %1348, %1273
  %1361 = add nuw nsw i32 %1272, 1
  br i1 %1265, label %1362, label %1409

1362:                                             ; preds = %1344
  %1363 = load i32, ptr %4, align 4, !tbaa !5
  %1364 = load i32, ptr %12, align 4, !tbaa !5
  %1365 = add nsw i32 %1364, -1
  %1366 = icmp slt i32 %1363, %1365
  br i1 %1366, label %1386, label %1367

1367:                                             ; preds = %1362
  %1368 = icmp eq i32 %1363, %1365
  br i1 %1368, label %1369, label %1402

1369:                                             ; preds = %1367
  store i32 0, ptr %4, align 4, !tbaa !5
  %1370 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1370, ptr %6, align 4, !tbaa !5
  br i1 %1270, label %1409, label %1371

1371:                                             ; preds = %1369, %1396
  %1372 = phi i64 [ %1400, %1396 ], [ 1, %1369 ]
  %1373 = getelementptr inbounds i32, ptr %4, i64 %1372
  %1374 = load i32, ptr %1373, align 4, !tbaa !5
  %1375 = getelementptr inbounds i32, ptr %12, i64 %1372
  %1376 = load i32, ptr %1375, align 4, !tbaa !5
  %1377 = add nsw i32 %1376, -1
  %1378 = icmp slt i32 %1374, %1377
  br i1 %1378, label %1379, label %1394

1379:                                             ; preds = %1371
  br i1 %1366, label %1386, label %1380

1380:                                             ; preds = %1379
  %1381 = getelementptr inbounds i32, ptr %7, i64 %1372
  %1382 = load i32, ptr %1381, align 4, !tbaa !5
  %1383 = getelementptr inbounds i32, ptr %6, i64 %1372
  %1384 = load i32, ptr %1383, align 4, !tbaa !5
  %1385 = add nsw i32 %1384, %1382
  store i32 %1385, ptr %1383, align 4, !tbaa !5
  br label %1404

1386:                                             ; preds = %1362, %1379
  %1387 = phi i32 [ %1374, %1379 ], [ %1363, %1362 ]
  %1388 = phi ptr [ %1373, %1379 ], [ %4, %1362 ]
  %1389 = phi i64 [ %1372, %1379 ], [ 0, %1362 ]
  %1390 = add nsw i32 %1387, 1
  store i32 %1390, ptr %1388, align 4, !tbaa !5
  %1391 = getelementptr inbounds i32, ptr %7, i64 %1389
  %1392 = load i32, ptr %1391, align 4, !tbaa !5
  %1393 = getelementptr inbounds i32, ptr %6, i64 %1389
  br label %1404

1394:                                             ; preds = %1371
  %1395 = icmp eq i32 %1374, %1377
  br i1 %1395, label %1396, label %1402

1396:                                             ; preds = %1394
  store i32 0, ptr %1373, align 4, !tbaa !5
  %1397 = getelementptr inbounds i32, ptr %8, i64 %1372
  %1398 = load i32, ptr %1397, align 4, !tbaa !5
  %1399 = getelementptr inbounds i32, ptr %6, i64 %1372
  store i32 %1398, ptr %1399, align 4, !tbaa !5
  %1400 = add nuw nsw i64 %1372, 1
  %1401 = icmp eq i64 %1400, %1268
  br i1 %1401, label %1409, label %1371, !llvm.loop !247

1402:                                             ; preds = %1367, %1394
  %1403 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

1404:                                             ; preds = %1380, %1386
  %1405 = phi ptr [ %1393, %1386 ], [ %1373, %1380 ]
  %1406 = phi i32 [ %1392, %1386 ], [ 1, %1380 ]
  %1407 = load i32, ptr %1405, align 4, !tbaa !5
  %1408 = add nsw i32 %1407, %1406
  store i32 %1408, ptr %1405, align 4, !tbaa !5
  br label %1409

1409:                                             ; preds = %1396, %1404, %1369, %1344
  %1410 = icmp eq i32 %1361, %5
  br i1 %1410, label %5500, label %1271, !llvm.loop !248

1411:                                             ; preds = %1254, %1551
  %1412 = phi i32 [ 0, %1254 ], [ %1500, %1551 ]
  %1413 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1255, label %1414, label %1483

1414:                                             ; preds = %1411, %1473
  %1415 = phi i32 [ %1482, %1473 ], [ 0, %1411 ]
  %1416 = phi i64 [ %1424, %1473 ], [ %1259, %1411 ]
  %1417 = phi i64 [ %1481, %1473 ], [ %1258, %1411 ]
  %1418 = phi i32 [ %1479, %1473 ], [ %1413, %1411 ]
  %1419 = sub i32 %1257, %1415
  %1420 = tail call i32 @llvm.smin.i32(i32 %1419, i32 0)
  %1421 = sub i32 %1419, %1420
  %1422 = zext i32 %1421 to i64
  %1423 = add nuw nsw i64 %1422, 1
  %1424 = add nsw i64 %1416, -1
  %1425 = icmp ult i32 %1421, 31
  br i1 %1425, label %1461, label %1426

1426:                                             ; preds = %1414
  %1427 = and i64 %1423, 8589934560
  %1428 = sub i64 %1417, %1427
  br label %1429

1429:                                             ; preds = %1429, %1426
  %1430 = phi i64 [ 0, %1426 ], [ %1453, %1429 ]
  %1431 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1426 ], [ %1449, %1429 ]
  %1432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1426 ], [ %1450, %1429 ]
  %1433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1426 ], [ %1451, %1429 ]
  %1434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1426 ], [ %1452, %1429 ]
  %1435 = sub i64 %1417, %1430
  %1436 = getelementptr inbounds i32, ptr %11, i64 %1435
  %1437 = getelementptr inbounds i32, ptr %1436, i64 -7
  %1438 = load <8 x i32>, ptr %1437, align 4, !tbaa !5
  %1439 = shufflevector <8 x i32> %1438, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1440 = getelementptr inbounds i32, ptr %1436, i64 -15
  %1441 = load <8 x i32>, ptr %1440, align 4, !tbaa !5
  %1442 = shufflevector <8 x i32> %1441, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1443 = getelementptr inbounds i32, ptr %1436, i64 -23
  %1444 = load <8 x i32>, ptr %1443, align 4, !tbaa !5
  %1445 = shufflevector <8 x i32> %1444, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1446 = getelementptr inbounds i32, ptr %1436, i64 -31
  %1447 = load <8 x i32>, ptr %1446, align 4, !tbaa !5
  %1448 = shufflevector <8 x i32> %1447, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1449 = mul <8 x i32> %1439, %1431
  %1450 = mul <8 x i32> %1442, %1432
  %1451 = mul <8 x i32> %1445, %1433
  %1452 = mul <8 x i32> %1448, %1434
  %1453 = add nuw i64 %1430, 32
  %1454 = icmp eq i64 %1453, %1427
  br i1 %1454, label %1455, label %1429, !llvm.loop !249

1455:                                             ; preds = %1429
  %1456 = mul <8 x i32> %1450, %1449
  %1457 = mul <8 x i32> %1451, %1456
  %1458 = mul <8 x i32> %1452, %1457
  %1459 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1458)
  %1460 = icmp eq i64 %1423, %1427
  br i1 %1460, label %1473, label %1461

1461:                                             ; preds = %1414, %1455
  %1462 = phi i64 [ %1417, %1414 ], [ %1428, %1455 ]
  %1463 = phi i32 [ 1, %1414 ], [ %1459, %1455 ]
  br label %1464

1464:                                             ; preds = %1461, %1464
  %1465 = phi i64 [ %1470, %1464 ], [ %1462, %1461 ]
  %1466 = phi i32 [ %1469, %1464 ], [ %1463, %1461 ]
  %1467 = getelementptr inbounds i32, ptr %11, i64 %1465
  %1468 = load i32, ptr %1467, align 4, !tbaa !5
  %1469 = mul nsw i32 %1468, %1466
  %1470 = add nsw i64 %1465, -1
  %1471 = trunc i64 %1465 to i32
  %1472 = icmp sgt i32 %1471, 0
  br i1 %1472, label %1464, label %1473, !llvm.loop !250

1473:                                             ; preds = %1464, %1455
  %1474 = phi i32 [ %1459, %1455 ], [ %1469, %1464 ]
  %1475 = and i64 %1424, 4294967295
  %1476 = getelementptr inbounds i32, ptr %6, i64 %1475
  %1477 = load i32, ptr %1476, align 4, !tbaa !5
  %1478 = mul nsw i32 %1477, %1474
  %1479 = add nsw i32 %1478, %1418
  %1480 = icmp sgt i64 %1416, 2
  %1481 = add nsw i64 %1417, -1
  %1482 = add i32 %1415, 1
  br i1 %1480, label %1414, label %1483, !llvm.loop !251

1483:                                             ; preds = %1473, %1411
  %1484 = phi i32 [ %1413, %1411 ], [ %1479, %1473 ]
  %1485 = icmp slt i32 %1484, %5
  br i1 %1485, label %1488, label %1486

1486:                                             ; preds = %1483
  %1487 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

1488:                                             ; preds = %1483
  %1489 = sext i32 %1484 to i64
  %1490 = getelementptr inbounds i32, ptr %1239, i64 %1489
  %1491 = load i32, ptr %1490, align 4, !tbaa !5
  %1492 = load i8, ptr %1241, align 1, !tbaa !11
  %1493 = sitofp i8 %1492 to double
  %1494 = shl i32 %1491, 24
  %1495 = ashr exact i32 %1494, 24
  %1496 = sitofp i32 %1495 to double
  %1497 = fmul fast double %1496, %1496
  %1498 = fadd fast double %1497, %1493
  %1499 = fptosi double %1498 to i8
  store i8 %1499, ptr %1241, align 1, !tbaa !11
  %1500 = add nuw nsw i32 %1412, 1
  br i1 %1256, label %1501, label %1551

1501:                                             ; preds = %1488
  %1502 = load i32, ptr %4, align 4, !tbaa !5
  %1503 = load i32, ptr %12, align 4, !tbaa !5
  %1504 = add nsw i32 %1503, -1
  %1505 = icmp slt i32 %1502, %1504
  br i1 %1505, label %1528, label %1506

1506:                                             ; preds = %1501
  %1507 = icmp eq i32 %1502, %1504
  br i1 %1507, label %1508, label %1544

1508:                                             ; preds = %1506
  store i32 0, ptr %4, align 4, !tbaa !5
  %1509 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1509, ptr %6, align 4, !tbaa !5
  br i1 %1261, label %1551, label %1510

1510:                                             ; preds = %1508, %1538
  %1511 = phi i64 [ %1542, %1538 ], [ 1, %1508 ]
  %1512 = getelementptr inbounds i32, ptr %4, i64 %1511
  %1513 = load i32, ptr %1512, align 4, !tbaa !5
  %1514 = getelementptr inbounds i32, ptr %12, i64 %1511
  %1515 = load i32, ptr %1514, align 4, !tbaa !5
  %1516 = add nsw i32 %1515, -1
  %1517 = icmp slt i32 %1513, %1516
  br i1 %1517, label %1518, label %1536

1518:                                             ; preds = %1510
  br i1 %1505, label %1528, label %1519

1519:                                             ; preds = %1518
  %1520 = shl i64 %1511, 32
  %1521 = add i64 %1520, -4294967296
  %1522 = ashr exact i64 %1521, 32
  %1523 = getelementptr inbounds i32, ptr %7, i64 %1522
  %1524 = load i32, ptr %1523, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %6, i64 %1511
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = add nsw i32 %1526, %1524
  store i32 %1527, ptr %1525, align 4, !tbaa !5
  br label %1546

1528:                                             ; preds = %1501, %1518
  %1529 = phi i32 [ %1513, %1518 ], [ %1502, %1501 ]
  %1530 = phi ptr [ %1512, %1518 ], [ %4, %1501 ]
  %1531 = phi i64 [ %1511, %1518 ], [ 0, %1501 ]
  %1532 = add nsw i32 %1529, 1
  store i32 %1532, ptr %1530, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %7, i64 %1531
  %1534 = load i32, ptr %1533, align 4, !tbaa !5
  %1535 = getelementptr inbounds i32, ptr %6, i64 %1531
  br label %1546

1536:                                             ; preds = %1510
  %1537 = icmp eq i32 %1513, %1516
  br i1 %1537, label %1538, label %1544

1538:                                             ; preds = %1536
  store i32 0, ptr %1512, align 4, !tbaa !5
  %1539 = getelementptr inbounds i32, ptr %8, i64 %1511
  %1540 = load i32, ptr %1539, align 4, !tbaa !5
  %1541 = getelementptr inbounds i32, ptr %6, i64 %1511
  store i32 %1540, ptr %1541, align 4, !tbaa !5
  %1542 = add nuw nsw i64 %1511, 1
  %1543 = icmp eq i64 %1542, %1259
  br i1 %1543, label %1551, label %1510, !llvm.loop !252

1544:                                             ; preds = %1506, %1536
  %1545 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

1546:                                             ; preds = %1519, %1528
  %1547 = phi ptr [ %1535, %1528 ], [ %1512, %1519 ]
  %1548 = phi i32 [ %1534, %1528 ], [ 1, %1519 ]
  %1549 = load i32, ptr %1547, align 4, !tbaa !5
  %1550 = add nsw i32 %1549, %1548
  store i32 %1550, ptr %1547, align 4, !tbaa !5
  br label %1551

1551:                                             ; preds = %1538, %1546, %1508, %1488
  %1552 = icmp eq i32 %1500, %5
  br i1 %1552, label %5500, label %1411, !llvm.loop !253

1553:                                             ; preds = %1247
  %1554 = getelementptr inbounds i32, ptr %3, i64 %19
  %1555 = load i32, ptr %1554, align 4, !tbaa !5
  %1556 = icmp eq i32 %1555, 0
  %1557 = icmp sgt i32 %5, 0
  br i1 %1556, label %1567, label %1558

1558:                                             ; preds = %1553
  br i1 %1557, label %1559, label %5500

1559:                                             ; preds = %1558
  %1560 = icmp sgt i32 %13, 1
  %1561 = icmp sgt i32 %13, 0
  %1562 = add i32 %13, -2
  %1563 = zext i32 %1562 to i64
  %1564 = zext i32 %13 to i64
  %1565 = add nuw i32 %5, 1
  %1566 = icmp eq i32 %13, 1
  br label %1709

1567:                                             ; preds = %1553
  br i1 %1557, label %1568, label %5500

1568:                                             ; preds = %1567
  %1569 = icmp sgt i32 %13, 1
  %1570 = icmp sgt i32 %13, 0
  %1571 = add i32 %13, -2
  %1572 = zext i32 %1571 to i64
  %1573 = zext i32 %13 to i64
  %1574 = add nuw i32 %5, 1
  %1575 = icmp eq i32 %13, 1
  br label %1576

1576:                                             ; preds = %1568, %1707
  %1577 = phi i32 [ 0, %1568 ], [ %1659, %1707 ]
  %1578 = phi double [ 0.000000e+00, %1568 ], [ %1658, %1707 ]
  %1579 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1569, label %1580, label %1649

1580:                                             ; preds = %1576, %1639
  %1581 = phi i32 [ %1648, %1639 ], [ 0, %1576 ]
  %1582 = phi i64 [ %1590, %1639 ], [ %1573, %1576 ]
  %1583 = phi i64 [ %1647, %1639 ], [ %1572, %1576 ]
  %1584 = phi i32 [ %1645, %1639 ], [ %1579, %1576 ]
  %1585 = sub i32 %1571, %1581
  %1586 = tail call i32 @llvm.smin.i32(i32 %1585, i32 0)
  %1587 = sub i32 %1585, %1586
  %1588 = zext i32 %1587 to i64
  %1589 = add nuw nsw i64 %1588, 1
  %1590 = add nsw i64 %1582, -1
  %1591 = icmp ult i32 %1587, 31
  br i1 %1591, label %1627, label %1592

1592:                                             ; preds = %1580
  %1593 = and i64 %1589, 8589934560
  %1594 = sub i64 %1583, %1593
  br label %1595

1595:                                             ; preds = %1595, %1592
  %1596 = phi i64 [ 0, %1592 ], [ %1619, %1595 ]
  %1597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1615, %1595 ]
  %1598 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1616, %1595 ]
  %1599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1617, %1595 ]
  %1600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1618, %1595 ]
  %1601 = sub i64 %1583, %1596
  %1602 = getelementptr inbounds i32, ptr %9, i64 %1601
  %1603 = getelementptr inbounds i32, ptr %1602, i64 -7
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = getelementptr inbounds i32, ptr %1602, i64 -15
  %1607 = load <8 x i32>, ptr %1606, align 4, !tbaa !5
  %1608 = shufflevector <8 x i32> %1607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1609 = getelementptr inbounds i32, ptr %1602, i64 -23
  %1610 = load <8 x i32>, ptr %1609, align 4, !tbaa !5
  %1611 = shufflevector <8 x i32> %1610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1612 = getelementptr inbounds i32, ptr %1602, i64 -31
  %1613 = load <8 x i32>, ptr %1612, align 4, !tbaa !5
  %1614 = shufflevector <8 x i32> %1613, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1615 = mul <8 x i32> %1605, %1597
  %1616 = mul <8 x i32> %1608, %1598
  %1617 = mul <8 x i32> %1611, %1599
  %1618 = mul <8 x i32> %1614, %1600
  %1619 = add nuw i64 %1596, 32
  %1620 = icmp eq i64 %1619, %1593
  br i1 %1620, label %1621, label %1595, !llvm.loop !254

1621:                                             ; preds = %1595
  %1622 = mul <8 x i32> %1616, %1615
  %1623 = mul <8 x i32> %1617, %1622
  %1624 = mul <8 x i32> %1618, %1623
  %1625 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1624)
  %1626 = icmp eq i64 %1589, %1593
  br i1 %1626, label %1639, label %1627

1627:                                             ; preds = %1580, %1621
  %1628 = phi i64 [ %1583, %1580 ], [ %1594, %1621 ]
  %1629 = phi i32 [ 1, %1580 ], [ %1625, %1621 ]
  br label %1630

1630:                                             ; preds = %1627, %1630
  %1631 = phi i64 [ %1636, %1630 ], [ %1628, %1627 ]
  %1632 = phi i32 [ %1635, %1630 ], [ %1629, %1627 ]
  %1633 = getelementptr inbounds i32, ptr %9, i64 %1631
  %1634 = load i32, ptr %1633, align 4, !tbaa !5
  %1635 = mul nsw i32 %1634, %1632
  %1636 = add nsw i64 %1631, -1
  %1637 = trunc i64 %1631 to i32
  %1638 = icmp sgt i32 %1637, 0
  br i1 %1638, label %1630, label %1639, !llvm.loop !255

1639:                                             ; preds = %1630, %1621
  %1640 = phi i32 [ %1625, %1621 ], [ %1635, %1630 ]
  %1641 = and i64 %1590, 4294967295
  %1642 = getelementptr inbounds i32, ptr %6, i64 %1641
  %1643 = load i32, ptr %1642, align 4, !tbaa !5
  %1644 = mul nsw i32 %1643, %1640
  %1645 = add nsw i32 %1644, %1584
  %1646 = icmp sgt i64 %1582, 2
  %1647 = add nsw i64 %1583, -1
  %1648 = add i32 %1581, 1
  br i1 %1646, label %1580, label %1649, !llvm.loop !256

1649:                                             ; preds = %1639, %1576
  %1650 = phi i32 [ %1579, %1576 ], [ %1645, %1639 ]
  %1651 = sext i32 %1650 to i64
  %1652 = getelementptr inbounds i32, ptr %1239, i64 %1651
  %1653 = load i32, ptr %1652, align 4, !tbaa !5
  %1654 = load i8, ptr %1241, align 1, !tbaa !11
  %1655 = mul i32 %1653, %1653
  %1656 = trunc i32 %1655 to i8
  %1657 = add i8 %1654, %1656
  store i8 %1657, ptr %1241, align 1, !tbaa !11
  %1658 = fadd fast double %1578, 1.000000e+00
  %1659 = add nuw nsw i32 %1577, 1
  br i1 %1570, label %1660, label %1707

1660:                                             ; preds = %1649
  %1661 = load i32, ptr %4, align 4, !tbaa !5
  %1662 = load i32, ptr %12, align 4, !tbaa !5
  %1663 = add nsw i32 %1662, -1
  %1664 = icmp slt i32 %1661, %1663
  br i1 %1664, label %1684, label %1665

1665:                                             ; preds = %1660
  %1666 = icmp eq i32 %1661, %1663
  br i1 %1666, label %1667, label %1700

1667:                                             ; preds = %1665
  store i32 0, ptr %4, align 4, !tbaa !5
  %1668 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1668, ptr %6, align 4, !tbaa !5
  br i1 %1575, label %1707, label %1669

1669:                                             ; preds = %1667, %1694
  %1670 = phi i64 [ %1698, %1694 ], [ 1, %1667 ]
  %1671 = getelementptr inbounds i32, ptr %4, i64 %1670
  %1672 = load i32, ptr %1671, align 4, !tbaa !5
  %1673 = getelementptr inbounds i32, ptr %12, i64 %1670
  %1674 = load i32, ptr %1673, align 4, !tbaa !5
  %1675 = add nsw i32 %1674, -1
  %1676 = icmp slt i32 %1672, %1675
  br i1 %1676, label %1677, label %1692

1677:                                             ; preds = %1669
  br i1 %1664, label %1684, label %1678

1678:                                             ; preds = %1677
  %1679 = getelementptr inbounds i32, ptr %7, i64 %1670
  %1680 = load i32, ptr %1679, align 4, !tbaa !5
  %1681 = getelementptr inbounds i32, ptr %6, i64 %1670
  %1682 = load i32, ptr %1681, align 4, !tbaa !5
  %1683 = add nsw i32 %1682, %1680
  store i32 %1683, ptr %1681, align 4, !tbaa !5
  br label %1702

1684:                                             ; preds = %1660, %1677
  %1685 = phi i32 [ %1672, %1677 ], [ %1661, %1660 ]
  %1686 = phi ptr [ %1671, %1677 ], [ %4, %1660 ]
  %1687 = phi i64 [ %1670, %1677 ], [ 0, %1660 ]
  %1688 = add nsw i32 %1685, 1
  store i32 %1688, ptr %1686, align 4, !tbaa !5
  %1689 = getelementptr inbounds i32, ptr %7, i64 %1687
  %1690 = load i32, ptr %1689, align 4, !tbaa !5
  %1691 = getelementptr inbounds i32, ptr %6, i64 %1687
  br label %1702

1692:                                             ; preds = %1669
  %1693 = icmp eq i32 %1672, %1675
  br i1 %1693, label %1694, label %1700

1694:                                             ; preds = %1692
  store i32 0, ptr %1671, align 4, !tbaa !5
  %1695 = getelementptr inbounds i32, ptr %8, i64 %1670
  %1696 = load i32, ptr %1695, align 4, !tbaa !5
  %1697 = getelementptr inbounds i32, ptr %6, i64 %1670
  store i32 %1696, ptr %1697, align 4, !tbaa !5
  %1698 = add nuw nsw i64 %1670, 1
  %1699 = icmp eq i64 %1698, %1573
  br i1 %1699, label %1707, label %1669, !llvm.loop !257

1700:                                             ; preds = %1665, %1692
  %1701 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

1702:                                             ; preds = %1678, %1684
  %1703 = phi ptr [ %1691, %1684 ], [ %1671, %1678 ]
  %1704 = phi i32 [ %1690, %1684 ], [ 1, %1678 ]
  %1705 = load i32, ptr %1703, align 4, !tbaa !5
  %1706 = add nsw i32 %1705, %1704
  store i32 %1706, ptr %1703, align 4, !tbaa !5
  br label %1707

1707:                                             ; preds = %1694, %1702, %1667, %1649
  %1708 = icmp eq i32 %1659, %5
  br i1 %1708, label %5500, label %1576, !llvm.loop !258

1709:                                             ; preds = %1559, %1845
  %1710 = phi i32 [ 0, %1559 ], [ %1794, %1845 ]
  %1711 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1560, label %1712, label %1781

1712:                                             ; preds = %1709, %1771
  %1713 = phi i32 [ %1780, %1771 ], [ 0, %1709 ]
  %1714 = phi i64 [ %1722, %1771 ], [ %1564, %1709 ]
  %1715 = phi i64 [ %1779, %1771 ], [ %1563, %1709 ]
  %1716 = phi i32 [ %1777, %1771 ], [ %1711, %1709 ]
  %1717 = sub i32 %1562, %1713
  %1718 = tail call i32 @llvm.smin.i32(i32 %1717, i32 0)
  %1719 = sub i32 %1717, %1718
  %1720 = zext i32 %1719 to i64
  %1721 = add nuw nsw i64 %1720, 1
  %1722 = add nsw i64 %1714, -1
  %1723 = icmp ult i32 %1719, 31
  br i1 %1723, label %1759, label %1724

1724:                                             ; preds = %1712
  %1725 = and i64 %1721, 8589934560
  %1726 = sub i64 %1715, %1725
  br label %1727

1727:                                             ; preds = %1727, %1724
  %1728 = phi i64 [ 0, %1724 ], [ %1751, %1727 ]
  %1729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1747, %1727 ]
  %1730 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1748, %1727 ]
  %1731 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1749, %1727 ]
  %1732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1750, %1727 ]
  %1733 = sub i64 %1715, %1728
  %1734 = getelementptr inbounds i32, ptr %11, i64 %1733
  %1735 = getelementptr inbounds i32, ptr %1734, i64 -7
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = getelementptr inbounds i32, ptr %1734, i64 -15
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !5
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1734, i64 -23
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !5
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = getelementptr inbounds i32, ptr %1734, i64 -31
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !5
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = mul <8 x i32> %1737, %1729
  %1748 = mul <8 x i32> %1740, %1730
  %1749 = mul <8 x i32> %1743, %1731
  %1750 = mul <8 x i32> %1746, %1732
  %1751 = add nuw i64 %1728, 32
  %1752 = icmp eq i64 %1751, %1725
  br i1 %1752, label %1753, label %1727, !llvm.loop !259

1753:                                             ; preds = %1727
  %1754 = mul <8 x i32> %1748, %1747
  %1755 = mul <8 x i32> %1749, %1754
  %1756 = mul <8 x i32> %1750, %1755
  %1757 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1756)
  %1758 = icmp eq i64 %1721, %1725
  br i1 %1758, label %1771, label %1759

1759:                                             ; preds = %1712, %1753
  %1760 = phi i64 [ %1715, %1712 ], [ %1726, %1753 ]
  %1761 = phi i32 [ 1, %1712 ], [ %1757, %1753 ]
  br label %1762

1762:                                             ; preds = %1759, %1762
  %1763 = phi i64 [ %1768, %1762 ], [ %1760, %1759 ]
  %1764 = phi i32 [ %1767, %1762 ], [ %1761, %1759 ]
  %1765 = getelementptr inbounds i32, ptr %11, i64 %1763
  %1766 = load i32, ptr %1765, align 4, !tbaa !5
  %1767 = mul nsw i32 %1766, %1764
  %1768 = add nsw i64 %1763, -1
  %1769 = trunc i64 %1763 to i32
  %1770 = icmp sgt i32 %1769, 0
  br i1 %1770, label %1762, label %1771, !llvm.loop !260

1771:                                             ; preds = %1762, %1753
  %1772 = phi i32 [ %1757, %1753 ], [ %1767, %1762 ]
  %1773 = and i64 %1722, 4294967295
  %1774 = getelementptr inbounds i32, ptr %6, i64 %1773
  %1775 = load i32, ptr %1774, align 4, !tbaa !5
  %1776 = mul nsw i32 %1775, %1772
  %1777 = add nsw i32 %1776, %1716
  %1778 = icmp sgt i64 %1714, 2
  %1779 = add nsw i64 %1715, -1
  %1780 = add i32 %1713, 1
  br i1 %1778, label %1712, label %1781, !llvm.loop !261

1781:                                             ; preds = %1771, %1709
  %1782 = phi i32 [ %1711, %1709 ], [ %1777, %1771 ]
  %1783 = icmp slt i32 %1782, %5
  br i1 %1783, label %1786, label %1784

1784:                                             ; preds = %1781
  %1785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

1786:                                             ; preds = %1781
  %1787 = sext i32 %1782 to i64
  %1788 = getelementptr inbounds i32, ptr %1239, i64 %1787
  %1789 = load i32, ptr %1788, align 4, !tbaa !5
  %1790 = load i8, ptr %1241, align 1, !tbaa !11
  %1791 = mul i32 %1789, %1789
  %1792 = trunc i32 %1791 to i8
  %1793 = add i8 %1790, %1792
  store i8 %1793, ptr %1241, align 1, !tbaa !11
  %1794 = add nuw nsw i32 %1710, 1
  br i1 %1561, label %1795, label %1845

1795:                                             ; preds = %1786
  %1796 = load i32, ptr %4, align 4, !tbaa !5
  %1797 = load i32, ptr %12, align 4, !tbaa !5
  %1798 = add nsw i32 %1797, -1
  %1799 = icmp slt i32 %1796, %1798
  br i1 %1799, label %1822, label %1800

1800:                                             ; preds = %1795
  %1801 = icmp eq i32 %1796, %1798
  br i1 %1801, label %1802, label %1838

1802:                                             ; preds = %1800
  store i32 0, ptr %4, align 4, !tbaa !5
  %1803 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1803, ptr %6, align 4, !tbaa !5
  br i1 %1566, label %1845, label %1804

1804:                                             ; preds = %1802, %1832
  %1805 = phi i64 [ %1836, %1832 ], [ 1, %1802 ]
  %1806 = getelementptr inbounds i32, ptr %4, i64 %1805
  %1807 = load i32, ptr %1806, align 4, !tbaa !5
  %1808 = getelementptr inbounds i32, ptr %12, i64 %1805
  %1809 = load i32, ptr %1808, align 4, !tbaa !5
  %1810 = add nsw i32 %1809, -1
  %1811 = icmp slt i32 %1807, %1810
  br i1 %1811, label %1812, label %1830

1812:                                             ; preds = %1804
  br i1 %1799, label %1822, label %1813

1813:                                             ; preds = %1812
  %1814 = shl i64 %1805, 32
  %1815 = add i64 %1814, -4294967296
  %1816 = ashr exact i64 %1815, 32
  %1817 = getelementptr inbounds i32, ptr %7, i64 %1816
  %1818 = load i32, ptr %1817, align 4, !tbaa !5
  %1819 = getelementptr inbounds i32, ptr %6, i64 %1805
  %1820 = load i32, ptr %1819, align 4, !tbaa !5
  %1821 = add nsw i32 %1820, %1818
  store i32 %1821, ptr %1819, align 4, !tbaa !5
  br label %1840

1822:                                             ; preds = %1795, %1812
  %1823 = phi i32 [ %1807, %1812 ], [ %1796, %1795 ]
  %1824 = phi ptr [ %1806, %1812 ], [ %4, %1795 ]
  %1825 = phi i64 [ %1805, %1812 ], [ 0, %1795 ]
  %1826 = add nsw i32 %1823, 1
  store i32 %1826, ptr %1824, align 4, !tbaa !5
  %1827 = getelementptr inbounds i32, ptr %7, i64 %1825
  %1828 = load i32, ptr %1827, align 4, !tbaa !5
  %1829 = getelementptr inbounds i32, ptr %6, i64 %1825
  br label %1840

1830:                                             ; preds = %1804
  %1831 = icmp eq i32 %1807, %1810
  br i1 %1831, label %1832, label %1838

1832:                                             ; preds = %1830
  store i32 0, ptr %1806, align 4, !tbaa !5
  %1833 = getelementptr inbounds i32, ptr %8, i64 %1805
  %1834 = load i32, ptr %1833, align 4, !tbaa !5
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1805
  store i32 %1834, ptr %1835, align 4, !tbaa !5
  %1836 = add nuw nsw i64 %1805, 1
  %1837 = icmp eq i64 %1836, %1564
  br i1 %1837, label %1845, label %1804, !llvm.loop !262

1838:                                             ; preds = %1800, %1830
  %1839 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

1840:                                             ; preds = %1813, %1822
  %1841 = phi ptr [ %1829, %1822 ], [ %1806, %1813 ]
  %1842 = phi i32 [ %1828, %1822 ], [ 1, %1813 ]
  %1843 = load i32, ptr %1841, align 4, !tbaa !5
  %1844 = add nsw i32 %1843, %1842
  store i32 %1844, ptr %1841, align 4, !tbaa !5
  br label %1845

1845:                                             ; preds = %1832, %1840, %1802, %1786
  %1846 = icmp eq i32 %1794, %5
  br i1 %1846, label %5500, label %1709, !llvm.loop !263

1847:                                             ; preds = %1247
  %1848 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 341, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

1849:                                             ; preds = %18
  %1850 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1851 = load ptr, ptr %1850, align 8, !tbaa !9
  %1852 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1853 = load ptr, ptr %1852, align 8, !tbaa !9
  store i16 0, ptr %1853, align 2, !tbaa !78
  %1854 = icmp eq i32 %13, 0
  br i1 %1854, label %1855, label %1859

1855:                                             ; preds = %1849
  %1856 = load i32, ptr %1851, align 4, !tbaa !5
  %1857 = mul i32 %1856, %1856
  %1858 = trunc i32 %1857 to i16
  store i16 %1858, ptr %1853, align 2, !tbaa !78
  br label %5500

1859:                                             ; preds = %1849
  switch i32 %1, label %2459 [
    i32 1, label %1860
    i32 0, label %2165
  ]

1860:                                             ; preds = %1859
  %1861 = getelementptr inbounds i32, ptr %3, i64 %19
  %1862 = load i32, ptr %1861, align 4, !tbaa !5
  %1863 = icmp eq i32 %1862, 0
  %1864 = icmp sgt i32 %5, 0
  br i1 %1863, label %1874, label %1865

1865:                                             ; preds = %1860
  br i1 %1864, label %1866, label %5500

1866:                                             ; preds = %1865
  %1867 = icmp sgt i32 %13, 1
  %1868 = icmp sgt i32 %13, 0
  %1869 = add i32 %13, -2
  %1870 = zext i32 %1869 to i64
  %1871 = zext i32 %13 to i64
  %1872 = add nuw i32 %5, 1
  %1873 = icmp eq i32 %13, 1
  br label %2023

1874:                                             ; preds = %1860
  br i1 %1864, label %1875, label %5500

1875:                                             ; preds = %1874
  %1876 = icmp sgt i32 %13, 1
  %1877 = icmp sgt i32 %13, 0
  %1878 = add i32 %13, -2
  %1879 = zext i32 %1878 to i64
  %1880 = zext i32 %13 to i64
  %1881 = add nuw i32 %5, 1
  %1882 = icmp eq i32 %13, 1
  br label %1883

1883:                                             ; preds = %1875, %2021
  %1884 = phi i16 [ 0, %1875 ], [ %1971, %2021 ]
  %1885 = phi i32 [ 0, %1875 ], [ %1973, %2021 ]
  %1886 = phi double [ 0.000000e+00, %1875 ], [ %1972, %2021 ]
  %1887 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1876, label %1888, label %1957

1888:                                             ; preds = %1883, %1947
  %1889 = phi i32 [ %1956, %1947 ], [ 0, %1883 ]
  %1890 = phi i64 [ %1898, %1947 ], [ %1880, %1883 ]
  %1891 = phi i64 [ %1955, %1947 ], [ %1879, %1883 ]
  %1892 = phi i32 [ %1953, %1947 ], [ %1887, %1883 ]
  %1893 = sub i32 %1878, %1889
  %1894 = tail call i32 @llvm.smin.i32(i32 %1893, i32 0)
  %1895 = sub i32 %1893, %1894
  %1896 = zext i32 %1895 to i64
  %1897 = add nuw nsw i64 %1896, 1
  %1898 = add nsw i64 %1890, -1
  %1899 = icmp ult i32 %1895, 31
  br i1 %1899, label %1935, label %1900

1900:                                             ; preds = %1888
  %1901 = and i64 %1897, 8589934560
  %1902 = sub i64 %1891, %1901
  br label %1903

1903:                                             ; preds = %1903, %1900
  %1904 = phi i64 [ 0, %1900 ], [ %1927, %1903 ]
  %1905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1923, %1903 ]
  %1906 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1924, %1903 ]
  %1907 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1925, %1903 ]
  %1908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1926, %1903 ]
  %1909 = sub i64 %1891, %1904
  %1910 = getelementptr inbounds i32, ptr %9, i64 %1909
  %1911 = getelementptr inbounds i32, ptr %1910, i64 -7
  %1912 = load <8 x i32>, ptr %1911, align 4, !tbaa !5
  %1913 = shufflevector <8 x i32> %1912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1914 = getelementptr inbounds i32, ptr %1910, i64 -15
  %1915 = load <8 x i32>, ptr %1914, align 4, !tbaa !5
  %1916 = shufflevector <8 x i32> %1915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1917 = getelementptr inbounds i32, ptr %1910, i64 -23
  %1918 = load <8 x i32>, ptr %1917, align 4, !tbaa !5
  %1919 = shufflevector <8 x i32> %1918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1920 = getelementptr inbounds i32, ptr %1910, i64 -31
  %1921 = load <8 x i32>, ptr %1920, align 4, !tbaa !5
  %1922 = shufflevector <8 x i32> %1921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1923 = mul <8 x i32> %1913, %1905
  %1924 = mul <8 x i32> %1916, %1906
  %1925 = mul <8 x i32> %1919, %1907
  %1926 = mul <8 x i32> %1922, %1908
  %1927 = add nuw i64 %1904, 32
  %1928 = icmp eq i64 %1927, %1901
  br i1 %1928, label %1929, label %1903, !llvm.loop !264

1929:                                             ; preds = %1903
  %1930 = mul <8 x i32> %1924, %1923
  %1931 = mul <8 x i32> %1925, %1930
  %1932 = mul <8 x i32> %1926, %1931
  %1933 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1932)
  %1934 = icmp eq i64 %1897, %1901
  br i1 %1934, label %1947, label %1935

1935:                                             ; preds = %1888, %1929
  %1936 = phi i64 [ %1891, %1888 ], [ %1902, %1929 ]
  %1937 = phi i32 [ 1, %1888 ], [ %1933, %1929 ]
  br label %1938

1938:                                             ; preds = %1935, %1938
  %1939 = phi i64 [ %1944, %1938 ], [ %1936, %1935 ]
  %1940 = phi i32 [ %1943, %1938 ], [ %1937, %1935 ]
  %1941 = getelementptr inbounds i32, ptr %9, i64 %1939
  %1942 = load i32, ptr %1941, align 4, !tbaa !5
  %1943 = mul nsw i32 %1942, %1940
  %1944 = add nsw i64 %1939, -1
  %1945 = trunc i64 %1939 to i32
  %1946 = icmp sgt i32 %1945, 0
  br i1 %1946, label %1938, label %1947, !llvm.loop !265

1947:                                             ; preds = %1938, %1929
  %1948 = phi i32 [ %1933, %1929 ], [ %1943, %1938 ]
  %1949 = and i64 %1898, 4294967295
  %1950 = getelementptr inbounds i32, ptr %6, i64 %1949
  %1951 = load i32, ptr %1950, align 4, !tbaa !5
  %1952 = mul nsw i32 %1951, %1948
  %1953 = add nsw i32 %1952, %1892
  %1954 = icmp sgt i64 %1890, 2
  %1955 = add nsw i64 %1891, -1
  %1956 = add i32 %1889, 1
  br i1 %1954, label %1888, label %1957, !llvm.loop !266

1957:                                             ; preds = %1947, %1883
  %1958 = phi i32 [ %1887, %1883 ], [ %1953, %1947 ]
  %1959 = sext i32 %1958 to i64
  %1960 = getelementptr inbounds double, ptr %2, i64 %1959
  %1961 = load double, ptr %1960, align 8, !tbaa !18
  %1962 = getelementptr inbounds i32, ptr %1851, i64 %1959
  %1963 = load i32, ptr %1962, align 4, !tbaa !5
  %1964 = sitofp i16 %1884 to double
  %1965 = shl i32 %1963, 16
  %1966 = ashr exact i32 %1965, 16
  %1967 = sitofp i32 %1966 to double
  %1968 = fmul fast double %1961, %1967
  %1969 = fmul fast double %1968, %1968
  %1970 = fadd fast double %1969, %1964
  %1971 = fptosi double %1970 to i16
  %1972 = fadd fast double %1961, %1886
  %1973 = add nuw nsw i32 %1885, 1
  br i1 %1877, label %1974, label %2021

1974:                                             ; preds = %1957
  %1975 = load i32, ptr %4, align 4, !tbaa !5
  %1976 = load i32, ptr %12, align 4, !tbaa !5
  %1977 = add nsw i32 %1976, -1
  %1978 = icmp slt i32 %1975, %1977
  br i1 %1978, label %1998, label %1979

1979:                                             ; preds = %1974
  %1980 = icmp eq i32 %1975, %1977
  br i1 %1980, label %1981, label %2014

1981:                                             ; preds = %1979
  store i32 0, ptr %4, align 4, !tbaa !5
  %1982 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1982, ptr %6, align 4, !tbaa !5
  br i1 %1882, label %2021, label %1983

1983:                                             ; preds = %1981, %2008
  %1984 = phi i64 [ %2012, %2008 ], [ 1, %1981 ]
  %1985 = getelementptr inbounds i32, ptr %4, i64 %1984
  %1986 = load i32, ptr %1985, align 4, !tbaa !5
  %1987 = getelementptr inbounds i32, ptr %12, i64 %1984
  %1988 = load i32, ptr %1987, align 4, !tbaa !5
  %1989 = add nsw i32 %1988, -1
  %1990 = icmp slt i32 %1986, %1989
  br i1 %1990, label %1991, label %2006

1991:                                             ; preds = %1983
  br i1 %1978, label %1998, label %1992

1992:                                             ; preds = %1991
  %1993 = getelementptr inbounds i32, ptr %7, i64 %1984
  %1994 = load i32, ptr %1993, align 4, !tbaa !5
  %1995 = getelementptr inbounds i32, ptr %6, i64 %1984
  %1996 = load i32, ptr %1995, align 4, !tbaa !5
  %1997 = add nsw i32 %1996, %1994
  store i32 %1997, ptr %1995, align 4, !tbaa !5
  br label %2016

1998:                                             ; preds = %1974, %1991
  %1999 = phi i32 [ %1986, %1991 ], [ %1975, %1974 ]
  %2000 = phi ptr [ %1985, %1991 ], [ %4, %1974 ]
  %2001 = phi i64 [ %1984, %1991 ], [ 0, %1974 ]
  %2002 = add nsw i32 %1999, 1
  store i32 %2002, ptr %2000, align 4, !tbaa !5
  %2003 = getelementptr inbounds i32, ptr %7, i64 %2001
  %2004 = load i32, ptr %2003, align 4, !tbaa !5
  %2005 = getelementptr inbounds i32, ptr %6, i64 %2001
  br label %2016

2006:                                             ; preds = %1983
  %2007 = icmp eq i32 %1986, %1989
  br i1 %2007, label %2008, label %2014

2008:                                             ; preds = %2006
  store i32 0, ptr %1985, align 4, !tbaa !5
  %2009 = getelementptr inbounds i32, ptr %8, i64 %1984
  %2010 = load i32, ptr %2009, align 4, !tbaa !5
  %2011 = getelementptr inbounds i32, ptr %6, i64 %1984
  store i32 %2010, ptr %2011, align 4, !tbaa !5
  %2012 = add nuw nsw i64 %1984, 1
  %2013 = icmp eq i64 %2012, %1880
  br i1 %2013, label %2021, label %1983, !llvm.loop !267

2014:                                             ; preds = %1979, %2006
  store i16 %1971, ptr %1853, align 2, !tbaa !78
  %2015 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 346, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

2016:                                             ; preds = %1992, %1998
  %2017 = phi ptr [ %2005, %1998 ], [ %1985, %1992 ]
  %2018 = phi i32 [ %2004, %1998 ], [ 1, %1992 ]
  %2019 = load i32, ptr %2017, align 4, !tbaa !5
  %2020 = add nsw i32 %2019, %2018
  store i32 %2020, ptr %2017, align 4, !tbaa !5
  br label %2021

2021:                                             ; preds = %2008, %2016, %1981, %1957
  %2022 = icmp eq i32 %1973, %5
  br i1 %2022, label %5492, label %1883, !llvm.loop !268

2023:                                             ; preds = %1866, %2163
  %2024 = phi i16 [ 0, %1866 ], [ %2111, %2163 ]
  %2025 = phi i32 [ 0, %1866 ], [ %2112, %2163 ]
  %2026 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1867, label %2027, label %2096

2027:                                             ; preds = %2023, %2086
  %2028 = phi i32 [ %2095, %2086 ], [ 0, %2023 ]
  %2029 = phi i64 [ %2037, %2086 ], [ %1871, %2023 ]
  %2030 = phi i64 [ %2094, %2086 ], [ %1870, %2023 ]
  %2031 = phi i32 [ %2092, %2086 ], [ %2026, %2023 ]
  %2032 = sub i32 %1869, %2028
  %2033 = tail call i32 @llvm.smin.i32(i32 %2032, i32 0)
  %2034 = sub i32 %2032, %2033
  %2035 = zext i32 %2034 to i64
  %2036 = add nuw nsw i64 %2035, 1
  %2037 = add nsw i64 %2029, -1
  %2038 = icmp ult i32 %2034, 31
  br i1 %2038, label %2074, label %2039

2039:                                             ; preds = %2027
  %2040 = and i64 %2036, 8589934560
  %2041 = sub i64 %2030, %2040
  br label %2042

2042:                                             ; preds = %2042, %2039
  %2043 = phi i64 [ 0, %2039 ], [ %2066, %2042 ]
  %2044 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2062, %2042 ]
  %2045 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2063, %2042 ]
  %2046 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2064, %2042 ]
  %2047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2065, %2042 ]
  %2048 = sub i64 %2030, %2043
  %2049 = getelementptr inbounds i32, ptr %11, i64 %2048
  %2050 = getelementptr inbounds i32, ptr %2049, i64 -7
  %2051 = load <8 x i32>, ptr %2050, align 4, !tbaa !5
  %2052 = shufflevector <8 x i32> %2051, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2053 = getelementptr inbounds i32, ptr %2049, i64 -15
  %2054 = load <8 x i32>, ptr %2053, align 4, !tbaa !5
  %2055 = shufflevector <8 x i32> %2054, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2056 = getelementptr inbounds i32, ptr %2049, i64 -23
  %2057 = load <8 x i32>, ptr %2056, align 4, !tbaa !5
  %2058 = shufflevector <8 x i32> %2057, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2059 = getelementptr inbounds i32, ptr %2049, i64 -31
  %2060 = load <8 x i32>, ptr %2059, align 4, !tbaa !5
  %2061 = shufflevector <8 x i32> %2060, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2062 = mul <8 x i32> %2052, %2044
  %2063 = mul <8 x i32> %2055, %2045
  %2064 = mul <8 x i32> %2058, %2046
  %2065 = mul <8 x i32> %2061, %2047
  %2066 = add nuw i64 %2043, 32
  %2067 = icmp eq i64 %2066, %2040
  br i1 %2067, label %2068, label %2042, !llvm.loop !269

2068:                                             ; preds = %2042
  %2069 = mul <8 x i32> %2063, %2062
  %2070 = mul <8 x i32> %2064, %2069
  %2071 = mul <8 x i32> %2065, %2070
  %2072 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2071)
  %2073 = icmp eq i64 %2036, %2040
  br i1 %2073, label %2086, label %2074

2074:                                             ; preds = %2027, %2068
  %2075 = phi i64 [ %2030, %2027 ], [ %2041, %2068 ]
  %2076 = phi i32 [ 1, %2027 ], [ %2072, %2068 ]
  br label %2077

2077:                                             ; preds = %2074, %2077
  %2078 = phi i64 [ %2083, %2077 ], [ %2075, %2074 ]
  %2079 = phi i32 [ %2082, %2077 ], [ %2076, %2074 ]
  %2080 = getelementptr inbounds i32, ptr %11, i64 %2078
  %2081 = load i32, ptr %2080, align 4, !tbaa !5
  %2082 = mul nsw i32 %2081, %2079
  %2083 = add nsw i64 %2078, -1
  %2084 = trunc i64 %2078 to i32
  %2085 = icmp sgt i32 %2084, 0
  br i1 %2085, label %2077, label %2086, !llvm.loop !270

2086:                                             ; preds = %2077, %2068
  %2087 = phi i32 [ %2072, %2068 ], [ %2082, %2077 ]
  %2088 = and i64 %2037, 4294967295
  %2089 = getelementptr inbounds i32, ptr %6, i64 %2088
  %2090 = load i32, ptr %2089, align 4, !tbaa !5
  %2091 = mul nsw i32 %2090, %2087
  %2092 = add nsw i32 %2091, %2031
  %2093 = icmp sgt i64 %2029, 2
  %2094 = add nsw i64 %2030, -1
  %2095 = add i32 %2028, 1
  br i1 %2093, label %2027, label %2096, !llvm.loop !271

2096:                                             ; preds = %2086, %2023
  %2097 = phi i32 [ %2026, %2023 ], [ %2092, %2086 ]
  %2098 = icmp slt i32 %2097, %5
  br i1 %2098, label %2101, label %2099

2099:                                             ; preds = %2096
  %2100 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 346, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

2101:                                             ; preds = %2096
  %2102 = sext i32 %2097 to i64
  %2103 = getelementptr inbounds i32, ptr %1851, i64 %2102
  %2104 = load i32, ptr %2103, align 4, !tbaa !5
  %2105 = sitofp i16 %2024 to double
  %2106 = shl i32 %2104, 16
  %2107 = ashr exact i32 %2106, 16
  %2108 = sitofp i32 %2107 to double
  %2109 = fmul fast double %2108, %2108
  %2110 = fadd fast double %2109, %2105
  %2111 = fptosi double %2110 to i16
  store i16 %2111, ptr %1853, align 2, !tbaa !78
  %2112 = add nuw nsw i32 %2025, 1
  br i1 %1868, label %2113, label %2163

2113:                                             ; preds = %2101
  %2114 = load i32, ptr %4, align 4, !tbaa !5
  %2115 = load i32, ptr %12, align 4, !tbaa !5
  %2116 = add nsw i32 %2115, -1
  %2117 = icmp slt i32 %2114, %2116
  br i1 %2117, label %2140, label %2118

2118:                                             ; preds = %2113
  %2119 = icmp eq i32 %2114, %2116
  br i1 %2119, label %2120, label %2156

2120:                                             ; preds = %2118
  store i32 0, ptr %4, align 4, !tbaa !5
  %2121 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2121, ptr %6, align 4, !tbaa !5
  br i1 %1873, label %2163, label %2122

2122:                                             ; preds = %2120, %2150
  %2123 = phi i64 [ %2154, %2150 ], [ 1, %2120 ]
  %2124 = getelementptr inbounds i32, ptr %4, i64 %2123
  %2125 = load i32, ptr %2124, align 4, !tbaa !5
  %2126 = getelementptr inbounds i32, ptr %12, i64 %2123
  %2127 = load i32, ptr %2126, align 4, !tbaa !5
  %2128 = add nsw i32 %2127, -1
  %2129 = icmp slt i32 %2125, %2128
  br i1 %2129, label %2130, label %2148

2130:                                             ; preds = %2122
  br i1 %2117, label %2140, label %2131

2131:                                             ; preds = %2130
  %2132 = shl i64 %2123, 32
  %2133 = add i64 %2132, -4294967296
  %2134 = ashr exact i64 %2133, 32
  %2135 = getelementptr inbounds i32, ptr %7, i64 %2134
  %2136 = load i32, ptr %2135, align 4, !tbaa !5
  %2137 = getelementptr inbounds i32, ptr %6, i64 %2123
  %2138 = load i32, ptr %2137, align 4, !tbaa !5
  %2139 = add nsw i32 %2138, %2136
  store i32 %2139, ptr %2137, align 4, !tbaa !5
  br label %2158

2140:                                             ; preds = %2113, %2130
  %2141 = phi i32 [ %2125, %2130 ], [ %2114, %2113 ]
  %2142 = phi ptr [ %2124, %2130 ], [ %4, %2113 ]
  %2143 = phi i64 [ %2123, %2130 ], [ 0, %2113 ]
  %2144 = add nsw i32 %2141, 1
  store i32 %2144, ptr %2142, align 4, !tbaa !5
  %2145 = getelementptr inbounds i32, ptr %7, i64 %2143
  %2146 = load i32, ptr %2145, align 4, !tbaa !5
  %2147 = getelementptr inbounds i32, ptr %6, i64 %2143
  br label %2158

2148:                                             ; preds = %2122
  %2149 = icmp eq i32 %2125, %2128
  br i1 %2149, label %2150, label %2156

2150:                                             ; preds = %2148
  store i32 0, ptr %2124, align 4, !tbaa !5
  %2151 = getelementptr inbounds i32, ptr %8, i64 %2123
  %2152 = load i32, ptr %2151, align 4, !tbaa !5
  %2153 = getelementptr inbounds i32, ptr %6, i64 %2123
  store i32 %2152, ptr %2153, align 4, !tbaa !5
  %2154 = add nuw nsw i64 %2123, 1
  %2155 = icmp eq i64 %2154, %1871
  br i1 %2155, label %2163, label %2122, !llvm.loop !272

2156:                                             ; preds = %2118, %2148
  %2157 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 346, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

2158:                                             ; preds = %2131, %2140
  %2159 = phi ptr [ %2147, %2140 ], [ %2124, %2131 ]
  %2160 = phi i32 [ %2146, %2140 ], [ 1, %2131 ]
  %2161 = load i32, ptr %2159, align 4, !tbaa !5
  %2162 = add nsw i32 %2161, %2160
  store i32 %2162, ptr %2159, align 4, !tbaa !5
  br label %2163

2163:                                             ; preds = %2150, %2158, %2120, %2101
  %2164 = icmp eq i32 %2112, %5
  br i1 %2164, label %5500, label %2023, !llvm.loop !273

2165:                                             ; preds = %1859
  %2166 = getelementptr inbounds i32, ptr %3, i64 %19
  %2167 = load i32, ptr %2166, align 4, !tbaa !5
  %2168 = icmp eq i32 %2167, 0
  %2169 = icmp sgt i32 %5, 0
  br i1 %2168, label %2179, label %2170

2170:                                             ; preds = %2165
  br i1 %2169, label %2171, label %5500

2171:                                             ; preds = %2170
  %2172 = icmp sgt i32 %13, 1
  %2173 = icmp sgt i32 %13, 0
  %2174 = add i32 %13, -2
  %2175 = zext i32 %2174 to i64
  %2176 = zext i32 %13 to i64
  %2177 = add nuw i32 %5, 1
  %2178 = icmp eq i32 %13, 1
  br label %2321

2179:                                             ; preds = %2165
  br i1 %2169, label %2180, label %5500

2180:                                             ; preds = %2179
  %2181 = icmp sgt i32 %13, 1
  %2182 = icmp sgt i32 %13, 0
  %2183 = add i32 %13, -2
  %2184 = zext i32 %2183 to i64
  %2185 = zext i32 %13 to i64
  %2186 = add nuw i32 %5, 1
  %2187 = icmp eq i32 %13, 1
  br label %2188

2188:                                             ; preds = %2180, %2319
  %2189 = phi i16 [ 0, %2180 ], [ %2269, %2319 ]
  %2190 = phi i32 [ 0, %2180 ], [ %2271, %2319 ]
  %2191 = phi double [ 0.000000e+00, %2180 ], [ %2270, %2319 ]
  %2192 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2181, label %2193, label %2262

2193:                                             ; preds = %2188, %2252
  %2194 = phi i32 [ %2261, %2252 ], [ 0, %2188 ]
  %2195 = phi i64 [ %2203, %2252 ], [ %2185, %2188 ]
  %2196 = phi i64 [ %2260, %2252 ], [ %2184, %2188 ]
  %2197 = phi i32 [ %2258, %2252 ], [ %2192, %2188 ]
  %2198 = sub i32 %2183, %2194
  %2199 = tail call i32 @llvm.smin.i32(i32 %2198, i32 0)
  %2200 = sub i32 %2198, %2199
  %2201 = zext i32 %2200 to i64
  %2202 = add nuw nsw i64 %2201, 1
  %2203 = add nsw i64 %2195, -1
  %2204 = icmp ult i32 %2200, 31
  br i1 %2204, label %2240, label %2205

2205:                                             ; preds = %2193
  %2206 = and i64 %2202, 8589934560
  %2207 = sub i64 %2196, %2206
  br label %2208

2208:                                             ; preds = %2208, %2205
  %2209 = phi i64 [ 0, %2205 ], [ %2232, %2208 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2228, %2208 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2229, %2208 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2230, %2208 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2231, %2208 ]
  %2214 = sub i64 %2196, %2209
  %2215 = getelementptr inbounds i32, ptr %9, i64 %2214
  %2216 = getelementptr inbounds i32, ptr %2215, i64 -7
  %2217 = load <8 x i32>, ptr %2216, align 4, !tbaa !5
  %2218 = shufflevector <8 x i32> %2217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2219 = getelementptr inbounds i32, ptr %2215, i64 -15
  %2220 = load <8 x i32>, ptr %2219, align 4, !tbaa !5
  %2221 = shufflevector <8 x i32> %2220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2222 = getelementptr inbounds i32, ptr %2215, i64 -23
  %2223 = load <8 x i32>, ptr %2222, align 4, !tbaa !5
  %2224 = shufflevector <8 x i32> %2223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2225 = getelementptr inbounds i32, ptr %2215, i64 -31
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !5
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = mul <8 x i32> %2218, %2210
  %2229 = mul <8 x i32> %2221, %2211
  %2230 = mul <8 x i32> %2224, %2212
  %2231 = mul <8 x i32> %2227, %2213
  %2232 = add nuw i64 %2209, 32
  %2233 = icmp eq i64 %2232, %2206
  br i1 %2233, label %2234, label %2208, !llvm.loop !274

2234:                                             ; preds = %2208
  %2235 = mul <8 x i32> %2229, %2228
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = mul <8 x i32> %2231, %2236
  %2238 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2237)
  %2239 = icmp eq i64 %2202, %2206
  br i1 %2239, label %2252, label %2240

2240:                                             ; preds = %2193, %2234
  %2241 = phi i64 [ %2196, %2193 ], [ %2207, %2234 ]
  %2242 = phi i32 [ 1, %2193 ], [ %2238, %2234 ]
  br label %2243

2243:                                             ; preds = %2240, %2243
  %2244 = phi i64 [ %2249, %2243 ], [ %2241, %2240 ]
  %2245 = phi i32 [ %2248, %2243 ], [ %2242, %2240 ]
  %2246 = getelementptr inbounds i32, ptr %9, i64 %2244
  %2247 = load i32, ptr %2246, align 4, !tbaa !5
  %2248 = mul nsw i32 %2247, %2245
  %2249 = add nsw i64 %2244, -1
  %2250 = trunc i64 %2244 to i32
  %2251 = icmp sgt i32 %2250, 0
  br i1 %2251, label %2243, label %2252, !llvm.loop !275

2252:                                             ; preds = %2243, %2234
  %2253 = phi i32 [ %2238, %2234 ], [ %2248, %2243 ]
  %2254 = and i64 %2203, 4294967295
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !5
  %2257 = mul nsw i32 %2256, %2253
  %2258 = add nsw i32 %2257, %2197
  %2259 = icmp sgt i64 %2195, 2
  %2260 = add nsw i64 %2196, -1
  %2261 = add i32 %2194, 1
  br i1 %2259, label %2193, label %2262, !llvm.loop !276

2262:                                             ; preds = %2252, %2188
  %2263 = phi i32 [ %2192, %2188 ], [ %2258, %2252 ]
  %2264 = sext i32 %2263 to i64
  %2265 = getelementptr inbounds i32, ptr %1851, i64 %2264
  %2266 = load i32, ptr %2265, align 4, !tbaa !5
  %2267 = mul i32 %2266, %2266
  %2268 = trunc i32 %2267 to i16
  %2269 = add i16 %2189, %2268
  %2270 = fadd fast double %2191, 1.000000e+00
  %2271 = add nuw nsw i32 %2190, 1
  br i1 %2182, label %2272, label %2319

2272:                                             ; preds = %2262
  %2273 = load i32, ptr %4, align 4, !tbaa !5
  %2274 = load i32, ptr %12, align 4, !tbaa !5
  %2275 = add nsw i32 %2274, -1
  %2276 = icmp slt i32 %2273, %2275
  br i1 %2276, label %2296, label %2277

2277:                                             ; preds = %2272
  %2278 = icmp eq i32 %2273, %2275
  br i1 %2278, label %2279, label %2312

2279:                                             ; preds = %2277
  store i32 0, ptr %4, align 4, !tbaa !5
  %2280 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2280, ptr %6, align 4, !tbaa !5
  br i1 %2187, label %2319, label %2281

2281:                                             ; preds = %2279, %2306
  %2282 = phi i64 [ %2310, %2306 ], [ 1, %2279 ]
  %2283 = getelementptr inbounds i32, ptr %4, i64 %2282
  %2284 = load i32, ptr %2283, align 4, !tbaa !5
  %2285 = getelementptr inbounds i32, ptr %12, i64 %2282
  %2286 = load i32, ptr %2285, align 4, !tbaa !5
  %2287 = add nsw i32 %2286, -1
  %2288 = icmp slt i32 %2284, %2287
  br i1 %2288, label %2289, label %2304

2289:                                             ; preds = %2281
  br i1 %2276, label %2296, label %2290

2290:                                             ; preds = %2289
  %2291 = getelementptr inbounds i32, ptr %7, i64 %2282
  %2292 = load i32, ptr %2291, align 4, !tbaa !5
  %2293 = getelementptr inbounds i32, ptr %6, i64 %2282
  %2294 = load i32, ptr %2293, align 4, !tbaa !5
  %2295 = add nsw i32 %2294, %2292
  store i32 %2295, ptr %2293, align 4, !tbaa !5
  br label %2314

2296:                                             ; preds = %2272, %2289
  %2297 = phi i32 [ %2284, %2289 ], [ %2273, %2272 ]
  %2298 = phi ptr [ %2283, %2289 ], [ %4, %2272 ]
  %2299 = phi i64 [ %2282, %2289 ], [ 0, %2272 ]
  %2300 = add nsw i32 %2297, 1
  store i32 %2300, ptr %2298, align 4, !tbaa !5
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2302 = load i32, ptr %2301, align 4, !tbaa !5
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2299
  br label %2314

2304:                                             ; preds = %2281
  %2305 = icmp eq i32 %2284, %2287
  br i1 %2305, label %2306, label %2312

2306:                                             ; preds = %2304
  store i32 0, ptr %2283, align 4, !tbaa !5
  %2307 = getelementptr inbounds i32, ptr %8, i64 %2282
  %2308 = load i32, ptr %2307, align 4, !tbaa !5
  %2309 = getelementptr inbounds i32, ptr %6, i64 %2282
  store i32 %2308, ptr %2309, align 4, !tbaa !5
  %2310 = add nuw nsw i64 %2282, 1
  %2311 = icmp eq i64 %2310, %2185
  br i1 %2311, label %2319, label %2281, !llvm.loop !277

2312:                                             ; preds = %2277, %2304
  store i16 %2269, ptr %1853, align 2, !tbaa !78
  %2313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 346, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

2314:                                             ; preds = %2290, %2296
  %2315 = phi ptr [ %2303, %2296 ], [ %2283, %2290 ]
  %2316 = phi i32 [ %2302, %2296 ], [ 1, %2290 ]
  %2317 = load i32, ptr %2315, align 4, !tbaa !5
  %2318 = add nsw i32 %2317, %2316
  store i32 %2318, ptr %2315, align 4, !tbaa !5
  br label %2319

2319:                                             ; preds = %2306, %2314, %2279, %2262
  %2320 = icmp eq i32 %2271, %5
  br i1 %2320, label %5493, label %2188, !llvm.loop !278

2321:                                             ; preds = %2171, %2457
  %2322 = phi i16 [ 0, %2171 ], [ %2405, %2457 ]
  %2323 = phi i32 [ 0, %2171 ], [ %2406, %2457 ]
  %2324 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2172, label %2325, label %2394

2325:                                             ; preds = %2321, %2384
  %2326 = phi i32 [ %2393, %2384 ], [ 0, %2321 ]
  %2327 = phi i64 [ %2335, %2384 ], [ %2176, %2321 ]
  %2328 = phi i64 [ %2392, %2384 ], [ %2175, %2321 ]
  %2329 = phi i32 [ %2390, %2384 ], [ %2324, %2321 ]
  %2330 = sub i32 %2174, %2326
  %2331 = tail call i32 @llvm.smin.i32(i32 %2330, i32 0)
  %2332 = sub i32 %2330, %2331
  %2333 = zext i32 %2332 to i64
  %2334 = add nuw nsw i64 %2333, 1
  %2335 = add nsw i64 %2327, -1
  %2336 = icmp ult i32 %2332, 31
  br i1 %2336, label %2372, label %2337

2337:                                             ; preds = %2325
  %2338 = and i64 %2334, 8589934560
  %2339 = sub i64 %2328, %2338
  br label %2340

2340:                                             ; preds = %2340, %2337
  %2341 = phi i64 [ 0, %2337 ], [ %2364, %2340 ]
  %2342 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2360, %2340 ]
  %2343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2361, %2340 ]
  %2344 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2362, %2340 ]
  %2345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2363, %2340 ]
  %2346 = sub i64 %2328, %2341
  %2347 = getelementptr inbounds i32, ptr %11, i64 %2346
  %2348 = getelementptr inbounds i32, ptr %2347, i64 -7
  %2349 = load <8 x i32>, ptr %2348, align 4, !tbaa !5
  %2350 = shufflevector <8 x i32> %2349, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2351 = getelementptr inbounds i32, ptr %2347, i64 -15
  %2352 = load <8 x i32>, ptr %2351, align 4, !tbaa !5
  %2353 = shufflevector <8 x i32> %2352, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2354 = getelementptr inbounds i32, ptr %2347, i64 -23
  %2355 = load <8 x i32>, ptr %2354, align 4, !tbaa !5
  %2356 = shufflevector <8 x i32> %2355, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2357 = getelementptr inbounds i32, ptr %2347, i64 -31
  %2358 = load <8 x i32>, ptr %2357, align 4, !tbaa !5
  %2359 = shufflevector <8 x i32> %2358, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2360 = mul <8 x i32> %2350, %2342
  %2361 = mul <8 x i32> %2353, %2343
  %2362 = mul <8 x i32> %2356, %2344
  %2363 = mul <8 x i32> %2359, %2345
  %2364 = add nuw i64 %2341, 32
  %2365 = icmp eq i64 %2364, %2338
  br i1 %2365, label %2366, label %2340, !llvm.loop !279

2366:                                             ; preds = %2340
  %2367 = mul <8 x i32> %2361, %2360
  %2368 = mul <8 x i32> %2362, %2367
  %2369 = mul <8 x i32> %2363, %2368
  %2370 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2369)
  %2371 = icmp eq i64 %2334, %2338
  br i1 %2371, label %2384, label %2372

2372:                                             ; preds = %2325, %2366
  %2373 = phi i64 [ %2328, %2325 ], [ %2339, %2366 ]
  %2374 = phi i32 [ 1, %2325 ], [ %2370, %2366 ]
  br label %2375

2375:                                             ; preds = %2372, %2375
  %2376 = phi i64 [ %2381, %2375 ], [ %2373, %2372 ]
  %2377 = phi i32 [ %2380, %2375 ], [ %2374, %2372 ]
  %2378 = getelementptr inbounds i32, ptr %11, i64 %2376
  %2379 = load i32, ptr %2378, align 4, !tbaa !5
  %2380 = mul nsw i32 %2379, %2377
  %2381 = add nsw i64 %2376, -1
  %2382 = trunc i64 %2376 to i32
  %2383 = icmp sgt i32 %2382, 0
  br i1 %2383, label %2375, label %2384, !llvm.loop !280

2384:                                             ; preds = %2375, %2366
  %2385 = phi i32 [ %2370, %2366 ], [ %2380, %2375 ]
  %2386 = and i64 %2335, 4294967295
  %2387 = getelementptr inbounds i32, ptr %6, i64 %2386
  %2388 = load i32, ptr %2387, align 4, !tbaa !5
  %2389 = mul nsw i32 %2388, %2385
  %2390 = add nsw i32 %2389, %2329
  %2391 = icmp sgt i64 %2327, 2
  %2392 = add nsw i64 %2328, -1
  %2393 = add i32 %2326, 1
  br i1 %2391, label %2325, label %2394, !llvm.loop !281

2394:                                             ; preds = %2384, %2321
  %2395 = phi i32 [ %2324, %2321 ], [ %2390, %2384 ]
  %2396 = icmp slt i32 %2395, %5
  br i1 %2396, label %2399, label %2397

2397:                                             ; preds = %2394
  %2398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 346, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

2399:                                             ; preds = %2394
  %2400 = sext i32 %2395 to i64
  %2401 = getelementptr inbounds i32, ptr %1851, i64 %2400
  %2402 = load i32, ptr %2401, align 4, !tbaa !5
  %2403 = mul i32 %2402, %2402
  %2404 = trunc i32 %2403 to i16
  %2405 = add i16 %2322, %2404
  store i16 %2405, ptr %1853, align 2, !tbaa !78
  %2406 = add nuw nsw i32 %2323, 1
  br i1 %2173, label %2407, label %2457

2407:                                             ; preds = %2399
  %2408 = load i32, ptr %4, align 4, !tbaa !5
  %2409 = load i32, ptr %12, align 4, !tbaa !5
  %2410 = add nsw i32 %2409, -1
  %2411 = icmp slt i32 %2408, %2410
  br i1 %2411, label %2434, label %2412

2412:                                             ; preds = %2407
  %2413 = icmp eq i32 %2408, %2410
  br i1 %2413, label %2414, label %2450

2414:                                             ; preds = %2412
  store i32 0, ptr %4, align 4, !tbaa !5
  %2415 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2415, ptr %6, align 4, !tbaa !5
  br i1 %2178, label %2457, label %2416

2416:                                             ; preds = %2414, %2444
  %2417 = phi i64 [ %2448, %2444 ], [ 1, %2414 ]
  %2418 = getelementptr inbounds i32, ptr %4, i64 %2417
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = getelementptr inbounds i32, ptr %12, i64 %2417
  %2421 = load i32, ptr %2420, align 4, !tbaa !5
  %2422 = add nsw i32 %2421, -1
  %2423 = icmp slt i32 %2419, %2422
  br i1 %2423, label %2424, label %2442

2424:                                             ; preds = %2416
  br i1 %2411, label %2434, label %2425

2425:                                             ; preds = %2424
  %2426 = shl i64 %2417, 32
  %2427 = add i64 %2426, -4294967296
  %2428 = ashr exact i64 %2427, 32
  %2429 = getelementptr inbounds i32, ptr %7, i64 %2428
  %2430 = load i32, ptr %2429, align 4, !tbaa !5
  %2431 = getelementptr inbounds i32, ptr %6, i64 %2417
  %2432 = load i32, ptr %2431, align 4, !tbaa !5
  %2433 = add nsw i32 %2432, %2430
  store i32 %2433, ptr %2431, align 4, !tbaa !5
  br label %2452

2434:                                             ; preds = %2407, %2424
  %2435 = phi i32 [ %2419, %2424 ], [ %2408, %2407 ]
  %2436 = phi ptr [ %2418, %2424 ], [ %4, %2407 ]
  %2437 = phi i64 [ %2417, %2424 ], [ 0, %2407 ]
  %2438 = add nsw i32 %2435, 1
  store i32 %2438, ptr %2436, align 4, !tbaa !5
  %2439 = getelementptr inbounds i32, ptr %7, i64 %2437
  %2440 = load i32, ptr %2439, align 4, !tbaa !5
  %2441 = getelementptr inbounds i32, ptr %6, i64 %2437
  br label %2452

2442:                                             ; preds = %2416
  %2443 = icmp eq i32 %2419, %2422
  br i1 %2443, label %2444, label %2450

2444:                                             ; preds = %2442
  store i32 0, ptr %2418, align 4, !tbaa !5
  %2445 = getelementptr inbounds i32, ptr %8, i64 %2417
  %2446 = load i32, ptr %2445, align 4, !tbaa !5
  %2447 = getelementptr inbounds i32, ptr %6, i64 %2417
  store i32 %2446, ptr %2447, align 4, !tbaa !5
  %2448 = add nuw nsw i64 %2417, 1
  %2449 = icmp eq i64 %2448, %2176
  br i1 %2449, label %2457, label %2416, !llvm.loop !282

2450:                                             ; preds = %2412, %2442
  %2451 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 346, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

2452:                                             ; preds = %2425, %2434
  %2453 = phi ptr [ %2441, %2434 ], [ %2418, %2425 ]
  %2454 = phi i32 [ %2440, %2434 ], [ 1, %2425 ]
  %2455 = load i32, ptr %2453, align 4, !tbaa !5
  %2456 = add nsw i32 %2455, %2454
  store i32 %2456, ptr %2453, align 4, !tbaa !5
  br label %2457

2457:                                             ; preds = %2444, %2452, %2414, %2399
  %2458 = icmp eq i32 %2406, %5
  br i1 %2458, label %5500, label %2321, !llvm.loop !283

2459:                                             ; preds = %1859
  %2460 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 346, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

2461:                                             ; preds = %18
  %2462 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2463 = load ptr, ptr %2462, align 8, !tbaa !9
  %2464 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2465 = load ptr, ptr %2464, align 8, !tbaa !9
  store i32 0, ptr %2465, align 4, !tbaa !5
  %2466 = icmp eq i32 %13, 0
  br i1 %2466, label %2467, label %2470

2467:                                             ; preds = %2461
  %2468 = load i32, ptr %2463, align 4, !tbaa !5
  %2469 = mul nsw i32 %2468, %2468
  store i32 %2469, ptr %2465, align 4, !tbaa !5
  br label %5500

2470:                                             ; preds = %2461
  switch i32 %1, label %3064 [
    i32 1, label %2471
    i32 0, label %2772
  ]

2471:                                             ; preds = %2470
  %2472 = getelementptr inbounds i32, ptr %3, i64 %19
  %2473 = load i32, ptr %2472, align 4, !tbaa !5
  %2474 = icmp eq i32 %2473, 0
  %2475 = icmp sgt i32 %5, 0
  br i1 %2474, label %2485, label %2476

2476:                                             ; preds = %2471
  br i1 %2475, label %2477, label %5500

2477:                                             ; preds = %2476
  %2478 = icmp sgt i32 %13, 1
  %2479 = icmp sgt i32 %13, 0
  %2480 = add i32 %13, -2
  %2481 = zext i32 %2480 to i64
  %2482 = zext i32 %13 to i64
  %2483 = add nuw i32 %5, 1
  %2484 = icmp eq i32 %13, 1
  br label %2632

2485:                                             ; preds = %2471
  br i1 %2475, label %2486, label %5500

2486:                                             ; preds = %2485
  %2487 = icmp sgt i32 %13, 1
  %2488 = icmp sgt i32 %13, 0
  %2489 = add i32 %13, -2
  %2490 = zext i32 %2489 to i64
  %2491 = zext i32 %13 to i64
  %2492 = add nuw i32 %5, 1
  %2493 = icmp eq i32 %13, 1
  br label %2494

2494:                                             ; preds = %2486, %2630
  %2495 = phi i32 [ 0, %2486 ], [ %2582, %2630 ]
  %2496 = phi double [ 0.000000e+00, %2486 ], [ %2581, %2630 ]
  %2497 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2487, label %2498, label %2567

2498:                                             ; preds = %2494, %2557
  %2499 = phi i32 [ %2566, %2557 ], [ 0, %2494 ]
  %2500 = phi i64 [ %2508, %2557 ], [ %2491, %2494 ]
  %2501 = phi i64 [ %2565, %2557 ], [ %2490, %2494 ]
  %2502 = phi i32 [ %2563, %2557 ], [ %2497, %2494 ]
  %2503 = sub i32 %2489, %2499
  %2504 = tail call i32 @llvm.smin.i32(i32 %2503, i32 0)
  %2505 = sub i32 %2503, %2504
  %2506 = zext i32 %2505 to i64
  %2507 = add nuw nsw i64 %2506, 1
  %2508 = add nsw i64 %2500, -1
  %2509 = icmp ult i32 %2505, 31
  br i1 %2509, label %2545, label %2510

2510:                                             ; preds = %2498
  %2511 = and i64 %2507, 8589934560
  %2512 = sub i64 %2501, %2511
  br label %2513

2513:                                             ; preds = %2513, %2510
  %2514 = phi i64 [ 0, %2510 ], [ %2537, %2513 ]
  %2515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2510 ], [ %2533, %2513 ]
  %2516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2510 ], [ %2534, %2513 ]
  %2517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2510 ], [ %2535, %2513 ]
  %2518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2510 ], [ %2536, %2513 ]
  %2519 = sub i64 %2501, %2514
  %2520 = getelementptr inbounds i32, ptr %9, i64 %2519
  %2521 = getelementptr inbounds i32, ptr %2520, i64 -7
  %2522 = load <8 x i32>, ptr %2521, align 4, !tbaa !5
  %2523 = shufflevector <8 x i32> %2522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2524 = getelementptr inbounds i32, ptr %2520, i64 -15
  %2525 = load <8 x i32>, ptr %2524, align 4, !tbaa !5
  %2526 = shufflevector <8 x i32> %2525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2527 = getelementptr inbounds i32, ptr %2520, i64 -23
  %2528 = load <8 x i32>, ptr %2527, align 4, !tbaa !5
  %2529 = shufflevector <8 x i32> %2528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2530 = getelementptr inbounds i32, ptr %2520, i64 -31
  %2531 = load <8 x i32>, ptr %2530, align 4, !tbaa !5
  %2532 = shufflevector <8 x i32> %2531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2533 = mul <8 x i32> %2523, %2515
  %2534 = mul <8 x i32> %2526, %2516
  %2535 = mul <8 x i32> %2529, %2517
  %2536 = mul <8 x i32> %2532, %2518
  %2537 = add nuw i64 %2514, 32
  %2538 = icmp eq i64 %2537, %2511
  br i1 %2538, label %2539, label %2513, !llvm.loop !284

2539:                                             ; preds = %2513
  %2540 = mul <8 x i32> %2534, %2533
  %2541 = mul <8 x i32> %2535, %2540
  %2542 = mul <8 x i32> %2536, %2541
  %2543 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2542)
  %2544 = icmp eq i64 %2507, %2511
  br i1 %2544, label %2557, label %2545

2545:                                             ; preds = %2498, %2539
  %2546 = phi i64 [ %2501, %2498 ], [ %2512, %2539 ]
  %2547 = phi i32 [ 1, %2498 ], [ %2543, %2539 ]
  br label %2548

2548:                                             ; preds = %2545, %2548
  %2549 = phi i64 [ %2554, %2548 ], [ %2546, %2545 ]
  %2550 = phi i32 [ %2553, %2548 ], [ %2547, %2545 ]
  %2551 = getelementptr inbounds i32, ptr %9, i64 %2549
  %2552 = load i32, ptr %2551, align 4, !tbaa !5
  %2553 = mul nsw i32 %2552, %2550
  %2554 = add nsw i64 %2549, -1
  %2555 = trunc i64 %2549 to i32
  %2556 = icmp sgt i32 %2555, 0
  br i1 %2556, label %2548, label %2557, !llvm.loop !285

2557:                                             ; preds = %2548, %2539
  %2558 = phi i32 [ %2543, %2539 ], [ %2553, %2548 ]
  %2559 = and i64 %2508, 4294967295
  %2560 = getelementptr inbounds i32, ptr %6, i64 %2559
  %2561 = load i32, ptr %2560, align 4, !tbaa !5
  %2562 = mul nsw i32 %2561, %2558
  %2563 = add nsw i32 %2562, %2502
  %2564 = icmp sgt i64 %2500, 2
  %2565 = add nsw i64 %2501, -1
  %2566 = add i32 %2499, 1
  br i1 %2564, label %2498, label %2567, !llvm.loop !286

2567:                                             ; preds = %2557, %2494
  %2568 = phi i32 [ %2497, %2494 ], [ %2563, %2557 ]
  %2569 = sext i32 %2568 to i64
  %2570 = getelementptr inbounds double, ptr %2, i64 %2569
  %2571 = load double, ptr %2570, align 8, !tbaa !18
  %2572 = getelementptr inbounds i32, ptr %2463, i64 %2569
  %2573 = load i32, ptr %2572, align 4, !tbaa !5
  %2574 = load i32, ptr %2465, align 4, !tbaa !5
  %2575 = sitofp i32 %2574 to double
  %2576 = sitofp i32 %2573 to double
  %2577 = fmul fast double %2571, %2576
  %2578 = fmul fast double %2577, %2577
  %2579 = fadd fast double %2578, %2575
  %2580 = fptosi double %2579 to i32
  store i32 %2580, ptr %2465, align 4, !tbaa !5
  %2581 = fadd fast double %2571, %2496
  %2582 = add nuw nsw i32 %2495, 1
  br i1 %2488, label %2583, label %2630

2583:                                             ; preds = %2567
  %2584 = load i32, ptr %4, align 4, !tbaa !5
  %2585 = load i32, ptr %12, align 4, !tbaa !5
  %2586 = add nsw i32 %2585, -1
  %2587 = icmp slt i32 %2584, %2586
  br i1 %2587, label %2607, label %2588

2588:                                             ; preds = %2583
  %2589 = icmp eq i32 %2584, %2586
  br i1 %2589, label %2590, label %2623

2590:                                             ; preds = %2588
  store i32 0, ptr %4, align 4, !tbaa !5
  %2591 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2591, ptr %6, align 4, !tbaa !5
  br i1 %2493, label %2630, label %2592

2592:                                             ; preds = %2590, %2617
  %2593 = phi i64 [ %2621, %2617 ], [ 1, %2590 ]
  %2594 = getelementptr inbounds i32, ptr %4, i64 %2593
  %2595 = load i32, ptr %2594, align 4, !tbaa !5
  %2596 = getelementptr inbounds i32, ptr %12, i64 %2593
  %2597 = load i32, ptr %2596, align 4, !tbaa !5
  %2598 = add nsw i32 %2597, -1
  %2599 = icmp slt i32 %2595, %2598
  br i1 %2599, label %2600, label %2615

2600:                                             ; preds = %2592
  br i1 %2587, label %2607, label %2601

2601:                                             ; preds = %2600
  %2602 = getelementptr inbounds i32, ptr %7, i64 %2593
  %2603 = load i32, ptr %2602, align 4, !tbaa !5
  %2604 = getelementptr inbounds i32, ptr %6, i64 %2593
  %2605 = load i32, ptr %2604, align 4, !tbaa !5
  %2606 = add nsw i32 %2605, %2603
  store i32 %2606, ptr %2604, align 4, !tbaa !5
  br label %2625

2607:                                             ; preds = %2583, %2600
  %2608 = phi i32 [ %2595, %2600 ], [ %2584, %2583 ]
  %2609 = phi ptr [ %2594, %2600 ], [ %4, %2583 ]
  %2610 = phi i64 [ %2593, %2600 ], [ 0, %2583 ]
  %2611 = add nsw i32 %2608, 1
  store i32 %2611, ptr %2609, align 4, !tbaa !5
  %2612 = getelementptr inbounds i32, ptr %7, i64 %2610
  %2613 = load i32, ptr %2612, align 4, !tbaa !5
  %2614 = getelementptr inbounds i32, ptr %6, i64 %2610
  br label %2625

2615:                                             ; preds = %2592
  %2616 = icmp eq i32 %2595, %2598
  br i1 %2616, label %2617, label %2623

2617:                                             ; preds = %2615
  store i32 0, ptr %2594, align 4, !tbaa !5
  %2618 = getelementptr inbounds i32, ptr %8, i64 %2593
  %2619 = load i32, ptr %2618, align 4, !tbaa !5
  %2620 = getelementptr inbounds i32, ptr %6, i64 %2593
  store i32 %2619, ptr %2620, align 4, !tbaa !5
  %2621 = add nuw nsw i64 %2593, 1
  %2622 = icmp eq i64 %2621, %2491
  br i1 %2622, label %2630, label %2592, !llvm.loop !287

2623:                                             ; preds = %2588, %2615
  %2624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 351, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

2625:                                             ; preds = %2601, %2607
  %2626 = phi ptr [ %2614, %2607 ], [ %2594, %2601 ]
  %2627 = phi i32 [ %2613, %2607 ], [ 1, %2601 ]
  %2628 = load i32, ptr %2626, align 4, !tbaa !5
  %2629 = add nsw i32 %2628, %2627
  store i32 %2629, ptr %2626, align 4, !tbaa !5
  br label %2630

2630:                                             ; preds = %2617, %2625, %2590, %2567
  %2631 = icmp eq i32 %2582, %5
  br i1 %2631, label %5500, label %2494, !llvm.loop !288

2632:                                             ; preds = %2477, %2770
  %2633 = phi i32 [ 0, %2477 ], [ %2719, %2770 ]
  %2634 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2478, label %2635, label %2704

2635:                                             ; preds = %2632, %2694
  %2636 = phi i32 [ %2703, %2694 ], [ 0, %2632 ]
  %2637 = phi i64 [ %2645, %2694 ], [ %2482, %2632 ]
  %2638 = phi i64 [ %2702, %2694 ], [ %2481, %2632 ]
  %2639 = phi i32 [ %2700, %2694 ], [ %2634, %2632 ]
  %2640 = sub i32 %2480, %2636
  %2641 = tail call i32 @llvm.smin.i32(i32 %2640, i32 0)
  %2642 = sub i32 %2640, %2641
  %2643 = zext i32 %2642 to i64
  %2644 = add nuw nsw i64 %2643, 1
  %2645 = add nsw i64 %2637, -1
  %2646 = icmp ult i32 %2642, 31
  br i1 %2646, label %2682, label %2647

2647:                                             ; preds = %2635
  %2648 = and i64 %2644, 8589934560
  %2649 = sub i64 %2638, %2648
  br label %2650

2650:                                             ; preds = %2650, %2647
  %2651 = phi i64 [ 0, %2647 ], [ %2674, %2650 ]
  %2652 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2647 ], [ %2670, %2650 ]
  %2653 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2647 ], [ %2671, %2650 ]
  %2654 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2647 ], [ %2672, %2650 ]
  %2655 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2647 ], [ %2673, %2650 ]
  %2656 = sub i64 %2638, %2651
  %2657 = getelementptr inbounds i32, ptr %11, i64 %2656
  %2658 = getelementptr inbounds i32, ptr %2657, i64 -7
  %2659 = load <8 x i32>, ptr %2658, align 4, !tbaa !5
  %2660 = shufflevector <8 x i32> %2659, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2661 = getelementptr inbounds i32, ptr %2657, i64 -15
  %2662 = load <8 x i32>, ptr %2661, align 4, !tbaa !5
  %2663 = shufflevector <8 x i32> %2662, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2664 = getelementptr inbounds i32, ptr %2657, i64 -23
  %2665 = load <8 x i32>, ptr %2664, align 4, !tbaa !5
  %2666 = shufflevector <8 x i32> %2665, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2667 = getelementptr inbounds i32, ptr %2657, i64 -31
  %2668 = load <8 x i32>, ptr %2667, align 4, !tbaa !5
  %2669 = shufflevector <8 x i32> %2668, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2670 = mul <8 x i32> %2660, %2652
  %2671 = mul <8 x i32> %2663, %2653
  %2672 = mul <8 x i32> %2666, %2654
  %2673 = mul <8 x i32> %2669, %2655
  %2674 = add nuw i64 %2651, 32
  %2675 = icmp eq i64 %2674, %2648
  br i1 %2675, label %2676, label %2650, !llvm.loop !289

2676:                                             ; preds = %2650
  %2677 = mul <8 x i32> %2671, %2670
  %2678 = mul <8 x i32> %2672, %2677
  %2679 = mul <8 x i32> %2673, %2678
  %2680 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2679)
  %2681 = icmp eq i64 %2644, %2648
  br i1 %2681, label %2694, label %2682

2682:                                             ; preds = %2635, %2676
  %2683 = phi i64 [ %2638, %2635 ], [ %2649, %2676 ]
  %2684 = phi i32 [ 1, %2635 ], [ %2680, %2676 ]
  br label %2685

2685:                                             ; preds = %2682, %2685
  %2686 = phi i64 [ %2691, %2685 ], [ %2683, %2682 ]
  %2687 = phi i32 [ %2690, %2685 ], [ %2684, %2682 ]
  %2688 = getelementptr inbounds i32, ptr %11, i64 %2686
  %2689 = load i32, ptr %2688, align 4, !tbaa !5
  %2690 = mul nsw i32 %2689, %2687
  %2691 = add nsw i64 %2686, -1
  %2692 = trunc i64 %2686 to i32
  %2693 = icmp sgt i32 %2692, 0
  br i1 %2693, label %2685, label %2694, !llvm.loop !290

2694:                                             ; preds = %2685, %2676
  %2695 = phi i32 [ %2680, %2676 ], [ %2690, %2685 ]
  %2696 = and i64 %2645, 4294967295
  %2697 = getelementptr inbounds i32, ptr %6, i64 %2696
  %2698 = load i32, ptr %2697, align 4, !tbaa !5
  %2699 = mul nsw i32 %2698, %2695
  %2700 = add nsw i32 %2699, %2639
  %2701 = icmp sgt i64 %2637, 2
  %2702 = add nsw i64 %2638, -1
  %2703 = add i32 %2636, 1
  br i1 %2701, label %2635, label %2704, !llvm.loop !291

2704:                                             ; preds = %2694, %2632
  %2705 = phi i32 [ %2634, %2632 ], [ %2700, %2694 ]
  %2706 = icmp slt i32 %2705, %5
  br i1 %2706, label %2709, label %2707

2707:                                             ; preds = %2704
  %2708 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 351, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

2709:                                             ; preds = %2704
  %2710 = sext i32 %2705 to i64
  %2711 = getelementptr inbounds i32, ptr %2463, i64 %2710
  %2712 = load i32, ptr %2711, align 4, !tbaa !5
  %2713 = load i32, ptr %2465, align 4, !tbaa !5
  %2714 = sitofp i32 %2713 to double
  %2715 = sitofp i32 %2712 to double
  %2716 = fmul fast double %2715, %2715
  %2717 = fadd fast double %2716, %2714
  %2718 = fptosi double %2717 to i32
  store i32 %2718, ptr %2465, align 4, !tbaa !5
  %2719 = add nuw nsw i32 %2633, 1
  br i1 %2479, label %2720, label %2770

2720:                                             ; preds = %2709
  %2721 = load i32, ptr %4, align 4, !tbaa !5
  %2722 = load i32, ptr %12, align 4, !tbaa !5
  %2723 = add nsw i32 %2722, -1
  %2724 = icmp slt i32 %2721, %2723
  br i1 %2724, label %2747, label %2725

2725:                                             ; preds = %2720
  %2726 = icmp eq i32 %2721, %2723
  br i1 %2726, label %2727, label %2763

2727:                                             ; preds = %2725
  store i32 0, ptr %4, align 4, !tbaa !5
  %2728 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2728, ptr %6, align 4, !tbaa !5
  br i1 %2484, label %2770, label %2729

2729:                                             ; preds = %2727, %2757
  %2730 = phi i64 [ %2761, %2757 ], [ 1, %2727 ]
  %2731 = getelementptr inbounds i32, ptr %4, i64 %2730
  %2732 = load i32, ptr %2731, align 4, !tbaa !5
  %2733 = getelementptr inbounds i32, ptr %12, i64 %2730
  %2734 = load i32, ptr %2733, align 4, !tbaa !5
  %2735 = add nsw i32 %2734, -1
  %2736 = icmp slt i32 %2732, %2735
  br i1 %2736, label %2737, label %2755

2737:                                             ; preds = %2729
  br i1 %2724, label %2747, label %2738

2738:                                             ; preds = %2737
  %2739 = shl i64 %2730, 32
  %2740 = add i64 %2739, -4294967296
  %2741 = ashr exact i64 %2740, 32
  %2742 = getelementptr inbounds i32, ptr %7, i64 %2741
  %2743 = load i32, ptr %2742, align 4, !tbaa !5
  %2744 = getelementptr inbounds i32, ptr %6, i64 %2730
  %2745 = load i32, ptr %2744, align 4, !tbaa !5
  %2746 = add nsw i32 %2745, %2743
  store i32 %2746, ptr %2744, align 4, !tbaa !5
  br label %2765

2747:                                             ; preds = %2720, %2737
  %2748 = phi i32 [ %2732, %2737 ], [ %2721, %2720 ]
  %2749 = phi ptr [ %2731, %2737 ], [ %4, %2720 ]
  %2750 = phi i64 [ %2730, %2737 ], [ 0, %2720 ]
  %2751 = add nsw i32 %2748, 1
  store i32 %2751, ptr %2749, align 4, !tbaa !5
  %2752 = getelementptr inbounds i32, ptr %7, i64 %2750
  %2753 = load i32, ptr %2752, align 4, !tbaa !5
  %2754 = getelementptr inbounds i32, ptr %6, i64 %2750
  br label %2765

2755:                                             ; preds = %2729
  %2756 = icmp eq i32 %2732, %2735
  br i1 %2756, label %2757, label %2763

2757:                                             ; preds = %2755
  store i32 0, ptr %2731, align 4, !tbaa !5
  %2758 = getelementptr inbounds i32, ptr %8, i64 %2730
  %2759 = load i32, ptr %2758, align 4, !tbaa !5
  %2760 = getelementptr inbounds i32, ptr %6, i64 %2730
  store i32 %2759, ptr %2760, align 4, !tbaa !5
  %2761 = add nuw nsw i64 %2730, 1
  %2762 = icmp eq i64 %2761, %2482
  br i1 %2762, label %2770, label %2729, !llvm.loop !292

2763:                                             ; preds = %2725, %2755
  %2764 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 351, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

2765:                                             ; preds = %2738, %2747
  %2766 = phi ptr [ %2754, %2747 ], [ %2731, %2738 ]
  %2767 = phi i32 [ %2753, %2747 ], [ 1, %2738 ]
  %2768 = load i32, ptr %2766, align 4, !tbaa !5
  %2769 = add nsw i32 %2768, %2767
  store i32 %2769, ptr %2766, align 4, !tbaa !5
  br label %2770

2770:                                             ; preds = %2757, %2765, %2727, %2709
  %2771 = icmp eq i32 %2719, %5
  br i1 %2771, label %5500, label %2632, !llvm.loop !293

2772:                                             ; preds = %2470
  %2773 = getelementptr inbounds i32, ptr %3, i64 %19
  %2774 = load i32, ptr %2773, align 4, !tbaa !5
  %2775 = icmp eq i32 %2774, 0
  %2776 = icmp sgt i32 %5, 0
  br i1 %2775, label %2786, label %2777

2777:                                             ; preds = %2772
  br i1 %2776, label %2778, label %5500

2778:                                             ; preds = %2777
  %2779 = icmp sgt i32 %13, 1
  %2780 = icmp sgt i32 %13, 0
  %2781 = add i32 %13, -2
  %2782 = zext i32 %2781 to i64
  %2783 = zext i32 %13 to i64
  %2784 = add nuw i32 %5, 1
  %2785 = icmp eq i32 %13, 1
  br label %2927

2786:                                             ; preds = %2772
  br i1 %2776, label %2787, label %5500

2787:                                             ; preds = %2786
  %2788 = icmp sgt i32 %13, 1
  %2789 = icmp sgt i32 %13, 0
  %2790 = add i32 %13, -2
  %2791 = zext i32 %2790 to i64
  %2792 = zext i32 %13 to i64
  %2793 = add nuw i32 %5, 1
  %2794 = icmp eq i32 %13, 1
  br label %2795

2795:                                             ; preds = %2787, %2925
  %2796 = phi i32 [ 0, %2787 ], [ %2877, %2925 ]
  %2797 = phi double [ 0.000000e+00, %2787 ], [ %2876, %2925 ]
  %2798 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2788, label %2799, label %2868

2799:                                             ; preds = %2795, %2858
  %2800 = phi i32 [ %2867, %2858 ], [ 0, %2795 ]
  %2801 = phi i64 [ %2809, %2858 ], [ %2792, %2795 ]
  %2802 = phi i64 [ %2866, %2858 ], [ %2791, %2795 ]
  %2803 = phi i32 [ %2864, %2858 ], [ %2798, %2795 ]
  %2804 = sub i32 %2790, %2800
  %2805 = tail call i32 @llvm.smin.i32(i32 %2804, i32 0)
  %2806 = sub i32 %2804, %2805
  %2807 = zext i32 %2806 to i64
  %2808 = add nuw nsw i64 %2807, 1
  %2809 = add nsw i64 %2801, -1
  %2810 = icmp ult i32 %2806, 31
  br i1 %2810, label %2846, label %2811

2811:                                             ; preds = %2799
  %2812 = and i64 %2808, 8589934560
  %2813 = sub i64 %2802, %2812
  br label %2814

2814:                                             ; preds = %2814, %2811
  %2815 = phi i64 [ 0, %2811 ], [ %2838, %2814 ]
  %2816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2811 ], [ %2834, %2814 ]
  %2817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2811 ], [ %2835, %2814 ]
  %2818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2811 ], [ %2836, %2814 ]
  %2819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2811 ], [ %2837, %2814 ]
  %2820 = sub i64 %2802, %2815
  %2821 = getelementptr inbounds i32, ptr %9, i64 %2820
  %2822 = getelementptr inbounds i32, ptr %2821, i64 -7
  %2823 = load <8 x i32>, ptr %2822, align 4, !tbaa !5
  %2824 = shufflevector <8 x i32> %2823, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2825 = getelementptr inbounds i32, ptr %2821, i64 -15
  %2826 = load <8 x i32>, ptr %2825, align 4, !tbaa !5
  %2827 = shufflevector <8 x i32> %2826, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2828 = getelementptr inbounds i32, ptr %2821, i64 -23
  %2829 = load <8 x i32>, ptr %2828, align 4, !tbaa !5
  %2830 = shufflevector <8 x i32> %2829, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2831 = getelementptr inbounds i32, ptr %2821, i64 -31
  %2832 = load <8 x i32>, ptr %2831, align 4, !tbaa !5
  %2833 = shufflevector <8 x i32> %2832, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2834 = mul <8 x i32> %2824, %2816
  %2835 = mul <8 x i32> %2827, %2817
  %2836 = mul <8 x i32> %2830, %2818
  %2837 = mul <8 x i32> %2833, %2819
  %2838 = add nuw i64 %2815, 32
  %2839 = icmp eq i64 %2838, %2812
  br i1 %2839, label %2840, label %2814, !llvm.loop !294

2840:                                             ; preds = %2814
  %2841 = mul <8 x i32> %2835, %2834
  %2842 = mul <8 x i32> %2836, %2841
  %2843 = mul <8 x i32> %2837, %2842
  %2844 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2843)
  %2845 = icmp eq i64 %2808, %2812
  br i1 %2845, label %2858, label %2846

2846:                                             ; preds = %2799, %2840
  %2847 = phi i64 [ %2802, %2799 ], [ %2813, %2840 ]
  %2848 = phi i32 [ 1, %2799 ], [ %2844, %2840 ]
  br label %2849

2849:                                             ; preds = %2846, %2849
  %2850 = phi i64 [ %2855, %2849 ], [ %2847, %2846 ]
  %2851 = phi i32 [ %2854, %2849 ], [ %2848, %2846 ]
  %2852 = getelementptr inbounds i32, ptr %9, i64 %2850
  %2853 = load i32, ptr %2852, align 4, !tbaa !5
  %2854 = mul nsw i32 %2853, %2851
  %2855 = add nsw i64 %2850, -1
  %2856 = trunc i64 %2850 to i32
  %2857 = icmp sgt i32 %2856, 0
  br i1 %2857, label %2849, label %2858, !llvm.loop !295

2858:                                             ; preds = %2849, %2840
  %2859 = phi i32 [ %2844, %2840 ], [ %2854, %2849 ]
  %2860 = and i64 %2809, 4294967295
  %2861 = getelementptr inbounds i32, ptr %6, i64 %2860
  %2862 = load i32, ptr %2861, align 4, !tbaa !5
  %2863 = mul nsw i32 %2862, %2859
  %2864 = add nsw i32 %2863, %2803
  %2865 = icmp sgt i64 %2801, 2
  %2866 = add nsw i64 %2802, -1
  %2867 = add i32 %2800, 1
  br i1 %2865, label %2799, label %2868, !llvm.loop !296

2868:                                             ; preds = %2858, %2795
  %2869 = phi i32 [ %2798, %2795 ], [ %2864, %2858 ]
  %2870 = sext i32 %2869 to i64
  %2871 = getelementptr inbounds i32, ptr %2463, i64 %2870
  %2872 = load i32, ptr %2871, align 4, !tbaa !5
  %2873 = load i32, ptr %2465, align 4, !tbaa !5
  %2874 = mul nsw i32 %2872, %2872
  %2875 = add nsw i32 %2873, %2874
  store i32 %2875, ptr %2465, align 4, !tbaa !5
  %2876 = fadd fast double %2797, 1.000000e+00
  %2877 = add nuw nsw i32 %2796, 1
  br i1 %2789, label %2878, label %2925

2878:                                             ; preds = %2868
  %2879 = load i32, ptr %4, align 4, !tbaa !5
  %2880 = load i32, ptr %12, align 4, !tbaa !5
  %2881 = add nsw i32 %2880, -1
  %2882 = icmp slt i32 %2879, %2881
  br i1 %2882, label %2902, label %2883

2883:                                             ; preds = %2878
  %2884 = icmp eq i32 %2879, %2881
  br i1 %2884, label %2885, label %2918

2885:                                             ; preds = %2883
  store i32 0, ptr %4, align 4, !tbaa !5
  %2886 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2886, ptr %6, align 4, !tbaa !5
  br i1 %2794, label %2925, label %2887

2887:                                             ; preds = %2885, %2912
  %2888 = phi i64 [ %2916, %2912 ], [ 1, %2885 ]
  %2889 = getelementptr inbounds i32, ptr %4, i64 %2888
  %2890 = load i32, ptr %2889, align 4, !tbaa !5
  %2891 = getelementptr inbounds i32, ptr %12, i64 %2888
  %2892 = load i32, ptr %2891, align 4, !tbaa !5
  %2893 = add nsw i32 %2892, -1
  %2894 = icmp slt i32 %2890, %2893
  br i1 %2894, label %2895, label %2910

2895:                                             ; preds = %2887
  br i1 %2882, label %2902, label %2896

2896:                                             ; preds = %2895
  %2897 = getelementptr inbounds i32, ptr %7, i64 %2888
  %2898 = load i32, ptr %2897, align 4, !tbaa !5
  %2899 = getelementptr inbounds i32, ptr %6, i64 %2888
  %2900 = load i32, ptr %2899, align 4, !tbaa !5
  %2901 = add nsw i32 %2900, %2898
  store i32 %2901, ptr %2899, align 4, !tbaa !5
  br label %2920

2902:                                             ; preds = %2878, %2895
  %2903 = phi i32 [ %2890, %2895 ], [ %2879, %2878 ]
  %2904 = phi ptr [ %2889, %2895 ], [ %4, %2878 ]
  %2905 = phi i64 [ %2888, %2895 ], [ 0, %2878 ]
  %2906 = add nsw i32 %2903, 1
  store i32 %2906, ptr %2904, align 4, !tbaa !5
  %2907 = getelementptr inbounds i32, ptr %7, i64 %2905
  %2908 = load i32, ptr %2907, align 4, !tbaa !5
  %2909 = getelementptr inbounds i32, ptr %6, i64 %2905
  br label %2920

2910:                                             ; preds = %2887
  %2911 = icmp eq i32 %2890, %2893
  br i1 %2911, label %2912, label %2918

2912:                                             ; preds = %2910
  store i32 0, ptr %2889, align 4, !tbaa !5
  %2913 = getelementptr inbounds i32, ptr %8, i64 %2888
  %2914 = load i32, ptr %2913, align 4, !tbaa !5
  %2915 = getelementptr inbounds i32, ptr %6, i64 %2888
  store i32 %2914, ptr %2915, align 4, !tbaa !5
  %2916 = add nuw nsw i64 %2888, 1
  %2917 = icmp eq i64 %2916, %2792
  br i1 %2917, label %2925, label %2887, !llvm.loop !297

2918:                                             ; preds = %2883, %2910
  %2919 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 351, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

2920:                                             ; preds = %2896, %2902
  %2921 = phi ptr [ %2909, %2902 ], [ %2889, %2896 ]
  %2922 = phi i32 [ %2908, %2902 ], [ 1, %2896 ]
  %2923 = load i32, ptr %2921, align 4, !tbaa !5
  %2924 = add nsw i32 %2923, %2922
  store i32 %2924, ptr %2921, align 4, !tbaa !5
  br label %2925

2925:                                             ; preds = %2912, %2920, %2885, %2868
  %2926 = icmp eq i32 %2877, %5
  br i1 %2926, label %5500, label %2795, !llvm.loop !298

2927:                                             ; preds = %2778, %3062
  %2928 = phi i32 [ 0, %2778 ], [ %3011, %3062 ]
  %2929 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2779, label %2930, label %2999

2930:                                             ; preds = %2927, %2989
  %2931 = phi i32 [ %2998, %2989 ], [ 0, %2927 ]
  %2932 = phi i64 [ %2940, %2989 ], [ %2783, %2927 ]
  %2933 = phi i64 [ %2997, %2989 ], [ %2782, %2927 ]
  %2934 = phi i32 [ %2995, %2989 ], [ %2929, %2927 ]
  %2935 = sub i32 %2781, %2931
  %2936 = tail call i32 @llvm.smin.i32(i32 %2935, i32 0)
  %2937 = sub i32 %2935, %2936
  %2938 = zext i32 %2937 to i64
  %2939 = add nuw nsw i64 %2938, 1
  %2940 = add nsw i64 %2932, -1
  %2941 = icmp ult i32 %2937, 31
  br i1 %2941, label %2977, label %2942

2942:                                             ; preds = %2930
  %2943 = and i64 %2939, 8589934560
  %2944 = sub i64 %2933, %2943
  br label %2945

2945:                                             ; preds = %2945, %2942
  %2946 = phi i64 [ 0, %2942 ], [ %2969, %2945 ]
  %2947 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2965, %2945 ]
  %2948 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2966, %2945 ]
  %2949 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2967, %2945 ]
  %2950 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2968, %2945 ]
  %2951 = sub i64 %2933, %2946
  %2952 = getelementptr inbounds i32, ptr %11, i64 %2951
  %2953 = getelementptr inbounds i32, ptr %2952, i64 -7
  %2954 = load <8 x i32>, ptr %2953, align 4, !tbaa !5
  %2955 = shufflevector <8 x i32> %2954, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2956 = getelementptr inbounds i32, ptr %2952, i64 -15
  %2957 = load <8 x i32>, ptr %2956, align 4, !tbaa !5
  %2958 = shufflevector <8 x i32> %2957, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2959 = getelementptr inbounds i32, ptr %2952, i64 -23
  %2960 = load <8 x i32>, ptr %2959, align 4, !tbaa !5
  %2961 = shufflevector <8 x i32> %2960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2962 = getelementptr inbounds i32, ptr %2952, i64 -31
  %2963 = load <8 x i32>, ptr %2962, align 4, !tbaa !5
  %2964 = shufflevector <8 x i32> %2963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2965 = mul <8 x i32> %2955, %2947
  %2966 = mul <8 x i32> %2958, %2948
  %2967 = mul <8 x i32> %2961, %2949
  %2968 = mul <8 x i32> %2964, %2950
  %2969 = add nuw i64 %2946, 32
  %2970 = icmp eq i64 %2969, %2943
  br i1 %2970, label %2971, label %2945, !llvm.loop !299

2971:                                             ; preds = %2945
  %2972 = mul <8 x i32> %2966, %2965
  %2973 = mul <8 x i32> %2967, %2972
  %2974 = mul <8 x i32> %2968, %2973
  %2975 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2974)
  %2976 = icmp eq i64 %2939, %2943
  br i1 %2976, label %2989, label %2977

2977:                                             ; preds = %2930, %2971
  %2978 = phi i64 [ %2933, %2930 ], [ %2944, %2971 ]
  %2979 = phi i32 [ 1, %2930 ], [ %2975, %2971 ]
  br label %2980

2980:                                             ; preds = %2977, %2980
  %2981 = phi i64 [ %2986, %2980 ], [ %2978, %2977 ]
  %2982 = phi i32 [ %2985, %2980 ], [ %2979, %2977 ]
  %2983 = getelementptr inbounds i32, ptr %11, i64 %2981
  %2984 = load i32, ptr %2983, align 4, !tbaa !5
  %2985 = mul nsw i32 %2984, %2982
  %2986 = add nsw i64 %2981, -1
  %2987 = trunc i64 %2981 to i32
  %2988 = icmp sgt i32 %2987, 0
  br i1 %2988, label %2980, label %2989, !llvm.loop !300

2989:                                             ; preds = %2980, %2971
  %2990 = phi i32 [ %2975, %2971 ], [ %2985, %2980 ]
  %2991 = and i64 %2940, 4294967295
  %2992 = getelementptr inbounds i32, ptr %6, i64 %2991
  %2993 = load i32, ptr %2992, align 4, !tbaa !5
  %2994 = mul nsw i32 %2993, %2990
  %2995 = add nsw i32 %2994, %2934
  %2996 = icmp sgt i64 %2932, 2
  %2997 = add nsw i64 %2933, -1
  %2998 = add i32 %2931, 1
  br i1 %2996, label %2930, label %2999, !llvm.loop !301

2999:                                             ; preds = %2989, %2927
  %3000 = phi i32 [ %2929, %2927 ], [ %2995, %2989 ]
  %3001 = icmp slt i32 %3000, %5
  br i1 %3001, label %3004, label %3002

3002:                                             ; preds = %2999
  %3003 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 351, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

3004:                                             ; preds = %2999
  %3005 = sext i32 %3000 to i64
  %3006 = getelementptr inbounds i32, ptr %2463, i64 %3005
  %3007 = load i32, ptr %3006, align 4, !tbaa !5
  %3008 = load i32, ptr %2465, align 4, !tbaa !5
  %3009 = mul nsw i32 %3007, %3007
  %3010 = add nsw i32 %3008, %3009
  store i32 %3010, ptr %2465, align 4, !tbaa !5
  %3011 = add nuw nsw i32 %2928, 1
  br i1 %2780, label %3012, label %3062

3012:                                             ; preds = %3004
  %3013 = load i32, ptr %4, align 4, !tbaa !5
  %3014 = load i32, ptr %12, align 4, !tbaa !5
  %3015 = add nsw i32 %3014, -1
  %3016 = icmp slt i32 %3013, %3015
  br i1 %3016, label %3039, label %3017

3017:                                             ; preds = %3012
  %3018 = icmp eq i32 %3013, %3015
  br i1 %3018, label %3019, label %3055

3019:                                             ; preds = %3017
  store i32 0, ptr %4, align 4, !tbaa !5
  %3020 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3020, ptr %6, align 4, !tbaa !5
  br i1 %2785, label %3062, label %3021

3021:                                             ; preds = %3019, %3049
  %3022 = phi i64 [ %3053, %3049 ], [ 1, %3019 ]
  %3023 = getelementptr inbounds i32, ptr %4, i64 %3022
  %3024 = load i32, ptr %3023, align 4, !tbaa !5
  %3025 = getelementptr inbounds i32, ptr %12, i64 %3022
  %3026 = load i32, ptr %3025, align 4, !tbaa !5
  %3027 = add nsw i32 %3026, -1
  %3028 = icmp slt i32 %3024, %3027
  br i1 %3028, label %3029, label %3047

3029:                                             ; preds = %3021
  br i1 %3016, label %3039, label %3030

3030:                                             ; preds = %3029
  %3031 = shl i64 %3022, 32
  %3032 = add i64 %3031, -4294967296
  %3033 = ashr exact i64 %3032, 32
  %3034 = getelementptr inbounds i32, ptr %7, i64 %3033
  %3035 = load i32, ptr %3034, align 4, !tbaa !5
  %3036 = getelementptr inbounds i32, ptr %6, i64 %3022
  %3037 = load i32, ptr %3036, align 4, !tbaa !5
  %3038 = add nsw i32 %3037, %3035
  store i32 %3038, ptr %3036, align 4, !tbaa !5
  br label %3057

3039:                                             ; preds = %3012, %3029
  %3040 = phi i32 [ %3024, %3029 ], [ %3013, %3012 ]
  %3041 = phi ptr [ %3023, %3029 ], [ %4, %3012 ]
  %3042 = phi i64 [ %3022, %3029 ], [ 0, %3012 ]
  %3043 = add nsw i32 %3040, 1
  store i32 %3043, ptr %3041, align 4, !tbaa !5
  %3044 = getelementptr inbounds i32, ptr %7, i64 %3042
  %3045 = load i32, ptr %3044, align 4, !tbaa !5
  %3046 = getelementptr inbounds i32, ptr %6, i64 %3042
  br label %3057

3047:                                             ; preds = %3021
  %3048 = icmp eq i32 %3024, %3027
  br i1 %3048, label %3049, label %3055

3049:                                             ; preds = %3047
  store i32 0, ptr %3023, align 4, !tbaa !5
  %3050 = getelementptr inbounds i32, ptr %8, i64 %3022
  %3051 = load i32, ptr %3050, align 4, !tbaa !5
  %3052 = getelementptr inbounds i32, ptr %6, i64 %3022
  store i32 %3051, ptr %3052, align 4, !tbaa !5
  %3053 = add nuw nsw i64 %3022, 1
  %3054 = icmp eq i64 %3053, %2783
  br i1 %3054, label %3062, label %3021, !llvm.loop !302

3055:                                             ; preds = %3017, %3047
  %3056 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 351, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

3057:                                             ; preds = %3030, %3039
  %3058 = phi ptr [ %3046, %3039 ], [ %3023, %3030 ]
  %3059 = phi i32 [ %3045, %3039 ], [ 1, %3030 ]
  %3060 = load i32, ptr %3058, align 4, !tbaa !5
  %3061 = add nsw i32 %3060, %3059
  store i32 %3061, ptr %3058, align 4, !tbaa !5
  br label %3062

3062:                                             ; preds = %3049, %3057, %3019, %3004
  %3063 = icmp eq i32 %3011, %5
  br i1 %3063, label %5500, label %2927, !llvm.loop !303

3064:                                             ; preds = %2470
  %3065 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 351, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

3066:                                             ; preds = %18
  %3067 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3068 = load ptr, ptr %3067, align 8, !tbaa !9
  %3069 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3070 = load ptr, ptr %3069, align 8, !tbaa !9
  store i64 0, ptr %3070, align 8, !tbaa !120
  %3071 = icmp eq i32 %13, 0
  br i1 %3071, label %3072, label %3076

3072:                                             ; preds = %3066
  %3073 = load i32, ptr %3068, align 4, !tbaa !5
  %3074 = sext i32 %3073 to i64
  %3075 = mul nsw i64 %3074, %3074
  store i64 %3075, ptr %3070, align 8, !tbaa !120
  br label %5500

3076:                                             ; preds = %3066
  switch i32 %1, label %3672 [
    i32 1, label %3077
    i32 0, label %3378
  ]

3077:                                             ; preds = %3076
  %3078 = getelementptr inbounds i32, ptr %3, i64 %19
  %3079 = load i32, ptr %3078, align 4, !tbaa !5
  %3080 = icmp eq i32 %3079, 0
  %3081 = icmp sgt i32 %5, 0
  br i1 %3080, label %3091, label %3082

3082:                                             ; preds = %3077
  br i1 %3081, label %3083, label %5500

3083:                                             ; preds = %3082
  %3084 = icmp sgt i32 %13, 1
  %3085 = icmp sgt i32 %13, 0
  %3086 = add i32 %13, -2
  %3087 = zext i32 %3086 to i64
  %3088 = zext i32 %13 to i64
  %3089 = add nuw i32 %5, 1
  %3090 = icmp eq i32 %13, 1
  br label %3238

3091:                                             ; preds = %3077
  br i1 %3081, label %3092, label %5500

3092:                                             ; preds = %3091
  %3093 = icmp sgt i32 %13, 1
  %3094 = icmp sgt i32 %13, 0
  %3095 = add i32 %13, -2
  %3096 = zext i32 %3095 to i64
  %3097 = zext i32 %13 to i64
  %3098 = add nuw i32 %5, 1
  %3099 = icmp eq i32 %13, 1
  br label %3100

3100:                                             ; preds = %3092, %3236
  %3101 = phi i64 [ 0, %3092 ], [ %3186, %3236 ]
  %3102 = phi i32 [ 0, %3092 ], [ %3188, %3236 ]
  %3103 = phi double [ 0.000000e+00, %3092 ], [ %3187, %3236 ]
  %3104 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3093, label %3105, label %3174

3105:                                             ; preds = %3100, %3164
  %3106 = phi i32 [ %3173, %3164 ], [ 0, %3100 ]
  %3107 = phi i64 [ %3115, %3164 ], [ %3097, %3100 ]
  %3108 = phi i64 [ %3172, %3164 ], [ %3096, %3100 ]
  %3109 = phi i32 [ %3170, %3164 ], [ %3104, %3100 ]
  %3110 = sub i32 %3095, %3106
  %3111 = tail call i32 @llvm.smin.i32(i32 %3110, i32 0)
  %3112 = sub i32 %3110, %3111
  %3113 = zext i32 %3112 to i64
  %3114 = add nuw nsw i64 %3113, 1
  %3115 = add nsw i64 %3107, -1
  %3116 = icmp ult i32 %3112, 31
  br i1 %3116, label %3152, label %3117

3117:                                             ; preds = %3105
  %3118 = and i64 %3114, 8589934560
  %3119 = sub i64 %3108, %3118
  br label %3120

3120:                                             ; preds = %3120, %3117
  %3121 = phi i64 [ 0, %3117 ], [ %3144, %3120 ]
  %3122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3117 ], [ %3140, %3120 ]
  %3123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3117 ], [ %3141, %3120 ]
  %3124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3117 ], [ %3142, %3120 ]
  %3125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3117 ], [ %3143, %3120 ]
  %3126 = sub i64 %3108, %3121
  %3127 = getelementptr inbounds i32, ptr %9, i64 %3126
  %3128 = getelementptr inbounds i32, ptr %3127, i64 -7
  %3129 = load <8 x i32>, ptr %3128, align 4, !tbaa !5
  %3130 = shufflevector <8 x i32> %3129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3131 = getelementptr inbounds i32, ptr %3127, i64 -15
  %3132 = load <8 x i32>, ptr %3131, align 4, !tbaa !5
  %3133 = shufflevector <8 x i32> %3132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3134 = getelementptr inbounds i32, ptr %3127, i64 -23
  %3135 = load <8 x i32>, ptr %3134, align 4, !tbaa !5
  %3136 = shufflevector <8 x i32> %3135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3137 = getelementptr inbounds i32, ptr %3127, i64 -31
  %3138 = load <8 x i32>, ptr %3137, align 4, !tbaa !5
  %3139 = shufflevector <8 x i32> %3138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3140 = mul <8 x i32> %3130, %3122
  %3141 = mul <8 x i32> %3133, %3123
  %3142 = mul <8 x i32> %3136, %3124
  %3143 = mul <8 x i32> %3139, %3125
  %3144 = add nuw i64 %3121, 32
  %3145 = icmp eq i64 %3144, %3118
  br i1 %3145, label %3146, label %3120, !llvm.loop !304

3146:                                             ; preds = %3120
  %3147 = mul <8 x i32> %3141, %3140
  %3148 = mul <8 x i32> %3142, %3147
  %3149 = mul <8 x i32> %3143, %3148
  %3150 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3149)
  %3151 = icmp eq i64 %3114, %3118
  br i1 %3151, label %3164, label %3152

3152:                                             ; preds = %3105, %3146
  %3153 = phi i64 [ %3108, %3105 ], [ %3119, %3146 ]
  %3154 = phi i32 [ 1, %3105 ], [ %3150, %3146 ]
  br label %3155

3155:                                             ; preds = %3152, %3155
  %3156 = phi i64 [ %3161, %3155 ], [ %3153, %3152 ]
  %3157 = phi i32 [ %3160, %3155 ], [ %3154, %3152 ]
  %3158 = getelementptr inbounds i32, ptr %9, i64 %3156
  %3159 = load i32, ptr %3158, align 4, !tbaa !5
  %3160 = mul nsw i32 %3159, %3157
  %3161 = add nsw i64 %3156, -1
  %3162 = trunc i64 %3156 to i32
  %3163 = icmp sgt i32 %3162, 0
  br i1 %3163, label %3155, label %3164, !llvm.loop !305

3164:                                             ; preds = %3155, %3146
  %3165 = phi i32 [ %3150, %3146 ], [ %3160, %3155 ]
  %3166 = and i64 %3115, 4294967295
  %3167 = getelementptr inbounds i32, ptr %6, i64 %3166
  %3168 = load i32, ptr %3167, align 4, !tbaa !5
  %3169 = mul nsw i32 %3168, %3165
  %3170 = add nsw i32 %3169, %3109
  %3171 = icmp sgt i64 %3107, 2
  %3172 = add nsw i64 %3108, -1
  %3173 = add i32 %3106, 1
  br i1 %3171, label %3105, label %3174, !llvm.loop !306

3174:                                             ; preds = %3164, %3100
  %3175 = phi i32 [ %3104, %3100 ], [ %3170, %3164 ]
  %3176 = sext i32 %3175 to i64
  %3177 = getelementptr inbounds double, ptr %2, i64 %3176
  %3178 = load double, ptr %3177, align 8, !tbaa !18
  %3179 = getelementptr inbounds i32, ptr %3068, i64 %3176
  %3180 = load i32, ptr %3179, align 4, !tbaa !5
  %3181 = sitofp i64 %3101 to double
  %3182 = sitofp i32 %3180 to double
  %3183 = fmul fast double %3178, %3182
  %3184 = fmul fast double %3183, %3183
  %3185 = fadd fast double %3184, %3181
  %3186 = fptosi double %3185 to i64
  %3187 = fadd fast double %3178, %3103
  %3188 = add nuw nsw i32 %3102, 1
  br i1 %3094, label %3189, label %3236

3189:                                             ; preds = %3174
  %3190 = load i32, ptr %4, align 4, !tbaa !5
  %3191 = load i32, ptr %12, align 4, !tbaa !5
  %3192 = add nsw i32 %3191, -1
  %3193 = icmp slt i32 %3190, %3192
  br i1 %3193, label %3213, label %3194

3194:                                             ; preds = %3189
  %3195 = icmp eq i32 %3190, %3192
  br i1 %3195, label %3196, label %3229

3196:                                             ; preds = %3194
  store i32 0, ptr %4, align 4, !tbaa !5
  %3197 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3197, ptr %6, align 4, !tbaa !5
  br i1 %3099, label %3236, label %3198

3198:                                             ; preds = %3196, %3223
  %3199 = phi i64 [ %3227, %3223 ], [ 1, %3196 ]
  %3200 = getelementptr inbounds i32, ptr %4, i64 %3199
  %3201 = load i32, ptr %3200, align 4, !tbaa !5
  %3202 = getelementptr inbounds i32, ptr %12, i64 %3199
  %3203 = load i32, ptr %3202, align 4, !tbaa !5
  %3204 = add nsw i32 %3203, -1
  %3205 = icmp slt i32 %3201, %3204
  br i1 %3205, label %3206, label %3221

3206:                                             ; preds = %3198
  br i1 %3193, label %3213, label %3207

3207:                                             ; preds = %3206
  %3208 = getelementptr inbounds i32, ptr %7, i64 %3199
  %3209 = load i32, ptr %3208, align 4, !tbaa !5
  %3210 = getelementptr inbounds i32, ptr %6, i64 %3199
  %3211 = load i32, ptr %3210, align 4, !tbaa !5
  %3212 = add nsw i32 %3211, %3209
  store i32 %3212, ptr %3210, align 4, !tbaa !5
  br label %3231

3213:                                             ; preds = %3189, %3206
  %3214 = phi i32 [ %3201, %3206 ], [ %3190, %3189 ]
  %3215 = phi ptr [ %3200, %3206 ], [ %4, %3189 ]
  %3216 = phi i64 [ %3199, %3206 ], [ 0, %3189 ]
  %3217 = add nsw i32 %3214, 1
  store i32 %3217, ptr %3215, align 4, !tbaa !5
  %3218 = getelementptr inbounds i32, ptr %7, i64 %3216
  %3219 = load i32, ptr %3218, align 4, !tbaa !5
  %3220 = getelementptr inbounds i32, ptr %6, i64 %3216
  br label %3231

3221:                                             ; preds = %3198
  %3222 = icmp eq i32 %3201, %3204
  br i1 %3222, label %3223, label %3229

3223:                                             ; preds = %3221
  store i32 0, ptr %3200, align 4, !tbaa !5
  %3224 = getelementptr inbounds i32, ptr %8, i64 %3199
  %3225 = load i32, ptr %3224, align 4, !tbaa !5
  %3226 = getelementptr inbounds i32, ptr %6, i64 %3199
  store i32 %3225, ptr %3226, align 4, !tbaa !5
  %3227 = add nuw nsw i64 %3199, 1
  %3228 = icmp eq i64 %3227, %3097
  br i1 %3228, label %3236, label %3198, !llvm.loop !307

3229:                                             ; preds = %3194, %3221
  store i64 %3186, ptr %3070, align 8, !tbaa !120
  %3230 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 356, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

3231:                                             ; preds = %3207, %3213
  %3232 = phi ptr [ %3220, %3213 ], [ %3200, %3207 ]
  %3233 = phi i32 [ %3219, %3213 ], [ 1, %3207 ]
  %3234 = load i32, ptr %3232, align 4, !tbaa !5
  %3235 = add nsw i32 %3234, %3233
  store i32 %3235, ptr %3232, align 4, !tbaa !5
  br label %3236

3236:                                             ; preds = %3223, %3231, %3196, %3174
  %3237 = icmp eq i32 %3188, %5
  br i1 %3237, label %5494, label %3100, !llvm.loop !308

3238:                                             ; preds = %3083, %3376
  %3239 = phi i64 [ 0, %3083 ], [ %3324, %3376 ]
  %3240 = phi i32 [ 0, %3083 ], [ %3325, %3376 ]
  %3241 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3084, label %3242, label %3311

3242:                                             ; preds = %3238, %3301
  %3243 = phi i32 [ %3310, %3301 ], [ 0, %3238 ]
  %3244 = phi i64 [ %3252, %3301 ], [ %3088, %3238 ]
  %3245 = phi i64 [ %3309, %3301 ], [ %3087, %3238 ]
  %3246 = phi i32 [ %3307, %3301 ], [ %3241, %3238 ]
  %3247 = sub i32 %3086, %3243
  %3248 = tail call i32 @llvm.smin.i32(i32 %3247, i32 0)
  %3249 = sub i32 %3247, %3248
  %3250 = zext i32 %3249 to i64
  %3251 = add nuw nsw i64 %3250, 1
  %3252 = add nsw i64 %3244, -1
  %3253 = icmp ult i32 %3249, 31
  br i1 %3253, label %3289, label %3254

3254:                                             ; preds = %3242
  %3255 = and i64 %3251, 8589934560
  %3256 = sub i64 %3245, %3255
  br label %3257

3257:                                             ; preds = %3257, %3254
  %3258 = phi i64 [ 0, %3254 ], [ %3281, %3257 ]
  %3259 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3254 ], [ %3277, %3257 ]
  %3260 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3254 ], [ %3278, %3257 ]
  %3261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3254 ], [ %3279, %3257 ]
  %3262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3254 ], [ %3280, %3257 ]
  %3263 = sub i64 %3245, %3258
  %3264 = getelementptr inbounds i32, ptr %11, i64 %3263
  %3265 = getelementptr inbounds i32, ptr %3264, i64 -7
  %3266 = load <8 x i32>, ptr %3265, align 4, !tbaa !5
  %3267 = shufflevector <8 x i32> %3266, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3268 = getelementptr inbounds i32, ptr %3264, i64 -15
  %3269 = load <8 x i32>, ptr %3268, align 4, !tbaa !5
  %3270 = shufflevector <8 x i32> %3269, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3271 = getelementptr inbounds i32, ptr %3264, i64 -23
  %3272 = load <8 x i32>, ptr %3271, align 4, !tbaa !5
  %3273 = shufflevector <8 x i32> %3272, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3274 = getelementptr inbounds i32, ptr %3264, i64 -31
  %3275 = load <8 x i32>, ptr %3274, align 4, !tbaa !5
  %3276 = shufflevector <8 x i32> %3275, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3277 = mul <8 x i32> %3267, %3259
  %3278 = mul <8 x i32> %3270, %3260
  %3279 = mul <8 x i32> %3273, %3261
  %3280 = mul <8 x i32> %3276, %3262
  %3281 = add nuw i64 %3258, 32
  %3282 = icmp eq i64 %3281, %3255
  br i1 %3282, label %3283, label %3257, !llvm.loop !309

3283:                                             ; preds = %3257
  %3284 = mul <8 x i32> %3278, %3277
  %3285 = mul <8 x i32> %3279, %3284
  %3286 = mul <8 x i32> %3280, %3285
  %3287 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3286)
  %3288 = icmp eq i64 %3251, %3255
  br i1 %3288, label %3301, label %3289

3289:                                             ; preds = %3242, %3283
  %3290 = phi i64 [ %3245, %3242 ], [ %3256, %3283 ]
  %3291 = phi i32 [ 1, %3242 ], [ %3287, %3283 ]
  br label %3292

3292:                                             ; preds = %3289, %3292
  %3293 = phi i64 [ %3298, %3292 ], [ %3290, %3289 ]
  %3294 = phi i32 [ %3297, %3292 ], [ %3291, %3289 ]
  %3295 = getelementptr inbounds i32, ptr %11, i64 %3293
  %3296 = load i32, ptr %3295, align 4, !tbaa !5
  %3297 = mul nsw i32 %3296, %3294
  %3298 = add nsw i64 %3293, -1
  %3299 = trunc i64 %3293 to i32
  %3300 = icmp sgt i32 %3299, 0
  br i1 %3300, label %3292, label %3301, !llvm.loop !310

3301:                                             ; preds = %3292, %3283
  %3302 = phi i32 [ %3287, %3283 ], [ %3297, %3292 ]
  %3303 = and i64 %3252, 4294967295
  %3304 = getelementptr inbounds i32, ptr %6, i64 %3303
  %3305 = load i32, ptr %3304, align 4, !tbaa !5
  %3306 = mul nsw i32 %3305, %3302
  %3307 = add nsw i32 %3306, %3246
  %3308 = icmp sgt i64 %3244, 2
  %3309 = add nsw i64 %3245, -1
  %3310 = add i32 %3243, 1
  br i1 %3308, label %3242, label %3311, !llvm.loop !311

3311:                                             ; preds = %3301, %3238
  %3312 = phi i32 [ %3241, %3238 ], [ %3307, %3301 ]
  %3313 = icmp slt i32 %3312, %5
  br i1 %3313, label %3316, label %3314

3314:                                             ; preds = %3311
  %3315 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 356, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

3316:                                             ; preds = %3311
  %3317 = sext i32 %3312 to i64
  %3318 = getelementptr inbounds i32, ptr %3068, i64 %3317
  %3319 = load i32, ptr %3318, align 4, !tbaa !5
  %3320 = sitofp i64 %3239 to double
  %3321 = sitofp i32 %3319 to double
  %3322 = fmul fast double %3321, %3321
  %3323 = fadd fast double %3322, %3320
  %3324 = fptosi double %3323 to i64
  store i64 %3324, ptr %3070, align 8, !tbaa !120
  %3325 = add nuw nsw i32 %3240, 1
  br i1 %3085, label %3326, label %3376

3326:                                             ; preds = %3316
  %3327 = load i32, ptr %4, align 4, !tbaa !5
  %3328 = load i32, ptr %12, align 4, !tbaa !5
  %3329 = add nsw i32 %3328, -1
  %3330 = icmp slt i32 %3327, %3329
  br i1 %3330, label %3353, label %3331

3331:                                             ; preds = %3326
  %3332 = icmp eq i32 %3327, %3329
  br i1 %3332, label %3333, label %3369

3333:                                             ; preds = %3331
  store i32 0, ptr %4, align 4, !tbaa !5
  %3334 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3334, ptr %6, align 4, !tbaa !5
  br i1 %3090, label %3376, label %3335

3335:                                             ; preds = %3333, %3363
  %3336 = phi i64 [ %3367, %3363 ], [ 1, %3333 ]
  %3337 = getelementptr inbounds i32, ptr %4, i64 %3336
  %3338 = load i32, ptr %3337, align 4, !tbaa !5
  %3339 = getelementptr inbounds i32, ptr %12, i64 %3336
  %3340 = load i32, ptr %3339, align 4, !tbaa !5
  %3341 = add nsw i32 %3340, -1
  %3342 = icmp slt i32 %3338, %3341
  br i1 %3342, label %3343, label %3361

3343:                                             ; preds = %3335
  br i1 %3330, label %3353, label %3344

3344:                                             ; preds = %3343
  %3345 = shl i64 %3336, 32
  %3346 = add i64 %3345, -4294967296
  %3347 = ashr exact i64 %3346, 32
  %3348 = getelementptr inbounds i32, ptr %7, i64 %3347
  %3349 = load i32, ptr %3348, align 4, !tbaa !5
  %3350 = getelementptr inbounds i32, ptr %6, i64 %3336
  %3351 = load i32, ptr %3350, align 4, !tbaa !5
  %3352 = add nsw i32 %3351, %3349
  store i32 %3352, ptr %3350, align 4, !tbaa !5
  br label %3371

3353:                                             ; preds = %3326, %3343
  %3354 = phi i32 [ %3338, %3343 ], [ %3327, %3326 ]
  %3355 = phi ptr [ %3337, %3343 ], [ %4, %3326 ]
  %3356 = phi i64 [ %3336, %3343 ], [ 0, %3326 ]
  %3357 = add nsw i32 %3354, 1
  store i32 %3357, ptr %3355, align 4, !tbaa !5
  %3358 = getelementptr inbounds i32, ptr %7, i64 %3356
  %3359 = load i32, ptr %3358, align 4, !tbaa !5
  %3360 = getelementptr inbounds i32, ptr %6, i64 %3356
  br label %3371

3361:                                             ; preds = %3335
  %3362 = icmp eq i32 %3338, %3341
  br i1 %3362, label %3363, label %3369

3363:                                             ; preds = %3361
  store i32 0, ptr %3337, align 4, !tbaa !5
  %3364 = getelementptr inbounds i32, ptr %8, i64 %3336
  %3365 = load i32, ptr %3364, align 4, !tbaa !5
  %3366 = getelementptr inbounds i32, ptr %6, i64 %3336
  store i32 %3365, ptr %3366, align 4, !tbaa !5
  %3367 = add nuw nsw i64 %3336, 1
  %3368 = icmp eq i64 %3367, %3088
  br i1 %3368, label %3376, label %3335, !llvm.loop !312

3369:                                             ; preds = %3331, %3361
  %3370 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 356, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

3371:                                             ; preds = %3344, %3353
  %3372 = phi ptr [ %3360, %3353 ], [ %3337, %3344 ]
  %3373 = phi i32 [ %3359, %3353 ], [ 1, %3344 ]
  %3374 = load i32, ptr %3372, align 4, !tbaa !5
  %3375 = add nsw i32 %3374, %3373
  store i32 %3375, ptr %3372, align 4, !tbaa !5
  br label %3376

3376:                                             ; preds = %3363, %3371, %3333, %3316
  %3377 = icmp eq i32 %3325, %5
  br i1 %3377, label %5500, label %3238, !llvm.loop !313

3378:                                             ; preds = %3076
  %3379 = getelementptr inbounds i32, ptr %3, i64 %19
  %3380 = load i32, ptr %3379, align 4, !tbaa !5
  %3381 = icmp eq i32 %3380, 0
  %3382 = icmp sgt i32 %5, 0
  br i1 %3381, label %3392, label %3383

3383:                                             ; preds = %3378
  br i1 %3382, label %3384, label %5500

3384:                                             ; preds = %3383
  %3385 = icmp sgt i32 %13, 1
  %3386 = icmp sgt i32 %13, 0
  %3387 = add i32 %13, -2
  %3388 = zext i32 %3387 to i64
  %3389 = zext i32 %13 to i64
  %3390 = add nuw i32 %5, 1
  %3391 = icmp eq i32 %13, 1
  br label %3534

3392:                                             ; preds = %3378
  br i1 %3382, label %3393, label %5500

3393:                                             ; preds = %3392
  %3394 = icmp sgt i32 %13, 1
  %3395 = icmp sgt i32 %13, 0
  %3396 = add i32 %13, -2
  %3397 = zext i32 %3396 to i64
  %3398 = zext i32 %13 to i64
  %3399 = add nuw i32 %5, 1
  %3400 = icmp eq i32 %13, 1
  br label %3401

3401:                                             ; preds = %3393, %3532
  %3402 = phi i64 [ 0, %3393 ], [ %3482, %3532 ]
  %3403 = phi i32 [ 0, %3393 ], [ %3484, %3532 ]
  %3404 = phi double [ 0.000000e+00, %3393 ], [ %3483, %3532 ]
  %3405 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3394, label %3406, label %3475

3406:                                             ; preds = %3401, %3465
  %3407 = phi i32 [ %3474, %3465 ], [ 0, %3401 ]
  %3408 = phi i64 [ %3416, %3465 ], [ %3398, %3401 ]
  %3409 = phi i64 [ %3473, %3465 ], [ %3397, %3401 ]
  %3410 = phi i32 [ %3471, %3465 ], [ %3405, %3401 ]
  %3411 = sub i32 %3396, %3407
  %3412 = tail call i32 @llvm.smin.i32(i32 %3411, i32 0)
  %3413 = sub i32 %3411, %3412
  %3414 = zext i32 %3413 to i64
  %3415 = add nuw nsw i64 %3414, 1
  %3416 = add nsw i64 %3408, -1
  %3417 = icmp ult i32 %3413, 31
  br i1 %3417, label %3453, label %3418

3418:                                             ; preds = %3406
  %3419 = and i64 %3415, 8589934560
  %3420 = sub i64 %3409, %3419
  br label %3421

3421:                                             ; preds = %3421, %3418
  %3422 = phi i64 [ 0, %3418 ], [ %3445, %3421 ]
  %3423 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3418 ], [ %3441, %3421 ]
  %3424 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3418 ], [ %3442, %3421 ]
  %3425 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3418 ], [ %3443, %3421 ]
  %3426 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3418 ], [ %3444, %3421 ]
  %3427 = sub i64 %3409, %3422
  %3428 = getelementptr inbounds i32, ptr %9, i64 %3427
  %3429 = getelementptr inbounds i32, ptr %3428, i64 -7
  %3430 = load <8 x i32>, ptr %3429, align 4, !tbaa !5
  %3431 = shufflevector <8 x i32> %3430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3432 = getelementptr inbounds i32, ptr %3428, i64 -15
  %3433 = load <8 x i32>, ptr %3432, align 4, !tbaa !5
  %3434 = shufflevector <8 x i32> %3433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3435 = getelementptr inbounds i32, ptr %3428, i64 -23
  %3436 = load <8 x i32>, ptr %3435, align 4, !tbaa !5
  %3437 = shufflevector <8 x i32> %3436, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3438 = getelementptr inbounds i32, ptr %3428, i64 -31
  %3439 = load <8 x i32>, ptr %3438, align 4, !tbaa !5
  %3440 = shufflevector <8 x i32> %3439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3441 = mul <8 x i32> %3431, %3423
  %3442 = mul <8 x i32> %3434, %3424
  %3443 = mul <8 x i32> %3437, %3425
  %3444 = mul <8 x i32> %3440, %3426
  %3445 = add nuw i64 %3422, 32
  %3446 = icmp eq i64 %3445, %3419
  br i1 %3446, label %3447, label %3421, !llvm.loop !314

3447:                                             ; preds = %3421
  %3448 = mul <8 x i32> %3442, %3441
  %3449 = mul <8 x i32> %3443, %3448
  %3450 = mul <8 x i32> %3444, %3449
  %3451 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3450)
  %3452 = icmp eq i64 %3415, %3419
  br i1 %3452, label %3465, label %3453

3453:                                             ; preds = %3406, %3447
  %3454 = phi i64 [ %3409, %3406 ], [ %3420, %3447 ]
  %3455 = phi i32 [ 1, %3406 ], [ %3451, %3447 ]
  br label %3456

3456:                                             ; preds = %3453, %3456
  %3457 = phi i64 [ %3462, %3456 ], [ %3454, %3453 ]
  %3458 = phi i32 [ %3461, %3456 ], [ %3455, %3453 ]
  %3459 = getelementptr inbounds i32, ptr %9, i64 %3457
  %3460 = load i32, ptr %3459, align 4, !tbaa !5
  %3461 = mul nsw i32 %3460, %3458
  %3462 = add nsw i64 %3457, -1
  %3463 = trunc i64 %3457 to i32
  %3464 = icmp sgt i32 %3463, 0
  br i1 %3464, label %3456, label %3465, !llvm.loop !315

3465:                                             ; preds = %3456, %3447
  %3466 = phi i32 [ %3451, %3447 ], [ %3461, %3456 ]
  %3467 = and i64 %3416, 4294967295
  %3468 = getelementptr inbounds i32, ptr %6, i64 %3467
  %3469 = load i32, ptr %3468, align 4, !tbaa !5
  %3470 = mul nsw i32 %3469, %3466
  %3471 = add nsw i32 %3470, %3410
  %3472 = icmp sgt i64 %3408, 2
  %3473 = add nsw i64 %3409, -1
  %3474 = add i32 %3407, 1
  br i1 %3472, label %3406, label %3475, !llvm.loop !316

3475:                                             ; preds = %3465, %3401
  %3476 = phi i32 [ %3405, %3401 ], [ %3471, %3465 ]
  %3477 = sext i32 %3476 to i64
  %3478 = getelementptr inbounds i32, ptr %3068, i64 %3477
  %3479 = load i32, ptr %3478, align 4, !tbaa !5
  %3480 = sext i32 %3479 to i64
  %3481 = mul nsw i64 %3480, %3480
  %3482 = add nuw nsw i64 %3481, %3402
  %3483 = fadd fast double %3404, 1.000000e+00
  %3484 = add nuw nsw i32 %3403, 1
  br i1 %3395, label %3485, label %3532

3485:                                             ; preds = %3475
  %3486 = load i32, ptr %4, align 4, !tbaa !5
  %3487 = load i32, ptr %12, align 4, !tbaa !5
  %3488 = add nsw i32 %3487, -1
  %3489 = icmp slt i32 %3486, %3488
  br i1 %3489, label %3509, label %3490

3490:                                             ; preds = %3485
  %3491 = icmp eq i32 %3486, %3488
  br i1 %3491, label %3492, label %3525

3492:                                             ; preds = %3490
  store i32 0, ptr %4, align 4, !tbaa !5
  %3493 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3493, ptr %6, align 4, !tbaa !5
  br i1 %3400, label %3532, label %3494

3494:                                             ; preds = %3492, %3519
  %3495 = phi i64 [ %3523, %3519 ], [ 1, %3492 ]
  %3496 = getelementptr inbounds i32, ptr %4, i64 %3495
  %3497 = load i32, ptr %3496, align 4, !tbaa !5
  %3498 = getelementptr inbounds i32, ptr %12, i64 %3495
  %3499 = load i32, ptr %3498, align 4, !tbaa !5
  %3500 = add nsw i32 %3499, -1
  %3501 = icmp slt i32 %3497, %3500
  br i1 %3501, label %3502, label %3517

3502:                                             ; preds = %3494
  br i1 %3489, label %3509, label %3503

3503:                                             ; preds = %3502
  %3504 = getelementptr inbounds i32, ptr %7, i64 %3495
  %3505 = load i32, ptr %3504, align 4, !tbaa !5
  %3506 = getelementptr inbounds i32, ptr %6, i64 %3495
  %3507 = load i32, ptr %3506, align 4, !tbaa !5
  %3508 = add nsw i32 %3507, %3505
  store i32 %3508, ptr %3506, align 4, !tbaa !5
  br label %3527

3509:                                             ; preds = %3485, %3502
  %3510 = phi i32 [ %3497, %3502 ], [ %3486, %3485 ]
  %3511 = phi ptr [ %3496, %3502 ], [ %4, %3485 ]
  %3512 = phi i64 [ %3495, %3502 ], [ 0, %3485 ]
  %3513 = add nsw i32 %3510, 1
  store i32 %3513, ptr %3511, align 4, !tbaa !5
  %3514 = getelementptr inbounds i32, ptr %7, i64 %3512
  %3515 = load i32, ptr %3514, align 4, !tbaa !5
  %3516 = getelementptr inbounds i32, ptr %6, i64 %3512
  br label %3527

3517:                                             ; preds = %3494
  %3518 = icmp eq i32 %3497, %3500
  br i1 %3518, label %3519, label %3525

3519:                                             ; preds = %3517
  store i32 0, ptr %3496, align 4, !tbaa !5
  %3520 = getelementptr inbounds i32, ptr %8, i64 %3495
  %3521 = load i32, ptr %3520, align 4, !tbaa !5
  %3522 = getelementptr inbounds i32, ptr %6, i64 %3495
  store i32 %3521, ptr %3522, align 4, !tbaa !5
  %3523 = add nuw nsw i64 %3495, 1
  %3524 = icmp eq i64 %3523, %3398
  br i1 %3524, label %3532, label %3494, !llvm.loop !317

3525:                                             ; preds = %3490, %3517
  store i64 %3482, ptr %3070, align 8, !tbaa !120
  %3526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 356, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

3527:                                             ; preds = %3503, %3509
  %3528 = phi ptr [ %3516, %3509 ], [ %3496, %3503 ]
  %3529 = phi i32 [ %3515, %3509 ], [ 1, %3503 ]
  %3530 = load i32, ptr %3528, align 4, !tbaa !5
  %3531 = add nsw i32 %3530, %3529
  store i32 %3531, ptr %3528, align 4, !tbaa !5
  br label %3532

3532:                                             ; preds = %3519, %3527, %3492, %3475
  %3533 = icmp eq i32 %3484, %5
  br i1 %3533, label %5495, label %3401, !llvm.loop !318

3534:                                             ; preds = %3384, %3670
  %3535 = phi i64 [ 0, %3384 ], [ %3618, %3670 ]
  %3536 = phi i32 [ 0, %3384 ], [ %3619, %3670 ]
  %3537 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3385, label %3538, label %3607

3538:                                             ; preds = %3534, %3597
  %3539 = phi i32 [ %3606, %3597 ], [ 0, %3534 ]
  %3540 = phi i64 [ %3548, %3597 ], [ %3389, %3534 ]
  %3541 = phi i64 [ %3605, %3597 ], [ %3388, %3534 ]
  %3542 = phi i32 [ %3603, %3597 ], [ %3537, %3534 ]
  %3543 = sub i32 %3387, %3539
  %3544 = tail call i32 @llvm.smin.i32(i32 %3543, i32 0)
  %3545 = sub i32 %3543, %3544
  %3546 = zext i32 %3545 to i64
  %3547 = add nuw nsw i64 %3546, 1
  %3548 = add nsw i64 %3540, -1
  %3549 = icmp ult i32 %3545, 31
  br i1 %3549, label %3585, label %3550

3550:                                             ; preds = %3538
  %3551 = and i64 %3547, 8589934560
  %3552 = sub i64 %3541, %3551
  br label %3553

3553:                                             ; preds = %3553, %3550
  %3554 = phi i64 [ 0, %3550 ], [ %3577, %3553 ]
  %3555 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3550 ], [ %3573, %3553 ]
  %3556 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3550 ], [ %3574, %3553 ]
  %3557 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3550 ], [ %3575, %3553 ]
  %3558 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3550 ], [ %3576, %3553 ]
  %3559 = sub i64 %3541, %3554
  %3560 = getelementptr inbounds i32, ptr %11, i64 %3559
  %3561 = getelementptr inbounds i32, ptr %3560, i64 -7
  %3562 = load <8 x i32>, ptr %3561, align 4, !tbaa !5
  %3563 = shufflevector <8 x i32> %3562, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3564 = getelementptr inbounds i32, ptr %3560, i64 -15
  %3565 = load <8 x i32>, ptr %3564, align 4, !tbaa !5
  %3566 = shufflevector <8 x i32> %3565, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3567 = getelementptr inbounds i32, ptr %3560, i64 -23
  %3568 = load <8 x i32>, ptr %3567, align 4, !tbaa !5
  %3569 = shufflevector <8 x i32> %3568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3570 = getelementptr inbounds i32, ptr %3560, i64 -31
  %3571 = load <8 x i32>, ptr %3570, align 4, !tbaa !5
  %3572 = shufflevector <8 x i32> %3571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3573 = mul <8 x i32> %3563, %3555
  %3574 = mul <8 x i32> %3566, %3556
  %3575 = mul <8 x i32> %3569, %3557
  %3576 = mul <8 x i32> %3572, %3558
  %3577 = add nuw i64 %3554, 32
  %3578 = icmp eq i64 %3577, %3551
  br i1 %3578, label %3579, label %3553, !llvm.loop !319

3579:                                             ; preds = %3553
  %3580 = mul <8 x i32> %3574, %3573
  %3581 = mul <8 x i32> %3575, %3580
  %3582 = mul <8 x i32> %3576, %3581
  %3583 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3582)
  %3584 = icmp eq i64 %3547, %3551
  br i1 %3584, label %3597, label %3585

3585:                                             ; preds = %3538, %3579
  %3586 = phi i64 [ %3541, %3538 ], [ %3552, %3579 ]
  %3587 = phi i32 [ 1, %3538 ], [ %3583, %3579 ]
  br label %3588

3588:                                             ; preds = %3585, %3588
  %3589 = phi i64 [ %3594, %3588 ], [ %3586, %3585 ]
  %3590 = phi i32 [ %3593, %3588 ], [ %3587, %3585 ]
  %3591 = getelementptr inbounds i32, ptr %11, i64 %3589
  %3592 = load i32, ptr %3591, align 4, !tbaa !5
  %3593 = mul nsw i32 %3592, %3590
  %3594 = add nsw i64 %3589, -1
  %3595 = trunc i64 %3589 to i32
  %3596 = icmp sgt i32 %3595, 0
  br i1 %3596, label %3588, label %3597, !llvm.loop !320

3597:                                             ; preds = %3588, %3579
  %3598 = phi i32 [ %3583, %3579 ], [ %3593, %3588 ]
  %3599 = and i64 %3548, 4294967295
  %3600 = getelementptr inbounds i32, ptr %6, i64 %3599
  %3601 = load i32, ptr %3600, align 4, !tbaa !5
  %3602 = mul nsw i32 %3601, %3598
  %3603 = add nsw i32 %3602, %3542
  %3604 = icmp sgt i64 %3540, 2
  %3605 = add nsw i64 %3541, -1
  %3606 = add i32 %3539, 1
  br i1 %3604, label %3538, label %3607, !llvm.loop !321

3607:                                             ; preds = %3597, %3534
  %3608 = phi i32 [ %3537, %3534 ], [ %3603, %3597 ]
  %3609 = icmp slt i32 %3608, %5
  br i1 %3609, label %3612, label %3610

3610:                                             ; preds = %3607
  %3611 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 356, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

3612:                                             ; preds = %3607
  %3613 = sext i32 %3608 to i64
  %3614 = getelementptr inbounds i32, ptr %3068, i64 %3613
  %3615 = load i32, ptr %3614, align 4, !tbaa !5
  %3616 = sext i32 %3615 to i64
  %3617 = mul nsw i64 %3616, %3616
  %3618 = add nuw nsw i64 %3617, %3535
  store i64 %3618, ptr %3070, align 8, !tbaa !120
  %3619 = add nuw nsw i32 %3536, 1
  br i1 %3386, label %3620, label %3670

3620:                                             ; preds = %3612
  %3621 = load i32, ptr %4, align 4, !tbaa !5
  %3622 = load i32, ptr %12, align 4, !tbaa !5
  %3623 = add nsw i32 %3622, -1
  %3624 = icmp slt i32 %3621, %3623
  br i1 %3624, label %3647, label %3625

3625:                                             ; preds = %3620
  %3626 = icmp eq i32 %3621, %3623
  br i1 %3626, label %3627, label %3663

3627:                                             ; preds = %3625
  store i32 0, ptr %4, align 4, !tbaa !5
  %3628 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3628, ptr %6, align 4, !tbaa !5
  br i1 %3391, label %3670, label %3629

3629:                                             ; preds = %3627, %3657
  %3630 = phi i64 [ %3661, %3657 ], [ 1, %3627 ]
  %3631 = getelementptr inbounds i32, ptr %4, i64 %3630
  %3632 = load i32, ptr %3631, align 4, !tbaa !5
  %3633 = getelementptr inbounds i32, ptr %12, i64 %3630
  %3634 = load i32, ptr %3633, align 4, !tbaa !5
  %3635 = add nsw i32 %3634, -1
  %3636 = icmp slt i32 %3632, %3635
  br i1 %3636, label %3637, label %3655

3637:                                             ; preds = %3629
  br i1 %3624, label %3647, label %3638

3638:                                             ; preds = %3637
  %3639 = shl i64 %3630, 32
  %3640 = add i64 %3639, -4294967296
  %3641 = ashr exact i64 %3640, 32
  %3642 = getelementptr inbounds i32, ptr %7, i64 %3641
  %3643 = load i32, ptr %3642, align 4, !tbaa !5
  %3644 = getelementptr inbounds i32, ptr %6, i64 %3630
  %3645 = load i32, ptr %3644, align 4, !tbaa !5
  %3646 = add nsw i32 %3645, %3643
  store i32 %3646, ptr %3644, align 4, !tbaa !5
  br label %3665

3647:                                             ; preds = %3620, %3637
  %3648 = phi i32 [ %3632, %3637 ], [ %3621, %3620 ]
  %3649 = phi ptr [ %3631, %3637 ], [ %4, %3620 ]
  %3650 = phi i64 [ %3630, %3637 ], [ 0, %3620 ]
  %3651 = add nsw i32 %3648, 1
  store i32 %3651, ptr %3649, align 4, !tbaa !5
  %3652 = getelementptr inbounds i32, ptr %7, i64 %3650
  %3653 = load i32, ptr %3652, align 4, !tbaa !5
  %3654 = getelementptr inbounds i32, ptr %6, i64 %3650
  br label %3665

3655:                                             ; preds = %3629
  %3656 = icmp eq i32 %3632, %3635
  br i1 %3656, label %3657, label %3663

3657:                                             ; preds = %3655
  store i32 0, ptr %3631, align 4, !tbaa !5
  %3658 = getelementptr inbounds i32, ptr %8, i64 %3630
  %3659 = load i32, ptr %3658, align 4, !tbaa !5
  %3660 = getelementptr inbounds i32, ptr %6, i64 %3630
  store i32 %3659, ptr %3660, align 4, !tbaa !5
  %3661 = add nuw nsw i64 %3630, 1
  %3662 = icmp eq i64 %3661, %3389
  br i1 %3662, label %3670, label %3629, !llvm.loop !322

3663:                                             ; preds = %3625, %3655
  %3664 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 356, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

3665:                                             ; preds = %3638, %3647
  %3666 = phi ptr [ %3654, %3647 ], [ %3631, %3638 ]
  %3667 = phi i32 [ %3653, %3647 ], [ 1, %3638 ]
  %3668 = load i32, ptr %3666, align 4, !tbaa !5
  %3669 = add nsw i32 %3668, %3667
  store i32 %3669, ptr %3666, align 4, !tbaa !5
  br label %3670

3670:                                             ; preds = %3657, %3665, %3627, %3612
  %3671 = icmp eq i32 %3619, %5
  br i1 %3671, label %5500, label %3534, !llvm.loop !323

3672:                                             ; preds = %3076
  %3673 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 356, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

3674:                                             ; preds = %18
  %3675 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3676 = load ptr, ptr %3675, align 8, !tbaa !9
  %3677 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3678 = load ptr, ptr %3677, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3678, align 8, !tbaa !18
  %3679 = icmp eq i32 %13, 0
  br i1 %3679, label %3680, label %3684

3680:                                             ; preds = %3674
  %3681 = load i32, ptr %3676, align 4, !tbaa !5
  %3682 = sitofp i32 %3681 to double
  %3683 = fmul fast double %3682, %3682
  store double %3683, ptr %3678, align 8, !tbaa !18
  br label %5500

3684:                                             ; preds = %3674
  switch i32 %1, label %4276 [
    i32 1, label %3685
    i32 0, label %3982
  ]

3685:                                             ; preds = %3684
  %3686 = getelementptr inbounds i32, ptr %3, i64 %19
  %3687 = load i32, ptr %3686, align 4, !tbaa !5
  %3688 = icmp eq i32 %3687, 0
  %3689 = icmp sgt i32 %5, 0
  br i1 %3688, label %3699, label %3690

3690:                                             ; preds = %3685
  br i1 %3689, label %3691, label %5500

3691:                                             ; preds = %3690
  %3692 = icmp sgt i32 %13, 1
  %3693 = icmp sgt i32 %13, 0
  %3694 = add i32 %13, -2
  %3695 = zext i32 %3694 to i64
  %3696 = zext i32 %13 to i64
  %3697 = add nuw i32 %5, 1
  %3698 = icmp eq i32 %13, 1
  br label %3844

3699:                                             ; preds = %3685
  br i1 %3689, label %3700, label %5500

3700:                                             ; preds = %3699
  %3701 = icmp sgt i32 %13, 1
  %3702 = icmp sgt i32 %13, 0
  %3703 = add i32 %13, -2
  %3704 = zext i32 %3703 to i64
  %3705 = zext i32 %13 to i64
  %3706 = add nuw i32 %5, 1
  %3707 = icmp eq i32 %13, 1
  br label %3708

3708:                                             ; preds = %3700, %3842
  %3709 = phi double [ 0.000000e+00, %3700 ], [ %3792, %3842 ]
  %3710 = phi i32 [ 0, %3700 ], [ %3794, %3842 ]
  %3711 = phi double [ 0.000000e+00, %3700 ], [ %3793, %3842 ]
  %3712 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3701, label %3713, label %3782

3713:                                             ; preds = %3708, %3772
  %3714 = phi i32 [ %3781, %3772 ], [ 0, %3708 ]
  %3715 = phi i64 [ %3723, %3772 ], [ %3705, %3708 ]
  %3716 = phi i64 [ %3780, %3772 ], [ %3704, %3708 ]
  %3717 = phi i32 [ %3778, %3772 ], [ %3712, %3708 ]
  %3718 = sub i32 %3703, %3714
  %3719 = tail call i32 @llvm.smin.i32(i32 %3718, i32 0)
  %3720 = sub i32 %3718, %3719
  %3721 = zext i32 %3720 to i64
  %3722 = add nuw nsw i64 %3721, 1
  %3723 = add nsw i64 %3715, -1
  %3724 = icmp ult i32 %3720, 31
  br i1 %3724, label %3760, label %3725

3725:                                             ; preds = %3713
  %3726 = and i64 %3722, 8589934560
  %3727 = sub i64 %3716, %3726
  br label %3728

3728:                                             ; preds = %3728, %3725
  %3729 = phi i64 [ 0, %3725 ], [ %3752, %3728 ]
  %3730 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3725 ], [ %3748, %3728 ]
  %3731 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3725 ], [ %3749, %3728 ]
  %3732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3725 ], [ %3750, %3728 ]
  %3733 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3725 ], [ %3751, %3728 ]
  %3734 = sub i64 %3716, %3729
  %3735 = getelementptr inbounds i32, ptr %9, i64 %3734
  %3736 = getelementptr inbounds i32, ptr %3735, i64 -7
  %3737 = load <8 x i32>, ptr %3736, align 4, !tbaa !5
  %3738 = shufflevector <8 x i32> %3737, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3739 = getelementptr inbounds i32, ptr %3735, i64 -15
  %3740 = load <8 x i32>, ptr %3739, align 4, !tbaa !5
  %3741 = shufflevector <8 x i32> %3740, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3742 = getelementptr inbounds i32, ptr %3735, i64 -23
  %3743 = load <8 x i32>, ptr %3742, align 4, !tbaa !5
  %3744 = shufflevector <8 x i32> %3743, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3745 = getelementptr inbounds i32, ptr %3735, i64 -31
  %3746 = load <8 x i32>, ptr %3745, align 4, !tbaa !5
  %3747 = shufflevector <8 x i32> %3746, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3748 = mul <8 x i32> %3738, %3730
  %3749 = mul <8 x i32> %3741, %3731
  %3750 = mul <8 x i32> %3744, %3732
  %3751 = mul <8 x i32> %3747, %3733
  %3752 = add nuw i64 %3729, 32
  %3753 = icmp eq i64 %3752, %3726
  br i1 %3753, label %3754, label %3728, !llvm.loop !324

3754:                                             ; preds = %3728
  %3755 = mul <8 x i32> %3749, %3748
  %3756 = mul <8 x i32> %3750, %3755
  %3757 = mul <8 x i32> %3751, %3756
  %3758 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3757)
  %3759 = icmp eq i64 %3722, %3726
  br i1 %3759, label %3772, label %3760

3760:                                             ; preds = %3713, %3754
  %3761 = phi i64 [ %3716, %3713 ], [ %3727, %3754 ]
  %3762 = phi i32 [ 1, %3713 ], [ %3758, %3754 ]
  br label %3763

3763:                                             ; preds = %3760, %3763
  %3764 = phi i64 [ %3769, %3763 ], [ %3761, %3760 ]
  %3765 = phi i32 [ %3768, %3763 ], [ %3762, %3760 ]
  %3766 = getelementptr inbounds i32, ptr %9, i64 %3764
  %3767 = load i32, ptr %3766, align 4, !tbaa !5
  %3768 = mul nsw i32 %3767, %3765
  %3769 = add nsw i64 %3764, -1
  %3770 = trunc i64 %3764 to i32
  %3771 = icmp sgt i32 %3770, 0
  br i1 %3771, label %3763, label %3772, !llvm.loop !325

3772:                                             ; preds = %3763, %3754
  %3773 = phi i32 [ %3758, %3754 ], [ %3768, %3763 ]
  %3774 = and i64 %3723, 4294967295
  %3775 = getelementptr inbounds i32, ptr %6, i64 %3774
  %3776 = load i32, ptr %3775, align 4, !tbaa !5
  %3777 = mul nsw i32 %3776, %3773
  %3778 = add nsw i32 %3777, %3717
  %3779 = icmp sgt i64 %3715, 2
  %3780 = add nsw i64 %3716, -1
  %3781 = add i32 %3714, 1
  br i1 %3779, label %3713, label %3782, !llvm.loop !326

3782:                                             ; preds = %3772, %3708
  %3783 = phi i32 [ %3712, %3708 ], [ %3778, %3772 ]
  %3784 = sext i32 %3783 to i64
  %3785 = getelementptr inbounds double, ptr %2, i64 %3784
  %3786 = load double, ptr %3785, align 8, !tbaa !18
  %3787 = getelementptr inbounds i32, ptr %3676, i64 %3784
  %3788 = load i32, ptr %3787, align 4, !tbaa !5
  %3789 = sitofp i32 %3788 to double
  %3790 = fmul fast double %3786, %3789
  %3791 = fmul fast double %3790, %3790
  %3792 = fadd fast double %3791, %3709
  store double %3792, ptr %3678, align 8, !tbaa !18
  %3793 = fadd fast double %3786, %3711
  %3794 = add nuw nsw i32 %3710, 1
  br i1 %3702, label %3795, label %3842

3795:                                             ; preds = %3782
  %3796 = load i32, ptr %4, align 4, !tbaa !5
  %3797 = load i32, ptr %12, align 4, !tbaa !5
  %3798 = add nsw i32 %3797, -1
  %3799 = icmp slt i32 %3796, %3798
  br i1 %3799, label %3819, label %3800

3800:                                             ; preds = %3795
  %3801 = icmp eq i32 %3796, %3798
  br i1 %3801, label %3802, label %3835

3802:                                             ; preds = %3800
  store i32 0, ptr %4, align 4, !tbaa !5
  %3803 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3803, ptr %6, align 4, !tbaa !5
  br i1 %3707, label %3842, label %3804

3804:                                             ; preds = %3802, %3829
  %3805 = phi i64 [ %3833, %3829 ], [ 1, %3802 ]
  %3806 = getelementptr inbounds i32, ptr %4, i64 %3805
  %3807 = load i32, ptr %3806, align 4, !tbaa !5
  %3808 = getelementptr inbounds i32, ptr %12, i64 %3805
  %3809 = load i32, ptr %3808, align 4, !tbaa !5
  %3810 = add nsw i32 %3809, -1
  %3811 = icmp slt i32 %3807, %3810
  br i1 %3811, label %3812, label %3827

3812:                                             ; preds = %3804
  br i1 %3799, label %3819, label %3813

3813:                                             ; preds = %3812
  %3814 = getelementptr inbounds i32, ptr %7, i64 %3805
  %3815 = load i32, ptr %3814, align 4, !tbaa !5
  %3816 = getelementptr inbounds i32, ptr %6, i64 %3805
  %3817 = load i32, ptr %3816, align 4, !tbaa !5
  %3818 = add nsw i32 %3817, %3815
  store i32 %3818, ptr %3816, align 4, !tbaa !5
  br label %3837

3819:                                             ; preds = %3795, %3812
  %3820 = phi i32 [ %3807, %3812 ], [ %3796, %3795 ]
  %3821 = phi ptr [ %3806, %3812 ], [ %4, %3795 ]
  %3822 = phi i64 [ %3805, %3812 ], [ 0, %3795 ]
  %3823 = add nsw i32 %3820, 1
  store i32 %3823, ptr %3821, align 4, !tbaa !5
  %3824 = getelementptr inbounds i32, ptr %7, i64 %3822
  %3825 = load i32, ptr %3824, align 4, !tbaa !5
  %3826 = getelementptr inbounds i32, ptr %6, i64 %3822
  br label %3837

3827:                                             ; preds = %3804
  %3828 = icmp eq i32 %3807, %3810
  br i1 %3828, label %3829, label %3835

3829:                                             ; preds = %3827
  store i32 0, ptr %3806, align 4, !tbaa !5
  %3830 = getelementptr inbounds i32, ptr %8, i64 %3805
  %3831 = load i32, ptr %3830, align 4, !tbaa !5
  %3832 = getelementptr inbounds i32, ptr %6, i64 %3805
  store i32 %3831, ptr %3832, align 4, !tbaa !5
  %3833 = add nuw nsw i64 %3805, 1
  %3834 = icmp eq i64 %3833, %3705
  br i1 %3834, label %3842, label %3804, !llvm.loop !327

3835:                                             ; preds = %3800, %3827
  %3836 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

3837:                                             ; preds = %3813, %3819
  %3838 = phi ptr [ %3826, %3819 ], [ %3806, %3813 ]
  %3839 = phi i32 [ %3825, %3819 ], [ 1, %3813 ]
  %3840 = load i32, ptr %3838, align 4, !tbaa !5
  %3841 = add nsw i32 %3840, %3839
  store i32 %3841, ptr %3838, align 4, !tbaa !5
  br label %3842

3842:                                             ; preds = %3829, %3837, %3802, %3782
  %3843 = icmp eq i32 %3794, %5
  br i1 %3843, label %5500, label %3708, !llvm.loop !328

3844:                                             ; preds = %3691, %3980
  %3845 = phi double [ 0.000000e+00, %3691 ], [ %3928, %3980 ]
  %3846 = phi i32 [ 0, %3691 ], [ %3929, %3980 ]
  %3847 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3692, label %3848, label %3917

3848:                                             ; preds = %3844, %3907
  %3849 = phi i32 [ %3916, %3907 ], [ 0, %3844 ]
  %3850 = phi i64 [ %3858, %3907 ], [ %3696, %3844 ]
  %3851 = phi i64 [ %3915, %3907 ], [ %3695, %3844 ]
  %3852 = phi i32 [ %3913, %3907 ], [ %3847, %3844 ]
  %3853 = sub i32 %3694, %3849
  %3854 = tail call i32 @llvm.smin.i32(i32 %3853, i32 0)
  %3855 = sub i32 %3853, %3854
  %3856 = zext i32 %3855 to i64
  %3857 = add nuw nsw i64 %3856, 1
  %3858 = add nsw i64 %3850, -1
  %3859 = icmp ult i32 %3855, 31
  br i1 %3859, label %3895, label %3860

3860:                                             ; preds = %3848
  %3861 = and i64 %3857, 8589934560
  %3862 = sub i64 %3851, %3861
  br label %3863

3863:                                             ; preds = %3863, %3860
  %3864 = phi i64 [ 0, %3860 ], [ %3887, %3863 ]
  %3865 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3860 ], [ %3883, %3863 ]
  %3866 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3860 ], [ %3884, %3863 ]
  %3867 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3860 ], [ %3885, %3863 ]
  %3868 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3860 ], [ %3886, %3863 ]
  %3869 = sub i64 %3851, %3864
  %3870 = getelementptr inbounds i32, ptr %11, i64 %3869
  %3871 = getelementptr inbounds i32, ptr %3870, i64 -7
  %3872 = load <8 x i32>, ptr %3871, align 4, !tbaa !5
  %3873 = shufflevector <8 x i32> %3872, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3874 = getelementptr inbounds i32, ptr %3870, i64 -15
  %3875 = load <8 x i32>, ptr %3874, align 4, !tbaa !5
  %3876 = shufflevector <8 x i32> %3875, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3877 = getelementptr inbounds i32, ptr %3870, i64 -23
  %3878 = load <8 x i32>, ptr %3877, align 4, !tbaa !5
  %3879 = shufflevector <8 x i32> %3878, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3880 = getelementptr inbounds i32, ptr %3870, i64 -31
  %3881 = load <8 x i32>, ptr %3880, align 4, !tbaa !5
  %3882 = shufflevector <8 x i32> %3881, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3883 = mul <8 x i32> %3873, %3865
  %3884 = mul <8 x i32> %3876, %3866
  %3885 = mul <8 x i32> %3879, %3867
  %3886 = mul <8 x i32> %3882, %3868
  %3887 = add nuw i64 %3864, 32
  %3888 = icmp eq i64 %3887, %3861
  br i1 %3888, label %3889, label %3863, !llvm.loop !329

3889:                                             ; preds = %3863
  %3890 = mul <8 x i32> %3884, %3883
  %3891 = mul <8 x i32> %3885, %3890
  %3892 = mul <8 x i32> %3886, %3891
  %3893 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3892)
  %3894 = icmp eq i64 %3857, %3861
  br i1 %3894, label %3907, label %3895

3895:                                             ; preds = %3848, %3889
  %3896 = phi i64 [ %3851, %3848 ], [ %3862, %3889 ]
  %3897 = phi i32 [ 1, %3848 ], [ %3893, %3889 ]
  br label %3898

3898:                                             ; preds = %3895, %3898
  %3899 = phi i64 [ %3904, %3898 ], [ %3896, %3895 ]
  %3900 = phi i32 [ %3903, %3898 ], [ %3897, %3895 ]
  %3901 = getelementptr inbounds i32, ptr %11, i64 %3899
  %3902 = load i32, ptr %3901, align 4, !tbaa !5
  %3903 = mul nsw i32 %3902, %3900
  %3904 = add nsw i64 %3899, -1
  %3905 = trunc i64 %3899 to i32
  %3906 = icmp sgt i32 %3905, 0
  br i1 %3906, label %3898, label %3907, !llvm.loop !330

3907:                                             ; preds = %3898, %3889
  %3908 = phi i32 [ %3893, %3889 ], [ %3903, %3898 ]
  %3909 = and i64 %3858, 4294967295
  %3910 = getelementptr inbounds i32, ptr %6, i64 %3909
  %3911 = load i32, ptr %3910, align 4, !tbaa !5
  %3912 = mul nsw i32 %3911, %3908
  %3913 = add nsw i32 %3912, %3852
  %3914 = icmp sgt i64 %3850, 2
  %3915 = add nsw i64 %3851, -1
  %3916 = add i32 %3849, 1
  br i1 %3914, label %3848, label %3917, !llvm.loop !331

3917:                                             ; preds = %3907, %3844
  %3918 = phi i32 [ %3847, %3844 ], [ %3913, %3907 ]
  %3919 = icmp slt i32 %3918, %5
  br i1 %3919, label %3922, label %3920

3920:                                             ; preds = %3917
  %3921 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

3922:                                             ; preds = %3917
  %3923 = sext i32 %3918 to i64
  %3924 = getelementptr inbounds i32, ptr %3676, i64 %3923
  %3925 = load i32, ptr %3924, align 4, !tbaa !5
  %3926 = sitofp i32 %3925 to double
  %3927 = fmul fast double %3926, %3926
  %3928 = fadd fast double %3927, %3845
  store double %3928, ptr %3678, align 8, !tbaa !18
  %3929 = add nuw nsw i32 %3846, 1
  br i1 %3693, label %3930, label %3980

3930:                                             ; preds = %3922
  %3931 = load i32, ptr %4, align 4, !tbaa !5
  %3932 = load i32, ptr %12, align 4, !tbaa !5
  %3933 = add nsw i32 %3932, -1
  %3934 = icmp slt i32 %3931, %3933
  br i1 %3934, label %3957, label %3935

3935:                                             ; preds = %3930
  %3936 = icmp eq i32 %3931, %3933
  br i1 %3936, label %3937, label %3973

3937:                                             ; preds = %3935
  store i32 0, ptr %4, align 4, !tbaa !5
  %3938 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3938, ptr %6, align 4, !tbaa !5
  br i1 %3698, label %3980, label %3939

3939:                                             ; preds = %3937, %3967
  %3940 = phi i64 [ %3971, %3967 ], [ 1, %3937 ]
  %3941 = getelementptr inbounds i32, ptr %4, i64 %3940
  %3942 = load i32, ptr %3941, align 4, !tbaa !5
  %3943 = getelementptr inbounds i32, ptr %12, i64 %3940
  %3944 = load i32, ptr %3943, align 4, !tbaa !5
  %3945 = add nsw i32 %3944, -1
  %3946 = icmp slt i32 %3942, %3945
  br i1 %3946, label %3947, label %3965

3947:                                             ; preds = %3939
  br i1 %3934, label %3957, label %3948

3948:                                             ; preds = %3947
  %3949 = shl i64 %3940, 32
  %3950 = add i64 %3949, -4294967296
  %3951 = ashr exact i64 %3950, 32
  %3952 = getelementptr inbounds i32, ptr %7, i64 %3951
  %3953 = load i32, ptr %3952, align 4, !tbaa !5
  %3954 = getelementptr inbounds i32, ptr %6, i64 %3940
  %3955 = load i32, ptr %3954, align 4, !tbaa !5
  %3956 = add nsw i32 %3955, %3953
  store i32 %3956, ptr %3954, align 4, !tbaa !5
  br label %3975

3957:                                             ; preds = %3930, %3947
  %3958 = phi i32 [ %3942, %3947 ], [ %3931, %3930 ]
  %3959 = phi ptr [ %3941, %3947 ], [ %4, %3930 ]
  %3960 = phi i64 [ %3940, %3947 ], [ 0, %3930 ]
  %3961 = add nsw i32 %3958, 1
  store i32 %3961, ptr %3959, align 4, !tbaa !5
  %3962 = getelementptr inbounds i32, ptr %7, i64 %3960
  %3963 = load i32, ptr %3962, align 4, !tbaa !5
  %3964 = getelementptr inbounds i32, ptr %6, i64 %3960
  br label %3975

3965:                                             ; preds = %3939
  %3966 = icmp eq i32 %3942, %3945
  br i1 %3966, label %3967, label %3973

3967:                                             ; preds = %3965
  store i32 0, ptr %3941, align 4, !tbaa !5
  %3968 = getelementptr inbounds i32, ptr %8, i64 %3940
  %3969 = load i32, ptr %3968, align 4, !tbaa !5
  %3970 = getelementptr inbounds i32, ptr %6, i64 %3940
  store i32 %3969, ptr %3970, align 4, !tbaa !5
  %3971 = add nuw nsw i64 %3940, 1
  %3972 = icmp eq i64 %3971, %3696
  br i1 %3972, label %3980, label %3939, !llvm.loop !332

3973:                                             ; preds = %3935, %3965
  %3974 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

3975:                                             ; preds = %3948, %3957
  %3976 = phi ptr [ %3964, %3957 ], [ %3941, %3948 ]
  %3977 = phi i32 [ %3963, %3957 ], [ 1, %3948 ]
  %3978 = load i32, ptr %3976, align 4, !tbaa !5
  %3979 = add nsw i32 %3978, %3977
  store i32 %3979, ptr %3976, align 4, !tbaa !5
  br label %3980

3980:                                             ; preds = %3967, %3975, %3937, %3922
  %3981 = icmp eq i32 %3929, %5
  br i1 %3981, label %5500, label %3844, !llvm.loop !333

3982:                                             ; preds = %3684
  %3983 = getelementptr inbounds i32, ptr %3, i64 %19
  %3984 = load i32, ptr %3983, align 4, !tbaa !5
  %3985 = icmp eq i32 %3984, 0
  %3986 = icmp sgt i32 %5, 0
  br i1 %3985, label %3996, label %3987

3987:                                             ; preds = %3982
  br i1 %3986, label %3988, label %5500

3988:                                             ; preds = %3987
  %3989 = icmp sgt i32 %13, 1
  %3990 = icmp sgt i32 %13, 0
  %3991 = add i32 %13, -2
  %3992 = zext i32 %3991 to i64
  %3993 = zext i32 %13 to i64
  %3994 = add nuw i32 %5, 1
  %3995 = icmp eq i32 %13, 1
  br label %4138

3996:                                             ; preds = %3982
  br i1 %3986, label %3997, label %5500

3997:                                             ; preds = %3996
  %3998 = icmp sgt i32 %13, 1
  %3999 = icmp sgt i32 %13, 0
  %4000 = add i32 %13, -2
  %4001 = zext i32 %4000 to i64
  %4002 = zext i32 %13 to i64
  %4003 = add nuw i32 %5, 1
  %4004 = icmp eq i32 %13, 1
  br label %4005

4005:                                             ; preds = %3997, %4136
  %4006 = phi double [ 0.000000e+00, %3997 ], [ %4086, %4136 ]
  %4007 = phi i32 [ 0, %3997 ], [ %4088, %4136 ]
  %4008 = phi double [ 0.000000e+00, %3997 ], [ %4087, %4136 ]
  %4009 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3998, label %4010, label %4079

4010:                                             ; preds = %4005, %4069
  %4011 = phi i32 [ %4078, %4069 ], [ 0, %4005 ]
  %4012 = phi i64 [ %4020, %4069 ], [ %4002, %4005 ]
  %4013 = phi i64 [ %4077, %4069 ], [ %4001, %4005 ]
  %4014 = phi i32 [ %4075, %4069 ], [ %4009, %4005 ]
  %4015 = sub i32 %4000, %4011
  %4016 = tail call i32 @llvm.smin.i32(i32 %4015, i32 0)
  %4017 = sub i32 %4015, %4016
  %4018 = zext i32 %4017 to i64
  %4019 = add nuw nsw i64 %4018, 1
  %4020 = add nsw i64 %4012, -1
  %4021 = icmp ult i32 %4017, 31
  br i1 %4021, label %4057, label %4022

4022:                                             ; preds = %4010
  %4023 = and i64 %4019, 8589934560
  %4024 = sub i64 %4013, %4023
  br label %4025

4025:                                             ; preds = %4025, %4022
  %4026 = phi i64 [ 0, %4022 ], [ %4049, %4025 ]
  %4027 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4045, %4025 ]
  %4028 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4046, %4025 ]
  %4029 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4047, %4025 ]
  %4030 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4048, %4025 ]
  %4031 = sub i64 %4013, %4026
  %4032 = getelementptr inbounds i32, ptr %9, i64 %4031
  %4033 = getelementptr inbounds i32, ptr %4032, i64 -7
  %4034 = load <8 x i32>, ptr %4033, align 4, !tbaa !5
  %4035 = shufflevector <8 x i32> %4034, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4036 = getelementptr inbounds i32, ptr %4032, i64 -15
  %4037 = load <8 x i32>, ptr %4036, align 4, !tbaa !5
  %4038 = shufflevector <8 x i32> %4037, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4039 = getelementptr inbounds i32, ptr %4032, i64 -23
  %4040 = load <8 x i32>, ptr %4039, align 4, !tbaa !5
  %4041 = shufflevector <8 x i32> %4040, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4042 = getelementptr inbounds i32, ptr %4032, i64 -31
  %4043 = load <8 x i32>, ptr %4042, align 4, !tbaa !5
  %4044 = shufflevector <8 x i32> %4043, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4045 = mul <8 x i32> %4035, %4027
  %4046 = mul <8 x i32> %4038, %4028
  %4047 = mul <8 x i32> %4041, %4029
  %4048 = mul <8 x i32> %4044, %4030
  %4049 = add nuw i64 %4026, 32
  %4050 = icmp eq i64 %4049, %4023
  br i1 %4050, label %4051, label %4025, !llvm.loop !334

4051:                                             ; preds = %4025
  %4052 = mul <8 x i32> %4046, %4045
  %4053 = mul <8 x i32> %4047, %4052
  %4054 = mul <8 x i32> %4048, %4053
  %4055 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4054)
  %4056 = icmp eq i64 %4019, %4023
  br i1 %4056, label %4069, label %4057

4057:                                             ; preds = %4010, %4051
  %4058 = phi i64 [ %4013, %4010 ], [ %4024, %4051 ]
  %4059 = phi i32 [ 1, %4010 ], [ %4055, %4051 ]
  br label %4060

4060:                                             ; preds = %4057, %4060
  %4061 = phi i64 [ %4066, %4060 ], [ %4058, %4057 ]
  %4062 = phi i32 [ %4065, %4060 ], [ %4059, %4057 ]
  %4063 = getelementptr inbounds i32, ptr %9, i64 %4061
  %4064 = load i32, ptr %4063, align 4, !tbaa !5
  %4065 = mul nsw i32 %4064, %4062
  %4066 = add nsw i64 %4061, -1
  %4067 = trunc i64 %4061 to i32
  %4068 = icmp sgt i32 %4067, 0
  br i1 %4068, label %4060, label %4069, !llvm.loop !335

4069:                                             ; preds = %4060, %4051
  %4070 = phi i32 [ %4055, %4051 ], [ %4065, %4060 ]
  %4071 = and i64 %4020, 4294967295
  %4072 = getelementptr inbounds i32, ptr %6, i64 %4071
  %4073 = load i32, ptr %4072, align 4, !tbaa !5
  %4074 = mul nsw i32 %4073, %4070
  %4075 = add nsw i32 %4074, %4014
  %4076 = icmp sgt i64 %4012, 2
  %4077 = add nsw i64 %4013, -1
  %4078 = add i32 %4011, 1
  br i1 %4076, label %4010, label %4079, !llvm.loop !336

4079:                                             ; preds = %4069, %4005
  %4080 = phi i32 [ %4009, %4005 ], [ %4075, %4069 ]
  %4081 = sext i32 %4080 to i64
  %4082 = getelementptr inbounds i32, ptr %3676, i64 %4081
  %4083 = load i32, ptr %4082, align 4, !tbaa !5
  %4084 = sitofp i32 %4083 to double
  %4085 = fmul fast double %4084, %4084
  %4086 = fadd fast double %4085, %4006
  %4087 = fadd fast double %4008, 1.000000e+00
  %4088 = add nuw nsw i32 %4007, 1
  br i1 %3999, label %4089, label %4136

4089:                                             ; preds = %4079
  %4090 = load i32, ptr %4, align 4, !tbaa !5
  %4091 = load i32, ptr %12, align 4, !tbaa !5
  %4092 = add nsw i32 %4091, -1
  %4093 = icmp slt i32 %4090, %4092
  br i1 %4093, label %4113, label %4094

4094:                                             ; preds = %4089
  %4095 = icmp eq i32 %4090, %4092
  br i1 %4095, label %4096, label %4129

4096:                                             ; preds = %4094
  store i32 0, ptr %4, align 4, !tbaa !5
  %4097 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4097, ptr %6, align 4, !tbaa !5
  br i1 %4004, label %4136, label %4098

4098:                                             ; preds = %4096, %4123
  %4099 = phi i64 [ %4127, %4123 ], [ 1, %4096 ]
  %4100 = getelementptr inbounds i32, ptr %4, i64 %4099
  %4101 = load i32, ptr %4100, align 4, !tbaa !5
  %4102 = getelementptr inbounds i32, ptr %12, i64 %4099
  %4103 = load i32, ptr %4102, align 4, !tbaa !5
  %4104 = add nsw i32 %4103, -1
  %4105 = icmp slt i32 %4101, %4104
  br i1 %4105, label %4106, label %4121

4106:                                             ; preds = %4098
  br i1 %4093, label %4113, label %4107

4107:                                             ; preds = %4106
  %4108 = getelementptr inbounds i32, ptr %7, i64 %4099
  %4109 = load i32, ptr %4108, align 4, !tbaa !5
  %4110 = getelementptr inbounds i32, ptr %6, i64 %4099
  %4111 = load i32, ptr %4110, align 4, !tbaa !5
  %4112 = add nsw i32 %4111, %4109
  store i32 %4112, ptr %4110, align 4, !tbaa !5
  br label %4131

4113:                                             ; preds = %4089, %4106
  %4114 = phi i32 [ %4101, %4106 ], [ %4090, %4089 ]
  %4115 = phi ptr [ %4100, %4106 ], [ %4, %4089 ]
  %4116 = phi i64 [ %4099, %4106 ], [ 0, %4089 ]
  %4117 = add nsw i32 %4114, 1
  store i32 %4117, ptr %4115, align 4, !tbaa !5
  %4118 = getelementptr inbounds i32, ptr %7, i64 %4116
  %4119 = load i32, ptr %4118, align 4, !tbaa !5
  %4120 = getelementptr inbounds i32, ptr %6, i64 %4116
  br label %4131

4121:                                             ; preds = %4098
  %4122 = icmp eq i32 %4101, %4104
  br i1 %4122, label %4123, label %4129

4123:                                             ; preds = %4121
  store i32 0, ptr %4100, align 4, !tbaa !5
  %4124 = getelementptr inbounds i32, ptr %8, i64 %4099
  %4125 = load i32, ptr %4124, align 4, !tbaa !5
  %4126 = getelementptr inbounds i32, ptr %6, i64 %4099
  store i32 %4125, ptr %4126, align 4, !tbaa !5
  %4127 = add nuw nsw i64 %4099, 1
  %4128 = icmp eq i64 %4127, %4002
  br i1 %4128, label %4136, label %4098, !llvm.loop !337

4129:                                             ; preds = %4094, %4121
  store double %4086, ptr %3678, align 8, !tbaa !18
  %4130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

4131:                                             ; preds = %4107, %4113
  %4132 = phi ptr [ %4120, %4113 ], [ %4100, %4107 ]
  %4133 = phi i32 [ %4119, %4113 ], [ 1, %4107 ]
  %4134 = load i32, ptr %4132, align 4, !tbaa !5
  %4135 = add nsw i32 %4134, %4133
  store i32 %4135, ptr %4132, align 4, !tbaa !5
  br label %4136

4136:                                             ; preds = %4123, %4131, %4096, %4079
  %4137 = icmp eq i32 %4088, %5
  br i1 %4137, label %5496, label %4005, !llvm.loop !338

4138:                                             ; preds = %3988, %4274
  %4139 = phi double [ 0.000000e+00, %3988 ], [ %4222, %4274 ]
  %4140 = phi i32 [ 0, %3988 ], [ %4223, %4274 ]
  %4141 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3989, label %4142, label %4211

4142:                                             ; preds = %4138, %4201
  %4143 = phi i32 [ %4210, %4201 ], [ 0, %4138 ]
  %4144 = phi i64 [ %4152, %4201 ], [ %3993, %4138 ]
  %4145 = phi i64 [ %4209, %4201 ], [ %3992, %4138 ]
  %4146 = phi i32 [ %4207, %4201 ], [ %4141, %4138 ]
  %4147 = sub i32 %3991, %4143
  %4148 = tail call i32 @llvm.smin.i32(i32 %4147, i32 0)
  %4149 = sub i32 %4147, %4148
  %4150 = zext i32 %4149 to i64
  %4151 = add nuw nsw i64 %4150, 1
  %4152 = add nsw i64 %4144, -1
  %4153 = icmp ult i32 %4149, 31
  br i1 %4153, label %4189, label %4154

4154:                                             ; preds = %4142
  %4155 = and i64 %4151, 8589934560
  %4156 = sub i64 %4145, %4155
  br label %4157

4157:                                             ; preds = %4157, %4154
  %4158 = phi i64 [ 0, %4154 ], [ %4181, %4157 ]
  %4159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4154 ], [ %4177, %4157 ]
  %4160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4154 ], [ %4178, %4157 ]
  %4161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4154 ], [ %4179, %4157 ]
  %4162 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4154 ], [ %4180, %4157 ]
  %4163 = sub i64 %4145, %4158
  %4164 = getelementptr inbounds i32, ptr %11, i64 %4163
  %4165 = getelementptr inbounds i32, ptr %4164, i64 -7
  %4166 = load <8 x i32>, ptr %4165, align 4, !tbaa !5
  %4167 = shufflevector <8 x i32> %4166, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4168 = getelementptr inbounds i32, ptr %4164, i64 -15
  %4169 = load <8 x i32>, ptr %4168, align 4, !tbaa !5
  %4170 = shufflevector <8 x i32> %4169, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4171 = getelementptr inbounds i32, ptr %4164, i64 -23
  %4172 = load <8 x i32>, ptr %4171, align 4, !tbaa !5
  %4173 = shufflevector <8 x i32> %4172, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4174 = getelementptr inbounds i32, ptr %4164, i64 -31
  %4175 = load <8 x i32>, ptr %4174, align 4, !tbaa !5
  %4176 = shufflevector <8 x i32> %4175, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4177 = mul <8 x i32> %4167, %4159
  %4178 = mul <8 x i32> %4170, %4160
  %4179 = mul <8 x i32> %4173, %4161
  %4180 = mul <8 x i32> %4176, %4162
  %4181 = add nuw i64 %4158, 32
  %4182 = icmp eq i64 %4181, %4155
  br i1 %4182, label %4183, label %4157, !llvm.loop !339

4183:                                             ; preds = %4157
  %4184 = mul <8 x i32> %4178, %4177
  %4185 = mul <8 x i32> %4179, %4184
  %4186 = mul <8 x i32> %4180, %4185
  %4187 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4186)
  %4188 = icmp eq i64 %4151, %4155
  br i1 %4188, label %4201, label %4189

4189:                                             ; preds = %4142, %4183
  %4190 = phi i64 [ %4145, %4142 ], [ %4156, %4183 ]
  %4191 = phi i32 [ 1, %4142 ], [ %4187, %4183 ]
  br label %4192

4192:                                             ; preds = %4189, %4192
  %4193 = phi i64 [ %4198, %4192 ], [ %4190, %4189 ]
  %4194 = phi i32 [ %4197, %4192 ], [ %4191, %4189 ]
  %4195 = getelementptr inbounds i32, ptr %11, i64 %4193
  %4196 = load i32, ptr %4195, align 4, !tbaa !5
  %4197 = mul nsw i32 %4196, %4194
  %4198 = add nsw i64 %4193, -1
  %4199 = trunc i64 %4193 to i32
  %4200 = icmp sgt i32 %4199, 0
  br i1 %4200, label %4192, label %4201, !llvm.loop !340

4201:                                             ; preds = %4192, %4183
  %4202 = phi i32 [ %4187, %4183 ], [ %4197, %4192 ]
  %4203 = and i64 %4152, 4294967295
  %4204 = getelementptr inbounds i32, ptr %6, i64 %4203
  %4205 = load i32, ptr %4204, align 4, !tbaa !5
  %4206 = mul nsw i32 %4205, %4202
  %4207 = add nsw i32 %4206, %4146
  %4208 = icmp sgt i64 %4144, 2
  %4209 = add nsw i64 %4145, -1
  %4210 = add i32 %4143, 1
  br i1 %4208, label %4142, label %4211, !llvm.loop !341

4211:                                             ; preds = %4201, %4138
  %4212 = phi i32 [ %4141, %4138 ], [ %4207, %4201 ]
  %4213 = icmp slt i32 %4212, %5
  br i1 %4213, label %4216, label %4214

4214:                                             ; preds = %4211
  %4215 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

4216:                                             ; preds = %4211
  %4217 = sext i32 %4212 to i64
  %4218 = getelementptr inbounds i32, ptr %3676, i64 %4217
  %4219 = load i32, ptr %4218, align 4, !tbaa !5
  %4220 = sitofp i32 %4219 to double
  %4221 = fmul fast double %4220, %4220
  %4222 = fadd fast double %4221, %4139
  store double %4222, ptr %3678, align 8, !tbaa !18
  %4223 = add nuw nsw i32 %4140, 1
  br i1 %3990, label %4224, label %4274

4224:                                             ; preds = %4216
  %4225 = load i32, ptr %4, align 4, !tbaa !5
  %4226 = load i32, ptr %12, align 4, !tbaa !5
  %4227 = add nsw i32 %4226, -1
  %4228 = icmp slt i32 %4225, %4227
  br i1 %4228, label %4251, label %4229

4229:                                             ; preds = %4224
  %4230 = icmp eq i32 %4225, %4227
  br i1 %4230, label %4231, label %4267

4231:                                             ; preds = %4229
  store i32 0, ptr %4, align 4, !tbaa !5
  %4232 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4232, ptr %6, align 4, !tbaa !5
  br i1 %3995, label %4274, label %4233

4233:                                             ; preds = %4231, %4261
  %4234 = phi i64 [ %4265, %4261 ], [ 1, %4231 ]
  %4235 = getelementptr inbounds i32, ptr %4, i64 %4234
  %4236 = load i32, ptr %4235, align 4, !tbaa !5
  %4237 = getelementptr inbounds i32, ptr %12, i64 %4234
  %4238 = load i32, ptr %4237, align 4, !tbaa !5
  %4239 = add nsw i32 %4238, -1
  %4240 = icmp slt i32 %4236, %4239
  br i1 %4240, label %4241, label %4259

4241:                                             ; preds = %4233
  br i1 %4228, label %4251, label %4242

4242:                                             ; preds = %4241
  %4243 = shl i64 %4234, 32
  %4244 = add i64 %4243, -4294967296
  %4245 = ashr exact i64 %4244, 32
  %4246 = getelementptr inbounds i32, ptr %7, i64 %4245
  %4247 = load i32, ptr %4246, align 4, !tbaa !5
  %4248 = getelementptr inbounds i32, ptr %6, i64 %4234
  %4249 = load i32, ptr %4248, align 4, !tbaa !5
  %4250 = add nsw i32 %4249, %4247
  store i32 %4250, ptr %4248, align 4, !tbaa !5
  br label %4269

4251:                                             ; preds = %4224, %4241
  %4252 = phi i32 [ %4236, %4241 ], [ %4225, %4224 ]
  %4253 = phi ptr [ %4235, %4241 ], [ %4, %4224 ]
  %4254 = phi i64 [ %4234, %4241 ], [ 0, %4224 ]
  %4255 = add nsw i32 %4252, 1
  store i32 %4255, ptr %4253, align 4, !tbaa !5
  %4256 = getelementptr inbounds i32, ptr %7, i64 %4254
  %4257 = load i32, ptr %4256, align 4, !tbaa !5
  %4258 = getelementptr inbounds i32, ptr %6, i64 %4254
  br label %4269

4259:                                             ; preds = %4233
  %4260 = icmp eq i32 %4236, %4239
  br i1 %4260, label %4261, label %4267

4261:                                             ; preds = %4259
  store i32 0, ptr %4235, align 4, !tbaa !5
  %4262 = getelementptr inbounds i32, ptr %8, i64 %4234
  %4263 = load i32, ptr %4262, align 4, !tbaa !5
  %4264 = getelementptr inbounds i32, ptr %6, i64 %4234
  store i32 %4263, ptr %4264, align 4, !tbaa !5
  %4265 = add nuw nsw i64 %4234, 1
  %4266 = icmp eq i64 %4265, %3993
  br i1 %4266, label %4274, label %4233, !llvm.loop !342

4267:                                             ; preds = %4229, %4259
  %4268 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

4269:                                             ; preds = %4242, %4251
  %4270 = phi ptr [ %4258, %4251 ], [ %4235, %4242 ]
  %4271 = phi i32 [ %4257, %4251 ], [ 1, %4242 ]
  %4272 = load i32, ptr %4270, align 4, !tbaa !5
  %4273 = add nsw i32 %4272, %4271
  store i32 %4273, ptr %4270, align 4, !tbaa !5
  br label %4274

4274:                                             ; preds = %4261, %4269, %4231, %4216
  %4275 = icmp eq i32 %4223, %5
  br i1 %4275, label %5500, label %4138, !llvm.loop !343

4276:                                             ; preds = %3684
  %4277 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 360, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

4278:                                             ; preds = %18
  %4279 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4280 = load ptr, ptr %4279, align 8, !tbaa !9
  %4281 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4282 = load ptr, ptr %4281, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4282, align 4, !tbaa !162
  %4283 = icmp eq i32 %13, 0
  br i1 %4283, label %4284, label %4288

4284:                                             ; preds = %4278
  %4285 = load i32, ptr %4280, align 4, !tbaa !5
  %4286 = sitofp i32 %4285 to float
  %4287 = fmul fast float %4286, %4286
  store float %4287, ptr %4282, align 4, !tbaa !162
  br label %5500

4288:                                             ; preds = %4278
  switch i32 %1, label %4886 [
    i32 1, label %4289
    i32 0, label %4592
  ]

4289:                                             ; preds = %4288
  %4290 = getelementptr inbounds i32, ptr %3, i64 %19
  %4291 = load i32, ptr %4290, align 4, !tbaa !5
  %4292 = icmp eq i32 %4291, 0
  %4293 = icmp sgt i32 %5, 0
  br i1 %4292, label %4303, label %4294

4294:                                             ; preds = %4289
  br i1 %4293, label %4295, label %5500

4295:                                             ; preds = %4294
  %4296 = icmp sgt i32 %13, 1
  %4297 = icmp sgt i32 %13, 0
  %4298 = add i32 %13, -2
  %4299 = zext i32 %4298 to i64
  %4300 = zext i32 %13 to i64
  %4301 = add nuw i32 %5, 1
  %4302 = icmp eq i32 %13, 1
  br label %4451

4303:                                             ; preds = %4289
  br i1 %4293, label %4304, label %5500

4304:                                             ; preds = %4303
  %4305 = icmp sgt i32 %13, 1
  %4306 = icmp sgt i32 %13, 0
  %4307 = add i32 %13, -2
  %4308 = zext i32 %4307 to i64
  %4309 = zext i32 %13 to i64
  %4310 = add nuw i32 %5, 1
  %4311 = icmp eq i32 %13, 1
  br label %4312

4312:                                             ; preds = %4304, %4449
  %4313 = phi float [ 0.000000e+00, %4304 ], [ %4399, %4449 ]
  %4314 = phi i32 [ 0, %4304 ], [ %4401, %4449 ]
  %4315 = phi double [ 0.000000e+00, %4304 ], [ %4400, %4449 ]
  %4316 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4305, label %4317, label %4386

4317:                                             ; preds = %4312, %4376
  %4318 = phi i32 [ %4385, %4376 ], [ 0, %4312 ]
  %4319 = phi i64 [ %4327, %4376 ], [ %4309, %4312 ]
  %4320 = phi i64 [ %4384, %4376 ], [ %4308, %4312 ]
  %4321 = phi i32 [ %4382, %4376 ], [ %4316, %4312 ]
  %4322 = sub i32 %4307, %4318
  %4323 = tail call i32 @llvm.smin.i32(i32 %4322, i32 0)
  %4324 = sub i32 %4322, %4323
  %4325 = zext i32 %4324 to i64
  %4326 = add nuw nsw i64 %4325, 1
  %4327 = add nsw i64 %4319, -1
  %4328 = icmp ult i32 %4324, 31
  br i1 %4328, label %4364, label %4329

4329:                                             ; preds = %4317
  %4330 = and i64 %4326, 8589934560
  %4331 = sub i64 %4320, %4330
  br label %4332

4332:                                             ; preds = %4332, %4329
  %4333 = phi i64 [ 0, %4329 ], [ %4356, %4332 ]
  %4334 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4329 ], [ %4352, %4332 ]
  %4335 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4329 ], [ %4353, %4332 ]
  %4336 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4329 ], [ %4354, %4332 ]
  %4337 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4329 ], [ %4355, %4332 ]
  %4338 = sub i64 %4320, %4333
  %4339 = getelementptr inbounds i32, ptr %9, i64 %4338
  %4340 = getelementptr inbounds i32, ptr %4339, i64 -7
  %4341 = load <8 x i32>, ptr %4340, align 4, !tbaa !5
  %4342 = shufflevector <8 x i32> %4341, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4343 = getelementptr inbounds i32, ptr %4339, i64 -15
  %4344 = load <8 x i32>, ptr %4343, align 4, !tbaa !5
  %4345 = shufflevector <8 x i32> %4344, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4346 = getelementptr inbounds i32, ptr %4339, i64 -23
  %4347 = load <8 x i32>, ptr %4346, align 4, !tbaa !5
  %4348 = shufflevector <8 x i32> %4347, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4349 = getelementptr inbounds i32, ptr %4339, i64 -31
  %4350 = load <8 x i32>, ptr %4349, align 4, !tbaa !5
  %4351 = shufflevector <8 x i32> %4350, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4352 = mul <8 x i32> %4342, %4334
  %4353 = mul <8 x i32> %4345, %4335
  %4354 = mul <8 x i32> %4348, %4336
  %4355 = mul <8 x i32> %4351, %4337
  %4356 = add nuw i64 %4333, 32
  %4357 = icmp eq i64 %4356, %4330
  br i1 %4357, label %4358, label %4332, !llvm.loop !344

4358:                                             ; preds = %4332
  %4359 = mul <8 x i32> %4353, %4352
  %4360 = mul <8 x i32> %4354, %4359
  %4361 = mul <8 x i32> %4355, %4360
  %4362 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4361)
  %4363 = icmp eq i64 %4326, %4330
  br i1 %4363, label %4376, label %4364

4364:                                             ; preds = %4317, %4358
  %4365 = phi i64 [ %4320, %4317 ], [ %4331, %4358 ]
  %4366 = phi i32 [ 1, %4317 ], [ %4362, %4358 ]
  br label %4367

4367:                                             ; preds = %4364, %4367
  %4368 = phi i64 [ %4373, %4367 ], [ %4365, %4364 ]
  %4369 = phi i32 [ %4372, %4367 ], [ %4366, %4364 ]
  %4370 = getelementptr inbounds i32, ptr %9, i64 %4368
  %4371 = load i32, ptr %4370, align 4, !tbaa !5
  %4372 = mul nsw i32 %4371, %4369
  %4373 = add nsw i64 %4368, -1
  %4374 = trunc i64 %4368 to i32
  %4375 = icmp sgt i32 %4374, 0
  br i1 %4375, label %4367, label %4376, !llvm.loop !345

4376:                                             ; preds = %4367, %4358
  %4377 = phi i32 [ %4362, %4358 ], [ %4372, %4367 ]
  %4378 = and i64 %4327, 4294967295
  %4379 = getelementptr inbounds i32, ptr %6, i64 %4378
  %4380 = load i32, ptr %4379, align 4, !tbaa !5
  %4381 = mul nsw i32 %4380, %4377
  %4382 = add nsw i32 %4381, %4321
  %4383 = icmp sgt i64 %4319, 2
  %4384 = add nsw i64 %4320, -1
  %4385 = add i32 %4318, 1
  br i1 %4383, label %4317, label %4386, !llvm.loop !346

4386:                                             ; preds = %4376, %4312
  %4387 = phi i32 [ %4316, %4312 ], [ %4382, %4376 ]
  %4388 = sext i32 %4387 to i64
  %4389 = getelementptr inbounds double, ptr %2, i64 %4388
  %4390 = load double, ptr %4389, align 8, !tbaa !18
  %4391 = getelementptr inbounds i32, ptr %4280, i64 %4388
  %4392 = load i32, ptr %4391, align 4, !tbaa !5
  %4393 = sitofp i32 %4392 to float
  %4394 = fpext float %4313 to double
  %4395 = fpext float %4393 to double
  %4396 = fmul fast double %4390, %4395
  %4397 = fmul fast double %4396, %4396
  %4398 = fadd fast double %4397, %4394
  %4399 = fptrunc double %4398 to float
  %4400 = fadd fast double %4390, %4315
  %4401 = add nuw nsw i32 %4314, 1
  br i1 %4306, label %4402, label %4449

4402:                                             ; preds = %4386
  %4403 = load i32, ptr %4, align 4, !tbaa !5
  %4404 = load i32, ptr %12, align 4, !tbaa !5
  %4405 = add nsw i32 %4404, -1
  %4406 = icmp slt i32 %4403, %4405
  br i1 %4406, label %4426, label %4407

4407:                                             ; preds = %4402
  %4408 = icmp eq i32 %4403, %4405
  br i1 %4408, label %4409, label %4442

4409:                                             ; preds = %4407
  store i32 0, ptr %4, align 4, !tbaa !5
  %4410 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4410, ptr %6, align 4, !tbaa !5
  br i1 %4311, label %4449, label %4411

4411:                                             ; preds = %4409, %4436
  %4412 = phi i64 [ %4440, %4436 ], [ 1, %4409 ]
  %4413 = getelementptr inbounds i32, ptr %4, i64 %4412
  %4414 = load i32, ptr %4413, align 4, !tbaa !5
  %4415 = getelementptr inbounds i32, ptr %12, i64 %4412
  %4416 = load i32, ptr %4415, align 4, !tbaa !5
  %4417 = add nsw i32 %4416, -1
  %4418 = icmp slt i32 %4414, %4417
  br i1 %4418, label %4419, label %4434

4419:                                             ; preds = %4411
  br i1 %4406, label %4426, label %4420

4420:                                             ; preds = %4419
  %4421 = getelementptr inbounds i32, ptr %7, i64 %4412
  %4422 = load i32, ptr %4421, align 4, !tbaa !5
  %4423 = getelementptr inbounds i32, ptr %6, i64 %4412
  %4424 = load i32, ptr %4423, align 4, !tbaa !5
  %4425 = add nsw i32 %4424, %4422
  store i32 %4425, ptr %4423, align 4, !tbaa !5
  br label %4444

4426:                                             ; preds = %4402, %4419
  %4427 = phi i32 [ %4414, %4419 ], [ %4403, %4402 ]
  %4428 = phi ptr [ %4413, %4419 ], [ %4, %4402 ]
  %4429 = phi i64 [ %4412, %4419 ], [ 0, %4402 ]
  %4430 = add nsw i32 %4427, 1
  store i32 %4430, ptr %4428, align 4, !tbaa !5
  %4431 = getelementptr inbounds i32, ptr %7, i64 %4429
  %4432 = load i32, ptr %4431, align 4, !tbaa !5
  %4433 = getelementptr inbounds i32, ptr %6, i64 %4429
  br label %4444

4434:                                             ; preds = %4411
  %4435 = icmp eq i32 %4414, %4417
  br i1 %4435, label %4436, label %4442

4436:                                             ; preds = %4434
  store i32 0, ptr %4413, align 4, !tbaa !5
  %4437 = getelementptr inbounds i32, ptr %8, i64 %4412
  %4438 = load i32, ptr %4437, align 4, !tbaa !5
  %4439 = getelementptr inbounds i32, ptr %6, i64 %4412
  store i32 %4438, ptr %4439, align 4, !tbaa !5
  %4440 = add nuw nsw i64 %4412, 1
  %4441 = icmp eq i64 %4440, %4309
  br i1 %4441, label %4449, label %4411, !llvm.loop !347

4442:                                             ; preds = %4407, %4434
  store float %4399, ptr %4282, align 4, !tbaa !162
  %4443 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

4444:                                             ; preds = %4420, %4426
  %4445 = phi ptr [ %4433, %4426 ], [ %4413, %4420 ]
  %4446 = phi i32 [ %4432, %4426 ], [ 1, %4420 ]
  %4447 = load i32, ptr %4445, align 4, !tbaa !5
  %4448 = add nsw i32 %4447, %4446
  store i32 %4448, ptr %4445, align 4, !tbaa !5
  br label %4449

4449:                                             ; preds = %4436, %4444, %4409, %4386
  %4450 = icmp eq i32 %4401, %5
  br i1 %4450, label %5497, label %4312, !llvm.loop !348

4451:                                             ; preds = %4295, %4590
  %4452 = phi float [ 0.000000e+00, %4295 ], [ %4538, %4590 ]
  %4453 = phi i32 [ 0, %4295 ], [ %4539, %4590 ]
  %4454 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4296, label %4455, label %4524

4455:                                             ; preds = %4451, %4514
  %4456 = phi i32 [ %4523, %4514 ], [ 0, %4451 ]
  %4457 = phi i64 [ %4465, %4514 ], [ %4300, %4451 ]
  %4458 = phi i64 [ %4522, %4514 ], [ %4299, %4451 ]
  %4459 = phi i32 [ %4520, %4514 ], [ %4454, %4451 ]
  %4460 = sub i32 %4298, %4456
  %4461 = tail call i32 @llvm.smin.i32(i32 %4460, i32 0)
  %4462 = sub i32 %4460, %4461
  %4463 = zext i32 %4462 to i64
  %4464 = add nuw nsw i64 %4463, 1
  %4465 = add nsw i64 %4457, -1
  %4466 = icmp ult i32 %4462, 31
  br i1 %4466, label %4502, label %4467

4467:                                             ; preds = %4455
  %4468 = and i64 %4464, 8589934560
  %4469 = sub i64 %4458, %4468
  br label %4470

4470:                                             ; preds = %4470, %4467
  %4471 = phi i64 [ 0, %4467 ], [ %4494, %4470 ]
  %4472 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4467 ], [ %4490, %4470 ]
  %4473 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4467 ], [ %4491, %4470 ]
  %4474 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4467 ], [ %4492, %4470 ]
  %4475 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4467 ], [ %4493, %4470 ]
  %4476 = sub i64 %4458, %4471
  %4477 = getelementptr inbounds i32, ptr %11, i64 %4476
  %4478 = getelementptr inbounds i32, ptr %4477, i64 -7
  %4479 = load <8 x i32>, ptr %4478, align 4, !tbaa !5
  %4480 = shufflevector <8 x i32> %4479, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4481 = getelementptr inbounds i32, ptr %4477, i64 -15
  %4482 = load <8 x i32>, ptr %4481, align 4, !tbaa !5
  %4483 = shufflevector <8 x i32> %4482, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4484 = getelementptr inbounds i32, ptr %4477, i64 -23
  %4485 = load <8 x i32>, ptr %4484, align 4, !tbaa !5
  %4486 = shufflevector <8 x i32> %4485, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4487 = getelementptr inbounds i32, ptr %4477, i64 -31
  %4488 = load <8 x i32>, ptr %4487, align 4, !tbaa !5
  %4489 = shufflevector <8 x i32> %4488, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4490 = mul <8 x i32> %4480, %4472
  %4491 = mul <8 x i32> %4483, %4473
  %4492 = mul <8 x i32> %4486, %4474
  %4493 = mul <8 x i32> %4489, %4475
  %4494 = add nuw i64 %4471, 32
  %4495 = icmp eq i64 %4494, %4468
  br i1 %4495, label %4496, label %4470, !llvm.loop !349

4496:                                             ; preds = %4470
  %4497 = mul <8 x i32> %4491, %4490
  %4498 = mul <8 x i32> %4492, %4497
  %4499 = mul <8 x i32> %4493, %4498
  %4500 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4499)
  %4501 = icmp eq i64 %4464, %4468
  br i1 %4501, label %4514, label %4502

4502:                                             ; preds = %4455, %4496
  %4503 = phi i64 [ %4458, %4455 ], [ %4469, %4496 ]
  %4504 = phi i32 [ 1, %4455 ], [ %4500, %4496 ]
  br label %4505

4505:                                             ; preds = %4502, %4505
  %4506 = phi i64 [ %4511, %4505 ], [ %4503, %4502 ]
  %4507 = phi i32 [ %4510, %4505 ], [ %4504, %4502 ]
  %4508 = getelementptr inbounds i32, ptr %11, i64 %4506
  %4509 = load i32, ptr %4508, align 4, !tbaa !5
  %4510 = mul nsw i32 %4509, %4507
  %4511 = add nsw i64 %4506, -1
  %4512 = trunc i64 %4506 to i32
  %4513 = icmp sgt i32 %4512, 0
  br i1 %4513, label %4505, label %4514, !llvm.loop !350

4514:                                             ; preds = %4505, %4496
  %4515 = phi i32 [ %4500, %4496 ], [ %4510, %4505 ]
  %4516 = and i64 %4465, 4294967295
  %4517 = getelementptr inbounds i32, ptr %6, i64 %4516
  %4518 = load i32, ptr %4517, align 4, !tbaa !5
  %4519 = mul nsw i32 %4518, %4515
  %4520 = add nsw i32 %4519, %4459
  %4521 = icmp sgt i64 %4457, 2
  %4522 = add nsw i64 %4458, -1
  %4523 = add i32 %4456, 1
  br i1 %4521, label %4455, label %4524, !llvm.loop !351

4524:                                             ; preds = %4514, %4451
  %4525 = phi i32 [ %4454, %4451 ], [ %4520, %4514 ]
  %4526 = icmp slt i32 %4525, %5
  br i1 %4526, label %4529, label %4527

4527:                                             ; preds = %4524
  %4528 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

4529:                                             ; preds = %4524
  %4530 = sext i32 %4525 to i64
  %4531 = getelementptr inbounds i32, ptr %4280, i64 %4530
  %4532 = load i32, ptr %4531, align 4, !tbaa !5
  %4533 = sitofp i32 %4532 to float
  %4534 = fpext float %4452 to double
  %4535 = fpext float %4533 to double
  %4536 = fmul fast double %4535, %4535
  %4537 = fadd fast double %4536, %4534
  %4538 = fptrunc double %4537 to float
  store float %4538, ptr %4282, align 4, !tbaa !162
  %4539 = add nuw nsw i32 %4453, 1
  br i1 %4297, label %4540, label %4590

4540:                                             ; preds = %4529
  %4541 = load i32, ptr %4, align 4, !tbaa !5
  %4542 = load i32, ptr %12, align 4, !tbaa !5
  %4543 = add nsw i32 %4542, -1
  %4544 = icmp slt i32 %4541, %4543
  br i1 %4544, label %4567, label %4545

4545:                                             ; preds = %4540
  %4546 = icmp eq i32 %4541, %4543
  br i1 %4546, label %4547, label %4583

4547:                                             ; preds = %4545
  store i32 0, ptr %4, align 4, !tbaa !5
  %4548 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4548, ptr %6, align 4, !tbaa !5
  br i1 %4302, label %4590, label %4549

4549:                                             ; preds = %4547, %4577
  %4550 = phi i64 [ %4581, %4577 ], [ 1, %4547 ]
  %4551 = getelementptr inbounds i32, ptr %4, i64 %4550
  %4552 = load i32, ptr %4551, align 4, !tbaa !5
  %4553 = getelementptr inbounds i32, ptr %12, i64 %4550
  %4554 = load i32, ptr %4553, align 4, !tbaa !5
  %4555 = add nsw i32 %4554, -1
  %4556 = icmp slt i32 %4552, %4555
  br i1 %4556, label %4557, label %4575

4557:                                             ; preds = %4549
  br i1 %4544, label %4567, label %4558

4558:                                             ; preds = %4557
  %4559 = shl i64 %4550, 32
  %4560 = add i64 %4559, -4294967296
  %4561 = ashr exact i64 %4560, 32
  %4562 = getelementptr inbounds i32, ptr %7, i64 %4561
  %4563 = load i32, ptr %4562, align 4, !tbaa !5
  %4564 = getelementptr inbounds i32, ptr %6, i64 %4550
  %4565 = load i32, ptr %4564, align 4, !tbaa !5
  %4566 = add nsw i32 %4565, %4563
  store i32 %4566, ptr %4564, align 4, !tbaa !5
  br label %4585

4567:                                             ; preds = %4540, %4557
  %4568 = phi i32 [ %4552, %4557 ], [ %4541, %4540 ]
  %4569 = phi ptr [ %4551, %4557 ], [ %4, %4540 ]
  %4570 = phi i64 [ %4550, %4557 ], [ 0, %4540 ]
  %4571 = add nsw i32 %4568, 1
  store i32 %4571, ptr %4569, align 4, !tbaa !5
  %4572 = getelementptr inbounds i32, ptr %7, i64 %4570
  %4573 = load i32, ptr %4572, align 4, !tbaa !5
  %4574 = getelementptr inbounds i32, ptr %6, i64 %4570
  br label %4585

4575:                                             ; preds = %4549
  %4576 = icmp eq i32 %4552, %4555
  br i1 %4576, label %4577, label %4583

4577:                                             ; preds = %4575
  store i32 0, ptr %4551, align 4, !tbaa !5
  %4578 = getelementptr inbounds i32, ptr %8, i64 %4550
  %4579 = load i32, ptr %4578, align 4, !tbaa !5
  %4580 = getelementptr inbounds i32, ptr %6, i64 %4550
  store i32 %4579, ptr %4580, align 4, !tbaa !5
  %4581 = add nuw nsw i64 %4550, 1
  %4582 = icmp eq i64 %4581, %4300
  br i1 %4582, label %4590, label %4549, !llvm.loop !352

4583:                                             ; preds = %4545, %4575
  %4584 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

4585:                                             ; preds = %4558, %4567
  %4586 = phi ptr [ %4574, %4567 ], [ %4551, %4558 ]
  %4587 = phi i32 [ %4573, %4567 ], [ 1, %4558 ]
  %4588 = load i32, ptr %4586, align 4, !tbaa !5
  %4589 = add nsw i32 %4588, %4587
  store i32 %4589, ptr %4586, align 4, !tbaa !5
  br label %4590

4590:                                             ; preds = %4577, %4585, %4547, %4529
  %4591 = icmp eq i32 %4539, %5
  br i1 %4591, label %5500, label %4451, !llvm.loop !353

4592:                                             ; preds = %4288
  %4593 = getelementptr inbounds i32, ptr %3, i64 %19
  %4594 = load i32, ptr %4593, align 4, !tbaa !5
  %4595 = icmp eq i32 %4594, 0
  %4596 = icmp sgt i32 %5, 0
  br i1 %4595, label %4606, label %4597

4597:                                             ; preds = %4592
  br i1 %4596, label %4598, label %5500

4598:                                             ; preds = %4597
  %4599 = icmp sgt i32 %13, 1
  %4600 = icmp sgt i32 %13, 0
  %4601 = add i32 %13, -2
  %4602 = zext i32 %4601 to i64
  %4603 = zext i32 %13 to i64
  %4604 = add nuw i32 %5, 1
  %4605 = icmp eq i32 %13, 1
  br label %4748

4606:                                             ; preds = %4592
  br i1 %4596, label %4607, label %5500

4607:                                             ; preds = %4606
  %4608 = icmp sgt i32 %13, 1
  %4609 = icmp sgt i32 %13, 0
  %4610 = add i32 %13, -2
  %4611 = zext i32 %4610 to i64
  %4612 = zext i32 %13 to i64
  %4613 = add nuw i32 %5, 1
  %4614 = icmp eq i32 %13, 1
  br label %4615

4615:                                             ; preds = %4607, %4746
  %4616 = phi float [ 0.000000e+00, %4607 ], [ %4696, %4746 ]
  %4617 = phi i32 [ 0, %4607 ], [ %4698, %4746 ]
  %4618 = phi double [ 0.000000e+00, %4607 ], [ %4697, %4746 ]
  %4619 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4608, label %4620, label %4689

4620:                                             ; preds = %4615, %4679
  %4621 = phi i32 [ %4688, %4679 ], [ 0, %4615 ]
  %4622 = phi i64 [ %4630, %4679 ], [ %4612, %4615 ]
  %4623 = phi i64 [ %4687, %4679 ], [ %4611, %4615 ]
  %4624 = phi i32 [ %4685, %4679 ], [ %4619, %4615 ]
  %4625 = sub i32 %4610, %4621
  %4626 = tail call i32 @llvm.smin.i32(i32 %4625, i32 0)
  %4627 = sub i32 %4625, %4626
  %4628 = zext i32 %4627 to i64
  %4629 = add nuw nsw i64 %4628, 1
  %4630 = add nsw i64 %4622, -1
  %4631 = icmp ult i32 %4627, 31
  br i1 %4631, label %4667, label %4632

4632:                                             ; preds = %4620
  %4633 = and i64 %4629, 8589934560
  %4634 = sub i64 %4623, %4633
  br label %4635

4635:                                             ; preds = %4635, %4632
  %4636 = phi i64 [ 0, %4632 ], [ %4659, %4635 ]
  %4637 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4632 ], [ %4655, %4635 ]
  %4638 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4632 ], [ %4656, %4635 ]
  %4639 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4632 ], [ %4657, %4635 ]
  %4640 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4632 ], [ %4658, %4635 ]
  %4641 = sub i64 %4623, %4636
  %4642 = getelementptr inbounds i32, ptr %9, i64 %4641
  %4643 = getelementptr inbounds i32, ptr %4642, i64 -7
  %4644 = load <8 x i32>, ptr %4643, align 4, !tbaa !5
  %4645 = shufflevector <8 x i32> %4644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4646 = getelementptr inbounds i32, ptr %4642, i64 -15
  %4647 = load <8 x i32>, ptr %4646, align 4, !tbaa !5
  %4648 = shufflevector <8 x i32> %4647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4649 = getelementptr inbounds i32, ptr %4642, i64 -23
  %4650 = load <8 x i32>, ptr %4649, align 4, !tbaa !5
  %4651 = shufflevector <8 x i32> %4650, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4652 = getelementptr inbounds i32, ptr %4642, i64 -31
  %4653 = load <8 x i32>, ptr %4652, align 4, !tbaa !5
  %4654 = shufflevector <8 x i32> %4653, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4655 = mul <8 x i32> %4645, %4637
  %4656 = mul <8 x i32> %4648, %4638
  %4657 = mul <8 x i32> %4651, %4639
  %4658 = mul <8 x i32> %4654, %4640
  %4659 = add nuw i64 %4636, 32
  %4660 = icmp eq i64 %4659, %4633
  br i1 %4660, label %4661, label %4635, !llvm.loop !354

4661:                                             ; preds = %4635
  %4662 = mul <8 x i32> %4656, %4655
  %4663 = mul <8 x i32> %4657, %4662
  %4664 = mul <8 x i32> %4658, %4663
  %4665 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4664)
  %4666 = icmp eq i64 %4629, %4633
  br i1 %4666, label %4679, label %4667

4667:                                             ; preds = %4620, %4661
  %4668 = phi i64 [ %4623, %4620 ], [ %4634, %4661 ]
  %4669 = phi i32 [ 1, %4620 ], [ %4665, %4661 ]
  br label %4670

4670:                                             ; preds = %4667, %4670
  %4671 = phi i64 [ %4676, %4670 ], [ %4668, %4667 ]
  %4672 = phi i32 [ %4675, %4670 ], [ %4669, %4667 ]
  %4673 = getelementptr inbounds i32, ptr %9, i64 %4671
  %4674 = load i32, ptr %4673, align 4, !tbaa !5
  %4675 = mul nsw i32 %4674, %4672
  %4676 = add nsw i64 %4671, -1
  %4677 = trunc i64 %4671 to i32
  %4678 = icmp sgt i32 %4677, 0
  br i1 %4678, label %4670, label %4679, !llvm.loop !355

4679:                                             ; preds = %4670, %4661
  %4680 = phi i32 [ %4665, %4661 ], [ %4675, %4670 ]
  %4681 = and i64 %4630, 4294967295
  %4682 = getelementptr inbounds i32, ptr %6, i64 %4681
  %4683 = load i32, ptr %4682, align 4, !tbaa !5
  %4684 = mul nsw i32 %4683, %4680
  %4685 = add nsw i32 %4684, %4624
  %4686 = icmp sgt i64 %4622, 2
  %4687 = add nsw i64 %4623, -1
  %4688 = add i32 %4621, 1
  br i1 %4686, label %4620, label %4689, !llvm.loop !356

4689:                                             ; preds = %4679, %4615
  %4690 = phi i32 [ %4619, %4615 ], [ %4685, %4679 ]
  %4691 = sext i32 %4690 to i64
  %4692 = getelementptr inbounds i32, ptr %4280, i64 %4691
  %4693 = load i32, ptr %4692, align 4, !tbaa !5
  %4694 = sitofp i32 %4693 to float
  %4695 = fmul fast float %4694, %4694
  %4696 = fadd fast float %4695, %4616
  %4697 = fadd fast double %4618, 1.000000e+00
  %4698 = add nuw nsw i32 %4617, 1
  br i1 %4609, label %4699, label %4746

4699:                                             ; preds = %4689
  %4700 = load i32, ptr %4, align 4, !tbaa !5
  %4701 = load i32, ptr %12, align 4, !tbaa !5
  %4702 = add nsw i32 %4701, -1
  %4703 = icmp slt i32 %4700, %4702
  br i1 %4703, label %4723, label %4704

4704:                                             ; preds = %4699
  %4705 = icmp eq i32 %4700, %4702
  br i1 %4705, label %4706, label %4739

4706:                                             ; preds = %4704
  store i32 0, ptr %4, align 4, !tbaa !5
  %4707 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4707, ptr %6, align 4, !tbaa !5
  br i1 %4614, label %4746, label %4708

4708:                                             ; preds = %4706, %4733
  %4709 = phi i64 [ %4737, %4733 ], [ 1, %4706 ]
  %4710 = getelementptr inbounds i32, ptr %4, i64 %4709
  %4711 = load i32, ptr %4710, align 4, !tbaa !5
  %4712 = getelementptr inbounds i32, ptr %12, i64 %4709
  %4713 = load i32, ptr %4712, align 4, !tbaa !5
  %4714 = add nsw i32 %4713, -1
  %4715 = icmp slt i32 %4711, %4714
  br i1 %4715, label %4716, label %4731

4716:                                             ; preds = %4708
  br i1 %4703, label %4723, label %4717

4717:                                             ; preds = %4716
  %4718 = getelementptr inbounds i32, ptr %7, i64 %4709
  %4719 = load i32, ptr %4718, align 4, !tbaa !5
  %4720 = getelementptr inbounds i32, ptr %6, i64 %4709
  %4721 = load i32, ptr %4720, align 4, !tbaa !5
  %4722 = add nsw i32 %4721, %4719
  store i32 %4722, ptr %4720, align 4, !tbaa !5
  br label %4741

4723:                                             ; preds = %4699, %4716
  %4724 = phi i32 [ %4711, %4716 ], [ %4700, %4699 ]
  %4725 = phi ptr [ %4710, %4716 ], [ %4, %4699 ]
  %4726 = phi i64 [ %4709, %4716 ], [ 0, %4699 ]
  %4727 = add nsw i32 %4724, 1
  store i32 %4727, ptr %4725, align 4, !tbaa !5
  %4728 = getelementptr inbounds i32, ptr %7, i64 %4726
  %4729 = load i32, ptr %4728, align 4, !tbaa !5
  %4730 = getelementptr inbounds i32, ptr %6, i64 %4726
  br label %4741

4731:                                             ; preds = %4708
  %4732 = icmp eq i32 %4711, %4714
  br i1 %4732, label %4733, label %4739

4733:                                             ; preds = %4731
  store i32 0, ptr %4710, align 4, !tbaa !5
  %4734 = getelementptr inbounds i32, ptr %8, i64 %4709
  %4735 = load i32, ptr %4734, align 4, !tbaa !5
  %4736 = getelementptr inbounds i32, ptr %6, i64 %4709
  store i32 %4735, ptr %4736, align 4, !tbaa !5
  %4737 = add nuw nsw i64 %4709, 1
  %4738 = icmp eq i64 %4737, %4612
  br i1 %4738, label %4746, label %4708, !llvm.loop !357

4739:                                             ; preds = %4704, %4731
  store float %4696, ptr %4282, align 4, !tbaa !162
  %4740 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

4741:                                             ; preds = %4717, %4723
  %4742 = phi ptr [ %4730, %4723 ], [ %4710, %4717 ]
  %4743 = phi i32 [ %4729, %4723 ], [ 1, %4717 ]
  %4744 = load i32, ptr %4742, align 4, !tbaa !5
  %4745 = add nsw i32 %4744, %4743
  store i32 %4745, ptr %4742, align 4, !tbaa !5
  br label %4746

4746:                                             ; preds = %4733, %4741, %4706, %4689
  %4747 = icmp eq i32 %4698, %5
  br i1 %4747, label %5498, label %4615, !llvm.loop !358

4748:                                             ; preds = %4598, %4884
  %4749 = phi float [ 0.000000e+00, %4598 ], [ %4832, %4884 ]
  %4750 = phi i32 [ 0, %4598 ], [ %4833, %4884 ]
  %4751 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4599, label %4752, label %4821

4752:                                             ; preds = %4748, %4811
  %4753 = phi i32 [ %4820, %4811 ], [ 0, %4748 ]
  %4754 = phi i64 [ %4762, %4811 ], [ %4603, %4748 ]
  %4755 = phi i64 [ %4819, %4811 ], [ %4602, %4748 ]
  %4756 = phi i32 [ %4817, %4811 ], [ %4751, %4748 ]
  %4757 = sub i32 %4601, %4753
  %4758 = tail call i32 @llvm.smin.i32(i32 %4757, i32 0)
  %4759 = sub i32 %4757, %4758
  %4760 = zext i32 %4759 to i64
  %4761 = add nuw nsw i64 %4760, 1
  %4762 = add nsw i64 %4754, -1
  %4763 = icmp ult i32 %4759, 31
  br i1 %4763, label %4799, label %4764

4764:                                             ; preds = %4752
  %4765 = and i64 %4761, 8589934560
  %4766 = sub i64 %4755, %4765
  br label %4767

4767:                                             ; preds = %4767, %4764
  %4768 = phi i64 [ 0, %4764 ], [ %4791, %4767 ]
  %4769 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4764 ], [ %4787, %4767 ]
  %4770 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4764 ], [ %4788, %4767 ]
  %4771 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4764 ], [ %4789, %4767 ]
  %4772 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4764 ], [ %4790, %4767 ]
  %4773 = sub i64 %4755, %4768
  %4774 = getelementptr inbounds i32, ptr %11, i64 %4773
  %4775 = getelementptr inbounds i32, ptr %4774, i64 -7
  %4776 = load <8 x i32>, ptr %4775, align 4, !tbaa !5
  %4777 = shufflevector <8 x i32> %4776, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4778 = getelementptr inbounds i32, ptr %4774, i64 -15
  %4779 = load <8 x i32>, ptr %4778, align 4, !tbaa !5
  %4780 = shufflevector <8 x i32> %4779, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4781 = getelementptr inbounds i32, ptr %4774, i64 -23
  %4782 = load <8 x i32>, ptr %4781, align 4, !tbaa !5
  %4783 = shufflevector <8 x i32> %4782, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4784 = getelementptr inbounds i32, ptr %4774, i64 -31
  %4785 = load <8 x i32>, ptr %4784, align 4, !tbaa !5
  %4786 = shufflevector <8 x i32> %4785, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4787 = mul <8 x i32> %4777, %4769
  %4788 = mul <8 x i32> %4780, %4770
  %4789 = mul <8 x i32> %4783, %4771
  %4790 = mul <8 x i32> %4786, %4772
  %4791 = add nuw i64 %4768, 32
  %4792 = icmp eq i64 %4791, %4765
  br i1 %4792, label %4793, label %4767, !llvm.loop !359

4793:                                             ; preds = %4767
  %4794 = mul <8 x i32> %4788, %4787
  %4795 = mul <8 x i32> %4789, %4794
  %4796 = mul <8 x i32> %4790, %4795
  %4797 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4796)
  %4798 = icmp eq i64 %4761, %4765
  br i1 %4798, label %4811, label %4799

4799:                                             ; preds = %4752, %4793
  %4800 = phi i64 [ %4755, %4752 ], [ %4766, %4793 ]
  %4801 = phi i32 [ 1, %4752 ], [ %4797, %4793 ]
  br label %4802

4802:                                             ; preds = %4799, %4802
  %4803 = phi i64 [ %4808, %4802 ], [ %4800, %4799 ]
  %4804 = phi i32 [ %4807, %4802 ], [ %4801, %4799 ]
  %4805 = getelementptr inbounds i32, ptr %11, i64 %4803
  %4806 = load i32, ptr %4805, align 4, !tbaa !5
  %4807 = mul nsw i32 %4806, %4804
  %4808 = add nsw i64 %4803, -1
  %4809 = trunc i64 %4803 to i32
  %4810 = icmp sgt i32 %4809, 0
  br i1 %4810, label %4802, label %4811, !llvm.loop !360

4811:                                             ; preds = %4802, %4793
  %4812 = phi i32 [ %4797, %4793 ], [ %4807, %4802 ]
  %4813 = and i64 %4762, 4294967295
  %4814 = getelementptr inbounds i32, ptr %6, i64 %4813
  %4815 = load i32, ptr %4814, align 4, !tbaa !5
  %4816 = mul nsw i32 %4815, %4812
  %4817 = add nsw i32 %4816, %4756
  %4818 = icmp sgt i64 %4754, 2
  %4819 = add nsw i64 %4755, -1
  %4820 = add i32 %4753, 1
  br i1 %4818, label %4752, label %4821, !llvm.loop !361

4821:                                             ; preds = %4811, %4748
  %4822 = phi i32 [ %4751, %4748 ], [ %4817, %4811 ]
  %4823 = icmp slt i32 %4822, %5
  br i1 %4823, label %4826, label %4824

4824:                                             ; preds = %4821
  %4825 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

4826:                                             ; preds = %4821
  %4827 = sext i32 %4822 to i64
  %4828 = getelementptr inbounds i32, ptr %4280, i64 %4827
  %4829 = load i32, ptr %4828, align 4, !tbaa !5
  %4830 = sitofp i32 %4829 to float
  %4831 = fmul fast float %4830, %4830
  %4832 = fadd fast float %4831, %4749
  store float %4832, ptr %4282, align 4, !tbaa !162
  %4833 = add nuw nsw i32 %4750, 1
  br i1 %4600, label %4834, label %4884

4834:                                             ; preds = %4826
  %4835 = load i32, ptr %4, align 4, !tbaa !5
  %4836 = load i32, ptr %12, align 4, !tbaa !5
  %4837 = add nsw i32 %4836, -1
  %4838 = icmp slt i32 %4835, %4837
  br i1 %4838, label %4861, label %4839

4839:                                             ; preds = %4834
  %4840 = icmp eq i32 %4835, %4837
  br i1 %4840, label %4841, label %4877

4841:                                             ; preds = %4839
  store i32 0, ptr %4, align 4, !tbaa !5
  %4842 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4842, ptr %6, align 4, !tbaa !5
  br i1 %4605, label %4884, label %4843

4843:                                             ; preds = %4841, %4871
  %4844 = phi i64 [ %4875, %4871 ], [ 1, %4841 ]
  %4845 = getelementptr inbounds i32, ptr %4, i64 %4844
  %4846 = load i32, ptr %4845, align 4, !tbaa !5
  %4847 = getelementptr inbounds i32, ptr %12, i64 %4844
  %4848 = load i32, ptr %4847, align 4, !tbaa !5
  %4849 = add nsw i32 %4848, -1
  %4850 = icmp slt i32 %4846, %4849
  br i1 %4850, label %4851, label %4869

4851:                                             ; preds = %4843
  br i1 %4838, label %4861, label %4852

4852:                                             ; preds = %4851
  %4853 = shl i64 %4844, 32
  %4854 = add i64 %4853, -4294967296
  %4855 = ashr exact i64 %4854, 32
  %4856 = getelementptr inbounds i32, ptr %7, i64 %4855
  %4857 = load i32, ptr %4856, align 4, !tbaa !5
  %4858 = getelementptr inbounds i32, ptr %6, i64 %4844
  %4859 = load i32, ptr %4858, align 4, !tbaa !5
  %4860 = add nsw i32 %4859, %4857
  store i32 %4860, ptr %4858, align 4, !tbaa !5
  br label %4879

4861:                                             ; preds = %4834, %4851
  %4862 = phi i32 [ %4846, %4851 ], [ %4835, %4834 ]
  %4863 = phi ptr [ %4845, %4851 ], [ %4, %4834 ]
  %4864 = phi i64 [ %4844, %4851 ], [ 0, %4834 ]
  %4865 = add nsw i32 %4862, 1
  store i32 %4865, ptr %4863, align 4, !tbaa !5
  %4866 = getelementptr inbounds i32, ptr %7, i64 %4864
  %4867 = load i32, ptr %4866, align 4, !tbaa !5
  %4868 = getelementptr inbounds i32, ptr %6, i64 %4864
  br label %4879

4869:                                             ; preds = %4843
  %4870 = icmp eq i32 %4846, %4849
  br i1 %4870, label %4871, label %4877

4871:                                             ; preds = %4869
  store i32 0, ptr %4845, align 4, !tbaa !5
  %4872 = getelementptr inbounds i32, ptr %8, i64 %4844
  %4873 = load i32, ptr %4872, align 4, !tbaa !5
  %4874 = getelementptr inbounds i32, ptr %6, i64 %4844
  store i32 %4873, ptr %4874, align 4, !tbaa !5
  %4875 = add nuw nsw i64 %4844, 1
  %4876 = icmp eq i64 %4875, %4603
  br i1 %4876, label %4884, label %4843, !llvm.loop !362

4877:                                             ; preds = %4839, %4869
  %4878 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

4879:                                             ; preds = %4852, %4861
  %4880 = phi ptr [ %4868, %4861 ], [ %4845, %4852 ]
  %4881 = phi i32 [ %4867, %4861 ], [ 1, %4852 ]
  %4882 = load i32, ptr %4880, align 4, !tbaa !5
  %4883 = add nsw i32 %4882, %4881
  store i32 %4883, ptr %4880, align 4, !tbaa !5
  br label %4884

4884:                                             ; preds = %4871, %4879, %4841, %4826
  %4885 = icmp eq i32 %4833, %5
  br i1 %4885, label %5500, label %4748, !llvm.loop !363

4886:                                             ; preds = %4288
  %4887 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 364, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

4888:                                             ; preds = %18
  %4889 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4890 = load ptr, ptr %4889, align 8, !tbaa !9
  %4891 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4892 = load ptr, ptr %4891, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4892, align 8, !tbaa !18
  %4893 = icmp eq i32 %13, 0
  br i1 %4893, label %4894, label %4898

4894:                                             ; preds = %4888
  %4895 = load i32, ptr %4890, align 4, !tbaa !5
  %4896 = sitofp i32 %4895 to double
  %4897 = fmul fast double %4896, %4896
  store double %4897, ptr %4892, align 8, !tbaa !18
  br label %5500

4898:                                             ; preds = %4888
  switch i32 %1, label %5490 [
    i32 1, label %4899
    i32 0, label %5196
  ]

4899:                                             ; preds = %4898
  %4900 = getelementptr inbounds i32, ptr %3, i64 %19
  %4901 = load i32, ptr %4900, align 4, !tbaa !5
  %4902 = icmp eq i32 %4901, 0
  %4903 = icmp sgt i32 %5, 0
  br i1 %4902, label %4913, label %4904

4904:                                             ; preds = %4899
  br i1 %4903, label %4905, label %5500

4905:                                             ; preds = %4904
  %4906 = icmp sgt i32 %13, 1
  %4907 = icmp sgt i32 %13, 0
  %4908 = add i32 %13, -2
  %4909 = zext i32 %4908 to i64
  %4910 = zext i32 %13 to i64
  %4911 = add nuw i32 %5, 1
  %4912 = icmp eq i32 %13, 1
  br label %5058

4913:                                             ; preds = %4899
  br i1 %4903, label %4914, label %5500

4914:                                             ; preds = %4913
  %4915 = icmp sgt i32 %13, 1
  %4916 = icmp sgt i32 %13, 0
  %4917 = add i32 %13, -2
  %4918 = zext i32 %4917 to i64
  %4919 = zext i32 %13 to i64
  %4920 = add nuw i32 %5, 1
  %4921 = icmp eq i32 %13, 1
  br label %4922

4922:                                             ; preds = %4914, %5056
  %4923 = phi double [ 0.000000e+00, %4914 ], [ %5006, %5056 ]
  %4924 = phi i32 [ 0, %4914 ], [ %5008, %5056 ]
  %4925 = phi double [ 0.000000e+00, %4914 ], [ %5007, %5056 ]
  %4926 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4915, label %4927, label %4996

4927:                                             ; preds = %4922, %4986
  %4928 = phi i32 [ %4995, %4986 ], [ 0, %4922 ]
  %4929 = phi i64 [ %4937, %4986 ], [ %4919, %4922 ]
  %4930 = phi i64 [ %4994, %4986 ], [ %4918, %4922 ]
  %4931 = phi i32 [ %4992, %4986 ], [ %4926, %4922 ]
  %4932 = sub i32 %4917, %4928
  %4933 = tail call i32 @llvm.smin.i32(i32 %4932, i32 0)
  %4934 = sub i32 %4932, %4933
  %4935 = zext i32 %4934 to i64
  %4936 = add nuw nsw i64 %4935, 1
  %4937 = add nsw i64 %4929, -1
  %4938 = icmp ult i32 %4934, 31
  br i1 %4938, label %4974, label %4939

4939:                                             ; preds = %4927
  %4940 = and i64 %4936, 8589934560
  %4941 = sub i64 %4930, %4940
  br label %4942

4942:                                             ; preds = %4942, %4939
  %4943 = phi i64 [ 0, %4939 ], [ %4966, %4942 ]
  %4944 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4939 ], [ %4962, %4942 ]
  %4945 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4939 ], [ %4963, %4942 ]
  %4946 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4939 ], [ %4964, %4942 ]
  %4947 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4939 ], [ %4965, %4942 ]
  %4948 = sub i64 %4930, %4943
  %4949 = getelementptr inbounds i32, ptr %9, i64 %4948
  %4950 = getelementptr inbounds i32, ptr %4949, i64 -7
  %4951 = load <8 x i32>, ptr %4950, align 4, !tbaa !5
  %4952 = shufflevector <8 x i32> %4951, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4953 = getelementptr inbounds i32, ptr %4949, i64 -15
  %4954 = load <8 x i32>, ptr %4953, align 4, !tbaa !5
  %4955 = shufflevector <8 x i32> %4954, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4956 = getelementptr inbounds i32, ptr %4949, i64 -23
  %4957 = load <8 x i32>, ptr %4956, align 4, !tbaa !5
  %4958 = shufflevector <8 x i32> %4957, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4959 = getelementptr inbounds i32, ptr %4949, i64 -31
  %4960 = load <8 x i32>, ptr %4959, align 4, !tbaa !5
  %4961 = shufflevector <8 x i32> %4960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4962 = mul <8 x i32> %4952, %4944
  %4963 = mul <8 x i32> %4955, %4945
  %4964 = mul <8 x i32> %4958, %4946
  %4965 = mul <8 x i32> %4961, %4947
  %4966 = add nuw i64 %4943, 32
  %4967 = icmp eq i64 %4966, %4940
  br i1 %4967, label %4968, label %4942, !llvm.loop !364

4968:                                             ; preds = %4942
  %4969 = mul <8 x i32> %4963, %4962
  %4970 = mul <8 x i32> %4964, %4969
  %4971 = mul <8 x i32> %4965, %4970
  %4972 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4971)
  %4973 = icmp eq i64 %4936, %4940
  br i1 %4973, label %4986, label %4974

4974:                                             ; preds = %4927, %4968
  %4975 = phi i64 [ %4930, %4927 ], [ %4941, %4968 ]
  %4976 = phi i32 [ 1, %4927 ], [ %4972, %4968 ]
  br label %4977

4977:                                             ; preds = %4974, %4977
  %4978 = phi i64 [ %4983, %4977 ], [ %4975, %4974 ]
  %4979 = phi i32 [ %4982, %4977 ], [ %4976, %4974 ]
  %4980 = getelementptr inbounds i32, ptr %9, i64 %4978
  %4981 = load i32, ptr %4980, align 4, !tbaa !5
  %4982 = mul nsw i32 %4981, %4979
  %4983 = add nsw i64 %4978, -1
  %4984 = trunc i64 %4978 to i32
  %4985 = icmp sgt i32 %4984, 0
  br i1 %4985, label %4977, label %4986, !llvm.loop !365

4986:                                             ; preds = %4977, %4968
  %4987 = phi i32 [ %4972, %4968 ], [ %4982, %4977 ]
  %4988 = and i64 %4937, 4294967295
  %4989 = getelementptr inbounds i32, ptr %6, i64 %4988
  %4990 = load i32, ptr %4989, align 4, !tbaa !5
  %4991 = mul nsw i32 %4990, %4987
  %4992 = add nsw i32 %4991, %4931
  %4993 = icmp sgt i64 %4929, 2
  %4994 = add nsw i64 %4930, -1
  %4995 = add i32 %4928, 1
  br i1 %4993, label %4927, label %4996, !llvm.loop !366

4996:                                             ; preds = %4986, %4922
  %4997 = phi i32 [ %4926, %4922 ], [ %4992, %4986 ]
  %4998 = sext i32 %4997 to i64
  %4999 = getelementptr inbounds double, ptr %2, i64 %4998
  %5000 = load double, ptr %4999, align 8, !tbaa !18
  %5001 = getelementptr inbounds i32, ptr %4890, i64 %4998
  %5002 = load i32, ptr %5001, align 4, !tbaa !5
  %5003 = sitofp i32 %5002 to double
  %5004 = fmul fast double %5000, %5003
  %5005 = fmul fast double %5004, %5004
  %5006 = fadd fast double %5005, %4923
  store double %5006, ptr %4892, align 8, !tbaa !18
  %5007 = fadd fast double %5000, %4925
  %5008 = add nuw nsw i32 %4924, 1
  br i1 %4916, label %5009, label %5056

5009:                                             ; preds = %4996
  %5010 = load i32, ptr %4, align 4, !tbaa !5
  %5011 = load i32, ptr %12, align 4, !tbaa !5
  %5012 = add nsw i32 %5011, -1
  %5013 = icmp slt i32 %5010, %5012
  br i1 %5013, label %5033, label %5014

5014:                                             ; preds = %5009
  %5015 = icmp eq i32 %5010, %5012
  br i1 %5015, label %5016, label %5049

5016:                                             ; preds = %5014
  store i32 0, ptr %4, align 4, !tbaa !5
  %5017 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5017, ptr %6, align 4, !tbaa !5
  br i1 %4921, label %5056, label %5018

5018:                                             ; preds = %5016, %5043
  %5019 = phi i64 [ %5047, %5043 ], [ 1, %5016 ]
  %5020 = getelementptr inbounds i32, ptr %4, i64 %5019
  %5021 = load i32, ptr %5020, align 4, !tbaa !5
  %5022 = getelementptr inbounds i32, ptr %12, i64 %5019
  %5023 = load i32, ptr %5022, align 4, !tbaa !5
  %5024 = add nsw i32 %5023, -1
  %5025 = icmp slt i32 %5021, %5024
  br i1 %5025, label %5026, label %5041

5026:                                             ; preds = %5018
  br i1 %5013, label %5033, label %5027

5027:                                             ; preds = %5026
  %5028 = getelementptr inbounds i32, ptr %7, i64 %5019
  %5029 = load i32, ptr %5028, align 4, !tbaa !5
  %5030 = getelementptr inbounds i32, ptr %6, i64 %5019
  %5031 = load i32, ptr %5030, align 4, !tbaa !5
  %5032 = add nsw i32 %5031, %5029
  store i32 %5032, ptr %5030, align 4, !tbaa !5
  br label %5051

5033:                                             ; preds = %5009, %5026
  %5034 = phi i32 [ %5021, %5026 ], [ %5010, %5009 ]
  %5035 = phi ptr [ %5020, %5026 ], [ %4, %5009 ]
  %5036 = phi i64 [ %5019, %5026 ], [ 0, %5009 ]
  %5037 = add nsw i32 %5034, 1
  store i32 %5037, ptr %5035, align 4, !tbaa !5
  %5038 = getelementptr inbounds i32, ptr %7, i64 %5036
  %5039 = load i32, ptr %5038, align 4, !tbaa !5
  %5040 = getelementptr inbounds i32, ptr %6, i64 %5036
  br label %5051

5041:                                             ; preds = %5018
  %5042 = icmp eq i32 %5021, %5024
  br i1 %5042, label %5043, label %5049

5043:                                             ; preds = %5041
  store i32 0, ptr %5020, align 4, !tbaa !5
  %5044 = getelementptr inbounds i32, ptr %8, i64 %5019
  %5045 = load i32, ptr %5044, align 4, !tbaa !5
  %5046 = getelementptr inbounds i32, ptr %6, i64 %5019
  store i32 %5045, ptr %5046, align 4, !tbaa !5
  %5047 = add nuw nsw i64 %5019, 1
  %5048 = icmp eq i64 %5047, %4919
  br i1 %5048, label %5056, label %5018, !llvm.loop !367

5049:                                             ; preds = %5014, %5041
  %5050 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 369, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

5051:                                             ; preds = %5027, %5033
  %5052 = phi ptr [ %5040, %5033 ], [ %5020, %5027 ]
  %5053 = phi i32 [ %5039, %5033 ], [ 1, %5027 ]
  %5054 = load i32, ptr %5052, align 4, !tbaa !5
  %5055 = add nsw i32 %5054, %5053
  store i32 %5055, ptr %5052, align 4, !tbaa !5
  br label %5056

5056:                                             ; preds = %5043, %5051, %5016, %4996
  %5057 = icmp eq i32 %5008, %5
  br i1 %5057, label %5500, label %4922, !llvm.loop !368

5058:                                             ; preds = %4905, %5194
  %5059 = phi double [ 0.000000e+00, %4905 ], [ %5142, %5194 ]
  %5060 = phi i32 [ 0, %4905 ], [ %5143, %5194 ]
  %5061 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4906, label %5062, label %5131

5062:                                             ; preds = %5058, %5121
  %5063 = phi i32 [ %5130, %5121 ], [ 0, %5058 ]
  %5064 = phi i64 [ %5072, %5121 ], [ %4910, %5058 ]
  %5065 = phi i64 [ %5129, %5121 ], [ %4909, %5058 ]
  %5066 = phi i32 [ %5127, %5121 ], [ %5061, %5058 ]
  %5067 = sub i32 %4908, %5063
  %5068 = tail call i32 @llvm.smin.i32(i32 %5067, i32 0)
  %5069 = sub i32 %5067, %5068
  %5070 = zext i32 %5069 to i64
  %5071 = add nuw nsw i64 %5070, 1
  %5072 = add nsw i64 %5064, -1
  %5073 = icmp ult i32 %5069, 31
  br i1 %5073, label %5109, label %5074

5074:                                             ; preds = %5062
  %5075 = and i64 %5071, 8589934560
  %5076 = sub i64 %5065, %5075
  br label %5077

5077:                                             ; preds = %5077, %5074
  %5078 = phi i64 [ 0, %5074 ], [ %5101, %5077 ]
  %5079 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5074 ], [ %5097, %5077 ]
  %5080 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5074 ], [ %5098, %5077 ]
  %5081 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5074 ], [ %5099, %5077 ]
  %5082 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5074 ], [ %5100, %5077 ]
  %5083 = sub i64 %5065, %5078
  %5084 = getelementptr inbounds i32, ptr %11, i64 %5083
  %5085 = getelementptr inbounds i32, ptr %5084, i64 -7
  %5086 = load <8 x i32>, ptr %5085, align 4, !tbaa !5
  %5087 = shufflevector <8 x i32> %5086, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5088 = getelementptr inbounds i32, ptr %5084, i64 -15
  %5089 = load <8 x i32>, ptr %5088, align 4, !tbaa !5
  %5090 = shufflevector <8 x i32> %5089, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5091 = getelementptr inbounds i32, ptr %5084, i64 -23
  %5092 = load <8 x i32>, ptr %5091, align 4, !tbaa !5
  %5093 = shufflevector <8 x i32> %5092, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5094 = getelementptr inbounds i32, ptr %5084, i64 -31
  %5095 = load <8 x i32>, ptr %5094, align 4, !tbaa !5
  %5096 = shufflevector <8 x i32> %5095, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5097 = mul <8 x i32> %5087, %5079
  %5098 = mul <8 x i32> %5090, %5080
  %5099 = mul <8 x i32> %5093, %5081
  %5100 = mul <8 x i32> %5096, %5082
  %5101 = add nuw i64 %5078, 32
  %5102 = icmp eq i64 %5101, %5075
  br i1 %5102, label %5103, label %5077, !llvm.loop !369

5103:                                             ; preds = %5077
  %5104 = mul <8 x i32> %5098, %5097
  %5105 = mul <8 x i32> %5099, %5104
  %5106 = mul <8 x i32> %5100, %5105
  %5107 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5106)
  %5108 = icmp eq i64 %5071, %5075
  br i1 %5108, label %5121, label %5109

5109:                                             ; preds = %5062, %5103
  %5110 = phi i64 [ %5065, %5062 ], [ %5076, %5103 ]
  %5111 = phi i32 [ 1, %5062 ], [ %5107, %5103 ]
  br label %5112

5112:                                             ; preds = %5109, %5112
  %5113 = phi i64 [ %5118, %5112 ], [ %5110, %5109 ]
  %5114 = phi i32 [ %5117, %5112 ], [ %5111, %5109 ]
  %5115 = getelementptr inbounds i32, ptr %11, i64 %5113
  %5116 = load i32, ptr %5115, align 4, !tbaa !5
  %5117 = mul nsw i32 %5116, %5114
  %5118 = add nsw i64 %5113, -1
  %5119 = trunc i64 %5113 to i32
  %5120 = icmp sgt i32 %5119, 0
  br i1 %5120, label %5112, label %5121, !llvm.loop !370

5121:                                             ; preds = %5112, %5103
  %5122 = phi i32 [ %5107, %5103 ], [ %5117, %5112 ]
  %5123 = and i64 %5072, 4294967295
  %5124 = getelementptr inbounds i32, ptr %6, i64 %5123
  %5125 = load i32, ptr %5124, align 4, !tbaa !5
  %5126 = mul nsw i32 %5125, %5122
  %5127 = add nsw i32 %5126, %5066
  %5128 = icmp sgt i64 %5064, 2
  %5129 = add nsw i64 %5065, -1
  %5130 = add i32 %5063, 1
  br i1 %5128, label %5062, label %5131, !llvm.loop !371

5131:                                             ; preds = %5121, %5058
  %5132 = phi i32 [ %5061, %5058 ], [ %5127, %5121 ]
  %5133 = icmp slt i32 %5132, %5
  br i1 %5133, label %5136, label %5134

5134:                                             ; preds = %5131
  %5135 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 369, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

5136:                                             ; preds = %5131
  %5137 = sext i32 %5132 to i64
  %5138 = getelementptr inbounds i32, ptr %4890, i64 %5137
  %5139 = load i32, ptr %5138, align 4, !tbaa !5
  %5140 = sitofp i32 %5139 to double
  %5141 = fmul fast double %5140, %5140
  %5142 = fadd fast double %5141, %5059
  store double %5142, ptr %4892, align 8, !tbaa !18
  %5143 = add nuw nsw i32 %5060, 1
  br i1 %4907, label %5144, label %5194

5144:                                             ; preds = %5136
  %5145 = load i32, ptr %4, align 4, !tbaa !5
  %5146 = load i32, ptr %12, align 4, !tbaa !5
  %5147 = add nsw i32 %5146, -1
  %5148 = icmp slt i32 %5145, %5147
  br i1 %5148, label %5171, label %5149

5149:                                             ; preds = %5144
  %5150 = icmp eq i32 %5145, %5147
  br i1 %5150, label %5151, label %5187

5151:                                             ; preds = %5149
  store i32 0, ptr %4, align 4, !tbaa !5
  %5152 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5152, ptr %6, align 4, !tbaa !5
  br i1 %4912, label %5194, label %5153

5153:                                             ; preds = %5151, %5181
  %5154 = phi i64 [ %5185, %5181 ], [ 1, %5151 ]
  %5155 = getelementptr inbounds i32, ptr %4, i64 %5154
  %5156 = load i32, ptr %5155, align 4, !tbaa !5
  %5157 = getelementptr inbounds i32, ptr %12, i64 %5154
  %5158 = load i32, ptr %5157, align 4, !tbaa !5
  %5159 = add nsw i32 %5158, -1
  %5160 = icmp slt i32 %5156, %5159
  br i1 %5160, label %5161, label %5179

5161:                                             ; preds = %5153
  br i1 %5148, label %5171, label %5162

5162:                                             ; preds = %5161
  %5163 = shl i64 %5154, 32
  %5164 = add i64 %5163, -4294967296
  %5165 = ashr exact i64 %5164, 32
  %5166 = getelementptr inbounds i32, ptr %7, i64 %5165
  %5167 = load i32, ptr %5166, align 4, !tbaa !5
  %5168 = getelementptr inbounds i32, ptr %6, i64 %5154
  %5169 = load i32, ptr %5168, align 4, !tbaa !5
  %5170 = add nsw i32 %5169, %5167
  store i32 %5170, ptr %5168, align 4, !tbaa !5
  br label %5189

5171:                                             ; preds = %5144, %5161
  %5172 = phi i32 [ %5156, %5161 ], [ %5145, %5144 ]
  %5173 = phi ptr [ %5155, %5161 ], [ %4, %5144 ]
  %5174 = phi i64 [ %5154, %5161 ], [ 0, %5144 ]
  %5175 = add nsw i32 %5172, 1
  store i32 %5175, ptr %5173, align 4, !tbaa !5
  %5176 = getelementptr inbounds i32, ptr %7, i64 %5174
  %5177 = load i32, ptr %5176, align 4, !tbaa !5
  %5178 = getelementptr inbounds i32, ptr %6, i64 %5174
  br label %5189

5179:                                             ; preds = %5153
  %5180 = icmp eq i32 %5156, %5159
  br i1 %5180, label %5181, label %5187

5181:                                             ; preds = %5179
  store i32 0, ptr %5155, align 4, !tbaa !5
  %5182 = getelementptr inbounds i32, ptr %8, i64 %5154
  %5183 = load i32, ptr %5182, align 4, !tbaa !5
  %5184 = getelementptr inbounds i32, ptr %6, i64 %5154
  store i32 %5183, ptr %5184, align 4, !tbaa !5
  %5185 = add nuw nsw i64 %5154, 1
  %5186 = icmp eq i64 %5185, %4910
  br i1 %5186, label %5194, label %5153, !llvm.loop !372

5187:                                             ; preds = %5149, %5179
  %5188 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 369, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

5189:                                             ; preds = %5162, %5171
  %5190 = phi ptr [ %5178, %5171 ], [ %5155, %5162 ]
  %5191 = phi i32 [ %5177, %5171 ], [ 1, %5162 ]
  %5192 = load i32, ptr %5190, align 4, !tbaa !5
  %5193 = add nsw i32 %5192, %5191
  store i32 %5193, ptr %5190, align 4, !tbaa !5
  br label %5194

5194:                                             ; preds = %5181, %5189, %5151, %5136
  %5195 = icmp eq i32 %5143, %5
  br i1 %5195, label %5500, label %5058, !llvm.loop !373

5196:                                             ; preds = %4898
  %5197 = getelementptr inbounds i32, ptr %3, i64 %19
  %5198 = load i32, ptr %5197, align 4, !tbaa !5
  %5199 = icmp eq i32 %5198, 0
  %5200 = icmp sgt i32 %5, 0
  br i1 %5199, label %5210, label %5201

5201:                                             ; preds = %5196
  br i1 %5200, label %5202, label %5500

5202:                                             ; preds = %5201
  %5203 = icmp sgt i32 %13, 1
  %5204 = icmp sgt i32 %13, 0
  %5205 = add i32 %13, -2
  %5206 = zext i32 %5205 to i64
  %5207 = zext i32 %13 to i64
  %5208 = add nuw i32 %5, 1
  %5209 = icmp eq i32 %13, 1
  br label %5352

5210:                                             ; preds = %5196
  br i1 %5200, label %5211, label %5500

5211:                                             ; preds = %5210
  %5212 = icmp sgt i32 %13, 1
  %5213 = icmp sgt i32 %13, 0
  %5214 = add i32 %13, -2
  %5215 = zext i32 %5214 to i64
  %5216 = zext i32 %13 to i64
  %5217 = add nuw i32 %5, 1
  %5218 = icmp eq i32 %13, 1
  br label %5219

5219:                                             ; preds = %5211, %5350
  %5220 = phi double [ 0.000000e+00, %5211 ], [ %5300, %5350 ]
  %5221 = phi i32 [ 0, %5211 ], [ %5302, %5350 ]
  %5222 = phi double [ 0.000000e+00, %5211 ], [ %5301, %5350 ]
  %5223 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5212, label %5224, label %5293

5224:                                             ; preds = %5219, %5283
  %5225 = phi i32 [ %5292, %5283 ], [ 0, %5219 ]
  %5226 = phi i64 [ %5234, %5283 ], [ %5216, %5219 ]
  %5227 = phi i64 [ %5291, %5283 ], [ %5215, %5219 ]
  %5228 = phi i32 [ %5289, %5283 ], [ %5223, %5219 ]
  %5229 = sub i32 %5214, %5225
  %5230 = tail call i32 @llvm.smin.i32(i32 %5229, i32 0)
  %5231 = sub i32 %5229, %5230
  %5232 = zext i32 %5231 to i64
  %5233 = add nuw nsw i64 %5232, 1
  %5234 = add nsw i64 %5226, -1
  %5235 = icmp ult i32 %5231, 31
  br i1 %5235, label %5271, label %5236

5236:                                             ; preds = %5224
  %5237 = and i64 %5233, 8589934560
  %5238 = sub i64 %5227, %5237
  br label %5239

5239:                                             ; preds = %5239, %5236
  %5240 = phi i64 [ 0, %5236 ], [ %5263, %5239 ]
  %5241 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5236 ], [ %5259, %5239 ]
  %5242 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5236 ], [ %5260, %5239 ]
  %5243 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5236 ], [ %5261, %5239 ]
  %5244 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5236 ], [ %5262, %5239 ]
  %5245 = sub i64 %5227, %5240
  %5246 = getelementptr inbounds i32, ptr %9, i64 %5245
  %5247 = getelementptr inbounds i32, ptr %5246, i64 -7
  %5248 = load <8 x i32>, ptr %5247, align 4, !tbaa !5
  %5249 = shufflevector <8 x i32> %5248, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5250 = getelementptr inbounds i32, ptr %5246, i64 -15
  %5251 = load <8 x i32>, ptr %5250, align 4, !tbaa !5
  %5252 = shufflevector <8 x i32> %5251, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5253 = getelementptr inbounds i32, ptr %5246, i64 -23
  %5254 = load <8 x i32>, ptr %5253, align 4, !tbaa !5
  %5255 = shufflevector <8 x i32> %5254, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5256 = getelementptr inbounds i32, ptr %5246, i64 -31
  %5257 = load <8 x i32>, ptr %5256, align 4, !tbaa !5
  %5258 = shufflevector <8 x i32> %5257, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5259 = mul <8 x i32> %5249, %5241
  %5260 = mul <8 x i32> %5252, %5242
  %5261 = mul <8 x i32> %5255, %5243
  %5262 = mul <8 x i32> %5258, %5244
  %5263 = add nuw i64 %5240, 32
  %5264 = icmp eq i64 %5263, %5237
  br i1 %5264, label %5265, label %5239, !llvm.loop !374

5265:                                             ; preds = %5239
  %5266 = mul <8 x i32> %5260, %5259
  %5267 = mul <8 x i32> %5261, %5266
  %5268 = mul <8 x i32> %5262, %5267
  %5269 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5268)
  %5270 = icmp eq i64 %5233, %5237
  br i1 %5270, label %5283, label %5271

5271:                                             ; preds = %5224, %5265
  %5272 = phi i64 [ %5227, %5224 ], [ %5238, %5265 ]
  %5273 = phi i32 [ 1, %5224 ], [ %5269, %5265 ]
  br label %5274

5274:                                             ; preds = %5271, %5274
  %5275 = phi i64 [ %5280, %5274 ], [ %5272, %5271 ]
  %5276 = phi i32 [ %5279, %5274 ], [ %5273, %5271 ]
  %5277 = getelementptr inbounds i32, ptr %9, i64 %5275
  %5278 = load i32, ptr %5277, align 4, !tbaa !5
  %5279 = mul nsw i32 %5278, %5276
  %5280 = add nsw i64 %5275, -1
  %5281 = trunc i64 %5275 to i32
  %5282 = icmp sgt i32 %5281, 0
  br i1 %5282, label %5274, label %5283, !llvm.loop !375

5283:                                             ; preds = %5274, %5265
  %5284 = phi i32 [ %5269, %5265 ], [ %5279, %5274 ]
  %5285 = and i64 %5234, 4294967295
  %5286 = getelementptr inbounds i32, ptr %6, i64 %5285
  %5287 = load i32, ptr %5286, align 4, !tbaa !5
  %5288 = mul nsw i32 %5287, %5284
  %5289 = add nsw i32 %5288, %5228
  %5290 = icmp sgt i64 %5226, 2
  %5291 = add nsw i64 %5227, -1
  %5292 = add i32 %5225, 1
  br i1 %5290, label %5224, label %5293, !llvm.loop !376

5293:                                             ; preds = %5283, %5219
  %5294 = phi i32 [ %5223, %5219 ], [ %5289, %5283 ]
  %5295 = sext i32 %5294 to i64
  %5296 = getelementptr inbounds i32, ptr %4890, i64 %5295
  %5297 = load i32, ptr %5296, align 4, !tbaa !5
  %5298 = sitofp i32 %5297 to double
  %5299 = fmul fast double %5298, %5298
  %5300 = fadd fast double %5299, %5220
  %5301 = fadd fast double %5222, 1.000000e+00
  %5302 = add nuw nsw i32 %5221, 1
  br i1 %5213, label %5303, label %5350

5303:                                             ; preds = %5293
  %5304 = load i32, ptr %4, align 4, !tbaa !5
  %5305 = load i32, ptr %12, align 4, !tbaa !5
  %5306 = add nsw i32 %5305, -1
  %5307 = icmp slt i32 %5304, %5306
  br i1 %5307, label %5327, label %5308

5308:                                             ; preds = %5303
  %5309 = icmp eq i32 %5304, %5306
  br i1 %5309, label %5310, label %5343

5310:                                             ; preds = %5308
  store i32 0, ptr %4, align 4, !tbaa !5
  %5311 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5311, ptr %6, align 4, !tbaa !5
  br i1 %5218, label %5350, label %5312

5312:                                             ; preds = %5310, %5337
  %5313 = phi i64 [ %5341, %5337 ], [ 1, %5310 ]
  %5314 = getelementptr inbounds i32, ptr %4, i64 %5313
  %5315 = load i32, ptr %5314, align 4, !tbaa !5
  %5316 = getelementptr inbounds i32, ptr %12, i64 %5313
  %5317 = load i32, ptr %5316, align 4, !tbaa !5
  %5318 = add nsw i32 %5317, -1
  %5319 = icmp slt i32 %5315, %5318
  br i1 %5319, label %5320, label %5335

5320:                                             ; preds = %5312
  br i1 %5307, label %5327, label %5321

5321:                                             ; preds = %5320
  %5322 = getelementptr inbounds i32, ptr %7, i64 %5313
  %5323 = load i32, ptr %5322, align 4, !tbaa !5
  %5324 = getelementptr inbounds i32, ptr %6, i64 %5313
  %5325 = load i32, ptr %5324, align 4, !tbaa !5
  %5326 = add nsw i32 %5325, %5323
  store i32 %5326, ptr %5324, align 4, !tbaa !5
  br label %5345

5327:                                             ; preds = %5303, %5320
  %5328 = phi i32 [ %5315, %5320 ], [ %5304, %5303 ]
  %5329 = phi ptr [ %5314, %5320 ], [ %4, %5303 ]
  %5330 = phi i64 [ %5313, %5320 ], [ 0, %5303 ]
  %5331 = add nsw i32 %5328, 1
  store i32 %5331, ptr %5329, align 4, !tbaa !5
  %5332 = getelementptr inbounds i32, ptr %7, i64 %5330
  %5333 = load i32, ptr %5332, align 4, !tbaa !5
  %5334 = getelementptr inbounds i32, ptr %6, i64 %5330
  br label %5345

5335:                                             ; preds = %5312
  %5336 = icmp eq i32 %5315, %5318
  br i1 %5336, label %5337, label %5343

5337:                                             ; preds = %5335
  store i32 0, ptr %5314, align 4, !tbaa !5
  %5338 = getelementptr inbounds i32, ptr %8, i64 %5313
  %5339 = load i32, ptr %5338, align 4, !tbaa !5
  %5340 = getelementptr inbounds i32, ptr %6, i64 %5313
  store i32 %5339, ptr %5340, align 4, !tbaa !5
  %5341 = add nuw nsw i64 %5313, 1
  %5342 = icmp eq i64 %5341, %5216
  br i1 %5342, label %5350, label %5312, !llvm.loop !377

5343:                                             ; preds = %5308, %5335
  store double %5300, ptr %4892, align 8, !tbaa !18
  %5344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 369, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

5345:                                             ; preds = %5321, %5327
  %5346 = phi ptr [ %5334, %5327 ], [ %5314, %5321 ]
  %5347 = phi i32 [ %5333, %5327 ], [ 1, %5321 ]
  %5348 = load i32, ptr %5346, align 4, !tbaa !5
  %5349 = add nsw i32 %5348, %5347
  store i32 %5349, ptr %5346, align 4, !tbaa !5
  br label %5350

5350:                                             ; preds = %5337, %5345, %5310, %5293
  %5351 = icmp eq i32 %5302, %5
  br i1 %5351, label %5499, label %5219, !llvm.loop !378

5352:                                             ; preds = %5202, %5488
  %5353 = phi double [ 0.000000e+00, %5202 ], [ %5436, %5488 ]
  %5354 = phi i32 [ 0, %5202 ], [ %5437, %5488 ]
  %5355 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5203, label %5356, label %5425

5356:                                             ; preds = %5352, %5415
  %5357 = phi i32 [ %5424, %5415 ], [ 0, %5352 ]
  %5358 = phi i64 [ %5366, %5415 ], [ %5207, %5352 ]
  %5359 = phi i64 [ %5423, %5415 ], [ %5206, %5352 ]
  %5360 = phi i32 [ %5421, %5415 ], [ %5355, %5352 ]
  %5361 = sub i32 %5205, %5357
  %5362 = tail call i32 @llvm.smin.i32(i32 %5361, i32 0)
  %5363 = sub i32 %5361, %5362
  %5364 = zext i32 %5363 to i64
  %5365 = add nuw nsw i64 %5364, 1
  %5366 = add nsw i64 %5358, -1
  %5367 = icmp ult i32 %5363, 31
  br i1 %5367, label %5403, label %5368

5368:                                             ; preds = %5356
  %5369 = and i64 %5365, 8589934560
  %5370 = sub i64 %5359, %5369
  br label %5371

5371:                                             ; preds = %5371, %5368
  %5372 = phi i64 [ 0, %5368 ], [ %5395, %5371 ]
  %5373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5368 ], [ %5391, %5371 ]
  %5374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5368 ], [ %5392, %5371 ]
  %5375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5368 ], [ %5393, %5371 ]
  %5376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5368 ], [ %5394, %5371 ]
  %5377 = sub i64 %5359, %5372
  %5378 = getelementptr inbounds i32, ptr %11, i64 %5377
  %5379 = getelementptr inbounds i32, ptr %5378, i64 -7
  %5380 = load <8 x i32>, ptr %5379, align 4, !tbaa !5
  %5381 = shufflevector <8 x i32> %5380, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5382 = getelementptr inbounds i32, ptr %5378, i64 -15
  %5383 = load <8 x i32>, ptr %5382, align 4, !tbaa !5
  %5384 = shufflevector <8 x i32> %5383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5385 = getelementptr inbounds i32, ptr %5378, i64 -23
  %5386 = load <8 x i32>, ptr %5385, align 4, !tbaa !5
  %5387 = shufflevector <8 x i32> %5386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5388 = getelementptr inbounds i32, ptr %5378, i64 -31
  %5389 = load <8 x i32>, ptr %5388, align 4, !tbaa !5
  %5390 = shufflevector <8 x i32> %5389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5391 = mul <8 x i32> %5381, %5373
  %5392 = mul <8 x i32> %5384, %5374
  %5393 = mul <8 x i32> %5387, %5375
  %5394 = mul <8 x i32> %5390, %5376
  %5395 = add nuw i64 %5372, 32
  %5396 = icmp eq i64 %5395, %5369
  br i1 %5396, label %5397, label %5371, !llvm.loop !379

5397:                                             ; preds = %5371
  %5398 = mul <8 x i32> %5392, %5391
  %5399 = mul <8 x i32> %5393, %5398
  %5400 = mul <8 x i32> %5394, %5399
  %5401 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5400)
  %5402 = icmp eq i64 %5365, %5369
  br i1 %5402, label %5415, label %5403

5403:                                             ; preds = %5356, %5397
  %5404 = phi i64 [ %5359, %5356 ], [ %5370, %5397 ]
  %5405 = phi i32 [ 1, %5356 ], [ %5401, %5397 ]
  br label %5406

5406:                                             ; preds = %5403, %5406
  %5407 = phi i64 [ %5412, %5406 ], [ %5404, %5403 ]
  %5408 = phi i32 [ %5411, %5406 ], [ %5405, %5403 ]
  %5409 = getelementptr inbounds i32, ptr %11, i64 %5407
  %5410 = load i32, ptr %5409, align 4, !tbaa !5
  %5411 = mul nsw i32 %5410, %5408
  %5412 = add nsw i64 %5407, -1
  %5413 = trunc i64 %5407 to i32
  %5414 = icmp sgt i32 %5413, 0
  br i1 %5414, label %5406, label %5415, !llvm.loop !380

5415:                                             ; preds = %5406, %5397
  %5416 = phi i32 [ %5401, %5397 ], [ %5411, %5406 ]
  %5417 = and i64 %5366, 4294967295
  %5418 = getelementptr inbounds i32, ptr %6, i64 %5417
  %5419 = load i32, ptr %5418, align 4, !tbaa !5
  %5420 = mul nsw i32 %5419, %5416
  %5421 = add nsw i32 %5420, %5360
  %5422 = icmp sgt i64 %5358, 2
  %5423 = add nsw i64 %5359, -1
  %5424 = add i32 %5357, 1
  br i1 %5422, label %5356, label %5425, !llvm.loop !381

5425:                                             ; preds = %5415, %5352
  %5426 = phi i32 [ %5355, %5352 ], [ %5421, %5415 ]
  %5427 = icmp slt i32 %5426, %5
  br i1 %5427, label %5430, label %5428

5428:                                             ; preds = %5425
  %5429 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 369, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

5430:                                             ; preds = %5425
  %5431 = sext i32 %5426 to i64
  %5432 = getelementptr inbounds i32, ptr %4890, i64 %5431
  %5433 = load i32, ptr %5432, align 4, !tbaa !5
  %5434 = sitofp i32 %5433 to double
  %5435 = fmul fast double %5434, %5434
  %5436 = fadd fast double %5435, %5353
  store double %5436, ptr %4892, align 8, !tbaa !18
  %5437 = add nuw nsw i32 %5354, 1
  br i1 %5204, label %5438, label %5488

5438:                                             ; preds = %5430
  %5439 = load i32, ptr %4, align 4, !tbaa !5
  %5440 = load i32, ptr %12, align 4, !tbaa !5
  %5441 = add nsw i32 %5440, -1
  %5442 = icmp slt i32 %5439, %5441
  br i1 %5442, label %5465, label %5443

5443:                                             ; preds = %5438
  %5444 = icmp eq i32 %5439, %5441
  br i1 %5444, label %5445, label %5481

5445:                                             ; preds = %5443
  store i32 0, ptr %4, align 4, !tbaa !5
  %5446 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5446, ptr %6, align 4, !tbaa !5
  br i1 %5209, label %5488, label %5447

5447:                                             ; preds = %5445, %5475
  %5448 = phi i64 [ %5479, %5475 ], [ 1, %5445 ]
  %5449 = getelementptr inbounds i32, ptr %4, i64 %5448
  %5450 = load i32, ptr %5449, align 4, !tbaa !5
  %5451 = getelementptr inbounds i32, ptr %12, i64 %5448
  %5452 = load i32, ptr %5451, align 4, !tbaa !5
  %5453 = add nsw i32 %5452, -1
  %5454 = icmp slt i32 %5450, %5453
  br i1 %5454, label %5455, label %5473

5455:                                             ; preds = %5447
  br i1 %5442, label %5465, label %5456

5456:                                             ; preds = %5455
  %5457 = shl i64 %5448, 32
  %5458 = add i64 %5457, -4294967296
  %5459 = ashr exact i64 %5458, 32
  %5460 = getelementptr inbounds i32, ptr %7, i64 %5459
  %5461 = load i32, ptr %5460, align 4, !tbaa !5
  %5462 = getelementptr inbounds i32, ptr %6, i64 %5448
  %5463 = load i32, ptr %5462, align 4, !tbaa !5
  %5464 = add nsw i32 %5463, %5461
  store i32 %5464, ptr %5462, align 4, !tbaa !5
  br label %5483

5465:                                             ; preds = %5438, %5455
  %5466 = phi i32 [ %5450, %5455 ], [ %5439, %5438 ]
  %5467 = phi ptr [ %5449, %5455 ], [ %4, %5438 ]
  %5468 = phi i64 [ %5448, %5455 ], [ 0, %5438 ]
  %5469 = add nsw i32 %5466, 1
  store i32 %5469, ptr %5467, align 4, !tbaa !5
  %5470 = getelementptr inbounds i32, ptr %7, i64 %5468
  %5471 = load i32, ptr %5470, align 4, !tbaa !5
  %5472 = getelementptr inbounds i32, ptr %6, i64 %5468
  br label %5483

5473:                                             ; preds = %5447
  %5474 = icmp eq i32 %5450, %5453
  br i1 %5474, label %5475, label %5481

5475:                                             ; preds = %5473
  store i32 0, ptr %5449, align 4, !tbaa !5
  %5476 = getelementptr inbounds i32, ptr %8, i64 %5448
  %5477 = load i32, ptr %5476, align 4, !tbaa !5
  %5478 = getelementptr inbounds i32, ptr %6, i64 %5448
  store i32 %5477, ptr %5478, align 4, !tbaa !5
  %5479 = add nuw nsw i64 %5448, 1
  %5480 = icmp eq i64 %5479, %5207
  br i1 %5480, label %5488, label %5447, !llvm.loop !382

5481:                                             ; preds = %5443, %5473
  %5482 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 369, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

5483:                                             ; preds = %5456, %5465
  %5484 = phi ptr [ %5472, %5465 ], [ %5449, %5456 ]
  %5485 = phi i32 [ %5471, %5465 ], [ 1, %5456 ]
  %5486 = load i32, ptr %5484, align 4, !tbaa !5
  %5487 = add nsw i32 %5486, %5485
  store i32 %5487, ptr %5484, align 4, !tbaa !5
  br label %5488

5488:                                             ; preds = %5475, %5483, %5445, %5430
  %5489 = icmp eq i32 %5437, %5
  br i1 %5489, label %5500, label %5352, !llvm.loop !383

5490:                                             ; preds = %4898
  %5491 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 369, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

5492:                                             ; preds = %2021
  store i16 %1971, ptr %1853, align 2, !tbaa !78
  br label %5500

5493:                                             ; preds = %2319
  store i16 %2269, ptr %1853, align 2, !tbaa !78
  br label %5500

5494:                                             ; preds = %3236
  store i64 %3186, ptr %3070, align 8, !tbaa !120
  br label %5500

5495:                                             ; preds = %3532
  store i64 %3482, ptr %3070, align 8, !tbaa !120
  br label %5500

5496:                                             ; preds = %4136
  store double %4086, ptr %3678, align 8, !tbaa !18
  br label %5500

5497:                                             ; preds = %4449
  store float %4399, ptr %4282, align 4, !tbaa !162
  br label %5500

5498:                                             ; preds = %4746
  store float %4696, ptr %4282, align 4, !tbaa !162
  br label %5500

5499:                                             ; preds = %5350
  store double %5300, ptr %4892, align 8, !tbaa !18
  br label %5500

5500:                                             ; preds = %5488, %5194, %5056, %4884, %4590, %4274, %3980, %3842, %3670, %3376, %3062, %2925, %2770, %2630, %2457, %2163, %1845, %1707, %1551, %1409, %1233, %1096, %941, %801, %628, %490, %334, %193, %5201, %5210, %5499, %4904, %4913, %4597, %4606, %5498, %4294, %4303, %5497, %3987, %3996, %5496, %3690, %3699, %3383, %3392, %5495, %3082, %3091, %5494, %2777, %2786, %2476, %2485, %2170, %2179, %5493, %1865, %1874, %5492, %1558, %1567, %1253, %1262, %948, %957, %647, %656, %341, %350, %38, %47, %4894, %5490, %4284, %4886, %3680, %4276, %3072, %3672, %2467, %3064, %1855, %2459, %1243, %1847, %638, %1235, %28, %630, %18
  %5501 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1235 ], [ 0.000000e+00, %638 ], [ 0.000000e+00, %1847 ], [ 0.000000e+00, %1243 ], [ 0.000000e+00, %2459 ], [ 0.000000e+00, %1855 ], [ 0.000000e+00, %3064 ], [ 0.000000e+00, %2467 ], [ 0.000000e+00, %3672 ], [ 0.000000e+00, %3072 ], [ 0.000000e+00, %4276 ], [ 0.000000e+00, %3680 ], [ 0.000000e+00, %4886 ], [ 0.000000e+00, %4284 ], [ 0.000000e+00, %5490 ], [ 0.000000e+00, %4894 ], [ 0.000000e+00, %47 ], [ 0.000000e+00, %38 ], [ 0.000000e+00, %350 ], [ 0.000000e+00, %341 ], [ 0.000000e+00, %656 ], [ 0.000000e+00, %647 ], [ 0.000000e+00, %957 ], [ 0.000000e+00, %948 ], [ 0.000000e+00, %1262 ], [ 0.000000e+00, %1253 ], [ 0.000000e+00, %1567 ], [ 0.000000e+00, %1558 ], [ %1972, %5492 ], [ 0.000000e+00, %1874 ], [ 0.000000e+00, %1865 ], [ %2270, %5493 ], [ 0.000000e+00, %2179 ], [ 0.000000e+00, %2170 ], [ 0.000000e+00, %2485 ], [ 0.000000e+00, %2476 ], [ 0.000000e+00, %2786 ], [ 0.000000e+00, %2777 ], [ %3187, %5494 ], [ 0.000000e+00, %3091 ], [ 0.000000e+00, %3082 ], [ %3483, %5495 ], [ 0.000000e+00, %3392 ], [ 0.000000e+00, %3383 ], [ 0.000000e+00, %3699 ], [ 0.000000e+00, %3690 ], [ %4087, %5496 ], [ 0.000000e+00, %3996 ], [ 0.000000e+00, %3987 ], [ %4400, %5497 ], [ 0.000000e+00, %4303 ], [ 0.000000e+00, %4294 ], [ %4697, %5498 ], [ 0.000000e+00, %4606 ], [ 0.000000e+00, %4597 ], [ 0.000000e+00, %4913 ], [ 0.000000e+00, %4904 ], [ %5301, %5499 ], [ 0.000000e+00, %5210 ], [ 0.000000e+00, %5201 ], [ %144, %193 ], [ 0.000000e+00, %334 ], [ %441, %490 ], [ 0.000000e+00, %628 ], [ %752, %801 ], [ 0.000000e+00, %941 ], [ %1047, %1096 ], [ 0.000000e+00, %1233 ], [ %1360, %1409 ], [ 0.000000e+00, %1551 ], [ %1658, %1707 ], [ 0.000000e+00, %1845 ], [ 0.000000e+00, %2163 ], [ 0.000000e+00, %2457 ], [ %2581, %2630 ], [ 0.000000e+00, %2770 ], [ %2876, %2925 ], [ 0.000000e+00, %3062 ], [ 0.000000e+00, %3376 ], [ 0.000000e+00, %3670 ], [ %3793, %3842 ], [ 0.000000e+00, %3980 ], [ 0.000000e+00, %4274 ], [ 0.000000e+00, %4590 ], [ 0.000000e+00, %4884 ], [ %5007, %5056 ], [ 0.000000e+00, %5194 ], [ 0.000000e+00, %5488 ]
  %5502 = phi i32 [ %10, %18 ], [ 1, %630 ], [ 1, %28 ], [ 1, %1235 ], [ 1, %638 ], [ 1, %1847 ], [ 1, %1243 ], [ 1, %2459 ], [ 1, %1855 ], [ 1, %3064 ], [ 1, %2467 ], [ 1, %3672 ], [ 1, %3072 ], [ 1, %4276 ], [ 1, %3680 ], [ 1, %4886 ], [ 1, %4284 ], [ 1, %5490 ], [ 1, %4894 ], [ 1, %47 ], [ 1, %38 ], [ 1, %350 ], [ 1, %341 ], [ 1, %656 ], [ 1, %647 ], [ 1, %957 ], [ 1, %948 ], [ 1, %1262 ], [ 1, %1253 ], [ 1, %1567 ], [ 1, %1558 ], [ %1881, %5492 ], [ 1, %1874 ], [ 1, %1865 ], [ %2186, %5493 ], [ 1, %2179 ], [ 1, %2170 ], [ 1, %2485 ], [ 1, %2476 ], [ 1, %2786 ], [ 1, %2777 ], [ %3098, %5494 ], [ 1, %3091 ], [ 1, %3082 ], [ %3399, %5495 ], [ 1, %3392 ], [ 1, %3383 ], [ 1, %3699 ], [ 1, %3690 ], [ %4003, %5496 ], [ 1, %3996 ], [ 1, %3987 ], [ %4310, %5497 ], [ 1, %4303 ], [ 1, %4294 ], [ %4613, %5498 ], [ 1, %4606 ], [ 1, %4597 ], [ 1, %4913 ], [ 1, %4904 ], [ %5217, %5499 ], [ 1, %5210 ], [ 1, %5201 ], [ %54, %193 ], [ %45, %334 ], [ %357, %490 ], [ %348, %628 ], [ %663, %801 ], [ %654, %941 ], [ %964, %1096 ], [ %955, %1233 ], [ %1269, %1409 ], [ %1260, %1551 ], [ %1574, %1707 ], [ %1565, %1845 ], [ %1872, %2163 ], [ %2177, %2457 ], [ %2492, %2630 ], [ %2483, %2770 ], [ %2793, %2925 ], [ %2784, %3062 ], [ %3089, %3376 ], [ %3390, %3670 ], [ %3706, %3842 ], [ %3697, %3980 ], [ %3994, %4274 ], [ %4301, %4590 ], [ %4604, %4884 ], [ %4920, %5056 ], [ %4911, %5194 ], [ %5208, %5488 ]
  %5503 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5502, ptr noundef nonnull @.str.5) #3
  %5504 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5501, ptr noundef nonnull @.str.6) #3
  br label %5505

5505:                                             ; preds = %5049, %5134, %5187, %5343, %5428, %5481, %4442, %4527, %4583, %4739, %4824, %4877, %3835, %3920, %3973, %4129, %4214, %4267, %3229, %3314, %3369, %3525, %3610, %3663, %2623, %2707, %2763, %2918, %3002, %3055, %2014, %2099, %2156, %2312, %2397, %2450, %1402, %1486, %1544, %1700, %1784, %1838, %794, %878, %934, %1089, %1173, %1226, %186, %270, %327, %483, %567, %621, %5500
  %5506 = phi i32 [ 0, %5500 ], [ -1, %621 ], [ -1, %567 ], [ -1, %483 ], [ -1, %327 ], [ -1, %270 ], [ -1, %186 ], [ -1, %1226 ], [ -1, %1173 ], [ -1, %1089 ], [ -1, %934 ], [ -1, %878 ], [ -1, %794 ], [ -1, %1838 ], [ -1, %1784 ], [ -1, %1700 ], [ -1, %1544 ], [ -1, %1486 ], [ -1, %1402 ], [ -1, %2450 ], [ -1, %2397 ], [ -1, %2312 ], [ -1, %2156 ], [ -1, %2099 ], [ -1, %2014 ], [ -1, %3055 ], [ -1, %3002 ], [ -1, %2918 ], [ -1, %2763 ], [ -1, %2707 ], [ -1, %2623 ], [ -1, %3663 ], [ -1, %3610 ], [ -1, %3525 ], [ -1, %3369 ], [ -1, %3314 ], [ -1, %3229 ], [ -1, %4267 ], [ -1, %4214 ], [ -1, %4129 ], [ -1, %3973 ], [ -1, %3920 ], [ -1, %3835 ], [ -1, %4877 ], [ -1, %4824 ], [ -1, %4739 ], [ -1, %4583 ], [ -1, %4527 ], [ -1, %4442 ], [ -1, %5481 ], [ -1, %5428 ], [ -1, %5343 ], [ -1, %5187 ], [ -1, %5134 ], [ -1, %5049 ]
  ret i32 %5506
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm2_INT1(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %3047 [
    i32 101, label %22
    i32 102, label %624
    i32 107, label %1231
    i32 108, label %1835
    i32 109, label %2443
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load i8, ptr %24, align 1, !tbaa !11
  %30 = mul i8 %29, %29
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %3047

31:                                               ; preds = %22
  switch i32 %1, label %622 [
    i32 1, label %32
    i32 0, label %330
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %3047

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %193

46:                                               ; preds = %32
  br i1 %36, label %47, label %3047

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %191
  %56 = phi i32 [ 0, %47 ], [ %143, %191 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %142, %191 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !384

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !385

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !386

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds i8, ptr %24, i64 %130
  %134 = load i8, ptr %133, align 1, !tbaa !11
  %135 = load i8, ptr %26, align 1, !tbaa !11
  %136 = uitofp i8 %135 to double
  %137 = uitofp i8 %134 to double
  %138 = fmul fast double %132, %137
  %139 = fmul fast double %138, %138
  %140 = fadd fast double %139, %136
  %141 = fptoui double %140 to i8
  store i8 %141, ptr %26, align 1, !tbaa !11
  %142 = fadd fast double %132, %57
  %143 = add nuw nsw i32 %56, 1
  br i1 %49, label %144, label %191

144:                                              ; preds = %128
  %145 = load i32, ptr %4, align 4, !tbaa !5
  %146 = load i32, ptr %12, align 4, !tbaa !5
  %147 = add nsw i32 %146, -1
  %148 = icmp slt i32 %145, %147
  br i1 %148, label %168, label %149

149:                                              ; preds = %144
  %150 = icmp eq i32 %145, %147
  br i1 %150, label %151, label %184

151:                                              ; preds = %149
  store i32 0, ptr %4, align 4, !tbaa !5
  %152 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %152, ptr %6, align 4, !tbaa !5
  br i1 %54, label %191, label %153

153:                                              ; preds = %151, %178
  %154 = phi i64 [ %182, %178 ], [ 1, %151 ]
  %155 = getelementptr inbounds i32, ptr %4, i64 %154
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = getelementptr inbounds i32, ptr %12, i64 %154
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = add nsw i32 %158, -1
  %160 = icmp slt i32 %156, %159
  br i1 %160, label %161, label %176

161:                                              ; preds = %153
  br i1 %148, label %168, label %162

162:                                              ; preds = %161
  %163 = getelementptr inbounds i32, ptr %7, i64 %154
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = getelementptr inbounds i32, ptr %6, i64 %154
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = add nsw i32 %166, %164
  store i32 %167, ptr %165, align 4, !tbaa !5
  br label %186

168:                                              ; preds = %144, %161
  %169 = phi i32 [ %156, %161 ], [ %145, %144 ]
  %170 = phi ptr [ %155, %161 ], [ %4, %144 ]
  %171 = phi i64 [ %154, %161 ], [ 0, %144 ]
  %172 = add nsw i32 %169, 1
  store i32 %172, ptr %170, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %7, i64 %171
  %174 = load i32, ptr %173, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %6, i64 %171
  br label %186

176:                                              ; preds = %153
  %177 = icmp eq i32 %156, %159
  br i1 %177, label %178, label %184

178:                                              ; preds = %176
  store i32 0, ptr %155, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %8, i64 %154
  %180 = load i32, ptr %179, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %6, i64 %154
  store i32 %180, ptr %181, align 4, !tbaa !5
  %182 = add nuw nsw i64 %154, 1
  %183 = icmp eq i64 %182, %52
  br i1 %183, label %191, label %153, !llvm.loop !387

184:                                              ; preds = %149, %176
  %185 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 609, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

186:                                              ; preds = %162, %168
  %187 = phi ptr [ %175, %168 ], [ %155, %162 ]
  %188 = phi i32 [ %174, %168 ], [ 1, %162 ]
  %189 = load i32, ptr %187, align 4, !tbaa !5
  %190 = add nsw i32 %189, %188
  store i32 %190, ptr %187, align 4, !tbaa !5
  br label %191

191:                                              ; preds = %178, %186, %151, %128
  %192 = icmp eq i32 %143, %5
  br i1 %192, label %3047, label %55, !llvm.loop !388

193:                                              ; preds = %38, %328
  %194 = phi i32 [ 0, %38 ], [ %277, %328 ]
  %195 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %196, label %265

196:                                              ; preds = %193, %255
  %197 = phi i32 [ %264, %255 ], [ 0, %193 ]
  %198 = phi i64 [ %206, %255 ], [ %43, %193 ]
  %199 = phi i64 [ %263, %255 ], [ %42, %193 ]
  %200 = phi i32 [ %261, %255 ], [ %195, %193 ]
  %201 = sub i32 %41, %197
  %202 = tail call i32 @llvm.smin.i32(i32 %201, i32 0)
  %203 = sub i32 %201, %202
  %204 = zext i32 %203 to i64
  %205 = add nuw nsw i64 %204, 1
  %206 = add nsw i64 %198, -1
  %207 = icmp ult i32 %203, 31
  br i1 %207, label %243, label %208

208:                                              ; preds = %196
  %209 = and i64 %205, 8589934560
  %210 = sub i64 %199, %209
  br label %211

211:                                              ; preds = %211, %208
  %212 = phi i64 [ 0, %208 ], [ %235, %211 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %231, %211 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %232, %211 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %233, %211 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %208 ], [ %234, %211 ]
  %217 = sub i64 %199, %212
  %218 = getelementptr inbounds i32, ptr %11, i64 %217
  %219 = getelementptr inbounds i32, ptr %218, i64 -7
  %220 = load <8 x i32>, ptr %219, align 4, !tbaa !5
  %221 = shufflevector <8 x i32> %220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %222 = getelementptr inbounds i32, ptr %218, i64 -15
  %223 = load <8 x i32>, ptr %222, align 4, !tbaa !5
  %224 = shufflevector <8 x i32> %223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %225 = getelementptr inbounds i32, ptr %218, i64 -23
  %226 = load <8 x i32>, ptr %225, align 4, !tbaa !5
  %227 = shufflevector <8 x i32> %226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %228 = getelementptr inbounds i32, ptr %218, i64 -31
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = mul <8 x i32> %221, %213
  %232 = mul <8 x i32> %224, %214
  %233 = mul <8 x i32> %227, %215
  %234 = mul <8 x i32> %230, %216
  %235 = add nuw i64 %212, 32
  %236 = icmp eq i64 %235, %209
  br i1 %236, label %237, label %211, !llvm.loop !389

237:                                              ; preds = %211
  %238 = mul <8 x i32> %232, %231
  %239 = mul <8 x i32> %233, %238
  %240 = mul <8 x i32> %234, %239
  %241 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %240)
  %242 = icmp eq i64 %205, %209
  br i1 %242, label %255, label %243

243:                                              ; preds = %196, %237
  %244 = phi i64 [ %199, %196 ], [ %210, %237 ]
  %245 = phi i32 [ 1, %196 ], [ %241, %237 ]
  br label %246

246:                                              ; preds = %243, %246
  %247 = phi i64 [ %252, %246 ], [ %244, %243 ]
  %248 = phi i32 [ %251, %246 ], [ %245, %243 ]
  %249 = getelementptr inbounds i32, ptr %11, i64 %247
  %250 = load i32, ptr %249, align 4, !tbaa !5
  %251 = mul nsw i32 %250, %248
  %252 = add nsw i64 %247, -1
  %253 = trunc i64 %247 to i32
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %246, label %255, !llvm.loop !390

255:                                              ; preds = %246, %237
  %256 = phi i32 [ %241, %237 ], [ %251, %246 ]
  %257 = and i64 %206, 4294967295
  %258 = getelementptr inbounds i32, ptr %6, i64 %257
  %259 = load i32, ptr %258, align 4, !tbaa !5
  %260 = mul nsw i32 %259, %256
  %261 = add nsw i32 %260, %200
  %262 = icmp sgt i64 %198, 2
  %263 = add nsw i64 %199, -1
  %264 = add i32 %197, 1
  br i1 %262, label %196, label %265, !llvm.loop !391

265:                                              ; preds = %255, %193
  %266 = phi i32 [ %195, %193 ], [ %261, %255 ]
  %267 = icmp slt i32 %266, %5
  br i1 %267, label %270, label %268

268:                                              ; preds = %265
  %269 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 609, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3052

270:                                              ; preds = %265
  %271 = sext i32 %266 to i64
  %272 = getelementptr inbounds i8, ptr %24, i64 %271
  %273 = load i8, ptr %272, align 1, !tbaa !11
  %274 = load i8, ptr %26, align 1, !tbaa !11
  %275 = mul i8 %273, %273
  %276 = add i8 %275, %274
  store i8 %276, ptr %26, align 1, !tbaa !11
  %277 = add nuw nsw i32 %194, 1
  br i1 %40, label %278, label %328

278:                                              ; preds = %270
  %279 = load i32, ptr %4, align 4, !tbaa !5
  %280 = load i32, ptr %12, align 4, !tbaa !5
  %281 = add nsw i32 %280, -1
  %282 = icmp slt i32 %279, %281
  br i1 %282, label %305, label %283

283:                                              ; preds = %278
  %284 = icmp eq i32 %279, %281
  br i1 %284, label %285, label %321

285:                                              ; preds = %283
  store i32 0, ptr %4, align 4, !tbaa !5
  %286 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %286, ptr %6, align 4, !tbaa !5
  br i1 %45, label %328, label %287

287:                                              ; preds = %285, %315
  %288 = phi i64 [ %319, %315 ], [ 1, %285 ]
  %289 = getelementptr inbounds i32, ptr %4, i64 %288
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = getelementptr inbounds i32, ptr %12, i64 %288
  %292 = load i32, ptr %291, align 4, !tbaa !5
  %293 = add nsw i32 %292, -1
  %294 = icmp slt i32 %290, %293
  br i1 %294, label %295, label %313

295:                                              ; preds = %287
  br i1 %282, label %305, label %296

296:                                              ; preds = %295
  %297 = shl i64 %288, 32
  %298 = add i64 %297, -4294967296
  %299 = ashr exact i64 %298, 32
  %300 = getelementptr inbounds i32, ptr %7, i64 %299
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = getelementptr inbounds i32, ptr %6, i64 %288
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = add nsw i32 %303, %301
  store i32 %304, ptr %302, align 4, !tbaa !5
  br label %323

305:                                              ; preds = %278, %295
  %306 = phi i32 [ %290, %295 ], [ %279, %278 ]
  %307 = phi ptr [ %289, %295 ], [ %4, %278 ]
  %308 = phi i64 [ %288, %295 ], [ 0, %278 ]
  %309 = add nsw i32 %306, 1
  store i32 %309, ptr %307, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %7, i64 %308
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = getelementptr inbounds i32, ptr %6, i64 %308
  br label %323

313:                                              ; preds = %287
  %314 = icmp eq i32 %290, %293
  br i1 %314, label %315, label %321

315:                                              ; preds = %313
  store i32 0, ptr %289, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %8, i64 %288
  %317 = load i32, ptr %316, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %6, i64 %288
  store i32 %317, ptr %318, align 4, !tbaa !5
  %319 = add nuw nsw i64 %288, 1
  %320 = icmp eq i64 %319, %43
  br i1 %320, label %328, label %287, !llvm.loop !392

321:                                              ; preds = %283, %313
  %322 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 609, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

323:                                              ; preds = %296, %305
  %324 = phi ptr [ %312, %305 ], [ %289, %296 ]
  %325 = phi i32 [ %311, %305 ], [ 1, %296 ]
  %326 = load i32, ptr %324, align 4, !tbaa !5
  %327 = add nsw i32 %326, %325
  store i32 %327, ptr %324, align 4, !tbaa !5
  br label %328

328:                                              ; preds = %315, %323, %285, %270
  %329 = icmp eq i32 %277, %5
  br i1 %329, label %3047, label %193, !llvm.loop !393

330:                                              ; preds = %31
  %331 = getelementptr inbounds i32, ptr %3, i64 %19
  %332 = load i32, ptr %331, align 4, !tbaa !5
  %333 = icmp eq i32 %332, 0
  %334 = icmp sgt i32 %5, 0
  br i1 %333, label %344, label %335

335:                                              ; preds = %330
  br i1 %334, label %336, label %3047

336:                                              ; preds = %335
  %337 = icmp sgt i32 %13, 1
  %338 = icmp sgt i32 %13, 0
  %339 = add i32 %13, -2
  %340 = zext i32 %339 to i64
  %341 = zext i32 %13 to i64
  %342 = add nuw i32 %5, 1
  %343 = icmp eq i32 %13, 1
  br label %485

344:                                              ; preds = %330
  br i1 %334, label %345, label %3047

345:                                              ; preds = %344
  %346 = icmp sgt i32 %13, 1
  %347 = icmp sgt i32 %13, 0
  %348 = add i32 %13, -2
  %349 = zext i32 %348 to i64
  %350 = zext i32 %13 to i64
  %351 = add nuw i32 %5, 1
  %352 = icmp eq i32 %13, 1
  br label %353

353:                                              ; preds = %345, %483
  %354 = phi i32 [ 0, %345 ], [ %435, %483 ]
  %355 = phi double [ 0.000000e+00, %345 ], [ %434, %483 ]
  %356 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %346, label %357, label %426

357:                                              ; preds = %353, %416
  %358 = phi i32 [ %425, %416 ], [ 0, %353 ]
  %359 = phi i64 [ %367, %416 ], [ %350, %353 ]
  %360 = phi i64 [ %424, %416 ], [ %349, %353 ]
  %361 = phi i32 [ %422, %416 ], [ %356, %353 ]
  %362 = sub i32 %348, %358
  %363 = tail call i32 @llvm.smin.i32(i32 %362, i32 0)
  %364 = sub i32 %362, %363
  %365 = zext i32 %364 to i64
  %366 = add nuw nsw i64 %365, 1
  %367 = add nsw i64 %359, -1
  %368 = icmp ult i32 %364, 31
  br i1 %368, label %404, label %369

369:                                              ; preds = %357
  %370 = and i64 %366, 8589934560
  %371 = sub i64 %360, %370
  br label %372

372:                                              ; preds = %372, %369
  %373 = phi i64 [ 0, %369 ], [ %396, %372 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %392, %372 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %393, %372 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %394, %372 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %369 ], [ %395, %372 ]
  %378 = sub i64 %360, %373
  %379 = getelementptr inbounds i32, ptr %9, i64 %378
  %380 = getelementptr inbounds i32, ptr %379, i64 -7
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %379, i64 -15
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %379, i64 -23
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %379, i64 -31
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = mul <8 x i32> %382, %374
  %393 = mul <8 x i32> %385, %375
  %394 = mul <8 x i32> %388, %376
  %395 = mul <8 x i32> %391, %377
  %396 = add nuw i64 %373, 32
  %397 = icmp eq i64 %396, %370
  br i1 %397, label %398, label %372, !llvm.loop !394

398:                                              ; preds = %372
  %399 = mul <8 x i32> %393, %392
  %400 = mul <8 x i32> %394, %399
  %401 = mul <8 x i32> %395, %400
  %402 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %401)
  %403 = icmp eq i64 %366, %370
  br i1 %403, label %416, label %404

404:                                              ; preds = %357, %398
  %405 = phi i64 [ %360, %357 ], [ %371, %398 ]
  %406 = phi i32 [ 1, %357 ], [ %402, %398 ]
  br label %407

407:                                              ; preds = %404, %407
  %408 = phi i64 [ %413, %407 ], [ %405, %404 ]
  %409 = phi i32 [ %412, %407 ], [ %406, %404 ]
  %410 = getelementptr inbounds i32, ptr %9, i64 %408
  %411 = load i32, ptr %410, align 4, !tbaa !5
  %412 = mul nsw i32 %411, %409
  %413 = add nsw i64 %408, -1
  %414 = trunc i64 %408 to i32
  %415 = icmp sgt i32 %414, 0
  br i1 %415, label %407, label %416, !llvm.loop !395

416:                                              ; preds = %407, %398
  %417 = phi i32 [ %402, %398 ], [ %412, %407 ]
  %418 = and i64 %367, 4294967295
  %419 = getelementptr inbounds i32, ptr %6, i64 %418
  %420 = load i32, ptr %419, align 4, !tbaa !5
  %421 = mul nsw i32 %420, %417
  %422 = add nsw i32 %421, %361
  %423 = icmp sgt i64 %359, 2
  %424 = add nsw i64 %360, -1
  %425 = add i32 %358, 1
  br i1 %423, label %357, label %426, !llvm.loop !396

426:                                              ; preds = %416, %353
  %427 = phi i32 [ %356, %353 ], [ %422, %416 ]
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds i8, ptr %24, i64 %428
  %430 = load i8, ptr %429, align 1, !tbaa !11
  %431 = load i8, ptr %26, align 1, !tbaa !11
  %432 = mul i8 %430, %430
  %433 = add i8 %432, %431
  store i8 %433, ptr %26, align 1, !tbaa !11
  %434 = fadd fast double %355, 1.000000e+00
  %435 = add nuw nsw i32 %354, 1
  br i1 %347, label %436, label %483

436:                                              ; preds = %426
  %437 = load i32, ptr %4, align 4, !tbaa !5
  %438 = load i32, ptr %12, align 4, !tbaa !5
  %439 = add nsw i32 %438, -1
  %440 = icmp slt i32 %437, %439
  br i1 %440, label %460, label %441

441:                                              ; preds = %436
  %442 = icmp eq i32 %437, %439
  br i1 %442, label %443, label %476

443:                                              ; preds = %441
  store i32 0, ptr %4, align 4, !tbaa !5
  %444 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %444, ptr %6, align 4, !tbaa !5
  br i1 %352, label %483, label %445

445:                                              ; preds = %443, %470
  %446 = phi i64 [ %474, %470 ], [ 1, %443 ]
  %447 = getelementptr inbounds i32, ptr %4, i64 %446
  %448 = load i32, ptr %447, align 4, !tbaa !5
  %449 = getelementptr inbounds i32, ptr %12, i64 %446
  %450 = load i32, ptr %449, align 4, !tbaa !5
  %451 = add nsw i32 %450, -1
  %452 = icmp slt i32 %448, %451
  br i1 %452, label %453, label %468

453:                                              ; preds = %445
  br i1 %440, label %460, label %454

454:                                              ; preds = %453
  %455 = getelementptr inbounds i32, ptr %7, i64 %446
  %456 = load i32, ptr %455, align 4, !tbaa !5
  %457 = getelementptr inbounds i32, ptr %6, i64 %446
  %458 = load i32, ptr %457, align 4, !tbaa !5
  %459 = add nsw i32 %458, %456
  store i32 %459, ptr %457, align 4, !tbaa !5
  br label %478

460:                                              ; preds = %436, %453
  %461 = phi i32 [ %448, %453 ], [ %437, %436 ]
  %462 = phi ptr [ %447, %453 ], [ %4, %436 ]
  %463 = phi i64 [ %446, %453 ], [ 0, %436 ]
  %464 = add nsw i32 %461, 1
  store i32 %464, ptr %462, align 4, !tbaa !5
  %465 = getelementptr inbounds i32, ptr %7, i64 %463
  %466 = load i32, ptr %465, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %6, i64 %463
  br label %478

468:                                              ; preds = %445
  %469 = icmp eq i32 %448, %451
  br i1 %469, label %470, label %476

470:                                              ; preds = %468
  store i32 0, ptr %447, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %8, i64 %446
  %472 = load i32, ptr %471, align 4, !tbaa !5
  %473 = getelementptr inbounds i32, ptr %6, i64 %446
  store i32 %472, ptr %473, align 4, !tbaa !5
  %474 = add nuw nsw i64 %446, 1
  %475 = icmp eq i64 %474, %350
  br i1 %475, label %483, label %445, !llvm.loop !397

476:                                              ; preds = %441, %468
  %477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 609, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

478:                                              ; preds = %454, %460
  %479 = phi ptr [ %467, %460 ], [ %447, %454 ]
  %480 = phi i32 [ %466, %460 ], [ 1, %454 ]
  %481 = load i32, ptr %479, align 4, !tbaa !5
  %482 = add nsw i32 %481, %480
  store i32 %482, ptr %479, align 4, !tbaa !5
  br label %483

483:                                              ; preds = %470, %478, %443, %426
  %484 = icmp eq i32 %435, %5
  br i1 %484, label %3047, label %353, !llvm.loop !398

485:                                              ; preds = %336, %620
  %486 = phi i32 [ 0, %336 ], [ %569, %620 ]
  %487 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %337, label %488, label %557

488:                                              ; preds = %485, %547
  %489 = phi i32 [ %556, %547 ], [ 0, %485 ]
  %490 = phi i64 [ %498, %547 ], [ %341, %485 ]
  %491 = phi i64 [ %555, %547 ], [ %340, %485 ]
  %492 = phi i32 [ %553, %547 ], [ %487, %485 ]
  %493 = sub i32 %339, %489
  %494 = tail call i32 @llvm.smin.i32(i32 %493, i32 0)
  %495 = sub i32 %493, %494
  %496 = zext i32 %495 to i64
  %497 = add nuw nsw i64 %496, 1
  %498 = add nsw i64 %490, -1
  %499 = icmp ult i32 %495, 31
  br i1 %499, label %535, label %500

500:                                              ; preds = %488
  %501 = and i64 %497, 8589934560
  %502 = sub i64 %491, %501
  br label %503

503:                                              ; preds = %503, %500
  %504 = phi i64 [ 0, %500 ], [ %527, %503 ]
  %505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %523, %503 ]
  %506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %524, %503 ]
  %507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %525, %503 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %500 ], [ %526, %503 ]
  %509 = sub i64 %491, %504
  %510 = getelementptr inbounds i32, ptr %11, i64 %509
  %511 = getelementptr inbounds i32, ptr %510, i64 -7
  %512 = load <8 x i32>, ptr %511, align 4, !tbaa !5
  %513 = shufflevector <8 x i32> %512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %514 = getelementptr inbounds i32, ptr %510, i64 -15
  %515 = load <8 x i32>, ptr %514, align 4, !tbaa !5
  %516 = shufflevector <8 x i32> %515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %517 = getelementptr inbounds i32, ptr %510, i64 -23
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !5
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = getelementptr inbounds i32, ptr %510, i64 -31
  %521 = load <8 x i32>, ptr %520, align 4, !tbaa !5
  %522 = shufflevector <8 x i32> %521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %523 = mul <8 x i32> %513, %505
  %524 = mul <8 x i32> %516, %506
  %525 = mul <8 x i32> %519, %507
  %526 = mul <8 x i32> %522, %508
  %527 = add nuw i64 %504, 32
  %528 = icmp eq i64 %527, %501
  br i1 %528, label %529, label %503, !llvm.loop !399

529:                                              ; preds = %503
  %530 = mul <8 x i32> %524, %523
  %531 = mul <8 x i32> %525, %530
  %532 = mul <8 x i32> %526, %531
  %533 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %532)
  %534 = icmp eq i64 %497, %501
  br i1 %534, label %547, label %535

535:                                              ; preds = %488, %529
  %536 = phi i64 [ %491, %488 ], [ %502, %529 ]
  %537 = phi i32 [ 1, %488 ], [ %533, %529 ]
  br label %538

538:                                              ; preds = %535, %538
  %539 = phi i64 [ %544, %538 ], [ %536, %535 ]
  %540 = phi i32 [ %543, %538 ], [ %537, %535 ]
  %541 = getelementptr inbounds i32, ptr %11, i64 %539
  %542 = load i32, ptr %541, align 4, !tbaa !5
  %543 = mul nsw i32 %542, %540
  %544 = add nsw i64 %539, -1
  %545 = trunc i64 %539 to i32
  %546 = icmp sgt i32 %545, 0
  br i1 %546, label %538, label %547, !llvm.loop !400

547:                                              ; preds = %538, %529
  %548 = phi i32 [ %533, %529 ], [ %543, %538 ]
  %549 = and i64 %498, 4294967295
  %550 = getelementptr inbounds i32, ptr %6, i64 %549
  %551 = load i32, ptr %550, align 4, !tbaa !5
  %552 = mul nsw i32 %551, %548
  %553 = add nsw i32 %552, %492
  %554 = icmp sgt i64 %490, 2
  %555 = add nsw i64 %491, -1
  %556 = add i32 %489, 1
  br i1 %554, label %488, label %557, !llvm.loop !401

557:                                              ; preds = %547, %485
  %558 = phi i32 [ %487, %485 ], [ %553, %547 ]
  %559 = icmp slt i32 %558, %5
  br i1 %559, label %562, label %560

560:                                              ; preds = %557
  %561 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 609, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3052

562:                                              ; preds = %557
  %563 = sext i32 %558 to i64
  %564 = getelementptr inbounds i8, ptr %24, i64 %563
  %565 = load i8, ptr %564, align 1, !tbaa !11
  %566 = load i8, ptr %26, align 1, !tbaa !11
  %567 = mul i8 %565, %565
  %568 = add i8 %567, %566
  store i8 %568, ptr %26, align 1, !tbaa !11
  %569 = add nuw nsw i32 %486, 1
  br i1 %338, label %570, label %620

570:                                              ; preds = %562
  %571 = load i32, ptr %4, align 4, !tbaa !5
  %572 = load i32, ptr %12, align 4, !tbaa !5
  %573 = add nsw i32 %572, -1
  %574 = icmp slt i32 %571, %573
  br i1 %574, label %597, label %575

575:                                              ; preds = %570
  %576 = icmp eq i32 %571, %573
  br i1 %576, label %577, label %613

577:                                              ; preds = %575
  store i32 0, ptr %4, align 4, !tbaa !5
  %578 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %578, ptr %6, align 4, !tbaa !5
  br i1 %343, label %620, label %579

579:                                              ; preds = %577, %607
  %580 = phi i64 [ %611, %607 ], [ 1, %577 ]
  %581 = getelementptr inbounds i32, ptr %4, i64 %580
  %582 = load i32, ptr %581, align 4, !tbaa !5
  %583 = getelementptr inbounds i32, ptr %12, i64 %580
  %584 = load i32, ptr %583, align 4, !tbaa !5
  %585 = add nsw i32 %584, -1
  %586 = icmp slt i32 %582, %585
  br i1 %586, label %587, label %605

587:                                              ; preds = %579
  br i1 %574, label %597, label %588

588:                                              ; preds = %587
  %589 = shl i64 %580, 32
  %590 = add i64 %589, -4294967296
  %591 = ashr exact i64 %590, 32
  %592 = getelementptr inbounds i32, ptr %7, i64 %591
  %593 = load i32, ptr %592, align 4, !tbaa !5
  %594 = getelementptr inbounds i32, ptr %6, i64 %580
  %595 = load i32, ptr %594, align 4, !tbaa !5
  %596 = add nsw i32 %595, %593
  store i32 %596, ptr %594, align 4, !tbaa !5
  br label %615

597:                                              ; preds = %570, %587
  %598 = phi i32 [ %582, %587 ], [ %571, %570 ]
  %599 = phi ptr [ %581, %587 ], [ %4, %570 ]
  %600 = phi i64 [ %580, %587 ], [ 0, %570 ]
  %601 = add nsw i32 %598, 1
  store i32 %601, ptr %599, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %7, i64 %600
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %6, i64 %600
  br label %615

605:                                              ; preds = %579
  %606 = icmp eq i32 %582, %585
  br i1 %606, label %607, label %613

607:                                              ; preds = %605
  store i32 0, ptr %581, align 4, !tbaa !5
  %608 = getelementptr inbounds i32, ptr %8, i64 %580
  %609 = load i32, ptr %608, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %6, i64 %580
  store i32 %609, ptr %610, align 4, !tbaa !5
  %611 = add nuw nsw i64 %580, 1
  %612 = icmp eq i64 %611, %341
  br i1 %612, label %620, label %579, !llvm.loop !402

613:                                              ; preds = %575, %605
  %614 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 609, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

615:                                              ; preds = %588, %597
  %616 = phi ptr [ %604, %597 ], [ %581, %588 ]
  %617 = phi i32 [ %603, %597 ], [ 1, %588 ]
  %618 = load i32, ptr %616, align 4, !tbaa !5
  %619 = add nsw i32 %618, %617
  store i32 %619, ptr %616, align 4, !tbaa !5
  br label %620

620:                                              ; preds = %607, %615, %577, %562
  %621 = icmp eq i32 %569, %5
  br i1 %621, label %3047, label %485, !llvm.loop !403

622:                                              ; preds = %31
  %623 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 609, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3047

624:                                              ; preds = %18
  %625 = getelementptr inbounds ptr, ptr %14, i64 %19
  %626 = load ptr, ptr %625, align 8, !tbaa !9
  %627 = getelementptr inbounds ptr, ptr %16, i64 %19
  %628 = load ptr, ptr %627, align 8, !tbaa !9
  store i32 0, ptr %628, align 4, !tbaa !5
  %629 = icmp eq i32 %13, 0
  br i1 %629, label %630, label %634

630:                                              ; preds = %624
  %631 = load i8, ptr %626, align 1, !tbaa !11
  %632 = sext i8 %631 to i32
  %633 = mul nsw i32 %632, %632
  store i32 %633, ptr %628, align 4, !tbaa !5
  br label %3047

634:                                              ; preds = %624
  switch i32 %1, label %1229 [
    i32 1, label %635
    i32 0, label %935
  ]

635:                                              ; preds = %634
  %636 = getelementptr inbounds i32, ptr %3, i64 %19
  %637 = load i32, ptr %636, align 4, !tbaa !5
  %638 = icmp eq i32 %637, 0
  %639 = icmp sgt i32 %5, 0
  br i1 %638, label %649, label %640

640:                                              ; preds = %635
  br i1 %639, label %641, label %3047

641:                                              ; preds = %640
  %642 = icmp sgt i32 %13, 1
  %643 = icmp sgt i32 %13, 0
  %644 = add i32 %13, -2
  %645 = zext i32 %644 to i64
  %646 = zext i32 %13 to i64
  %647 = add nuw i32 %5, 1
  %648 = icmp eq i32 %13, 1
  br label %796

649:                                              ; preds = %635
  br i1 %639, label %650, label %3047

650:                                              ; preds = %649
  %651 = icmp sgt i32 %13, 1
  %652 = icmp sgt i32 %13, 0
  %653 = add i32 %13, -2
  %654 = zext i32 %653 to i64
  %655 = zext i32 %13 to i64
  %656 = add nuw i32 %5, 1
  %657 = icmp eq i32 %13, 1
  br label %658

658:                                              ; preds = %650, %794
  %659 = phi i32 [ 0, %650 ], [ %746, %794 ]
  %660 = phi double [ 0.000000e+00, %650 ], [ %745, %794 ]
  %661 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %651, label %662, label %731

662:                                              ; preds = %658, %721
  %663 = phi i32 [ %730, %721 ], [ 0, %658 ]
  %664 = phi i64 [ %672, %721 ], [ %655, %658 ]
  %665 = phi i64 [ %729, %721 ], [ %654, %658 ]
  %666 = phi i32 [ %727, %721 ], [ %661, %658 ]
  %667 = sub i32 %653, %663
  %668 = tail call i32 @llvm.smin.i32(i32 %667, i32 0)
  %669 = sub i32 %667, %668
  %670 = zext i32 %669 to i64
  %671 = add nuw nsw i64 %670, 1
  %672 = add nsw i64 %664, -1
  %673 = icmp ult i32 %669, 31
  br i1 %673, label %709, label %674

674:                                              ; preds = %662
  %675 = and i64 %671, 8589934560
  %676 = sub i64 %665, %675
  br label %677

677:                                              ; preds = %677, %674
  %678 = phi i64 [ 0, %674 ], [ %701, %677 ]
  %679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %697, %677 ]
  %680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %698, %677 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %699, %677 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %674 ], [ %700, %677 ]
  %683 = sub i64 %665, %678
  %684 = getelementptr inbounds i32, ptr %9, i64 %683
  %685 = getelementptr inbounds i32, ptr %684, i64 -7
  %686 = load <8 x i32>, ptr %685, align 4, !tbaa !5
  %687 = shufflevector <8 x i32> %686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %688 = getelementptr inbounds i32, ptr %684, i64 -15
  %689 = load <8 x i32>, ptr %688, align 4, !tbaa !5
  %690 = shufflevector <8 x i32> %689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %691 = getelementptr inbounds i32, ptr %684, i64 -23
  %692 = load <8 x i32>, ptr %691, align 4, !tbaa !5
  %693 = shufflevector <8 x i32> %692, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %694 = getelementptr inbounds i32, ptr %684, i64 -31
  %695 = load <8 x i32>, ptr %694, align 4, !tbaa !5
  %696 = shufflevector <8 x i32> %695, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %697 = mul <8 x i32> %687, %679
  %698 = mul <8 x i32> %690, %680
  %699 = mul <8 x i32> %693, %681
  %700 = mul <8 x i32> %696, %682
  %701 = add nuw i64 %678, 32
  %702 = icmp eq i64 %701, %675
  br i1 %702, label %703, label %677, !llvm.loop !404

703:                                              ; preds = %677
  %704 = mul <8 x i32> %698, %697
  %705 = mul <8 x i32> %699, %704
  %706 = mul <8 x i32> %700, %705
  %707 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %706)
  %708 = icmp eq i64 %671, %675
  br i1 %708, label %721, label %709

709:                                              ; preds = %662, %703
  %710 = phi i64 [ %665, %662 ], [ %676, %703 ]
  %711 = phi i32 [ 1, %662 ], [ %707, %703 ]
  br label %712

712:                                              ; preds = %709, %712
  %713 = phi i64 [ %718, %712 ], [ %710, %709 ]
  %714 = phi i32 [ %717, %712 ], [ %711, %709 ]
  %715 = getelementptr inbounds i32, ptr %9, i64 %713
  %716 = load i32, ptr %715, align 4, !tbaa !5
  %717 = mul nsw i32 %716, %714
  %718 = add nsw i64 %713, -1
  %719 = trunc i64 %713 to i32
  %720 = icmp sgt i32 %719, 0
  br i1 %720, label %712, label %721, !llvm.loop !405

721:                                              ; preds = %712, %703
  %722 = phi i32 [ %707, %703 ], [ %717, %712 ]
  %723 = and i64 %672, 4294967295
  %724 = getelementptr inbounds i32, ptr %6, i64 %723
  %725 = load i32, ptr %724, align 4, !tbaa !5
  %726 = mul nsw i32 %725, %722
  %727 = add nsw i32 %726, %666
  %728 = icmp sgt i64 %664, 2
  %729 = add nsw i64 %665, -1
  %730 = add i32 %663, 1
  br i1 %728, label %662, label %731, !llvm.loop !406

731:                                              ; preds = %721, %658
  %732 = phi i32 [ %661, %658 ], [ %727, %721 ]
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds double, ptr %2, i64 %733
  %735 = load double, ptr %734, align 8, !tbaa !18
  %736 = getelementptr inbounds i8, ptr %626, i64 %733
  %737 = load i8, ptr %736, align 1, !tbaa !11
  %738 = load i32, ptr %628, align 4, !tbaa !5
  %739 = sitofp i32 %738 to double
  %740 = sitofp i8 %737 to double
  %741 = fmul fast double %735, %740
  %742 = fmul fast double %741, %741
  %743 = fadd fast double %742, %739
  %744 = fptosi double %743 to i32
  store i32 %744, ptr %628, align 4, !tbaa !5
  %745 = fadd fast double %735, %660
  %746 = add nuw nsw i32 %659, 1
  br i1 %652, label %747, label %794

747:                                              ; preds = %731
  %748 = load i32, ptr %4, align 4, !tbaa !5
  %749 = load i32, ptr %12, align 4, !tbaa !5
  %750 = add nsw i32 %749, -1
  %751 = icmp slt i32 %748, %750
  br i1 %751, label %771, label %752

752:                                              ; preds = %747
  %753 = icmp eq i32 %748, %750
  br i1 %753, label %754, label %787

754:                                              ; preds = %752
  store i32 0, ptr %4, align 4, !tbaa !5
  %755 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %755, ptr %6, align 4, !tbaa !5
  br i1 %657, label %794, label %756

756:                                              ; preds = %754, %781
  %757 = phi i64 [ %785, %781 ], [ 1, %754 ]
  %758 = getelementptr inbounds i32, ptr %4, i64 %757
  %759 = load i32, ptr %758, align 4, !tbaa !5
  %760 = getelementptr inbounds i32, ptr %12, i64 %757
  %761 = load i32, ptr %760, align 4, !tbaa !5
  %762 = add nsw i32 %761, -1
  %763 = icmp slt i32 %759, %762
  br i1 %763, label %764, label %779

764:                                              ; preds = %756
  br i1 %751, label %771, label %765

765:                                              ; preds = %764
  %766 = getelementptr inbounds i32, ptr %7, i64 %757
  %767 = load i32, ptr %766, align 4, !tbaa !5
  %768 = getelementptr inbounds i32, ptr %6, i64 %757
  %769 = load i32, ptr %768, align 4, !tbaa !5
  %770 = add nsw i32 %769, %767
  store i32 %770, ptr %768, align 4, !tbaa !5
  br label %789

771:                                              ; preds = %747, %764
  %772 = phi i32 [ %759, %764 ], [ %748, %747 ]
  %773 = phi ptr [ %758, %764 ], [ %4, %747 ]
  %774 = phi i64 [ %757, %764 ], [ 0, %747 ]
  %775 = add nsw i32 %772, 1
  store i32 %775, ptr %773, align 4, !tbaa !5
  %776 = getelementptr inbounds i32, ptr %7, i64 %774
  %777 = load i32, ptr %776, align 4, !tbaa !5
  %778 = getelementptr inbounds i32, ptr %6, i64 %774
  br label %789

779:                                              ; preds = %756
  %780 = icmp eq i32 %759, %762
  br i1 %780, label %781, label %787

781:                                              ; preds = %779
  store i32 0, ptr %758, align 4, !tbaa !5
  %782 = getelementptr inbounds i32, ptr %8, i64 %757
  %783 = load i32, ptr %782, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %6, i64 %757
  store i32 %783, ptr %784, align 4, !tbaa !5
  %785 = add nuw nsw i64 %757, 1
  %786 = icmp eq i64 %785, %655
  br i1 %786, label %794, label %756, !llvm.loop !407

787:                                              ; preds = %752, %779
  %788 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

789:                                              ; preds = %765, %771
  %790 = phi ptr [ %778, %771 ], [ %758, %765 ]
  %791 = phi i32 [ %777, %771 ], [ 1, %765 ]
  %792 = load i32, ptr %790, align 4, !tbaa !5
  %793 = add nsw i32 %792, %791
  store i32 %793, ptr %790, align 4, !tbaa !5
  br label %794

794:                                              ; preds = %781, %789, %754, %731
  %795 = icmp eq i32 %746, %5
  br i1 %795, label %3047, label %658, !llvm.loop !408

796:                                              ; preds = %641, %933
  %797 = phi i32 [ 0, %641 ], [ %882, %933 ]
  %798 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %642, label %799, label %868

799:                                              ; preds = %796, %858
  %800 = phi i32 [ %867, %858 ], [ 0, %796 ]
  %801 = phi i64 [ %809, %858 ], [ %646, %796 ]
  %802 = phi i64 [ %866, %858 ], [ %645, %796 ]
  %803 = phi i32 [ %864, %858 ], [ %798, %796 ]
  %804 = sub i32 %644, %800
  %805 = tail call i32 @llvm.smin.i32(i32 %804, i32 0)
  %806 = sub i32 %804, %805
  %807 = zext i32 %806 to i64
  %808 = add nuw nsw i64 %807, 1
  %809 = add nsw i64 %801, -1
  %810 = icmp ult i32 %806, 31
  br i1 %810, label %846, label %811

811:                                              ; preds = %799
  %812 = and i64 %808, 8589934560
  %813 = sub i64 %802, %812
  br label %814

814:                                              ; preds = %814, %811
  %815 = phi i64 [ 0, %811 ], [ %838, %814 ]
  %816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %834, %814 ]
  %817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %835, %814 ]
  %818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %836, %814 ]
  %819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %811 ], [ %837, %814 ]
  %820 = sub i64 %802, %815
  %821 = getelementptr inbounds i32, ptr %11, i64 %820
  %822 = getelementptr inbounds i32, ptr %821, i64 -7
  %823 = load <8 x i32>, ptr %822, align 4, !tbaa !5
  %824 = shufflevector <8 x i32> %823, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %825 = getelementptr inbounds i32, ptr %821, i64 -15
  %826 = load <8 x i32>, ptr %825, align 4, !tbaa !5
  %827 = shufflevector <8 x i32> %826, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %828 = getelementptr inbounds i32, ptr %821, i64 -23
  %829 = load <8 x i32>, ptr %828, align 4, !tbaa !5
  %830 = shufflevector <8 x i32> %829, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %831 = getelementptr inbounds i32, ptr %821, i64 -31
  %832 = load <8 x i32>, ptr %831, align 4, !tbaa !5
  %833 = shufflevector <8 x i32> %832, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %834 = mul <8 x i32> %824, %816
  %835 = mul <8 x i32> %827, %817
  %836 = mul <8 x i32> %830, %818
  %837 = mul <8 x i32> %833, %819
  %838 = add nuw i64 %815, 32
  %839 = icmp eq i64 %838, %812
  br i1 %839, label %840, label %814, !llvm.loop !409

840:                                              ; preds = %814
  %841 = mul <8 x i32> %835, %834
  %842 = mul <8 x i32> %836, %841
  %843 = mul <8 x i32> %837, %842
  %844 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %843)
  %845 = icmp eq i64 %808, %812
  br i1 %845, label %858, label %846

846:                                              ; preds = %799, %840
  %847 = phi i64 [ %802, %799 ], [ %813, %840 ]
  %848 = phi i32 [ 1, %799 ], [ %844, %840 ]
  br label %849

849:                                              ; preds = %846, %849
  %850 = phi i64 [ %855, %849 ], [ %847, %846 ]
  %851 = phi i32 [ %854, %849 ], [ %848, %846 ]
  %852 = getelementptr inbounds i32, ptr %11, i64 %850
  %853 = load i32, ptr %852, align 4, !tbaa !5
  %854 = mul nsw i32 %853, %851
  %855 = add nsw i64 %850, -1
  %856 = trunc i64 %850 to i32
  %857 = icmp sgt i32 %856, 0
  br i1 %857, label %849, label %858, !llvm.loop !410

858:                                              ; preds = %849, %840
  %859 = phi i32 [ %844, %840 ], [ %854, %849 ]
  %860 = and i64 %809, 4294967295
  %861 = getelementptr inbounds i32, ptr %6, i64 %860
  %862 = load i32, ptr %861, align 4, !tbaa !5
  %863 = mul nsw i32 %862, %859
  %864 = add nsw i32 %863, %803
  %865 = icmp sgt i64 %801, 2
  %866 = add nsw i64 %802, -1
  %867 = add i32 %800, 1
  br i1 %865, label %799, label %868, !llvm.loop !411

868:                                              ; preds = %858, %796
  %869 = phi i32 [ %798, %796 ], [ %864, %858 ]
  %870 = icmp slt i32 %869, %5
  br i1 %870, label %873, label %871

871:                                              ; preds = %868
  %872 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3052

873:                                              ; preds = %868
  %874 = sext i32 %869 to i64
  %875 = getelementptr inbounds i8, ptr %626, i64 %874
  %876 = load i8, ptr %875, align 1, !tbaa !11
  %877 = load i32, ptr %628, align 4, !tbaa !5
  %878 = sext i8 %876 to i64
  %879 = mul nsw i64 %878, %878
  %880 = trunc i64 %879 to i32
  %881 = add i32 %877, %880
  store i32 %881, ptr %628, align 4, !tbaa !5
  %882 = add nuw nsw i32 %797, 1
  br i1 %643, label %883, label %933

883:                                              ; preds = %873
  %884 = load i32, ptr %4, align 4, !tbaa !5
  %885 = load i32, ptr %12, align 4, !tbaa !5
  %886 = add nsw i32 %885, -1
  %887 = icmp slt i32 %884, %886
  br i1 %887, label %910, label %888

888:                                              ; preds = %883
  %889 = icmp eq i32 %884, %886
  br i1 %889, label %890, label %926

890:                                              ; preds = %888
  store i32 0, ptr %4, align 4, !tbaa !5
  %891 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %891, ptr %6, align 4, !tbaa !5
  br i1 %648, label %933, label %892

892:                                              ; preds = %890, %920
  %893 = phi i64 [ %924, %920 ], [ 1, %890 ]
  %894 = getelementptr inbounds i32, ptr %4, i64 %893
  %895 = load i32, ptr %894, align 4, !tbaa !5
  %896 = getelementptr inbounds i32, ptr %12, i64 %893
  %897 = load i32, ptr %896, align 4, !tbaa !5
  %898 = add nsw i32 %897, -1
  %899 = icmp slt i32 %895, %898
  br i1 %899, label %900, label %918

900:                                              ; preds = %892
  br i1 %887, label %910, label %901

901:                                              ; preds = %900
  %902 = shl i64 %893, 32
  %903 = add i64 %902, -4294967296
  %904 = ashr exact i64 %903, 32
  %905 = getelementptr inbounds i32, ptr %7, i64 %904
  %906 = load i32, ptr %905, align 4, !tbaa !5
  %907 = getelementptr inbounds i32, ptr %6, i64 %893
  %908 = load i32, ptr %907, align 4, !tbaa !5
  %909 = add nsw i32 %908, %906
  store i32 %909, ptr %907, align 4, !tbaa !5
  br label %928

910:                                              ; preds = %883, %900
  %911 = phi i32 [ %895, %900 ], [ %884, %883 ]
  %912 = phi ptr [ %894, %900 ], [ %4, %883 ]
  %913 = phi i64 [ %893, %900 ], [ 0, %883 ]
  %914 = add nsw i32 %911, 1
  store i32 %914, ptr %912, align 4, !tbaa !5
  %915 = getelementptr inbounds i32, ptr %7, i64 %913
  %916 = load i32, ptr %915, align 4, !tbaa !5
  %917 = getelementptr inbounds i32, ptr %6, i64 %913
  br label %928

918:                                              ; preds = %892
  %919 = icmp eq i32 %895, %898
  br i1 %919, label %920, label %926

920:                                              ; preds = %918
  store i32 0, ptr %894, align 4, !tbaa !5
  %921 = getelementptr inbounds i32, ptr %8, i64 %893
  %922 = load i32, ptr %921, align 4, !tbaa !5
  %923 = getelementptr inbounds i32, ptr %6, i64 %893
  store i32 %922, ptr %923, align 4, !tbaa !5
  %924 = add nuw nsw i64 %893, 1
  %925 = icmp eq i64 %924, %646
  br i1 %925, label %933, label %892, !llvm.loop !412

926:                                              ; preds = %888, %918
  %927 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

928:                                              ; preds = %901, %910
  %929 = phi ptr [ %917, %910 ], [ %894, %901 ]
  %930 = phi i32 [ %916, %910 ], [ 1, %901 ]
  %931 = load i32, ptr %929, align 4, !tbaa !5
  %932 = add nsw i32 %931, %930
  store i32 %932, ptr %929, align 4, !tbaa !5
  br label %933

933:                                              ; preds = %920, %928, %890, %873
  %934 = icmp eq i32 %882, %5
  br i1 %934, label %3047, label %796, !llvm.loop !413

935:                                              ; preds = %634
  %936 = getelementptr inbounds i32, ptr %3, i64 %19
  %937 = load i32, ptr %936, align 4, !tbaa !5
  %938 = icmp eq i32 %937, 0
  %939 = icmp sgt i32 %5, 0
  br i1 %938, label %949, label %940

940:                                              ; preds = %935
  br i1 %939, label %941, label %3047

941:                                              ; preds = %940
  %942 = icmp sgt i32 %13, 1
  %943 = icmp sgt i32 %13, 0
  %944 = add i32 %13, -2
  %945 = zext i32 %944 to i64
  %946 = zext i32 %13 to i64
  %947 = add nuw i32 %5, 1
  %948 = icmp eq i32 %13, 1
  br label %1091

949:                                              ; preds = %935
  br i1 %939, label %950, label %3047

950:                                              ; preds = %949
  %951 = icmp sgt i32 %13, 1
  %952 = icmp sgt i32 %13, 0
  %953 = add i32 %13, -2
  %954 = zext i32 %953 to i64
  %955 = zext i32 %13 to i64
  %956 = add nuw i32 %5, 1
  %957 = icmp eq i32 %13, 1
  br label %958

958:                                              ; preds = %950, %1089
  %959 = phi i32 [ 0, %950 ], [ %1041, %1089 ]
  %960 = phi double [ 0.000000e+00, %950 ], [ %1040, %1089 ]
  %961 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %951, label %962, label %1031

962:                                              ; preds = %958, %1021
  %963 = phi i32 [ %1030, %1021 ], [ 0, %958 ]
  %964 = phi i64 [ %972, %1021 ], [ %955, %958 ]
  %965 = phi i64 [ %1029, %1021 ], [ %954, %958 ]
  %966 = phi i32 [ %1027, %1021 ], [ %961, %958 ]
  %967 = sub i32 %953, %963
  %968 = tail call i32 @llvm.smin.i32(i32 %967, i32 0)
  %969 = sub i32 %967, %968
  %970 = zext i32 %969 to i64
  %971 = add nuw nsw i64 %970, 1
  %972 = add nsw i64 %964, -1
  %973 = icmp ult i32 %969, 31
  br i1 %973, label %1009, label %974

974:                                              ; preds = %962
  %975 = and i64 %971, 8589934560
  %976 = sub i64 %965, %975
  br label %977

977:                                              ; preds = %977, %974
  %978 = phi i64 [ 0, %974 ], [ %1001, %977 ]
  %979 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %974 ], [ %997, %977 ]
  %980 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %974 ], [ %998, %977 ]
  %981 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %974 ], [ %999, %977 ]
  %982 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %974 ], [ %1000, %977 ]
  %983 = sub i64 %965, %978
  %984 = getelementptr inbounds i32, ptr %9, i64 %983
  %985 = getelementptr inbounds i32, ptr %984, i64 -7
  %986 = load <8 x i32>, ptr %985, align 4, !tbaa !5
  %987 = shufflevector <8 x i32> %986, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %988 = getelementptr inbounds i32, ptr %984, i64 -15
  %989 = load <8 x i32>, ptr %988, align 4, !tbaa !5
  %990 = shufflevector <8 x i32> %989, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %991 = getelementptr inbounds i32, ptr %984, i64 -23
  %992 = load <8 x i32>, ptr %991, align 4, !tbaa !5
  %993 = shufflevector <8 x i32> %992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %994 = getelementptr inbounds i32, ptr %984, i64 -31
  %995 = load <8 x i32>, ptr %994, align 4, !tbaa !5
  %996 = shufflevector <8 x i32> %995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %997 = mul <8 x i32> %987, %979
  %998 = mul <8 x i32> %990, %980
  %999 = mul <8 x i32> %993, %981
  %1000 = mul <8 x i32> %996, %982
  %1001 = add nuw i64 %978, 32
  %1002 = icmp eq i64 %1001, %975
  br i1 %1002, label %1003, label %977, !llvm.loop !414

1003:                                             ; preds = %977
  %1004 = mul <8 x i32> %998, %997
  %1005 = mul <8 x i32> %999, %1004
  %1006 = mul <8 x i32> %1000, %1005
  %1007 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1006)
  %1008 = icmp eq i64 %971, %975
  br i1 %1008, label %1021, label %1009

1009:                                             ; preds = %962, %1003
  %1010 = phi i64 [ %965, %962 ], [ %976, %1003 ]
  %1011 = phi i32 [ 1, %962 ], [ %1007, %1003 ]
  br label %1012

1012:                                             ; preds = %1009, %1012
  %1013 = phi i64 [ %1018, %1012 ], [ %1010, %1009 ]
  %1014 = phi i32 [ %1017, %1012 ], [ %1011, %1009 ]
  %1015 = getelementptr inbounds i32, ptr %9, i64 %1013
  %1016 = load i32, ptr %1015, align 4, !tbaa !5
  %1017 = mul nsw i32 %1016, %1014
  %1018 = add nsw i64 %1013, -1
  %1019 = trunc i64 %1013 to i32
  %1020 = icmp sgt i32 %1019, 0
  br i1 %1020, label %1012, label %1021, !llvm.loop !415

1021:                                             ; preds = %1012, %1003
  %1022 = phi i32 [ %1007, %1003 ], [ %1017, %1012 ]
  %1023 = and i64 %972, 4294967295
  %1024 = getelementptr inbounds i32, ptr %6, i64 %1023
  %1025 = load i32, ptr %1024, align 4, !tbaa !5
  %1026 = mul nsw i32 %1025, %1022
  %1027 = add nsw i32 %1026, %966
  %1028 = icmp sgt i64 %964, 2
  %1029 = add nsw i64 %965, -1
  %1030 = add i32 %963, 1
  br i1 %1028, label %962, label %1031, !llvm.loop !416

1031:                                             ; preds = %1021, %958
  %1032 = phi i32 [ %961, %958 ], [ %1027, %1021 ]
  %1033 = sext i32 %1032 to i64
  %1034 = getelementptr inbounds i8, ptr %626, i64 %1033
  %1035 = load i8, ptr %1034, align 1, !tbaa !11
  %1036 = sext i8 %1035 to i32
  %1037 = load i32, ptr %628, align 4, !tbaa !5
  %1038 = mul nsw i32 %1036, %1036
  %1039 = add nsw i32 %1038, %1037
  store i32 %1039, ptr %628, align 4, !tbaa !5
  %1040 = fadd fast double %960, 1.000000e+00
  %1041 = add nuw nsw i32 %959, 1
  br i1 %952, label %1042, label %1089

1042:                                             ; preds = %1031
  %1043 = load i32, ptr %4, align 4, !tbaa !5
  %1044 = load i32, ptr %12, align 4, !tbaa !5
  %1045 = add nsw i32 %1044, -1
  %1046 = icmp slt i32 %1043, %1045
  br i1 %1046, label %1066, label %1047

1047:                                             ; preds = %1042
  %1048 = icmp eq i32 %1043, %1045
  br i1 %1048, label %1049, label %1082

1049:                                             ; preds = %1047
  store i32 0, ptr %4, align 4, !tbaa !5
  %1050 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1050, ptr %6, align 4, !tbaa !5
  br i1 %957, label %1089, label %1051

1051:                                             ; preds = %1049, %1076
  %1052 = phi i64 [ %1080, %1076 ], [ 1, %1049 ]
  %1053 = getelementptr inbounds i32, ptr %4, i64 %1052
  %1054 = load i32, ptr %1053, align 4, !tbaa !5
  %1055 = getelementptr inbounds i32, ptr %12, i64 %1052
  %1056 = load i32, ptr %1055, align 4, !tbaa !5
  %1057 = add nsw i32 %1056, -1
  %1058 = icmp slt i32 %1054, %1057
  br i1 %1058, label %1059, label %1074

1059:                                             ; preds = %1051
  br i1 %1046, label %1066, label %1060

1060:                                             ; preds = %1059
  %1061 = getelementptr inbounds i32, ptr %7, i64 %1052
  %1062 = load i32, ptr %1061, align 4, !tbaa !5
  %1063 = getelementptr inbounds i32, ptr %6, i64 %1052
  %1064 = load i32, ptr %1063, align 4, !tbaa !5
  %1065 = add nsw i32 %1064, %1062
  store i32 %1065, ptr %1063, align 4, !tbaa !5
  br label %1084

1066:                                             ; preds = %1042, %1059
  %1067 = phi i32 [ %1054, %1059 ], [ %1043, %1042 ]
  %1068 = phi ptr [ %1053, %1059 ], [ %4, %1042 ]
  %1069 = phi i64 [ %1052, %1059 ], [ 0, %1042 ]
  %1070 = add nsw i32 %1067, 1
  store i32 %1070, ptr %1068, align 4, !tbaa !5
  %1071 = getelementptr inbounds i32, ptr %7, i64 %1069
  %1072 = load i32, ptr %1071, align 4, !tbaa !5
  %1073 = getelementptr inbounds i32, ptr %6, i64 %1069
  br label %1084

1074:                                             ; preds = %1051
  %1075 = icmp eq i32 %1054, %1057
  br i1 %1075, label %1076, label %1082

1076:                                             ; preds = %1074
  store i32 0, ptr %1053, align 4, !tbaa !5
  %1077 = getelementptr inbounds i32, ptr %8, i64 %1052
  %1078 = load i32, ptr %1077, align 4, !tbaa !5
  %1079 = getelementptr inbounds i32, ptr %6, i64 %1052
  store i32 %1078, ptr %1079, align 4, !tbaa !5
  %1080 = add nuw nsw i64 %1052, 1
  %1081 = icmp eq i64 %1080, %955
  br i1 %1081, label %1089, label %1051, !llvm.loop !417

1082:                                             ; preds = %1047, %1074
  %1083 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

1084:                                             ; preds = %1060, %1066
  %1085 = phi ptr [ %1073, %1066 ], [ %1053, %1060 ]
  %1086 = phi i32 [ %1072, %1066 ], [ 1, %1060 ]
  %1087 = load i32, ptr %1085, align 4, !tbaa !5
  %1088 = add nsw i32 %1087, %1086
  store i32 %1088, ptr %1085, align 4, !tbaa !5
  br label %1089

1089:                                             ; preds = %1076, %1084, %1049, %1031
  %1090 = icmp eq i32 %1041, %5
  br i1 %1090, label %3047, label %958, !llvm.loop !418

1091:                                             ; preds = %941, %1227
  %1092 = phi i32 [ 0, %941 ], [ %1176, %1227 ]
  %1093 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %942, label %1094, label %1163

1094:                                             ; preds = %1091, %1153
  %1095 = phi i32 [ %1162, %1153 ], [ 0, %1091 ]
  %1096 = phi i64 [ %1104, %1153 ], [ %946, %1091 ]
  %1097 = phi i64 [ %1161, %1153 ], [ %945, %1091 ]
  %1098 = phi i32 [ %1159, %1153 ], [ %1093, %1091 ]
  %1099 = sub i32 %944, %1095
  %1100 = tail call i32 @llvm.smin.i32(i32 %1099, i32 0)
  %1101 = sub i32 %1099, %1100
  %1102 = zext i32 %1101 to i64
  %1103 = add nuw nsw i64 %1102, 1
  %1104 = add nsw i64 %1096, -1
  %1105 = icmp ult i32 %1101, 31
  br i1 %1105, label %1141, label %1106

1106:                                             ; preds = %1094
  %1107 = and i64 %1103, 8589934560
  %1108 = sub i64 %1097, %1107
  br label %1109

1109:                                             ; preds = %1109, %1106
  %1110 = phi i64 [ 0, %1106 ], [ %1133, %1109 ]
  %1111 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1106 ], [ %1129, %1109 ]
  %1112 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1106 ], [ %1130, %1109 ]
  %1113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1106 ], [ %1131, %1109 ]
  %1114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1106 ], [ %1132, %1109 ]
  %1115 = sub i64 %1097, %1110
  %1116 = getelementptr inbounds i32, ptr %11, i64 %1115
  %1117 = getelementptr inbounds i32, ptr %1116, i64 -7
  %1118 = load <8 x i32>, ptr %1117, align 4, !tbaa !5
  %1119 = shufflevector <8 x i32> %1118, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1120 = getelementptr inbounds i32, ptr %1116, i64 -15
  %1121 = load <8 x i32>, ptr %1120, align 4, !tbaa !5
  %1122 = shufflevector <8 x i32> %1121, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1123 = getelementptr inbounds i32, ptr %1116, i64 -23
  %1124 = load <8 x i32>, ptr %1123, align 4, !tbaa !5
  %1125 = shufflevector <8 x i32> %1124, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1126 = getelementptr inbounds i32, ptr %1116, i64 -31
  %1127 = load <8 x i32>, ptr %1126, align 4, !tbaa !5
  %1128 = shufflevector <8 x i32> %1127, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1129 = mul <8 x i32> %1119, %1111
  %1130 = mul <8 x i32> %1122, %1112
  %1131 = mul <8 x i32> %1125, %1113
  %1132 = mul <8 x i32> %1128, %1114
  %1133 = add nuw i64 %1110, 32
  %1134 = icmp eq i64 %1133, %1107
  br i1 %1134, label %1135, label %1109, !llvm.loop !419

1135:                                             ; preds = %1109
  %1136 = mul <8 x i32> %1130, %1129
  %1137 = mul <8 x i32> %1131, %1136
  %1138 = mul <8 x i32> %1132, %1137
  %1139 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1138)
  %1140 = icmp eq i64 %1103, %1107
  br i1 %1140, label %1153, label %1141

1141:                                             ; preds = %1094, %1135
  %1142 = phi i64 [ %1097, %1094 ], [ %1108, %1135 ]
  %1143 = phi i32 [ 1, %1094 ], [ %1139, %1135 ]
  br label %1144

1144:                                             ; preds = %1141, %1144
  %1145 = phi i64 [ %1150, %1144 ], [ %1142, %1141 ]
  %1146 = phi i32 [ %1149, %1144 ], [ %1143, %1141 ]
  %1147 = getelementptr inbounds i32, ptr %11, i64 %1145
  %1148 = load i32, ptr %1147, align 4, !tbaa !5
  %1149 = mul nsw i32 %1148, %1146
  %1150 = add nsw i64 %1145, -1
  %1151 = trunc i64 %1145 to i32
  %1152 = icmp sgt i32 %1151, 0
  br i1 %1152, label %1144, label %1153, !llvm.loop !420

1153:                                             ; preds = %1144, %1135
  %1154 = phi i32 [ %1139, %1135 ], [ %1149, %1144 ]
  %1155 = and i64 %1104, 4294967295
  %1156 = getelementptr inbounds i32, ptr %6, i64 %1155
  %1157 = load i32, ptr %1156, align 4, !tbaa !5
  %1158 = mul nsw i32 %1157, %1154
  %1159 = add nsw i32 %1158, %1098
  %1160 = icmp sgt i64 %1096, 2
  %1161 = add nsw i64 %1097, -1
  %1162 = add i32 %1095, 1
  br i1 %1160, label %1094, label %1163, !llvm.loop !421

1163:                                             ; preds = %1153, %1091
  %1164 = phi i32 [ %1093, %1091 ], [ %1159, %1153 ]
  %1165 = icmp slt i32 %1164, %5
  br i1 %1165, label %1168, label %1166

1166:                                             ; preds = %1163
  %1167 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3052

1168:                                             ; preds = %1163
  %1169 = sext i32 %1164 to i64
  %1170 = getelementptr inbounds i8, ptr %626, i64 %1169
  %1171 = load i8, ptr %1170, align 1, !tbaa !11
  %1172 = sext i8 %1171 to i32
  %1173 = load i32, ptr %628, align 4, !tbaa !5
  %1174 = mul nsw i32 %1172, %1172
  %1175 = add nsw i32 %1174, %1173
  store i32 %1175, ptr %628, align 4, !tbaa !5
  %1176 = add nuw nsw i32 %1092, 1
  br i1 %943, label %1177, label %1227

1177:                                             ; preds = %1168
  %1178 = load i32, ptr %4, align 4, !tbaa !5
  %1179 = load i32, ptr %12, align 4, !tbaa !5
  %1180 = add nsw i32 %1179, -1
  %1181 = icmp slt i32 %1178, %1180
  br i1 %1181, label %1204, label %1182

1182:                                             ; preds = %1177
  %1183 = icmp eq i32 %1178, %1180
  br i1 %1183, label %1184, label %1220

1184:                                             ; preds = %1182
  store i32 0, ptr %4, align 4, !tbaa !5
  %1185 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1185, ptr %6, align 4, !tbaa !5
  br i1 %948, label %1227, label %1186

1186:                                             ; preds = %1184, %1214
  %1187 = phi i64 [ %1218, %1214 ], [ 1, %1184 ]
  %1188 = getelementptr inbounds i32, ptr %4, i64 %1187
  %1189 = load i32, ptr %1188, align 4, !tbaa !5
  %1190 = getelementptr inbounds i32, ptr %12, i64 %1187
  %1191 = load i32, ptr %1190, align 4, !tbaa !5
  %1192 = add nsw i32 %1191, -1
  %1193 = icmp slt i32 %1189, %1192
  br i1 %1193, label %1194, label %1212

1194:                                             ; preds = %1186
  br i1 %1181, label %1204, label %1195

1195:                                             ; preds = %1194
  %1196 = shl i64 %1187, 32
  %1197 = add i64 %1196, -4294967296
  %1198 = ashr exact i64 %1197, 32
  %1199 = getelementptr inbounds i32, ptr %7, i64 %1198
  %1200 = load i32, ptr %1199, align 4, !tbaa !5
  %1201 = getelementptr inbounds i32, ptr %6, i64 %1187
  %1202 = load i32, ptr %1201, align 4, !tbaa !5
  %1203 = add nsw i32 %1202, %1200
  store i32 %1203, ptr %1201, align 4, !tbaa !5
  br label %1222

1204:                                             ; preds = %1177, %1194
  %1205 = phi i32 [ %1189, %1194 ], [ %1178, %1177 ]
  %1206 = phi ptr [ %1188, %1194 ], [ %4, %1177 ]
  %1207 = phi i64 [ %1187, %1194 ], [ 0, %1177 ]
  %1208 = add nsw i32 %1205, 1
  store i32 %1208, ptr %1206, align 4, !tbaa !5
  %1209 = getelementptr inbounds i32, ptr %7, i64 %1207
  %1210 = load i32, ptr %1209, align 4, !tbaa !5
  %1211 = getelementptr inbounds i32, ptr %6, i64 %1207
  br label %1222

1212:                                             ; preds = %1186
  %1213 = icmp eq i32 %1189, %1192
  br i1 %1213, label %1214, label %1220

1214:                                             ; preds = %1212
  store i32 0, ptr %1188, align 4, !tbaa !5
  %1215 = getelementptr inbounds i32, ptr %8, i64 %1187
  %1216 = load i32, ptr %1215, align 4, !tbaa !5
  %1217 = getelementptr inbounds i32, ptr %6, i64 %1187
  store i32 %1216, ptr %1217, align 4, !tbaa !5
  %1218 = add nuw nsw i64 %1187, 1
  %1219 = icmp eq i64 %1218, %946
  br i1 %1219, label %1227, label %1186, !llvm.loop !422

1220:                                             ; preds = %1182, %1212
  %1221 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

1222:                                             ; preds = %1195, %1204
  %1223 = phi ptr [ %1211, %1204 ], [ %1188, %1195 ]
  %1224 = phi i32 [ %1210, %1204 ], [ 1, %1195 ]
  %1225 = load i32, ptr %1223, align 4, !tbaa !5
  %1226 = add nsw i32 %1225, %1224
  store i32 %1226, ptr %1223, align 4, !tbaa !5
  br label %1227

1227:                                             ; preds = %1214, %1222, %1184, %1168
  %1228 = icmp eq i32 %1176, %5
  br i1 %1228, label %3047, label %1091, !llvm.loop !423

1229:                                             ; preds = %634
  %1230 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 612, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3047

1231:                                             ; preds = %18
  %1232 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1233 = load ptr, ptr %1232, align 8, !tbaa !9
  %1234 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1235 = load ptr, ptr %1234, align 8, !tbaa !9
  store double 0.000000e+00, ptr %1235, align 8, !tbaa !18
  %1236 = icmp eq i32 %13, 0
  br i1 %1236, label %1237, label %1241

1237:                                             ; preds = %1231
  %1238 = load i8, ptr %1233, align 1, !tbaa !11
  %1239 = sitofp i8 %1238 to double
  %1240 = fmul fast double %1239, %1239
  store double %1240, ptr %1235, align 8, !tbaa !18
  br label %3047

1241:                                             ; preds = %1231
  switch i32 %1, label %1833 [
    i32 1, label %1242
    i32 0, label %1539
  ]

1242:                                             ; preds = %1241
  %1243 = getelementptr inbounds i32, ptr %3, i64 %19
  %1244 = load i32, ptr %1243, align 4, !tbaa !5
  %1245 = icmp eq i32 %1244, 0
  %1246 = icmp sgt i32 %5, 0
  br i1 %1245, label %1256, label %1247

1247:                                             ; preds = %1242
  br i1 %1246, label %1248, label %3047

1248:                                             ; preds = %1247
  %1249 = icmp sgt i32 %13, 1
  %1250 = icmp sgt i32 %13, 0
  %1251 = add i32 %13, -2
  %1252 = zext i32 %1251 to i64
  %1253 = zext i32 %13 to i64
  %1254 = add nuw i32 %5, 1
  %1255 = icmp eq i32 %13, 1
  br label %1401

1256:                                             ; preds = %1242
  br i1 %1246, label %1257, label %3047

1257:                                             ; preds = %1256
  %1258 = icmp sgt i32 %13, 1
  %1259 = icmp sgt i32 %13, 0
  %1260 = add i32 %13, -2
  %1261 = zext i32 %1260 to i64
  %1262 = zext i32 %13 to i64
  %1263 = add nuw i32 %5, 1
  %1264 = icmp eq i32 %13, 1
  br label %1265

1265:                                             ; preds = %1257, %1399
  %1266 = phi double [ 0.000000e+00, %1257 ], [ %1349, %1399 ]
  %1267 = phi i32 [ 0, %1257 ], [ %1351, %1399 ]
  %1268 = phi double [ 0.000000e+00, %1257 ], [ %1350, %1399 ]
  %1269 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1258, label %1270, label %1339

1270:                                             ; preds = %1265, %1329
  %1271 = phi i32 [ %1338, %1329 ], [ 0, %1265 ]
  %1272 = phi i64 [ %1280, %1329 ], [ %1262, %1265 ]
  %1273 = phi i64 [ %1337, %1329 ], [ %1261, %1265 ]
  %1274 = phi i32 [ %1335, %1329 ], [ %1269, %1265 ]
  %1275 = sub i32 %1260, %1271
  %1276 = tail call i32 @llvm.smin.i32(i32 %1275, i32 0)
  %1277 = sub i32 %1275, %1276
  %1278 = zext i32 %1277 to i64
  %1279 = add nuw nsw i64 %1278, 1
  %1280 = add nsw i64 %1272, -1
  %1281 = icmp ult i32 %1277, 31
  br i1 %1281, label %1317, label %1282

1282:                                             ; preds = %1270
  %1283 = and i64 %1279, 8589934560
  %1284 = sub i64 %1273, %1283
  br label %1285

1285:                                             ; preds = %1285, %1282
  %1286 = phi i64 [ 0, %1282 ], [ %1309, %1285 ]
  %1287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1282 ], [ %1305, %1285 ]
  %1288 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1282 ], [ %1306, %1285 ]
  %1289 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1282 ], [ %1307, %1285 ]
  %1290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1282 ], [ %1308, %1285 ]
  %1291 = sub i64 %1273, %1286
  %1292 = getelementptr inbounds i32, ptr %9, i64 %1291
  %1293 = getelementptr inbounds i32, ptr %1292, i64 -7
  %1294 = load <8 x i32>, ptr %1293, align 4, !tbaa !5
  %1295 = shufflevector <8 x i32> %1294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1296 = getelementptr inbounds i32, ptr %1292, i64 -15
  %1297 = load <8 x i32>, ptr %1296, align 4, !tbaa !5
  %1298 = shufflevector <8 x i32> %1297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1299 = getelementptr inbounds i32, ptr %1292, i64 -23
  %1300 = load <8 x i32>, ptr %1299, align 4, !tbaa !5
  %1301 = shufflevector <8 x i32> %1300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1302 = getelementptr inbounds i32, ptr %1292, i64 -31
  %1303 = load <8 x i32>, ptr %1302, align 4, !tbaa !5
  %1304 = shufflevector <8 x i32> %1303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1305 = mul <8 x i32> %1295, %1287
  %1306 = mul <8 x i32> %1298, %1288
  %1307 = mul <8 x i32> %1301, %1289
  %1308 = mul <8 x i32> %1304, %1290
  %1309 = add nuw i64 %1286, 32
  %1310 = icmp eq i64 %1309, %1283
  br i1 %1310, label %1311, label %1285, !llvm.loop !424

1311:                                             ; preds = %1285
  %1312 = mul <8 x i32> %1306, %1305
  %1313 = mul <8 x i32> %1307, %1312
  %1314 = mul <8 x i32> %1308, %1313
  %1315 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1314)
  %1316 = icmp eq i64 %1279, %1283
  br i1 %1316, label %1329, label %1317

1317:                                             ; preds = %1270, %1311
  %1318 = phi i64 [ %1273, %1270 ], [ %1284, %1311 ]
  %1319 = phi i32 [ 1, %1270 ], [ %1315, %1311 ]
  br label %1320

1320:                                             ; preds = %1317, %1320
  %1321 = phi i64 [ %1326, %1320 ], [ %1318, %1317 ]
  %1322 = phi i32 [ %1325, %1320 ], [ %1319, %1317 ]
  %1323 = getelementptr inbounds i32, ptr %9, i64 %1321
  %1324 = load i32, ptr %1323, align 4, !tbaa !5
  %1325 = mul nsw i32 %1324, %1322
  %1326 = add nsw i64 %1321, -1
  %1327 = trunc i64 %1321 to i32
  %1328 = icmp sgt i32 %1327, 0
  br i1 %1328, label %1320, label %1329, !llvm.loop !425

1329:                                             ; preds = %1320, %1311
  %1330 = phi i32 [ %1315, %1311 ], [ %1325, %1320 ]
  %1331 = and i64 %1280, 4294967295
  %1332 = getelementptr inbounds i32, ptr %6, i64 %1331
  %1333 = load i32, ptr %1332, align 4, !tbaa !5
  %1334 = mul nsw i32 %1333, %1330
  %1335 = add nsw i32 %1334, %1274
  %1336 = icmp sgt i64 %1272, 2
  %1337 = add nsw i64 %1273, -1
  %1338 = add i32 %1271, 1
  br i1 %1336, label %1270, label %1339, !llvm.loop !426

1339:                                             ; preds = %1329, %1265
  %1340 = phi i32 [ %1269, %1265 ], [ %1335, %1329 ]
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds double, ptr %2, i64 %1341
  %1343 = load double, ptr %1342, align 8, !tbaa !18
  %1344 = getelementptr inbounds i8, ptr %1233, i64 %1341
  %1345 = load i8, ptr %1344, align 1, !tbaa !11
  %1346 = sitofp i8 %1345 to double
  %1347 = fmul fast double %1343, %1346
  %1348 = fmul fast double %1347, %1347
  %1349 = fadd fast double %1348, %1266
  store double %1349, ptr %1235, align 8, !tbaa !18
  %1350 = fadd fast double %1343, %1268
  %1351 = add nuw nsw i32 %1267, 1
  br i1 %1259, label %1352, label %1399

1352:                                             ; preds = %1339
  %1353 = load i32, ptr %4, align 4, !tbaa !5
  %1354 = load i32, ptr %12, align 4, !tbaa !5
  %1355 = add nsw i32 %1354, -1
  %1356 = icmp slt i32 %1353, %1355
  br i1 %1356, label %1376, label %1357

1357:                                             ; preds = %1352
  %1358 = icmp eq i32 %1353, %1355
  br i1 %1358, label %1359, label %1392

1359:                                             ; preds = %1357
  store i32 0, ptr %4, align 4, !tbaa !5
  %1360 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1360, ptr %6, align 4, !tbaa !5
  br i1 %1264, label %1399, label %1361

1361:                                             ; preds = %1359, %1386
  %1362 = phi i64 [ %1390, %1386 ], [ 1, %1359 ]
  %1363 = getelementptr inbounds i32, ptr %4, i64 %1362
  %1364 = load i32, ptr %1363, align 4, !tbaa !5
  %1365 = getelementptr inbounds i32, ptr %12, i64 %1362
  %1366 = load i32, ptr %1365, align 4, !tbaa !5
  %1367 = add nsw i32 %1366, -1
  %1368 = icmp slt i32 %1364, %1367
  br i1 %1368, label %1369, label %1384

1369:                                             ; preds = %1361
  br i1 %1356, label %1376, label %1370

1370:                                             ; preds = %1369
  %1371 = getelementptr inbounds i32, ptr %7, i64 %1362
  %1372 = load i32, ptr %1371, align 4, !tbaa !5
  %1373 = getelementptr inbounds i32, ptr %6, i64 %1362
  %1374 = load i32, ptr %1373, align 4, !tbaa !5
  %1375 = add nsw i32 %1374, %1372
  store i32 %1375, ptr %1373, align 4, !tbaa !5
  br label %1394

1376:                                             ; preds = %1352, %1369
  %1377 = phi i32 [ %1364, %1369 ], [ %1353, %1352 ]
  %1378 = phi ptr [ %1363, %1369 ], [ %4, %1352 ]
  %1379 = phi i64 [ %1362, %1369 ], [ 0, %1352 ]
  %1380 = add nsw i32 %1377, 1
  store i32 %1380, ptr %1378, align 4, !tbaa !5
  %1381 = getelementptr inbounds i32, ptr %7, i64 %1379
  %1382 = load i32, ptr %1381, align 4, !tbaa !5
  %1383 = getelementptr inbounds i32, ptr %6, i64 %1379
  br label %1394

1384:                                             ; preds = %1361
  %1385 = icmp eq i32 %1364, %1367
  br i1 %1385, label %1386, label %1392

1386:                                             ; preds = %1384
  store i32 0, ptr %1363, align 4, !tbaa !5
  %1387 = getelementptr inbounds i32, ptr %8, i64 %1362
  %1388 = load i32, ptr %1387, align 4, !tbaa !5
  %1389 = getelementptr inbounds i32, ptr %6, i64 %1362
  store i32 %1388, ptr %1389, align 4, !tbaa !5
  %1390 = add nuw nsw i64 %1362, 1
  %1391 = icmp eq i64 %1390, %1262
  br i1 %1391, label %1399, label %1361, !llvm.loop !427

1392:                                             ; preds = %1357, %1384
  %1393 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 635, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

1394:                                             ; preds = %1370, %1376
  %1395 = phi ptr [ %1383, %1376 ], [ %1363, %1370 ]
  %1396 = phi i32 [ %1382, %1376 ], [ 1, %1370 ]
  %1397 = load i32, ptr %1395, align 4, !tbaa !5
  %1398 = add nsw i32 %1397, %1396
  store i32 %1398, ptr %1395, align 4, !tbaa !5
  br label %1399

1399:                                             ; preds = %1386, %1394, %1359, %1339
  %1400 = icmp eq i32 %1351, %5
  br i1 %1400, label %3047, label %1265, !llvm.loop !428

1401:                                             ; preds = %1248, %1537
  %1402 = phi double [ 0.000000e+00, %1248 ], [ %1485, %1537 ]
  %1403 = phi i32 [ 0, %1248 ], [ %1486, %1537 ]
  %1404 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1249, label %1405, label %1474

1405:                                             ; preds = %1401, %1464
  %1406 = phi i32 [ %1473, %1464 ], [ 0, %1401 ]
  %1407 = phi i64 [ %1415, %1464 ], [ %1253, %1401 ]
  %1408 = phi i64 [ %1472, %1464 ], [ %1252, %1401 ]
  %1409 = phi i32 [ %1470, %1464 ], [ %1404, %1401 ]
  %1410 = sub i32 %1251, %1406
  %1411 = tail call i32 @llvm.smin.i32(i32 %1410, i32 0)
  %1412 = sub i32 %1410, %1411
  %1413 = zext i32 %1412 to i64
  %1414 = add nuw nsw i64 %1413, 1
  %1415 = add nsw i64 %1407, -1
  %1416 = icmp ult i32 %1412, 31
  br i1 %1416, label %1452, label %1417

1417:                                             ; preds = %1405
  %1418 = and i64 %1414, 8589934560
  %1419 = sub i64 %1408, %1418
  br label %1420

1420:                                             ; preds = %1420, %1417
  %1421 = phi i64 [ 0, %1417 ], [ %1444, %1420 ]
  %1422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1417 ], [ %1440, %1420 ]
  %1423 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1417 ], [ %1441, %1420 ]
  %1424 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1417 ], [ %1442, %1420 ]
  %1425 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1417 ], [ %1443, %1420 ]
  %1426 = sub i64 %1408, %1421
  %1427 = getelementptr inbounds i32, ptr %11, i64 %1426
  %1428 = getelementptr inbounds i32, ptr %1427, i64 -7
  %1429 = load <8 x i32>, ptr %1428, align 4, !tbaa !5
  %1430 = shufflevector <8 x i32> %1429, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1431 = getelementptr inbounds i32, ptr %1427, i64 -15
  %1432 = load <8 x i32>, ptr %1431, align 4, !tbaa !5
  %1433 = shufflevector <8 x i32> %1432, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1434 = getelementptr inbounds i32, ptr %1427, i64 -23
  %1435 = load <8 x i32>, ptr %1434, align 4, !tbaa !5
  %1436 = shufflevector <8 x i32> %1435, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1437 = getelementptr inbounds i32, ptr %1427, i64 -31
  %1438 = load <8 x i32>, ptr %1437, align 4, !tbaa !5
  %1439 = shufflevector <8 x i32> %1438, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1440 = mul <8 x i32> %1430, %1422
  %1441 = mul <8 x i32> %1433, %1423
  %1442 = mul <8 x i32> %1436, %1424
  %1443 = mul <8 x i32> %1439, %1425
  %1444 = add nuw i64 %1421, 32
  %1445 = icmp eq i64 %1444, %1418
  br i1 %1445, label %1446, label %1420, !llvm.loop !429

1446:                                             ; preds = %1420
  %1447 = mul <8 x i32> %1441, %1440
  %1448 = mul <8 x i32> %1442, %1447
  %1449 = mul <8 x i32> %1443, %1448
  %1450 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1449)
  %1451 = icmp eq i64 %1414, %1418
  br i1 %1451, label %1464, label %1452

1452:                                             ; preds = %1405, %1446
  %1453 = phi i64 [ %1408, %1405 ], [ %1419, %1446 ]
  %1454 = phi i32 [ 1, %1405 ], [ %1450, %1446 ]
  br label %1455

1455:                                             ; preds = %1452, %1455
  %1456 = phi i64 [ %1461, %1455 ], [ %1453, %1452 ]
  %1457 = phi i32 [ %1460, %1455 ], [ %1454, %1452 ]
  %1458 = getelementptr inbounds i32, ptr %11, i64 %1456
  %1459 = load i32, ptr %1458, align 4, !tbaa !5
  %1460 = mul nsw i32 %1459, %1457
  %1461 = add nsw i64 %1456, -1
  %1462 = trunc i64 %1456 to i32
  %1463 = icmp sgt i32 %1462, 0
  br i1 %1463, label %1455, label %1464, !llvm.loop !430

1464:                                             ; preds = %1455, %1446
  %1465 = phi i32 [ %1450, %1446 ], [ %1460, %1455 ]
  %1466 = and i64 %1415, 4294967295
  %1467 = getelementptr inbounds i32, ptr %6, i64 %1466
  %1468 = load i32, ptr %1467, align 4, !tbaa !5
  %1469 = mul nsw i32 %1468, %1465
  %1470 = add nsw i32 %1469, %1409
  %1471 = icmp sgt i64 %1407, 2
  %1472 = add nsw i64 %1408, -1
  %1473 = add i32 %1406, 1
  br i1 %1471, label %1405, label %1474, !llvm.loop !431

1474:                                             ; preds = %1464, %1401
  %1475 = phi i32 [ %1404, %1401 ], [ %1470, %1464 ]
  %1476 = icmp slt i32 %1475, %5
  br i1 %1476, label %1479, label %1477

1477:                                             ; preds = %1474
  %1478 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 635, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3052

1479:                                             ; preds = %1474
  %1480 = sext i32 %1475 to i64
  %1481 = getelementptr inbounds i8, ptr %1233, i64 %1480
  %1482 = load i8, ptr %1481, align 1, !tbaa !11
  %1483 = sitofp i8 %1482 to double
  %1484 = fmul fast double %1483, %1483
  %1485 = fadd fast double %1484, %1402
  store double %1485, ptr %1235, align 8, !tbaa !18
  %1486 = add nuw nsw i32 %1403, 1
  br i1 %1250, label %1487, label %1537

1487:                                             ; preds = %1479
  %1488 = load i32, ptr %4, align 4, !tbaa !5
  %1489 = load i32, ptr %12, align 4, !tbaa !5
  %1490 = add nsw i32 %1489, -1
  %1491 = icmp slt i32 %1488, %1490
  br i1 %1491, label %1514, label %1492

1492:                                             ; preds = %1487
  %1493 = icmp eq i32 %1488, %1490
  br i1 %1493, label %1494, label %1530

1494:                                             ; preds = %1492
  store i32 0, ptr %4, align 4, !tbaa !5
  %1495 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1495, ptr %6, align 4, !tbaa !5
  br i1 %1255, label %1537, label %1496

1496:                                             ; preds = %1494, %1524
  %1497 = phi i64 [ %1528, %1524 ], [ 1, %1494 ]
  %1498 = getelementptr inbounds i32, ptr %4, i64 %1497
  %1499 = load i32, ptr %1498, align 4, !tbaa !5
  %1500 = getelementptr inbounds i32, ptr %12, i64 %1497
  %1501 = load i32, ptr %1500, align 4, !tbaa !5
  %1502 = add nsw i32 %1501, -1
  %1503 = icmp slt i32 %1499, %1502
  br i1 %1503, label %1504, label %1522

1504:                                             ; preds = %1496
  br i1 %1491, label %1514, label %1505

1505:                                             ; preds = %1504
  %1506 = shl i64 %1497, 32
  %1507 = add i64 %1506, -4294967296
  %1508 = ashr exact i64 %1507, 32
  %1509 = getelementptr inbounds i32, ptr %7, i64 %1508
  %1510 = load i32, ptr %1509, align 4, !tbaa !5
  %1511 = getelementptr inbounds i32, ptr %6, i64 %1497
  %1512 = load i32, ptr %1511, align 4, !tbaa !5
  %1513 = add nsw i32 %1512, %1510
  store i32 %1513, ptr %1511, align 4, !tbaa !5
  br label %1532

1514:                                             ; preds = %1487, %1504
  %1515 = phi i32 [ %1499, %1504 ], [ %1488, %1487 ]
  %1516 = phi ptr [ %1498, %1504 ], [ %4, %1487 ]
  %1517 = phi i64 [ %1497, %1504 ], [ 0, %1487 ]
  %1518 = add nsw i32 %1515, 1
  store i32 %1518, ptr %1516, align 4, !tbaa !5
  %1519 = getelementptr inbounds i32, ptr %7, i64 %1517
  %1520 = load i32, ptr %1519, align 4, !tbaa !5
  %1521 = getelementptr inbounds i32, ptr %6, i64 %1517
  br label %1532

1522:                                             ; preds = %1496
  %1523 = icmp eq i32 %1499, %1502
  br i1 %1523, label %1524, label %1530

1524:                                             ; preds = %1522
  store i32 0, ptr %1498, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %8, i64 %1497
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = getelementptr inbounds i32, ptr %6, i64 %1497
  store i32 %1526, ptr %1527, align 4, !tbaa !5
  %1528 = add nuw nsw i64 %1497, 1
  %1529 = icmp eq i64 %1528, %1253
  br i1 %1529, label %1537, label %1496, !llvm.loop !432

1530:                                             ; preds = %1492, %1522
  %1531 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 635, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

1532:                                             ; preds = %1505, %1514
  %1533 = phi ptr [ %1521, %1514 ], [ %1498, %1505 ]
  %1534 = phi i32 [ %1520, %1514 ], [ 1, %1505 ]
  %1535 = load i32, ptr %1533, align 4, !tbaa !5
  %1536 = add nsw i32 %1535, %1534
  store i32 %1536, ptr %1533, align 4, !tbaa !5
  br label %1537

1537:                                             ; preds = %1524, %1532, %1494, %1479
  %1538 = icmp eq i32 %1486, %5
  br i1 %1538, label %3047, label %1401, !llvm.loop !433

1539:                                             ; preds = %1241
  %1540 = getelementptr inbounds i32, ptr %3, i64 %19
  %1541 = load i32, ptr %1540, align 4, !tbaa !5
  %1542 = icmp eq i32 %1541, 0
  %1543 = icmp sgt i32 %5, 0
  br i1 %1542, label %1553, label %1544

1544:                                             ; preds = %1539
  br i1 %1543, label %1545, label %3047

1545:                                             ; preds = %1544
  %1546 = icmp sgt i32 %13, 1
  %1547 = icmp sgt i32 %13, 0
  %1548 = add i32 %13, -2
  %1549 = zext i32 %1548 to i64
  %1550 = zext i32 %13 to i64
  %1551 = add nuw i32 %5, 1
  %1552 = icmp eq i32 %13, 1
  br label %1695

1553:                                             ; preds = %1539
  br i1 %1543, label %1554, label %3047

1554:                                             ; preds = %1553
  %1555 = icmp sgt i32 %13, 1
  %1556 = icmp sgt i32 %13, 0
  %1557 = add i32 %13, -2
  %1558 = zext i32 %1557 to i64
  %1559 = zext i32 %13 to i64
  %1560 = add nuw i32 %5, 1
  %1561 = icmp eq i32 %13, 1
  br label %1562

1562:                                             ; preds = %1554, %1693
  %1563 = phi double [ 0.000000e+00, %1554 ], [ %1643, %1693 ]
  %1564 = phi i32 [ 0, %1554 ], [ %1645, %1693 ]
  %1565 = phi double [ 0.000000e+00, %1554 ], [ %1644, %1693 ]
  %1566 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1555, label %1567, label %1636

1567:                                             ; preds = %1562, %1626
  %1568 = phi i32 [ %1635, %1626 ], [ 0, %1562 ]
  %1569 = phi i64 [ %1577, %1626 ], [ %1559, %1562 ]
  %1570 = phi i64 [ %1634, %1626 ], [ %1558, %1562 ]
  %1571 = phi i32 [ %1632, %1626 ], [ %1566, %1562 ]
  %1572 = sub i32 %1557, %1568
  %1573 = tail call i32 @llvm.smin.i32(i32 %1572, i32 0)
  %1574 = sub i32 %1572, %1573
  %1575 = zext i32 %1574 to i64
  %1576 = add nuw nsw i64 %1575, 1
  %1577 = add nsw i64 %1569, -1
  %1578 = icmp ult i32 %1574, 31
  br i1 %1578, label %1614, label %1579

1579:                                             ; preds = %1567
  %1580 = and i64 %1576, 8589934560
  %1581 = sub i64 %1570, %1580
  br label %1582

1582:                                             ; preds = %1582, %1579
  %1583 = phi i64 [ 0, %1579 ], [ %1606, %1582 ]
  %1584 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1579 ], [ %1602, %1582 ]
  %1585 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1579 ], [ %1603, %1582 ]
  %1586 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1579 ], [ %1604, %1582 ]
  %1587 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1579 ], [ %1605, %1582 ]
  %1588 = sub i64 %1570, %1583
  %1589 = getelementptr inbounds i32, ptr %9, i64 %1588
  %1590 = getelementptr inbounds i32, ptr %1589, i64 -7
  %1591 = load <8 x i32>, ptr %1590, align 4, !tbaa !5
  %1592 = shufflevector <8 x i32> %1591, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1593 = getelementptr inbounds i32, ptr %1589, i64 -15
  %1594 = load <8 x i32>, ptr %1593, align 4, !tbaa !5
  %1595 = shufflevector <8 x i32> %1594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1596 = getelementptr inbounds i32, ptr %1589, i64 -23
  %1597 = load <8 x i32>, ptr %1596, align 4, !tbaa !5
  %1598 = shufflevector <8 x i32> %1597, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1599 = getelementptr inbounds i32, ptr %1589, i64 -31
  %1600 = load <8 x i32>, ptr %1599, align 4, !tbaa !5
  %1601 = shufflevector <8 x i32> %1600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1602 = mul <8 x i32> %1592, %1584
  %1603 = mul <8 x i32> %1595, %1585
  %1604 = mul <8 x i32> %1598, %1586
  %1605 = mul <8 x i32> %1601, %1587
  %1606 = add nuw i64 %1583, 32
  %1607 = icmp eq i64 %1606, %1580
  br i1 %1607, label %1608, label %1582, !llvm.loop !434

1608:                                             ; preds = %1582
  %1609 = mul <8 x i32> %1603, %1602
  %1610 = mul <8 x i32> %1604, %1609
  %1611 = mul <8 x i32> %1605, %1610
  %1612 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1611)
  %1613 = icmp eq i64 %1576, %1580
  br i1 %1613, label %1626, label %1614

1614:                                             ; preds = %1567, %1608
  %1615 = phi i64 [ %1570, %1567 ], [ %1581, %1608 ]
  %1616 = phi i32 [ 1, %1567 ], [ %1612, %1608 ]
  br label %1617

1617:                                             ; preds = %1614, %1617
  %1618 = phi i64 [ %1623, %1617 ], [ %1615, %1614 ]
  %1619 = phi i32 [ %1622, %1617 ], [ %1616, %1614 ]
  %1620 = getelementptr inbounds i32, ptr %9, i64 %1618
  %1621 = load i32, ptr %1620, align 4, !tbaa !5
  %1622 = mul nsw i32 %1621, %1619
  %1623 = add nsw i64 %1618, -1
  %1624 = trunc i64 %1618 to i32
  %1625 = icmp sgt i32 %1624, 0
  br i1 %1625, label %1617, label %1626, !llvm.loop !435

1626:                                             ; preds = %1617, %1608
  %1627 = phi i32 [ %1612, %1608 ], [ %1622, %1617 ]
  %1628 = and i64 %1577, 4294967295
  %1629 = getelementptr inbounds i32, ptr %6, i64 %1628
  %1630 = load i32, ptr %1629, align 4, !tbaa !5
  %1631 = mul nsw i32 %1630, %1627
  %1632 = add nsw i32 %1631, %1571
  %1633 = icmp sgt i64 %1569, 2
  %1634 = add nsw i64 %1570, -1
  %1635 = add i32 %1568, 1
  br i1 %1633, label %1567, label %1636, !llvm.loop !436

1636:                                             ; preds = %1626, %1562
  %1637 = phi i32 [ %1566, %1562 ], [ %1632, %1626 ]
  %1638 = sext i32 %1637 to i64
  %1639 = getelementptr inbounds i8, ptr %1233, i64 %1638
  %1640 = load i8, ptr %1639, align 1, !tbaa !11
  %1641 = sitofp i8 %1640 to double
  %1642 = fmul fast double %1641, %1641
  %1643 = fadd fast double %1642, %1563
  store double %1643, ptr %1235, align 8, !tbaa !18
  %1644 = fadd fast double %1565, 1.000000e+00
  %1645 = add nuw nsw i32 %1564, 1
  br i1 %1556, label %1646, label %1693

1646:                                             ; preds = %1636
  %1647 = load i32, ptr %4, align 4, !tbaa !5
  %1648 = load i32, ptr %12, align 4, !tbaa !5
  %1649 = add nsw i32 %1648, -1
  %1650 = icmp slt i32 %1647, %1649
  br i1 %1650, label %1670, label %1651

1651:                                             ; preds = %1646
  %1652 = icmp eq i32 %1647, %1649
  br i1 %1652, label %1653, label %1686

1653:                                             ; preds = %1651
  store i32 0, ptr %4, align 4, !tbaa !5
  %1654 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1654, ptr %6, align 4, !tbaa !5
  br i1 %1561, label %1693, label %1655

1655:                                             ; preds = %1653, %1680
  %1656 = phi i64 [ %1684, %1680 ], [ 1, %1653 ]
  %1657 = getelementptr inbounds i32, ptr %4, i64 %1656
  %1658 = load i32, ptr %1657, align 4, !tbaa !5
  %1659 = getelementptr inbounds i32, ptr %12, i64 %1656
  %1660 = load i32, ptr %1659, align 4, !tbaa !5
  %1661 = add nsw i32 %1660, -1
  %1662 = icmp slt i32 %1658, %1661
  br i1 %1662, label %1663, label %1678

1663:                                             ; preds = %1655
  br i1 %1650, label %1670, label %1664

1664:                                             ; preds = %1663
  %1665 = getelementptr inbounds i32, ptr %7, i64 %1656
  %1666 = load i32, ptr %1665, align 4, !tbaa !5
  %1667 = getelementptr inbounds i32, ptr %6, i64 %1656
  %1668 = load i32, ptr %1667, align 4, !tbaa !5
  %1669 = add nsw i32 %1668, %1666
  store i32 %1669, ptr %1667, align 4, !tbaa !5
  br label %1688

1670:                                             ; preds = %1646, %1663
  %1671 = phi i32 [ %1658, %1663 ], [ %1647, %1646 ]
  %1672 = phi ptr [ %1657, %1663 ], [ %4, %1646 ]
  %1673 = phi i64 [ %1656, %1663 ], [ 0, %1646 ]
  %1674 = add nsw i32 %1671, 1
  store i32 %1674, ptr %1672, align 4, !tbaa !5
  %1675 = getelementptr inbounds i32, ptr %7, i64 %1673
  %1676 = load i32, ptr %1675, align 4, !tbaa !5
  %1677 = getelementptr inbounds i32, ptr %6, i64 %1673
  br label %1688

1678:                                             ; preds = %1655
  %1679 = icmp eq i32 %1658, %1661
  br i1 %1679, label %1680, label %1686

1680:                                             ; preds = %1678
  store i32 0, ptr %1657, align 4, !tbaa !5
  %1681 = getelementptr inbounds i32, ptr %8, i64 %1656
  %1682 = load i32, ptr %1681, align 4, !tbaa !5
  %1683 = getelementptr inbounds i32, ptr %6, i64 %1656
  store i32 %1682, ptr %1683, align 4, !tbaa !5
  %1684 = add nuw nsw i64 %1656, 1
  %1685 = icmp eq i64 %1684, %1559
  br i1 %1685, label %1693, label %1655, !llvm.loop !437

1686:                                             ; preds = %1651, %1678
  %1687 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 635, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

1688:                                             ; preds = %1664, %1670
  %1689 = phi ptr [ %1677, %1670 ], [ %1657, %1664 ]
  %1690 = phi i32 [ %1676, %1670 ], [ 1, %1664 ]
  %1691 = load i32, ptr %1689, align 4, !tbaa !5
  %1692 = add nsw i32 %1691, %1690
  store i32 %1692, ptr %1689, align 4, !tbaa !5
  br label %1693

1693:                                             ; preds = %1680, %1688, %1653, %1636
  %1694 = icmp eq i32 %1645, %5
  br i1 %1694, label %3047, label %1562, !llvm.loop !438

1695:                                             ; preds = %1545, %1831
  %1696 = phi double [ 0.000000e+00, %1545 ], [ %1779, %1831 ]
  %1697 = phi i32 [ 0, %1545 ], [ %1780, %1831 ]
  %1698 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1546, label %1699, label %1768

1699:                                             ; preds = %1695, %1758
  %1700 = phi i32 [ %1767, %1758 ], [ 0, %1695 ]
  %1701 = phi i64 [ %1709, %1758 ], [ %1550, %1695 ]
  %1702 = phi i64 [ %1766, %1758 ], [ %1549, %1695 ]
  %1703 = phi i32 [ %1764, %1758 ], [ %1698, %1695 ]
  %1704 = sub i32 %1548, %1700
  %1705 = tail call i32 @llvm.smin.i32(i32 %1704, i32 0)
  %1706 = sub i32 %1704, %1705
  %1707 = zext i32 %1706 to i64
  %1708 = add nuw nsw i64 %1707, 1
  %1709 = add nsw i64 %1701, -1
  %1710 = icmp ult i32 %1706, 31
  br i1 %1710, label %1746, label %1711

1711:                                             ; preds = %1699
  %1712 = and i64 %1708, 8589934560
  %1713 = sub i64 %1702, %1712
  br label %1714

1714:                                             ; preds = %1714, %1711
  %1715 = phi i64 [ 0, %1711 ], [ %1738, %1714 ]
  %1716 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1711 ], [ %1734, %1714 ]
  %1717 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1711 ], [ %1735, %1714 ]
  %1718 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1711 ], [ %1736, %1714 ]
  %1719 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1711 ], [ %1737, %1714 ]
  %1720 = sub i64 %1702, %1715
  %1721 = getelementptr inbounds i32, ptr %11, i64 %1720
  %1722 = getelementptr inbounds i32, ptr %1721, i64 -7
  %1723 = load <8 x i32>, ptr %1722, align 4, !tbaa !5
  %1724 = shufflevector <8 x i32> %1723, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1725 = getelementptr inbounds i32, ptr %1721, i64 -15
  %1726 = load <8 x i32>, ptr %1725, align 4, !tbaa !5
  %1727 = shufflevector <8 x i32> %1726, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1728 = getelementptr inbounds i32, ptr %1721, i64 -23
  %1729 = load <8 x i32>, ptr %1728, align 4, !tbaa !5
  %1730 = shufflevector <8 x i32> %1729, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1731 = getelementptr inbounds i32, ptr %1721, i64 -31
  %1732 = load <8 x i32>, ptr %1731, align 4, !tbaa !5
  %1733 = shufflevector <8 x i32> %1732, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1734 = mul <8 x i32> %1724, %1716
  %1735 = mul <8 x i32> %1727, %1717
  %1736 = mul <8 x i32> %1730, %1718
  %1737 = mul <8 x i32> %1733, %1719
  %1738 = add nuw i64 %1715, 32
  %1739 = icmp eq i64 %1738, %1712
  br i1 %1739, label %1740, label %1714, !llvm.loop !439

1740:                                             ; preds = %1714
  %1741 = mul <8 x i32> %1735, %1734
  %1742 = mul <8 x i32> %1736, %1741
  %1743 = mul <8 x i32> %1737, %1742
  %1744 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1743)
  %1745 = icmp eq i64 %1708, %1712
  br i1 %1745, label %1758, label %1746

1746:                                             ; preds = %1699, %1740
  %1747 = phi i64 [ %1702, %1699 ], [ %1713, %1740 ]
  %1748 = phi i32 [ 1, %1699 ], [ %1744, %1740 ]
  br label %1749

1749:                                             ; preds = %1746, %1749
  %1750 = phi i64 [ %1755, %1749 ], [ %1747, %1746 ]
  %1751 = phi i32 [ %1754, %1749 ], [ %1748, %1746 ]
  %1752 = getelementptr inbounds i32, ptr %11, i64 %1750
  %1753 = load i32, ptr %1752, align 4, !tbaa !5
  %1754 = mul nsw i32 %1753, %1751
  %1755 = add nsw i64 %1750, -1
  %1756 = trunc i64 %1750 to i32
  %1757 = icmp sgt i32 %1756, 0
  br i1 %1757, label %1749, label %1758, !llvm.loop !440

1758:                                             ; preds = %1749, %1740
  %1759 = phi i32 [ %1744, %1740 ], [ %1754, %1749 ]
  %1760 = and i64 %1709, 4294967295
  %1761 = getelementptr inbounds i32, ptr %6, i64 %1760
  %1762 = load i32, ptr %1761, align 4, !tbaa !5
  %1763 = mul nsw i32 %1762, %1759
  %1764 = add nsw i32 %1763, %1703
  %1765 = icmp sgt i64 %1701, 2
  %1766 = add nsw i64 %1702, -1
  %1767 = add i32 %1700, 1
  br i1 %1765, label %1699, label %1768, !llvm.loop !441

1768:                                             ; preds = %1758, %1695
  %1769 = phi i32 [ %1698, %1695 ], [ %1764, %1758 ]
  %1770 = icmp slt i32 %1769, %5
  br i1 %1770, label %1773, label %1771

1771:                                             ; preds = %1768
  %1772 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 635, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3052

1773:                                             ; preds = %1768
  %1774 = sext i32 %1769 to i64
  %1775 = getelementptr inbounds i8, ptr %1233, i64 %1774
  %1776 = load i8, ptr %1775, align 1, !tbaa !11
  %1777 = sitofp i8 %1776 to double
  %1778 = fmul fast double %1777, %1777
  %1779 = fadd fast double %1778, %1696
  store double %1779, ptr %1235, align 8, !tbaa !18
  %1780 = add nuw nsw i32 %1697, 1
  br i1 %1547, label %1781, label %1831

1781:                                             ; preds = %1773
  %1782 = load i32, ptr %4, align 4, !tbaa !5
  %1783 = load i32, ptr %12, align 4, !tbaa !5
  %1784 = add nsw i32 %1783, -1
  %1785 = icmp slt i32 %1782, %1784
  br i1 %1785, label %1808, label %1786

1786:                                             ; preds = %1781
  %1787 = icmp eq i32 %1782, %1784
  br i1 %1787, label %1788, label %1824

1788:                                             ; preds = %1786
  store i32 0, ptr %4, align 4, !tbaa !5
  %1789 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1789, ptr %6, align 4, !tbaa !5
  br i1 %1552, label %1831, label %1790

1790:                                             ; preds = %1788, %1818
  %1791 = phi i64 [ %1822, %1818 ], [ 1, %1788 ]
  %1792 = getelementptr inbounds i32, ptr %4, i64 %1791
  %1793 = load i32, ptr %1792, align 4, !tbaa !5
  %1794 = getelementptr inbounds i32, ptr %12, i64 %1791
  %1795 = load i32, ptr %1794, align 4, !tbaa !5
  %1796 = add nsw i32 %1795, -1
  %1797 = icmp slt i32 %1793, %1796
  br i1 %1797, label %1798, label %1816

1798:                                             ; preds = %1790
  br i1 %1785, label %1808, label %1799

1799:                                             ; preds = %1798
  %1800 = shl i64 %1791, 32
  %1801 = add i64 %1800, -4294967296
  %1802 = ashr exact i64 %1801, 32
  %1803 = getelementptr inbounds i32, ptr %7, i64 %1802
  %1804 = load i32, ptr %1803, align 4, !tbaa !5
  %1805 = getelementptr inbounds i32, ptr %6, i64 %1791
  %1806 = load i32, ptr %1805, align 4, !tbaa !5
  %1807 = add nsw i32 %1806, %1804
  store i32 %1807, ptr %1805, align 4, !tbaa !5
  br label %1826

1808:                                             ; preds = %1781, %1798
  %1809 = phi i32 [ %1793, %1798 ], [ %1782, %1781 ]
  %1810 = phi ptr [ %1792, %1798 ], [ %4, %1781 ]
  %1811 = phi i64 [ %1791, %1798 ], [ 0, %1781 ]
  %1812 = add nsw i32 %1809, 1
  store i32 %1812, ptr %1810, align 4, !tbaa !5
  %1813 = getelementptr inbounds i32, ptr %7, i64 %1811
  %1814 = load i32, ptr %1813, align 4, !tbaa !5
  %1815 = getelementptr inbounds i32, ptr %6, i64 %1811
  br label %1826

1816:                                             ; preds = %1790
  %1817 = icmp eq i32 %1793, %1796
  br i1 %1817, label %1818, label %1824

1818:                                             ; preds = %1816
  store i32 0, ptr %1792, align 4, !tbaa !5
  %1819 = getelementptr inbounds i32, ptr %8, i64 %1791
  %1820 = load i32, ptr %1819, align 4, !tbaa !5
  %1821 = getelementptr inbounds i32, ptr %6, i64 %1791
  store i32 %1820, ptr %1821, align 4, !tbaa !5
  %1822 = add nuw nsw i64 %1791, 1
  %1823 = icmp eq i64 %1822, %1550
  br i1 %1823, label %1831, label %1790, !llvm.loop !442

1824:                                             ; preds = %1786, %1816
  %1825 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 635, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

1826:                                             ; preds = %1799, %1808
  %1827 = phi ptr [ %1815, %1808 ], [ %1792, %1799 ]
  %1828 = phi i32 [ %1814, %1808 ], [ 1, %1799 ]
  %1829 = load i32, ptr %1827, align 4, !tbaa !5
  %1830 = add nsw i32 %1829, %1828
  store i32 %1830, ptr %1827, align 4, !tbaa !5
  br label %1831

1831:                                             ; preds = %1818, %1826, %1788, %1773
  %1832 = icmp eq i32 %1780, %5
  br i1 %1832, label %3047, label %1695, !llvm.loop !443

1833:                                             ; preds = %1241
  %1834 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 635, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3047

1835:                                             ; preds = %18
  %1836 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1837 = load ptr, ptr %1836, align 8, !tbaa !9
  %1838 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1839 = load ptr, ptr %1838, align 8, !tbaa !9
  store float 0.000000e+00, ptr %1839, align 4, !tbaa !162
  %1840 = icmp eq i32 %13, 0
  br i1 %1840, label %1841, label %1845

1841:                                             ; preds = %1835
  %1842 = load i8, ptr %1837, align 1, !tbaa !11
  %1843 = sitofp i8 %1842 to float
  %1844 = fmul fast float %1843, %1843
  store float %1844, ptr %1839, align 4, !tbaa !162
  br label %3047

1845:                                             ; preds = %1835
  switch i32 %1, label %2441 [
    i32 1, label %1846
    i32 0, label %2147
  ]

1846:                                             ; preds = %1845
  %1847 = getelementptr inbounds i32, ptr %3, i64 %19
  %1848 = load i32, ptr %1847, align 4, !tbaa !5
  %1849 = icmp eq i32 %1848, 0
  %1850 = icmp sgt i32 %5, 0
  br i1 %1849, label %1860, label %1851

1851:                                             ; preds = %1846
  br i1 %1850, label %1852, label %3047

1852:                                             ; preds = %1851
  %1853 = icmp sgt i32 %13, 1
  %1854 = icmp sgt i32 %13, 0
  %1855 = add i32 %13, -2
  %1856 = zext i32 %1855 to i64
  %1857 = zext i32 %13 to i64
  %1858 = add nuw i32 %5, 1
  %1859 = icmp eq i32 %13, 1
  br label %2007

1860:                                             ; preds = %1846
  br i1 %1850, label %1861, label %3047

1861:                                             ; preds = %1860
  %1862 = icmp sgt i32 %13, 1
  %1863 = icmp sgt i32 %13, 0
  %1864 = add i32 %13, -2
  %1865 = zext i32 %1864 to i64
  %1866 = zext i32 %13 to i64
  %1867 = add nuw i32 %5, 1
  %1868 = icmp eq i32 %13, 1
  br label %1869

1869:                                             ; preds = %1861, %2005
  %1870 = phi float [ 0.000000e+00, %1861 ], [ %1955, %2005 ]
  %1871 = phi i32 [ 0, %1861 ], [ %1957, %2005 ]
  %1872 = phi double [ 0.000000e+00, %1861 ], [ %1956, %2005 ]
  %1873 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1862, label %1874, label %1943

1874:                                             ; preds = %1869, %1933
  %1875 = phi i32 [ %1942, %1933 ], [ 0, %1869 ]
  %1876 = phi i64 [ %1884, %1933 ], [ %1866, %1869 ]
  %1877 = phi i64 [ %1941, %1933 ], [ %1865, %1869 ]
  %1878 = phi i32 [ %1939, %1933 ], [ %1873, %1869 ]
  %1879 = sub i32 %1864, %1875
  %1880 = tail call i32 @llvm.smin.i32(i32 %1879, i32 0)
  %1881 = sub i32 %1879, %1880
  %1882 = zext i32 %1881 to i64
  %1883 = add nuw nsw i64 %1882, 1
  %1884 = add nsw i64 %1876, -1
  %1885 = icmp ult i32 %1881, 31
  br i1 %1885, label %1921, label %1886

1886:                                             ; preds = %1874
  %1887 = and i64 %1883, 8589934560
  %1888 = sub i64 %1877, %1887
  br label %1889

1889:                                             ; preds = %1889, %1886
  %1890 = phi i64 [ 0, %1886 ], [ %1913, %1889 ]
  %1891 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1886 ], [ %1909, %1889 ]
  %1892 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1886 ], [ %1910, %1889 ]
  %1893 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1886 ], [ %1911, %1889 ]
  %1894 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1886 ], [ %1912, %1889 ]
  %1895 = sub i64 %1877, %1890
  %1896 = getelementptr inbounds i32, ptr %9, i64 %1895
  %1897 = getelementptr inbounds i32, ptr %1896, i64 -7
  %1898 = load <8 x i32>, ptr %1897, align 4, !tbaa !5
  %1899 = shufflevector <8 x i32> %1898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1900 = getelementptr inbounds i32, ptr %1896, i64 -15
  %1901 = load <8 x i32>, ptr %1900, align 4, !tbaa !5
  %1902 = shufflevector <8 x i32> %1901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1903 = getelementptr inbounds i32, ptr %1896, i64 -23
  %1904 = load <8 x i32>, ptr %1903, align 4, !tbaa !5
  %1905 = shufflevector <8 x i32> %1904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1906 = getelementptr inbounds i32, ptr %1896, i64 -31
  %1907 = load <8 x i32>, ptr %1906, align 4, !tbaa !5
  %1908 = shufflevector <8 x i32> %1907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1909 = mul <8 x i32> %1899, %1891
  %1910 = mul <8 x i32> %1902, %1892
  %1911 = mul <8 x i32> %1905, %1893
  %1912 = mul <8 x i32> %1908, %1894
  %1913 = add nuw i64 %1890, 32
  %1914 = icmp eq i64 %1913, %1887
  br i1 %1914, label %1915, label %1889, !llvm.loop !444

1915:                                             ; preds = %1889
  %1916 = mul <8 x i32> %1910, %1909
  %1917 = mul <8 x i32> %1911, %1916
  %1918 = mul <8 x i32> %1912, %1917
  %1919 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1918)
  %1920 = icmp eq i64 %1883, %1887
  br i1 %1920, label %1933, label %1921

1921:                                             ; preds = %1874, %1915
  %1922 = phi i64 [ %1877, %1874 ], [ %1888, %1915 ]
  %1923 = phi i32 [ 1, %1874 ], [ %1919, %1915 ]
  br label %1924

1924:                                             ; preds = %1921, %1924
  %1925 = phi i64 [ %1930, %1924 ], [ %1922, %1921 ]
  %1926 = phi i32 [ %1929, %1924 ], [ %1923, %1921 ]
  %1927 = getelementptr inbounds i32, ptr %9, i64 %1925
  %1928 = load i32, ptr %1927, align 4, !tbaa !5
  %1929 = mul nsw i32 %1928, %1926
  %1930 = add nsw i64 %1925, -1
  %1931 = trunc i64 %1925 to i32
  %1932 = icmp sgt i32 %1931, 0
  br i1 %1932, label %1924, label %1933, !llvm.loop !445

1933:                                             ; preds = %1924, %1915
  %1934 = phi i32 [ %1919, %1915 ], [ %1929, %1924 ]
  %1935 = and i64 %1884, 4294967295
  %1936 = getelementptr inbounds i32, ptr %6, i64 %1935
  %1937 = load i32, ptr %1936, align 4, !tbaa !5
  %1938 = mul nsw i32 %1937, %1934
  %1939 = add nsw i32 %1938, %1878
  %1940 = icmp sgt i64 %1876, 2
  %1941 = add nsw i64 %1877, -1
  %1942 = add i32 %1875, 1
  br i1 %1940, label %1874, label %1943, !llvm.loop !446

1943:                                             ; preds = %1933, %1869
  %1944 = phi i32 [ %1873, %1869 ], [ %1939, %1933 ]
  %1945 = sext i32 %1944 to i64
  %1946 = getelementptr inbounds double, ptr %2, i64 %1945
  %1947 = load double, ptr %1946, align 8, !tbaa !18
  %1948 = getelementptr inbounds i8, ptr %1837, i64 %1945
  %1949 = load i8, ptr %1948, align 1, !tbaa !11
  %1950 = fpext float %1870 to double
  %1951 = sitofp i8 %1949 to double
  %1952 = fmul fast double %1947, %1951
  %1953 = fmul fast double %1952, %1952
  %1954 = fadd fast double %1953, %1950
  %1955 = fptrunc double %1954 to float
  store float %1955, ptr %1839, align 4, !tbaa !162
  %1956 = fadd fast double %1947, %1872
  %1957 = add nuw nsw i32 %1871, 1
  br i1 %1863, label %1958, label %2005

1958:                                             ; preds = %1943
  %1959 = load i32, ptr %4, align 4, !tbaa !5
  %1960 = load i32, ptr %12, align 4, !tbaa !5
  %1961 = add nsw i32 %1960, -1
  %1962 = icmp slt i32 %1959, %1961
  br i1 %1962, label %1982, label %1963

1963:                                             ; preds = %1958
  %1964 = icmp eq i32 %1959, %1961
  br i1 %1964, label %1965, label %1998

1965:                                             ; preds = %1963
  store i32 0, ptr %4, align 4, !tbaa !5
  %1966 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1966, ptr %6, align 4, !tbaa !5
  br i1 %1868, label %2005, label %1967

1967:                                             ; preds = %1965, %1992
  %1968 = phi i64 [ %1996, %1992 ], [ 1, %1965 ]
  %1969 = getelementptr inbounds i32, ptr %4, i64 %1968
  %1970 = load i32, ptr %1969, align 4, !tbaa !5
  %1971 = getelementptr inbounds i32, ptr %12, i64 %1968
  %1972 = load i32, ptr %1971, align 4, !tbaa !5
  %1973 = add nsw i32 %1972, -1
  %1974 = icmp slt i32 %1970, %1973
  br i1 %1974, label %1975, label %1990

1975:                                             ; preds = %1967
  br i1 %1962, label %1982, label %1976

1976:                                             ; preds = %1975
  %1977 = getelementptr inbounds i32, ptr %7, i64 %1968
  %1978 = load i32, ptr %1977, align 4, !tbaa !5
  %1979 = getelementptr inbounds i32, ptr %6, i64 %1968
  %1980 = load i32, ptr %1979, align 4, !tbaa !5
  %1981 = add nsw i32 %1980, %1978
  store i32 %1981, ptr %1979, align 4, !tbaa !5
  br label %2000

1982:                                             ; preds = %1958, %1975
  %1983 = phi i32 [ %1970, %1975 ], [ %1959, %1958 ]
  %1984 = phi ptr [ %1969, %1975 ], [ %4, %1958 ]
  %1985 = phi i64 [ %1968, %1975 ], [ 0, %1958 ]
  %1986 = add nsw i32 %1983, 1
  store i32 %1986, ptr %1984, align 4, !tbaa !5
  %1987 = getelementptr inbounds i32, ptr %7, i64 %1985
  %1988 = load i32, ptr %1987, align 4, !tbaa !5
  %1989 = getelementptr inbounds i32, ptr %6, i64 %1985
  br label %2000

1990:                                             ; preds = %1967
  %1991 = icmp eq i32 %1970, %1973
  br i1 %1991, label %1992, label %1998

1992:                                             ; preds = %1990
  store i32 0, ptr %1969, align 4, !tbaa !5
  %1993 = getelementptr inbounds i32, ptr %8, i64 %1968
  %1994 = load i32, ptr %1993, align 4, !tbaa !5
  %1995 = getelementptr inbounds i32, ptr %6, i64 %1968
  store i32 %1994, ptr %1995, align 4, !tbaa !5
  %1996 = add nuw nsw i64 %1968, 1
  %1997 = icmp eq i64 %1996, %1866
  br i1 %1997, label %2005, label %1967, !llvm.loop !447

1998:                                             ; preds = %1963, %1990
  %1999 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

2000:                                             ; preds = %1976, %1982
  %2001 = phi ptr [ %1989, %1982 ], [ %1969, %1976 ]
  %2002 = phi i32 [ %1988, %1982 ], [ 1, %1976 ]
  %2003 = load i32, ptr %2001, align 4, !tbaa !5
  %2004 = add nsw i32 %2003, %2002
  store i32 %2004, ptr %2001, align 4, !tbaa !5
  br label %2005

2005:                                             ; preds = %1992, %2000, %1965, %1943
  %2006 = icmp eq i32 %1957, %5
  br i1 %2006, label %3047, label %1869, !llvm.loop !448

2007:                                             ; preds = %1852, %2145
  %2008 = phi float [ 0.000000e+00, %1852 ], [ %2093, %2145 ]
  %2009 = phi i32 [ 0, %1852 ], [ %2094, %2145 ]
  %2010 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1853, label %2011, label %2080

2011:                                             ; preds = %2007, %2070
  %2012 = phi i32 [ %2079, %2070 ], [ 0, %2007 ]
  %2013 = phi i64 [ %2021, %2070 ], [ %1857, %2007 ]
  %2014 = phi i64 [ %2078, %2070 ], [ %1856, %2007 ]
  %2015 = phi i32 [ %2076, %2070 ], [ %2010, %2007 ]
  %2016 = sub i32 %1855, %2012
  %2017 = tail call i32 @llvm.smin.i32(i32 %2016, i32 0)
  %2018 = sub i32 %2016, %2017
  %2019 = zext i32 %2018 to i64
  %2020 = add nuw nsw i64 %2019, 1
  %2021 = add nsw i64 %2013, -1
  %2022 = icmp ult i32 %2018, 31
  br i1 %2022, label %2058, label %2023

2023:                                             ; preds = %2011
  %2024 = and i64 %2020, 8589934560
  %2025 = sub i64 %2014, %2024
  br label %2026

2026:                                             ; preds = %2026, %2023
  %2027 = phi i64 [ 0, %2023 ], [ %2050, %2026 ]
  %2028 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2023 ], [ %2046, %2026 ]
  %2029 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2023 ], [ %2047, %2026 ]
  %2030 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2023 ], [ %2048, %2026 ]
  %2031 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2023 ], [ %2049, %2026 ]
  %2032 = sub i64 %2014, %2027
  %2033 = getelementptr inbounds i32, ptr %11, i64 %2032
  %2034 = getelementptr inbounds i32, ptr %2033, i64 -7
  %2035 = load <8 x i32>, ptr %2034, align 4, !tbaa !5
  %2036 = shufflevector <8 x i32> %2035, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2037 = getelementptr inbounds i32, ptr %2033, i64 -15
  %2038 = load <8 x i32>, ptr %2037, align 4, !tbaa !5
  %2039 = shufflevector <8 x i32> %2038, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2040 = getelementptr inbounds i32, ptr %2033, i64 -23
  %2041 = load <8 x i32>, ptr %2040, align 4, !tbaa !5
  %2042 = shufflevector <8 x i32> %2041, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2043 = getelementptr inbounds i32, ptr %2033, i64 -31
  %2044 = load <8 x i32>, ptr %2043, align 4, !tbaa !5
  %2045 = shufflevector <8 x i32> %2044, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2046 = mul <8 x i32> %2036, %2028
  %2047 = mul <8 x i32> %2039, %2029
  %2048 = mul <8 x i32> %2042, %2030
  %2049 = mul <8 x i32> %2045, %2031
  %2050 = add nuw i64 %2027, 32
  %2051 = icmp eq i64 %2050, %2024
  br i1 %2051, label %2052, label %2026, !llvm.loop !449

2052:                                             ; preds = %2026
  %2053 = mul <8 x i32> %2047, %2046
  %2054 = mul <8 x i32> %2048, %2053
  %2055 = mul <8 x i32> %2049, %2054
  %2056 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2055)
  %2057 = icmp eq i64 %2020, %2024
  br i1 %2057, label %2070, label %2058

2058:                                             ; preds = %2011, %2052
  %2059 = phi i64 [ %2014, %2011 ], [ %2025, %2052 ]
  %2060 = phi i32 [ 1, %2011 ], [ %2056, %2052 ]
  br label %2061

2061:                                             ; preds = %2058, %2061
  %2062 = phi i64 [ %2067, %2061 ], [ %2059, %2058 ]
  %2063 = phi i32 [ %2066, %2061 ], [ %2060, %2058 ]
  %2064 = getelementptr inbounds i32, ptr %11, i64 %2062
  %2065 = load i32, ptr %2064, align 4, !tbaa !5
  %2066 = mul nsw i32 %2065, %2063
  %2067 = add nsw i64 %2062, -1
  %2068 = trunc i64 %2062 to i32
  %2069 = icmp sgt i32 %2068, 0
  br i1 %2069, label %2061, label %2070, !llvm.loop !450

2070:                                             ; preds = %2061, %2052
  %2071 = phi i32 [ %2056, %2052 ], [ %2066, %2061 ]
  %2072 = and i64 %2021, 4294967295
  %2073 = getelementptr inbounds i32, ptr %6, i64 %2072
  %2074 = load i32, ptr %2073, align 4, !tbaa !5
  %2075 = mul nsw i32 %2074, %2071
  %2076 = add nsw i32 %2075, %2015
  %2077 = icmp sgt i64 %2013, 2
  %2078 = add nsw i64 %2014, -1
  %2079 = add i32 %2012, 1
  br i1 %2077, label %2011, label %2080, !llvm.loop !451

2080:                                             ; preds = %2070, %2007
  %2081 = phi i32 [ %2010, %2007 ], [ %2076, %2070 ]
  %2082 = icmp slt i32 %2081, %5
  br i1 %2082, label %2085, label %2083

2083:                                             ; preds = %2080
  %2084 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3052

2085:                                             ; preds = %2080
  %2086 = sext i32 %2081 to i64
  %2087 = getelementptr inbounds i8, ptr %1837, i64 %2086
  %2088 = load i8, ptr %2087, align 1, !tbaa !11
  %2089 = fpext float %2008 to double
  %2090 = sitofp i8 %2088 to double
  %2091 = fmul fast double %2090, %2090
  %2092 = fadd fast double %2091, %2089
  %2093 = fptrunc double %2092 to float
  store float %2093, ptr %1839, align 4, !tbaa !162
  %2094 = add nuw nsw i32 %2009, 1
  br i1 %1854, label %2095, label %2145

2095:                                             ; preds = %2085
  %2096 = load i32, ptr %4, align 4, !tbaa !5
  %2097 = load i32, ptr %12, align 4, !tbaa !5
  %2098 = add nsw i32 %2097, -1
  %2099 = icmp slt i32 %2096, %2098
  br i1 %2099, label %2122, label %2100

2100:                                             ; preds = %2095
  %2101 = icmp eq i32 %2096, %2098
  br i1 %2101, label %2102, label %2138

2102:                                             ; preds = %2100
  store i32 0, ptr %4, align 4, !tbaa !5
  %2103 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2103, ptr %6, align 4, !tbaa !5
  br i1 %1859, label %2145, label %2104

2104:                                             ; preds = %2102, %2132
  %2105 = phi i64 [ %2136, %2132 ], [ 1, %2102 ]
  %2106 = getelementptr inbounds i32, ptr %4, i64 %2105
  %2107 = load i32, ptr %2106, align 4, !tbaa !5
  %2108 = getelementptr inbounds i32, ptr %12, i64 %2105
  %2109 = load i32, ptr %2108, align 4, !tbaa !5
  %2110 = add nsw i32 %2109, -1
  %2111 = icmp slt i32 %2107, %2110
  br i1 %2111, label %2112, label %2130

2112:                                             ; preds = %2104
  br i1 %2099, label %2122, label %2113

2113:                                             ; preds = %2112
  %2114 = shl i64 %2105, 32
  %2115 = add i64 %2114, -4294967296
  %2116 = ashr exact i64 %2115, 32
  %2117 = getelementptr inbounds i32, ptr %7, i64 %2116
  %2118 = load i32, ptr %2117, align 4, !tbaa !5
  %2119 = getelementptr inbounds i32, ptr %6, i64 %2105
  %2120 = load i32, ptr %2119, align 4, !tbaa !5
  %2121 = add nsw i32 %2120, %2118
  store i32 %2121, ptr %2119, align 4, !tbaa !5
  br label %2140

2122:                                             ; preds = %2095, %2112
  %2123 = phi i32 [ %2107, %2112 ], [ %2096, %2095 ]
  %2124 = phi ptr [ %2106, %2112 ], [ %4, %2095 ]
  %2125 = phi i64 [ %2105, %2112 ], [ 0, %2095 ]
  %2126 = add nsw i32 %2123, 1
  store i32 %2126, ptr %2124, align 4, !tbaa !5
  %2127 = getelementptr inbounds i32, ptr %7, i64 %2125
  %2128 = load i32, ptr %2127, align 4, !tbaa !5
  %2129 = getelementptr inbounds i32, ptr %6, i64 %2125
  br label %2140

2130:                                             ; preds = %2104
  %2131 = icmp eq i32 %2107, %2110
  br i1 %2131, label %2132, label %2138

2132:                                             ; preds = %2130
  store i32 0, ptr %2106, align 4, !tbaa !5
  %2133 = getelementptr inbounds i32, ptr %8, i64 %2105
  %2134 = load i32, ptr %2133, align 4, !tbaa !5
  %2135 = getelementptr inbounds i32, ptr %6, i64 %2105
  store i32 %2134, ptr %2135, align 4, !tbaa !5
  %2136 = add nuw nsw i64 %2105, 1
  %2137 = icmp eq i64 %2136, %1857
  br i1 %2137, label %2145, label %2104, !llvm.loop !452

2138:                                             ; preds = %2100, %2130
  %2139 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

2140:                                             ; preds = %2113, %2122
  %2141 = phi ptr [ %2129, %2122 ], [ %2106, %2113 ]
  %2142 = phi i32 [ %2128, %2122 ], [ 1, %2113 ]
  %2143 = load i32, ptr %2141, align 4, !tbaa !5
  %2144 = add nsw i32 %2143, %2142
  store i32 %2144, ptr %2141, align 4, !tbaa !5
  br label %2145

2145:                                             ; preds = %2132, %2140, %2102, %2085
  %2146 = icmp eq i32 %2094, %5
  br i1 %2146, label %3047, label %2007, !llvm.loop !453

2147:                                             ; preds = %1845
  %2148 = getelementptr inbounds i32, ptr %3, i64 %19
  %2149 = load i32, ptr %2148, align 4, !tbaa !5
  %2150 = icmp eq i32 %2149, 0
  %2151 = icmp sgt i32 %5, 0
  br i1 %2150, label %2161, label %2152

2152:                                             ; preds = %2147
  br i1 %2151, label %2153, label %3047

2153:                                             ; preds = %2152
  %2154 = icmp sgt i32 %13, 1
  %2155 = icmp sgt i32 %13, 0
  %2156 = add i32 %13, -2
  %2157 = zext i32 %2156 to i64
  %2158 = zext i32 %13 to i64
  %2159 = add nuw i32 %5, 1
  %2160 = icmp eq i32 %13, 1
  br label %2303

2161:                                             ; preds = %2147
  br i1 %2151, label %2162, label %3047

2162:                                             ; preds = %2161
  %2163 = icmp sgt i32 %13, 1
  %2164 = icmp sgt i32 %13, 0
  %2165 = add i32 %13, -2
  %2166 = zext i32 %2165 to i64
  %2167 = zext i32 %13 to i64
  %2168 = add nuw i32 %5, 1
  %2169 = icmp eq i32 %13, 1
  br label %2170

2170:                                             ; preds = %2162, %2301
  %2171 = phi float [ 0.000000e+00, %2162 ], [ %2251, %2301 ]
  %2172 = phi i32 [ 0, %2162 ], [ %2253, %2301 ]
  %2173 = phi double [ 0.000000e+00, %2162 ], [ %2252, %2301 ]
  %2174 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2163, label %2175, label %2244

2175:                                             ; preds = %2170, %2234
  %2176 = phi i32 [ %2243, %2234 ], [ 0, %2170 ]
  %2177 = phi i64 [ %2185, %2234 ], [ %2167, %2170 ]
  %2178 = phi i64 [ %2242, %2234 ], [ %2166, %2170 ]
  %2179 = phi i32 [ %2240, %2234 ], [ %2174, %2170 ]
  %2180 = sub i32 %2165, %2176
  %2181 = tail call i32 @llvm.smin.i32(i32 %2180, i32 0)
  %2182 = sub i32 %2180, %2181
  %2183 = zext i32 %2182 to i64
  %2184 = add nuw nsw i64 %2183, 1
  %2185 = add nsw i64 %2177, -1
  %2186 = icmp ult i32 %2182, 31
  br i1 %2186, label %2222, label %2187

2187:                                             ; preds = %2175
  %2188 = and i64 %2184, 8589934560
  %2189 = sub i64 %2178, %2188
  br label %2190

2190:                                             ; preds = %2190, %2187
  %2191 = phi i64 [ 0, %2187 ], [ %2214, %2190 ]
  %2192 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2187 ], [ %2210, %2190 ]
  %2193 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2187 ], [ %2211, %2190 ]
  %2194 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2187 ], [ %2212, %2190 ]
  %2195 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2187 ], [ %2213, %2190 ]
  %2196 = sub i64 %2178, %2191
  %2197 = getelementptr inbounds i32, ptr %9, i64 %2196
  %2198 = getelementptr inbounds i32, ptr %2197, i64 -7
  %2199 = load <8 x i32>, ptr %2198, align 4, !tbaa !5
  %2200 = shufflevector <8 x i32> %2199, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2201 = getelementptr inbounds i32, ptr %2197, i64 -15
  %2202 = load <8 x i32>, ptr %2201, align 4, !tbaa !5
  %2203 = shufflevector <8 x i32> %2202, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2204 = getelementptr inbounds i32, ptr %2197, i64 -23
  %2205 = load <8 x i32>, ptr %2204, align 4, !tbaa !5
  %2206 = shufflevector <8 x i32> %2205, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2207 = getelementptr inbounds i32, ptr %2197, i64 -31
  %2208 = load <8 x i32>, ptr %2207, align 4, !tbaa !5
  %2209 = shufflevector <8 x i32> %2208, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2210 = mul <8 x i32> %2200, %2192
  %2211 = mul <8 x i32> %2203, %2193
  %2212 = mul <8 x i32> %2206, %2194
  %2213 = mul <8 x i32> %2209, %2195
  %2214 = add nuw i64 %2191, 32
  %2215 = icmp eq i64 %2214, %2188
  br i1 %2215, label %2216, label %2190, !llvm.loop !454

2216:                                             ; preds = %2190
  %2217 = mul <8 x i32> %2211, %2210
  %2218 = mul <8 x i32> %2212, %2217
  %2219 = mul <8 x i32> %2213, %2218
  %2220 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2219)
  %2221 = icmp eq i64 %2184, %2188
  br i1 %2221, label %2234, label %2222

2222:                                             ; preds = %2175, %2216
  %2223 = phi i64 [ %2178, %2175 ], [ %2189, %2216 ]
  %2224 = phi i32 [ 1, %2175 ], [ %2220, %2216 ]
  br label %2225

2225:                                             ; preds = %2222, %2225
  %2226 = phi i64 [ %2231, %2225 ], [ %2223, %2222 ]
  %2227 = phi i32 [ %2230, %2225 ], [ %2224, %2222 ]
  %2228 = getelementptr inbounds i32, ptr %9, i64 %2226
  %2229 = load i32, ptr %2228, align 4, !tbaa !5
  %2230 = mul nsw i32 %2229, %2227
  %2231 = add nsw i64 %2226, -1
  %2232 = trunc i64 %2226 to i32
  %2233 = icmp sgt i32 %2232, 0
  br i1 %2233, label %2225, label %2234, !llvm.loop !455

2234:                                             ; preds = %2225, %2216
  %2235 = phi i32 [ %2220, %2216 ], [ %2230, %2225 ]
  %2236 = and i64 %2185, 4294967295
  %2237 = getelementptr inbounds i32, ptr %6, i64 %2236
  %2238 = load i32, ptr %2237, align 4, !tbaa !5
  %2239 = mul nsw i32 %2238, %2235
  %2240 = add nsw i32 %2239, %2179
  %2241 = icmp sgt i64 %2177, 2
  %2242 = add nsw i64 %2178, -1
  %2243 = add i32 %2176, 1
  br i1 %2241, label %2175, label %2244, !llvm.loop !456

2244:                                             ; preds = %2234, %2170
  %2245 = phi i32 [ %2174, %2170 ], [ %2240, %2234 ]
  %2246 = sext i32 %2245 to i64
  %2247 = getelementptr inbounds i8, ptr %1837, i64 %2246
  %2248 = load i8, ptr %2247, align 1, !tbaa !11
  %2249 = sitofp i8 %2248 to float
  %2250 = fmul fast float %2249, %2249
  %2251 = fadd fast float %2250, %2171
  store float %2251, ptr %1839, align 4, !tbaa !162
  %2252 = fadd fast double %2173, 1.000000e+00
  %2253 = add nuw nsw i32 %2172, 1
  br i1 %2164, label %2254, label %2301

2254:                                             ; preds = %2244
  %2255 = load i32, ptr %4, align 4, !tbaa !5
  %2256 = load i32, ptr %12, align 4, !tbaa !5
  %2257 = add nsw i32 %2256, -1
  %2258 = icmp slt i32 %2255, %2257
  br i1 %2258, label %2278, label %2259

2259:                                             ; preds = %2254
  %2260 = icmp eq i32 %2255, %2257
  br i1 %2260, label %2261, label %2294

2261:                                             ; preds = %2259
  store i32 0, ptr %4, align 4, !tbaa !5
  %2262 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2262, ptr %6, align 4, !tbaa !5
  br i1 %2169, label %2301, label %2263

2263:                                             ; preds = %2261, %2288
  %2264 = phi i64 [ %2292, %2288 ], [ 1, %2261 ]
  %2265 = getelementptr inbounds i32, ptr %4, i64 %2264
  %2266 = load i32, ptr %2265, align 4, !tbaa !5
  %2267 = getelementptr inbounds i32, ptr %12, i64 %2264
  %2268 = load i32, ptr %2267, align 4, !tbaa !5
  %2269 = add nsw i32 %2268, -1
  %2270 = icmp slt i32 %2266, %2269
  br i1 %2270, label %2271, label %2286

2271:                                             ; preds = %2263
  br i1 %2258, label %2278, label %2272

2272:                                             ; preds = %2271
  %2273 = getelementptr inbounds i32, ptr %7, i64 %2264
  %2274 = load i32, ptr %2273, align 4, !tbaa !5
  %2275 = getelementptr inbounds i32, ptr %6, i64 %2264
  %2276 = load i32, ptr %2275, align 4, !tbaa !5
  %2277 = add nsw i32 %2276, %2274
  store i32 %2277, ptr %2275, align 4, !tbaa !5
  br label %2296

2278:                                             ; preds = %2254, %2271
  %2279 = phi i32 [ %2266, %2271 ], [ %2255, %2254 ]
  %2280 = phi ptr [ %2265, %2271 ], [ %4, %2254 ]
  %2281 = phi i64 [ %2264, %2271 ], [ 0, %2254 ]
  %2282 = add nsw i32 %2279, 1
  store i32 %2282, ptr %2280, align 4, !tbaa !5
  %2283 = getelementptr inbounds i32, ptr %7, i64 %2281
  %2284 = load i32, ptr %2283, align 4, !tbaa !5
  %2285 = getelementptr inbounds i32, ptr %6, i64 %2281
  br label %2296

2286:                                             ; preds = %2263
  %2287 = icmp eq i32 %2266, %2269
  br i1 %2287, label %2288, label %2294

2288:                                             ; preds = %2286
  store i32 0, ptr %2265, align 4, !tbaa !5
  %2289 = getelementptr inbounds i32, ptr %8, i64 %2264
  %2290 = load i32, ptr %2289, align 4, !tbaa !5
  %2291 = getelementptr inbounds i32, ptr %6, i64 %2264
  store i32 %2290, ptr %2291, align 4, !tbaa !5
  %2292 = add nuw nsw i64 %2264, 1
  %2293 = icmp eq i64 %2292, %2167
  br i1 %2293, label %2301, label %2263, !llvm.loop !457

2294:                                             ; preds = %2259, %2286
  %2295 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

2296:                                             ; preds = %2272, %2278
  %2297 = phi ptr [ %2285, %2278 ], [ %2265, %2272 ]
  %2298 = phi i32 [ %2284, %2278 ], [ 1, %2272 ]
  %2299 = load i32, ptr %2297, align 4, !tbaa !5
  %2300 = add nsw i32 %2299, %2298
  store i32 %2300, ptr %2297, align 4, !tbaa !5
  br label %2301

2301:                                             ; preds = %2288, %2296, %2261, %2244
  %2302 = icmp eq i32 %2253, %5
  br i1 %2302, label %3047, label %2170, !llvm.loop !458

2303:                                             ; preds = %2153, %2439
  %2304 = phi float [ 0.000000e+00, %2153 ], [ %2387, %2439 ]
  %2305 = phi i32 [ 0, %2153 ], [ %2388, %2439 ]
  %2306 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2154, label %2307, label %2376

2307:                                             ; preds = %2303, %2366
  %2308 = phi i32 [ %2375, %2366 ], [ 0, %2303 ]
  %2309 = phi i64 [ %2317, %2366 ], [ %2158, %2303 ]
  %2310 = phi i64 [ %2374, %2366 ], [ %2157, %2303 ]
  %2311 = phi i32 [ %2372, %2366 ], [ %2306, %2303 ]
  %2312 = sub i32 %2156, %2308
  %2313 = tail call i32 @llvm.smin.i32(i32 %2312, i32 0)
  %2314 = sub i32 %2312, %2313
  %2315 = zext i32 %2314 to i64
  %2316 = add nuw nsw i64 %2315, 1
  %2317 = add nsw i64 %2309, -1
  %2318 = icmp ult i32 %2314, 31
  br i1 %2318, label %2354, label %2319

2319:                                             ; preds = %2307
  %2320 = and i64 %2316, 8589934560
  %2321 = sub i64 %2310, %2320
  br label %2322

2322:                                             ; preds = %2322, %2319
  %2323 = phi i64 [ 0, %2319 ], [ %2346, %2322 ]
  %2324 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2319 ], [ %2342, %2322 ]
  %2325 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2319 ], [ %2343, %2322 ]
  %2326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2319 ], [ %2344, %2322 ]
  %2327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2319 ], [ %2345, %2322 ]
  %2328 = sub i64 %2310, %2323
  %2329 = getelementptr inbounds i32, ptr %11, i64 %2328
  %2330 = getelementptr inbounds i32, ptr %2329, i64 -7
  %2331 = load <8 x i32>, ptr %2330, align 4, !tbaa !5
  %2332 = shufflevector <8 x i32> %2331, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2333 = getelementptr inbounds i32, ptr %2329, i64 -15
  %2334 = load <8 x i32>, ptr %2333, align 4, !tbaa !5
  %2335 = shufflevector <8 x i32> %2334, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2336 = getelementptr inbounds i32, ptr %2329, i64 -23
  %2337 = load <8 x i32>, ptr %2336, align 4, !tbaa !5
  %2338 = shufflevector <8 x i32> %2337, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2339 = getelementptr inbounds i32, ptr %2329, i64 -31
  %2340 = load <8 x i32>, ptr %2339, align 4, !tbaa !5
  %2341 = shufflevector <8 x i32> %2340, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2342 = mul <8 x i32> %2332, %2324
  %2343 = mul <8 x i32> %2335, %2325
  %2344 = mul <8 x i32> %2338, %2326
  %2345 = mul <8 x i32> %2341, %2327
  %2346 = add nuw i64 %2323, 32
  %2347 = icmp eq i64 %2346, %2320
  br i1 %2347, label %2348, label %2322, !llvm.loop !459

2348:                                             ; preds = %2322
  %2349 = mul <8 x i32> %2343, %2342
  %2350 = mul <8 x i32> %2344, %2349
  %2351 = mul <8 x i32> %2345, %2350
  %2352 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2351)
  %2353 = icmp eq i64 %2316, %2320
  br i1 %2353, label %2366, label %2354

2354:                                             ; preds = %2307, %2348
  %2355 = phi i64 [ %2310, %2307 ], [ %2321, %2348 ]
  %2356 = phi i32 [ 1, %2307 ], [ %2352, %2348 ]
  br label %2357

2357:                                             ; preds = %2354, %2357
  %2358 = phi i64 [ %2363, %2357 ], [ %2355, %2354 ]
  %2359 = phi i32 [ %2362, %2357 ], [ %2356, %2354 ]
  %2360 = getelementptr inbounds i32, ptr %11, i64 %2358
  %2361 = load i32, ptr %2360, align 4, !tbaa !5
  %2362 = mul nsw i32 %2361, %2359
  %2363 = add nsw i64 %2358, -1
  %2364 = trunc i64 %2358 to i32
  %2365 = icmp sgt i32 %2364, 0
  br i1 %2365, label %2357, label %2366, !llvm.loop !460

2366:                                             ; preds = %2357, %2348
  %2367 = phi i32 [ %2352, %2348 ], [ %2362, %2357 ]
  %2368 = and i64 %2317, 4294967295
  %2369 = getelementptr inbounds i32, ptr %6, i64 %2368
  %2370 = load i32, ptr %2369, align 4, !tbaa !5
  %2371 = mul nsw i32 %2370, %2367
  %2372 = add nsw i32 %2371, %2311
  %2373 = icmp sgt i64 %2309, 2
  %2374 = add nsw i64 %2310, -1
  %2375 = add i32 %2308, 1
  br i1 %2373, label %2307, label %2376, !llvm.loop !461

2376:                                             ; preds = %2366, %2303
  %2377 = phi i32 [ %2306, %2303 ], [ %2372, %2366 ]
  %2378 = icmp slt i32 %2377, %5
  br i1 %2378, label %2381, label %2379

2379:                                             ; preds = %2376
  %2380 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3052

2381:                                             ; preds = %2376
  %2382 = sext i32 %2377 to i64
  %2383 = getelementptr inbounds i8, ptr %1837, i64 %2382
  %2384 = load i8, ptr %2383, align 1, !tbaa !11
  %2385 = sitofp i8 %2384 to float
  %2386 = fmul fast float %2385, %2385
  %2387 = fadd fast float %2386, %2304
  store float %2387, ptr %1839, align 4, !tbaa !162
  %2388 = add nuw nsw i32 %2305, 1
  br i1 %2155, label %2389, label %2439

2389:                                             ; preds = %2381
  %2390 = load i32, ptr %4, align 4, !tbaa !5
  %2391 = load i32, ptr %12, align 4, !tbaa !5
  %2392 = add nsw i32 %2391, -1
  %2393 = icmp slt i32 %2390, %2392
  br i1 %2393, label %2416, label %2394

2394:                                             ; preds = %2389
  %2395 = icmp eq i32 %2390, %2392
  br i1 %2395, label %2396, label %2432

2396:                                             ; preds = %2394
  store i32 0, ptr %4, align 4, !tbaa !5
  %2397 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2397, ptr %6, align 4, !tbaa !5
  br i1 %2160, label %2439, label %2398

2398:                                             ; preds = %2396, %2426
  %2399 = phi i64 [ %2430, %2426 ], [ 1, %2396 ]
  %2400 = getelementptr inbounds i32, ptr %4, i64 %2399
  %2401 = load i32, ptr %2400, align 4, !tbaa !5
  %2402 = getelementptr inbounds i32, ptr %12, i64 %2399
  %2403 = load i32, ptr %2402, align 4, !tbaa !5
  %2404 = add nsw i32 %2403, -1
  %2405 = icmp slt i32 %2401, %2404
  br i1 %2405, label %2406, label %2424

2406:                                             ; preds = %2398
  br i1 %2393, label %2416, label %2407

2407:                                             ; preds = %2406
  %2408 = shl i64 %2399, 32
  %2409 = add i64 %2408, -4294967296
  %2410 = ashr exact i64 %2409, 32
  %2411 = getelementptr inbounds i32, ptr %7, i64 %2410
  %2412 = load i32, ptr %2411, align 4, !tbaa !5
  %2413 = getelementptr inbounds i32, ptr %6, i64 %2399
  %2414 = load i32, ptr %2413, align 4, !tbaa !5
  %2415 = add nsw i32 %2414, %2412
  store i32 %2415, ptr %2413, align 4, !tbaa !5
  br label %2434

2416:                                             ; preds = %2389, %2406
  %2417 = phi i32 [ %2401, %2406 ], [ %2390, %2389 ]
  %2418 = phi ptr [ %2400, %2406 ], [ %4, %2389 ]
  %2419 = phi i64 [ %2399, %2406 ], [ 0, %2389 ]
  %2420 = add nsw i32 %2417, 1
  store i32 %2420, ptr %2418, align 4, !tbaa !5
  %2421 = getelementptr inbounds i32, ptr %7, i64 %2419
  %2422 = load i32, ptr %2421, align 4, !tbaa !5
  %2423 = getelementptr inbounds i32, ptr %6, i64 %2419
  br label %2434

2424:                                             ; preds = %2398
  %2425 = icmp eq i32 %2401, %2404
  br i1 %2425, label %2426, label %2432

2426:                                             ; preds = %2424
  store i32 0, ptr %2400, align 4, !tbaa !5
  %2427 = getelementptr inbounds i32, ptr %8, i64 %2399
  %2428 = load i32, ptr %2427, align 4, !tbaa !5
  %2429 = getelementptr inbounds i32, ptr %6, i64 %2399
  store i32 %2428, ptr %2429, align 4, !tbaa !5
  %2430 = add nuw nsw i64 %2399, 1
  %2431 = icmp eq i64 %2430, %2158
  br i1 %2431, label %2439, label %2398, !llvm.loop !462

2432:                                             ; preds = %2394, %2424
  %2433 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

2434:                                             ; preds = %2407, %2416
  %2435 = phi ptr [ %2423, %2416 ], [ %2400, %2407 ]
  %2436 = phi i32 [ %2422, %2416 ], [ 1, %2407 ]
  %2437 = load i32, ptr %2435, align 4, !tbaa !5
  %2438 = add nsw i32 %2437, %2436
  store i32 %2438, ptr %2435, align 4, !tbaa !5
  br label %2439

2439:                                             ; preds = %2426, %2434, %2396, %2381
  %2440 = icmp eq i32 %2388, %5
  br i1 %2440, label %3047, label %2303, !llvm.loop !463

2441:                                             ; preds = %1845
  %2442 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3047

2443:                                             ; preds = %18
  %2444 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2445 = load ptr, ptr %2444, align 8, !tbaa !9
  %2446 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2447 = load ptr, ptr %2446, align 8, !tbaa !9
  store double 0.000000e+00, ptr %2447, align 8, !tbaa !18
  %2448 = icmp eq i32 %13, 0
  br i1 %2448, label %2449, label %2453

2449:                                             ; preds = %2443
  %2450 = load i8, ptr %2445, align 1, !tbaa !11
  %2451 = sitofp i8 %2450 to double
  %2452 = fmul fast double %2451, %2451
  store double %2452, ptr %2447, align 8, !tbaa !18
  br label %3047

2453:                                             ; preds = %2443
  switch i32 %1, label %3045 [
    i32 1, label %2454
    i32 0, label %2751
  ]

2454:                                             ; preds = %2453
  %2455 = getelementptr inbounds i32, ptr %3, i64 %19
  %2456 = load i32, ptr %2455, align 4, !tbaa !5
  %2457 = icmp eq i32 %2456, 0
  %2458 = icmp sgt i32 %5, 0
  br i1 %2457, label %2468, label %2459

2459:                                             ; preds = %2454
  br i1 %2458, label %2460, label %3047

2460:                                             ; preds = %2459
  %2461 = icmp sgt i32 %13, 1
  %2462 = icmp sgt i32 %13, 0
  %2463 = add i32 %13, -2
  %2464 = zext i32 %2463 to i64
  %2465 = zext i32 %13 to i64
  %2466 = add nuw i32 %5, 1
  %2467 = icmp eq i32 %13, 1
  br label %2613

2468:                                             ; preds = %2454
  br i1 %2458, label %2469, label %3047

2469:                                             ; preds = %2468
  %2470 = icmp sgt i32 %13, 1
  %2471 = icmp sgt i32 %13, 0
  %2472 = add i32 %13, -2
  %2473 = zext i32 %2472 to i64
  %2474 = zext i32 %13 to i64
  %2475 = add nuw i32 %5, 1
  %2476 = icmp eq i32 %13, 1
  br label %2477

2477:                                             ; preds = %2469, %2611
  %2478 = phi double [ 0.000000e+00, %2469 ], [ %2561, %2611 ]
  %2479 = phi i32 [ 0, %2469 ], [ %2563, %2611 ]
  %2480 = phi double [ 0.000000e+00, %2469 ], [ %2562, %2611 ]
  %2481 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2470, label %2482, label %2551

2482:                                             ; preds = %2477, %2541
  %2483 = phi i32 [ %2550, %2541 ], [ 0, %2477 ]
  %2484 = phi i64 [ %2492, %2541 ], [ %2474, %2477 ]
  %2485 = phi i64 [ %2549, %2541 ], [ %2473, %2477 ]
  %2486 = phi i32 [ %2547, %2541 ], [ %2481, %2477 ]
  %2487 = sub i32 %2472, %2483
  %2488 = tail call i32 @llvm.smin.i32(i32 %2487, i32 0)
  %2489 = sub i32 %2487, %2488
  %2490 = zext i32 %2489 to i64
  %2491 = add nuw nsw i64 %2490, 1
  %2492 = add nsw i64 %2484, -1
  %2493 = icmp ult i32 %2489, 31
  br i1 %2493, label %2529, label %2494

2494:                                             ; preds = %2482
  %2495 = and i64 %2491, 8589934560
  %2496 = sub i64 %2485, %2495
  br label %2497

2497:                                             ; preds = %2497, %2494
  %2498 = phi i64 [ 0, %2494 ], [ %2521, %2497 ]
  %2499 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2494 ], [ %2517, %2497 ]
  %2500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2494 ], [ %2518, %2497 ]
  %2501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2494 ], [ %2519, %2497 ]
  %2502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2494 ], [ %2520, %2497 ]
  %2503 = sub i64 %2485, %2498
  %2504 = getelementptr inbounds i32, ptr %9, i64 %2503
  %2505 = getelementptr inbounds i32, ptr %2504, i64 -7
  %2506 = load <8 x i32>, ptr %2505, align 4, !tbaa !5
  %2507 = shufflevector <8 x i32> %2506, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2508 = getelementptr inbounds i32, ptr %2504, i64 -15
  %2509 = load <8 x i32>, ptr %2508, align 4, !tbaa !5
  %2510 = shufflevector <8 x i32> %2509, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2511 = getelementptr inbounds i32, ptr %2504, i64 -23
  %2512 = load <8 x i32>, ptr %2511, align 4, !tbaa !5
  %2513 = shufflevector <8 x i32> %2512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2514 = getelementptr inbounds i32, ptr %2504, i64 -31
  %2515 = load <8 x i32>, ptr %2514, align 4, !tbaa !5
  %2516 = shufflevector <8 x i32> %2515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2517 = mul <8 x i32> %2507, %2499
  %2518 = mul <8 x i32> %2510, %2500
  %2519 = mul <8 x i32> %2513, %2501
  %2520 = mul <8 x i32> %2516, %2502
  %2521 = add nuw i64 %2498, 32
  %2522 = icmp eq i64 %2521, %2495
  br i1 %2522, label %2523, label %2497, !llvm.loop !464

2523:                                             ; preds = %2497
  %2524 = mul <8 x i32> %2518, %2517
  %2525 = mul <8 x i32> %2519, %2524
  %2526 = mul <8 x i32> %2520, %2525
  %2527 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2526)
  %2528 = icmp eq i64 %2491, %2495
  br i1 %2528, label %2541, label %2529

2529:                                             ; preds = %2482, %2523
  %2530 = phi i64 [ %2485, %2482 ], [ %2496, %2523 ]
  %2531 = phi i32 [ 1, %2482 ], [ %2527, %2523 ]
  br label %2532

2532:                                             ; preds = %2529, %2532
  %2533 = phi i64 [ %2538, %2532 ], [ %2530, %2529 ]
  %2534 = phi i32 [ %2537, %2532 ], [ %2531, %2529 ]
  %2535 = getelementptr inbounds i32, ptr %9, i64 %2533
  %2536 = load i32, ptr %2535, align 4, !tbaa !5
  %2537 = mul nsw i32 %2536, %2534
  %2538 = add nsw i64 %2533, -1
  %2539 = trunc i64 %2533 to i32
  %2540 = icmp sgt i32 %2539, 0
  br i1 %2540, label %2532, label %2541, !llvm.loop !465

2541:                                             ; preds = %2532, %2523
  %2542 = phi i32 [ %2527, %2523 ], [ %2537, %2532 ]
  %2543 = and i64 %2492, 4294967295
  %2544 = getelementptr inbounds i32, ptr %6, i64 %2543
  %2545 = load i32, ptr %2544, align 4, !tbaa !5
  %2546 = mul nsw i32 %2545, %2542
  %2547 = add nsw i32 %2546, %2486
  %2548 = icmp sgt i64 %2484, 2
  %2549 = add nsw i64 %2485, -1
  %2550 = add i32 %2483, 1
  br i1 %2548, label %2482, label %2551, !llvm.loop !466

2551:                                             ; preds = %2541, %2477
  %2552 = phi i32 [ %2481, %2477 ], [ %2547, %2541 ]
  %2553 = sext i32 %2552 to i64
  %2554 = getelementptr inbounds double, ptr %2, i64 %2553
  %2555 = load double, ptr %2554, align 8, !tbaa !18
  %2556 = getelementptr inbounds i8, ptr %2445, i64 %2553
  %2557 = load i8, ptr %2556, align 1, !tbaa !11
  %2558 = sitofp i8 %2557 to double
  %2559 = fmul fast double %2555, %2558
  %2560 = fmul fast double %2559, %2559
  %2561 = fadd fast double %2560, %2478
  store double %2561, ptr %2447, align 8, !tbaa !18
  %2562 = fadd fast double %2555, %2480
  %2563 = add nuw nsw i32 %2479, 1
  br i1 %2471, label %2564, label %2611

2564:                                             ; preds = %2551
  %2565 = load i32, ptr %4, align 4, !tbaa !5
  %2566 = load i32, ptr %12, align 4, !tbaa !5
  %2567 = add nsw i32 %2566, -1
  %2568 = icmp slt i32 %2565, %2567
  br i1 %2568, label %2588, label %2569

2569:                                             ; preds = %2564
  %2570 = icmp eq i32 %2565, %2567
  br i1 %2570, label %2571, label %2604

2571:                                             ; preds = %2569
  store i32 0, ptr %4, align 4, !tbaa !5
  %2572 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2572, ptr %6, align 4, !tbaa !5
  br i1 %2476, label %2611, label %2573

2573:                                             ; preds = %2571, %2598
  %2574 = phi i64 [ %2602, %2598 ], [ 1, %2571 ]
  %2575 = getelementptr inbounds i32, ptr %4, i64 %2574
  %2576 = load i32, ptr %2575, align 4, !tbaa !5
  %2577 = getelementptr inbounds i32, ptr %12, i64 %2574
  %2578 = load i32, ptr %2577, align 4, !tbaa !5
  %2579 = add nsw i32 %2578, -1
  %2580 = icmp slt i32 %2576, %2579
  br i1 %2580, label %2581, label %2596

2581:                                             ; preds = %2573
  br i1 %2568, label %2588, label %2582

2582:                                             ; preds = %2581
  %2583 = getelementptr inbounds i32, ptr %7, i64 %2574
  %2584 = load i32, ptr %2583, align 4, !tbaa !5
  %2585 = getelementptr inbounds i32, ptr %6, i64 %2574
  %2586 = load i32, ptr %2585, align 4, !tbaa !5
  %2587 = add nsw i32 %2586, %2584
  store i32 %2587, ptr %2585, align 4, !tbaa !5
  br label %2606

2588:                                             ; preds = %2564, %2581
  %2589 = phi i32 [ %2576, %2581 ], [ %2565, %2564 ]
  %2590 = phi ptr [ %2575, %2581 ], [ %4, %2564 ]
  %2591 = phi i64 [ %2574, %2581 ], [ 0, %2564 ]
  %2592 = add nsw i32 %2589, 1
  store i32 %2592, ptr %2590, align 4, !tbaa !5
  %2593 = getelementptr inbounds i32, ptr %7, i64 %2591
  %2594 = load i32, ptr %2593, align 4, !tbaa !5
  %2595 = getelementptr inbounds i32, ptr %6, i64 %2591
  br label %2606

2596:                                             ; preds = %2573
  %2597 = icmp eq i32 %2576, %2579
  br i1 %2597, label %2598, label %2604

2598:                                             ; preds = %2596
  store i32 0, ptr %2575, align 4, !tbaa !5
  %2599 = getelementptr inbounds i32, ptr %8, i64 %2574
  %2600 = load i32, ptr %2599, align 4, !tbaa !5
  %2601 = getelementptr inbounds i32, ptr %6, i64 %2574
  store i32 %2600, ptr %2601, align 4, !tbaa !5
  %2602 = add nuw nsw i64 %2574, 1
  %2603 = icmp eq i64 %2602, %2474
  br i1 %2603, label %2611, label %2573, !llvm.loop !467

2604:                                             ; preds = %2569, %2596
  %2605 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

2606:                                             ; preds = %2582, %2588
  %2607 = phi ptr [ %2595, %2588 ], [ %2575, %2582 ]
  %2608 = phi i32 [ %2594, %2588 ], [ 1, %2582 ]
  %2609 = load i32, ptr %2607, align 4, !tbaa !5
  %2610 = add nsw i32 %2609, %2608
  store i32 %2610, ptr %2607, align 4, !tbaa !5
  br label %2611

2611:                                             ; preds = %2598, %2606, %2571, %2551
  %2612 = icmp eq i32 %2563, %5
  br i1 %2612, label %3047, label %2477, !llvm.loop !468

2613:                                             ; preds = %2460, %2749
  %2614 = phi double [ 0.000000e+00, %2460 ], [ %2697, %2749 ]
  %2615 = phi i32 [ 0, %2460 ], [ %2698, %2749 ]
  %2616 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2461, label %2617, label %2686

2617:                                             ; preds = %2613, %2676
  %2618 = phi i32 [ %2685, %2676 ], [ 0, %2613 ]
  %2619 = phi i64 [ %2627, %2676 ], [ %2465, %2613 ]
  %2620 = phi i64 [ %2684, %2676 ], [ %2464, %2613 ]
  %2621 = phi i32 [ %2682, %2676 ], [ %2616, %2613 ]
  %2622 = sub i32 %2463, %2618
  %2623 = tail call i32 @llvm.smin.i32(i32 %2622, i32 0)
  %2624 = sub i32 %2622, %2623
  %2625 = zext i32 %2624 to i64
  %2626 = add nuw nsw i64 %2625, 1
  %2627 = add nsw i64 %2619, -1
  %2628 = icmp ult i32 %2624, 31
  br i1 %2628, label %2664, label %2629

2629:                                             ; preds = %2617
  %2630 = and i64 %2626, 8589934560
  %2631 = sub i64 %2620, %2630
  br label %2632

2632:                                             ; preds = %2632, %2629
  %2633 = phi i64 [ 0, %2629 ], [ %2656, %2632 ]
  %2634 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2629 ], [ %2652, %2632 ]
  %2635 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2629 ], [ %2653, %2632 ]
  %2636 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2629 ], [ %2654, %2632 ]
  %2637 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2629 ], [ %2655, %2632 ]
  %2638 = sub i64 %2620, %2633
  %2639 = getelementptr inbounds i32, ptr %11, i64 %2638
  %2640 = getelementptr inbounds i32, ptr %2639, i64 -7
  %2641 = load <8 x i32>, ptr %2640, align 4, !tbaa !5
  %2642 = shufflevector <8 x i32> %2641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2643 = getelementptr inbounds i32, ptr %2639, i64 -15
  %2644 = load <8 x i32>, ptr %2643, align 4, !tbaa !5
  %2645 = shufflevector <8 x i32> %2644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2646 = getelementptr inbounds i32, ptr %2639, i64 -23
  %2647 = load <8 x i32>, ptr %2646, align 4, !tbaa !5
  %2648 = shufflevector <8 x i32> %2647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2649 = getelementptr inbounds i32, ptr %2639, i64 -31
  %2650 = load <8 x i32>, ptr %2649, align 4, !tbaa !5
  %2651 = shufflevector <8 x i32> %2650, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2652 = mul <8 x i32> %2642, %2634
  %2653 = mul <8 x i32> %2645, %2635
  %2654 = mul <8 x i32> %2648, %2636
  %2655 = mul <8 x i32> %2651, %2637
  %2656 = add nuw i64 %2633, 32
  %2657 = icmp eq i64 %2656, %2630
  br i1 %2657, label %2658, label %2632, !llvm.loop !469

2658:                                             ; preds = %2632
  %2659 = mul <8 x i32> %2653, %2652
  %2660 = mul <8 x i32> %2654, %2659
  %2661 = mul <8 x i32> %2655, %2660
  %2662 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2661)
  %2663 = icmp eq i64 %2626, %2630
  br i1 %2663, label %2676, label %2664

2664:                                             ; preds = %2617, %2658
  %2665 = phi i64 [ %2620, %2617 ], [ %2631, %2658 ]
  %2666 = phi i32 [ 1, %2617 ], [ %2662, %2658 ]
  br label %2667

2667:                                             ; preds = %2664, %2667
  %2668 = phi i64 [ %2673, %2667 ], [ %2665, %2664 ]
  %2669 = phi i32 [ %2672, %2667 ], [ %2666, %2664 ]
  %2670 = getelementptr inbounds i32, ptr %11, i64 %2668
  %2671 = load i32, ptr %2670, align 4, !tbaa !5
  %2672 = mul nsw i32 %2671, %2669
  %2673 = add nsw i64 %2668, -1
  %2674 = trunc i64 %2668 to i32
  %2675 = icmp sgt i32 %2674, 0
  br i1 %2675, label %2667, label %2676, !llvm.loop !470

2676:                                             ; preds = %2667, %2658
  %2677 = phi i32 [ %2662, %2658 ], [ %2672, %2667 ]
  %2678 = and i64 %2627, 4294967295
  %2679 = getelementptr inbounds i32, ptr %6, i64 %2678
  %2680 = load i32, ptr %2679, align 4, !tbaa !5
  %2681 = mul nsw i32 %2680, %2677
  %2682 = add nsw i32 %2681, %2621
  %2683 = icmp sgt i64 %2619, 2
  %2684 = add nsw i64 %2620, -1
  %2685 = add i32 %2618, 1
  br i1 %2683, label %2617, label %2686, !llvm.loop !471

2686:                                             ; preds = %2676, %2613
  %2687 = phi i32 [ %2616, %2613 ], [ %2682, %2676 ]
  %2688 = icmp slt i32 %2687, %5
  br i1 %2688, label %2691, label %2689

2689:                                             ; preds = %2686
  %2690 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3052

2691:                                             ; preds = %2686
  %2692 = sext i32 %2687 to i64
  %2693 = getelementptr inbounds i8, ptr %2445, i64 %2692
  %2694 = load i8, ptr %2693, align 1, !tbaa !11
  %2695 = sitofp i8 %2694 to double
  %2696 = fmul fast double %2695, %2695
  %2697 = fadd fast double %2696, %2614
  store double %2697, ptr %2447, align 8, !tbaa !18
  %2698 = add nuw nsw i32 %2615, 1
  br i1 %2462, label %2699, label %2749

2699:                                             ; preds = %2691
  %2700 = load i32, ptr %4, align 4, !tbaa !5
  %2701 = load i32, ptr %12, align 4, !tbaa !5
  %2702 = add nsw i32 %2701, -1
  %2703 = icmp slt i32 %2700, %2702
  br i1 %2703, label %2726, label %2704

2704:                                             ; preds = %2699
  %2705 = icmp eq i32 %2700, %2702
  br i1 %2705, label %2706, label %2742

2706:                                             ; preds = %2704
  store i32 0, ptr %4, align 4, !tbaa !5
  %2707 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2707, ptr %6, align 4, !tbaa !5
  br i1 %2467, label %2749, label %2708

2708:                                             ; preds = %2706, %2736
  %2709 = phi i64 [ %2740, %2736 ], [ 1, %2706 ]
  %2710 = getelementptr inbounds i32, ptr %4, i64 %2709
  %2711 = load i32, ptr %2710, align 4, !tbaa !5
  %2712 = getelementptr inbounds i32, ptr %12, i64 %2709
  %2713 = load i32, ptr %2712, align 4, !tbaa !5
  %2714 = add nsw i32 %2713, -1
  %2715 = icmp slt i32 %2711, %2714
  br i1 %2715, label %2716, label %2734

2716:                                             ; preds = %2708
  br i1 %2703, label %2726, label %2717

2717:                                             ; preds = %2716
  %2718 = shl i64 %2709, 32
  %2719 = add i64 %2718, -4294967296
  %2720 = ashr exact i64 %2719, 32
  %2721 = getelementptr inbounds i32, ptr %7, i64 %2720
  %2722 = load i32, ptr %2721, align 4, !tbaa !5
  %2723 = getelementptr inbounds i32, ptr %6, i64 %2709
  %2724 = load i32, ptr %2723, align 4, !tbaa !5
  %2725 = add nsw i32 %2724, %2722
  store i32 %2725, ptr %2723, align 4, !tbaa !5
  br label %2744

2726:                                             ; preds = %2699, %2716
  %2727 = phi i32 [ %2711, %2716 ], [ %2700, %2699 ]
  %2728 = phi ptr [ %2710, %2716 ], [ %4, %2699 ]
  %2729 = phi i64 [ %2709, %2716 ], [ 0, %2699 ]
  %2730 = add nsw i32 %2727, 1
  store i32 %2730, ptr %2728, align 4, !tbaa !5
  %2731 = getelementptr inbounds i32, ptr %7, i64 %2729
  %2732 = load i32, ptr %2731, align 4, !tbaa !5
  %2733 = getelementptr inbounds i32, ptr %6, i64 %2729
  br label %2744

2734:                                             ; preds = %2708
  %2735 = icmp eq i32 %2711, %2714
  br i1 %2735, label %2736, label %2742

2736:                                             ; preds = %2734
  store i32 0, ptr %2710, align 4, !tbaa !5
  %2737 = getelementptr inbounds i32, ptr %8, i64 %2709
  %2738 = load i32, ptr %2737, align 4, !tbaa !5
  %2739 = getelementptr inbounds i32, ptr %6, i64 %2709
  store i32 %2738, ptr %2739, align 4, !tbaa !5
  %2740 = add nuw nsw i64 %2709, 1
  %2741 = icmp eq i64 %2740, %2465
  br i1 %2741, label %2749, label %2708, !llvm.loop !472

2742:                                             ; preds = %2704, %2734
  %2743 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

2744:                                             ; preds = %2717, %2726
  %2745 = phi ptr [ %2733, %2726 ], [ %2710, %2717 ]
  %2746 = phi i32 [ %2732, %2726 ], [ 1, %2717 ]
  %2747 = load i32, ptr %2745, align 4, !tbaa !5
  %2748 = add nsw i32 %2747, %2746
  store i32 %2748, ptr %2745, align 4, !tbaa !5
  br label %2749

2749:                                             ; preds = %2736, %2744, %2706, %2691
  %2750 = icmp eq i32 %2698, %5
  br i1 %2750, label %3047, label %2613, !llvm.loop !473

2751:                                             ; preds = %2453
  %2752 = getelementptr inbounds i32, ptr %3, i64 %19
  %2753 = load i32, ptr %2752, align 4, !tbaa !5
  %2754 = icmp eq i32 %2753, 0
  %2755 = icmp sgt i32 %5, 0
  br i1 %2754, label %2765, label %2756

2756:                                             ; preds = %2751
  br i1 %2755, label %2757, label %3047

2757:                                             ; preds = %2756
  %2758 = icmp sgt i32 %13, 1
  %2759 = icmp sgt i32 %13, 0
  %2760 = add i32 %13, -2
  %2761 = zext i32 %2760 to i64
  %2762 = zext i32 %13 to i64
  %2763 = add nuw i32 %5, 1
  %2764 = icmp eq i32 %13, 1
  br label %2907

2765:                                             ; preds = %2751
  br i1 %2755, label %2766, label %3047

2766:                                             ; preds = %2765
  %2767 = icmp sgt i32 %13, 1
  %2768 = icmp sgt i32 %13, 0
  %2769 = add i32 %13, -2
  %2770 = zext i32 %2769 to i64
  %2771 = zext i32 %13 to i64
  %2772 = add nuw i32 %5, 1
  %2773 = icmp eq i32 %13, 1
  br label %2774

2774:                                             ; preds = %2766, %2905
  %2775 = phi double [ 0.000000e+00, %2766 ], [ %2855, %2905 ]
  %2776 = phi i32 [ 0, %2766 ], [ %2857, %2905 ]
  %2777 = phi double [ 0.000000e+00, %2766 ], [ %2856, %2905 ]
  %2778 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2767, label %2779, label %2848

2779:                                             ; preds = %2774, %2838
  %2780 = phi i32 [ %2847, %2838 ], [ 0, %2774 ]
  %2781 = phi i64 [ %2789, %2838 ], [ %2771, %2774 ]
  %2782 = phi i64 [ %2846, %2838 ], [ %2770, %2774 ]
  %2783 = phi i32 [ %2844, %2838 ], [ %2778, %2774 ]
  %2784 = sub i32 %2769, %2780
  %2785 = tail call i32 @llvm.smin.i32(i32 %2784, i32 0)
  %2786 = sub i32 %2784, %2785
  %2787 = zext i32 %2786 to i64
  %2788 = add nuw nsw i64 %2787, 1
  %2789 = add nsw i64 %2781, -1
  %2790 = icmp ult i32 %2786, 31
  br i1 %2790, label %2826, label %2791

2791:                                             ; preds = %2779
  %2792 = and i64 %2788, 8589934560
  %2793 = sub i64 %2782, %2792
  br label %2794

2794:                                             ; preds = %2794, %2791
  %2795 = phi i64 [ 0, %2791 ], [ %2818, %2794 ]
  %2796 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2791 ], [ %2814, %2794 ]
  %2797 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2791 ], [ %2815, %2794 ]
  %2798 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2791 ], [ %2816, %2794 ]
  %2799 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2791 ], [ %2817, %2794 ]
  %2800 = sub i64 %2782, %2795
  %2801 = getelementptr inbounds i32, ptr %9, i64 %2800
  %2802 = getelementptr inbounds i32, ptr %2801, i64 -7
  %2803 = load <8 x i32>, ptr %2802, align 4, !tbaa !5
  %2804 = shufflevector <8 x i32> %2803, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2805 = getelementptr inbounds i32, ptr %2801, i64 -15
  %2806 = load <8 x i32>, ptr %2805, align 4, !tbaa !5
  %2807 = shufflevector <8 x i32> %2806, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2808 = getelementptr inbounds i32, ptr %2801, i64 -23
  %2809 = load <8 x i32>, ptr %2808, align 4, !tbaa !5
  %2810 = shufflevector <8 x i32> %2809, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2811 = getelementptr inbounds i32, ptr %2801, i64 -31
  %2812 = load <8 x i32>, ptr %2811, align 4, !tbaa !5
  %2813 = shufflevector <8 x i32> %2812, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2814 = mul <8 x i32> %2804, %2796
  %2815 = mul <8 x i32> %2807, %2797
  %2816 = mul <8 x i32> %2810, %2798
  %2817 = mul <8 x i32> %2813, %2799
  %2818 = add nuw i64 %2795, 32
  %2819 = icmp eq i64 %2818, %2792
  br i1 %2819, label %2820, label %2794, !llvm.loop !474

2820:                                             ; preds = %2794
  %2821 = mul <8 x i32> %2815, %2814
  %2822 = mul <8 x i32> %2816, %2821
  %2823 = mul <8 x i32> %2817, %2822
  %2824 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2823)
  %2825 = icmp eq i64 %2788, %2792
  br i1 %2825, label %2838, label %2826

2826:                                             ; preds = %2779, %2820
  %2827 = phi i64 [ %2782, %2779 ], [ %2793, %2820 ]
  %2828 = phi i32 [ 1, %2779 ], [ %2824, %2820 ]
  br label %2829

2829:                                             ; preds = %2826, %2829
  %2830 = phi i64 [ %2835, %2829 ], [ %2827, %2826 ]
  %2831 = phi i32 [ %2834, %2829 ], [ %2828, %2826 ]
  %2832 = getelementptr inbounds i32, ptr %9, i64 %2830
  %2833 = load i32, ptr %2832, align 4, !tbaa !5
  %2834 = mul nsw i32 %2833, %2831
  %2835 = add nsw i64 %2830, -1
  %2836 = trunc i64 %2830 to i32
  %2837 = icmp sgt i32 %2836, 0
  br i1 %2837, label %2829, label %2838, !llvm.loop !475

2838:                                             ; preds = %2829, %2820
  %2839 = phi i32 [ %2824, %2820 ], [ %2834, %2829 ]
  %2840 = and i64 %2789, 4294967295
  %2841 = getelementptr inbounds i32, ptr %6, i64 %2840
  %2842 = load i32, ptr %2841, align 4, !tbaa !5
  %2843 = mul nsw i32 %2842, %2839
  %2844 = add nsw i32 %2843, %2783
  %2845 = icmp sgt i64 %2781, 2
  %2846 = add nsw i64 %2782, -1
  %2847 = add i32 %2780, 1
  br i1 %2845, label %2779, label %2848, !llvm.loop !476

2848:                                             ; preds = %2838, %2774
  %2849 = phi i32 [ %2778, %2774 ], [ %2844, %2838 ]
  %2850 = sext i32 %2849 to i64
  %2851 = getelementptr inbounds i8, ptr %2445, i64 %2850
  %2852 = load i8, ptr %2851, align 1, !tbaa !11
  %2853 = sitofp i8 %2852 to double
  %2854 = fmul fast double %2853, %2853
  %2855 = fadd fast double %2854, %2775
  store double %2855, ptr %2447, align 8, !tbaa !18
  %2856 = fadd fast double %2777, 1.000000e+00
  %2857 = add nuw nsw i32 %2776, 1
  br i1 %2768, label %2858, label %2905

2858:                                             ; preds = %2848
  %2859 = load i32, ptr %4, align 4, !tbaa !5
  %2860 = load i32, ptr %12, align 4, !tbaa !5
  %2861 = add nsw i32 %2860, -1
  %2862 = icmp slt i32 %2859, %2861
  br i1 %2862, label %2882, label %2863

2863:                                             ; preds = %2858
  %2864 = icmp eq i32 %2859, %2861
  br i1 %2864, label %2865, label %2898

2865:                                             ; preds = %2863
  store i32 0, ptr %4, align 4, !tbaa !5
  %2866 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2866, ptr %6, align 4, !tbaa !5
  br i1 %2773, label %2905, label %2867

2867:                                             ; preds = %2865, %2892
  %2868 = phi i64 [ %2896, %2892 ], [ 1, %2865 ]
  %2869 = getelementptr inbounds i32, ptr %4, i64 %2868
  %2870 = load i32, ptr %2869, align 4, !tbaa !5
  %2871 = getelementptr inbounds i32, ptr %12, i64 %2868
  %2872 = load i32, ptr %2871, align 4, !tbaa !5
  %2873 = add nsw i32 %2872, -1
  %2874 = icmp slt i32 %2870, %2873
  br i1 %2874, label %2875, label %2890

2875:                                             ; preds = %2867
  br i1 %2862, label %2882, label %2876

2876:                                             ; preds = %2875
  %2877 = getelementptr inbounds i32, ptr %7, i64 %2868
  %2878 = load i32, ptr %2877, align 4, !tbaa !5
  %2879 = getelementptr inbounds i32, ptr %6, i64 %2868
  %2880 = load i32, ptr %2879, align 4, !tbaa !5
  %2881 = add nsw i32 %2880, %2878
  store i32 %2881, ptr %2879, align 4, !tbaa !5
  br label %2900

2882:                                             ; preds = %2858, %2875
  %2883 = phi i32 [ %2870, %2875 ], [ %2859, %2858 ]
  %2884 = phi ptr [ %2869, %2875 ], [ %4, %2858 ]
  %2885 = phi i64 [ %2868, %2875 ], [ 0, %2858 ]
  %2886 = add nsw i32 %2883, 1
  store i32 %2886, ptr %2884, align 4, !tbaa !5
  %2887 = getelementptr inbounds i32, ptr %7, i64 %2885
  %2888 = load i32, ptr %2887, align 4, !tbaa !5
  %2889 = getelementptr inbounds i32, ptr %6, i64 %2885
  br label %2900

2890:                                             ; preds = %2867
  %2891 = icmp eq i32 %2870, %2873
  br i1 %2891, label %2892, label %2898

2892:                                             ; preds = %2890
  store i32 0, ptr %2869, align 4, !tbaa !5
  %2893 = getelementptr inbounds i32, ptr %8, i64 %2868
  %2894 = load i32, ptr %2893, align 4, !tbaa !5
  %2895 = getelementptr inbounds i32, ptr %6, i64 %2868
  store i32 %2894, ptr %2895, align 4, !tbaa !5
  %2896 = add nuw nsw i64 %2868, 1
  %2897 = icmp eq i64 %2896, %2771
  br i1 %2897, label %2905, label %2867, !llvm.loop !477

2898:                                             ; preds = %2863, %2890
  %2899 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

2900:                                             ; preds = %2876, %2882
  %2901 = phi ptr [ %2889, %2882 ], [ %2869, %2876 ]
  %2902 = phi i32 [ %2888, %2882 ], [ 1, %2876 ]
  %2903 = load i32, ptr %2901, align 4, !tbaa !5
  %2904 = add nsw i32 %2903, %2902
  store i32 %2904, ptr %2901, align 4, !tbaa !5
  br label %2905

2905:                                             ; preds = %2892, %2900, %2865, %2848
  %2906 = icmp eq i32 %2857, %5
  br i1 %2906, label %3047, label %2774, !llvm.loop !478

2907:                                             ; preds = %2757, %3043
  %2908 = phi double [ 0.000000e+00, %2757 ], [ %2991, %3043 ]
  %2909 = phi i32 [ 0, %2757 ], [ %2992, %3043 ]
  %2910 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2758, label %2911, label %2980

2911:                                             ; preds = %2907, %2970
  %2912 = phi i32 [ %2979, %2970 ], [ 0, %2907 ]
  %2913 = phi i64 [ %2921, %2970 ], [ %2762, %2907 ]
  %2914 = phi i64 [ %2978, %2970 ], [ %2761, %2907 ]
  %2915 = phi i32 [ %2976, %2970 ], [ %2910, %2907 ]
  %2916 = sub i32 %2760, %2912
  %2917 = tail call i32 @llvm.smin.i32(i32 %2916, i32 0)
  %2918 = sub i32 %2916, %2917
  %2919 = zext i32 %2918 to i64
  %2920 = add nuw nsw i64 %2919, 1
  %2921 = add nsw i64 %2913, -1
  %2922 = icmp ult i32 %2918, 31
  br i1 %2922, label %2958, label %2923

2923:                                             ; preds = %2911
  %2924 = and i64 %2920, 8589934560
  %2925 = sub i64 %2914, %2924
  br label %2926

2926:                                             ; preds = %2926, %2923
  %2927 = phi i64 [ 0, %2923 ], [ %2950, %2926 ]
  %2928 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2923 ], [ %2946, %2926 ]
  %2929 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2923 ], [ %2947, %2926 ]
  %2930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2923 ], [ %2948, %2926 ]
  %2931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2923 ], [ %2949, %2926 ]
  %2932 = sub i64 %2914, %2927
  %2933 = getelementptr inbounds i32, ptr %11, i64 %2932
  %2934 = getelementptr inbounds i32, ptr %2933, i64 -7
  %2935 = load <8 x i32>, ptr %2934, align 4, !tbaa !5
  %2936 = shufflevector <8 x i32> %2935, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2937 = getelementptr inbounds i32, ptr %2933, i64 -15
  %2938 = load <8 x i32>, ptr %2937, align 4, !tbaa !5
  %2939 = shufflevector <8 x i32> %2938, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2940 = getelementptr inbounds i32, ptr %2933, i64 -23
  %2941 = load <8 x i32>, ptr %2940, align 4, !tbaa !5
  %2942 = shufflevector <8 x i32> %2941, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2943 = getelementptr inbounds i32, ptr %2933, i64 -31
  %2944 = load <8 x i32>, ptr %2943, align 4, !tbaa !5
  %2945 = shufflevector <8 x i32> %2944, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2946 = mul <8 x i32> %2936, %2928
  %2947 = mul <8 x i32> %2939, %2929
  %2948 = mul <8 x i32> %2942, %2930
  %2949 = mul <8 x i32> %2945, %2931
  %2950 = add nuw i64 %2927, 32
  %2951 = icmp eq i64 %2950, %2924
  br i1 %2951, label %2952, label %2926, !llvm.loop !479

2952:                                             ; preds = %2926
  %2953 = mul <8 x i32> %2947, %2946
  %2954 = mul <8 x i32> %2948, %2953
  %2955 = mul <8 x i32> %2949, %2954
  %2956 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2955)
  %2957 = icmp eq i64 %2920, %2924
  br i1 %2957, label %2970, label %2958

2958:                                             ; preds = %2911, %2952
  %2959 = phi i64 [ %2914, %2911 ], [ %2925, %2952 ]
  %2960 = phi i32 [ 1, %2911 ], [ %2956, %2952 ]
  br label %2961

2961:                                             ; preds = %2958, %2961
  %2962 = phi i64 [ %2967, %2961 ], [ %2959, %2958 ]
  %2963 = phi i32 [ %2966, %2961 ], [ %2960, %2958 ]
  %2964 = getelementptr inbounds i32, ptr %11, i64 %2962
  %2965 = load i32, ptr %2964, align 4, !tbaa !5
  %2966 = mul nsw i32 %2965, %2963
  %2967 = add nsw i64 %2962, -1
  %2968 = trunc i64 %2962 to i32
  %2969 = icmp sgt i32 %2968, 0
  br i1 %2969, label %2961, label %2970, !llvm.loop !480

2970:                                             ; preds = %2961, %2952
  %2971 = phi i32 [ %2956, %2952 ], [ %2966, %2961 ]
  %2972 = and i64 %2921, 4294967295
  %2973 = getelementptr inbounds i32, ptr %6, i64 %2972
  %2974 = load i32, ptr %2973, align 4, !tbaa !5
  %2975 = mul nsw i32 %2974, %2971
  %2976 = add nsw i32 %2975, %2915
  %2977 = icmp sgt i64 %2913, 2
  %2978 = add nsw i64 %2914, -1
  %2979 = add i32 %2912, 1
  br i1 %2977, label %2911, label %2980, !llvm.loop !481

2980:                                             ; preds = %2970, %2907
  %2981 = phi i32 [ %2910, %2907 ], [ %2976, %2970 ]
  %2982 = icmp slt i32 %2981, %5
  br i1 %2982, label %2985, label %2983

2983:                                             ; preds = %2980
  %2984 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3052

2985:                                             ; preds = %2980
  %2986 = sext i32 %2981 to i64
  %2987 = getelementptr inbounds i8, ptr %2445, i64 %2986
  %2988 = load i8, ptr %2987, align 1, !tbaa !11
  %2989 = sitofp i8 %2988 to double
  %2990 = fmul fast double %2989, %2989
  %2991 = fadd fast double %2990, %2908
  store double %2991, ptr %2447, align 8, !tbaa !18
  %2992 = add nuw nsw i32 %2909, 1
  br i1 %2759, label %2993, label %3043

2993:                                             ; preds = %2985
  %2994 = load i32, ptr %4, align 4, !tbaa !5
  %2995 = load i32, ptr %12, align 4, !tbaa !5
  %2996 = add nsw i32 %2995, -1
  %2997 = icmp slt i32 %2994, %2996
  br i1 %2997, label %3020, label %2998

2998:                                             ; preds = %2993
  %2999 = icmp eq i32 %2994, %2996
  br i1 %2999, label %3000, label %3036

3000:                                             ; preds = %2998
  store i32 0, ptr %4, align 4, !tbaa !5
  %3001 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3001, ptr %6, align 4, !tbaa !5
  br i1 %2764, label %3043, label %3002

3002:                                             ; preds = %3000, %3030
  %3003 = phi i64 [ %3034, %3030 ], [ 1, %3000 ]
  %3004 = getelementptr inbounds i32, ptr %4, i64 %3003
  %3005 = load i32, ptr %3004, align 4, !tbaa !5
  %3006 = getelementptr inbounds i32, ptr %12, i64 %3003
  %3007 = load i32, ptr %3006, align 4, !tbaa !5
  %3008 = add nsw i32 %3007, -1
  %3009 = icmp slt i32 %3005, %3008
  br i1 %3009, label %3010, label %3028

3010:                                             ; preds = %3002
  br i1 %2997, label %3020, label %3011

3011:                                             ; preds = %3010
  %3012 = shl i64 %3003, 32
  %3013 = add i64 %3012, -4294967296
  %3014 = ashr exact i64 %3013, 32
  %3015 = getelementptr inbounds i32, ptr %7, i64 %3014
  %3016 = load i32, ptr %3015, align 4, !tbaa !5
  %3017 = getelementptr inbounds i32, ptr %6, i64 %3003
  %3018 = load i32, ptr %3017, align 4, !tbaa !5
  %3019 = add nsw i32 %3018, %3016
  store i32 %3019, ptr %3017, align 4, !tbaa !5
  br label %3038

3020:                                             ; preds = %2993, %3010
  %3021 = phi i32 [ %3005, %3010 ], [ %2994, %2993 ]
  %3022 = phi ptr [ %3004, %3010 ], [ %4, %2993 ]
  %3023 = phi i64 [ %3003, %3010 ], [ 0, %2993 ]
  %3024 = add nsw i32 %3021, 1
  store i32 %3024, ptr %3022, align 4, !tbaa !5
  %3025 = getelementptr inbounds i32, ptr %7, i64 %3023
  %3026 = load i32, ptr %3025, align 4, !tbaa !5
  %3027 = getelementptr inbounds i32, ptr %6, i64 %3023
  br label %3038

3028:                                             ; preds = %3002
  %3029 = icmp eq i32 %3005, %3008
  br i1 %3029, label %3030, label %3036

3030:                                             ; preds = %3028
  store i32 0, ptr %3004, align 4, !tbaa !5
  %3031 = getelementptr inbounds i32, ptr %8, i64 %3003
  %3032 = load i32, ptr %3031, align 4, !tbaa !5
  %3033 = getelementptr inbounds i32, ptr %6, i64 %3003
  store i32 %3032, ptr %3033, align 4, !tbaa !5
  %3034 = add nuw nsw i64 %3003, 1
  %3035 = icmp eq i64 %3034, %2762
  br i1 %3035, label %3043, label %3002, !llvm.loop !482

3036:                                             ; preds = %2998, %3028
  %3037 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3052

3038:                                             ; preds = %3011, %3020
  %3039 = phi ptr [ %3027, %3020 ], [ %3004, %3011 ]
  %3040 = phi i32 [ %3026, %3020 ], [ 1, %3011 ]
  %3041 = load i32, ptr %3039, align 4, !tbaa !5
  %3042 = add nsw i32 %3041, %3040
  store i32 %3042, ptr %3039, align 4, !tbaa !5
  br label %3043

3043:                                             ; preds = %3030, %3038, %3000, %2985
  %3044 = icmp eq i32 %2992, %5
  br i1 %3044, label %3047, label %2907, !llvm.loop !483

3045:                                             ; preds = %2453
  %3046 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3047

3047:                                             ; preds = %3043, %2905, %2749, %2611, %2439, %2301, %2145, %2005, %1831, %1693, %1537, %1399, %1227, %1089, %933, %794, %620, %483, %328, %191, %2756, %2765, %2459, %2468, %2152, %2161, %1851, %1860, %1544, %1553, %1247, %1256, %940, %949, %640, %649, %335, %344, %37, %46, %2449, %3045, %1841, %2441, %1237, %1833, %630, %1229, %28, %622, %18
  %3048 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %622 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1229 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %1833 ], [ 0.000000e+00, %1237 ], [ 0.000000e+00, %2441 ], [ 0.000000e+00, %1841 ], [ 0.000000e+00, %3045 ], [ 0.000000e+00, %2449 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %344 ], [ 0.000000e+00, %335 ], [ 0.000000e+00, %649 ], [ 0.000000e+00, %640 ], [ 0.000000e+00, %949 ], [ 0.000000e+00, %940 ], [ 0.000000e+00, %1256 ], [ 0.000000e+00, %1247 ], [ 0.000000e+00, %1553 ], [ 0.000000e+00, %1544 ], [ 0.000000e+00, %1860 ], [ 0.000000e+00, %1851 ], [ 0.000000e+00, %2161 ], [ 0.000000e+00, %2152 ], [ 0.000000e+00, %2468 ], [ 0.000000e+00, %2459 ], [ 0.000000e+00, %2765 ], [ 0.000000e+00, %2756 ], [ %142, %191 ], [ 0.000000e+00, %328 ], [ %434, %483 ], [ 0.000000e+00, %620 ], [ %745, %794 ], [ 0.000000e+00, %933 ], [ %1040, %1089 ], [ 0.000000e+00, %1227 ], [ %1350, %1399 ], [ 0.000000e+00, %1537 ], [ %1644, %1693 ], [ 0.000000e+00, %1831 ], [ %1956, %2005 ], [ 0.000000e+00, %2145 ], [ %2252, %2301 ], [ 0.000000e+00, %2439 ], [ %2562, %2611 ], [ 0.000000e+00, %2749 ], [ %2856, %2905 ], [ 0.000000e+00, %3043 ]
  %3049 = phi i32 [ %10, %18 ], [ 1, %622 ], [ 1, %28 ], [ 1, %1229 ], [ 1, %630 ], [ 1, %1833 ], [ 1, %1237 ], [ 1, %2441 ], [ 1, %1841 ], [ 1, %3045 ], [ 1, %2449 ], [ 1, %46 ], [ 1, %37 ], [ 1, %344 ], [ 1, %335 ], [ 1, %649 ], [ 1, %640 ], [ 1, %949 ], [ 1, %940 ], [ 1, %1256 ], [ 1, %1247 ], [ 1, %1553 ], [ 1, %1544 ], [ 1, %1860 ], [ 1, %1851 ], [ 1, %2161 ], [ 1, %2152 ], [ 1, %2468 ], [ 1, %2459 ], [ 1, %2765 ], [ 1, %2756 ], [ %53, %191 ], [ %44, %328 ], [ %351, %483 ], [ %342, %620 ], [ %656, %794 ], [ %647, %933 ], [ %956, %1089 ], [ %947, %1227 ], [ %1263, %1399 ], [ %1254, %1537 ], [ %1560, %1693 ], [ %1551, %1831 ], [ %1867, %2005 ], [ %1858, %2145 ], [ %2168, %2301 ], [ %2159, %2439 ], [ %2475, %2611 ], [ %2466, %2749 ], [ %2772, %2905 ], [ %2763, %3043 ]
  %3050 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %3049, ptr noundef nonnull @.str.5) #3
  %3051 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %3048, ptr noundef nonnull @.str.6) #3
  br label %3052

3052:                                             ; preds = %2604, %2689, %2742, %2898, %2983, %3036, %1998, %2083, %2138, %2294, %2379, %2432, %1392, %1477, %1530, %1686, %1771, %1824, %787, %871, %926, %1082, %1166, %1220, %184, %268, %321, %476, %560, %613, %3047
  %3053 = phi i32 [ 0, %3047 ], [ -1, %613 ], [ -1, %560 ], [ -1, %476 ], [ -1, %321 ], [ -1, %268 ], [ -1, %184 ], [ -1, %1220 ], [ -1, %1166 ], [ -1, %1082 ], [ -1, %926 ], [ -1, %871 ], [ -1, %787 ], [ -1, %1824 ], [ -1, %1771 ], [ -1, %1686 ], [ -1, %1530 ], [ -1, %1477 ], [ -1, %1392 ], [ -1, %2432 ], [ -1, %2379 ], [ -1, %2294 ], [ -1, %2138 ], [ -1, %2083 ], [ -1, %1998 ], [ -1, %3036 ], [ -1, %2983 ], [ -1, %2898 ], [ -1, %2742 ], [ -1, %2689 ], [ -1, %2604 ]
  ret i32 %3053
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm2_INT2(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %3056 [
    i32 101, label %22
    i32 102, label %629
    i32 107, label %1236
    i32 108, label %1840
    i32 109, label %2448
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = load i16, ptr %24, align 2, !tbaa !78
  %30 = mul i16 %29, %29
  %31 = trunc i16 %30 to i8
  store i8 %31, ptr %26, align 1, !tbaa !11
  br label %3056

32:                                               ; preds = %22
  switch i32 %1, label %627 [
    i32 1, label %33
    i32 0, label %333
  ]

33:                                               ; preds = %32
  %34 = getelementptr inbounds i32, ptr %3, i64 %19
  %35 = load i32, ptr %34, align 4, !tbaa !5
  %36 = icmp eq i32 %35, 0
  %37 = icmp sgt i32 %5, 0
  br i1 %36, label %47, label %38

38:                                               ; preds = %33
  br i1 %37, label %39, label %3056

39:                                               ; preds = %38
  %40 = icmp sgt i32 %13, 1
  %41 = icmp sgt i32 %13, 0
  %42 = add i32 %13, -2
  %43 = zext i32 %42 to i64
  %44 = zext i32 %13 to i64
  %45 = add nuw i32 %5, 1
  %46 = icmp eq i32 %13, 1
  br label %195

47:                                               ; preds = %33
  br i1 %37, label %48, label %3056

48:                                               ; preds = %47
  %49 = icmp sgt i32 %13, 1
  %50 = icmp sgt i32 %13, 0
  %51 = add i32 %13, -2
  %52 = zext i32 %51 to i64
  %53 = zext i32 %13 to i64
  %54 = add nuw i32 %5, 1
  %55 = icmp eq i32 %13, 1
  br label %56

56:                                               ; preds = %48, %193
  %57 = phi i32 [ 0, %48 ], [ %145, %193 ]
  %58 = phi double [ 0.000000e+00, %48 ], [ %144, %193 ]
  %59 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %49, label %60, label %129

60:                                               ; preds = %56, %119
  %61 = phi i32 [ %128, %119 ], [ 0, %56 ]
  %62 = phi i64 [ %70, %119 ], [ %53, %56 ]
  %63 = phi i64 [ %127, %119 ], [ %52, %56 ]
  %64 = phi i32 [ %125, %119 ], [ %59, %56 ]
  %65 = sub i32 %51, %61
  %66 = tail call i32 @llvm.smin.i32(i32 %65, i32 0)
  %67 = sub i32 %65, %66
  %68 = zext i32 %67 to i64
  %69 = add nuw nsw i64 %68, 1
  %70 = add nsw i64 %62, -1
  %71 = icmp ult i32 %67, 31
  br i1 %71, label %107, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 8589934560
  %74 = sub i64 %63, %73
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi i64 [ 0, %72 ], [ %99, %75 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %95, %75 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %96, %75 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %97, %75 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %98, %75 ]
  %81 = sub i64 %63, %76
  %82 = getelementptr inbounds i32, ptr %9, i64 %81
  %83 = getelementptr inbounds i32, ptr %82, i64 -7
  %84 = load <8 x i32>, ptr %83, align 4, !tbaa !5
  %85 = shufflevector <8 x i32> %84, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %86 = getelementptr inbounds i32, ptr %82, i64 -15
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !5
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %82, i64 -23
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !5
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %82, i64 -31
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !5
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = mul <8 x i32> %85, %77
  %96 = mul <8 x i32> %88, %78
  %97 = mul <8 x i32> %91, %79
  %98 = mul <8 x i32> %94, %80
  %99 = add nuw i64 %76, 32
  %100 = icmp eq i64 %99, %73
  br i1 %100, label %101, label %75, !llvm.loop !484

101:                                              ; preds = %75
  %102 = mul <8 x i32> %96, %95
  %103 = mul <8 x i32> %97, %102
  %104 = mul <8 x i32> %98, %103
  %105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %104)
  %106 = icmp eq i64 %69, %73
  br i1 %106, label %119, label %107

107:                                              ; preds = %60, %101
  %108 = phi i64 [ %63, %60 ], [ %74, %101 ]
  %109 = phi i32 [ 1, %60 ], [ %105, %101 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, ptr %9, i64 %111
  %114 = load i32, ptr %113, align 4, !tbaa !5
  %115 = mul nsw i32 %114, %112
  %116 = add nsw i64 %111, -1
  %117 = trunc i64 %111 to i32
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %110, label %119, !llvm.loop !485

119:                                              ; preds = %110, %101
  %120 = phi i32 [ %105, %101 ], [ %115, %110 ]
  %121 = and i64 %70, 4294967295
  %122 = getelementptr inbounds i32, ptr %6, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !5
  %124 = mul nsw i32 %123, %120
  %125 = add nsw i32 %124, %64
  %126 = icmp sgt i64 %62, 2
  %127 = add nsw i64 %63, -1
  %128 = add i32 %61, 1
  br i1 %126, label %60, label %129, !llvm.loop !486

129:                                              ; preds = %119, %56
  %130 = phi i32 [ %59, %56 ], [ %125, %119 ]
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds double, ptr %2, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !18
  %134 = getelementptr inbounds i16, ptr %24, i64 %131
  %135 = load i16, ptr %134, align 2, !tbaa !78
  %136 = load i8, ptr %26, align 1, !tbaa !11
  %137 = uitofp i8 %136 to double
  %138 = and i16 %135, 255
  %139 = uitofp i16 %138 to double
  %140 = fmul fast double %133, %139
  %141 = fmul fast double %140, %140
  %142 = fadd fast double %141, %137
  %143 = fptoui double %142 to i8
  store i8 %143, ptr %26, align 1, !tbaa !11
  %144 = fadd fast double %133, %58
  %145 = add nuw nsw i32 %57, 1
  br i1 %50, label %146, label %193

146:                                              ; preds = %129
  %147 = load i32, ptr %4, align 4, !tbaa !5
  %148 = load i32, ptr %12, align 4, !tbaa !5
  %149 = add nsw i32 %148, -1
  %150 = icmp slt i32 %147, %149
  br i1 %150, label %170, label %151

151:                                              ; preds = %146
  %152 = icmp eq i32 %147, %149
  br i1 %152, label %153, label %186

153:                                              ; preds = %151
  store i32 0, ptr %4, align 4, !tbaa !5
  %154 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %154, ptr %6, align 4, !tbaa !5
  br i1 %55, label %193, label %155

155:                                              ; preds = %153, %180
  %156 = phi i64 [ %184, %180 ], [ 1, %153 ]
  %157 = getelementptr inbounds i32, ptr %4, i64 %156
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = getelementptr inbounds i32, ptr %12, i64 %156
  %160 = load i32, ptr %159, align 4, !tbaa !5
  %161 = add nsw i32 %160, -1
  %162 = icmp slt i32 %158, %161
  br i1 %162, label %163, label %178

163:                                              ; preds = %155
  br i1 %150, label %170, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds i32, ptr %7, i64 %156
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = getelementptr inbounds i32, ptr %6, i64 %156
  %168 = load i32, ptr %167, align 4, !tbaa !5
  %169 = add nsw i32 %168, %166
  store i32 %169, ptr %167, align 4, !tbaa !5
  br label %188

170:                                              ; preds = %146, %163
  %171 = phi i32 [ %158, %163 ], [ %147, %146 ]
  %172 = phi ptr [ %157, %163 ], [ %4, %146 ]
  %173 = phi i64 [ %156, %163 ], [ 0, %146 ]
  %174 = add nsw i32 %171, 1
  store i32 %174, ptr %172, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %7, i64 %173
  %176 = load i32, ptr %175, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %6, i64 %173
  br label %188

178:                                              ; preds = %155
  %179 = icmp eq i32 %158, %161
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  store i32 0, ptr %157, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %8, i64 %156
  %182 = load i32, ptr %181, align 4, !tbaa !5
  %183 = getelementptr inbounds i32, ptr %6, i64 %156
  store i32 %182, ptr %183, align 4, !tbaa !5
  %184 = add nuw nsw i64 %156, 1
  %185 = icmp eq i64 %184, %53
  br i1 %185, label %193, label %155, !llvm.loop !487

186:                                              ; preds = %151, %178
  %187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

188:                                              ; preds = %164, %170
  %189 = phi ptr [ %177, %170 ], [ %157, %164 ]
  %190 = phi i32 [ %176, %170 ], [ 1, %164 ]
  %191 = load i32, ptr %189, align 4, !tbaa !5
  %192 = add nsw i32 %191, %190
  store i32 %192, ptr %189, align 4, !tbaa !5
  br label %193

193:                                              ; preds = %180, %188, %153, %129
  %194 = icmp eq i32 %145, %5
  br i1 %194, label %3056, label %56, !llvm.loop !488

195:                                              ; preds = %39, %331
  %196 = phi i32 [ 0, %39 ], [ %280, %331 ]
  %197 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %40, label %198, label %267

198:                                              ; preds = %195, %257
  %199 = phi i32 [ %266, %257 ], [ 0, %195 ]
  %200 = phi i64 [ %208, %257 ], [ %44, %195 ]
  %201 = phi i64 [ %265, %257 ], [ %43, %195 ]
  %202 = phi i32 [ %263, %257 ], [ %197, %195 ]
  %203 = sub i32 %42, %199
  %204 = tail call i32 @llvm.smin.i32(i32 %203, i32 0)
  %205 = sub i32 %203, %204
  %206 = zext i32 %205 to i64
  %207 = add nuw nsw i64 %206, 1
  %208 = add nsw i64 %200, -1
  %209 = icmp ult i32 %205, 31
  br i1 %209, label %245, label %210

210:                                              ; preds = %198
  %211 = and i64 %207, 8589934560
  %212 = sub i64 %201, %211
  br label %213

213:                                              ; preds = %213, %210
  %214 = phi i64 [ 0, %210 ], [ %237, %213 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %233, %213 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %234, %213 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %235, %213 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %236, %213 ]
  %219 = sub i64 %201, %214
  %220 = getelementptr inbounds i32, ptr %11, i64 %219
  %221 = getelementptr inbounds i32, ptr %220, i64 -7
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %220, i64 -15
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %220, i64 -23
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %220, i64 -31
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = mul <8 x i32> %223, %215
  %234 = mul <8 x i32> %226, %216
  %235 = mul <8 x i32> %229, %217
  %236 = mul <8 x i32> %232, %218
  %237 = add nuw i64 %214, 32
  %238 = icmp eq i64 %237, %211
  br i1 %238, label %239, label %213, !llvm.loop !489

239:                                              ; preds = %213
  %240 = mul <8 x i32> %234, %233
  %241 = mul <8 x i32> %235, %240
  %242 = mul <8 x i32> %236, %241
  %243 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %242)
  %244 = icmp eq i64 %207, %211
  br i1 %244, label %257, label %245

245:                                              ; preds = %198, %239
  %246 = phi i64 [ %201, %198 ], [ %212, %239 ]
  %247 = phi i32 [ 1, %198 ], [ %243, %239 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %254, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %253, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i32, ptr %11, i64 %249
  %252 = load i32, ptr %251, align 4, !tbaa !5
  %253 = mul nsw i32 %252, %250
  %254 = add nsw i64 %249, -1
  %255 = trunc i64 %249 to i32
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %248, label %257, !llvm.loop !490

257:                                              ; preds = %248, %239
  %258 = phi i32 [ %243, %239 ], [ %253, %248 ]
  %259 = and i64 %208, 4294967295
  %260 = getelementptr inbounds i32, ptr %6, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !5
  %262 = mul nsw i32 %261, %258
  %263 = add nsw i32 %262, %202
  %264 = icmp sgt i64 %200, 2
  %265 = add nsw i64 %201, -1
  %266 = add i32 %199, 1
  br i1 %264, label %198, label %267, !llvm.loop !491

267:                                              ; preds = %257, %195
  %268 = phi i32 [ %197, %195 ], [ %263, %257 ]
  %269 = icmp slt i32 %268, %5
  br i1 %269, label %272, label %270

270:                                              ; preds = %267
  %271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3061

272:                                              ; preds = %267
  %273 = sext i32 %268 to i64
  %274 = getelementptr inbounds i16, ptr %24, i64 %273
  %275 = load i16, ptr %274, align 2, !tbaa !78
  %276 = load i8, ptr %26, align 1, !tbaa !11
  %277 = mul i16 %275, %275
  %278 = trunc i16 %277 to i8
  %279 = add i8 %276, %278
  store i8 %279, ptr %26, align 1, !tbaa !11
  %280 = add nuw nsw i32 %196, 1
  br i1 %41, label %281, label %331

281:                                              ; preds = %272
  %282 = load i32, ptr %4, align 4, !tbaa !5
  %283 = load i32, ptr %12, align 4, !tbaa !5
  %284 = add nsw i32 %283, -1
  %285 = icmp slt i32 %282, %284
  br i1 %285, label %308, label %286

286:                                              ; preds = %281
  %287 = icmp eq i32 %282, %284
  br i1 %287, label %288, label %324

288:                                              ; preds = %286
  store i32 0, ptr %4, align 4, !tbaa !5
  %289 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %289, ptr %6, align 4, !tbaa !5
  br i1 %46, label %331, label %290

290:                                              ; preds = %288, %318
  %291 = phi i64 [ %322, %318 ], [ 1, %288 ]
  %292 = getelementptr inbounds i32, ptr %4, i64 %291
  %293 = load i32, ptr %292, align 4, !tbaa !5
  %294 = getelementptr inbounds i32, ptr %12, i64 %291
  %295 = load i32, ptr %294, align 4, !tbaa !5
  %296 = add nsw i32 %295, -1
  %297 = icmp slt i32 %293, %296
  br i1 %297, label %298, label %316

298:                                              ; preds = %290
  br i1 %285, label %308, label %299

299:                                              ; preds = %298
  %300 = shl i64 %291, 32
  %301 = add i64 %300, -4294967296
  %302 = ashr exact i64 %301, 32
  %303 = getelementptr inbounds i32, ptr %7, i64 %302
  %304 = load i32, ptr %303, align 4, !tbaa !5
  %305 = getelementptr inbounds i32, ptr %6, i64 %291
  %306 = load i32, ptr %305, align 4, !tbaa !5
  %307 = add nsw i32 %306, %304
  store i32 %307, ptr %305, align 4, !tbaa !5
  br label %326

308:                                              ; preds = %281, %298
  %309 = phi i32 [ %293, %298 ], [ %282, %281 ]
  %310 = phi ptr [ %292, %298 ], [ %4, %281 ]
  %311 = phi i64 [ %291, %298 ], [ 0, %281 ]
  %312 = add nsw i32 %309, 1
  store i32 %312, ptr %310, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %7, i64 %311
  %314 = load i32, ptr %313, align 4, !tbaa !5
  %315 = getelementptr inbounds i32, ptr %6, i64 %311
  br label %326

316:                                              ; preds = %290
  %317 = icmp eq i32 %293, %296
  br i1 %317, label %318, label %324

318:                                              ; preds = %316
  store i32 0, ptr %292, align 4, !tbaa !5
  %319 = getelementptr inbounds i32, ptr %8, i64 %291
  %320 = load i32, ptr %319, align 4, !tbaa !5
  %321 = getelementptr inbounds i32, ptr %6, i64 %291
  store i32 %320, ptr %321, align 4, !tbaa !5
  %322 = add nuw nsw i64 %291, 1
  %323 = icmp eq i64 %322, %44
  br i1 %323, label %331, label %290, !llvm.loop !492

324:                                              ; preds = %286, %316
  %325 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

326:                                              ; preds = %299, %308
  %327 = phi ptr [ %315, %308 ], [ %292, %299 ]
  %328 = phi i32 [ %314, %308 ], [ 1, %299 ]
  %329 = load i32, ptr %327, align 4, !tbaa !5
  %330 = add nsw i32 %329, %328
  store i32 %330, ptr %327, align 4, !tbaa !5
  br label %331

331:                                              ; preds = %318, %326, %288, %272
  %332 = icmp eq i32 %280, %5
  br i1 %332, label %3056, label %195, !llvm.loop !493

333:                                              ; preds = %32
  %334 = getelementptr inbounds i32, ptr %3, i64 %19
  %335 = load i32, ptr %334, align 4, !tbaa !5
  %336 = icmp eq i32 %335, 0
  %337 = icmp sgt i32 %5, 0
  br i1 %336, label %347, label %338

338:                                              ; preds = %333
  br i1 %337, label %339, label %3056

339:                                              ; preds = %338
  %340 = icmp sgt i32 %13, 1
  %341 = icmp sgt i32 %13, 0
  %342 = add i32 %13, -2
  %343 = zext i32 %342 to i64
  %344 = zext i32 %13 to i64
  %345 = add nuw i32 %5, 1
  %346 = icmp eq i32 %13, 1
  br label %489

347:                                              ; preds = %333
  br i1 %337, label %348, label %3056

348:                                              ; preds = %347
  %349 = icmp sgt i32 %13, 1
  %350 = icmp sgt i32 %13, 0
  %351 = add i32 %13, -2
  %352 = zext i32 %351 to i64
  %353 = zext i32 %13 to i64
  %354 = add nuw i32 %5, 1
  %355 = icmp eq i32 %13, 1
  br label %356

356:                                              ; preds = %348, %487
  %357 = phi i32 [ 0, %348 ], [ %439, %487 ]
  %358 = phi double [ 0.000000e+00, %348 ], [ %438, %487 ]
  %359 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %349, label %360, label %429

360:                                              ; preds = %356, %419
  %361 = phi i32 [ %428, %419 ], [ 0, %356 ]
  %362 = phi i64 [ %370, %419 ], [ %353, %356 ]
  %363 = phi i64 [ %427, %419 ], [ %352, %356 ]
  %364 = phi i32 [ %425, %419 ], [ %359, %356 ]
  %365 = sub i32 %351, %361
  %366 = tail call i32 @llvm.smin.i32(i32 %365, i32 0)
  %367 = sub i32 %365, %366
  %368 = zext i32 %367 to i64
  %369 = add nuw nsw i64 %368, 1
  %370 = add nsw i64 %362, -1
  %371 = icmp ult i32 %367, 31
  br i1 %371, label %407, label %372

372:                                              ; preds = %360
  %373 = and i64 %369, 8589934560
  %374 = sub i64 %363, %373
  br label %375

375:                                              ; preds = %375, %372
  %376 = phi i64 [ 0, %372 ], [ %399, %375 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %395, %375 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %396, %375 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %397, %375 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %398, %375 ]
  %381 = sub i64 %363, %376
  %382 = getelementptr inbounds i32, ptr %9, i64 %381
  %383 = getelementptr inbounds i32, ptr %382, i64 -7
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %382, i64 -15
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %382, i64 -23
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %382, i64 -31
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !5
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = mul <8 x i32> %385, %377
  %396 = mul <8 x i32> %388, %378
  %397 = mul <8 x i32> %391, %379
  %398 = mul <8 x i32> %394, %380
  %399 = add nuw i64 %376, 32
  %400 = icmp eq i64 %399, %373
  br i1 %400, label %401, label %375, !llvm.loop !494

401:                                              ; preds = %375
  %402 = mul <8 x i32> %396, %395
  %403 = mul <8 x i32> %397, %402
  %404 = mul <8 x i32> %398, %403
  %405 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %404)
  %406 = icmp eq i64 %369, %373
  br i1 %406, label %419, label %407

407:                                              ; preds = %360, %401
  %408 = phi i64 [ %363, %360 ], [ %374, %401 ]
  %409 = phi i32 [ 1, %360 ], [ %405, %401 ]
  br label %410

410:                                              ; preds = %407, %410
  %411 = phi i64 [ %416, %410 ], [ %408, %407 ]
  %412 = phi i32 [ %415, %410 ], [ %409, %407 ]
  %413 = getelementptr inbounds i32, ptr %9, i64 %411
  %414 = load i32, ptr %413, align 4, !tbaa !5
  %415 = mul nsw i32 %414, %412
  %416 = add nsw i64 %411, -1
  %417 = trunc i64 %411 to i32
  %418 = icmp sgt i32 %417, 0
  br i1 %418, label %410, label %419, !llvm.loop !495

419:                                              ; preds = %410, %401
  %420 = phi i32 [ %405, %401 ], [ %415, %410 ]
  %421 = and i64 %370, 4294967295
  %422 = getelementptr inbounds i32, ptr %6, i64 %421
  %423 = load i32, ptr %422, align 4, !tbaa !5
  %424 = mul nsw i32 %423, %420
  %425 = add nsw i32 %424, %364
  %426 = icmp sgt i64 %362, 2
  %427 = add nsw i64 %363, -1
  %428 = add i32 %361, 1
  br i1 %426, label %360, label %429, !llvm.loop !496

429:                                              ; preds = %419, %356
  %430 = phi i32 [ %359, %356 ], [ %425, %419 ]
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds i16, ptr %24, i64 %431
  %433 = load i16, ptr %432, align 2, !tbaa !78
  %434 = load i8, ptr %26, align 1, !tbaa !11
  %435 = mul i16 %433, %433
  %436 = trunc i16 %435 to i8
  %437 = add i8 %434, %436
  store i8 %437, ptr %26, align 1, !tbaa !11
  %438 = fadd fast double %358, 1.000000e+00
  %439 = add nuw nsw i32 %357, 1
  br i1 %350, label %440, label %487

440:                                              ; preds = %429
  %441 = load i32, ptr %4, align 4, !tbaa !5
  %442 = load i32, ptr %12, align 4, !tbaa !5
  %443 = add nsw i32 %442, -1
  %444 = icmp slt i32 %441, %443
  br i1 %444, label %464, label %445

445:                                              ; preds = %440
  %446 = icmp eq i32 %441, %443
  br i1 %446, label %447, label %480

447:                                              ; preds = %445
  store i32 0, ptr %4, align 4, !tbaa !5
  %448 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %448, ptr %6, align 4, !tbaa !5
  br i1 %355, label %487, label %449

449:                                              ; preds = %447, %474
  %450 = phi i64 [ %478, %474 ], [ 1, %447 ]
  %451 = getelementptr inbounds i32, ptr %4, i64 %450
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %12, i64 %450
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, -1
  %456 = icmp slt i32 %452, %455
  br i1 %456, label %457, label %472

457:                                              ; preds = %449
  br i1 %444, label %464, label %458

458:                                              ; preds = %457
  %459 = getelementptr inbounds i32, ptr %7, i64 %450
  %460 = load i32, ptr %459, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %6, i64 %450
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = add nsw i32 %462, %460
  store i32 %463, ptr %461, align 4, !tbaa !5
  br label %482

464:                                              ; preds = %440, %457
  %465 = phi i32 [ %452, %457 ], [ %441, %440 ]
  %466 = phi ptr [ %451, %457 ], [ %4, %440 ]
  %467 = phi i64 [ %450, %457 ], [ 0, %440 ]
  %468 = add nsw i32 %465, 1
  store i32 %468, ptr %466, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %7, i64 %467
  %470 = load i32, ptr %469, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %6, i64 %467
  br label %482

472:                                              ; preds = %449
  %473 = icmp eq i32 %452, %455
  br i1 %473, label %474, label %480

474:                                              ; preds = %472
  store i32 0, ptr %451, align 4, !tbaa !5
  %475 = getelementptr inbounds i32, ptr %8, i64 %450
  %476 = load i32, ptr %475, align 4, !tbaa !5
  %477 = getelementptr inbounds i32, ptr %6, i64 %450
  store i32 %476, ptr %477, align 4, !tbaa !5
  %478 = add nuw nsw i64 %450, 1
  %479 = icmp eq i64 %478, %353
  br i1 %479, label %487, label %449, !llvm.loop !497

480:                                              ; preds = %445, %472
  %481 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

482:                                              ; preds = %458, %464
  %483 = phi ptr [ %471, %464 ], [ %451, %458 ]
  %484 = phi i32 [ %470, %464 ], [ 1, %458 ]
  %485 = load i32, ptr %483, align 4, !tbaa !5
  %486 = add nsw i32 %485, %484
  store i32 %486, ptr %483, align 4, !tbaa !5
  br label %487

487:                                              ; preds = %474, %482, %447, %429
  %488 = icmp eq i32 %439, %5
  br i1 %488, label %3056, label %356, !llvm.loop !498

489:                                              ; preds = %339, %625
  %490 = phi i32 [ 0, %339 ], [ %574, %625 ]
  %491 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %340, label %492, label %561

492:                                              ; preds = %489, %551
  %493 = phi i32 [ %560, %551 ], [ 0, %489 ]
  %494 = phi i64 [ %502, %551 ], [ %344, %489 ]
  %495 = phi i64 [ %559, %551 ], [ %343, %489 ]
  %496 = phi i32 [ %557, %551 ], [ %491, %489 ]
  %497 = sub i32 %342, %493
  %498 = tail call i32 @llvm.smin.i32(i32 %497, i32 0)
  %499 = sub i32 %497, %498
  %500 = zext i32 %499 to i64
  %501 = add nuw nsw i64 %500, 1
  %502 = add nsw i64 %494, -1
  %503 = icmp ult i32 %499, 31
  br i1 %503, label %539, label %504

504:                                              ; preds = %492
  %505 = and i64 %501, 8589934560
  %506 = sub i64 %495, %505
  br label %507

507:                                              ; preds = %507, %504
  %508 = phi i64 [ 0, %504 ], [ %531, %507 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %527, %507 ]
  %510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %528, %507 ]
  %511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %529, %507 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %530, %507 ]
  %513 = sub i64 %495, %508
  %514 = getelementptr inbounds i32, ptr %11, i64 %513
  %515 = getelementptr inbounds i32, ptr %514, i64 -7
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %514, i64 -15
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %514, i64 -23
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %514, i64 -31
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !5
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = mul <8 x i32> %517, %509
  %528 = mul <8 x i32> %520, %510
  %529 = mul <8 x i32> %523, %511
  %530 = mul <8 x i32> %526, %512
  %531 = add nuw i64 %508, 32
  %532 = icmp eq i64 %531, %505
  br i1 %532, label %533, label %507, !llvm.loop !499

533:                                              ; preds = %507
  %534 = mul <8 x i32> %528, %527
  %535 = mul <8 x i32> %529, %534
  %536 = mul <8 x i32> %530, %535
  %537 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %536)
  %538 = icmp eq i64 %501, %505
  br i1 %538, label %551, label %539

539:                                              ; preds = %492, %533
  %540 = phi i64 [ %495, %492 ], [ %506, %533 ]
  %541 = phi i32 [ 1, %492 ], [ %537, %533 ]
  br label %542

542:                                              ; preds = %539, %542
  %543 = phi i64 [ %548, %542 ], [ %540, %539 ]
  %544 = phi i32 [ %547, %542 ], [ %541, %539 ]
  %545 = getelementptr inbounds i32, ptr %11, i64 %543
  %546 = load i32, ptr %545, align 4, !tbaa !5
  %547 = mul nsw i32 %546, %544
  %548 = add nsw i64 %543, -1
  %549 = trunc i64 %543 to i32
  %550 = icmp sgt i32 %549, 0
  br i1 %550, label %542, label %551, !llvm.loop !500

551:                                              ; preds = %542, %533
  %552 = phi i32 [ %537, %533 ], [ %547, %542 ]
  %553 = and i64 %502, 4294967295
  %554 = getelementptr inbounds i32, ptr %6, i64 %553
  %555 = load i32, ptr %554, align 4, !tbaa !5
  %556 = mul nsw i32 %555, %552
  %557 = add nsw i32 %556, %496
  %558 = icmp sgt i64 %494, 2
  %559 = add nsw i64 %495, -1
  %560 = add i32 %493, 1
  br i1 %558, label %492, label %561, !llvm.loop !501

561:                                              ; preds = %551, %489
  %562 = phi i32 [ %491, %489 ], [ %557, %551 ]
  %563 = icmp slt i32 %562, %5
  br i1 %563, label %566, label %564

564:                                              ; preds = %561
  %565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3061

566:                                              ; preds = %561
  %567 = sext i32 %562 to i64
  %568 = getelementptr inbounds i16, ptr %24, i64 %567
  %569 = load i16, ptr %568, align 2, !tbaa !78
  %570 = load i8, ptr %26, align 1, !tbaa !11
  %571 = mul i16 %569, %569
  %572 = trunc i16 %571 to i8
  %573 = add i8 %570, %572
  store i8 %573, ptr %26, align 1, !tbaa !11
  %574 = add nuw nsw i32 %490, 1
  br i1 %341, label %575, label %625

575:                                              ; preds = %566
  %576 = load i32, ptr %4, align 4, !tbaa !5
  %577 = load i32, ptr %12, align 4, !tbaa !5
  %578 = add nsw i32 %577, -1
  %579 = icmp slt i32 %576, %578
  br i1 %579, label %602, label %580

580:                                              ; preds = %575
  %581 = icmp eq i32 %576, %578
  br i1 %581, label %582, label %618

582:                                              ; preds = %580
  store i32 0, ptr %4, align 4, !tbaa !5
  %583 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %583, ptr %6, align 4, !tbaa !5
  br i1 %346, label %625, label %584

584:                                              ; preds = %582, %612
  %585 = phi i64 [ %616, %612 ], [ 1, %582 ]
  %586 = getelementptr inbounds i32, ptr %4, i64 %585
  %587 = load i32, ptr %586, align 4, !tbaa !5
  %588 = getelementptr inbounds i32, ptr %12, i64 %585
  %589 = load i32, ptr %588, align 4, !tbaa !5
  %590 = add nsw i32 %589, -1
  %591 = icmp slt i32 %587, %590
  br i1 %591, label %592, label %610

592:                                              ; preds = %584
  br i1 %579, label %602, label %593

593:                                              ; preds = %592
  %594 = shl i64 %585, 32
  %595 = add i64 %594, -4294967296
  %596 = ashr exact i64 %595, 32
  %597 = getelementptr inbounds i32, ptr %7, i64 %596
  %598 = load i32, ptr %597, align 4, !tbaa !5
  %599 = getelementptr inbounds i32, ptr %6, i64 %585
  %600 = load i32, ptr %599, align 4, !tbaa !5
  %601 = add nsw i32 %600, %598
  store i32 %601, ptr %599, align 4, !tbaa !5
  br label %620

602:                                              ; preds = %575, %592
  %603 = phi i32 [ %587, %592 ], [ %576, %575 ]
  %604 = phi ptr [ %586, %592 ], [ %4, %575 ]
  %605 = phi i64 [ %585, %592 ], [ 0, %575 ]
  %606 = add nsw i32 %603, 1
  store i32 %606, ptr %604, align 4, !tbaa !5
  %607 = getelementptr inbounds i32, ptr %7, i64 %605
  %608 = load i32, ptr %607, align 4, !tbaa !5
  %609 = getelementptr inbounds i32, ptr %6, i64 %605
  br label %620

610:                                              ; preds = %584
  %611 = icmp eq i32 %587, %590
  br i1 %611, label %612, label %618

612:                                              ; preds = %610
  store i32 0, ptr %586, align 4, !tbaa !5
  %613 = getelementptr inbounds i32, ptr %8, i64 %585
  %614 = load i32, ptr %613, align 4, !tbaa !5
  %615 = getelementptr inbounds i32, ptr %6, i64 %585
  store i32 %614, ptr %615, align 4, !tbaa !5
  %616 = add nuw nsw i64 %585, 1
  %617 = icmp eq i64 %616, %344
  br i1 %617, label %625, label %584, !llvm.loop !502

618:                                              ; preds = %580, %610
  %619 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

620:                                              ; preds = %593, %602
  %621 = phi ptr [ %609, %602 ], [ %586, %593 ]
  %622 = phi i32 [ %608, %602 ], [ 1, %593 ]
  %623 = load i32, ptr %621, align 4, !tbaa !5
  %624 = add nsw i32 %623, %622
  store i32 %624, ptr %621, align 4, !tbaa !5
  br label %625

625:                                              ; preds = %612, %620, %582, %566
  %626 = icmp eq i32 %574, %5
  br i1 %626, label %3056, label %489, !llvm.loop !503

627:                                              ; preds = %32
  %628 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 887, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3056

629:                                              ; preds = %18
  %630 = getelementptr inbounds ptr, ptr %14, i64 %19
  %631 = load ptr, ptr %630, align 8, !tbaa !9
  %632 = getelementptr inbounds ptr, ptr %16, i64 %19
  %633 = load ptr, ptr %632, align 8, !tbaa !9
  store i32 0, ptr %633, align 4, !tbaa !5
  %634 = icmp eq i32 %13, 0
  br i1 %634, label %635, label %639

635:                                              ; preds = %629
  %636 = load i16, ptr %631, align 2, !tbaa !78
  %637 = sext i16 %636 to i32
  %638 = mul nsw i32 %637, %637
  store i32 %638, ptr %633, align 4, !tbaa !5
  br label %3056

639:                                              ; preds = %629
  switch i32 %1, label %1234 [
    i32 1, label %640
    i32 0, label %940
  ]

640:                                              ; preds = %639
  %641 = getelementptr inbounds i32, ptr %3, i64 %19
  %642 = load i32, ptr %641, align 4, !tbaa !5
  %643 = icmp eq i32 %642, 0
  %644 = icmp sgt i32 %5, 0
  br i1 %643, label %654, label %645

645:                                              ; preds = %640
  br i1 %644, label %646, label %3056

646:                                              ; preds = %645
  %647 = icmp sgt i32 %13, 1
  %648 = icmp sgt i32 %13, 0
  %649 = add i32 %13, -2
  %650 = zext i32 %649 to i64
  %651 = zext i32 %13 to i64
  %652 = add nuw i32 %5, 1
  %653 = icmp eq i32 %13, 1
  br label %801

654:                                              ; preds = %640
  br i1 %644, label %655, label %3056

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %663

663:                                              ; preds = %655, %799
  %664 = phi i32 [ 0, %655 ], [ %751, %799 ]
  %665 = phi double [ 0.000000e+00, %655 ], [ %750, %799 ]
  %666 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %656, label %667, label %736

667:                                              ; preds = %663, %726
  %668 = phi i32 [ %735, %726 ], [ 0, %663 ]
  %669 = phi i64 [ %677, %726 ], [ %660, %663 ]
  %670 = phi i64 [ %734, %726 ], [ %659, %663 ]
  %671 = phi i32 [ %732, %726 ], [ %666, %663 ]
  %672 = sub i32 %658, %668
  %673 = tail call i32 @llvm.smin.i32(i32 %672, i32 0)
  %674 = sub i32 %672, %673
  %675 = zext i32 %674 to i64
  %676 = add nuw nsw i64 %675, 1
  %677 = add nsw i64 %669, -1
  %678 = icmp ult i32 %674, 31
  br i1 %678, label %714, label %679

679:                                              ; preds = %667
  %680 = and i64 %676, 8589934560
  %681 = sub i64 %670, %680
  br label %682

682:                                              ; preds = %682, %679
  %683 = phi i64 [ 0, %679 ], [ %706, %682 ]
  %684 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %702, %682 ]
  %685 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %703, %682 ]
  %686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %704, %682 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %705, %682 ]
  %688 = sub i64 %670, %683
  %689 = getelementptr inbounds i32, ptr %9, i64 %688
  %690 = getelementptr inbounds i32, ptr %689, i64 -7
  %691 = load <8 x i32>, ptr %690, align 4, !tbaa !5
  %692 = shufflevector <8 x i32> %691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %693 = getelementptr inbounds i32, ptr %689, i64 -15
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !5
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = getelementptr inbounds i32, ptr %689, i64 -23
  %697 = load <8 x i32>, ptr %696, align 4, !tbaa !5
  %698 = shufflevector <8 x i32> %697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %699 = getelementptr inbounds i32, ptr %689, i64 -31
  %700 = load <8 x i32>, ptr %699, align 4, !tbaa !5
  %701 = shufflevector <8 x i32> %700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %702 = mul <8 x i32> %692, %684
  %703 = mul <8 x i32> %695, %685
  %704 = mul <8 x i32> %698, %686
  %705 = mul <8 x i32> %701, %687
  %706 = add nuw i64 %683, 32
  %707 = icmp eq i64 %706, %680
  br i1 %707, label %708, label %682, !llvm.loop !504

708:                                              ; preds = %682
  %709 = mul <8 x i32> %703, %702
  %710 = mul <8 x i32> %704, %709
  %711 = mul <8 x i32> %705, %710
  %712 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %711)
  %713 = icmp eq i64 %676, %680
  br i1 %713, label %726, label %714

714:                                              ; preds = %667, %708
  %715 = phi i64 [ %670, %667 ], [ %681, %708 ]
  %716 = phi i32 [ 1, %667 ], [ %712, %708 ]
  br label %717

717:                                              ; preds = %714, %717
  %718 = phi i64 [ %723, %717 ], [ %715, %714 ]
  %719 = phi i32 [ %722, %717 ], [ %716, %714 ]
  %720 = getelementptr inbounds i32, ptr %9, i64 %718
  %721 = load i32, ptr %720, align 4, !tbaa !5
  %722 = mul nsw i32 %721, %719
  %723 = add nsw i64 %718, -1
  %724 = trunc i64 %718 to i32
  %725 = icmp sgt i32 %724, 0
  br i1 %725, label %717, label %726, !llvm.loop !505

726:                                              ; preds = %717, %708
  %727 = phi i32 [ %712, %708 ], [ %722, %717 ]
  %728 = and i64 %677, 4294967295
  %729 = getelementptr inbounds i32, ptr %6, i64 %728
  %730 = load i32, ptr %729, align 4, !tbaa !5
  %731 = mul nsw i32 %730, %727
  %732 = add nsw i32 %731, %671
  %733 = icmp sgt i64 %669, 2
  %734 = add nsw i64 %670, -1
  %735 = add i32 %668, 1
  br i1 %733, label %667, label %736, !llvm.loop !506

736:                                              ; preds = %726, %663
  %737 = phi i32 [ %666, %663 ], [ %732, %726 ]
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds double, ptr %2, i64 %738
  %740 = load double, ptr %739, align 8, !tbaa !18
  %741 = getelementptr inbounds i16, ptr %631, i64 %738
  %742 = load i16, ptr %741, align 2, !tbaa !78
  %743 = load i32, ptr %633, align 4, !tbaa !5
  %744 = sitofp i32 %743 to double
  %745 = sitofp i16 %742 to double
  %746 = fmul fast double %740, %745
  %747 = fmul fast double %746, %746
  %748 = fadd fast double %747, %744
  %749 = fptosi double %748 to i32
  store i32 %749, ptr %633, align 4, !tbaa !5
  %750 = fadd fast double %740, %665
  %751 = add nuw nsw i32 %664, 1
  br i1 %657, label %752, label %799

752:                                              ; preds = %736
  %753 = load i32, ptr %4, align 4, !tbaa !5
  %754 = load i32, ptr %12, align 4, !tbaa !5
  %755 = add nsw i32 %754, -1
  %756 = icmp slt i32 %753, %755
  br i1 %756, label %776, label %757

757:                                              ; preds = %752
  %758 = icmp eq i32 %753, %755
  br i1 %758, label %759, label %792

759:                                              ; preds = %757
  store i32 0, ptr %4, align 4, !tbaa !5
  %760 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %760, ptr %6, align 4, !tbaa !5
  br i1 %662, label %799, label %761

761:                                              ; preds = %759, %786
  %762 = phi i64 [ %790, %786 ], [ 1, %759 ]
  %763 = getelementptr inbounds i32, ptr %4, i64 %762
  %764 = load i32, ptr %763, align 4, !tbaa !5
  %765 = getelementptr inbounds i32, ptr %12, i64 %762
  %766 = load i32, ptr %765, align 4, !tbaa !5
  %767 = add nsw i32 %766, -1
  %768 = icmp slt i32 %764, %767
  br i1 %768, label %769, label %784

769:                                              ; preds = %761
  br i1 %756, label %776, label %770

770:                                              ; preds = %769
  %771 = getelementptr inbounds i32, ptr %7, i64 %762
  %772 = load i32, ptr %771, align 4, !tbaa !5
  %773 = getelementptr inbounds i32, ptr %6, i64 %762
  %774 = load i32, ptr %773, align 4, !tbaa !5
  %775 = add nsw i32 %774, %772
  store i32 %775, ptr %773, align 4, !tbaa !5
  br label %794

776:                                              ; preds = %752, %769
  %777 = phi i32 [ %764, %769 ], [ %753, %752 ]
  %778 = phi ptr [ %763, %769 ], [ %4, %752 ]
  %779 = phi i64 [ %762, %769 ], [ 0, %752 ]
  %780 = add nsw i32 %777, 1
  store i32 %780, ptr %778, align 4, !tbaa !5
  %781 = getelementptr inbounds i32, ptr %7, i64 %779
  %782 = load i32, ptr %781, align 4, !tbaa !5
  %783 = getelementptr inbounds i32, ptr %6, i64 %779
  br label %794

784:                                              ; preds = %761
  %785 = icmp eq i32 %764, %767
  br i1 %785, label %786, label %792

786:                                              ; preds = %784
  store i32 0, ptr %763, align 4, !tbaa !5
  %787 = getelementptr inbounds i32, ptr %8, i64 %762
  %788 = load i32, ptr %787, align 4, !tbaa !5
  %789 = getelementptr inbounds i32, ptr %6, i64 %762
  store i32 %788, ptr %789, align 4, !tbaa !5
  %790 = add nuw nsw i64 %762, 1
  %791 = icmp eq i64 %790, %660
  br i1 %791, label %799, label %761, !llvm.loop !507

792:                                              ; preds = %757, %784
  %793 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 890, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

794:                                              ; preds = %770, %776
  %795 = phi ptr [ %783, %776 ], [ %763, %770 ]
  %796 = phi i32 [ %782, %776 ], [ 1, %770 ]
  %797 = load i32, ptr %795, align 4, !tbaa !5
  %798 = add nsw i32 %797, %796
  store i32 %798, ptr %795, align 4, !tbaa !5
  br label %799

799:                                              ; preds = %786, %794, %759, %736
  %800 = icmp eq i32 %751, %5
  br i1 %800, label %3056, label %663, !llvm.loop !508

801:                                              ; preds = %646, %938
  %802 = phi i32 [ 0, %646 ], [ %887, %938 ]
  %803 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %647, label %804, label %873

804:                                              ; preds = %801, %863
  %805 = phi i32 [ %872, %863 ], [ 0, %801 ]
  %806 = phi i64 [ %814, %863 ], [ %651, %801 ]
  %807 = phi i64 [ %871, %863 ], [ %650, %801 ]
  %808 = phi i32 [ %869, %863 ], [ %803, %801 ]
  %809 = sub i32 %649, %805
  %810 = tail call i32 @llvm.smin.i32(i32 %809, i32 0)
  %811 = sub i32 %809, %810
  %812 = zext i32 %811 to i64
  %813 = add nuw nsw i64 %812, 1
  %814 = add nsw i64 %806, -1
  %815 = icmp ult i32 %811, 31
  br i1 %815, label %851, label %816

816:                                              ; preds = %804
  %817 = and i64 %813, 8589934560
  %818 = sub i64 %807, %817
  br label %819

819:                                              ; preds = %819, %816
  %820 = phi i64 [ 0, %816 ], [ %843, %819 ]
  %821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %816 ], [ %839, %819 ]
  %822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %816 ], [ %840, %819 ]
  %823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %816 ], [ %841, %819 ]
  %824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %816 ], [ %842, %819 ]
  %825 = sub i64 %807, %820
  %826 = getelementptr inbounds i32, ptr %11, i64 %825
  %827 = getelementptr inbounds i32, ptr %826, i64 -7
  %828 = load <8 x i32>, ptr %827, align 4, !tbaa !5
  %829 = shufflevector <8 x i32> %828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %830 = getelementptr inbounds i32, ptr %826, i64 -15
  %831 = load <8 x i32>, ptr %830, align 4, !tbaa !5
  %832 = shufflevector <8 x i32> %831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %833 = getelementptr inbounds i32, ptr %826, i64 -23
  %834 = load <8 x i32>, ptr %833, align 4, !tbaa !5
  %835 = shufflevector <8 x i32> %834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %836 = getelementptr inbounds i32, ptr %826, i64 -31
  %837 = load <8 x i32>, ptr %836, align 4, !tbaa !5
  %838 = shufflevector <8 x i32> %837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %839 = mul <8 x i32> %829, %821
  %840 = mul <8 x i32> %832, %822
  %841 = mul <8 x i32> %835, %823
  %842 = mul <8 x i32> %838, %824
  %843 = add nuw i64 %820, 32
  %844 = icmp eq i64 %843, %817
  br i1 %844, label %845, label %819, !llvm.loop !509

845:                                              ; preds = %819
  %846 = mul <8 x i32> %840, %839
  %847 = mul <8 x i32> %841, %846
  %848 = mul <8 x i32> %842, %847
  %849 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %848)
  %850 = icmp eq i64 %813, %817
  br i1 %850, label %863, label %851

851:                                              ; preds = %804, %845
  %852 = phi i64 [ %807, %804 ], [ %818, %845 ]
  %853 = phi i32 [ 1, %804 ], [ %849, %845 ]
  br label %854

854:                                              ; preds = %851, %854
  %855 = phi i64 [ %860, %854 ], [ %852, %851 ]
  %856 = phi i32 [ %859, %854 ], [ %853, %851 ]
  %857 = getelementptr inbounds i32, ptr %11, i64 %855
  %858 = load i32, ptr %857, align 4, !tbaa !5
  %859 = mul nsw i32 %858, %856
  %860 = add nsw i64 %855, -1
  %861 = trunc i64 %855 to i32
  %862 = icmp sgt i32 %861, 0
  br i1 %862, label %854, label %863, !llvm.loop !510

863:                                              ; preds = %854, %845
  %864 = phi i32 [ %849, %845 ], [ %859, %854 ]
  %865 = and i64 %814, 4294967295
  %866 = getelementptr inbounds i32, ptr %6, i64 %865
  %867 = load i32, ptr %866, align 4, !tbaa !5
  %868 = mul nsw i32 %867, %864
  %869 = add nsw i32 %868, %808
  %870 = icmp sgt i64 %806, 2
  %871 = add nsw i64 %807, -1
  %872 = add i32 %805, 1
  br i1 %870, label %804, label %873, !llvm.loop !511

873:                                              ; preds = %863, %801
  %874 = phi i32 [ %803, %801 ], [ %869, %863 ]
  %875 = icmp slt i32 %874, %5
  br i1 %875, label %878, label %876

876:                                              ; preds = %873
  %877 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 890, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3061

878:                                              ; preds = %873
  %879 = sext i32 %874 to i64
  %880 = getelementptr inbounds i16, ptr %631, i64 %879
  %881 = load i16, ptr %880, align 2, !tbaa !78
  %882 = load i32, ptr %633, align 4, !tbaa !5
  %883 = sext i16 %881 to i64
  %884 = mul nsw i64 %883, %883
  %885 = trunc i64 %884 to i32
  %886 = add i32 %882, %885
  store i32 %886, ptr %633, align 4, !tbaa !5
  %887 = add nuw nsw i32 %802, 1
  br i1 %648, label %888, label %938

888:                                              ; preds = %878
  %889 = load i32, ptr %4, align 4, !tbaa !5
  %890 = load i32, ptr %12, align 4, !tbaa !5
  %891 = add nsw i32 %890, -1
  %892 = icmp slt i32 %889, %891
  br i1 %892, label %915, label %893

893:                                              ; preds = %888
  %894 = icmp eq i32 %889, %891
  br i1 %894, label %895, label %931

895:                                              ; preds = %893
  store i32 0, ptr %4, align 4, !tbaa !5
  %896 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %896, ptr %6, align 4, !tbaa !5
  br i1 %653, label %938, label %897

897:                                              ; preds = %895, %925
  %898 = phi i64 [ %929, %925 ], [ 1, %895 ]
  %899 = getelementptr inbounds i32, ptr %4, i64 %898
  %900 = load i32, ptr %899, align 4, !tbaa !5
  %901 = getelementptr inbounds i32, ptr %12, i64 %898
  %902 = load i32, ptr %901, align 4, !tbaa !5
  %903 = add nsw i32 %902, -1
  %904 = icmp slt i32 %900, %903
  br i1 %904, label %905, label %923

905:                                              ; preds = %897
  br i1 %892, label %915, label %906

906:                                              ; preds = %905
  %907 = shl i64 %898, 32
  %908 = add i64 %907, -4294967296
  %909 = ashr exact i64 %908, 32
  %910 = getelementptr inbounds i32, ptr %7, i64 %909
  %911 = load i32, ptr %910, align 4, !tbaa !5
  %912 = getelementptr inbounds i32, ptr %6, i64 %898
  %913 = load i32, ptr %912, align 4, !tbaa !5
  %914 = add nsw i32 %913, %911
  store i32 %914, ptr %912, align 4, !tbaa !5
  br label %933

915:                                              ; preds = %888, %905
  %916 = phi i32 [ %900, %905 ], [ %889, %888 ]
  %917 = phi ptr [ %899, %905 ], [ %4, %888 ]
  %918 = phi i64 [ %898, %905 ], [ 0, %888 ]
  %919 = add nsw i32 %916, 1
  store i32 %919, ptr %917, align 4, !tbaa !5
  %920 = getelementptr inbounds i32, ptr %7, i64 %918
  %921 = load i32, ptr %920, align 4, !tbaa !5
  %922 = getelementptr inbounds i32, ptr %6, i64 %918
  br label %933

923:                                              ; preds = %897
  %924 = icmp eq i32 %900, %903
  br i1 %924, label %925, label %931

925:                                              ; preds = %923
  store i32 0, ptr %899, align 4, !tbaa !5
  %926 = getelementptr inbounds i32, ptr %8, i64 %898
  %927 = load i32, ptr %926, align 4, !tbaa !5
  %928 = getelementptr inbounds i32, ptr %6, i64 %898
  store i32 %927, ptr %928, align 4, !tbaa !5
  %929 = add nuw nsw i64 %898, 1
  %930 = icmp eq i64 %929, %651
  br i1 %930, label %938, label %897, !llvm.loop !512

931:                                              ; preds = %893, %923
  %932 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 890, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

933:                                              ; preds = %906, %915
  %934 = phi ptr [ %922, %915 ], [ %899, %906 ]
  %935 = phi i32 [ %921, %915 ], [ 1, %906 ]
  %936 = load i32, ptr %934, align 4, !tbaa !5
  %937 = add nsw i32 %936, %935
  store i32 %937, ptr %934, align 4, !tbaa !5
  br label %938

938:                                              ; preds = %925, %933, %895, %878
  %939 = icmp eq i32 %887, %5
  br i1 %939, label %3056, label %801, !llvm.loop !513

940:                                              ; preds = %639
  %941 = getelementptr inbounds i32, ptr %3, i64 %19
  %942 = load i32, ptr %941, align 4, !tbaa !5
  %943 = icmp eq i32 %942, 0
  %944 = icmp sgt i32 %5, 0
  br i1 %943, label %954, label %945

945:                                              ; preds = %940
  br i1 %944, label %946, label %3056

946:                                              ; preds = %945
  %947 = icmp sgt i32 %13, 1
  %948 = icmp sgt i32 %13, 0
  %949 = add i32 %13, -2
  %950 = zext i32 %949 to i64
  %951 = zext i32 %13 to i64
  %952 = add nuw i32 %5, 1
  %953 = icmp eq i32 %13, 1
  br label %1096

954:                                              ; preds = %940
  br i1 %944, label %955, label %3056

955:                                              ; preds = %954
  %956 = icmp sgt i32 %13, 1
  %957 = icmp sgt i32 %13, 0
  %958 = add i32 %13, -2
  %959 = zext i32 %958 to i64
  %960 = zext i32 %13 to i64
  %961 = add nuw i32 %5, 1
  %962 = icmp eq i32 %13, 1
  br label %963

963:                                              ; preds = %955, %1094
  %964 = phi i32 [ 0, %955 ], [ %1046, %1094 ]
  %965 = phi double [ 0.000000e+00, %955 ], [ %1045, %1094 ]
  %966 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %956, label %967, label %1036

967:                                              ; preds = %963, %1026
  %968 = phi i32 [ %1035, %1026 ], [ 0, %963 ]
  %969 = phi i64 [ %977, %1026 ], [ %960, %963 ]
  %970 = phi i64 [ %1034, %1026 ], [ %959, %963 ]
  %971 = phi i32 [ %1032, %1026 ], [ %966, %963 ]
  %972 = sub i32 %958, %968
  %973 = tail call i32 @llvm.smin.i32(i32 %972, i32 0)
  %974 = sub i32 %972, %973
  %975 = zext i32 %974 to i64
  %976 = add nuw nsw i64 %975, 1
  %977 = add nsw i64 %969, -1
  %978 = icmp ult i32 %974, 31
  br i1 %978, label %1014, label %979

979:                                              ; preds = %967
  %980 = and i64 %976, 8589934560
  %981 = sub i64 %970, %980
  br label %982

982:                                              ; preds = %982, %979
  %983 = phi i64 [ 0, %979 ], [ %1006, %982 ]
  %984 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %979 ], [ %1002, %982 ]
  %985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %979 ], [ %1003, %982 ]
  %986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %979 ], [ %1004, %982 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %979 ], [ %1005, %982 ]
  %988 = sub i64 %970, %983
  %989 = getelementptr inbounds i32, ptr %9, i64 %988
  %990 = getelementptr inbounds i32, ptr %989, i64 -7
  %991 = load <8 x i32>, ptr %990, align 4, !tbaa !5
  %992 = shufflevector <8 x i32> %991, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %993 = getelementptr inbounds i32, ptr %989, i64 -15
  %994 = load <8 x i32>, ptr %993, align 4, !tbaa !5
  %995 = shufflevector <8 x i32> %994, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %996 = getelementptr inbounds i32, ptr %989, i64 -23
  %997 = load <8 x i32>, ptr %996, align 4, !tbaa !5
  %998 = shufflevector <8 x i32> %997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %999 = getelementptr inbounds i32, ptr %989, i64 -31
  %1000 = load <8 x i32>, ptr %999, align 4, !tbaa !5
  %1001 = shufflevector <8 x i32> %1000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1002 = mul <8 x i32> %992, %984
  %1003 = mul <8 x i32> %995, %985
  %1004 = mul <8 x i32> %998, %986
  %1005 = mul <8 x i32> %1001, %987
  %1006 = add nuw i64 %983, 32
  %1007 = icmp eq i64 %1006, %980
  br i1 %1007, label %1008, label %982, !llvm.loop !514

1008:                                             ; preds = %982
  %1009 = mul <8 x i32> %1003, %1002
  %1010 = mul <8 x i32> %1004, %1009
  %1011 = mul <8 x i32> %1005, %1010
  %1012 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1011)
  %1013 = icmp eq i64 %976, %980
  br i1 %1013, label %1026, label %1014

1014:                                             ; preds = %967, %1008
  %1015 = phi i64 [ %970, %967 ], [ %981, %1008 ]
  %1016 = phi i32 [ 1, %967 ], [ %1012, %1008 ]
  br label %1017

1017:                                             ; preds = %1014, %1017
  %1018 = phi i64 [ %1023, %1017 ], [ %1015, %1014 ]
  %1019 = phi i32 [ %1022, %1017 ], [ %1016, %1014 ]
  %1020 = getelementptr inbounds i32, ptr %9, i64 %1018
  %1021 = load i32, ptr %1020, align 4, !tbaa !5
  %1022 = mul nsw i32 %1021, %1019
  %1023 = add nsw i64 %1018, -1
  %1024 = trunc i64 %1018 to i32
  %1025 = icmp sgt i32 %1024, 0
  br i1 %1025, label %1017, label %1026, !llvm.loop !515

1026:                                             ; preds = %1017, %1008
  %1027 = phi i32 [ %1012, %1008 ], [ %1022, %1017 ]
  %1028 = and i64 %977, 4294967295
  %1029 = getelementptr inbounds i32, ptr %6, i64 %1028
  %1030 = load i32, ptr %1029, align 4, !tbaa !5
  %1031 = mul nsw i32 %1030, %1027
  %1032 = add nsw i32 %1031, %971
  %1033 = icmp sgt i64 %969, 2
  %1034 = add nsw i64 %970, -1
  %1035 = add i32 %968, 1
  br i1 %1033, label %967, label %1036, !llvm.loop !516

1036:                                             ; preds = %1026, %963
  %1037 = phi i32 [ %966, %963 ], [ %1032, %1026 ]
  %1038 = sext i32 %1037 to i64
  %1039 = getelementptr inbounds i16, ptr %631, i64 %1038
  %1040 = load i16, ptr %1039, align 2, !tbaa !78
  %1041 = sext i16 %1040 to i32
  %1042 = load i32, ptr %633, align 4, !tbaa !5
  %1043 = mul nsw i32 %1041, %1041
  %1044 = add nsw i32 %1043, %1042
  store i32 %1044, ptr %633, align 4, !tbaa !5
  %1045 = fadd fast double %965, 1.000000e+00
  %1046 = add nuw nsw i32 %964, 1
  br i1 %957, label %1047, label %1094

1047:                                             ; preds = %1036
  %1048 = load i32, ptr %4, align 4, !tbaa !5
  %1049 = load i32, ptr %12, align 4, !tbaa !5
  %1050 = add nsw i32 %1049, -1
  %1051 = icmp slt i32 %1048, %1050
  br i1 %1051, label %1071, label %1052

1052:                                             ; preds = %1047
  %1053 = icmp eq i32 %1048, %1050
  br i1 %1053, label %1054, label %1087

1054:                                             ; preds = %1052
  store i32 0, ptr %4, align 4, !tbaa !5
  %1055 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1055, ptr %6, align 4, !tbaa !5
  br i1 %962, label %1094, label %1056

1056:                                             ; preds = %1054, %1081
  %1057 = phi i64 [ %1085, %1081 ], [ 1, %1054 ]
  %1058 = getelementptr inbounds i32, ptr %4, i64 %1057
  %1059 = load i32, ptr %1058, align 4, !tbaa !5
  %1060 = getelementptr inbounds i32, ptr %12, i64 %1057
  %1061 = load i32, ptr %1060, align 4, !tbaa !5
  %1062 = add nsw i32 %1061, -1
  %1063 = icmp slt i32 %1059, %1062
  br i1 %1063, label %1064, label %1079

1064:                                             ; preds = %1056
  br i1 %1051, label %1071, label %1065

1065:                                             ; preds = %1064
  %1066 = getelementptr inbounds i32, ptr %7, i64 %1057
  %1067 = load i32, ptr %1066, align 4, !tbaa !5
  %1068 = getelementptr inbounds i32, ptr %6, i64 %1057
  %1069 = load i32, ptr %1068, align 4, !tbaa !5
  %1070 = add nsw i32 %1069, %1067
  store i32 %1070, ptr %1068, align 4, !tbaa !5
  br label %1089

1071:                                             ; preds = %1047, %1064
  %1072 = phi i32 [ %1059, %1064 ], [ %1048, %1047 ]
  %1073 = phi ptr [ %1058, %1064 ], [ %4, %1047 ]
  %1074 = phi i64 [ %1057, %1064 ], [ 0, %1047 ]
  %1075 = add nsw i32 %1072, 1
  store i32 %1075, ptr %1073, align 4, !tbaa !5
  %1076 = getelementptr inbounds i32, ptr %7, i64 %1074
  %1077 = load i32, ptr %1076, align 4, !tbaa !5
  %1078 = getelementptr inbounds i32, ptr %6, i64 %1074
  br label %1089

1079:                                             ; preds = %1056
  %1080 = icmp eq i32 %1059, %1062
  br i1 %1080, label %1081, label %1087

1081:                                             ; preds = %1079
  store i32 0, ptr %1058, align 4, !tbaa !5
  %1082 = getelementptr inbounds i32, ptr %8, i64 %1057
  %1083 = load i32, ptr %1082, align 4, !tbaa !5
  %1084 = getelementptr inbounds i32, ptr %6, i64 %1057
  store i32 %1083, ptr %1084, align 4, !tbaa !5
  %1085 = add nuw nsw i64 %1057, 1
  %1086 = icmp eq i64 %1085, %960
  br i1 %1086, label %1094, label %1056, !llvm.loop !517

1087:                                             ; preds = %1052, %1079
  %1088 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 890, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

1089:                                             ; preds = %1065, %1071
  %1090 = phi ptr [ %1078, %1071 ], [ %1058, %1065 ]
  %1091 = phi i32 [ %1077, %1071 ], [ 1, %1065 ]
  %1092 = load i32, ptr %1090, align 4, !tbaa !5
  %1093 = add nsw i32 %1092, %1091
  store i32 %1093, ptr %1090, align 4, !tbaa !5
  br label %1094

1094:                                             ; preds = %1081, %1089, %1054, %1036
  %1095 = icmp eq i32 %1046, %5
  br i1 %1095, label %3056, label %963, !llvm.loop !518

1096:                                             ; preds = %946, %1232
  %1097 = phi i32 [ 0, %946 ], [ %1181, %1232 ]
  %1098 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %947, label %1099, label %1168

1099:                                             ; preds = %1096, %1158
  %1100 = phi i32 [ %1167, %1158 ], [ 0, %1096 ]
  %1101 = phi i64 [ %1109, %1158 ], [ %951, %1096 ]
  %1102 = phi i64 [ %1166, %1158 ], [ %950, %1096 ]
  %1103 = phi i32 [ %1164, %1158 ], [ %1098, %1096 ]
  %1104 = sub i32 %949, %1100
  %1105 = tail call i32 @llvm.smin.i32(i32 %1104, i32 0)
  %1106 = sub i32 %1104, %1105
  %1107 = zext i32 %1106 to i64
  %1108 = add nuw nsw i64 %1107, 1
  %1109 = add nsw i64 %1101, -1
  %1110 = icmp ult i32 %1106, 31
  br i1 %1110, label %1146, label %1111

1111:                                             ; preds = %1099
  %1112 = and i64 %1108, 8589934560
  %1113 = sub i64 %1102, %1112
  br label %1114

1114:                                             ; preds = %1114, %1111
  %1115 = phi i64 [ 0, %1111 ], [ %1138, %1114 ]
  %1116 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1111 ], [ %1134, %1114 ]
  %1117 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1111 ], [ %1135, %1114 ]
  %1118 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1111 ], [ %1136, %1114 ]
  %1119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1111 ], [ %1137, %1114 ]
  %1120 = sub i64 %1102, %1115
  %1121 = getelementptr inbounds i32, ptr %11, i64 %1120
  %1122 = getelementptr inbounds i32, ptr %1121, i64 -7
  %1123 = load <8 x i32>, ptr %1122, align 4, !tbaa !5
  %1124 = shufflevector <8 x i32> %1123, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1125 = getelementptr inbounds i32, ptr %1121, i64 -15
  %1126 = load <8 x i32>, ptr %1125, align 4, !tbaa !5
  %1127 = shufflevector <8 x i32> %1126, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1128 = getelementptr inbounds i32, ptr %1121, i64 -23
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !5
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = getelementptr inbounds i32, ptr %1121, i64 -31
  %1132 = load <8 x i32>, ptr %1131, align 4, !tbaa !5
  %1133 = shufflevector <8 x i32> %1132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1134 = mul <8 x i32> %1124, %1116
  %1135 = mul <8 x i32> %1127, %1117
  %1136 = mul <8 x i32> %1130, %1118
  %1137 = mul <8 x i32> %1133, %1119
  %1138 = add nuw i64 %1115, 32
  %1139 = icmp eq i64 %1138, %1112
  br i1 %1139, label %1140, label %1114, !llvm.loop !519

1140:                                             ; preds = %1114
  %1141 = mul <8 x i32> %1135, %1134
  %1142 = mul <8 x i32> %1136, %1141
  %1143 = mul <8 x i32> %1137, %1142
  %1144 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1143)
  %1145 = icmp eq i64 %1108, %1112
  br i1 %1145, label %1158, label %1146

1146:                                             ; preds = %1099, %1140
  %1147 = phi i64 [ %1102, %1099 ], [ %1113, %1140 ]
  %1148 = phi i32 [ 1, %1099 ], [ %1144, %1140 ]
  br label %1149

1149:                                             ; preds = %1146, %1149
  %1150 = phi i64 [ %1155, %1149 ], [ %1147, %1146 ]
  %1151 = phi i32 [ %1154, %1149 ], [ %1148, %1146 ]
  %1152 = getelementptr inbounds i32, ptr %11, i64 %1150
  %1153 = load i32, ptr %1152, align 4, !tbaa !5
  %1154 = mul nsw i32 %1153, %1151
  %1155 = add nsw i64 %1150, -1
  %1156 = trunc i64 %1150 to i32
  %1157 = icmp sgt i32 %1156, 0
  br i1 %1157, label %1149, label %1158, !llvm.loop !520

1158:                                             ; preds = %1149, %1140
  %1159 = phi i32 [ %1144, %1140 ], [ %1154, %1149 ]
  %1160 = and i64 %1109, 4294967295
  %1161 = getelementptr inbounds i32, ptr %6, i64 %1160
  %1162 = load i32, ptr %1161, align 4, !tbaa !5
  %1163 = mul nsw i32 %1162, %1159
  %1164 = add nsw i32 %1163, %1103
  %1165 = icmp sgt i64 %1101, 2
  %1166 = add nsw i64 %1102, -1
  %1167 = add i32 %1100, 1
  br i1 %1165, label %1099, label %1168, !llvm.loop !521

1168:                                             ; preds = %1158, %1096
  %1169 = phi i32 [ %1098, %1096 ], [ %1164, %1158 ]
  %1170 = icmp slt i32 %1169, %5
  br i1 %1170, label %1173, label %1171

1171:                                             ; preds = %1168
  %1172 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 890, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3061

1173:                                             ; preds = %1168
  %1174 = sext i32 %1169 to i64
  %1175 = getelementptr inbounds i16, ptr %631, i64 %1174
  %1176 = load i16, ptr %1175, align 2, !tbaa !78
  %1177 = sext i16 %1176 to i32
  %1178 = load i32, ptr %633, align 4, !tbaa !5
  %1179 = mul nsw i32 %1177, %1177
  %1180 = add nsw i32 %1179, %1178
  store i32 %1180, ptr %633, align 4, !tbaa !5
  %1181 = add nuw nsw i32 %1097, 1
  br i1 %948, label %1182, label %1232

1182:                                             ; preds = %1173
  %1183 = load i32, ptr %4, align 4, !tbaa !5
  %1184 = load i32, ptr %12, align 4, !tbaa !5
  %1185 = add nsw i32 %1184, -1
  %1186 = icmp slt i32 %1183, %1185
  br i1 %1186, label %1209, label %1187

1187:                                             ; preds = %1182
  %1188 = icmp eq i32 %1183, %1185
  br i1 %1188, label %1189, label %1225

1189:                                             ; preds = %1187
  store i32 0, ptr %4, align 4, !tbaa !5
  %1190 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1190, ptr %6, align 4, !tbaa !5
  br i1 %953, label %1232, label %1191

1191:                                             ; preds = %1189, %1219
  %1192 = phi i64 [ %1223, %1219 ], [ 1, %1189 ]
  %1193 = getelementptr inbounds i32, ptr %4, i64 %1192
  %1194 = load i32, ptr %1193, align 4, !tbaa !5
  %1195 = getelementptr inbounds i32, ptr %12, i64 %1192
  %1196 = load i32, ptr %1195, align 4, !tbaa !5
  %1197 = add nsw i32 %1196, -1
  %1198 = icmp slt i32 %1194, %1197
  br i1 %1198, label %1199, label %1217

1199:                                             ; preds = %1191
  br i1 %1186, label %1209, label %1200

1200:                                             ; preds = %1199
  %1201 = shl i64 %1192, 32
  %1202 = add i64 %1201, -4294967296
  %1203 = ashr exact i64 %1202, 32
  %1204 = getelementptr inbounds i32, ptr %7, i64 %1203
  %1205 = load i32, ptr %1204, align 4, !tbaa !5
  %1206 = getelementptr inbounds i32, ptr %6, i64 %1192
  %1207 = load i32, ptr %1206, align 4, !tbaa !5
  %1208 = add nsw i32 %1207, %1205
  store i32 %1208, ptr %1206, align 4, !tbaa !5
  br label %1227

1209:                                             ; preds = %1182, %1199
  %1210 = phi i32 [ %1194, %1199 ], [ %1183, %1182 ]
  %1211 = phi ptr [ %1193, %1199 ], [ %4, %1182 ]
  %1212 = phi i64 [ %1192, %1199 ], [ 0, %1182 ]
  %1213 = add nsw i32 %1210, 1
  store i32 %1213, ptr %1211, align 4, !tbaa !5
  %1214 = getelementptr inbounds i32, ptr %7, i64 %1212
  %1215 = load i32, ptr %1214, align 4, !tbaa !5
  %1216 = getelementptr inbounds i32, ptr %6, i64 %1212
  br label %1227

1217:                                             ; preds = %1191
  %1218 = icmp eq i32 %1194, %1197
  br i1 %1218, label %1219, label %1225

1219:                                             ; preds = %1217
  store i32 0, ptr %1193, align 4, !tbaa !5
  %1220 = getelementptr inbounds i32, ptr %8, i64 %1192
  %1221 = load i32, ptr %1220, align 4, !tbaa !5
  %1222 = getelementptr inbounds i32, ptr %6, i64 %1192
  store i32 %1221, ptr %1222, align 4, !tbaa !5
  %1223 = add nuw nsw i64 %1192, 1
  %1224 = icmp eq i64 %1223, %951
  br i1 %1224, label %1232, label %1191, !llvm.loop !522

1225:                                             ; preds = %1187, %1217
  %1226 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 890, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

1227:                                             ; preds = %1200, %1209
  %1228 = phi ptr [ %1216, %1209 ], [ %1193, %1200 ]
  %1229 = phi i32 [ %1215, %1209 ], [ 1, %1200 ]
  %1230 = load i32, ptr %1228, align 4, !tbaa !5
  %1231 = add nsw i32 %1230, %1229
  store i32 %1231, ptr %1228, align 4, !tbaa !5
  br label %1232

1232:                                             ; preds = %1219, %1227, %1189, %1173
  %1233 = icmp eq i32 %1181, %5
  br i1 %1233, label %3056, label %1096, !llvm.loop !523

1234:                                             ; preds = %639
  %1235 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 890, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3056

1236:                                             ; preds = %18
  %1237 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1238 = load ptr, ptr %1237, align 8, !tbaa !9
  %1239 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1240 = load ptr, ptr %1239, align 8, !tbaa !9
  store double 0.000000e+00, ptr %1240, align 8, !tbaa !18
  %1241 = icmp eq i32 %13, 0
  br i1 %1241, label %1242, label %1246

1242:                                             ; preds = %1236
  %1243 = load i16, ptr %1238, align 2, !tbaa !78
  %1244 = sitofp i16 %1243 to double
  %1245 = fmul fast double %1244, %1244
  store double %1245, ptr %1240, align 8, !tbaa !18
  br label %3056

1246:                                             ; preds = %1236
  switch i32 %1, label %1838 [
    i32 1, label %1247
    i32 0, label %1544
  ]

1247:                                             ; preds = %1246
  %1248 = getelementptr inbounds i32, ptr %3, i64 %19
  %1249 = load i32, ptr %1248, align 4, !tbaa !5
  %1250 = icmp eq i32 %1249, 0
  %1251 = icmp sgt i32 %5, 0
  br i1 %1250, label %1261, label %1252

1252:                                             ; preds = %1247
  br i1 %1251, label %1253, label %3056

1253:                                             ; preds = %1252
  %1254 = icmp sgt i32 %13, 1
  %1255 = icmp sgt i32 %13, 0
  %1256 = add i32 %13, -2
  %1257 = zext i32 %1256 to i64
  %1258 = zext i32 %13 to i64
  %1259 = add nuw i32 %5, 1
  %1260 = icmp eq i32 %13, 1
  br label %1406

1261:                                             ; preds = %1247
  br i1 %1251, label %1262, label %3056

1262:                                             ; preds = %1261
  %1263 = icmp sgt i32 %13, 1
  %1264 = icmp sgt i32 %13, 0
  %1265 = add i32 %13, -2
  %1266 = zext i32 %1265 to i64
  %1267 = zext i32 %13 to i64
  %1268 = add nuw i32 %5, 1
  %1269 = icmp eq i32 %13, 1
  br label %1270

1270:                                             ; preds = %1262, %1404
  %1271 = phi double [ 0.000000e+00, %1262 ], [ %1354, %1404 ]
  %1272 = phi i32 [ 0, %1262 ], [ %1356, %1404 ]
  %1273 = phi double [ 0.000000e+00, %1262 ], [ %1355, %1404 ]
  %1274 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1263, label %1275, label %1344

1275:                                             ; preds = %1270, %1334
  %1276 = phi i32 [ %1343, %1334 ], [ 0, %1270 ]
  %1277 = phi i64 [ %1285, %1334 ], [ %1267, %1270 ]
  %1278 = phi i64 [ %1342, %1334 ], [ %1266, %1270 ]
  %1279 = phi i32 [ %1340, %1334 ], [ %1274, %1270 ]
  %1280 = sub i32 %1265, %1276
  %1281 = tail call i32 @llvm.smin.i32(i32 %1280, i32 0)
  %1282 = sub i32 %1280, %1281
  %1283 = zext i32 %1282 to i64
  %1284 = add nuw nsw i64 %1283, 1
  %1285 = add nsw i64 %1277, -1
  %1286 = icmp ult i32 %1282, 31
  br i1 %1286, label %1322, label %1287

1287:                                             ; preds = %1275
  %1288 = and i64 %1284, 8589934560
  %1289 = sub i64 %1278, %1288
  br label %1290

1290:                                             ; preds = %1290, %1287
  %1291 = phi i64 [ 0, %1287 ], [ %1314, %1290 ]
  %1292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1310, %1290 ]
  %1293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1311, %1290 ]
  %1294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1312, %1290 ]
  %1295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1313, %1290 ]
  %1296 = sub i64 %1278, %1291
  %1297 = getelementptr inbounds i32, ptr %9, i64 %1296
  %1298 = getelementptr inbounds i32, ptr %1297, i64 -7
  %1299 = load <8 x i32>, ptr %1298, align 4, !tbaa !5
  %1300 = shufflevector <8 x i32> %1299, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1301 = getelementptr inbounds i32, ptr %1297, i64 -15
  %1302 = load <8 x i32>, ptr %1301, align 4, !tbaa !5
  %1303 = shufflevector <8 x i32> %1302, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1304 = getelementptr inbounds i32, ptr %1297, i64 -23
  %1305 = load <8 x i32>, ptr %1304, align 4, !tbaa !5
  %1306 = shufflevector <8 x i32> %1305, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1307 = getelementptr inbounds i32, ptr %1297, i64 -31
  %1308 = load <8 x i32>, ptr %1307, align 4, !tbaa !5
  %1309 = shufflevector <8 x i32> %1308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1310 = mul <8 x i32> %1300, %1292
  %1311 = mul <8 x i32> %1303, %1293
  %1312 = mul <8 x i32> %1306, %1294
  %1313 = mul <8 x i32> %1309, %1295
  %1314 = add nuw i64 %1291, 32
  %1315 = icmp eq i64 %1314, %1288
  br i1 %1315, label %1316, label %1290, !llvm.loop !524

1316:                                             ; preds = %1290
  %1317 = mul <8 x i32> %1311, %1310
  %1318 = mul <8 x i32> %1312, %1317
  %1319 = mul <8 x i32> %1313, %1318
  %1320 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1319)
  %1321 = icmp eq i64 %1284, %1288
  br i1 %1321, label %1334, label %1322

1322:                                             ; preds = %1275, %1316
  %1323 = phi i64 [ %1278, %1275 ], [ %1289, %1316 ]
  %1324 = phi i32 [ 1, %1275 ], [ %1320, %1316 ]
  br label %1325

1325:                                             ; preds = %1322, %1325
  %1326 = phi i64 [ %1331, %1325 ], [ %1323, %1322 ]
  %1327 = phi i32 [ %1330, %1325 ], [ %1324, %1322 ]
  %1328 = getelementptr inbounds i32, ptr %9, i64 %1326
  %1329 = load i32, ptr %1328, align 4, !tbaa !5
  %1330 = mul nsw i32 %1329, %1327
  %1331 = add nsw i64 %1326, -1
  %1332 = trunc i64 %1326 to i32
  %1333 = icmp sgt i32 %1332, 0
  br i1 %1333, label %1325, label %1334, !llvm.loop !525

1334:                                             ; preds = %1325, %1316
  %1335 = phi i32 [ %1320, %1316 ], [ %1330, %1325 ]
  %1336 = and i64 %1285, 4294967295
  %1337 = getelementptr inbounds i32, ptr %6, i64 %1336
  %1338 = load i32, ptr %1337, align 4, !tbaa !5
  %1339 = mul nsw i32 %1338, %1335
  %1340 = add nsw i32 %1339, %1279
  %1341 = icmp sgt i64 %1277, 2
  %1342 = add nsw i64 %1278, -1
  %1343 = add i32 %1276, 1
  br i1 %1341, label %1275, label %1344, !llvm.loop !526

1344:                                             ; preds = %1334, %1270
  %1345 = phi i32 [ %1274, %1270 ], [ %1340, %1334 ]
  %1346 = sext i32 %1345 to i64
  %1347 = getelementptr inbounds double, ptr %2, i64 %1346
  %1348 = load double, ptr %1347, align 8, !tbaa !18
  %1349 = getelementptr inbounds i16, ptr %1238, i64 %1346
  %1350 = load i16, ptr %1349, align 2, !tbaa !78
  %1351 = sitofp i16 %1350 to double
  %1352 = fmul fast double %1348, %1351
  %1353 = fmul fast double %1352, %1352
  %1354 = fadd fast double %1353, %1271
  store double %1354, ptr %1240, align 8, !tbaa !18
  %1355 = fadd fast double %1348, %1273
  %1356 = add nuw nsw i32 %1272, 1
  br i1 %1264, label %1357, label %1404

1357:                                             ; preds = %1344
  %1358 = load i32, ptr %4, align 4, !tbaa !5
  %1359 = load i32, ptr %12, align 4, !tbaa !5
  %1360 = add nsw i32 %1359, -1
  %1361 = icmp slt i32 %1358, %1360
  br i1 %1361, label %1381, label %1362

1362:                                             ; preds = %1357
  %1363 = icmp eq i32 %1358, %1360
  br i1 %1363, label %1364, label %1397

1364:                                             ; preds = %1362
  store i32 0, ptr %4, align 4, !tbaa !5
  %1365 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1365, ptr %6, align 4, !tbaa !5
  br i1 %1269, label %1404, label %1366

1366:                                             ; preds = %1364, %1391
  %1367 = phi i64 [ %1395, %1391 ], [ 1, %1364 ]
  %1368 = getelementptr inbounds i32, ptr %4, i64 %1367
  %1369 = load i32, ptr %1368, align 4, !tbaa !5
  %1370 = getelementptr inbounds i32, ptr %12, i64 %1367
  %1371 = load i32, ptr %1370, align 4, !tbaa !5
  %1372 = add nsw i32 %1371, -1
  %1373 = icmp slt i32 %1369, %1372
  br i1 %1373, label %1374, label %1389

1374:                                             ; preds = %1366
  br i1 %1361, label %1381, label %1375

1375:                                             ; preds = %1374
  %1376 = getelementptr inbounds i32, ptr %7, i64 %1367
  %1377 = load i32, ptr %1376, align 4, !tbaa !5
  %1378 = getelementptr inbounds i32, ptr %6, i64 %1367
  %1379 = load i32, ptr %1378, align 4, !tbaa !5
  %1380 = add nsw i32 %1379, %1377
  store i32 %1380, ptr %1378, align 4, !tbaa !5
  br label %1399

1381:                                             ; preds = %1357, %1374
  %1382 = phi i32 [ %1369, %1374 ], [ %1358, %1357 ]
  %1383 = phi ptr [ %1368, %1374 ], [ %4, %1357 ]
  %1384 = phi i64 [ %1367, %1374 ], [ 0, %1357 ]
  %1385 = add nsw i32 %1382, 1
  store i32 %1385, ptr %1383, align 4, !tbaa !5
  %1386 = getelementptr inbounds i32, ptr %7, i64 %1384
  %1387 = load i32, ptr %1386, align 4, !tbaa !5
  %1388 = getelementptr inbounds i32, ptr %6, i64 %1384
  br label %1399

1389:                                             ; preds = %1366
  %1390 = icmp eq i32 %1369, %1372
  br i1 %1390, label %1391, label %1397

1391:                                             ; preds = %1389
  store i32 0, ptr %1368, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %8, i64 %1367
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = getelementptr inbounds i32, ptr %6, i64 %1367
  store i32 %1393, ptr %1394, align 4, !tbaa !5
  %1395 = add nuw nsw i64 %1367, 1
  %1396 = icmp eq i64 %1395, %1267
  br i1 %1396, label %1404, label %1366, !llvm.loop !527

1397:                                             ; preds = %1362, %1389
  %1398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 913, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

1399:                                             ; preds = %1375, %1381
  %1400 = phi ptr [ %1388, %1381 ], [ %1368, %1375 ]
  %1401 = phi i32 [ %1387, %1381 ], [ 1, %1375 ]
  %1402 = load i32, ptr %1400, align 4, !tbaa !5
  %1403 = add nsw i32 %1402, %1401
  store i32 %1403, ptr %1400, align 4, !tbaa !5
  br label %1404

1404:                                             ; preds = %1391, %1399, %1364, %1344
  %1405 = icmp eq i32 %1356, %5
  br i1 %1405, label %3056, label %1270, !llvm.loop !528

1406:                                             ; preds = %1253, %1542
  %1407 = phi double [ 0.000000e+00, %1253 ], [ %1490, %1542 ]
  %1408 = phi i32 [ 0, %1253 ], [ %1491, %1542 ]
  %1409 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1254, label %1410, label %1479

1410:                                             ; preds = %1406, %1469
  %1411 = phi i32 [ %1478, %1469 ], [ 0, %1406 ]
  %1412 = phi i64 [ %1420, %1469 ], [ %1258, %1406 ]
  %1413 = phi i64 [ %1477, %1469 ], [ %1257, %1406 ]
  %1414 = phi i32 [ %1475, %1469 ], [ %1409, %1406 ]
  %1415 = sub i32 %1256, %1411
  %1416 = tail call i32 @llvm.smin.i32(i32 %1415, i32 0)
  %1417 = sub i32 %1415, %1416
  %1418 = zext i32 %1417 to i64
  %1419 = add nuw nsw i64 %1418, 1
  %1420 = add nsw i64 %1412, -1
  %1421 = icmp ult i32 %1417, 31
  br i1 %1421, label %1457, label %1422

1422:                                             ; preds = %1410
  %1423 = and i64 %1419, 8589934560
  %1424 = sub i64 %1413, %1423
  br label %1425

1425:                                             ; preds = %1425, %1422
  %1426 = phi i64 [ 0, %1422 ], [ %1449, %1425 ]
  %1427 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1422 ], [ %1445, %1425 ]
  %1428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1422 ], [ %1446, %1425 ]
  %1429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1422 ], [ %1447, %1425 ]
  %1430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1422 ], [ %1448, %1425 ]
  %1431 = sub i64 %1413, %1426
  %1432 = getelementptr inbounds i32, ptr %11, i64 %1431
  %1433 = getelementptr inbounds i32, ptr %1432, i64 -7
  %1434 = load <8 x i32>, ptr %1433, align 4, !tbaa !5
  %1435 = shufflevector <8 x i32> %1434, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1436 = getelementptr inbounds i32, ptr %1432, i64 -15
  %1437 = load <8 x i32>, ptr %1436, align 4, !tbaa !5
  %1438 = shufflevector <8 x i32> %1437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1439 = getelementptr inbounds i32, ptr %1432, i64 -23
  %1440 = load <8 x i32>, ptr %1439, align 4, !tbaa !5
  %1441 = shufflevector <8 x i32> %1440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1442 = getelementptr inbounds i32, ptr %1432, i64 -31
  %1443 = load <8 x i32>, ptr %1442, align 4, !tbaa !5
  %1444 = shufflevector <8 x i32> %1443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1445 = mul <8 x i32> %1435, %1427
  %1446 = mul <8 x i32> %1438, %1428
  %1447 = mul <8 x i32> %1441, %1429
  %1448 = mul <8 x i32> %1444, %1430
  %1449 = add nuw i64 %1426, 32
  %1450 = icmp eq i64 %1449, %1423
  br i1 %1450, label %1451, label %1425, !llvm.loop !529

1451:                                             ; preds = %1425
  %1452 = mul <8 x i32> %1446, %1445
  %1453 = mul <8 x i32> %1447, %1452
  %1454 = mul <8 x i32> %1448, %1453
  %1455 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1454)
  %1456 = icmp eq i64 %1419, %1423
  br i1 %1456, label %1469, label %1457

1457:                                             ; preds = %1410, %1451
  %1458 = phi i64 [ %1413, %1410 ], [ %1424, %1451 ]
  %1459 = phi i32 [ 1, %1410 ], [ %1455, %1451 ]
  br label %1460

1460:                                             ; preds = %1457, %1460
  %1461 = phi i64 [ %1466, %1460 ], [ %1458, %1457 ]
  %1462 = phi i32 [ %1465, %1460 ], [ %1459, %1457 ]
  %1463 = getelementptr inbounds i32, ptr %11, i64 %1461
  %1464 = load i32, ptr %1463, align 4, !tbaa !5
  %1465 = mul nsw i32 %1464, %1462
  %1466 = add nsw i64 %1461, -1
  %1467 = trunc i64 %1461 to i32
  %1468 = icmp sgt i32 %1467, 0
  br i1 %1468, label %1460, label %1469, !llvm.loop !530

1469:                                             ; preds = %1460, %1451
  %1470 = phi i32 [ %1455, %1451 ], [ %1465, %1460 ]
  %1471 = and i64 %1420, 4294967295
  %1472 = getelementptr inbounds i32, ptr %6, i64 %1471
  %1473 = load i32, ptr %1472, align 4, !tbaa !5
  %1474 = mul nsw i32 %1473, %1470
  %1475 = add nsw i32 %1474, %1414
  %1476 = icmp sgt i64 %1412, 2
  %1477 = add nsw i64 %1413, -1
  %1478 = add i32 %1411, 1
  br i1 %1476, label %1410, label %1479, !llvm.loop !531

1479:                                             ; preds = %1469, %1406
  %1480 = phi i32 [ %1409, %1406 ], [ %1475, %1469 ]
  %1481 = icmp slt i32 %1480, %5
  br i1 %1481, label %1484, label %1482

1482:                                             ; preds = %1479
  %1483 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 913, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3061

1484:                                             ; preds = %1479
  %1485 = sext i32 %1480 to i64
  %1486 = getelementptr inbounds i16, ptr %1238, i64 %1485
  %1487 = load i16, ptr %1486, align 2, !tbaa !78
  %1488 = sitofp i16 %1487 to double
  %1489 = fmul fast double %1488, %1488
  %1490 = fadd fast double %1489, %1407
  store double %1490, ptr %1240, align 8, !tbaa !18
  %1491 = add nuw nsw i32 %1408, 1
  br i1 %1255, label %1492, label %1542

1492:                                             ; preds = %1484
  %1493 = load i32, ptr %4, align 4, !tbaa !5
  %1494 = load i32, ptr %12, align 4, !tbaa !5
  %1495 = add nsw i32 %1494, -1
  %1496 = icmp slt i32 %1493, %1495
  br i1 %1496, label %1519, label %1497

1497:                                             ; preds = %1492
  %1498 = icmp eq i32 %1493, %1495
  br i1 %1498, label %1499, label %1535

1499:                                             ; preds = %1497
  store i32 0, ptr %4, align 4, !tbaa !5
  %1500 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1500, ptr %6, align 4, !tbaa !5
  br i1 %1260, label %1542, label %1501

1501:                                             ; preds = %1499, %1529
  %1502 = phi i64 [ %1533, %1529 ], [ 1, %1499 ]
  %1503 = getelementptr inbounds i32, ptr %4, i64 %1502
  %1504 = load i32, ptr %1503, align 4, !tbaa !5
  %1505 = getelementptr inbounds i32, ptr %12, i64 %1502
  %1506 = load i32, ptr %1505, align 4, !tbaa !5
  %1507 = add nsw i32 %1506, -1
  %1508 = icmp slt i32 %1504, %1507
  br i1 %1508, label %1509, label %1527

1509:                                             ; preds = %1501
  br i1 %1496, label %1519, label %1510

1510:                                             ; preds = %1509
  %1511 = shl i64 %1502, 32
  %1512 = add i64 %1511, -4294967296
  %1513 = ashr exact i64 %1512, 32
  %1514 = getelementptr inbounds i32, ptr %7, i64 %1513
  %1515 = load i32, ptr %1514, align 4, !tbaa !5
  %1516 = getelementptr inbounds i32, ptr %6, i64 %1502
  %1517 = load i32, ptr %1516, align 4, !tbaa !5
  %1518 = add nsw i32 %1517, %1515
  store i32 %1518, ptr %1516, align 4, !tbaa !5
  br label %1537

1519:                                             ; preds = %1492, %1509
  %1520 = phi i32 [ %1504, %1509 ], [ %1493, %1492 ]
  %1521 = phi ptr [ %1503, %1509 ], [ %4, %1492 ]
  %1522 = phi i64 [ %1502, %1509 ], [ 0, %1492 ]
  %1523 = add nsw i32 %1520, 1
  store i32 %1523, ptr %1521, align 4, !tbaa !5
  %1524 = getelementptr inbounds i32, ptr %7, i64 %1522
  %1525 = load i32, ptr %1524, align 4, !tbaa !5
  %1526 = getelementptr inbounds i32, ptr %6, i64 %1522
  br label %1537

1527:                                             ; preds = %1501
  %1528 = icmp eq i32 %1504, %1507
  br i1 %1528, label %1529, label %1535

1529:                                             ; preds = %1527
  store i32 0, ptr %1503, align 4, !tbaa !5
  %1530 = getelementptr inbounds i32, ptr %8, i64 %1502
  %1531 = load i32, ptr %1530, align 4, !tbaa !5
  %1532 = getelementptr inbounds i32, ptr %6, i64 %1502
  store i32 %1531, ptr %1532, align 4, !tbaa !5
  %1533 = add nuw nsw i64 %1502, 1
  %1534 = icmp eq i64 %1533, %1258
  br i1 %1534, label %1542, label %1501, !llvm.loop !532

1535:                                             ; preds = %1497, %1527
  %1536 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 913, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

1537:                                             ; preds = %1510, %1519
  %1538 = phi ptr [ %1526, %1519 ], [ %1503, %1510 ]
  %1539 = phi i32 [ %1525, %1519 ], [ 1, %1510 ]
  %1540 = load i32, ptr %1538, align 4, !tbaa !5
  %1541 = add nsw i32 %1540, %1539
  store i32 %1541, ptr %1538, align 4, !tbaa !5
  br label %1542

1542:                                             ; preds = %1529, %1537, %1499, %1484
  %1543 = icmp eq i32 %1491, %5
  br i1 %1543, label %3056, label %1406, !llvm.loop !533

1544:                                             ; preds = %1246
  %1545 = getelementptr inbounds i32, ptr %3, i64 %19
  %1546 = load i32, ptr %1545, align 4, !tbaa !5
  %1547 = icmp eq i32 %1546, 0
  %1548 = icmp sgt i32 %5, 0
  br i1 %1547, label %1558, label %1549

1549:                                             ; preds = %1544
  br i1 %1548, label %1550, label %3056

1550:                                             ; preds = %1549
  %1551 = icmp sgt i32 %13, 1
  %1552 = icmp sgt i32 %13, 0
  %1553 = add i32 %13, -2
  %1554 = zext i32 %1553 to i64
  %1555 = zext i32 %13 to i64
  %1556 = add nuw i32 %5, 1
  %1557 = icmp eq i32 %13, 1
  br label %1700

1558:                                             ; preds = %1544
  br i1 %1548, label %1559, label %3056

1559:                                             ; preds = %1558
  %1560 = icmp sgt i32 %13, 1
  %1561 = icmp sgt i32 %13, 0
  %1562 = add i32 %13, -2
  %1563 = zext i32 %1562 to i64
  %1564 = zext i32 %13 to i64
  %1565 = add nuw i32 %5, 1
  %1566 = icmp eq i32 %13, 1
  br label %1567

1567:                                             ; preds = %1559, %1698
  %1568 = phi double [ 0.000000e+00, %1559 ], [ %1648, %1698 ]
  %1569 = phi i32 [ 0, %1559 ], [ %1650, %1698 ]
  %1570 = phi double [ 0.000000e+00, %1559 ], [ %1649, %1698 ]
  %1571 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1560, label %1572, label %1641

1572:                                             ; preds = %1567, %1631
  %1573 = phi i32 [ %1640, %1631 ], [ 0, %1567 ]
  %1574 = phi i64 [ %1582, %1631 ], [ %1564, %1567 ]
  %1575 = phi i64 [ %1639, %1631 ], [ %1563, %1567 ]
  %1576 = phi i32 [ %1637, %1631 ], [ %1571, %1567 ]
  %1577 = sub i32 %1562, %1573
  %1578 = tail call i32 @llvm.smin.i32(i32 %1577, i32 0)
  %1579 = sub i32 %1577, %1578
  %1580 = zext i32 %1579 to i64
  %1581 = add nuw nsw i64 %1580, 1
  %1582 = add nsw i64 %1574, -1
  %1583 = icmp ult i32 %1579, 31
  br i1 %1583, label %1619, label %1584

1584:                                             ; preds = %1572
  %1585 = and i64 %1581, 8589934560
  %1586 = sub i64 %1575, %1585
  br label %1587

1587:                                             ; preds = %1587, %1584
  %1588 = phi i64 [ 0, %1584 ], [ %1611, %1587 ]
  %1589 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1584 ], [ %1607, %1587 ]
  %1590 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1584 ], [ %1608, %1587 ]
  %1591 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1584 ], [ %1609, %1587 ]
  %1592 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1584 ], [ %1610, %1587 ]
  %1593 = sub i64 %1575, %1588
  %1594 = getelementptr inbounds i32, ptr %9, i64 %1593
  %1595 = getelementptr inbounds i32, ptr %1594, i64 -7
  %1596 = load <8 x i32>, ptr %1595, align 4, !tbaa !5
  %1597 = shufflevector <8 x i32> %1596, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1598 = getelementptr inbounds i32, ptr %1594, i64 -15
  %1599 = load <8 x i32>, ptr %1598, align 4, !tbaa !5
  %1600 = shufflevector <8 x i32> %1599, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1601 = getelementptr inbounds i32, ptr %1594, i64 -23
  %1602 = load <8 x i32>, ptr %1601, align 4, !tbaa !5
  %1603 = shufflevector <8 x i32> %1602, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1604 = getelementptr inbounds i32, ptr %1594, i64 -31
  %1605 = load <8 x i32>, ptr %1604, align 4, !tbaa !5
  %1606 = shufflevector <8 x i32> %1605, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1607 = mul <8 x i32> %1597, %1589
  %1608 = mul <8 x i32> %1600, %1590
  %1609 = mul <8 x i32> %1603, %1591
  %1610 = mul <8 x i32> %1606, %1592
  %1611 = add nuw i64 %1588, 32
  %1612 = icmp eq i64 %1611, %1585
  br i1 %1612, label %1613, label %1587, !llvm.loop !534

1613:                                             ; preds = %1587
  %1614 = mul <8 x i32> %1608, %1607
  %1615 = mul <8 x i32> %1609, %1614
  %1616 = mul <8 x i32> %1610, %1615
  %1617 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1616)
  %1618 = icmp eq i64 %1581, %1585
  br i1 %1618, label %1631, label %1619

1619:                                             ; preds = %1572, %1613
  %1620 = phi i64 [ %1575, %1572 ], [ %1586, %1613 ]
  %1621 = phi i32 [ 1, %1572 ], [ %1617, %1613 ]
  br label %1622

1622:                                             ; preds = %1619, %1622
  %1623 = phi i64 [ %1628, %1622 ], [ %1620, %1619 ]
  %1624 = phi i32 [ %1627, %1622 ], [ %1621, %1619 ]
  %1625 = getelementptr inbounds i32, ptr %9, i64 %1623
  %1626 = load i32, ptr %1625, align 4, !tbaa !5
  %1627 = mul nsw i32 %1626, %1624
  %1628 = add nsw i64 %1623, -1
  %1629 = trunc i64 %1623 to i32
  %1630 = icmp sgt i32 %1629, 0
  br i1 %1630, label %1622, label %1631, !llvm.loop !535

1631:                                             ; preds = %1622, %1613
  %1632 = phi i32 [ %1617, %1613 ], [ %1627, %1622 ]
  %1633 = and i64 %1582, 4294967295
  %1634 = getelementptr inbounds i32, ptr %6, i64 %1633
  %1635 = load i32, ptr %1634, align 4, !tbaa !5
  %1636 = mul nsw i32 %1635, %1632
  %1637 = add nsw i32 %1636, %1576
  %1638 = icmp sgt i64 %1574, 2
  %1639 = add nsw i64 %1575, -1
  %1640 = add i32 %1573, 1
  br i1 %1638, label %1572, label %1641, !llvm.loop !536

1641:                                             ; preds = %1631, %1567
  %1642 = phi i32 [ %1571, %1567 ], [ %1637, %1631 ]
  %1643 = sext i32 %1642 to i64
  %1644 = getelementptr inbounds i16, ptr %1238, i64 %1643
  %1645 = load i16, ptr %1644, align 2, !tbaa !78
  %1646 = sitofp i16 %1645 to double
  %1647 = fmul fast double %1646, %1646
  %1648 = fadd fast double %1647, %1568
  %1649 = fadd fast double %1570, 1.000000e+00
  %1650 = add nuw nsw i32 %1569, 1
  br i1 %1561, label %1651, label %1698

1651:                                             ; preds = %1641
  %1652 = load i32, ptr %4, align 4, !tbaa !5
  %1653 = load i32, ptr %12, align 4, !tbaa !5
  %1654 = add nsw i32 %1653, -1
  %1655 = icmp slt i32 %1652, %1654
  br i1 %1655, label %1675, label %1656

1656:                                             ; preds = %1651
  %1657 = icmp eq i32 %1652, %1654
  br i1 %1657, label %1658, label %1691

1658:                                             ; preds = %1656
  store i32 0, ptr %4, align 4, !tbaa !5
  %1659 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1659, ptr %6, align 4, !tbaa !5
  br i1 %1566, label %1698, label %1660

1660:                                             ; preds = %1658, %1685
  %1661 = phi i64 [ %1689, %1685 ], [ 1, %1658 ]
  %1662 = getelementptr inbounds i32, ptr %4, i64 %1661
  %1663 = load i32, ptr %1662, align 4, !tbaa !5
  %1664 = getelementptr inbounds i32, ptr %12, i64 %1661
  %1665 = load i32, ptr %1664, align 4, !tbaa !5
  %1666 = add nsw i32 %1665, -1
  %1667 = icmp slt i32 %1663, %1666
  br i1 %1667, label %1668, label %1683

1668:                                             ; preds = %1660
  br i1 %1655, label %1675, label %1669

1669:                                             ; preds = %1668
  %1670 = getelementptr inbounds i32, ptr %7, i64 %1661
  %1671 = load i32, ptr %1670, align 4, !tbaa !5
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1661
  %1673 = load i32, ptr %1672, align 4, !tbaa !5
  %1674 = add nsw i32 %1673, %1671
  store i32 %1674, ptr %1672, align 4, !tbaa !5
  br label %1693

1675:                                             ; preds = %1651, %1668
  %1676 = phi i32 [ %1663, %1668 ], [ %1652, %1651 ]
  %1677 = phi ptr [ %1662, %1668 ], [ %4, %1651 ]
  %1678 = phi i64 [ %1661, %1668 ], [ 0, %1651 ]
  %1679 = add nsw i32 %1676, 1
  store i32 %1679, ptr %1677, align 4, !tbaa !5
  %1680 = getelementptr inbounds i32, ptr %7, i64 %1678
  %1681 = load i32, ptr %1680, align 4, !tbaa !5
  %1682 = getelementptr inbounds i32, ptr %6, i64 %1678
  br label %1693

1683:                                             ; preds = %1660
  %1684 = icmp eq i32 %1663, %1666
  br i1 %1684, label %1685, label %1691

1685:                                             ; preds = %1683
  store i32 0, ptr %1662, align 4, !tbaa !5
  %1686 = getelementptr inbounds i32, ptr %8, i64 %1661
  %1687 = load i32, ptr %1686, align 4, !tbaa !5
  %1688 = getelementptr inbounds i32, ptr %6, i64 %1661
  store i32 %1687, ptr %1688, align 4, !tbaa !5
  %1689 = add nuw nsw i64 %1661, 1
  %1690 = icmp eq i64 %1689, %1564
  br i1 %1690, label %1698, label %1660, !llvm.loop !537

1691:                                             ; preds = %1656, %1683
  store double %1648, ptr %1240, align 8, !tbaa !18
  %1692 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 913, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

1693:                                             ; preds = %1669, %1675
  %1694 = phi ptr [ %1682, %1675 ], [ %1662, %1669 ]
  %1695 = phi i32 [ %1681, %1675 ], [ 1, %1669 ]
  %1696 = load i32, ptr %1694, align 4, !tbaa !5
  %1697 = add nsw i32 %1696, %1695
  store i32 %1697, ptr %1694, align 4, !tbaa !5
  br label %1698

1698:                                             ; preds = %1685, %1693, %1658, %1641
  %1699 = icmp eq i32 %1650, %5
  br i1 %1699, label %3052, label %1567, !llvm.loop !538

1700:                                             ; preds = %1550, %1836
  %1701 = phi double [ 0.000000e+00, %1550 ], [ %1784, %1836 ]
  %1702 = phi i32 [ 0, %1550 ], [ %1785, %1836 ]
  %1703 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1551, label %1704, label %1773

1704:                                             ; preds = %1700, %1763
  %1705 = phi i32 [ %1772, %1763 ], [ 0, %1700 ]
  %1706 = phi i64 [ %1714, %1763 ], [ %1555, %1700 ]
  %1707 = phi i64 [ %1771, %1763 ], [ %1554, %1700 ]
  %1708 = phi i32 [ %1769, %1763 ], [ %1703, %1700 ]
  %1709 = sub i32 %1553, %1705
  %1710 = tail call i32 @llvm.smin.i32(i32 %1709, i32 0)
  %1711 = sub i32 %1709, %1710
  %1712 = zext i32 %1711 to i64
  %1713 = add nuw nsw i64 %1712, 1
  %1714 = add nsw i64 %1706, -1
  %1715 = icmp ult i32 %1711, 31
  br i1 %1715, label %1751, label %1716

1716:                                             ; preds = %1704
  %1717 = and i64 %1713, 8589934560
  %1718 = sub i64 %1707, %1717
  br label %1719

1719:                                             ; preds = %1719, %1716
  %1720 = phi i64 [ 0, %1716 ], [ %1743, %1719 ]
  %1721 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1716 ], [ %1739, %1719 ]
  %1722 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1716 ], [ %1740, %1719 ]
  %1723 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1716 ], [ %1741, %1719 ]
  %1724 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1716 ], [ %1742, %1719 ]
  %1725 = sub i64 %1707, %1720
  %1726 = getelementptr inbounds i32, ptr %11, i64 %1725
  %1727 = getelementptr inbounds i32, ptr %1726, i64 -7
  %1728 = load <8 x i32>, ptr %1727, align 4, !tbaa !5
  %1729 = shufflevector <8 x i32> %1728, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1730 = getelementptr inbounds i32, ptr %1726, i64 -15
  %1731 = load <8 x i32>, ptr %1730, align 4, !tbaa !5
  %1732 = shufflevector <8 x i32> %1731, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1733 = getelementptr inbounds i32, ptr %1726, i64 -23
  %1734 = load <8 x i32>, ptr %1733, align 4, !tbaa !5
  %1735 = shufflevector <8 x i32> %1734, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1736 = getelementptr inbounds i32, ptr %1726, i64 -31
  %1737 = load <8 x i32>, ptr %1736, align 4, !tbaa !5
  %1738 = shufflevector <8 x i32> %1737, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1739 = mul <8 x i32> %1729, %1721
  %1740 = mul <8 x i32> %1732, %1722
  %1741 = mul <8 x i32> %1735, %1723
  %1742 = mul <8 x i32> %1738, %1724
  %1743 = add nuw i64 %1720, 32
  %1744 = icmp eq i64 %1743, %1717
  br i1 %1744, label %1745, label %1719, !llvm.loop !539

1745:                                             ; preds = %1719
  %1746 = mul <8 x i32> %1740, %1739
  %1747 = mul <8 x i32> %1741, %1746
  %1748 = mul <8 x i32> %1742, %1747
  %1749 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1748)
  %1750 = icmp eq i64 %1713, %1717
  br i1 %1750, label %1763, label %1751

1751:                                             ; preds = %1704, %1745
  %1752 = phi i64 [ %1707, %1704 ], [ %1718, %1745 ]
  %1753 = phi i32 [ 1, %1704 ], [ %1749, %1745 ]
  br label %1754

1754:                                             ; preds = %1751, %1754
  %1755 = phi i64 [ %1760, %1754 ], [ %1752, %1751 ]
  %1756 = phi i32 [ %1759, %1754 ], [ %1753, %1751 ]
  %1757 = getelementptr inbounds i32, ptr %11, i64 %1755
  %1758 = load i32, ptr %1757, align 4, !tbaa !5
  %1759 = mul nsw i32 %1758, %1756
  %1760 = add nsw i64 %1755, -1
  %1761 = trunc i64 %1755 to i32
  %1762 = icmp sgt i32 %1761, 0
  br i1 %1762, label %1754, label %1763, !llvm.loop !540

1763:                                             ; preds = %1754, %1745
  %1764 = phi i32 [ %1749, %1745 ], [ %1759, %1754 ]
  %1765 = and i64 %1714, 4294967295
  %1766 = getelementptr inbounds i32, ptr %6, i64 %1765
  %1767 = load i32, ptr %1766, align 4, !tbaa !5
  %1768 = mul nsw i32 %1767, %1764
  %1769 = add nsw i32 %1768, %1708
  %1770 = icmp sgt i64 %1706, 2
  %1771 = add nsw i64 %1707, -1
  %1772 = add i32 %1705, 1
  br i1 %1770, label %1704, label %1773, !llvm.loop !541

1773:                                             ; preds = %1763, %1700
  %1774 = phi i32 [ %1703, %1700 ], [ %1769, %1763 ]
  %1775 = icmp slt i32 %1774, %5
  br i1 %1775, label %1778, label %1776

1776:                                             ; preds = %1773
  %1777 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 913, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3061

1778:                                             ; preds = %1773
  %1779 = sext i32 %1774 to i64
  %1780 = getelementptr inbounds i16, ptr %1238, i64 %1779
  %1781 = load i16, ptr %1780, align 2, !tbaa !78
  %1782 = sitofp i16 %1781 to double
  %1783 = fmul fast double %1782, %1782
  %1784 = fadd fast double %1783, %1701
  store double %1784, ptr %1240, align 8, !tbaa !18
  %1785 = add nuw nsw i32 %1702, 1
  br i1 %1552, label %1786, label %1836

1786:                                             ; preds = %1778
  %1787 = load i32, ptr %4, align 4, !tbaa !5
  %1788 = load i32, ptr %12, align 4, !tbaa !5
  %1789 = add nsw i32 %1788, -1
  %1790 = icmp slt i32 %1787, %1789
  br i1 %1790, label %1813, label %1791

1791:                                             ; preds = %1786
  %1792 = icmp eq i32 %1787, %1789
  br i1 %1792, label %1793, label %1829

1793:                                             ; preds = %1791
  store i32 0, ptr %4, align 4, !tbaa !5
  %1794 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1794, ptr %6, align 4, !tbaa !5
  br i1 %1557, label %1836, label %1795

1795:                                             ; preds = %1793, %1823
  %1796 = phi i64 [ %1827, %1823 ], [ 1, %1793 ]
  %1797 = getelementptr inbounds i32, ptr %4, i64 %1796
  %1798 = load i32, ptr %1797, align 4, !tbaa !5
  %1799 = getelementptr inbounds i32, ptr %12, i64 %1796
  %1800 = load i32, ptr %1799, align 4, !tbaa !5
  %1801 = add nsw i32 %1800, -1
  %1802 = icmp slt i32 %1798, %1801
  br i1 %1802, label %1803, label %1821

1803:                                             ; preds = %1795
  br i1 %1790, label %1813, label %1804

1804:                                             ; preds = %1803
  %1805 = shl i64 %1796, 32
  %1806 = add i64 %1805, -4294967296
  %1807 = ashr exact i64 %1806, 32
  %1808 = getelementptr inbounds i32, ptr %7, i64 %1807
  %1809 = load i32, ptr %1808, align 4, !tbaa !5
  %1810 = getelementptr inbounds i32, ptr %6, i64 %1796
  %1811 = load i32, ptr %1810, align 4, !tbaa !5
  %1812 = add nsw i32 %1811, %1809
  store i32 %1812, ptr %1810, align 4, !tbaa !5
  br label %1831

1813:                                             ; preds = %1786, %1803
  %1814 = phi i32 [ %1798, %1803 ], [ %1787, %1786 ]
  %1815 = phi ptr [ %1797, %1803 ], [ %4, %1786 ]
  %1816 = phi i64 [ %1796, %1803 ], [ 0, %1786 ]
  %1817 = add nsw i32 %1814, 1
  store i32 %1817, ptr %1815, align 4, !tbaa !5
  %1818 = getelementptr inbounds i32, ptr %7, i64 %1816
  %1819 = load i32, ptr %1818, align 4, !tbaa !5
  %1820 = getelementptr inbounds i32, ptr %6, i64 %1816
  br label %1831

1821:                                             ; preds = %1795
  %1822 = icmp eq i32 %1798, %1801
  br i1 %1822, label %1823, label %1829

1823:                                             ; preds = %1821
  store i32 0, ptr %1797, align 4, !tbaa !5
  %1824 = getelementptr inbounds i32, ptr %8, i64 %1796
  %1825 = load i32, ptr %1824, align 4, !tbaa !5
  %1826 = getelementptr inbounds i32, ptr %6, i64 %1796
  store i32 %1825, ptr %1826, align 4, !tbaa !5
  %1827 = add nuw nsw i64 %1796, 1
  %1828 = icmp eq i64 %1827, %1555
  br i1 %1828, label %1836, label %1795, !llvm.loop !542

1829:                                             ; preds = %1791, %1821
  %1830 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 913, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

1831:                                             ; preds = %1804, %1813
  %1832 = phi ptr [ %1820, %1813 ], [ %1797, %1804 ]
  %1833 = phi i32 [ %1819, %1813 ], [ 1, %1804 ]
  %1834 = load i32, ptr %1832, align 4, !tbaa !5
  %1835 = add nsw i32 %1834, %1833
  store i32 %1835, ptr %1832, align 4, !tbaa !5
  br label %1836

1836:                                             ; preds = %1823, %1831, %1793, %1778
  %1837 = icmp eq i32 %1785, %5
  br i1 %1837, label %3056, label %1700, !llvm.loop !543

1838:                                             ; preds = %1246
  %1839 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 913, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3056

1840:                                             ; preds = %18
  %1841 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1842 = load ptr, ptr %1841, align 8, !tbaa !9
  %1843 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1844 = load ptr, ptr %1843, align 8, !tbaa !9
  store float 0.000000e+00, ptr %1844, align 4, !tbaa !162
  %1845 = icmp eq i32 %13, 0
  br i1 %1845, label %1846, label %1850

1846:                                             ; preds = %1840
  %1847 = load i16, ptr %1842, align 2, !tbaa !78
  %1848 = sitofp i16 %1847 to float
  %1849 = fmul fast float %1848, %1848
  store float %1849, ptr %1844, align 4, !tbaa !162
  br label %3056

1850:                                             ; preds = %1840
  switch i32 %1, label %2446 [
    i32 1, label %1851
    i32 0, label %2152
  ]

1851:                                             ; preds = %1850
  %1852 = getelementptr inbounds i32, ptr %3, i64 %19
  %1853 = load i32, ptr %1852, align 4, !tbaa !5
  %1854 = icmp eq i32 %1853, 0
  %1855 = icmp sgt i32 %5, 0
  br i1 %1854, label %1865, label %1856

1856:                                             ; preds = %1851
  br i1 %1855, label %1857, label %3056

1857:                                             ; preds = %1856
  %1858 = icmp sgt i32 %13, 1
  %1859 = icmp sgt i32 %13, 0
  %1860 = add i32 %13, -2
  %1861 = zext i32 %1860 to i64
  %1862 = zext i32 %13 to i64
  %1863 = add nuw i32 %5, 1
  %1864 = icmp eq i32 %13, 1
  br label %2012

1865:                                             ; preds = %1851
  br i1 %1855, label %1866, label %3056

1866:                                             ; preds = %1865
  %1867 = icmp sgt i32 %13, 1
  %1868 = icmp sgt i32 %13, 0
  %1869 = add i32 %13, -2
  %1870 = zext i32 %1869 to i64
  %1871 = zext i32 %13 to i64
  %1872 = add nuw i32 %5, 1
  %1873 = icmp eq i32 %13, 1
  br label %1874

1874:                                             ; preds = %1866, %2010
  %1875 = phi float [ 0.000000e+00, %1866 ], [ %1960, %2010 ]
  %1876 = phi i32 [ 0, %1866 ], [ %1962, %2010 ]
  %1877 = phi double [ 0.000000e+00, %1866 ], [ %1961, %2010 ]
  %1878 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1867, label %1879, label %1948

1879:                                             ; preds = %1874, %1938
  %1880 = phi i32 [ %1947, %1938 ], [ 0, %1874 ]
  %1881 = phi i64 [ %1889, %1938 ], [ %1871, %1874 ]
  %1882 = phi i64 [ %1946, %1938 ], [ %1870, %1874 ]
  %1883 = phi i32 [ %1944, %1938 ], [ %1878, %1874 ]
  %1884 = sub i32 %1869, %1880
  %1885 = tail call i32 @llvm.smin.i32(i32 %1884, i32 0)
  %1886 = sub i32 %1884, %1885
  %1887 = zext i32 %1886 to i64
  %1888 = add nuw nsw i64 %1887, 1
  %1889 = add nsw i64 %1881, -1
  %1890 = icmp ult i32 %1886, 31
  br i1 %1890, label %1926, label %1891

1891:                                             ; preds = %1879
  %1892 = and i64 %1888, 8589934560
  %1893 = sub i64 %1882, %1892
  br label %1894

1894:                                             ; preds = %1894, %1891
  %1895 = phi i64 [ 0, %1891 ], [ %1918, %1894 ]
  %1896 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1891 ], [ %1914, %1894 ]
  %1897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1891 ], [ %1915, %1894 ]
  %1898 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1891 ], [ %1916, %1894 ]
  %1899 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1891 ], [ %1917, %1894 ]
  %1900 = sub i64 %1882, %1895
  %1901 = getelementptr inbounds i32, ptr %9, i64 %1900
  %1902 = getelementptr inbounds i32, ptr %1901, i64 -7
  %1903 = load <8 x i32>, ptr %1902, align 4, !tbaa !5
  %1904 = shufflevector <8 x i32> %1903, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1905 = getelementptr inbounds i32, ptr %1901, i64 -15
  %1906 = load <8 x i32>, ptr %1905, align 4, !tbaa !5
  %1907 = shufflevector <8 x i32> %1906, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1908 = getelementptr inbounds i32, ptr %1901, i64 -23
  %1909 = load <8 x i32>, ptr %1908, align 4, !tbaa !5
  %1910 = shufflevector <8 x i32> %1909, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1911 = getelementptr inbounds i32, ptr %1901, i64 -31
  %1912 = load <8 x i32>, ptr %1911, align 4, !tbaa !5
  %1913 = shufflevector <8 x i32> %1912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1914 = mul <8 x i32> %1904, %1896
  %1915 = mul <8 x i32> %1907, %1897
  %1916 = mul <8 x i32> %1910, %1898
  %1917 = mul <8 x i32> %1913, %1899
  %1918 = add nuw i64 %1895, 32
  %1919 = icmp eq i64 %1918, %1892
  br i1 %1919, label %1920, label %1894, !llvm.loop !544

1920:                                             ; preds = %1894
  %1921 = mul <8 x i32> %1915, %1914
  %1922 = mul <8 x i32> %1916, %1921
  %1923 = mul <8 x i32> %1917, %1922
  %1924 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1923)
  %1925 = icmp eq i64 %1888, %1892
  br i1 %1925, label %1938, label %1926

1926:                                             ; preds = %1879, %1920
  %1927 = phi i64 [ %1882, %1879 ], [ %1893, %1920 ]
  %1928 = phi i32 [ 1, %1879 ], [ %1924, %1920 ]
  br label %1929

1929:                                             ; preds = %1926, %1929
  %1930 = phi i64 [ %1935, %1929 ], [ %1927, %1926 ]
  %1931 = phi i32 [ %1934, %1929 ], [ %1928, %1926 ]
  %1932 = getelementptr inbounds i32, ptr %9, i64 %1930
  %1933 = load i32, ptr %1932, align 4, !tbaa !5
  %1934 = mul nsw i32 %1933, %1931
  %1935 = add nsw i64 %1930, -1
  %1936 = trunc i64 %1930 to i32
  %1937 = icmp sgt i32 %1936, 0
  br i1 %1937, label %1929, label %1938, !llvm.loop !545

1938:                                             ; preds = %1929, %1920
  %1939 = phi i32 [ %1924, %1920 ], [ %1934, %1929 ]
  %1940 = and i64 %1889, 4294967295
  %1941 = getelementptr inbounds i32, ptr %6, i64 %1940
  %1942 = load i32, ptr %1941, align 4, !tbaa !5
  %1943 = mul nsw i32 %1942, %1939
  %1944 = add nsw i32 %1943, %1883
  %1945 = icmp sgt i64 %1881, 2
  %1946 = add nsw i64 %1882, -1
  %1947 = add i32 %1880, 1
  br i1 %1945, label %1879, label %1948, !llvm.loop !546

1948:                                             ; preds = %1938, %1874
  %1949 = phi i32 [ %1878, %1874 ], [ %1944, %1938 ]
  %1950 = sext i32 %1949 to i64
  %1951 = getelementptr inbounds double, ptr %2, i64 %1950
  %1952 = load double, ptr %1951, align 8, !tbaa !18
  %1953 = getelementptr inbounds i16, ptr %1842, i64 %1950
  %1954 = load i16, ptr %1953, align 2, !tbaa !78
  %1955 = fpext float %1875 to double
  %1956 = sitofp i16 %1954 to double
  %1957 = fmul fast double %1952, %1956
  %1958 = fmul fast double %1957, %1957
  %1959 = fadd fast double %1958, %1955
  %1960 = fptrunc double %1959 to float
  %1961 = fadd fast double %1952, %1877
  %1962 = add nuw nsw i32 %1876, 1
  br i1 %1868, label %1963, label %2010

1963:                                             ; preds = %1948
  %1964 = load i32, ptr %4, align 4, !tbaa !5
  %1965 = load i32, ptr %12, align 4, !tbaa !5
  %1966 = add nsw i32 %1965, -1
  %1967 = icmp slt i32 %1964, %1966
  br i1 %1967, label %1987, label %1968

1968:                                             ; preds = %1963
  %1969 = icmp eq i32 %1964, %1966
  br i1 %1969, label %1970, label %2003

1970:                                             ; preds = %1968
  store i32 0, ptr %4, align 4, !tbaa !5
  %1971 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1971, ptr %6, align 4, !tbaa !5
  br i1 %1873, label %2010, label %1972

1972:                                             ; preds = %1970, %1997
  %1973 = phi i64 [ %2001, %1997 ], [ 1, %1970 ]
  %1974 = getelementptr inbounds i32, ptr %4, i64 %1973
  %1975 = load i32, ptr %1974, align 4, !tbaa !5
  %1976 = getelementptr inbounds i32, ptr %12, i64 %1973
  %1977 = load i32, ptr %1976, align 4, !tbaa !5
  %1978 = add nsw i32 %1977, -1
  %1979 = icmp slt i32 %1975, %1978
  br i1 %1979, label %1980, label %1995

1980:                                             ; preds = %1972
  br i1 %1967, label %1987, label %1981

1981:                                             ; preds = %1980
  %1982 = getelementptr inbounds i32, ptr %7, i64 %1973
  %1983 = load i32, ptr %1982, align 4, !tbaa !5
  %1984 = getelementptr inbounds i32, ptr %6, i64 %1973
  %1985 = load i32, ptr %1984, align 4, !tbaa !5
  %1986 = add nsw i32 %1985, %1983
  store i32 %1986, ptr %1984, align 4, !tbaa !5
  br label %2005

1987:                                             ; preds = %1963, %1980
  %1988 = phi i32 [ %1975, %1980 ], [ %1964, %1963 ]
  %1989 = phi ptr [ %1974, %1980 ], [ %4, %1963 ]
  %1990 = phi i64 [ %1973, %1980 ], [ 0, %1963 ]
  %1991 = add nsw i32 %1988, 1
  store i32 %1991, ptr %1989, align 4, !tbaa !5
  %1992 = getelementptr inbounds i32, ptr %7, i64 %1990
  %1993 = load i32, ptr %1992, align 4, !tbaa !5
  %1994 = getelementptr inbounds i32, ptr %6, i64 %1990
  br label %2005

1995:                                             ; preds = %1972
  %1996 = icmp eq i32 %1975, %1978
  br i1 %1996, label %1997, label %2003

1997:                                             ; preds = %1995
  store i32 0, ptr %1974, align 4, !tbaa !5
  %1998 = getelementptr inbounds i32, ptr %8, i64 %1973
  %1999 = load i32, ptr %1998, align 4, !tbaa !5
  %2000 = getelementptr inbounds i32, ptr %6, i64 %1973
  store i32 %1999, ptr %2000, align 4, !tbaa !5
  %2001 = add nuw nsw i64 %1973, 1
  %2002 = icmp eq i64 %2001, %1871
  br i1 %2002, label %2010, label %1972, !llvm.loop !547

2003:                                             ; preds = %1968, %1995
  store float %1960, ptr %1844, align 4, !tbaa !162
  %2004 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 917, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

2005:                                             ; preds = %1981, %1987
  %2006 = phi ptr [ %1994, %1987 ], [ %1974, %1981 ]
  %2007 = phi i32 [ %1993, %1987 ], [ 1, %1981 ]
  %2008 = load i32, ptr %2006, align 4, !tbaa !5
  %2009 = add nsw i32 %2008, %2007
  store i32 %2009, ptr %2006, align 4, !tbaa !5
  br label %2010

2010:                                             ; preds = %1997, %2005, %1970, %1948
  %2011 = icmp eq i32 %1962, %5
  br i1 %2011, label %3053, label %1874, !llvm.loop !548

2012:                                             ; preds = %1857, %2150
  %2013 = phi float [ 0.000000e+00, %1857 ], [ %2098, %2150 ]
  %2014 = phi i32 [ 0, %1857 ], [ %2099, %2150 ]
  %2015 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1858, label %2016, label %2085

2016:                                             ; preds = %2012, %2075
  %2017 = phi i32 [ %2084, %2075 ], [ 0, %2012 ]
  %2018 = phi i64 [ %2026, %2075 ], [ %1862, %2012 ]
  %2019 = phi i64 [ %2083, %2075 ], [ %1861, %2012 ]
  %2020 = phi i32 [ %2081, %2075 ], [ %2015, %2012 ]
  %2021 = sub i32 %1860, %2017
  %2022 = tail call i32 @llvm.smin.i32(i32 %2021, i32 0)
  %2023 = sub i32 %2021, %2022
  %2024 = zext i32 %2023 to i64
  %2025 = add nuw nsw i64 %2024, 1
  %2026 = add nsw i64 %2018, -1
  %2027 = icmp ult i32 %2023, 31
  br i1 %2027, label %2063, label %2028

2028:                                             ; preds = %2016
  %2029 = and i64 %2025, 8589934560
  %2030 = sub i64 %2019, %2029
  br label %2031

2031:                                             ; preds = %2031, %2028
  %2032 = phi i64 [ 0, %2028 ], [ %2055, %2031 ]
  %2033 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2028 ], [ %2051, %2031 ]
  %2034 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2028 ], [ %2052, %2031 ]
  %2035 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2028 ], [ %2053, %2031 ]
  %2036 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2028 ], [ %2054, %2031 ]
  %2037 = sub i64 %2019, %2032
  %2038 = getelementptr inbounds i32, ptr %11, i64 %2037
  %2039 = getelementptr inbounds i32, ptr %2038, i64 -7
  %2040 = load <8 x i32>, ptr %2039, align 4, !tbaa !5
  %2041 = shufflevector <8 x i32> %2040, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2042 = getelementptr inbounds i32, ptr %2038, i64 -15
  %2043 = load <8 x i32>, ptr %2042, align 4, !tbaa !5
  %2044 = shufflevector <8 x i32> %2043, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2045 = getelementptr inbounds i32, ptr %2038, i64 -23
  %2046 = load <8 x i32>, ptr %2045, align 4, !tbaa !5
  %2047 = shufflevector <8 x i32> %2046, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2048 = getelementptr inbounds i32, ptr %2038, i64 -31
  %2049 = load <8 x i32>, ptr %2048, align 4, !tbaa !5
  %2050 = shufflevector <8 x i32> %2049, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2051 = mul <8 x i32> %2041, %2033
  %2052 = mul <8 x i32> %2044, %2034
  %2053 = mul <8 x i32> %2047, %2035
  %2054 = mul <8 x i32> %2050, %2036
  %2055 = add nuw i64 %2032, 32
  %2056 = icmp eq i64 %2055, %2029
  br i1 %2056, label %2057, label %2031, !llvm.loop !549

2057:                                             ; preds = %2031
  %2058 = mul <8 x i32> %2052, %2051
  %2059 = mul <8 x i32> %2053, %2058
  %2060 = mul <8 x i32> %2054, %2059
  %2061 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2060)
  %2062 = icmp eq i64 %2025, %2029
  br i1 %2062, label %2075, label %2063

2063:                                             ; preds = %2016, %2057
  %2064 = phi i64 [ %2019, %2016 ], [ %2030, %2057 ]
  %2065 = phi i32 [ 1, %2016 ], [ %2061, %2057 ]
  br label %2066

2066:                                             ; preds = %2063, %2066
  %2067 = phi i64 [ %2072, %2066 ], [ %2064, %2063 ]
  %2068 = phi i32 [ %2071, %2066 ], [ %2065, %2063 ]
  %2069 = getelementptr inbounds i32, ptr %11, i64 %2067
  %2070 = load i32, ptr %2069, align 4, !tbaa !5
  %2071 = mul nsw i32 %2070, %2068
  %2072 = add nsw i64 %2067, -1
  %2073 = trunc i64 %2067 to i32
  %2074 = icmp sgt i32 %2073, 0
  br i1 %2074, label %2066, label %2075, !llvm.loop !550

2075:                                             ; preds = %2066, %2057
  %2076 = phi i32 [ %2061, %2057 ], [ %2071, %2066 ]
  %2077 = and i64 %2026, 4294967295
  %2078 = getelementptr inbounds i32, ptr %6, i64 %2077
  %2079 = load i32, ptr %2078, align 4, !tbaa !5
  %2080 = mul nsw i32 %2079, %2076
  %2081 = add nsw i32 %2080, %2020
  %2082 = icmp sgt i64 %2018, 2
  %2083 = add nsw i64 %2019, -1
  %2084 = add i32 %2017, 1
  br i1 %2082, label %2016, label %2085, !llvm.loop !551

2085:                                             ; preds = %2075, %2012
  %2086 = phi i32 [ %2015, %2012 ], [ %2081, %2075 ]
  %2087 = icmp slt i32 %2086, %5
  br i1 %2087, label %2090, label %2088

2088:                                             ; preds = %2085
  %2089 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 917, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3061

2090:                                             ; preds = %2085
  %2091 = sext i32 %2086 to i64
  %2092 = getelementptr inbounds i16, ptr %1842, i64 %2091
  %2093 = load i16, ptr %2092, align 2, !tbaa !78
  %2094 = fpext float %2013 to double
  %2095 = sitofp i16 %2093 to double
  %2096 = fmul fast double %2095, %2095
  %2097 = fadd fast double %2096, %2094
  %2098 = fptrunc double %2097 to float
  store float %2098, ptr %1844, align 4, !tbaa !162
  %2099 = add nuw nsw i32 %2014, 1
  br i1 %1859, label %2100, label %2150

2100:                                             ; preds = %2090
  %2101 = load i32, ptr %4, align 4, !tbaa !5
  %2102 = load i32, ptr %12, align 4, !tbaa !5
  %2103 = add nsw i32 %2102, -1
  %2104 = icmp slt i32 %2101, %2103
  br i1 %2104, label %2127, label %2105

2105:                                             ; preds = %2100
  %2106 = icmp eq i32 %2101, %2103
  br i1 %2106, label %2107, label %2143

2107:                                             ; preds = %2105
  store i32 0, ptr %4, align 4, !tbaa !5
  %2108 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2108, ptr %6, align 4, !tbaa !5
  br i1 %1864, label %2150, label %2109

2109:                                             ; preds = %2107, %2137
  %2110 = phi i64 [ %2141, %2137 ], [ 1, %2107 ]
  %2111 = getelementptr inbounds i32, ptr %4, i64 %2110
  %2112 = load i32, ptr %2111, align 4, !tbaa !5
  %2113 = getelementptr inbounds i32, ptr %12, i64 %2110
  %2114 = load i32, ptr %2113, align 4, !tbaa !5
  %2115 = add nsw i32 %2114, -1
  %2116 = icmp slt i32 %2112, %2115
  br i1 %2116, label %2117, label %2135

2117:                                             ; preds = %2109
  br i1 %2104, label %2127, label %2118

2118:                                             ; preds = %2117
  %2119 = shl i64 %2110, 32
  %2120 = add i64 %2119, -4294967296
  %2121 = ashr exact i64 %2120, 32
  %2122 = getelementptr inbounds i32, ptr %7, i64 %2121
  %2123 = load i32, ptr %2122, align 4, !tbaa !5
  %2124 = getelementptr inbounds i32, ptr %6, i64 %2110
  %2125 = load i32, ptr %2124, align 4, !tbaa !5
  %2126 = add nsw i32 %2125, %2123
  store i32 %2126, ptr %2124, align 4, !tbaa !5
  br label %2145

2127:                                             ; preds = %2100, %2117
  %2128 = phi i32 [ %2112, %2117 ], [ %2101, %2100 ]
  %2129 = phi ptr [ %2111, %2117 ], [ %4, %2100 ]
  %2130 = phi i64 [ %2110, %2117 ], [ 0, %2100 ]
  %2131 = add nsw i32 %2128, 1
  store i32 %2131, ptr %2129, align 4, !tbaa !5
  %2132 = getelementptr inbounds i32, ptr %7, i64 %2130
  %2133 = load i32, ptr %2132, align 4, !tbaa !5
  %2134 = getelementptr inbounds i32, ptr %6, i64 %2130
  br label %2145

2135:                                             ; preds = %2109
  %2136 = icmp eq i32 %2112, %2115
  br i1 %2136, label %2137, label %2143

2137:                                             ; preds = %2135
  store i32 0, ptr %2111, align 4, !tbaa !5
  %2138 = getelementptr inbounds i32, ptr %8, i64 %2110
  %2139 = load i32, ptr %2138, align 4, !tbaa !5
  %2140 = getelementptr inbounds i32, ptr %6, i64 %2110
  store i32 %2139, ptr %2140, align 4, !tbaa !5
  %2141 = add nuw nsw i64 %2110, 1
  %2142 = icmp eq i64 %2141, %1862
  br i1 %2142, label %2150, label %2109, !llvm.loop !552

2143:                                             ; preds = %2105, %2135
  %2144 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 917, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

2145:                                             ; preds = %2118, %2127
  %2146 = phi ptr [ %2134, %2127 ], [ %2111, %2118 ]
  %2147 = phi i32 [ %2133, %2127 ], [ 1, %2118 ]
  %2148 = load i32, ptr %2146, align 4, !tbaa !5
  %2149 = add nsw i32 %2148, %2147
  store i32 %2149, ptr %2146, align 4, !tbaa !5
  br label %2150

2150:                                             ; preds = %2137, %2145, %2107, %2090
  %2151 = icmp eq i32 %2099, %5
  br i1 %2151, label %3056, label %2012, !llvm.loop !553

2152:                                             ; preds = %1850
  %2153 = getelementptr inbounds i32, ptr %3, i64 %19
  %2154 = load i32, ptr %2153, align 4, !tbaa !5
  %2155 = icmp eq i32 %2154, 0
  %2156 = icmp sgt i32 %5, 0
  br i1 %2155, label %2166, label %2157

2157:                                             ; preds = %2152
  br i1 %2156, label %2158, label %3056

2158:                                             ; preds = %2157
  %2159 = icmp sgt i32 %13, 1
  %2160 = icmp sgt i32 %13, 0
  %2161 = add i32 %13, -2
  %2162 = zext i32 %2161 to i64
  %2163 = zext i32 %13 to i64
  %2164 = add nuw i32 %5, 1
  %2165 = icmp eq i32 %13, 1
  br label %2308

2166:                                             ; preds = %2152
  br i1 %2156, label %2167, label %3056

2167:                                             ; preds = %2166
  %2168 = icmp sgt i32 %13, 1
  %2169 = icmp sgt i32 %13, 0
  %2170 = add i32 %13, -2
  %2171 = zext i32 %2170 to i64
  %2172 = zext i32 %13 to i64
  %2173 = add nuw i32 %5, 1
  %2174 = icmp eq i32 %13, 1
  br label %2175

2175:                                             ; preds = %2167, %2306
  %2176 = phi float [ 0.000000e+00, %2167 ], [ %2256, %2306 ]
  %2177 = phi i32 [ 0, %2167 ], [ %2258, %2306 ]
  %2178 = phi double [ 0.000000e+00, %2167 ], [ %2257, %2306 ]
  %2179 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2168, label %2180, label %2249

2180:                                             ; preds = %2175, %2239
  %2181 = phi i32 [ %2248, %2239 ], [ 0, %2175 ]
  %2182 = phi i64 [ %2190, %2239 ], [ %2172, %2175 ]
  %2183 = phi i64 [ %2247, %2239 ], [ %2171, %2175 ]
  %2184 = phi i32 [ %2245, %2239 ], [ %2179, %2175 ]
  %2185 = sub i32 %2170, %2181
  %2186 = tail call i32 @llvm.smin.i32(i32 %2185, i32 0)
  %2187 = sub i32 %2185, %2186
  %2188 = zext i32 %2187 to i64
  %2189 = add nuw nsw i64 %2188, 1
  %2190 = add nsw i64 %2182, -1
  %2191 = icmp ult i32 %2187, 31
  br i1 %2191, label %2227, label %2192

2192:                                             ; preds = %2180
  %2193 = and i64 %2189, 8589934560
  %2194 = sub i64 %2183, %2193
  br label %2195

2195:                                             ; preds = %2195, %2192
  %2196 = phi i64 [ 0, %2192 ], [ %2219, %2195 ]
  %2197 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2192 ], [ %2215, %2195 ]
  %2198 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2192 ], [ %2216, %2195 ]
  %2199 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2192 ], [ %2217, %2195 ]
  %2200 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2192 ], [ %2218, %2195 ]
  %2201 = sub i64 %2183, %2196
  %2202 = getelementptr inbounds i32, ptr %9, i64 %2201
  %2203 = getelementptr inbounds i32, ptr %2202, i64 -7
  %2204 = load <8 x i32>, ptr %2203, align 4, !tbaa !5
  %2205 = shufflevector <8 x i32> %2204, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2206 = getelementptr inbounds i32, ptr %2202, i64 -15
  %2207 = load <8 x i32>, ptr %2206, align 4, !tbaa !5
  %2208 = shufflevector <8 x i32> %2207, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2209 = getelementptr inbounds i32, ptr %2202, i64 -23
  %2210 = load <8 x i32>, ptr %2209, align 4, !tbaa !5
  %2211 = shufflevector <8 x i32> %2210, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2212 = getelementptr inbounds i32, ptr %2202, i64 -31
  %2213 = load <8 x i32>, ptr %2212, align 4, !tbaa !5
  %2214 = shufflevector <8 x i32> %2213, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2215 = mul <8 x i32> %2205, %2197
  %2216 = mul <8 x i32> %2208, %2198
  %2217 = mul <8 x i32> %2211, %2199
  %2218 = mul <8 x i32> %2214, %2200
  %2219 = add nuw i64 %2196, 32
  %2220 = icmp eq i64 %2219, %2193
  br i1 %2220, label %2221, label %2195, !llvm.loop !554

2221:                                             ; preds = %2195
  %2222 = mul <8 x i32> %2216, %2215
  %2223 = mul <8 x i32> %2217, %2222
  %2224 = mul <8 x i32> %2218, %2223
  %2225 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2224)
  %2226 = icmp eq i64 %2189, %2193
  br i1 %2226, label %2239, label %2227

2227:                                             ; preds = %2180, %2221
  %2228 = phi i64 [ %2183, %2180 ], [ %2194, %2221 ]
  %2229 = phi i32 [ 1, %2180 ], [ %2225, %2221 ]
  br label %2230

2230:                                             ; preds = %2227, %2230
  %2231 = phi i64 [ %2236, %2230 ], [ %2228, %2227 ]
  %2232 = phi i32 [ %2235, %2230 ], [ %2229, %2227 ]
  %2233 = getelementptr inbounds i32, ptr %9, i64 %2231
  %2234 = load i32, ptr %2233, align 4, !tbaa !5
  %2235 = mul nsw i32 %2234, %2232
  %2236 = add nsw i64 %2231, -1
  %2237 = trunc i64 %2231 to i32
  %2238 = icmp sgt i32 %2237, 0
  br i1 %2238, label %2230, label %2239, !llvm.loop !555

2239:                                             ; preds = %2230, %2221
  %2240 = phi i32 [ %2225, %2221 ], [ %2235, %2230 ]
  %2241 = and i64 %2190, 4294967295
  %2242 = getelementptr inbounds i32, ptr %6, i64 %2241
  %2243 = load i32, ptr %2242, align 4, !tbaa !5
  %2244 = mul nsw i32 %2243, %2240
  %2245 = add nsw i32 %2244, %2184
  %2246 = icmp sgt i64 %2182, 2
  %2247 = add nsw i64 %2183, -1
  %2248 = add i32 %2181, 1
  br i1 %2246, label %2180, label %2249, !llvm.loop !556

2249:                                             ; preds = %2239, %2175
  %2250 = phi i32 [ %2179, %2175 ], [ %2245, %2239 ]
  %2251 = sext i32 %2250 to i64
  %2252 = getelementptr inbounds i16, ptr %1842, i64 %2251
  %2253 = load i16, ptr %2252, align 2, !tbaa !78
  %2254 = sitofp i16 %2253 to float
  %2255 = fmul fast float %2254, %2254
  %2256 = fadd fast float %2255, %2176
  %2257 = fadd fast double %2178, 1.000000e+00
  %2258 = add nuw nsw i32 %2177, 1
  br i1 %2169, label %2259, label %2306

2259:                                             ; preds = %2249
  %2260 = load i32, ptr %4, align 4, !tbaa !5
  %2261 = load i32, ptr %12, align 4, !tbaa !5
  %2262 = add nsw i32 %2261, -1
  %2263 = icmp slt i32 %2260, %2262
  br i1 %2263, label %2283, label %2264

2264:                                             ; preds = %2259
  %2265 = icmp eq i32 %2260, %2262
  br i1 %2265, label %2266, label %2299

2266:                                             ; preds = %2264
  store i32 0, ptr %4, align 4, !tbaa !5
  %2267 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2267, ptr %6, align 4, !tbaa !5
  br i1 %2174, label %2306, label %2268

2268:                                             ; preds = %2266, %2293
  %2269 = phi i64 [ %2297, %2293 ], [ 1, %2266 ]
  %2270 = getelementptr inbounds i32, ptr %4, i64 %2269
  %2271 = load i32, ptr %2270, align 4, !tbaa !5
  %2272 = getelementptr inbounds i32, ptr %12, i64 %2269
  %2273 = load i32, ptr %2272, align 4, !tbaa !5
  %2274 = add nsw i32 %2273, -1
  %2275 = icmp slt i32 %2271, %2274
  br i1 %2275, label %2276, label %2291

2276:                                             ; preds = %2268
  br i1 %2263, label %2283, label %2277

2277:                                             ; preds = %2276
  %2278 = getelementptr inbounds i32, ptr %7, i64 %2269
  %2279 = load i32, ptr %2278, align 4, !tbaa !5
  %2280 = getelementptr inbounds i32, ptr %6, i64 %2269
  %2281 = load i32, ptr %2280, align 4, !tbaa !5
  %2282 = add nsw i32 %2281, %2279
  store i32 %2282, ptr %2280, align 4, !tbaa !5
  br label %2301

2283:                                             ; preds = %2259, %2276
  %2284 = phi i32 [ %2271, %2276 ], [ %2260, %2259 ]
  %2285 = phi ptr [ %2270, %2276 ], [ %4, %2259 ]
  %2286 = phi i64 [ %2269, %2276 ], [ 0, %2259 ]
  %2287 = add nsw i32 %2284, 1
  store i32 %2287, ptr %2285, align 4, !tbaa !5
  %2288 = getelementptr inbounds i32, ptr %7, i64 %2286
  %2289 = load i32, ptr %2288, align 4, !tbaa !5
  %2290 = getelementptr inbounds i32, ptr %6, i64 %2286
  br label %2301

2291:                                             ; preds = %2268
  %2292 = icmp eq i32 %2271, %2274
  br i1 %2292, label %2293, label %2299

2293:                                             ; preds = %2291
  store i32 0, ptr %2270, align 4, !tbaa !5
  %2294 = getelementptr inbounds i32, ptr %8, i64 %2269
  %2295 = load i32, ptr %2294, align 4, !tbaa !5
  %2296 = getelementptr inbounds i32, ptr %6, i64 %2269
  store i32 %2295, ptr %2296, align 4, !tbaa !5
  %2297 = add nuw nsw i64 %2269, 1
  %2298 = icmp eq i64 %2297, %2172
  br i1 %2298, label %2306, label %2268, !llvm.loop !557

2299:                                             ; preds = %2264, %2291
  store float %2256, ptr %1844, align 4, !tbaa !162
  %2300 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 917, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

2301:                                             ; preds = %2277, %2283
  %2302 = phi ptr [ %2290, %2283 ], [ %2270, %2277 ]
  %2303 = phi i32 [ %2289, %2283 ], [ 1, %2277 ]
  %2304 = load i32, ptr %2302, align 4, !tbaa !5
  %2305 = add nsw i32 %2304, %2303
  store i32 %2305, ptr %2302, align 4, !tbaa !5
  br label %2306

2306:                                             ; preds = %2293, %2301, %2266, %2249
  %2307 = icmp eq i32 %2258, %5
  br i1 %2307, label %3054, label %2175, !llvm.loop !558

2308:                                             ; preds = %2158, %2444
  %2309 = phi float [ 0.000000e+00, %2158 ], [ %2392, %2444 ]
  %2310 = phi i32 [ 0, %2158 ], [ %2393, %2444 ]
  %2311 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2159, label %2312, label %2381

2312:                                             ; preds = %2308, %2371
  %2313 = phi i32 [ %2380, %2371 ], [ 0, %2308 ]
  %2314 = phi i64 [ %2322, %2371 ], [ %2163, %2308 ]
  %2315 = phi i64 [ %2379, %2371 ], [ %2162, %2308 ]
  %2316 = phi i32 [ %2377, %2371 ], [ %2311, %2308 ]
  %2317 = sub i32 %2161, %2313
  %2318 = tail call i32 @llvm.smin.i32(i32 %2317, i32 0)
  %2319 = sub i32 %2317, %2318
  %2320 = zext i32 %2319 to i64
  %2321 = add nuw nsw i64 %2320, 1
  %2322 = add nsw i64 %2314, -1
  %2323 = icmp ult i32 %2319, 31
  br i1 %2323, label %2359, label %2324

2324:                                             ; preds = %2312
  %2325 = and i64 %2321, 8589934560
  %2326 = sub i64 %2315, %2325
  br label %2327

2327:                                             ; preds = %2327, %2324
  %2328 = phi i64 [ 0, %2324 ], [ %2351, %2327 ]
  %2329 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2324 ], [ %2347, %2327 ]
  %2330 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2324 ], [ %2348, %2327 ]
  %2331 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2324 ], [ %2349, %2327 ]
  %2332 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2324 ], [ %2350, %2327 ]
  %2333 = sub i64 %2315, %2328
  %2334 = getelementptr inbounds i32, ptr %11, i64 %2333
  %2335 = getelementptr inbounds i32, ptr %2334, i64 -7
  %2336 = load <8 x i32>, ptr %2335, align 4, !tbaa !5
  %2337 = shufflevector <8 x i32> %2336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2338 = getelementptr inbounds i32, ptr %2334, i64 -15
  %2339 = load <8 x i32>, ptr %2338, align 4, !tbaa !5
  %2340 = shufflevector <8 x i32> %2339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2341 = getelementptr inbounds i32, ptr %2334, i64 -23
  %2342 = load <8 x i32>, ptr %2341, align 4, !tbaa !5
  %2343 = shufflevector <8 x i32> %2342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2344 = getelementptr inbounds i32, ptr %2334, i64 -31
  %2345 = load <8 x i32>, ptr %2344, align 4, !tbaa !5
  %2346 = shufflevector <8 x i32> %2345, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2347 = mul <8 x i32> %2337, %2329
  %2348 = mul <8 x i32> %2340, %2330
  %2349 = mul <8 x i32> %2343, %2331
  %2350 = mul <8 x i32> %2346, %2332
  %2351 = add nuw i64 %2328, 32
  %2352 = icmp eq i64 %2351, %2325
  br i1 %2352, label %2353, label %2327, !llvm.loop !559

2353:                                             ; preds = %2327
  %2354 = mul <8 x i32> %2348, %2347
  %2355 = mul <8 x i32> %2349, %2354
  %2356 = mul <8 x i32> %2350, %2355
  %2357 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2356)
  %2358 = icmp eq i64 %2321, %2325
  br i1 %2358, label %2371, label %2359

2359:                                             ; preds = %2312, %2353
  %2360 = phi i64 [ %2315, %2312 ], [ %2326, %2353 ]
  %2361 = phi i32 [ 1, %2312 ], [ %2357, %2353 ]
  br label %2362

2362:                                             ; preds = %2359, %2362
  %2363 = phi i64 [ %2368, %2362 ], [ %2360, %2359 ]
  %2364 = phi i32 [ %2367, %2362 ], [ %2361, %2359 ]
  %2365 = getelementptr inbounds i32, ptr %11, i64 %2363
  %2366 = load i32, ptr %2365, align 4, !tbaa !5
  %2367 = mul nsw i32 %2366, %2364
  %2368 = add nsw i64 %2363, -1
  %2369 = trunc i64 %2363 to i32
  %2370 = icmp sgt i32 %2369, 0
  br i1 %2370, label %2362, label %2371, !llvm.loop !560

2371:                                             ; preds = %2362, %2353
  %2372 = phi i32 [ %2357, %2353 ], [ %2367, %2362 ]
  %2373 = and i64 %2322, 4294967295
  %2374 = getelementptr inbounds i32, ptr %6, i64 %2373
  %2375 = load i32, ptr %2374, align 4, !tbaa !5
  %2376 = mul nsw i32 %2375, %2372
  %2377 = add nsw i32 %2376, %2316
  %2378 = icmp sgt i64 %2314, 2
  %2379 = add nsw i64 %2315, -1
  %2380 = add i32 %2313, 1
  br i1 %2378, label %2312, label %2381, !llvm.loop !561

2381:                                             ; preds = %2371, %2308
  %2382 = phi i32 [ %2311, %2308 ], [ %2377, %2371 ]
  %2383 = icmp slt i32 %2382, %5
  br i1 %2383, label %2386, label %2384

2384:                                             ; preds = %2381
  %2385 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 917, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3061

2386:                                             ; preds = %2381
  %2387 = sext i32 %2382 to i64
  %2388 = getelementptr inbounds i16, ptr %1842, i64 %2387
  %2389 = load i16, ptr %2388, align 2, !tbaa !78
  %2390 = sitofp i16 %2389 to float
  %2391 = fmul fast float %2390, %2390
  %2392 = fadd fast float %2391, %2309
  store float %2392, ptr %1844, align 4, !tbaa !162
  %2393 = add nuw nsw i32 %2310, 1
  br i1 %2160, label %2394, label %2444

2394:                                             ; preds = %2386
  %2395 = load i32, ptr %4, align 4, !tbaa !5
  %2396 = load i32, ptr %12, align 4, !tbaa !5
  %2397 = add nsw i32 %2396, -1
  %2398 = icmp slt i32 %2395, %2397
  br i1 %2398, label %2421, label %2399

2399:                                             ; preds = %2394
  %2400 = icmp eq i32 %2395, %2397
  br i1 %2400, label %2401, label %2437

2401:                                             ; preds = %2399
  store i32 0, ptr %4, align 4, !tbaa !5
  %2402 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2402, ptr %6, align 4, !tbaa !5
  br i1 %2165, label %2444, label %2403

2403:                                             ; preds = %2401, %2431
  %2404 = phi i64 [ %2435, %2431 ], [ 1, %2401 ]
  %2405 = getelementptr inbounds i32, ptr %4, i64 %2404
  %2406 = load i32, ptr %2405, align 4, !tbaa !5
  %2407 = getelementptr inbounds i32, ptr %12, i64 %2404
  %2408 = load i32, ptr %2407, align 4, !tbaa !5
  %2409 = add nsw i32 %2408, -1
  %2410 = icmp slt i32 %2406, %2409
  br i1 %2410, label %2411, label %2429

2411:                                             ; preds = %2403
  br i1 %2398, label %2421, label %2412

2412:                                             ; preds = %2411
  %2413 = shl i64 %2404, 32
  %2414 = add i64 %2413, -4294967296
  %2415 = ashr exact i64 %2414, 32
  %2416 = getelementptr inbounds i32, ptr %7, i64 %2415
  %2417 = load i32, ptr %2416, align 4, !tbaa !5
  %2418 = getelementptr inbounds i32, ptr %6, i64 %2404
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = add nsw i32 %2419, %2417
  store i32 %2420, ptr %2418, align 4, !tbaa !5
  br label %2439

2421:                                             ; preds = %2394, %2411
  %2422 = phi i32 [ %2406, %2411 ], [ %2395, %2394 ]
  %2423 = phi ptr [ %2405, %2411 ], [ %4, %2394 ]
  %2424 = phi i64 [ %2404, %2411 ], [ 0, %2394 ]
  %2425 = add nsw i32 %2422, 1
  store i32 %2425, ptr %2423, align 4, !tbaa !5
  %2426 = getelementptr inbounds i32, ptr %7, i64 %2424
  %2427 = load i32, ptr %2426, align 4, !tbaa !5
  %2428 = getelementptr inbounds i32, ptr %6, i64 %2424
  br label %2439

2429:                                             ; preds = %2403
  %2430 = icmp eq i32 %2406, %2409
  br i1 %2430, label %2431, label %2437

2431:                                             ; preds = %2429
  store i32 0, ptr %2405, align 4, !tbaa !5
  %2432 = getelementptr inbounds i32, ptr %8, i64 %2404
  %2433 = load i32, ptr %2432, align 4, !tbaa !5
  %2434 = getelementptr inbounds i32, ptr %6, i64 %2404
  store i32 %2433, ptr %2434, align 4, !tbaa !5
  %2435 = add nuw nsw i64 %2404, 1
  %2436 = icmp eq i64 %2435, %2163
  br i1 %2436, label %2444, label %2403, !llvm.loop !562

2437:                                             ; preds = %2399, %2429
  %2438 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 917, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

2439:                                             ; preds = %2412, %2421
  %2440 = phi ptr [ %2428, %2421 ], [ %2405, %2412 ]
  %2441 = phi i32 [ %2427, %2421 ], [ 1, %2412 ]
  %2442 = load i32, ptr %2440, align 4, !tbaa !5
  %2443 = add nsw i32 %2442, %2441
  store i32 %2443, ptr %2440, align 4, !tbaa !5
  br label %2444

2444:                                             ; preds = %2431, %2439, %2401, %2386
  %2445 = icmp eq i32 %2393, %5
  br i1 %2445, label %3056, label %2308, !llvm.loop !563

2446:                                             ; preds = %1850
  %2447 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 917, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3056

2448:                                             ; preds = %18
  %2449 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2450 = load ptr, ptr %2449, align 8, !tbaa !9
  %2451 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2452 = load ptr, ptr %2451, align 8, !tbaa !9
  store double 0.000000e+00, ptr %2452, align 8, !tbaa !18
  %2453 = icmp eq i32 %13, 0
  br i1 %2453, label %2454, label %2458

2454:                                             ; preds = %2448
  %2455 = load i16, ptr %2450, align 2, !tbaa !78
  %2456 = sitofp i16 %2455 to double
  %2457 = fmul fast double %2456, %2456
  store double %2457, ptr %2452, align 8, !tbaa !18
  br label %3056

2458:                                             ; preds = %2448
  switch i32 %1, label %3050 [
    i32 1, label %2459
    i32 0, label %2756
  ]

2459:                                             ; preds = %2458
  %2460 = getelementptr inbounds i32, ptr %3, i64 %19
  %2461 = load i32, ptr %2460, align 4, !tbaa !5
  %2462 = icmp eq i32 %2461, 0
  %2463 = icmp sgt i32 %5, 0
  br i1 %2462, label %2473, label %2464

2464:                                             ; preds = %2459
  br i1 %2463, label %2465, label %3056

2465:                                             ; preds = %2464
  %2466 = icmp sgt i32 %13, 1
  %2467 = icmp sgt i32 %13, 0
  %2468 = add i32 %13, -2
  %2469 = zext i32 %2468 to i64
  %2470 = zext i32 %13 to i64
  %2471 = add nuw i32 %5, 1
  %2472 = icmp eq i32 %13, 1
  br label %2618

2473:                                             ; preds = %2459
  br i1 %2463, label %2474, label %3056

2474:                                             ; preds = %2473
  %2475 = icmp sgt i32 %13, 1
  %2476 = icmp sgt i32 %13, 0
  %2477 = add i32 %13, -2
  %2478 = zext i32 %2477 to i64
  %2479 = zext i32 %13 to i64
  %2480 = add nuw i32 %5, 1
  %2481 = icmp eq i32 %13, 1
  br label %2482

2482:                                             ; preds = %2474, %2616
  %2483 = phi double [ 0.000000e+00, %2474 ], [ %2566, %2616 ]
  %2484 = phi i32 [ 0, %2474 ], [ %2568, %2616 ]
  %2485 = phi double [ 0.000000e+00, %2474 ], [ %2567, %2616 ]
  %2486 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2475, label %2487, label %2556

2487:                                             ; preds = %2482, %2546
  %2488 = phi i32 [ %2555, %2546 ], [ 0, %2482 ]
  %2489 = phi i64 [ %2497, %2546 ], [ %2479, %2482 ]
  %2490 = phi i64 [ %2554, %2546 ], [ %2478, %2482 ]
  %2491 = phi i32 [ %2552, %2546 ], [ %2486, %2482 ]
  %2492 = sub i32 %2477, %2488
  %2493 = tail call i32 @llvm.smin.i32(i32 %2492, i32 0)
  %2494 = sub i32 %2492, %2493
  %2495 = zext i32 %2494 to i64
  %2496 = add nuw nsw i64 %2495, 1
  %2497 = add nsw i64 %2489, -1
  %2498 = icmp ult i32 %2494, 31
  br i1 %2498, label %2534, label %2499

2499:                                             ; preds = %2487
  %2500 = and i64 %2496, 8589934560
  %2501 = sub i64 %2490, %2500
  br label %2502

2502:                                             ; preds = %2502, %2499
  %2503 = phi i64 [ 0, %2499 ], [ %2526, %2502 ]
  %2504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2499 ], [ %2522, %2502 ]
  %2505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2499 ], [ %2523, %2502 ]
  %2506 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2499 ], [ %2524, %2502 ]
  %2507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2499 ], [ %2525, %2502 ]
  %2508 = sub i64 %2490, %2503
  %2509 = getelementptr inbounds i32, ptr %9, i64 %2508
  %2510 = getelementptr inbounds i32, ptr %2509, i64 -7
  %2511 = load <8 x i32>, ptr %2510, align 4, !tbaa !5
  %2512 = shufflevector <8 x i32> %2511, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2513 = getelementptr inbounds i32, ptr %2509, i64 -15
  %2514 = load <8 x i32>, ptr %2513, align 4, !tbaa !5
  %2515 = shufflevector <8 x i32> %2514, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2516 = getelementptr inbounds i32, ptr %2509, i64 -23
  %2517 = load <8 x i32>, ptr %2516, align 4, !tbaa !5
  %2518 = shufflevector <8 x i32> %2517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2519 = getelementptr inbounds i32, ptr %2509, i64 -31
  %2520 = load <8 x i32>, ptr %2519, align 4, !tbaa !5
  %2521 = shufflevector <8 x i32> %2520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2522 = mul <8 x i32> %2512, %2504
  %2523 = mul <8 x i32> %2515, %2505
  %2524 = mul <8 x i32> %2518, %2506
  %2525 = mul <8 x i32> %2521, %2507
  %2526 = add nuw i64 %2503, 32
  %2527 = icmp eq i64 %2526, %2500
  br i1 %2527, label %2528, label %2502, !llvm.loop !564

2528:                                             ; preds = %2502
  %2529 = mul <8 x i32> %2523, %2522
  %2530 = mul <8 x i32> %2524, %2529
  %2531 = mul <8 x i32> %2525, %2530
  %2532 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2531)
  %2533 = icmp eq i64 %2496, %2500
  br i1 %2533, label %2546, label %2534

2534:                                             ; preds = %2487, %2528
  %2535 = phi i64 [ %2490, %2487 ], [ %2501, %2528 ]
  %2536 = phi i32 [ 1, %2487 ], [ %2532, %2528 ]
  br label %2537

2537:                                             ; preds = %2534, %2537
  %2538 = phi i64 [ %2543, %2537 ], [ %2535, %2534 ]
  %2539 = phi i32 [ %2542, %2537 ], [ %2536, %2534 ]
  %2540 = getelementptr inbounds i32, ptr %9, i64 %2538
  %2541 = load i32, ptr %2540, align 4, !tbaa !5
  %2542 = mul nsw i32 %2541, %2539
  %2543 = add nsw i64 %2538, -1
  %2544 = trunc i64 %2538 to i32
  %2545 = icmp sgt i32 %2544, 0
  br i1 %2545, label %2537, label %2546, !llvm.loop !565

2546:                                             ; preds = %2537, %2528
  %2547 = phi i32 [ %2532, %2528 ], [ %2542, %2537 ]
  %2548 = and i64 %2497, 4294967295
  %2549 = getelementptr inbounds i32, ptr %6, i64 %2548
  %2550 = load i32, ptr %2549, align 4, !tbaa !5
  %2551 = mul nsw i32 %2550, %2547
  %2552 = add nsw i32 %2551, %2491
  %2553 = icmp sgt i64 %2489, 2
  %2554 = add nsw i64 %2490, -1
  %2555 = add i32 %2488, 1
  br i1 %2553, label %2487, label %2556, !llvm.loop !566

2556:                                             ; preds = %2546, %2482
  %2557 = phi i32 [ %2486, %2482 ], [ %2552, %2546 ]
  %2558 = sext i32 %2557 to i64
  %2559 = getelementptr inbounds double, ptr %2, i64 %2558
  %2560 = load double, ptr %2559, align 8, !tbaa !18
  %2561 = getelementptr inbounds i16, ptr %2450, i64 %2558
  %2562 = load i16, ptr %2561, align 2, !tbaa !78
  %2563 = sitofp i16 %2562 to double
  %2564 = fmul fast double %2560, %2563
  %2565 = fmul fast double %2564, %2564
  %2566 = fadd fast double %2565, %2483
  store double %2566, ptr %2452, align 8, !tbaa !18
  %2567 = fadd fast double %2560, %2485
  %2568 = add nuw nsw i32 %2484, 1
  br i1 %2476, label %2569, label %2616

2569:                                             ; preds = %2556
  %2570 = load i32, ptr %4, align 4, !tbaa !5
  %2571 = load i32, ptr %12, align 4, !tbaa !5
  %2572 = add nsw i32 %2571, -1
  %2573 = icmp slt i32 %2570, %2572
  br i1 %2573, label %2593, label %2574

2574:                                             ; preds = %2569
  %2575 = icmp eq i32 %2570, %2572
  br i1 %2575, label %2576, label %2609

2576:                                             ; preds = %2574
  store i32 0, ptr %4, align 4, !tbaa !5
  %2577 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2577, ptr %6, align 4, !tbaa !5
  br i1 %2481, label %2616, label %2578

2578:                                             ; preds = %2576, %2603
  %2579 = phi i64 [ %2607, %2603 ], [ 1, %2576 ]
  %2580 = getelementptr inbounds i32, ptr %4, i64 %2579
  %2581 = load i32, ptr %2580, align 4, !tbaa !5
  %2582 = getelementptr inbounds i32, ptr %12, i64 %2579
  %2583 = load i32, ptr %2582, align 4, !tbaa !5
  %2584 = add nsw i32 %2583, -1
  %2585 = icmp slt i32 %2581, %2584
  br i1 %2585, label %2586, label %2601

2586:                                             ; preds = %2578
  br i1 %2573, label %2593, label %2587

2587:                                             ; preds = %2586
  %2588 = getelementptr inbounds i32, ptr %7, i64 %2579
  %2589 = load i32, ptr %2588, align 4, !tbaa !5
  %2590 = getelementptr inbounds i32, ptr %6, i64 %2579
  %2591 = load i32, ptr %2590, align 4, !tbaa !5
  %2592 = add nsw i32 %2591, %2589
  store i32 %2592, ptr %2590, align 4, !tbaa !5
  br label %2611

2593:                                             ; preds = %2569, %2586
  %2594 = phi i32 [ %2581, %2586 ], [ %2570, %2569 ]
  %2595 = phi ptr [ %2580, %2586 ], [ %4, %2569 ]
  %2596 = phi i64 [ %2579, %2586 ], [ 0, %2569 ]
  %2597 = add nsw i32 %2594, 1
  store i32 %2597, ptr %2595, align 4, !tbaa !5
  %2598 = getelementptr inbounds i32, ptr %7, i64 %2596
  %2599 = load i32, ptr %2598, align 4, !tbaa !5
  %2600 = getelementptr inbounds i32, ptr %6, i64 %2596
  br label %2611

2601:                                             ; preds = %2578
  %2602 = icmp eq i32 %2581, %2584
  br i1 %2602, label %2603, label %2609

2603:                                             ; preds = %2601
  store i32 0, ptr %2580, align 4, !tbaa !5
  %2604 = getelementptr inbounds i32, ptr %8, i64 %2579
  %2605 = load i32, ptr %2604, align 4, !tbaa !5
  %2606 = getelementptr inbounds i32, ptr %6, i64 %2579
  store i32 %2605, ptr %2606, align 4, !tbaa !5
  %2607 = add nuw nsw i64 %2579, 1
  %2608 = icmp eq i64 %2607, %2479
  br i1 %2608, label %2616, label %2578, !llvm.loop !567

2609:                                             ; preds = %2574, %2601
  %2610 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 922, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

2611:                                             ; preds = %2587, %2593
  %2612 = phi ptr [ %2600, %2593 ], [ %2580, %2587 ]
  %2613 = phi i32 [ %2599, %2593 ], [ 1, %2587 ]
  %2614 = load i32, ptr %2612, align 4, !tbaa !5
  %2615 = add nsw i32 %2614, %2613
  store i32 %2615, ptr %2612, align 4, !tbaa !5
  br label %2616

2616:                                             ; preds = %2603, %2611, %2576, %2556
  %2617 = icmp eq i32 %2568, %5
  br i1 %2617, label %3056, label %2482, !llvm.loop !568

2618:                                             ; preds = %2465, %2754
  %2619 = phi double [ 0.000000e+00, %2465 ], [ %2702, %2754 ]
  %2620 = phi i32 [ 0, %2465 ], [ %2703, %2754 ]
  %2621 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2466, label %2622, label %2691

2622:                                             ; preds = %2618, %2681
  %2623 = phi i32 [ %2690, %2681 ], [ 0, %2618 ]
  %2624 = phi i64 [ %2632, %2681 ], [ %2470, %2618 ]
  %2625 = phi i64 [ %2689, %2681 ], [ %2469, %2618 ]
  %2626 = phi i32 [ %2687, %2681 ], [ %2621, %2618 ]
  %2627 = sub i32 %2468, %2623
  %2628 = tail call i32 @llvm.smin.i32(i32 %2627, i32 0)
  %2629 = sub i32 %2627, %2628
  %2630 = zext i32 %2629 to i64
  %2631 = add nuw nsw i64 %2630, 1
  %2632 = add nsw i64 %2624, -1
  %2633 = icmp ult i32 %2629, 31
  br i1 %2633, label %2669, label %2634

2634:                                             ; preds = %2622
  %2635 = and i64 %2631, 8589934560
  %2636 = sub i64 %2625, %2635
  br label %2637

2637:                                             ; preds = %2637, %2634
  %2638 = phi i64 [ 0, %2634 ], [ %2661, %2637 ]
  %2639 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2634 ], [ %2657, %2637 ]
  %2640 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2634 ], [ %2658, %2637 ]
  %2641 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2634 ], [ %2659, %2637 ]
  %2642 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2634 ], [ %2660, %2637 ]
  %2643 = sub i64 %2625, %2638
  %2644 = getelementptr inbounds i32, ptr %11, i64 %2643
  %2645 = getelementptr inbounds i32, ptr %2644, i64 -7
  %2646 = load <8 x i32>, ptr %2645, align 4, !tbaa !5
  %2647 = shufflevector <8 x i32> %2646, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2648 = getelementptr inbounds i32, ptr %2644, i64 -15
  %2649 = load <8 x i32>, ptr %2648, align 4, !tbaa !5
  %2650 = shufflevector <8 x i32> %2649, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2651 = getelementptr inbounds i32, ptr %2644, i64 -23
  %2652 = load <8 x i32>, ptr %2651, align 4, !tbaa !5
  %2653 = shufflevector <8 x i32> %2652, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2654 = getelementptr inbounds i32, ptr %2644, i64 -31
  %2655 = load <8 x i32>, ptr %2654, align 4, !tbaa !5
  %2656 = shufflevector <8 x i32> %2655, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2657 = mul <8 x i32> %2647, %2639
  %2658 = mul <8 x i32> %2650, %2640
  %2659 = mul <8 x i32> %2653, %2641
  %2660 = mul <8 x i32> %2656, %2642
  %2661 = add nuw i64 %2638, 32
  %2662 = icmp eq i64 %2661, %2635
  br i1 %2662, label %2663, label %2637, !llvm.loop !569

2663:                                             ; preds = %2637
  %2664 = mul <8 x i32> %2658, %2657
  %2665 = mul <8 x i32> %2659, %2664
  %2666 = mul <8 x i32> %2660, %2665
  %2667 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2666)
  %2668 = icmp eq i64 %2631, %2635
  br i1 %2668, label %2681, label %2669

2669:                                             ; preds = %2622, %2663
  %2670 = phi i64 [ %2625, %2622 ], [ %2636, %2663 ]
  %2671 = phi i32 [ 1, %2622 ], [ %2667, %2663 ]
  br label %2672

2672:                                             ; preds = %2669, %2672
  %2673 = phi i64 [ %2678, %2672 ], [ %2670, %2669 ]
  %2674 = phi i32 [ %2677, %2672 ], [ %2671, %2669 ]
  %2675 = getelementptr inbounds i32, ptr %11, i64 %2673
  %2676 = load i32, ptr %2675, align 4, !tbaa !5
  %2677 = mul nsw i32 %2676, %2674
  %2678 = add nsw i64 %2673, -1
  %2679 = trunc i64 %2673 to i32
  %2680 = icmp sgt i32 %2679, 0
  br i1 %2680, label %2672, label %2681, !llvm.loop !570

2681:                                             ; preds = %2672, %2663
  %2682 = phi i32 [ %2667, %2663 ], [ %2677, %2672 ]
  %2683 = and i64 %2632, 4294967295
  %2684 = getelementptr inbounds i32, ptr %6, i64 %2683
  %2685 = load i32, ptr %2684, align 4, !tbaa !5
  %2686 = mul nsw i32 %2685, %2682
  %2687 = add nsw i32 %2686, %2626
  %2688 = icmp sgt i64 %2624, 2
  %2689 = add nsw i64 %2625, -1
  %2690 = add i32 %2623, 1
  br i1 %2688, label %2622, label %2691, !llvm.loop !571

2691:                                             ; preds = %2681, %2618
  %2692 = phi i32 [ %2621, %2618 ], [ %2687, %2681 ]
  %2693 = icmp slt i32 %2692, %5
  br i1 %2693, label %2696, label %2694

2694:                                             ; preds = %2691
  %2695 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 922, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3061

2696:                                             ; preds = %2691
  %2697 = sext i32 %2692 to i64
  %2698 = getelementptr inbounds i16, ptr %2450, i64 %2697
  %2699 = load i16, ptr %2698, align 2, !tbaa !78
  %2700 = sitofp i16 %2699 to double
  %2701 = fmul fast double %2700, %2700
  %2702 = fadd fast double %2701, %2619
  store double %2702, ptr %2452, align 8, !tbaa !18
  %2703 = add nuw nsw i32 %2620, 1
  br i1 %2467, label %2704, label %2754

2704:                                             ; preds = %2696
  %2705 = load i32, ptr %4, align 4, !tbaa !5
  %2706 = load i32, ptr %12, align 4, !tbaa !5
  %2707 = add nsw i32 %2706, -1
  %2708 = icmp slt i32 %2705, %2707
  br i1 %2708, label %2731, label %2709

2709:                                             ; preds = %2704
  %2710 = icmp eq i32 %2705, %2707
  br i1 %2710, label %2711, label %2747

2711:                                             ; preds = %2709
  store i32 0, ptr %4, align 4, !tbaa !5
  %2712 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2712, ptr %6, align 4, !tbaa !5
  br i1 %2472, label %2754, label %2713

2713:                                             ; preds = %2711, %2741
  %2714 = phi i64 [ %2745, %2741 ], [ 1, %2711 ]
  %2715 = getelementptr inbounds i32, ptr %4, i64 %2714
  %2716 = load i32, ptr %2715, align 4, !tbaa !5
  %2717 = getelementptr inbounds i32, ptr %12, i64 %2714
  %2718 = load i32, ptr %2717, align 4, !tbaa !5
  %2719 = add nsw i32 %2718, -1
  %2720 = icmp slt i32 %2716, %2719
  br i1 %2720, label %2721, label %2739

2721:                                             ; preds = %2713
  br i1 %2708, label %2731, label %2722

2722:                                             ; preds = %2721
  %2723 = shl i64 %2714, 32
  %2724 = add i64 %2723, -4294967296
  %2725 = ashr exact i64 %2724, 32
  %2726 = getelementptr inbounds i32, ptr %7, i64 %2725
  %2727 = load i32, ptr %2726, align 4, !tbaa !5
  %2728 = getelementptr inbounds i32, ptr %6, i64 %2714
  %2729 = load i32, ptr %2728, align 4, !tbaa !5
  %2730 = add nsw i32 %2729, %2727
  store i32 %2730, ptr %2728, align 4, !tbaa !5
  br label %2749

2731:                                             ; preds = %2704, %2721
  %2732 = phi i32 [ %2716, %2721 ], [ %2705, %2704 ]
  %2733 = phi ptr [ %2715, %2721 ], [ %4, %2704 ]
  %2734 = phi i64 [ %2714, %2721 ], [ 0, %2704 ]
  %2735 = add nsw i32 %2732, 1
  store i32 %2735, ptr %2733, align 4, !tbaa !5
  %2736 = getelementptr inbounds i32, ptr %7, i64 %2734
  %2737 = load i32, ptr %2736, align 4, !tbaa !5
  %2738 = getelementptr inbounds i32, ptr %6, i64 %2734
  br label %2749

2739:                                             ; preds = %2713
  %2740 = icmp eq i32 %2716, %2719
  br i1 %2740, label %2741, label %2747

2741:                                             ; preds = %2739
  store i32 0, ptr %2715, align 4, !tbaa !5
  %2742 = getelementptr inbounds i32, ptr %8, i64 %2714
  %2743 = load i32, ptr %2742, align 4, !tbaa !5
  %2744 = getelementptr inbounds i32, ptr %6, i64 %2714
  store i32 %2743, ptr %2744, align 4, !tbaa !5
  %2745 = add nuw nsw i64 %2714, 1
  %2746 = icmp eq i64 %2745, %2470
  br i1 %2746, label %2754, label %2713, !llvm.loop !572

2747:                                             ; preds = %2709, %2739
  %2748 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 922, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

2749:                                             ; preds = %2722, %2731
  %2750 = phi ptr [ %2738, %2731 ], [ %2715, %2722 ]
  %2751 = phi i32 [ %2737, %2731 ], [ 1, %2722 ]
  %2752 = load i32, ptr %2750, align 4, !tbaa !5
  %2753 = add nsw i32 %2752, %2751
  store i32 %2753, ptr %2750, align 4, !tbaa !5
  br label %2754

2754:                                             ; preds = %2741, %2749, %2711, %2696
  %2755 = icmp eq i32 %2703, %5
  br i1 %2755, label %3056, label %2618, !llvm.loop !573

2756:                                             ; preds = %2458
  %2757 = getelementptr inbounds i32, ptr %3, i64 %19
  %2758 = load i32, ptr %2757, align 4, !tbaa !5
  %2759 = icmp eq i32 %2758, 0
  %2760 = icmp sgt i32 %5, 0
  br i1 %2759, label %2770, label %2761

2761:                                             ; preds = %2756
  br i1 %2760, label %2762, label %3056

2762:                                             ; preds = %2761
  %2763 = icmp sgt i32 %13, 1
  %2764 = icmp sgt i32 %13, 0
  %2765 = add i32 %13, -2
  %2766 = zext i32 %2765 to i64
  %2767 = zext i32 %13 to i64
  %2768 = add nuw i32 %5, 1
  %2769 = icmp eq i32 %13, 1
  br label %2912

2770:                                             ; preds = %2756
  br i1 %2760, label %2771, label %3056

2771:                                             ; preds = %2770
  %2772 = icmp sgt i32 %13, 1
  %2773 = icmp sgt i32 %13, 0
  %2774 = add i32 %13, -2
  %2775 = zext i32 %2774 to i64
  %2776 = zext i32 %13 to i64
  %2777 = add nuw i32 %5, 1
  %2778 = icmp eq i32 %13, 1
  br label %2779

2779:                                             ; preds = %2771, %2910
  %2780 = phi double [ 0.000000e+00, %2771 ], [ %2860, %2910 ]
  %2781 = phi i32 [ 0, %2771 ], [ %2862, %2910 ]
  %2782 = phi double [ 0.000000e+00, %2771 ], [ %2861, %2910 ]
  %2783 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2772, label %2784, label %2853

2784:                                             ; preds = %2779, %2843
  %2785 = phi i32 [ %2852, %2843 ], [ 0, %2779 ]
  %2786 = phi i64 [ %2794, %2843 ], [ %2776, %2779 ]
  %2787 = phi i64 [ %2851, %2843 ], [ %2775, %2779 ]
  %2788 = phi i32 [ %2849, %2843 ], [ %2783, %2779 ]
  %2789 = sub i32 %2774, %2785
  %2790 = tail call i32 @llvm.smin.i32(i32 %2789, i32 0)
  %2791 = sub i32 %2789, %2790
  %2792 = zext i32 %2791 to i64
  %2793 = add nuw nsw i64 %2792, 1
  %2794 = add nsw i64 %2786, -1
  %2795 = icmp ult i32 %2791, 31
  br i1 %2795, label %2831, label %2796

2796:                                             ; preds = %2784
  %2797 = and i64 %2793, 8589934560
  %2798 = sub i64 %2787, %2797
  br label %2799

2799:                                             ; preds = %2799, %2796
  %2800 = phi i64 [ 0, %2796 ], [ %2823, %2799 ]
  %2801 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2796 ], [ %2819, %2799 ]
  %2802 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2796 ], [ %2820, %2799 ]
  %2803 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2796 ], [ %2821, %2799 ]
  %2804 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2796 ], [ %2822, %2799 ]
  %2805 = sub i64 %2787, %2800
  %2806 = getelementptr inbounds i32, ptr %9, i64 %2805
  %2807 = getelementptr inbounds i32, ptr %2806, i64 -7
  %2808 = load <8 x i32>, ptr %2807, align 4, !tbaa !5
  %2809 = shufflevector <8 x i32> %2808, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2810 = getelementptr inbounds i32, ptr %2806, i64 -15
  %2811 = load <8 x i32>, ptr %2810, align 4, !tbaa !5
  %2812 = shufflevector <8 x i32> %2811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2813 = getelementptr inbounds i32, ptr %2806, i64 -23
  %2814 = load <8 x i32>, ptr %2813, align 4, !tbaa !5
  %2815 = shufflevector <8 x i32> %2814, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2816 = getelementptr inbounds i32, ptr %2806, i64 -31
  %2817 = load <8 x i32>, ptr %2816, align 4, !tbaa !5
  %2818 = shufflevector <8 x i32> %2817, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2819 = mul <8 x i32> %2809, %2801
  %2820 = mul <8 x i32> %2812, %2802
  %2821 = mul <8 x i32> %2815, %2803
  %2822 = mul <8 x i32> %2818, %2804
  %2823 = add nuw i64 %2800, 32
  %2824 = icmp eq i64 %2823, %2797
  br i1 %2824, label %2825, label %2799, !llvm.loop !574

2825:                                             ; preds = %2799
  %2826 = mul <8 x i32> %2820, %2819
  %2827 = mul <8 x i32> %2821, %2826
  %2828 = mul <8 x i32> %2822, %2827
  %2829 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2828)
  %2830 = icmp eq i64 %2793, %2797
  br i1 %2830, label %2843, label %2831

2831:                                             ; preds = %2784, %2825
  %2832 = phi i64 [ %2787, %2784 ], [ %2798, %2825 ]
  %2833 = phi i32 [ 1, %2784 ], [ %2829, %2825 ]
  br label %2834

2834:                                             ; preds = %2831, %2834
  %2835 = phi i64 [ %2840, %2834 ], [ %2832, %2831 ]
  %2836 = phi i32 [ %2839, %2834 ], [ %2833, %2831 ]
  %2837 = getelementptr inbounds i32, ptr %9, i64 %2835
  %2838 = load i32, ptr %2837, align 4, !tbaa !5
  %2839 = mul nsw i32 %2838, %2836
  %2840 = add nsw i64 %2835, -1
  %2841 = trunc i64 %2835 to i32
  %2842 = icmp sgt i32 %2841, 0
  br i1 %2842, label %2834, label %2843, !llvm.loop !575

2843:                                             ; preds = %2834, %2825
  %2844 = phi i32 [ %2829, %2825 ], [ %2839, %2834 ]
  %2845 = and i64 %2794, 4294967295
  %2846 = getelementptr inbounds i32, ptr %6, i64 %2845
  %2847 = load i32, ptr %2846, align 4, !tbaa !5
  %2848 = mul nsw i32 %2847, %2844
  %2849 = add nsw i32 %2848, %2788
  %2850 = icmp sgt i64 %2786, 2
  %2851 = add nsw i64 %2787, -1
  %2852 = add i32 %2785, 1
  br i1 %2850, label %2784, label %2853, !llvm.loop !576

2853:                                             ; preds = %2843, %2779
  %2854 = phi i32 [ %2783, %2779 ], [ %2849, %2843 ]
  %2855 = sext i32 %2854 to i64
  %2856 = getelementptr inbounds i16, ptr %2450, i64 %2855
  %2857 = load i16, ptr %2856, align 2, !tbaa !78
  %2858 = sitofp i16 %2857 to double
  %2859 = fmul fast double %2858, %2858
  %2860 = fadd fast double %2859, %2780
  %2861 = fadd fast double %2782, 1.000000e+00
  %2862 = add nuw nsw i32 %2781, 1
  br i1 %2773, label %2863, label %2910

2863:                                             ; preds = %2853
  %2864 = load i32, ptr %4, align 4, !tbaa !5
  %2865 = load i32, ptr %12, align 4, !tbaa !5
  %2866 = add nsw i32 %2865, -1
  %2867 = icmp slt i32 %2864, %2866
  br i1 %2867, label %2887, label %2868

2868:                                             ; preds = %2863
  %2869 = icmp eq i32 %2864, %2866
  br i1 %2869, label %2870, label %2903

2870:                                             ; preds = %2868
  store i32 0, ptr %4, align 4, !tbaa !5
  %2871 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2871, ptr %6, align 4, !tbaa !5
  br i1 %2778, label %2910, label %2872

2872:                                             ; preds = %2870, %2897
  %2873 = phi i64 [ %2901, %2897 ], [ 1, %2870 ]
  %2874 = getelementptr inbounds i32, ptr %4, i64 %2873
  %2875 = load i32, ptr %2874, align 4, !tbaa !5
  %2876 = getelementptr inbounds i32, ptr %12, i64 %2873
  %2877 = load i32, ptr %2876, align 4, !tbaa !5
  %2878 = add nsw i32 %2877, -1
  %2879 = icmp slt i32 %2875, %2878
  br i1 %2879, label %2880, label %2895

2880:                                             ; preds = %2872
  br i1 %2867, label %2887, label %2881

2881:                                             ; preds = %2880
  %2882 = getelementptr inbounds i32, ptr %7, i64 %2873
  %2883 = load i32, ptr %2882, align 4, !tbaa !5
  %2884 = getelementptr inbounds i32, ptr %6, i64 %2873
  %2885 = load i32, ptr %2884, align 4, !tbaa !5
  %2886 = add nsw i32 %2885, %2883
  store i32 %2886, ptr %2884, align 4, !tbaa !5
  br label %2905

2887:                                             ; preds = %2863, %2880
  %2888 = phi i32 [ %2875, %2880 ], [ %2864, %2863 ]
  %2889 = phi ptr [ %2874, %2880 ], [ %4, %2863 ]
  %2890 = phi i64 [ %2873, %2880 ], [ 0, %2863 ]
  %2891 = add nsw i32 %2888, 1
  store i32 %2891, ptr %2889, align 4, !tbaa !5
  %2892 = getelementptr inbounds i32, ptr %7, i64 %2890
  %2893 = load i32, ptr %2892, align 4, !tbaa !5
  %2894 = getelementptr inbounds i32, ptr %6, i64 %2890
  br label %2905

2895:                                             ; preds = %2872
  %2896 = icmp eq i32 %2875, %2878
  br i1 %2896, label %2897, label %2903

2897:                                             ; preds = %2895
  store i32 0, ptr %2874, align 4, !tbaa !5
  %2898 = getelementptr inbounds i32, ptr %8, i64 %2873
  %2899 = load i32, ptr %2898, align 4, !tbaa !5
  %2900 = getelementptr inbounds i32, ptr %6, i64 %2873
  store i32 %2899, ptr %2900, align 4, !tbaa !5
  %2901 = add nuw nsw i64 %2873, 1
  %2902 = icmp eq i64 %2901, %2776
  br i1 %2902, label %2910, label %2872, !llvm.loop !577

2903:                                             ; preds = %2868, %2895
  store double %2860, ptr %2452, align 8, !tbaa !18
  %2904 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 922, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

2905:                                             ; preds = %2881, %2887
  %2906 = phi ptr [ %2894, %2887 ], [ %2874, %2881 ]
  %2907 = phi i32 [ %2893, %2887 ], [ 1, %2881 ]
  %2908 = load i32, ptr %2906, align 4, !tbaa !5
  %2909 = add nsw i32 %2908, %2907
  store i32 %2909, ptr %2906, align 4, !tbaa !5
  br label %2910

2910:                                             ; preds = %2897, %2905, %2870, %2853
  %2911 = icmp eq i32 %2862, %5
  br i1 %2911, label %3055, label %2779, !llvm.loop !578

2912:                                             ; preds = %2762, %3048
  %2913 = phi double [ 0.000000e+00, %2762 ], [ %2996, %3048 ]
  %2914 = phi i32 [ 0, %2762 ], [ %2997, %3048 ]
  %2915 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2763, label %2916, label %2985

2916:                                             ; preds = %2912, %2975
  %2917 = phi i32 [ %2984, %2975 ], [ 0, %2912 ]
  %2918 = phi i64 [ %2926, %2975 ], [ %2767, %2912 ]
  %2919 = phi i64 [ %2983, %2975 ], [ %2766, %2912 ]
  %2920 = phi i32 [ %2981, %2975 ], [ %2915, %2912 ]
  %2921 = sub i32 %2765, %2917
  %2922 = tail call i32 @llvm.smin.i32(i32 %2921, i32 0)
  %2923 = sub i32 %2921, %2922
  %2924 = zext i32 %2923 to i64
  %2925 = add nuw nsw i64 %2924, 1
  %2926 = add nsw i64 %2918, -1
  %2927 = icmp ult i32 %2923, 31
  br i1 %2927, label %2963, label %2928

2928:                                             ; preds = %2916
  %2929 = and i64 %2925, 8589934560
  %2930 = sub i64 %2919, %2929
  br label %2931

2931:                                             ; preds = %2931, %2928
  %2932 = phi i64 [ 0, %2928 ], [ %2955, %2931 ]
  %2933 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2928 ], [ %2951, %2931 ]
  %2934 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2928 ], [ %2952, %2931 ]
  %2935 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2928 ], [ %2953, %2931 ]
  %2936 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2928 ], [ %2954, %2931 ]
  %2937 = sub i64 %2919, %2932
  %2938 = getelementptr inbounds i32, ptr %11, i64 %2937
  %2939 = getelementptr inbounds i32, ptr %2938, i64 -7
  %2940 = load <8 x i32>, ptr %2939, align 4, !tbaa !5
  %2941 = shufflevector <8 x i32> %2940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2942 = getelementptr inbounds i32, ptr %2938, i64 -15
  %2943 = load <8 x i32>, ptr %2942, align 4, !tbaa !5
  %2944 = shufflevector <8 x i32> %2943, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2945 = getelementptr inbounds i32, ptr %2938, i64 -23
  %2946 = load <8 x i32>, ptr %2945, align 4, !tbaa !5
  %2947 = shufflevector <8 x i32> %2946, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2948 = getelementptr inbounds i32, ptr %2938, i64 -31
  %2949 = load <8 x i32>, ptr %2948, align 4, !tbaa !5
  %2950 = shufflevector <8 x i32> %2949, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2951 = mul <8 x i32> %2941, %2933
  %2952 = mul <8 x i32> %2944, %2934
  %2953 = mul <8 x i32> %2947, %2935
  %2954 = mul <8 x i32> %2950, %2936
  %2955 = add nuw i64 %2932, 32
  %2956 = icmp eq i64 %2955, %2929
  br i1 %2956, label %2957, label %2931, !llvm.loop !579

2957:                                             ; preds = %2931
  %2958 = mul <8 x i32> %2952, %2951
  %2959 = mul <8 x i32> %2953, %2958
  %2960 = mul <8 x i32> %2954, %2959
  %2961 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2960)
  %2962 = icmp eq i64 %2925, %2929
  br i1 %2962, label %2975, label %2963

2963:                                             ; preds = %2916, %2957
  %2964 = phi i64 [ %2919, %2916 ], [ %2930, %2957 ]
  %2965 = phi i32 [ 1, %2916 ], [ %2961, %2957 ]
  br label %2966

2966:                                             ; preds = %2963, %2966
  %2967 = phi i64 [ %2972, %2966 ], [ %2964, %2963 ]
  %2968 = phi i32 [ %2971, %2966 ], [ %2965, %2963 ]
  %2969 = getelementptr inbounds i32, ptr %11, i64 %2967
  %2970 = load i32, ptr %2969, align 4, !tbaa !5
  %2971 = mul nsw i32 %2970, %2968
  %2972 = add nsw i64 %2967, -1
  %2973 = trunc i64 %2967 to i32
  %2974 = icmp sgt i32 %2973, 0
  br i1 %2974, label %2966, label %2975, !llvm.loop !580

2975:                                             ; preds = %2966, %2957
  %2976 = phi i32 [ %2961, %2957 ], [ %2971, %2966 ]
  %2977 = and i64 %2926, 4294967295
  %2978 = getelementptr inbounds i32, ptr %6, i64 %2977
  %2979 = load i32, ptr %2978, align 4, !tbaa !5
  %2980 = mul nsw i32 %2979, %2976
  %2981 = add nsw i32 %2980, %2920
  %2982 = icmp sgt i64 %2918, 2
  %2983 = add nsw i64 %2919, -1
  %2984 = add i32 %2917, 1
  br i1 %2982, label %2916, label %2985, !llvm.loop !581

2985:                                             ; preds = %2975, %2912
  %2986 = phi i32 [ %2915, %2912 ], [ %2981, %2975 ]
  %2987 = icmp slt i32 %2986, %5
  br i1 %2987, label %2990, label %2988

2988:                                             ; preds = %2985
  %2989 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 922, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3061

2990:                                             ; preds = %2985
  %2991 = sext i32 %2986 to i64
  %2992 = getelementptr inbounds i16, ptr %2450, i64 %2991
  %2993 = load i16, ptr %2992, align 2, !tbaa !78
  %2994 = sitofp i16 %2993 to double
  %2995 = fmul fast double %2994, %2994
  %2996 = fadd fast double %2995, %2913
  store double %2996, ptr %2452, align 8, !tbaa !18
  %2997 = add nuw nsw i32 %2914, 1
  br i1 %2764, label %2998, label %3048

2998:                                             ; preds = %2990
  %2999 = load i32, ptr %4, align 4, !tbaa !5
  %3000 = load i32, ptr %12, align 4, !tbaa !5
  %3001 = add nsw i32 %3000, -1
  %3002 = icmp slt i32 %2999, %3001
  br i1 %3002, label %3025, label %3003

3003:                                             ; preds = %2998
  %3004 = icmp eq i32 %2999, %3001
  br i1 %3004, label %3005, label %3041

3005:                                             ; preds = %3003
  store i32 0, ptr %4, align 4, !tbaa !5
  %3006 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3006, ptr %6, align 4, !tbaa !5
  br i1 %2769, label %3048, label %3007

3007:                                             ; preds = %3005, %3035
  %3008 = phi i64 [ %3039, %3035 ], [ 1, %3005 ]
  %3009 = getelementptr inbounds i32, ptr %4, i64 %3008
  %3010 = load i32, ptr %3009, align 4, !tbaa !5
  %3011 = getelementptr inbounds i32, ptr %12, i64 %3008
  %3012 = load i32, ptr %3011, align 4, !tbaa !5
  %3013 = add nsw i32 %3012, -1
  %3014 = icmp slt i32 %3010, %3013
  br i1 %3014, label %3015, label %3033

3015:                                             ; preds = %3007
  br i1 %3002, label %3025, label %3016

3016:                                             ; preds = %3015
  %3017 = shl i64 %3008, 32
  %3018 = add i64 %3017, -4294967296
  %3019 = ashr exact i64 %3018, 32
  %3020 = getelementptr inbounds i32, ptr %7, i64 %3019
  %3021 = load i32, ptr %3020, align 4, !tbaa !5
  %3022 = getelementptr inbounds i32, ptr %6, i64 %3008
  %3023 = load i32, ptr %3022, align 4, !tbaa !5
  %3024 = add nsw i32 %3023, %3021
  store i32 %3024, ptr %3022, align 4, !tbaa !5
  br label %3043

3025:                                             ; preds = %2998, %3015
  %3026 = phi i32 [ %3010, %3015 ], [ %2999, %2998 ]
  %3027 = phi ptr [ %3009, %3015 ], [ %4, %2998 ]
  %3028 = phi i64 [ %3008, %3015 ], [ 0, %2998 ]
  %3029 = add nsw i32 %3026, 1
  store i32 %3029, ptr %3027, align 4, !tbaa !5
  %3030 = getelementptr inbounds i32, ptr %7, i64 %3028
  %3031 = load i32, ptr %3030, align 4, !tbaa !5
  %3032 = getelementptr inbounds i32, ptr %6, i64 %3028
  br label %3043

3033:                                             ; preds = %3007
  %3034 = icmp eq i32 %3010, %3013
  br i1 %3034, label %3035, label %3041

3035:                                             ; preds = %3033
  store i32 0, ptr %3009, align 4, !tbaa !5
  %3036 = getelementptr inbounds i32, ptr %8, i64 %3008
  %3037 = load i32, ptr %3036, align 4, !tbaa !5
  %3038 = getelementptr inbounds i32, ptr %6, i64 %3008
  store i32 %3037, ptr %3038, align 4, !tbaa !5
  %3039 = add nuw nsw i64 %3008, 1
  %3040 = icmp eq i64 %3039, %2767
  br i1 %3040, label %3048, label %3007, !llvm.loop !582

3041:                                             ; preds = %3003, %3033
  %3042 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 922, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3061

3043:                                             ; preds = %3016, %3025
  %3044 = phi ptr [ %3032, %3025 ], [ %3009, %3016 ]
  %3045 = phi i32 [ %3031, %3025 ], [ 1, %3016 ]
  %3046 = load i32, ptr %3044, align 4, !tbaa !5
  %3047 = add nsw i32 %3046, %3045
  store i32 %3047, ptr %3044, align 4, !tbaa !5
  br label %3048

3048:                                             ; preds = %3035, %3043, %3005, %2990
  %3049 = icmp eq i32 %2997, %5
  br i1 %3049, label %3056, label %2912, !llvm.loop !583

3050:                                             ; preds = %2458
  %3051 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 922, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3056

3052:                                             ; preds = %1698
  store double %1648, ptr %1240, align 8, !tbaa !18
  br label %3056

3053:                                             ; preds = %2010
  store float %1960, ptr %1844, align 4, !tbaa !162
  br label %3056

3054:                                             ; preds = %2306
  store float %2256, ptr %1844, align 4, !tbaa !162
  br label %3056

3055:                                             ; preds = %2910
  store double %2860, ptr %2452, align 8, !tbaa !18
  br label %3056

3056:                                             ; preds = %3048, %2754, %2616, %2444, %2150, %1836, %1542, %1404, %1232, %1094, %938, %799, %625, %487, %331, %193, %2761, %2770, %3055, %2464, %2473, %2157, %2166, %3054, %1856, %1865, %3053, %1549, %1558, %3052, %1252, %1261, %945, %954, %645, %654, %338, %347, %38, %47, %2454, %3050, %1846, %2446, %1242, %1838, %635, %1234, %28, %627, %18
  %3057 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %627 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1234 ], [ 0.000000e+00, %635 ], [ 0.000000e+00, %1838 ], [ 0.000000e+00, %1242 ], [ 0.000000e+00, %2446 ], [ 0.000000e+00, %1846 ], [ 0.000000e+00, %3050 ], [ 0.000000e+00, %2454 ], [ 0.000000e+00, %47 ], [ 0.000000e+00, %38 ], [ 0.000000e+00, %347 ], [ 0.000000e+00, %338 ], [ 0.000000e+00, %654 ], [ 0.000000e+00, %645 ], [ 0.000000e+00, %954 ], [ 0.000000e+00, %945 ], [ 0.000000e+00, %1261 ], [ 0.000000e+00, %1252 ], [ %1649, %3052 ], [ 0.000000e+00, %1558 ], [ 0.000000e+00, %1549 ], [ %1961, %3053 ], [ 0.000000e+00, %1865 ], [ 0.000000e+00, %1856 ], [ %2257, %3054 ], [ 0.000000e+00, %2166 ], [ 0.000000e+00, %2157 ], [ 0.000000e+00, %2473 ], [ 0.000000e+00, %2464 ], [ %2861, %3055 ], [ 0.000000e+00, %2770 ], [ 0.000000e+00, %2761 ], [ %144, %193 ], [ 0.000000e+00, %331 ], [ %438, %487 ], [ 0.000000e+00, %625 ], [ %750, %799 ], [ 0.000000e+00, %938 ], [ %1045, %1094 ], [ 0.000000e+00, %1232 ], [ %1355, %1404 ], [ 0.000000e+00, %1542 ], [ 0.000000e+00, %1836 ], [ 0.000000e+00, %2150 ], [ 0.000000e+00, %2444 ], [ %2567, %2616 ], [ 0.000000e+00, %2754 ], [ 0.000000e+00, %3048 ]
  %3058 = phi i32 [ %10, %18 ], [ 1, %627 ], [ 1, %28 ], [ 1, %1234 ], [ 1, %635 ], [ 1, %1838 ], [ 1, %1242 ], [ 1, %2446 ], [ 1, %1846 ], [ 1, %3050 ], [ 1, %2454 ], [ 1, %47 ], [ 1, %38 ], [ 1, %347 ], [ 1, %338 ], [ 1, %654 ], [ 1, %645 ], [ 1, %954 ], [ 1, %945 ], [ 1, %1261 ], [ 1, %1252 ], [ %1565, %3052 ], [ 1, %1558 ], [ 1, %1549 ], [ %1872, %3053 ], [ 1, %1865 ], [ 1, %1856 ], [ %2173, %3054 ], [ 1, %2166 ], [ 1, %2157 ], [ 1, %2473 ], [ 1, %2464 ], [ %2777, %3055 ], [ 1, %2770 ], [ 1, %2761 ], [ %54, %193 ], [ %45, %331 ], [ %354, %487 ], [ %345, %625 ], [ %661, %799 ], [ %652, %938 ], [ %961, %1094 ], [ %952, %1232 ], [ %1268, %1404 ], [ %1259, %1542 ], [ %1556, %1836 ], [ %1863, %2150 ], [ %2164, %2444 ], [ %2480, %2616 ], [ %2471, %2754 ], [ %2768, %3048 ]
  %3059 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %3058, ptr noundef nonnull @.str.5) #3
  %3060 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %3057, ptr noundef nonnull @.str.6) #3
  br label %3061

3061:                                             ; preds = %2609, %2694, %2747, %2903, %2988, %3041, %2003, %2088, %2143, %2299, %2384, %2437, %1397, %1482, %1535, %1691, %1776, %1829, %792, %876, %931, %1087, %1171, %1225, %186, %270, %324, %480, %564, %618, %3056
  %3062 = phi i32 [ 0, %3056 ], [ -1, %618 ], [ -1, %564 ], [ -1, %480 ], [ -1, %324 ], [ -1, %270 ], [ -1, %186 ], [ -1, %1225 ], [ -1, %1171 ], [ -1, %1087 ], [ -1, %931 ], [ -1, %876 ], [ -1, %792 ], [ -1, %1829 ], [ -1, %1776 ], [ -1, %1691 ], [ -1, %1535 ], [ -1, %1482 ], [ -1, %1397 ], [ -1, %2437 ], [ -1, %2384 ], [ -1, %2299 ], [ -1, %2143 ], [ -1, %2088 ], [ -1, %2003 ], [ -1, %3041 ], [ -1, %2988 ], [ -1, %2903 ], [ -1, %2747 ], [ -1, %2694 ], [ -1, %2609 ]
  ret i32 %3062
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm2_INT4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5500 [
    i32 101, label %22
    i32 102, label %632
    i32 103, label %1237
    i32 104, label %1849
    i32 105, label %2461
    i32 106, label %3066
    i32 107, label %3674
    i32 108, label %4278
    i32 109, label %4888
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = load i32, ptr %24, align 4, !tbaa !5
  %30 = mul i32 %29, %29
  %31 = trunc i32 %30 to i8
  store i8 %31, ptr %26, align 1, !tbaa !11
  br label %5500

32:                                               ; preds = %22
  switch i32 %1, label %630 [
    i32 1, label %33
    i32 0, label %336
  ]

33:                                               ; preds = %32
  %34 = getelementptr inbounds i32, ptr %3, i64 %19
  %35 = load i32, ptr %34, align 4, !tbaa !5
  %36 = icmp eq i32 %35, 0
  %37 = icmp sgt i32 %5, 0
  br i1 %36, label %47, label %38

38:                                               ; preds = %33
  br i1 %37, label %39, label %5500

39:                                               ; preds = %38
  %40 = icmp sgt i32 %13, 1
  %41 = icmp sgt i32 %13, 0
  %42 = add i32 %13, -2
  %43 = zext i32 %42 to i64
  %44 = zext i32 %13 to i64
  %45 = add nuw i32 %5, 1
  %46 = icmp eq i32 %13, 1
  br label %195

47:                                               ; preds = %33
  br i1 %37, label %48, label %5500

48:                                               ; preds = %47
  %49 = icmp sgt i32 %13, 1
  %50 = icmp sgt i32 %13, 0
  %51 = add i32 %13, -2
  %52 = zext i32 %51 to i64
  %53 = zext i32 %13 to i64
  %54 = add nuw i32 %5, 1
  %55 = icmp eq i32 %13, 1
  br label %56

56:                                               ; preds = %48, %193
  %57 = phi i32 [ 0, %48 ], [ %145, %193 ]
  %58 = phi double [ 0.000000e+00, %48 ], [ %144, %193 ]
  %59 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %49, label %60, label %129

60:                                               ; preds = %56, %119
  %61 = phi i32 [ %128, %119 ], [ 0, %56 ]
  %62 = phi i64 [ %70, %119 ], [ %53, %56 ]
  %63 = phi i64 [ %127, %119 ], [ %52, %56 ]
  %64 = phi i32 [ %125, %119 ], [ %59, %56 ]
  %65 = sub i32 %51, %61
  %66 = tail call i32 @llvm.smin.i32(i32 %65, i32 0)
  %67 = sub i32 %65, %66
  %68 = zext i32 %67 to i64
  %69 = add nuw nsw i64 %68, 1
  %70 = add nsw i64 %62, -1
  %71 = icmp ult i32 %67, 31
  br i1 %71, label %107, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 8589934560
  %74 = sub i64 %63, %73
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi i64 [ 0, %72 ], [ %99, %75 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %95, %75 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %96, %75 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %97, %75 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %98, %75 ]
  %81 = sub i64 %63, %76
  %82 = getelementptr inbounds i32, ptr %9, i64 %81
  %83 = getelementptr inbounds i32, ptr %82, i64 -7
  %84 = load <8 x i32>, ptr %83, align 4, !tbaa !5
  %85 = shufflevector <8 x i32> %84, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %86 = getelementptr inbounds i32, ptr %82, i64 -15
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !5
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %82, i64 -23
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !5
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %82, i64 -31
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !5
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = mul <8 x i32> %85, %77
  %96 = mul <8 x i32> %88, %78
  %97 = mul <8 x i32> %91, %79
  %98 = mul <8 x i32> %94, %80
  %99 = add nuw i64 %76, 32
  %100 = icmp eq i64 %99, %73
  br i1 %100, label %101, label %75, !llvm.loop !584

101:                                              ; preds = %75
  %102 = mul <8 x i32> %96, %95
  %103 = mul <8 x i32> %97, %102
  %104 = mul <8 x i32> %98, %103
  %105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %104)
  %106 = icmp eq i64 %69, %73
  br i1 %106, label %119, label %107

107:                                              ; preds = %60, %101
  %108 = phi i64 [ %63, %60 ], [ %74, %101 ]
  %109 = phi i32 [ 1, %60 ], [ %105, %101 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, ptr %9, i64 %111
  %114 = load i32, ptr %113, align 4, !tbaa !5
  %115 = mul nsw i32 %114, %112
  %116 = add nsw i64 %111, -1
  %117 = trunc i64 %111 to i32
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %110, label %119, !llvm.loop !585

119:                                              ; preds = %110, %101
  %120 = phi i32 [ %105, %101 ], [ %115, %110 ]
  %121 = and i64 %70, 4294967295
  %122 = getelementptr inbounds i32, ptr %6, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !5
  %124 = mul nsw i32 %123, %120
  %125 = add nsw i32 %124, %64
  %126 = icmp sgt i64 %62, 2
  %127 = add nsw i64 %63, -1
  %128 = add i32 %61, 1
  br i1 %126, label %60, label %129, !llvm.loop !586

129:                                              ; preds = %119, %56
  %130 = phi i32 [ %59, %56 ], [ %125, %119 ]
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds double, ptr %2, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !18
  %134 = getelementptr inbounds i32, ptr %24, i64 %131
  %135 = load i32, ptr %134, align 4, !tbaa !5
  %136 = load i8, ptr %26, align 1, !tbaa !11
  %137 = uitofp i8 %136 to double
  %138 = and i32 %135, 255
  %139 = sitofp i32 %138 to double
  %140 = fmul fast double %133, %139
  %141 = fmul fast double %140, %140
  %142 = fadd fast double %141, %137
  %143 = fptoui double %142 to i8
  store i8 %143, ptr %26, align 1, !tbaa !11
  %144 = fadd fast double %133, %58
  %145 = add nuw nsw i32 %57, 1
  br i1 %50, label %146, label %193

146:                                              ; preds = %129
  %147 = load i32, ptr %4, align 4, !tbaa !5
  %148 = load i32, ptr %12, align 4, !tbaa !5
  %149 = add nsw i32 %148, -1
  %150 = icmp slt i32 %147, %149
  br i1 %150, label %170, label %151

151:                                              ; preds = %146
  %152 = icmp eq i32 %147, %149
  br i1 %152, label %153, label %186

153:                                              ; preds = %151
  store i32 0, ptr %4, align 4, !tbaa !5
  %154 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %154, ptr %6, align 4, !tbaa !5
  br i1 %55, label %193, label %155

155:                                              ; preds = %153, %180
  %156 = phi i64 [ %184, %180 ], [ 1, %153 ]
  %157 = getelementptr inbounds i32, ptr %4, i64 %156
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = getelementptr inbounds i32, ptr %12, i64 %156
  %160 = load i32, ptr %159, align 4, !tbaa !5
  %161 = add nsw i32 %160, -1
  %162 = icmp slt i32 %158, %161
  br i1 %162, label %163, label %178

163:                                              ; preds = %155
  br i1 %150, label %170, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds i32, ptr %7, i64 %156
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = getelementptr inbounds i32, ptr %6, i64 %156
  %168 = load i32, ptr %167, align 4, !tbaa !5
  %169 = add nsw i32 %168, %166
  store i32 %169, ptr %167, align 4, !tbaa !5
  br label %188

170:                                              ; preds = %146, %163
  %171 = phi i32 [ %158, %163 ], [ %147, %146 ]
  %172 = phi ptr [ %157, %163 ], [ %4, %146 ]
  %173 = phi i64 [ %156, %163 ], [ 0, %146 ]
  %174 = add nsw i32 %171, 1
  store i32 %174, ptr %172, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %7, i64 %173
  %176 = load i32, ptr %175, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %6, i64 %173
  br label %188

178:                                              ; preds = %155
  %179 = icmp eq i32 %158, %161
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  store i32 0, ptr %157, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %8, i64 %156
  %182 = load i32, ptr %181, align 4, !tbaa !5
  %183 = getelementptr inbounds i32, ptr %6, i64 %156
  store i32 %182, ptr %183, align 4, !tbaa !5
  %184 = add nuw nsw i64 %156, 1
  %185 = icmp eq i64 %184, %53
  br i1 %185, label %193, label %155, !llvm.loop !587

186:                                              ; preds = %151, %178
  %187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1165, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

188:                                              ; preds = %164, %170
  %189 = phi ptr [ %177, %170 ], [ %157, %164 ]
  %190 = phi i32 [ %176, %170 ], [ 1, %164 ]
  %191 = load i32, ptr %189, align 4, !tbaa !5
  %192 = add nsw i32 %191, %190
  store i32 %192, ptr %189, align 4, !tbaa !5
  br label %193

193:                                              ; preds = %180, %188, %153, %129
  %194 = icmp eq i32 %145, %5
  br i1 %194, label %5500, label %56, !llvm.loop !588

195:                                              ; preds = %39, %334
  %196 = phi i32 [ 0, %39 ], [ %283, %334 ]
  %197 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %40, label %198, label %267

198:                                              ; preds = %195, %257
  %199 = phi i32 [ %266, %257 ], [ 0, %195 ]
  %200 = phi i64 [ %208, %257 ], [ %44, %195 ]
  %201 = phi i64 [ %265, %257 ], [ %43, %195 ]
  %202 = phi i32 [ %263, %257 ], [ %197, %195 ]
  %203 = sub i32 %42, %199
  %204 = tail call i32 @llvm.smin.i32(i32 %203, i32 0)
  %205 = sub i32 %203, %204
  %206 = zext i32 %205 to i64
  %207 = add nuw nsw i64 %206, 1
  %208 = add nsw i64 %200, -1
  %209 = icmp ult i32 %205, 31
  br i1 %209, label %245, label %210

210:                                              ; preds = %198
  %211 = and i64 %207, 8589934560
  %212 = sub i64 %201, %211
  br label %213

213:                                              ; preds = %213, %210
  %214 = phi i64 [ 0, %210 ], [ %237, %213 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %233, %213 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %234, %213 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %235, %213 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %236, %213 ]
  %219 = sub i64 %201, %214
  %220 = getelementptr inbounds i32, ptr %11, i64 %219
  %221 = getelementptr inbounds i32, ptr %220, i64 -7
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %220, i64 -15
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %220, i64 -23
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %220, i64 -31
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = mul <8 x i32> %223, %215
  %234 = mul <8 x i32> %226, %216
  %235 = mul <8 x i32> %229, %217
  %236 = mul <8 x i32> %232, %218
  %237 = add nuw i64 %214, 32
  %238 = icmp eq i64 %237, %211
  br i1 %238, label %239, label %213, !llvm.loop !589

239:                                              ; preds = %213
  %240 = mul <8 x i32> %234, %233
  %241 = mul <8 x i32> %235, %240
  %242 = mul <8 x i32> %236, %241
  %243 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %242)
  %244 = icmp eq i64 %207, %211
  br i1 %244, label %257, label %245

245:                                              ; preds = %198, %239
  %246 = phi i64 [ %201, %198 ], [ %212, %239 ]
  %247 = phi i32 [ 1, %198 ], [ %243, %239 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %254, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %253, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i32, ptr %11, i64 %249
  %252 = load i32, ptr %251, align 4, !tbaa !5
  %253 = mul nsw i32 %252, %250
  %254 = add nsw i64 %249, -1
  %255 = trunc i64 %249 to i32
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %248, label %257, !llvm.loop !590

257:                                              ; preds = %248, %239
  %258 = phi i32 [ %243, %239 ], [ %253, %248 ]
  %259 = and i64 %208, 4294967295
  %260 = getelementptr inbounds i32, ptr %6, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !5
  %262 = mul nsw i32 %261, %258
  %263 = add nsw i32 %262, %202
  %264 = icmp sgt i64 %200, 2
  %265 = add nsw i64 %201, -1
  %266 = add i32 %199, 1
  br i1 %264, label %198, label %267, !llvm.loop !591

267:                                              ; preds = %257, %195
  %268 = phi i32 [ %197, %195 ], [ %263, %257 ]
  %269 = icmp slt i32 %268, %5
  br i1 %269, label %272, label %270

270:                                              ; preds = %267
  %271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1165, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

272:                                              ; preds = %267
  %273 = sext i32 %268 to i64
  %274 = getelementptr inbounds i32, ptr %24, i64 %273
  %275 = load i32, ptr %274, align 4, !tbaa !5
  %276 = load i8, ptr %26, align 1, !tbaa !11
  %277 = uitofp i8 %276 to double
  %278 = and i32 %275, 255
  %279 = sitofp i32 %278 to double
  %280 = fmul fast double %279, %279
  %281 = fadd fast double %280, %277
  %282 = fptoui double %281 to i8
  store i8 %282, ptr %26, align 1, !tbaa !11
  %283 = add nuw nsw i32 %196, 1
  br i1 %41, label %284, label %334

284:                                              ; preds = %272
  %285 = load i32, ptr %4, align 4, !tbaa !5
  %286 = load i32, ptr %12, align 4, !tbaa !5
  %287 = add nsw i32 %286, -1
  %288 = icmp slt i32 %285, %287
  br i1 %288, label %311, label %289

289:                                              ; preds = %284
  %290 = icmp eq i32 %285, %287
  br i1 %290, label %291, label %327

291:                                              ; preds = %289
  store i32 0, ptr %4, align 4, !tbaa !5
  %292 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %292, ptr %6, align 4, !tbaa !5
  br i1 %46, label %334, label %293

293:                                              ; preds = %291, %321
  %294 = phi i64 [ %325, %321 ], [ 1, %291 ]
  %295 = getelementptr inbounds i32, ptr %4, i64 %294
  %296 = load i32, ptr %295, align 4, !tbaa !5
  %297 = getelementptr inbounds i32, ptr %12, i64 %294
  %298 = load i32, ptr %297, align 4, !tbaa !5
  %299 = add nsw i32 %298, -1
  %300 = icmp slt i32 %296, %299
  br i1 %300, label %301, label %319

301:                                              ; preds = %293
  br i1 %288, label %311, label %302

302:                                              ; preds = %301
  %303 = shl i64 %294, 32
  %304 = add i64 %303, -4294967296
  %305 = ashr exact i64 %304, 32
  %306 = getelementptr inbounds i32, ptr %7, i64 %305
  %307 = load i32, ptr %306, align 4, !tbaa !5
  %308 = getelementptr inbounds i32, ptr %6, i64 %294
  %309 = load i32, ptr %308, align 4, !tbaa !5
  %310 = add nsw i32 %309, %307
  store i32 %310, ptr %308, align 4, !tbaa !5
  br label %329

311:                                              ; preds = %284, %301
  %312 = phi i32 [ %296, %301 ], [ %285, %284 ]
  %313 = phi ptr [ %295, %301 ], [ %4, %284 ]
  %314 = phi i64 [ %294, %301 ], [ 0, %284 ]
  %315 = add nsw i32 %312, 1
  store i32 %315, ptr %313, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %7, i64 %314
  %317 = load i32, ptr %316, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %6, i64 %314
  br label %329

319:                                              ; preds = %293
  %320 = icmp eq i32 %296, %299
  br i1 %320, label %321, label %327

321:                                              ; preds = %319
  store i32 0, ptr %295, align 4, !tbaa !5
  %322 = getelementptr inbounds i32, ptr %8, i64 %294
  %323 = load i32, ptr %322, align 4, !tbaa !5
  %324 = getelementptr inbounds i32, ptr %6, i64 %294
  store i32 %323, ptr %324, align 4, !tbaa !5
  %325 = add nuw nsw i64 %294, 1
  %326 = icmp eq i64 %325, %44
  br i1 %326, label %334, label %293, !llvm.loop !592

327:                                              ; preds = %289, %319
  %328 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1165, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

329:                                              ; preds = %302, %311
  %330 = phi ptr [ %318, %311 ], [ %295, %302 ]
  %331 = phi i32 [ %317, %311 ], [ 1, %302 ]
  %332 = load i32, ptr %330, align 4, !tbaa !5
  %333 = add nsw i32 %332, %331
  store i32 %333, ptr %330, align 4, !tbaa !5
  br label %334

334:                                              ; preds = %321, %329, %291, %272
  %335 = icmp eq i32 %283, %5
  br i1 %335, label %5500, label %195, !llvm.loop !593

336:                                              ; preds = %32
  %337 = getelementptr inbounds i32, ptr %3, i64 %19
  %338 = load i32, ptr %337, align 4, !tbaa !5
  %339 = icmp eq i32 %338, 0
  %340 = icmp sgt i32 %5, 0
  br i1 %339, label %350, label %341

341:                                              ; preds = %336
  br i1 %340, label %342, label %5500

342:                                              ; preds = %341
  %343 = icmp sgt i32 %13, 1
  %344 = icmp sgt i32 %13, 0
  %345 = add i32 %13, -2
  %346 = zext i32 %345 to i64
  %347 = zext i32 %13 to i64
  %348 = add nuw i32 %5, 1
  %349 = icmp eq i32 %13, 1
  br label %492

350:                                              ; preds = %336
  br i1 %340, label %351, label %5500

351:                                              ; preds = %350
  %352 = icmp sgt i32 %13, 1
  %353 = icmp sgt i32 %13, 0
  %354 = add i32 %13, -2
  %355 = zext i32 %354 to i64
  %356 = zext i32 %13 to i64
  %357 = add nuw i32 %5, 1
  %358 = icmp eq i32 %13, 1
  br label %359

359:                                              ; preds = %351, %490
  %360 = phi i32 [ 0, %351 ], [ %442, %490 ]
  %361 = phi double [ 0.000000e+00, %351 ], [ %441, %490 ]
  %362 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %352, label %363, label %432

363:                                              ; preds = %359, %422
  %364 = phi i32 [ %431, %422 ], [ 0, %359 ]
  %365 = phi i64 [ %373, %422 ], [ %356, %359 ]
  %366 = phi i64 [ %430, %422 ], [ %355, %359 ]
  %367 = phi i32 [ %428, %422 ], [ %362, %359 ]
  %368 = sub i32 %354, %364
  %369 = tail call i32 @llvm.smin.i32(i32 %368, i32 0)
  %370 = sub i32 %368, %369
  %371 = zext i32 %370 to i64
  %372 = add nuw nsw i64 %371, 1
  %373 = add nsw i64 %365, -1
  %374 = icmp ult i32 %370, 31
  br i1 %374, label %410, label %375

375:                                              ; preds = %363
  %376 = and i64 %372, 8589934560
  %377 = sub i64 %366, %376
  br label %378

378:                                              ; preds = %378, %375
  %379 = phi i64 [ 0, %375 ], [ %402, %378 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %398, %378 ]
  %381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %399, %378 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %400, %378 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %401, %378 ]
  %384 = sub i64 %366, %379
  %385 = getelementptr inbounds i32, ptr %9, i64 %384
  %386 = getelementptr inbounds i32, ptr %385, i64 -7
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %385, i64 -15
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %385, i64 -23
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !5
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %385, i64 -31
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !5
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = mul <8 x i32> %388, %380
  %399 = mul <8 x i32> %391, %381
  %400 = mul <8 x i32> %394, %382
  %401 = mul <8 x i32> %397, %383
  %402 = add nuw i64 %379, 32
  %403 = icmp eq i64 %402, %376
  br i1 %403, label %404, label %378, !llvm.loop !594

404:                                              ; preds = %378
  %405 = mul <8 x i32> %399, %398
  %406 = mul <8 x i32> %400, %405
  %407 = mul <8 x i32> %401, %406
  %408 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %407)
  %409 = icmp eq i64 %372, %376
  br i1 %409, label %422, label %410

410:                                              ; preds = %363, %404
  %411 = phi i64 [ %366, %363 ], [ %377, %404 ]
  %412 = phi i32 [ 1, %363 ], [ %408, %404 ]
  br label %413

413:                                              ; preds = %410, %413
  %414 = phi i64 [ %419, %413 ], [ %411, %410 ]
  %415 = phi i32 [ %418, %413 ], [ %412, %410 ]
  %416 = getelementptr inbounds i32, ptr %9, i64 %414
  %417 = load i32, ptr %416, align 4, !tbaa !5
  %418 = mul nsw i32 %417, %415
  %419 = add nsw i64 %414, -1
  %420 = trunc i64 %414 to i32
  %421 = icmp sgt i32 %420, 0
  br i1 %421, label %413, label %422, !llvm.loop !595

422:                                              ; preds = %413, %404
  %423 = phi i32 [ %408, %404 ], [ %418, %413 ]
  %424 = and i64 %373, 4294967295
  %425 = getelementptr inbounds i32, ptr %6, i64 %424
  %426 = load i32, ptr %425, align 4, !tbaa !5
  %427 = mul nsw i32 %426, %423
  %428 = add nsw i32 %427, %367
  %429 = icmp sgt i64 %365, 2
  %430 = add nsw i64 %366, -1
  %431 = add i32 %364, 1
  br i1 %429, label %363, label %432, !llvm.loop !596

432:                                              ; preds = %422, %359
  %433 = phi i32 [ %362, %359 ], [ %428, %422 ]
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds i32, ptr %24, i64 %434
  %436 = load i32, ptr %435, align 4, !tbaa !5
  %437 = load i8, ptr %26, align 1, !tbaa !11
  %438 = mul i32 %436, %436
  %439 = trunc i32 %438 to i8
  %440 = add i8 %437, %439
  store i8 %440, ptr %26, align 1, !tbaa !11
  %441 = fadd fast double %361, 1.000000e+00
  %442 = add nuw nsw i32 %360, 1
  br i1 %353, label %443, label %490

443:                                              ; preds = %432
  %444 = load i32, ptr %4, align 4, !tbaa !5
  %445 = load i32, ptr %12, align 4, !tbaa !5
  %446 = add nsw i32 %445, -1
  %447 = icmp slt i32 %444, %446
  br i1 %447, label %467, label %448

448:                                              ; preds = %443
  %449 = icmp eq i32 %444, %446
  br i1 %449, label %450, label %483

450:                                              ; preds = %448
  store i32 0, ptr %4, align 4, !tbaa !5
  %451 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %451, ptr %6, align 4, !tbaa !5
  br i1 %358, label %490, label %452

452:                                              ; preds = %450, %477
  %453 = phi i64 [ %481, %477 ], [ 1, %450 ]
  %454 = getelementptr inbounds i32, ptr %4, i64 %453
  %455 = load i32, ptr %454, align 4, !tbaa !5
  %456 = getelementptr inbounds i32, ptr %12, i64 %453
  %457 = load i32, ptr %456, align 4, !tbaa !5
  %458 = add nsw i32 %457, -1
  %459 = icmp slt i32 %455, %458
  br i1 %459, label %460, label %475

460:                                              ; preds = %452
  br i1 %447, label %467, label %461

461:                                              ; preds = %460
  %462 = getelementptr inbounds i32, ptr %7, i64 %453
  %463 = load i32, ptr %462, align 4, !tbaa !5
  %464 = getelementptr inbounds i32, ptr %6, i64 %453
  %465 = load i32, ptr %464, align 4, !tbaa !5
  %466 = add nsw i32 %465, %463
  store i32 %466, ptr %464, align 4, !tbaa !5
  br label %485

467:                                              ; preds = %443, %460
  %468 = phi i32 [ %455, %460 ], [ %444, %443 ]
  %469 = phi ptr [ %454, %460 ], [ %4, %443 ]
  %470 = phi i64 [ %453, %460 ], [ 0, %443 ]
  %471 = add nsw i32 %468, 1
  store i32 %471, ptr %469, align 4, !tbaa !5
  %472 = getelementptr inbounds i32, ptr %7, i64 %470
  %473 = load i32, ptr %472, align 4, !tbaa !5
  %474 = getelementptr inbounds i32, ptr %6, i64 %470
  br label %485

475:                                              ; preds = %452
  %476 = icmp eq i32 %455, %458
  br i1 %476, label %477, label %483

477:                                              ; preds = %475
  store i32 0, ptr %454, align 4, !tbaa !5
  %478 = getelementptr inbounds i32, ptr %8, i64 %453
  %479 = load i32, ptr %478, align 4, !tbaa !5
  %480 = getelementptr inbounds i32, ptr %6, i64 %453
  store i32 %479, ptr %480, align 4, !tbaa !5
  %481 = add nuw nsw i64 %453, 1
  %482 = icmp eq i64 %481, %356
  br i1 %482, label %490, label %452, !llvm.loop !597

483:                                              ; preds = %448, %475
  %484 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1165, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

485:                                              ; preds = %461, %467
  %486 = phi ptr [ %474, %467 ], [ %454, %461 ]
  %487 = phi i32 [ %473, %467 ], [ 1, %461 ]
  %488 = load i32, ptr %486, align 4, !tbaa !5
  %489 = add nsw i32 %488, %487
  store i32 %489, ptr %486, align 4, !tbaa !5
  br label %490

490:                                              ; preds = %477, %485, %450, %432
  %491 = icmp eq i32 %442, %5
  br i1 %491, label %5500, label %359, !llvm.loop !598

492:                                              ; preds = %342, %628
  %493 = phi i32 [ 0, %342 ], [ %577, %628 ]
  %494 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %343, label %495, label %564

495:                                              ; preds = %492, %554
  %496 = phi i32 [ %563, %554 ], [ 0, %492 ]
  %497 = phi i64 [ %505, %554 ], [ %347, %492 ]
  %498 = phi i64 [ %562, %554 ], [ %346, %492 ]
  %499 = phi i32 [ %560, %554 ], [ %494, %492 ]
  %500 = sub i32 %345, %496
  %501 = tail call i32 @llvm.smin.i32(i32 %500, i32 0)
  %502 = sub i32 %500, %501
  %503 = zext i32 %502 to i64
  %504 = add nuw nsw i64 %503, 1
  %505 = add nsw i64 %497, -1
  %506 = icmp ult i32 %502, 31
  br i1 %506, label %542, label %507

507:                                              ; preds = %495
  %508 = and i64 %504, 8589934560
  %509 = sub i64 %498, %508
  br label %510

510:                                              ; preds = %510, %507
  %511 = phi i64 [ 0, %507 ], [ %534, %510 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %530, %510 ]
  %513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %531, %510 ]
  %514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %532, %510 ]
  %515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %507 ], [ %533, %510 ]
  %516 = sub i64 %498, %511
  %517 = getelementptr inbounds i32, ptr %11, i64 %516
  %518 = getelementptr inbounds i32, ptr %517, i64 -7
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %517, i64 -15
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %517, i64 -23
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !5
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = getelementptr inbounds i32, ptr %517, i64 -31
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !5
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = mul <8 x i32> %520, %512
  %531 = mul <8 x i32> %523, %513
  %532 = mul <8 x i32> %526, %514
  %533 = mul <8 x i32> %529, %515
  %534 = add nuw i64 %511, 32
  %535 = icmp eq i64 %534, %508
  br i1 %535, label %536, label %510, !llvm.loop !599

536:                                              ; preds = %510
  %537 = mul <8 x i32> %531, %530
  %538 = mul <8 x i32> %532, %537
  %539 = mul <8 x i32> %533, %538
  %540 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %539)
  %541 = icmp eq i64 %504, %508
  br i1 %541, label %554, label %542

542:                                              ; preds = %495, %536
  %543 = phi i64 [ %498, %495 ], [ %509, %536 ]
  %544 = phi i32 [ 1, %495 ], [ %540, %536 ]
  br label %545

545:                                              ; preds = %542, %545
  %546 = phi i64 [ %551, %545 ], [ %543, %542 ]
  %547 = phi i32 [ %550, %545 ], [ %544, %542 ]
  %548 = getelementptr inbounds i32, ptr %11, i64 %546
  %549 = load i32, ptr %548, align 4, !tbaa !5
  %550 = mul nsw i32 %549, %547
  %551 = add nsw i64 %546, -1
  %552 = trunc i64 %546 to i32
  %553 = icmp sgt i32 %552, 0
  br i1 %553, label %545, label %554, !llvm.loop !600

554:                                              ; preds = %545, %536
  %555 = phi i32 [ %540, %536 ], [ %550, %545 ]
  %556 = and i64 %505, 4294967295
  %557 = getelementptr inbounds i32, ptr %6, i64 %556
  %558 = load i32, ptr %557, align 4, !tbaa !5
  %559 = mul nsw i32 %558, %555
  %560 = add nsw i32 %559, %499
  %561 = icmp sgt i64 %497, 2
  %562 = add nsw i64 %498, -1
  %563 = add i32 %496, 1
  br i1 %561, label %495, label %564, !llvm.loop !601

564:                                              ; preds = %554, %492
  %565 = phi i32 [ %494, %492 ], [ %560, %554 ]
  %566 = icmp slt i32 %565, %5
  br i1 %566, label %569, label %567

567:                                              ; preds = %564
  %568 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1165, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

569:                                              ; preds = %564
  %570 = sext i32 %565 to i64
  %571 = getelementptr inbounds i32, ptr %24, i64 %570
  %572 = load i32, ptr %571, align 4, !tbaa !5
  %573 = load i8, ptr %26, align 1, !tbaa !11
  %574 = mul i32 %572, %572
  %575 = trunc i32 %574 to i8
  %576 = add i8 %573, %575
  store i8 %576, ptr %26, align 1, !tbaa !11
  %577 = add nuw nsw i32 %493, 1
  br i1 %344, label %578, label %628

578:                                              ; preds = %569
  %579 = load i32, ptr %4, align 4, !tbaa !5
  %580 = load i32, ptr %12, align 4, !tbaa !5
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %579, %581
  br i1 %582, label %605, label %583

583:                                              ; preds = %578
  %584 = icmp eq i32 %579, %581
  br i1 %584, label %585, label %621

585:                                              ; preds = %583
  store i32 0, ptr %4, align 4, !tbaa !5
  %586 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %586, ptr %6, align 4, !tbaa !5
  br i1 %349, label %628, label %587

587:                                              ; preds = %585, %615
  %588 = phi i64 [ %619, %615 ], [ 1, %585 ]
  %589 = getelementptr inbounds i32, ptr %4, i64 %588
  %590 = load i32, ptr %589, align 4, !tbaa !5
  %591 = getelementptr inbounds i32, ptr %12, i64 %588
  %592 = load i32, ptr %591, align 4, !tbaa !5
  %593 = add nsw i32 %592, -1
  %594 = icmp slt i32 %590, %593
  br i1 %594, label %595, label %613

595:                                              ; preds = %587
  br i1 %582, label %605, label %596

596:                                              ; preds = %595
  %597 = shl i64 %588, 32
  %598 = add i64 %597, -4294967296
  %599 = ashr exact i64 %598, 32
  %600 = getelementptr inbounds i32, ptr %7, i64 %599
  %601 = load i32, ptr %600, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %6, i64 %588
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = add nsw i32 %603, %601
  store i32 %604, ptr %602, align 4, !tbaa !5
  br label %623

605:                                              ; preds = %578, %595
  %606 = phi i32 [ %590, %595 ], [ %579, %578 ]
  %607 = phi ptr [ %589, %595 ], [ %4, %578 ]
  %608 = phi i64 [ %588, %595 ], [ 0, %578 ]
  %609 = add nsw i32 %606, 1
  store i32 %609, ptr %607, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %7, i64 %608
  %611 = load i32, ptr %610, align 4, !tbaa !5
  %612 = getelementptr inbounds i32, ptr %6, i64 %608
  br label %623

613:                                              ; preds = %587
  %614 = icmp eq i32 %590, %593
  br i1 %614, label %615, label %621

615:                                              ; preds = %613
  store i32 0, ptr %589, align 4, !tbaa !5
  %616 = getelementptr inbounds i32, ptr %8, i64 %588
  %617 = load i32, ptr %616, align 4, !tbaa !5
  %618 = getelementptr inbounds i32, ptr %6, i64 %588
  store i32 %617, ptr %618, align 4, !tbaa !5
  %619 = add nuw nsw i64 %588, 1
  %620 = icmp eq i64 %619, %347
  br i1 %620, label %628, label %587, !llvm.loop !602

621:                                              ; preds = %583, %613
  %622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1165, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

623:                                              ; preds = %596, %605
  %624 = phi ptr [ %612, %605 ], [ %589, %596 ]
  %625 = phi i32 [ %611, %605 ], [ 1, %596 ]
  %626 = load i32, ptr %624, align 4, !tbaa !5
  %627 = add nsw i32 %626, %625
  store i32 %627, ptr %624, align 4, !tbaa !5
  br label %628

628:                                              ; preds = %615, %623, %585, %569
  %629 = icmp eq i32 %577, %5
  br i1 %629, label %5500, label %492, !llvm.loop !603

630:                                              ; preds = %32
  %631 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1165, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

632:                                              ; preds = %18
  %633 = getelementptr inbounds ptr, ptr %14, i64 %19
  %634 = load ptr, ptr %633, align 8, !tbaa !9
  %635 = getelementptr inbounds ptr, ptr %16, i64 %19
  %636 = load ptr, ptr %635, align 8, !tbaa !9
  store i32 0, ptr %636, align 4, !tbaa !5
  %637 = icmp eq i32 %13, 0
  br i1 %637, label %638, label %641

638:                                              ; preds = %632
  %639 = load i32, ptr %634, align 4, !tbaa !5
  %640 = mul nsw i32 %639, %639
  store i32 %640, ptr %636, align 4, !tbaa !5
  br label %5500

641:                                              ; preds = %632
  switch i32 %1, label %1235 [
    i32 1, label %642
    i32 0, label %943
  ]

642:                                              ; preds = %641
  %643 = getelementptr inbounds i32, ptr %3, i64 %19
  %644 = load i32, ptr %643, align 4, !tbaa !5
  %645 = icmp eq i32 %644, 0
  %646 = icmp sgt i32 %5, 0
  br i1 %645, label %656, label %647

647:                                              ; preds = %642
  br i1 %646, label %648, label %5500

648:                                              ; preds = %647
  %649 = icmp sgt i32 %13, 1
  %650 = icmp sgt i32 %13, 0
  %651 = add i32 %13, -2
  %652 = zext i32 %651 to i64
  %653 = zext i32 %13 to i64
  %654 = add nuw i32 %5, 1
  %655 = icmp eq i32 %13, 1
  br label %803

656:                                              ; preds = %642
  br i1 %646, label %657, label %5500

657:                                              ; preds = %656
  %658 = icmp sgt i32 %13, 1
  %659 = icmp sgt i32 %13, 0
  %660 = add i32 %13, -2
  %661 = zext i32 %660 to i64
  %662 = zext i32 %13 to i64
  %663 = add nuw i32 %5, 1
  %664 = icmp eq i32 %13, 1
  br label %665

665:                                              ; preds = %657, %801
  %666 = phi i32 [ 0, %657 ], [ %753, %801 ]
  %667 = phi double [ 0.000000e+00, %657 ], [ %752, %801 ]
  %668 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %658, label %669, label %738

669:                                              ; preds = %665, %728
  %670 = phi i32 [ %737, %728 ], [ 0, %665 ]
  %671 = phi i64 [ %679, %728 ], [ %662, %665 ]
  %672 = phi i64 [ %736, %728 ], [ %661, %665 ]
  %673 = phi i32 [ %734, %728 ], [ %668, %665 ]
  %674 = sub i32 %660, %670
  %675 = tail call i32 @llvm.smin.i32(i32 %674, i32 0)
  %676 = sub i32 %674, %675
  %677 = zext i32 %676 to i64
  %678 = add nuw nsw i64 %677, 1
  %679 = add nsw i64 %671, -1
  %680 = icmp ult i32 %676, 31
  br i1 %680, label %716, label %681

681:                                              ; preds = %669
  %682 = and i64 %678, 8589934560
  %683 = sub i64 %672, %682
  br label %684

684:                                              ; preds = %684, %681
  %685 = phi i64 [ 0, %681 ], [ %708, %684 ]
  %686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %704, %684 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %705, %684 ]
  %688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %706, %684 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %707, %684 ]
  %690 = sub i64 %672, %685
  %691 = getelementptr inbounds i32, ptr %9, i64 %690
  %692 = getelementptr inbounds i32, ptr %691, i64 -7
  %693 = load <8 x i32>, ptr %692, align 4, !tbaa !5
  %694 = shufflevector <8 x i32> %693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %695 = getelementptr inbounds i32, ptr %691, i64 -15
  %696 = load <8 x i32>, ptr %695, align 4, !tbaa !5
  %697 = shufflevector <8 x i32> %696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %698 = getelementptr inbounds i32, ptr %691, i64 -23
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !5
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %691, i64 -31
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !5
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = mul <8 x i32> %694, %686
  %705 = mul <8 x i32> %697, %687
  %706 = mul <8 x i32> %700, %688
  %707 = mul <8 x i32> %703, %689
  %708 = add nuw i64 %685, 32
  %709 = icmp eq i64 %708, %682
  br i1 %709, label %710, label %684, !llvm.loop !604

710:                                              ; preds = %684
  %711 = mul <8 x i32> %705, %704
  %712 = mul <8 x i32> %706, %711
  %713 = mul <8 x i32> %707, %712
  %714 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %713)
  %715 = icmp eq i64 %678, %682
  br i1 %715, label %728, label %716

716:                                              ; preds = %669, %710
  %717 = phi i64 [ %672, %669 ], [ %683, %710 ]
  %718 = phi i32 [ 1, %669 ], [ %714, %710 ]
  br label %719

719:                                              ; preds = %716, %719
  %720 = phi i64 [ %725, %719 ], [ %717, %716 ]
  %721 = phi i32 [ %724, %719 ], [ %718, %716 ]
  %722 = getelementptr inbounds i32, ptr %9, i64 %720
  %723 = load i32, ptr %722, align 4, !tbaa !5
  %724 = mul nsw i32 %723, %721
  %725 = add nsw i64 %720, -1
  %726 = trunc i64 %720 to i32
  %727 = icmp sgt i32 %726, 0
  br i1 %727, label %719, label %728, !llvm.loop !605

728:                                              ; preds = %719, %710
  %729 = phi i32 [ %714, %710 ], [ %724, %719 ]
  %730 = and i64 %679, 4294967295
  %731 = getelementptr inbounds i32, ptr %6, i64 %730
  %732 = load i32, ptr %731, align 4, !tbaa !5
  %733 = mul nsw i32 %732, %729
  %734 = add nsw i32 %733, %673
  %735 = icmp sgt i64 %671, 2
  %736 = add nsw i64 %672, -1
  %737 = add i32 %670, 1
  br i1 %735, label %669, label %738, !llvm.loop !606

738:                                              ; preds = %728, %665
  %739 = phi i32 [ %668, %665 ], [ %734, %728 ]
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds double, ptr %2, i64 %740
  %742 = load double, ptr %741, align 8, !tbaa !18
  %743 = getelementptr inbounds i32, ptr %634, i64 %740
  %744 = load i32, ptr %743, align 4, !tbaa !5
  %745 = load i32, ptr %636, align 4, !tbaa !5
  %746 = sitofp i32 %745 to double
  %747 = sitofp i32 %744 to double
  %748 = fmul fast double %742, %747
  %749 = fmul fast double %748, %748
  %750 = fadd fast double %749, %746
  %751 = fptosi double %750 to i32
  store i32 %751, ptr %636, align 4, !tbaa !5
  %752 = fadd fast double %742, %667
  %753 = add nuw nsw i32 %666, 1
  br i1 %659, label %754, label %801

754:                                              ; preds = %738
  %755 = load i32, ptr %4, align 4, !tbaa !5
  %756 = load i32, ptr %12, align 4, !tbaa !5
  %757 = add nsw i32 %756, -1
  %758 = icmp slt i32 %755, %757
  br i1 %758, label %778, label %759

759:                                              ; preds = %754
  %760 = icmp eq i32 %755, %757
  br i1 %760, label %761, label %794

761:                                              ; preds = %759
  store i32 0, ptr %4, align 4, !tbaa !5
  %762 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %762, ptr %6, align 4, !tbaa !5
  br i1 %664, label %801, label %763

763:                                              ; preds = %761, %788
  %764 = phi i64 [ %792, %788 ], [ 1, %761 ]
  %765 = getelementptr inbounds i32, ptr %4, i64 %764
  %766 = load i32, ptr %765, align 4, !tbaa !5
  %767 = getelementptr inbounds i32, ptr %12, i64 %764
  %768 = load i32, ptr %767, align 4, !tbaa !5
  %769 = add nsw i32 %768, -1
  %770 = icmp slt i32 %766, %769
  br i1 %770, label %771, label %786

771:                                              ; preds = %763
  br i1 %758, label %778, label %772

772:                                              ; preds = %771
  %773 = getelementptr inbounds i32, ptr %7, i64 %764
  %774 = load i32, ptr %773, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %6, i64 %764
  %776 = load i32, ptr %775, align 4, !tbaa !5
  %777 = add nsw i32 %776, %774
  store i32 %777, ptr %775, align 4, !tbaa !5
  br label %796

778:                                              ; preds = %754, %771
  %779 = phi i32 [ %766, %771 ], [ %755, %754 ]
  %780 = phi ptr [ %765, %771 ], [ %4, %754 ]
  %781 = phi i64 [ %764, %771 ], [ 0, %754 ]
  %782 = add nsw i32 %779, 1
  store i32 %782, ptr %780, align 4, !tbaa !5
  %783 = getelementptr inbounds i32, ptr %7, i64 %781
  %784 = load i32, ptr %783, align 4, !tbaa !5
  %785 = getelementptr inbounds i32, ptr %6, i64 %781
  br label %796

786:                                              ; preds = %763
  %787 = icmp eq i32 %766, %769
  br i1 %787, label %788, label %794

788:                                              ; preds = %786
  store i32 0, ptr %765, align 4, !tbaa !5
  %789 = getelementptr inbounds i32, ptr %8, i64 %764
  %790 = load i32, ptr %789, align 4, !tbaa !5
  %791 = getelementptr inbounds i32, ptr %6, i64 %764
  store i32 %790, ptr %791, align 4, !tbaa !5
  %792 = add nuw nsw i64 %764, 1
  %793 = icmp eq i64 %792, %662
  br i1 %793, label %801, label %763, !llvm.loop !607

794:                                              ; preds = %759, %786
  %795 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

796:                                              ; preds = %772, %778
  %797 = phi ptr [ %785, %778 ], [ %765, %772 ]
  %798 = phi i32 [ %784, %778 ], [ 1, %772 ]
  %799 = load i32, ptr %797, align 4, !tbaa !5
  %800 = add nsw i32 %799, %798
  store i32 %800, ptr %797, align 4, !tbaa !5
  br label %801

801:                                              ; preds = %788, %796, %761, %738
  %802 = icmp eq i32 %753, %5
  br i1 %802, label %5500, label %665, !llvm.loop !608

803:                                              ; preds = %648, %941
  %804 = phi i32 [ 0, %648 ], [ %890, %941 ]
  %805 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %649, label %806, label %875

806:                                              ; preds = %803, %865
  %807 = phi i32 [ %874, %865 ], [ 0, %803 ]
  %808 = phi i64 [ %816, %865 ], [ %653, %803 ]
  %809 = phi i64 [ %873, %865 ], [ %652, %803 ]
  %810 = phi i32 [ %871, %865 ], [ %805, %803 ]
  %811 = sub i32 %651, %807
  %812 = tail call i32 @llvm.smin.i32(i32 %811, i32 0)
  %813 = sub i32 %811, %812
  %814 = zext i32 %813 to i64
  %815 = add nuw nsw i64 %814, 1
  %816 = add nsw i64 %808, -1
  %817 = icmp ult i32 %813, 31
  br i1 %817, label %853, label %818

818:                                              ; preds = %806
  %819 = and i64 %815, 8589934560
  %820 = sub i64 %809, %819
  br label %821

821:                                              ; preds = %821, %818
  %822 = phi i64 [ 0, %818 ], [ %845, %821 ]
  %823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %841, %821 ]
  %824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %842, %821 ]
  %825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %843, %821 ]
  %826 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %844, %821 ]
  %827 = sub i64 %809, %822
  %828 = getelementptr inbounds i32, ptr %11, i64 %827
  %829 = getelementptr inbounds i32, ptr %828, i64 -7
  %830 = load <8 x i32>, ptr %829, align 4, !tbaa !5
  %831 = shufflevector <8 x i32> %830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %832 = getelementptr inbounds i32, ptr %828, i64 -15
  %833 = load <8 x i32>, ptr %832, align 4, !tbaa !5
  %834 = shufflevector <8 x i32> %833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %835 = getelementptr inbounds i32, ptr %828, i64 -23
  %836 = load <8 x i32>, ptr %835, align 4, !tbaa !5
  %837 = shufflevector <8 x i32> %836, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %838 = getelementptr inbounds i32, ptr %828, i64 -31
  %839 = load <8 x i32>, ptr %838, align 4, !tbaa !5
  %840 = shufflevector <8 x i32> %839, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %841 = mul <8 x i32> %831, %823
  %842 = mul <8 x i32> %834, %824
  %843 = mul <8 x i32> %837, %825
  %844 = mul <8 x i32> %840, %826
  %845 = add nuw i64 %822, 32
  %846 = icmp eq i64 %845, %819
  br i1 %846, label %847, label %821, !llvm.loop !609

847:                                              ; preds = %821
  %848 = mul <8 x i32> %842, %841
  %849 = mul <8 x i32> %843, %848
  %850 = mul <8 x i32> %844, %849
  %851 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %850)
  %852 = icmp eq i64 %815, %819
  br i1 %852, label %865, label %853

853:                                              ; preds = %806, %847
  %854 = phi i64 [ %809, %806 ], [ %820, %847 ]
  %855 = phi i32 [ 1, %806 ], [ %851, %847 ]
  br label %856

856:                                              ; preds = %853, %856
  %857 = phi i64 [ %862, %856 ], [ %854, %853 ]
  %858 = phi i32 [ %861, %856 ], [ %855, %853 ]
  %859 = getelementptr inbounds i32, ptr %11, i64 %857
  %860 = load i32, ptr %859, align 4, !tbaa !5
  %861 = mul nsw i32 %860, %858
  %862 = add nsw i64 %857, -1
  %863 = trunc i64 %857 to i32
  %864 = icmp sgt i32 %863, 0
  br i1 %864, label %856, label %865, !llvm.loop !610

865:                                              ; preds = %856, %847
  %866 = phi i32 [ %851, %847 ], [ %861, %856 ]
  %867 = and i64 %816, 4294967295
  %868 = getelementptr inbounds i32, ptr %6, i64 %867
  %869 = load i32, ptr %868, align 4, !tbaa !5
  %870 = mul nsw i32 %869, %866
  %871 = add nsw i32 %870, %810
  %872 = icmp sgt i64 %808, 2
  %873 = add nsw i64 %809, -1
  %874 = add i32 %807, 1
  br i1 %872, label %806, label %875, !llvm.loop !611

875:                                              ; preds = %865, %803
  %876 = phi i32 [ %805, %803 ], [ %871, %865 ]
  %877 = icmp slt i32 %876, %5
  br i1 %877, label %880, label %878

878:                                              ; preds = %875
  %879 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

880:                                              ; preds = %875
  %881 = sext i32 %876 to i64
  %882 = getelementptr inbounds i32, ptr %634, i64 %881
  %883 = load i32, ptr %882, align 4, !tbaa !5
  %884 = load i32, ptr %636, align 4, !tbaa !5
  %885 = sitofp i32 %884 to double
  %886 = sitofp i32 %883 to double
  %887 = fmul fast double %886, %886
  %888 = fadd fast double %887, %885
  %889 = fptosi double %888 to i32
  store i32 %889, ptr %636, align 4, !tbaa !5
  %890 = add nuw nsw i32 %804, 1
  br i1 %650, label %891, label %941

891:                                              ; preds = %880
  %892 = load i32, ptr %4, align 4, !tbaa !5
  %893 = load i32, ptr %12, align 4, !tbaa !5
  %894 = add nsw i32 %893, -1
  %895 = icmp slt i32 %892, %894
  br i1 %895, label %918, label %896

896:                                              ; preds = %891
  %897 = icmp eq i32 %892, %894
  br i1 %897, label %898, label %934

898:                                              ; preds = %896
  store i32 0, ptr %4, align 4, !tbaa !5
  %899 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %899, ptr %6, align 4, !tbaa !5
  br i1 %655, label %941, label %900

900:                                              ; preds = %898, %928
  %901 = phi i64 [ %932, %928 ], [ 1, %898 ]
  %902 = getelementptr inbounds i32, ptr %4, i64 %901
  %903 = load i32, ptr %902, align 4, !tbaa !5
  %904 = getelementptr inbounds i32, ptr %12, i64 %901
  %905 = load i32, ptr %904, align 4, !tbaa !5
  %906 = add nsw i32 %905, -1
  %907 = icmp slt i32 %903, %906
  br i1 %907, label %908, label %926

908:                                              ; preds = %900
  br i1 %895, label %918, label %909

909:                                              ; preds = %908
  %910 = shl i64 %901, 32
  %911 = add i64 %910, -4294967296
  %912 = ashr exact i64 %911, 32
  %913 = getelementptr inbounds i32, ptr %7, i64 %912
  %914 = load i32, ptr %913, align 4, !tbaa !5
  %915 = getelementptr inbounds i32, ptr %6, i64 %901
  %916 = load i32, ptr %915, align 4, !tbaa !5
  %917 = add nsw i32 %916, %914
  store i32 %917, ptr %915, align 4, !tbaa !5
  br label %936

918:                                              ; preds = %891, %908
  %919 = phi i32 [ %903, %908 ], [ %892, %891 ]
  %920 = phi ptr [ %902, %908 ], [ %4, %891 ]
  %921 = phi i64 [ %901, %908 ], [ 0, %891 ]
  %922 = add nsw i32 %919, 1
  store i32 %922, ptr %920, align 4, !tbaa !5
  %923 = getelementptr inbounds i32, ptr %7, i64 %921
  %924 = load i32, ptr %923, align 4, !tbaa !5
  %925 = getelementptr inbounds i32, ptr %6, i64 %921
  br label %936

926:                                              ; preds = %900
  %927 = icmp eq i32 %903, %906
  br i1 %927, label %928, label %934

928:                                              ; preds = %926
  store i32 0, ptr %902, align 4, !tbaa !5
  %929 = getelementptr inbounds i32, ptr %8, i64 %901
  %930 = load i32, ptr %929, align 4, !tbaa !5
  %931 = getelementptr inbounds i32, ptr %6, i64 %901
  store i32 %930, ptr %931, align 4, !tbaa !5
  %932 = add nuw nsw i64 %901, 1
  %933 = icmp eq i64 %932, %653
  br i1 %933, label %941, label %900, !llvm.loop !612

934:                                              ; preds = %896, %926
  %935 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

936:                                              ; preds = %909, %918
  %937 = phi ptr [ %925, %918 ], [ %902, %909 ]
  %938 = phi i32 [ %924, %918 ], [ 1, %909 ]
  %939 = load i32, ptr %937, align 4, !tbaa !5
  %940 = add nsw i32 %939, %938
  store i32 %940, ptr %937, align 4, !tbaa !5
  br label %941

941:                                              ; preds = %928, %936, %898, %880
  %942 = icmp eq i32 %890, %5
  br i1 %942, label %5500, label %803, !llvm.loop !613

943:                                              ; preds = %641
  %944 = getelementptr inbounds i32, ptr %3, i64 %19
  %945 = load i32, ptr %944, align 4, !tbaa !5
  %946 = icmp eq i32 %945, 0
  %947 = icmp sgt i32 %5, 0
  br i1 %946, label %957, label %948

948:                                              ; preds = %943
  br i1 %947, label %949, label %5500

949:                                              ; preds = %948
  %950 = icmp sgt i32 %13, 1
  %951 = icmp sgt i32 %13, 0
  %952 = add i32 %13, -2
  %953 = zext i32 %952 to i64
  %954 = zext i32 %13 to i64
  %955 = add nuw i32 %5, 1
  %956 = icmp eq i32 %13, 1
  br label %1098

957:                                              ; preds = %943
  br i1 %947, label %958, label %5500

958:                                              ; preds = %957
  %959 = icmp sgt i32 %13, 1
  %960 = icmp sgt i32 %13, 0
  %961 = add i32 %13, -2
  %962 = zext i32 %961 to i64
  %963 = zext i32 %13 to i64
  %964 = add nuw i32 %5, 1
  %965 = icmp eq i32 %13, 1
  br label %966

966:                                              ; preds = %958, %1096
  %967 = phi i32 [ 0, %958 ], [ %1048, %1096 ]
  %968 = phi double [ 0.000000e+00, %958 ], [ %1047, %1096 ]
  %969 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %959, label %970, label %1039

970:                                              ; preds = %966, %1029
  %971 = phi i32 [ %1038, %1029 ], [ 0, %966 ]
  %972 = phi i64 [ %980, %1029 ], [ %963, %966 ]
  %973 = phi i64 [ %1037, %1029 ], [ %962, %966 ]
  %974 = phi i32 [ %1035, %1029 ], [ %969, %966 ]
  %975 = sub i32 %961, %971
  %976 = tail call i32 @llvm.smin.i32(i32 %975, i32 0)
  %977 = sub i32 %975, %976
  %978 = zext i32 %977 to i64
  %979 = add nuw nsw i64 %978, 1
  %980 = add nsw i64 %972, -1
  %981 = icmp ult i32 %977, 31
  br i1 %981, label %1017, label %982

982:                                              ; preds = %970
  %983 = and i64 %979, 8589934560
  %984 = sub i64 %973, %983
  br label %985

985:                                              ; preds = %985, %982
  %986 = phi i64 [ 0, %982 ], [ %1009, %985 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1005, %985 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1006, %985 ]
  %989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1007, %985 ]
  %990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1008, %985 ]
  %991 = sub i64 %973, %986
  %992 = getelementptr inbounds i32, ptr %9, i64 %991
  %993 = getelementptr inbounds i32, ptr %992, i64 -7
  %994 = load <8 x i32>, ptr %993, align 4, !tbaa !5
  %995 = shufflevector <8 x i32> %994, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %996 = getelementptr inbounds i32, ptr %992, i64 -15
  %997 = load <8 x i32>, ptr %996, align 4, !tbaa !5
  %998 = shufflevector <8 x i32> %997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %999 = getelementptr inbounds i32, ptr %992, i64 -23
  %1000 = load <8 x i32>, ptr %999, align 4, !tbaa !5
  %1001 = shufflevector <8 x i32> %1000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1002 = getelementptr inbounds i32, ptr %992, i64 -31
  %1003 = load <8 x i32>, ptr %1002, align 4, !tbaa !5
  %1004 = shufflevector <8 x i32> %1003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1005 = mul <8 x i32> %995, %987
  %1006 = mul <8 x i32> %998, %988
  %1007 = mul <8 x i32> %1001, %989
  %1008 = mul <8 x i32> %1004, %990
  %1009 = add nuw i64 %986, 32
  %1010 = icmp eq i64 %1009, %983
  br i1 %1010, label %1011, label %985, !llvm.loop !614

1011:                                             ; preds = %985
  %1012 = mul <8 x i32> %1006, %1005
  %1013 = mul <8 x i32> %1007, %1012
  %1014 = mul <8 x i32> %1008, %1013
  %1015 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1014)
  %1016 = icmp eq i64 %979, %983
  br i1 %1016, label %1029, label %1017

1017:                                             ; preds = %970, %1011
  %1018 = phi i64 [ %973, %970 ], [ %984, %1011 ]
  %1019 = phi i32 [ 1, %970 ], [ %1015, %1011 ]
  br label %1020

1020:                                             ; preds = %1017, %1020
  %1021 = phi i64 [ %1026, %1020 ], [ %1018, %1017 ]
  %1022 = phi i32 [ %1025, %1020 ], [ %1019, %1017 ]
  %1023 = getelementptr inbounds i32, ptr %9, i64 %1021
  %1024 = load i32, ptr %1023, align 4, !tbaa !5
  %1025 = mul nsw i32 %1024, %1022
  %1026 = add nsw i64 %1021, -1
  %1027 = trunc i64 %1021 to i32
  %1028 = icmp sgt i32 %1027, 0
  br i1 %1028, label %1020, label %1029, !llvm.loop !615

1029:                                             ; preds = %1020, %1011
  %1030 = phi i32 [ %1015, %1011 ], [ %1025, %1020 ]
  %1031 = and i64 %980, 4294967295
  %1032 = getelementptr inbounds i32, ptr %6, i64 %1031
  %1033 = load i32, ptr %1032, align 4, !tbaa !5
  %1034 = mul nsw i32 %1033, %1030
  %1035 = add nsw i32 %1034, %974
  %1036 = icmp sgt i64 %972, 2
  %1037 = add nsw i64 %973, -1
  %1038 = add i32 %971, 1
  br i1 %1036, label %970, label %1039, !llvm.loop !616

1039:                                             ; preds = %1029, %966
  %1040 = phi i32 [ %969, %966 ], [ %1035, %1029 ]
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds i32, ptr %634, i64 %1041
  %1043 = load i32, ptr %1042, align 4, !tbaa !5
  %1044 = load i32, ptr %636, align 4, !tbaa !5
  %1045 = mul nsw i32 %1043, %1043
  %1046 = add nsw i32 %1044, %1045
  store i32 %1046, ptr %636, align 4, !tbaa !5
  %1047 = fadd fast double %968, 1.000000e+00
  %1048 = add nuw nsw i32 %967, 1
  br i1 %960, label %1049, label %1096

1049:                                             ; preds = %1039
  %1050 = load i32, ptr %4, align 4, !tbaa !5
  %1051 = load i32, ptr %12, align 4, !tbaa !5
  %1052 = add nsw i32 %1051, -1
  %1053 = icmp slt i32 %1050, %1052
  br i1 %1053, label %1073, label %1054

1054:                                             ; preds = %1049
  %1055 = icmp eq i32 %1050, %1052
  br i1 %1055, label %1056, label %1089

1056:                                             ; preds = %1054
  store i32 0, ptr %4, align 4, !tbaa !5
  %1057 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1057, ptr %6, align 4, !tbaa !5
  br i1 %965, label %1096, label %1058

1058:                                             ; preds = %1056, %1083
  %1059 = phi i64 [ %1087, %1083 ], [ 1, %1056 ]
  %1060 = getelementptr inbounds i32, ptr %4, i64 %1059
  %1061 = load i32, ptr %1060, align 4, !tbaa !5
  %1062 = getelementptr inbounds i32, ptr %12, i64 %1059
  %1063 = load i32, ptr %1062, align 4, !tbaa !5
  %1064 = add nsw i32 %1063, -1
  %1065 = icmp slt i32 %1061, %1064
  br i1 %1065, label %1066, label %1081

1066:                                             ; preds = %1058
  br i1 %1053, label %1073, label %1067

1067:                                             ; preds = %1066
  %1068 = getelementptr inbounds i32, ptr %7, i64 %1059
  %1069 = load i32, ptr %1068, align 4, !tbaa !5
  %1070 = getelementptr inbounds i32, ptr %6, i64 %1059
  %1071 = load i32, ptr %1070, align 4, !tbaa !5
  %1072 = add nsw i32 %1071, %1069
  store i32 %1072, ptr %1070, align 4, !tbaa !5
  br label %1091

1073:                                             ; preds = %1049, %1066
  %1074 = phi i32 [ %1061, %1066 ], [ %1050, %1049 ]
  %1075 = phi ptr [ %1060, %1066 ], [ %4, %1049 ]
  %1076 = phi i64 [ %1059, %1066 ], [ 0, %1049 ]
  %1077 = add nsw i32 %1074, 1
  store i32 %1077, ptr %1075, align 4, !tbaa !5
  %1078 = getelementptr inbounds i32, ptr %7, i64 %1076
  %1079 = load i32, ptr %1078, align 4, !tbaa !5
  %1080 = getelementptr inbounds i32, ptr %6, i64 %1076
  br label %1091

1081:                                             ; preds = %1058
  %1082 = icmp eq i32 %1061, %1064
  br i1 %1082, label %1083, label %1089

1083:                                             ; preds = %1081
  store i32 0, ptr %1060, align 4, !tbaa !5
  %1084 = getelementptr inbounds i32, ptr %8, i64 %1059
  %1085 = load i32, ptr %1084, align 4, !tbaa !5
  %1086 = getelementptr inbounds i32, ptr %6, i64 %1059
  store i32 %1085, ptr %1086, align 4, !tbaa !5
  %1087 = add nuw nsw i64 %1059, 1
  %1088 = icmp eq i64 %1087, %963
  br i1 %1088, label %1096, label %1058, !llvm.loop !617

1089:                                             ; preds = %1054, %1081
  %1090 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

1091:                                             ; preds = %1067, %1073
  %1092 = phi ptr [ %1080, %1073 ], [ %1060, %1067 ]
  %1093 = phi i32 [ %1079, %1073 ], [ 1, %1067 ]
  %1094 = load i32, ptr %1092, align 4, !tbaa !5
  %1095 = add nsw i32 %1094, %1093
  store i32 %1095, ptr %1092, align 4, !tbaa !5
  br label %1096

1096:                                             ; preds = %1083, %1091, %1056, %1039
  %1097 = icmp eq i32 %1048, %5
  br i1 %1097, label %5500, label %966, !llvm.loop !618

1098:                                             ; preds = %949, %1233
  %1099 = phi i32 [ 0, %949 ], [ %1182, %1233 ]
  %1100 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %950, label %1101, label %1170

1101:                                             ; preds = %1098, %1160
  %1102 = phi i32 [ %1169, %1160 ], [ 0, %1098 ]
  %1103 = phi i64 [ %1111, %1160 ], [ %954, %1098 ]
  %1104 = phi i64 [ %1168, %1160 ], [ %953, %1098 ]
  %1105 = phi i32 [ %1166, %1160 ], [ %1100, %1098 ]
  %1106 = sub i32 %952, %1102
  %1107 = tail call i32 @llvm.smin.i32(i32 %1106, i32 0)
  %1108 = sub i32 %1106, %1107
  %1109 = zext i32 %1108 to i64
  %1110 = add nuw nsw i64 %1109, 1
  %1111 = add nsw i64 %1103, -1
  %1112 = icmp ult i32 %1108, 31
  br i1 %1112, label %1148, label %1113

1113:                                             ; preds = %1101
  %1114 = and i64 %1110, 8589934560
  %1115 = sub i64 %1104, %1114
  br label %1116

1116:                                             ; preds = %1116, %1113
  %1117 = phi i64 [ 0, %1113 ], [ %1140, %1116 ]
  %1118 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1113 ], [ %1136, %1116 ]
  %1119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1113 ], [ %1137, %1116 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1113 ], [ %1138, %1116 ]
  %1121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1113 ], [ %1139, %1116 ]
  %1122 = sub i64 %1104, %1117
  %1123 = getelementptr inbounds i32, ptr %11, i64 %1122
  %1124 = getelementptr inbounds i32, ptr %1123, i64 -7
  %1125 = load <8 x i32>, ptr %1124, align 4, !tbaa !5
  %1126 = shufflevector <8 x i32> %1125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1127 = getelementptr inbounds i32, ptr %1123, i64 -15
  %1128 = load <8 x i32>, ptr %1127, align 4, !tbaa !5
  %1129 = shufflevector <8 x i32> %1128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1130 = getelementptr inbounds i32, ptr %1123, i64 -23
  %1131 = load <8 x i32>, ptr %1130, align 4, !tbaa !5
  %1132 = shufflevector <8 x i32> %1131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1133 = getelementptr inbounds i32, ptr %1123, i64 -31
  %1134 = load <8 x i32>, ptr %1133, align 4, !tbaa !5
  %1135 = shufflevector <8 x i32> %1134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1136 = mul <8 x i32> %1126, %1118
  %1137 = mul <8 x i32> %1129, %1119
  %1138 = mul <8 x i32> %1132, %1120
  %1139 = mul <8 x i32> %1135, %1121
  %1140 = add nuw i64 %1117, 32
  %1141 = icmp eq i64 %1140, %1114
  br i1 %1141, label %1142, label %1116, !llvm.loop !619

1142:                                             ; preds = %1116
  %1143 = mul <8 x i32> %1137, %1136
  %1144 = mul <8 x i32> %1138, %1143
  %1145 = mul <8 x i32> %1139, %1144
  %1146 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1145)
  %1147 = icmp eq i64 %1110, %1114
  br i1 %1147, label %1160, label %1148

1148:                                             ; preds = %1101, %1142
  %1149 = phi i64 [ %1104, %1101 ], [ %1115, %1142 ]
  %1150 = phi i32 [ 1, %1101 ], [ %1146, %1142 ]
  br label %1151

1151:                                             ; preds = %1148, %1151
  %1152 = phi i64 [ %1157, %1151 ], [ %1149, %1148 ]
  %1153 = phi i32 [ %1156, %1151 ], [ %1150, %1148 ]
  %1154 = getelementptr inbounds i32, ptr %11, i64 %1152
  %1155 = load i32, ptr %1154, align 4, !tbaa !5
  %1156 = mul nsw i32 %1155, %1153
  %1157 = add nsw i64 %1152, -1
  %1158 = trunc i64 %1152 to i32
  %1159 = icmp sgt i32 %1158, 0
  br i1 %1159, label %1151, label %1160, !llvm.loop !620

1160:                                             ; preds = %1151, %1142
  %1161 = phi i32 [ %1146, %1142 ], [ %1156, %1151 ]
  %1162 = and i64 %1111, 4294967295
  %1163 = getelementptr inbounds i32, ptr %6, i64 %1162
  %1164 = load i32, ptr %1163, align 4, !tbaa !5
  %1165 = mul nsw i32 %1164, %1161
  %1166 = add nsw i32 %1165, %1105
  %1167 = icmp sgt i64 %1103, 2
  %1168 = add nsw i64 %1104, -1
  %1169 = add i32 %1102, 1
  br i1 %1167, label %1101, label %1170, !llvm.loop !621

1170:                                             ; preds = %1160, %1098
  %1171 = phi i32 [ %1100, %1098 ], [ %1166, %1160 ]
  %1172 = icmp slt i32 %1171, %5
  br i1 %1172, label %1175, label %1173

1173:                                             ; preds = %1170
  %1174 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

1175:                                             ; preds = %1170
  %1176 = sext i32 %1171 to i64
  %1177 = getelementptr inbounds i32, ptr %634, i64 %1176
  %1178 = load i32, ptr %1177, align 4, !tbaa !5
  %1179 = load i32, ptr %636, align 4, !tbaa !5
  %1180 = mul nsw i32 %1178, %1178
  %1181 = add nsw i32 %1179, %1180
  store i32 %1181, ptr %636, align 4, !tbaa !5
  %1182 = add nuw nsw i32 %1099, 1
  br i1 %951, label %1183, label %1233

1183:                                             ; preds = %1175
  %1184 = load i32, ptr %4, align 4, !tbaa !5
  %1185 = load i32, ptr %12, align 4, !tbaa !5
  %1186 = add nsw i32 %1185, -1
  %1187 = icmp slt i32 %1184, %1186
  br i1 %1187, label %1210, label %1188

1188:                                             ; preds = %1183
  %1189 = icmp eq i32 %1184, %1186
  br i1 %1189, label %1190, label %1226

1190:                                             ; preds = %1188
  store i32 0, ptr %4, align 4, !tbaa !5
  %1191 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1191, ptr %6, align 4, !tbaa !5
  br i1 %956, label %1233, label %1192

1192:                                             ; preds = %1190, %1220
  %1193 = phi i64 [ %1224, %1220 ], [ 1, %1190 ]
  %1194 = getelementptr inbounds i32, ptr %4, i64 %1193
  %1195 = load i32, ptr %1194, align 4, !tbaa !5
  %1196 = getelementptr inbounds i32, ptr %12, i64 %1193
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = add nsw i32 %1197, -1
  %1199 = icmp slt i32 %1195, %1198
  br i1 %1199, label %1200, label %1218

1200:                                             ; preds = %1192
  br i1 %1187, label %1210, label %1201

1201:                                             ; preds = %1200
  %1202 = shl i64 %1193, 32
  %1203 = add i64 %1202, -4294967296
  %1204 = ashr exact i64 %1203, 32
  %1205 = getelementptr inbounds i32, ptr %7, i64 %1204
  %1206 = load i32, ptr %1205, align 4, !tbaa !5
  %1207 = getelementptr inbounds i32, ptr %6, i64 %1193
  %1208 = load i32, ptr %1207, align 4, !tbaa !5
  %1209 = add nsw i32 %1208, %1206
  store i32 %1209, ptr %1207, align 4, !tbaa !5
  br label %1228

1210:                                             ; preds = %1183, %1200
  %1211 = phi i32 [ %1195, %1200 ], [ %1184, %1183 ]
  %1212 = phi ptr [ %1194, %1200 ], [ %4, %1183 ]
  %1213 = phi i64 [ %1193, %1200 ], [ 0, %1183 ]
  %1214 = add nsw i32 %1211, 1
  store i32 %1214, ptr %1212, align 4, !tbaa !5
  %1215 = getelementptr inbounds i32, ptr %7, i64 %1213
  %1216 = load i32, ptr %1215, align 4, !tbaa !5
  %1217 = getelementptr inbounds i32, ptr %6, i64 %1213
  br label %1228

1218:                                             ; preds = %1192
  %1219 = icmp eq i32 %1195, %1198
  br i1 %1219, label %1220, label %1226

1220:                                             ; preds = %1218
  store i32 0, ptr %1194, align 4, !tbaa !5
  %1221 = getelementptr inbounds i32, ptr %8, i64 %1193
  %1222 = load i32, ptr %1221, align 4, !tbaa !5
  %1223 = getelementptr inbounds i32, ptr %6, i64 %1193
  store i32 %1222, ptr %1223, align 4, !tbaa !5
  %1224 = add nuw nsw i64 %1193, 1
  %1225 = icmp eq i64 %1224, %954
  br i1 %1225, label %1233, label %1192, !llvm.loop !622

1226:                                             ; preds = %1188, %1218
  %1227 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

1228:                                             ; preds = %1201, %1210
  %1229 = phi ptr [ %1217, %1210 ], [ %1194, %1201 ]
  %1230 = phi i32 [ %1216, %1210 ], [ 1, %1201 ]
  %1231 = load i32, ptr %1229, align 4, !tbaa !5
  %1232 = add nsw i32 %1231, %1230
  store i32 %1232, ptr %1229, align 4, !tbaa !5
  br label %1233

1233:                                             ; preds = %1220, %1228, %1190, %1175
  %1234 = icmp eq i32 %1182, %5
  br i1 %1234, label %5500, label %1098, !llvm.loop !623

1235:                                             ; preds = %641
  %1236 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1168, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

1237:                                             ; preds = %18
  %1238 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1239 = load ptr, ptr %1238, align 8, !tbaa !9
  %1240 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1241 = load ptr, ptr %1240, align 8, !tbaa !9
  store i8 0, ptr %1241, align 1, !tbaa !11
  %1242 = icmp eq i32 %13, 0
  br i1 %1242, label %1243, label %1247

1243:                                             ; preds = %1237
  %1244 = load i32, ptr %1239, align 4, !tbaa !5
  %1245 = mul i32 %1244, %1244
  %1246 = trunc i32 %1245 to i8
  store i8 %1246, ptr %1241, align 1, !tbaa !11
  br label %5500

1247:                                             ; preds = %1237
  switch i32 %1, label %1847 [
    i32 1, label %1248
    i32 0, label %1553
  ]

1248:                                             ; preds = %1247
  %1249 = getelementptr inbounds i32, ptr %3, i64 %19
  %1250 = load i32, ptr %1249, align 4, !tbaa !5
  %1251 = icmp eq i32 %1250, 0
  %1252 = icmp sgt i32 %5, 0
  br i1 %1251, label %1262, label %1253

1253:                                             ; preds = %1248
  br i1 %1252, label %1254, label %5500

1254:                                             ; preds = %1253
  %1255 = icmp sgt i32 %13, 1
  %1256 = icmp sgt i32 %13, 0
  %1257 = add i32 %13, -2
  %1258 = zext i32 %1257 to i64
  %1259 = zext i32 %13 to i64
  %1260 = add nuw i32 %5, 1
  %1261 = icmp eq i32 %13, 1
  br label %1411

1262:                                             ; preds = %1248
  br i1 %1252, label %1263, label %5500

1263:                                             ; preds = %1262
  %1264 = icmp sgt i32 %13, 1
  %1265 = icmp sgt i32 %13, 0
  %1266 = add i32 %13, -2
  %1267 = zext i32 %1266 to i64
  %1268 = zext i32 %13 to i64
  %1269 = add nuw i32 %5, 1
  %1270 = icmp eq i32 %13, 1
  br label %1271

1271:                                             ; preds = %1263, %1409
  %1272 = phi i32 [ 0, %1263 ], [ %1361, %1409 ]
  %1273 = phi double [ 0.000000e+00, %1263 ], [ %1360, %1409 ]
  %1274 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1264, label %1275, label %1344

1275:                                             ; preds = %1271, %1334
  %1276 = phi i32 [ %1343, %1334 ], [ 0, %1271 ]
  %1277 = phi i64 [ %1285, %1334 ], [ %1268, %1271 ]
  %1278 = phi i64 [ %1342, %1334 ], [ %1267, %1271 ]
  %1279 = phi i32 [ %1340, %1334 ], [ %1274, %1271 ]
  %1280 = sub i32 %1266, %1276
  %1281 = tail call i32 @llvm.smin.i32(i32 %1280, i32 0)
  %1282 = sub i32 %1280, %1281
  %1283 = zext i32 %1282 to i64
  %1284 = add nuw nsw i64 %1283, 1
  %1285 = add nsw i64 %1277, -1
  %1286 = icmp ult i32 %1282, 31
  br i1 %1286, label %1322, label %1287

1287:                                             ; preds = %1275
  %1288 = and i64 %1284, 8589934560
  %1289 = sub i64 %1278, %1288
  br label %1290

1290:                                             ; preds = %1290, %1287
  %1291 = phi i64 [ 0, %1287 ], [ %1314, %1290 ]
  %1292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1310, %1290 ]
  %1293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1311, %1290 ]
  %1294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1312, %1290 ]
  %1295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1287 ], [ %1313, %1290 ]
  %1296 = sub i64 %1278, %1291
  %1297 = getelementptr inbounds i32, ptr %9, i64 %1296
  %1298 = getelementptr inbounds i32, ptr %1297, i64 -7
  %1299 = load <8 x i32>, ptr %1298, align 4, !tbaa !5
  %1300 = shufflevector <8 x i32> %1299, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1301 = getelementptr inbounds i32, ptr %1297, i64 -15
  %1302 = load <8 x i32>, ptr %1301, align 4, !tbaa !5
  %1303 = shufflevector <8 x i32> %1302, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1304 = getelementptr inbounds i32, ptr %1297, i64 -23
  %1305 = load <8 x i32>, ptr %1304, align 4, !tbaa !5
  %1306 = shufflevector <8 x i32> %1305, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1307 = getelementptr inbounds i32, ptr %1297, i64 -31
  %1308 = load <8 x i32>, ptr %1307, align 4, !tbaa !5
  %1309 = shufflevector <8 x i32> %1308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1310 = mul <8 x i32> %1300, %1292
  %1311 = mul <8 x i32> %1303, %1293
  %1312 = mul <8 x i32> %1306, %1294
  %1313 = mul <8 x i32> %1309, %1295
  %1314 = add nuw i64 %1291, 32
  %1315 = icmp eq i64 %1314, %1288
  br i1 %1315, label %1316, label %1290, !llvm.loop !624

1316:                                             ; preds = %1290
  %1317 = mul <8 x i32> %1311, %1310
  %1318 = mul <8 x i32> %1312, %1317
  %1319 = mul <8 x i32> %1313, %1318
  %1320 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1319)
  %1321 = icmp eq i64 %1284, %1288
  br i1 %1321, label %1334, label %1322

1322:                                             ; preds = %1275, %1316
  %1323 = phi i64 [ %1278, %1275 ], [ %1289, %1316 ]
  %1324 = phi i32 [ 1, %1275 ], [ %1320, %1316 ]
  br label %1325

1325:                                             ; preds = %1322, %1325
  %1326 = phi i64 [ %1331, %1325 ], [ %1323, %1322 ]
  %1327 = phi i32 [ %1330, %1325 ], [ %1324, %1322 ]
  %1328 = getelementptr inbounds i32, ptr %9, i64 %1326
  %1329 = load i32, ptr %1328, align 4, !tbaa !5
  %1330 = mul nsw i32 %1329, %1327
  %1331 = add nsw i64 %1326, -1
  %1332 = trunc i64 %1326 to i32
  %1333 = icmp sgt i32 %1332, 0
  br i1 %1333, label %1325, label %1334, !llvm.loop !625

1334:                                             ; preds = %1325, %1316
  %1335 = phi i32 [ %1320, %1316 ], [ %1330, %1325 ]
  %1336 = and i64 %1285, 4294967295
  %1337 = getelementptr inbounds i32, ptr %6, i64 %1336
  %1338 = load i32, ptr %1337, align 4, !tbaa !5
  %1339 = mul nsw i32 %1338, %1335
  %1340 = add nsw i32 %1339, %1279
  %1341 = icmp sgt i64 %1277, 2
  %1342 = add nsw i64 %1278, -1
  %1343 = add i32 %1276, 1
  br i1 %1341, label %1275, label %1344, !llvm.loop !626

1344:                                             ; preds = %1334, %1271
  %1345 = phi i32 [ %1274, %1271 ], [ %1340, %1334 ]
  %1346 = sext i32 %1345 to i64
  %1347 = getelementptr inbounds double, ptr %2, i64 %1346
  %1348 = load double, ptr %1347, align 8, !tbaa !18
  %1349 = getelementptr inbounds i32, ptr %1239, i64 %1346
  %1350 = load i32, ptr %1349, align 4, !tbaa !5
  %1351 = load i8, ptr %1241, align 1, !tbaa !11
  %1352 = sitofp i8 %1351 to double
  %1353 = shl i32 %1350, 24
  %1354 = ashr exact i32 %1353, 24
  %1355 = sitofp i32 %1354 to double
  %1356 = fmul fast double %1348, %1355
  %1357 = fmul fast double %1356, %1356
  %1358 = fadd fast double %1357, %1352
  %1359 = fptosi double %1358 to i8
  store i8 %1359, ptr %1241, align 1, !tbaa !11
  %1360 = fadd fast double %1348, %1273
  %1361 = add nuw nsw i32 %1272, 1
  br i1 %1265, label %1362, label %1409

1362:                                             ; preds = %1344
  %1363 = load i32, ptr %4, align 4, !tbaa !5
  %1364 = load i32, ptr %12, align 4, !tbaa !5
  %1365 = add nsw i32 %1364, -1
  %1366 = icmp slt i32 %1363, %1365
  br i1 %1366, label %1386, label %1367

1367:                                             ; preds = %1362
  %1368 = icmp eq i32 %1363, %1365
  br i1 %1368, label %1369, label %1402

1369:                                             ; preds = %1367
  store i32 0, ptr %4, align 4, !tbaa !5
  %1370 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1370, ptr %6, align 4, !tbaa !5
  br i1 %1270, label %1409, label %1371

1371:                                             ; preds = %1369, %1396
  %1372 = phi i64 [ %1400, %1396 ], [ 1, %1369 ]
  %1373 = getelementptr inbounds i32, ptr %4, i64 %1372
  %1374 = load i32, ptr %1373, align 4, !tbaa !5
  %1375 = getelementptr inbounds i32, ptr %12, i64 %1372
  %1376 = load i32, ptr %1375, align 4, !tbaa !5
  %1377 = add nsw i32 %1376, -1
  %1378 = icmp slt i32 %1374, %1377
  br i1 %1378, label %1379, label %1394

1379:                                             ; preds = %1371
  br i1 %1366, label %1386, label %1380

1380:                                             ; preds = %1379
  %1381 = getelementptr inbounds i32, ptr %7, i64 %1372
  %1382 = load i32, ptr %1381, align 4, !tbaa !5
  %1383 = getelementptr inbounds i32, ptr %6, i64 %1372
  %1384 = load i32, ptr %1383, align 4, !tbaa !5
  %1385 = add nsw i32 %1384, %1382
  store i32 %1385, ptr %1383, align 4, !tbaa !5
  br label %1404

1386:                                             ; preds = %1362, %1379
  %1387 = phi i32 [ %1374, %1379 ], [ %1363, %1362 ]
  %1388 = phi ptr [ %1373, %1379 ], [ %4, %1362 ]
  %1389 = phi i64 [ %1372, %1379 ], [ 0, %1362 ]
  %1390 = add nsw i32 %1387, 1
  store i32 %1390, ptr %1388, align 4, !tbaa !5
  %1391 = getelementptr inbounds i32, ptr %7, i64 %1389
  %1392 = load i32, ptr %1391, align 4, !tbaa !5
  %1393 = getelementptr inbounds i32, ptr %6, i64 %1389
  br label %1404

1394:                                             ; preds = %1371
  %1395 = icmp eq i32 %1374, %1377
  br i1 %1395, label %1396, label %1402

1396:                                             ; preds = %1394
  store i32 0, ptr %1373, align 4, !tbaa !5
  %1397 = getelementptr inbounds i32, ptr %8, i64 %1372
  %1398 = load i32, ptr %1397, align 4, !tbaa !5
  %1399 = getelementptr inbounds i32, ptr %6, i64 %1372
  store i32 %1398, ptr %1399, align 4, !tbaa !5
  %1400 = add nuw nsw i64 %1372, 1
  %1401 = icmp eq i64 %1400, %1268
  br i1 %1401, label %1409, label %1371, !llvm.loop !627

1402:                                             ; preds = %1367, %1394
  %1403 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1172, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

1404:                                             ; preds = %1380, %1386
  %1405 = phi ptr [ %1393, %1386 ], [ %1373, %1380 ]
  %1406 = phi i32 [ %1392, %1386 ], [ 1, %1380 ]
  %1407 = load i32, ptr %1405, align 4, !tbaa !5
  %1408 = add nsw i32 %1407, %1406
  store i32 %1408, ptr %1405, align 4, !tbaa !5
  br label %1409

1409:                                             ; preds = %1396, %1404, %1369, %1344
  %1410 = icmp eq i32 %1361, %5
  br i1 %1410, label %5500, label %1271, !llvm.loop !628

1411:                                             ; preds = %1254, %1551
  %1412 = phi i32 [ 0, %1254 ], [ %1500, %1551 ]
  %1413 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1255, label %1414, label %1483

1414:                                             ; preds = %1411, %1473
  %1415 = phi i32 [ %1482, %1473 ], [ 0, %1411 ]
  %1416 = phi i64 [ %1424, %1473 ], [ %1259, %1411 ]
  %1417 = phi i64 [ %1481, %1473 ], [ %1258, %1411 ]
  %1418 = phi i32 [ %1479, %1473 ], [ %1413, %1411 ]
  %1419 = sub i32 %1257, %1415
  %1420 = tail call i32 @llvm.smin.i32(i32 %1419, i32 0)
  %1421 = sub i32 %1419, %1420
  %1422 = zext i32 %1421 to i64
  %1423 = add nuw nsw i64 %1422, 1
  %1424 = add nsw i64 %1416, -1
  %1425 = icmp ult i32 %1421, 31
  br i1 %1425, label %1461, label %1426

1426:                                             ; preds = %1414
  %1427 = and i64 %1423, 8589934560
  %1428 = sub i64 %1417, %1427
  br label %1429

1429:                                             ; preds = %1429, %1426
  %1430 = phi i64 [ 0, %1426 ], [ %1453, %1429 ]
  %1431 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1426 ], [ %1449, %1429 ]
  %1432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1426 ], [ %1450, %1429 ]
  %1433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1426 ], [ %1451, %1429 ]
  %1434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1426 ], [ %1452, %1429 ]
  %1435 = sub i64 %1417, %1430
  %1436 = getelementptr inbounds i32, ptr %11, i64 %1435
  %1437 = getelementptr inbounds i32, ptr %1436, i64 -7
  %1438 = load <8 x i32>, ptr %1437, align 4, !tbaa !5
  %1439 = shufflevector <8 x i32> %1438, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1440 = getelementptr inbounds i32, ptr %1436, i64 -15
  %1441 = load <8 x i32>, ptr %1440, align 4, !tbaa !5
  %1442 = shufflevector <8 x i32> %1441, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1443 = getelementptr inbounds i32, ptr %1436, i64 -23
  %1444 = load <8 x i32>, ptr %1443, align 4, !tbaa !5
  %1445 = shufflevector <8 x i32> %1444, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1446 = getelementptr inbounds i32, ptr %1436, i64 -31
  %1447 = load <8 x i32>, ptr %1446, align 4, !tbaa !5
  %1448 = shufflevector <8 x i32> %1447, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1449 = mul <8 x i32> %1439, %1431
  %1450 = mul <8 x i32> %1442, %1432
  %1451 = mul <8 x i32> %1445, %1433
  %1452 = mul <8 x i32> %1448, %1434
  %1453 = add nuw i64 %1430, 32
  %1454 = icmp eq i64 %1453, %1427
  br i1 %1454, label %1455, label %1429, !llvm.loop !629

1455:                                             ; preds = %1429
  %1456 = mul <8 x i32> %1450, %1449
  %1457 = mul <8 x i32> %1451, %1456
  %1458 = mul <8 x i32> %1452, %1457
  %1459 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1458)
  %1460 = icmp eq i64 %1423, %1427
  br i1 %1460, label %1473, label %1461

1461:                                             ; preds = %1414, %1455
  %1462 = phi i64 [ %1417, %1414 ], [ %1428, %1455 ]
  %1463 = phi i32 [ 1, %1414 ], [ %1459, %1455 ]
  br label %1464

1464:                                             ; preds = %1461, %1464
  %1465 = phi i64 [ %1470, %1464 ], [ %1462, %1461 ]
  %1466 = phi i32 [ %1469, %1464 ], [ %1463, %1461 ]
  %1467 = getelementptr inbounds i32, ptr %11, i64 %1465
  %1468 = load i32, ptr %1467, align 4, !tbaa !5
  %1469 = mul nsw i32 %1468, %1466
  %1470 = add nsw i64 %1465, -1
  %1471 = trunc i64 %1465 to i32
  %1472 = icmp sgt i32 %1471, 0
  br i1 %1472, label %1464, label %1473, !llvm.loop !630

1473:                                             ; preds = %1464, %1455
  %1474 = phi i32 [ %1459, %1455 ], [ %1469, %1464 ]
  %1475 = and i64 %1424, 4294967295
  %1476 = getelementptr inbounds i32, ptr %6, i64 %1475
  %1477 = load i32, ptr %1476, align 4, !tbaa !5
  %1478 = mul nsw i32 %1477, %1474
  %1479 = add nsw i32 %1478, %1418
  %1480 = icmp sgt i64 %1416, 2
  %1481 = add nsw i64 %1417, -1
  %1482 = add i32 %1415, 1
  br i1 %1480, label %1414, label %1483, !llvm.loop !631

1483:                                             ; preds = %1473, %1411
  %1484 = phi i32 [ %1413, %1411 ], [ %1479, %1473 ]
  %1485 = icmp slt i32 %1484, %5
  br i1 %1485, label %1488, label %1486

1486:                                             ; preds = %1483
  %1487 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1172, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

1488:                                             ; preds = %1483
  %1489 = sext i32 %1484 to i64
  %1490 = getelementptr inbounds i32, ptr %1239, i64 %1489
  %1491 = load i32, ptr %1490, align 4, !tbaa !5
  %1492 = load i8, ptr %1241, align 1, !tbaa !11
  %1493 = sitofp i8 %1492 to double
  %1494 = shl i32 %1491, 24
  %1495 = ashr exact i32 %1494, 24
  %1496 = sitofp i32 %1495 to double
  %1497 = fmul fast double %1496, %1496
  %1498 = fadd fast double %1497, %1493
  %1499 = fptosi double %1498 to i8
  store i8 %1499, ptr %1241, align 1, !tbaa !11
  %1500 = add nuw nsw i32 %1412, 1
  br i1 %1256, label %1501, label %1551

1501:                                             ; preds = %1488
  %1502 = load i32, ptr %4, align 4, !tbaa !5
  %1503 = load i32, ptr %12, align 4, !tbaa !5
  %1504 = add nsw i32 %1503, -1
  %1505 = icmp slt i32 %1502, %1504
  br i1 %1505, label %1528, label %1506

1506:                                             ; preds = %1501
  %1507 = icmp eq i32 %1502, %1504
  br i1 %1507, label %1508, label %1544

1508:                                             ; preds = %1506
  store i32 0, ptr %4, align 4, !tbaa !5
  %1509 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1509, ptr %6, align 4, !tbaa !5
  br i1 %1261, label %1551, label %1510

1510:                                             ; preds = %1508, %1538
  %1511 = phi i64 [ %1542, %1538 ], [ 1, %1508 ]
  %1512 = getelementptr inbounds i32, ptr %4, i64 %1511
  %1513 = load i32, ptr %1512, align 4, !tbaa !5
  %1514 = getelementptr inbounds i32, ptr %12, i64 %1511
  %1515 = load i32, ptr %1514, align 4, !tbaa !5
  %1516 = add nsw i32 %1515, -1
  %1517 = icmp slt i32 %1513, %1516
  br i1 %1517, label %1518, label %1536

1518:                                             ; preds = %1510
  br i1 %1505, label %1528, label %1519

1519:                                             ; preds = %1518
  %1520 = shl i64 %1511, 32
  %1521 = add i64 %1520, -4294967296
  %1522 = ashr exact i64 %1521, 32
  %1523 = getelementptr inbounds i32, ptr %7, i64 %1522
  %1524 = load i32, ptr %1523, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %6, i64 %1511
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = add nsw i32 %1526, %1524
  store i32 %1527, ptr %1525, align 4, !tbaa !5
  br label %1546

1528:                                             ; preds = %1501, %1518
  %1529 = phi i32 [ %1513, %1518 ], [ %1502, %1501 ]
  %1530 = phi ptr [ %1512, %1518 ], [ %4, %1501 ]
  %1531 = phi i64 [ %1511, %1518 ], [ 0, %1501 ]
  %1532 = add nsw i32 %1529, 1
  store i32 %1532, ptr %1530, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %7, i64 %1531
  %1534 = load i32, ptr %1533, align 4, !tbaa !5
  %1535 = getelementptr inbounds i32, ptr %6, i64 %1531
  br label %1546

1536:                                             ; preds = %1510
  %1537 = icmp eq i32 %1513, %1516
  br i1 %1537, label %1538, label %1544

1538:                                             ; preds = %1536
  store i32 0, ptr %1512, align 4, !tbaa !5
  %1539 = getelementptr inbounds i32, ptr %8, i64 %1511
  %1540 = load i32, ptr %1539, align 4, !tbaa !5
  %1541 = getelementptr inbounds i32, ptr %6, i64 %1511
  store i32 %1540, ptr %1541, align 4, !tbaa !5
  %1542 = add nuw nsw i64 %1511, 1
  %1543 = icmp eq i64 %1542, %1259
  br i1 %1543, label %1551, label %1510, !llvm.loop !632

1544:                                             ; preds = %1506, %1536
  %1545 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1172, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

1546:                                             ; preds = %1519, %1528
  %1547 = phi ptr [ %1535, %1528 ], [ %1512, %1519 ]
  %1548 = phi i32 [ %1534, %1528 ], [ 1, %1519 ]
  %1549 = load i32, ptr %1547, align 4, !tbaa !5
  %1550 = add nsw i32 %1549, %1548
  store i32 %1550, ptr %1547, align 4, !tbaa !5
  br label %1551

1551:                                             ; preds = %1538, %1546, %1508, %1488
  %1552 = icmp eq i32 %1500, %5
  br i1 %1552, label %5500, label %1411, !llvm.loop !633

1553:                                             ; preds = %1247
  %1554 = getelementptr inbounds i32, ptr %3, i64 %19
  %1555 = load i32, ptr %1554, align 4, !tbaa !5
  %1556 = icmp eq i32 %1555, 0
  %1557 = icmp sgt i32 %5, 0
  br i1 %1556, label %1567, label %1558

1558:                                             ; preds = %1553
  br i1 %1557, label %1559, label %5500

1559:                                             ; preds = %1558
  %1560 = icmp sgt i32 %13, 1
  %1561 = icmp sgt i32 %13, 0
  %1562 = add i32 %13, -2
  %1563 = zext i32 %1562 to i64
  %1564 = zext i32 %13 to i64
  %1565 = add nuw i32 %5, 1
  %1566 = icmp eq i32 %13, 1
  br label %1709

1567:                                             ; preds = %1553
  br i1 %1557, label %1568, label %5500

1568:                                             ; preds = %1567
  %1569 = icmp sgt i32 %13, 1
  %1570 = icmp sgt i32 %13, 0
  %1571 = add i32 %13, -2
  %1572 = zext i32 %1571 to i64
  %1573 = zext i32 %13 to i64
  %1574 = add nuw i32 %5, 1
  %1575 = icmp eq i32 %13, 1
  br label %1576

1576:                                             ; preds = %1568, %1707
  %1577 = phi i32 [ 0, %1568 ], [ %1659, %1707 ]
  %1578 = phi double [ 0.000000e+00, %1568 ], [ %1658, %1707 ]
  %1579 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1569, label %1580, label %1649

1580:                                             ; preds = %1576, %1639
  %1581 = phi i32 [ %1648, %1639 ], [ 0, %1576 ]
  %1582 = phi i64 [ %1590, %1639 ], [ %1573, %1576 ]
  %1583 = phi i64 [ %1647, %1639 ], [ %1572, %1576 ]
  %1584 = phi i32 [ %1645, %1639 ], [ %1579, %1576 ]
  %1585 = sub i32 %1571, %1581
  %1586 = tail call i32 @llvm.smin.i32(i32 %1585, i32 0)
  %1587 = sub i32 %1585, %1586
  %1588 = zext i32 %1587 to i64
  %1589 = add nuw nsw i64 %1588, 1
  %1590 = add nsw i64 %1582, -1
  %1591 = icmp ult i32 %1587, 31
  br i1 %1591, label %1627, label %1592

1592:                                             ; preds = %1580
  %1593 = and i64 %1589, 8589934560
  %1594 = sub i64 %1583, %1593
  br label %1595

1595:                                             ; preds = %1595, %1592
  %1596 = phi i64 [ 0, %1592 ], [ %1619, %1595 ]
  %1597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1615, %1595 ]
  %1598 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1616, %1595 ]
  %1599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1617, %1595 ]
  %1600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1618, %1595 ]
  %1601 = sub i64 %1583, %1596
  %1602 = getelementptr inbounds i32, ptr %9, i64 %1601
  %1603 = getelementptr inbounds i32, ptr %1602, i64 -7
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = getelementptr inbounds i32, ptr %1602, i64 -15
  %1607 = load <8 x i32>, ptr %1606, align 4, !tbaa !5
  %1608 = shufflevector <8 x i32> %1607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1609 = getelementptr inbounds i32, ptr %1602, i64 -23
  %1610 = load <8 x i32>, ptr %1609, align 4, !tbaa !5
  %1611 = shufflevector <8 x i32> %1610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1612 = getelementptr inbounds i32, ptr %1602, i64 -31
  %1613 = load <8 x i32>, ptr %1612, align 4, !tbaa !5
  %1614 = shufflevector <8 x i32> %1613, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1615 = mul <8 x i32> %1605, %1597
  %1616 = mul <8 x i32> %1608, %1598
  %1617 = mul <8 x i32> %1611, %1599
  %1618 = mul <8 x i32> %1614, %1600
  %1619 = add nuw i64 %1596, 32
  %1620 = icmp eq i64 %1619, %1593
  br i1 %1620, label %1621, label %1595, !llvm.loop !634

1621:                                             ; preds = %1595
  %1622 = mul <8 x i32> %1616, %1615
  %1623 = mul <8 x i32> %1617, %1622
  %1624 = mul <8 x i32> %1618, %1623
  %1625 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1624)
  %1626 = icmp eq i64 %1589, %1593
  br i1 %1626, label %1639, label %1627

1627:                                             ; preds = %1580, %1621
  %1628 = phi i64 [ %1583, %1580 ], [ %1594, %1621 ]
  %1629 = phi i32 [ 1, %1580 ], [ %1625, %1621 ]
  br label %1630

1630:                                             ; preds = %1627, %1630
  %1631 = phi i64 [ %1636, %1630 ], [ %1628, %1627 ]
  %1632 = phi i32 [ %1635, %1630 ], [ %1629, %1627 ]
  %1633 = getelementptr inbounds i32, ptr %9, i64 %1631
  %1634 = load i32, ptr %1633, align 4, !tbaa !5
  %1635 = mul nsw i32 %1634, %1632
  %1636 = add nsw i64 %1631, -1
  %1637 = trunc i64 %1631 to i32
  %1638 = icmp sgt i32 %1637, 0
  br i1 %1638, label %1630, label %1639, !llvm.loop !635

1639:                                             ; preds = %1630, %1621
  %1640 = phi i32 [ %1625, %1621 ], [ %1635, %1630 ]
  %1641 = and i64 %1590, 4294967295
  %1642 = getelementptr inbounds i32, ptr %6, i64 %1641
  %1643 = load i32, ptr %1642, align 4, !tbaa !5
  %1644 = mul nsw i32 %1643, %1640
  %1645 = add nsw i32 %1644, %1584
  %1646 = icmp sgt i64 %1582, 2
  %1647 = add nsw i64 %1583, -1
  %1648 = add i32 %1581, 1
  br i1 %1646, label %1580, label %1649, !llvm.loop !636

1649:                                             ; preds = %1639, %1576
  %1650 = phi i32 [ %1579, %1576 ], [ %1645, %1639 ]
  %1651 = sext i32 %1650 to i64
  %1652 = getelementptr inbounds i32, ptr %1239, i64 %1651
  %1653 = load i32, ptr %1652, align 4, !tbaa !5
  %1654 = load i8, ptr %1241, align 1, !tbaa !11
  %1655 = mul i32 %1653, %1653
  %1656 = trunc i32 %1655 to i8
  %1657 = add i8 %1654, %1656
  store i8 %1657, ptr %1241, align 1, !tbaa !11
  %1658 = fadd fast double %1578, 1.000000e+00
  %1659 = add nuw nsw i32 %1577, 1
  br i1 %1570, label %1660, label %1707

1660:                                             ; preds = %1649
  %1661 = load i32, ptr %4, align 4, !tbaa !5
  %1662 = load i32, ptr %12, align 4, !tbaa !5
  %1663 = add nsw i32 %1662, -1
  %1664 = icmp slt i32 %1661, %1663
  br i1 %1664, label %1684, label %1665

1665:                                             ; preds = %1660
  %1666 = icmp eq i32 %1661, %1663
  br i1 %1666, label %1667, label %1700

1667:                                             ; preds = %1665
  store i32 0, ptr %4, align 4, !tbaa !5
  %1668 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1668, ptr %6, align 4, !tbaa !5
  br i1 %1575, label %1707, label %1669

1669:                                             ; preds = %1667, %1694
  %1670 = phi i64 [ %1698, %1694 ], [ 1, %1667 ]
  %1671 = getelementptr inbounds i32, ptr %4, i64 %1670
  %1672 = load i32, ptr %1671, align 4, !tbaa !5
  %1673 = getelementptr inbounds i32, ptr %12, i64 %1670
  %1674 = load i32, ptr %1673, align 4, !tbaa !5
  %1675 = add nsw i32 %1674, -1
  %1676 = icmp slt i32 %1672, %1675
  br i1 %1676, label %1677, label %1692

1677:                                             ; preds = %1669
  br i1 %1664, label %1684, label %1678

1678:                                             ; preds = %1677
  %1679 = getelementptr inbounds i32, ptr %7, i64 %1670
  %1680 = load i32, ptr %1679, align 4, !tbaa !5
  %1681 = getelementptr inbounds i32, ptr %6, i64 %1670
  %1682 = load i32, ptr %1681, align 4, !tbaa !5
  %1683 = add nsw i32 %1682, %1680
  store i32 %1683, ptr %1681, align 4, !tbaa !5
  br label %1702

1684:                                             ; preds = %1660, %1677
  %1685 = phi i32 [ %1672, %1677 ], [ %1661, %1660 ]
  %1686 = phi ptr [ %1671, %1677 ], [ %4, %1660 ]
  %1687 = phi i64 [ %1670, %1677 ], [ 0, %1660 ]
  %1688 = add nsw i32 %1685, 1
  store i32 %1688, ptr %1686, align 4, !tbaa !5
  %1689 = getelementptr inbounds i32, ptr %7, i64 %1687
  %1690 = load i32, ptr %1689, align 4, !tbaa !5
  %1691 = getelementptr inbounds i32, ptr %6, i64 %1687
  br label %1702

1692:                                             ; preds = %1669
  %1693 = icmp eq i32 %1672, %1675
  br i1 %1693, label %1694, label %1700

1694:                                             ; preds = %1692
  store i32 0, ptr %1671, align 4, !tbaa !5
  %1695 = getelementptr inbounds i32, ptr %8, i64 %1670
  %1696 = load i32, ptr %1695, align 4, !tbaa !5
  %1697 = getelementptr inbounds i32, ptr %6, i64 %1670
  store i32 %1696, ptr %1697, align 4, !tbaa !5
  %1698 = add nuw nsw i64 %1670, 1
  %1699 = icmp eq i64 %1698, %1573
  br i1 %1699, label %1707, label %1669, !llvm.loop !637

1700:                                             ; preds = %1665, %1692
  %1701 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1172, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

1702:                                             ; preds = %1678, %1684
  %1703 = phi ptr [ %1691, %1684 ], [ %1671, %1678 ]
  %1704 = phi i32 [ %1690, %1684 ], [ 1, %1678 ]
  %1705 = load i32, ptr %1703, align 4, !tbaa !5
  %1706 = add nsw i32 %1705, %1704
  store i32 %1706, ptr %1703, align 4, !tbaa !5
  br label %1707

1707:                                             ; preds = %1694, %1702, %1667, %1649
  %1708 = icmp eq i32 %1659, %5
  br i1 %1708, label %5500, label %1576, !llvm.loop !638

1709:                                             ; preds = %1559, %1845
  %1710 = phi i32 [ 0, %1559 ], [ %1794, %1845 ]
  %1711 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1560, label %1712, label %1781

1712:                                             ; preds = %1709, %1771
  %1713 = phi i32 [ %1780, %1771 ], [ 0, %1709 ]
  %1714 = phi i64 [ %1722, %1771 ], [ %1564, %1709 ]
  %1715 = phi i64 [ %1779, %1771 ], [ %1563, %1709 ]
  %1716 = phi i32 [ %1777, %1771 ], [ %1711, %1709 ]
  %1717 = sub i32 %1562, %1713
  %1718 = tail call i32 @llvm.smin.i32(i32 %1717, i32 0)
  %1719 = sub i32 %1717, %1718
  %1720 = zext i32 %1719 to i64
  %1721 = add nuw nsw i64 %1720, 1
  %1722 = add nsw i64 %1714, -1
  %1723 = icmp ult i32 %1719, 31
  br i1 %1723, label %1759, label %1724

1724:                                             ; preds = %1712
  %1725 = and i64 %1721, 8589934560
  %1726 = sub i64 %1715, %1725
  br label %1727

1727:                                             ; preds = %1727, %1724
  %1728 = phi i64 [ 0, %1724 ], [ %1751, %1727 ]
  %1729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1747, %1727 ]
  %1730 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1748, %1727 ]
  %1731 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1749, %1727 ]
  %1732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1724 ], [ %1750, %1727 ]
  %1733 = sub i64 %1715, %1728
  %1734 = getelementptr inbounds i32, ptr %11, i64 %1733
  %1735 = getelementptr inbounds i32, ptr %1734, i64 -7
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = getelementptr inbounds i32, ptr %1734, i64 -15
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !5
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1734, i64 -23
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !5
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = getelementptr inbounds i32, ptr %1734, i64 -31
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !5
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = mul <8 x i32> %1737, %1729
  %1748 = mul <8 x i32> %1740, %1730
  %1749 = mul <8 x i32> %1743, %1731
  %1750 = mul <8 x i32> %1746, %1732
  %1751 = add nuw i64 %1728, 32
  %1752 = icmp eq i64 %1751, %1725
  br i1 %1752, label %1753, label %1727, !llvm.loop !639

1753:                                             ; preds = %1727
  %1754 = mul <8 x i32> %1748, %1747
  %1755 = mul <8 x i32> %1749, %1754
  %1756 = mul <8 x i32> %1750, %1755
  %1757 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1756)
  %1758 = icmp eq i64 %1721, %1725
  br i1 %1758, label %1771, label %1759

1759:                                             ; preds = %1712, %1753
  %1760 = phi i64 [ %1715, %1712 ], [ %1726, %1753 ]
  %1761 = phi i32 [ 1, %1712 ], [ %1757, %1753 ]
  br label %1762

1762:                                             ; preds = %1759, %1762
  %1763 = phi i64 [ %1768, %1762 ], [ %1760, %1759 ]
  %1764 = phi i32 [ %1767, %1762 ], [ %1761, %1759 ]
  %1765 = getelementptr inbounds i32, ptr %11, i64 %1763
  %1766 = load i32, ptr %1765, align 4, !tbaa !5
  %1767 = mul nsw i32 %1766, %1764
  %1768 = add nsw i64 %1763, -1
  %1769 = trunc i64 %1763 to i32
  %1770 = icmp sgt i32 %1769, 0
  br i1 %1770, label %1762, label %1771, !llvm.loop !640

1771:                                             ; preds = %1762, %1753
  %1772 = phi i32 [ %1757, %1753 ], [ %1767, %1762 ]
  %1773 = and i64 %1722, 4294967295
  %1774 = getelementptr inbounds i32, ptr %6, i64 %1773
  %1775 = load i32, ptr %1774, align 4, !tbaa !5
  %1776 = mul nsw i32 %1775, %1772
  %1777 = add nsw i32 %1776, %1716
  %1778 = icmp sgt i64 %1714, 2
  %1779 = add nsw i64 %1715, -1
  %1780 = add i32 %1713, 1
  br i1 %1778, label %1712, label %1781, !llvm.loop !641

1781:                                             ; preds = %1771, %1709
  %1782 = phi i32 [ %1711, %1709 ], [ %1777, %1771 ]
  %1783 = icmp slt i32 %1782, %5
  br i1 %1783, label %1786, label %1784

1784:                                             ; preds = %1781
  %1785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1172, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

1786:                                             ; preds = %1781
  %1787 = sext i32 %1782 to i64
  %1788 = getelementptr inbounds i32, ptr %1239, i64 %1787
  %1789 = load i32, ptr %1788, align 4, !tbaa !5
  %1790 = load i8, ptr %1241, align 1, !tbaa !11
  %1791 = mul i32 %1789, %1789
  %1792 = trunc i32 %1791 to i8
  %1793 = add i8 %1790, %1792
  store i8 %1793, ptr %1241, align 1, !tbaa !11
  %1794 = add nuw nsw i32 %1710, 1
  br i1 %1561, label %1795, label %1845

1795:                                             ; preds = %1786
  %1796 = load i32, ptr %4, align 4, !tbaa !5
  %1797 = load i32, ptr %12, align 4, !tbaa !5
  %1798 = add nsw i32 %1797, -1
  %1799 = icmp slt i32 %1796, %1798
  br i1 %1799, label %1822, label %1800

1800:                                             ; preds = %1795
  %1801 = icmp eq i32 %1796, %1798
  br i1 %1801, label %1802, label %1838

1802:                                             ; preds = %1800
  store i32 0, ptr %4, align 4, !tbaa !5
  %1803 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1803, ptr %6, align 4, !tbaa !5
  br i1 %1566, label %1845, label %1804

1804:                                             ; preds = %1802, %1832
  %1805 = phi i64 [ %1836, %1832 ], [ 1, %1802 ]
  %1806 = getelementptr inbounds i32, ptr %4, i64 %1805
  %1807 = load i32, ptr %1806, align 4, !tbaa !5
  %1808 = getelementptr inbounds i32, ptr %12, i64 %1805
  %1809 = load i32, ptr %1808, align 4, !tbaa !5
  %1810 = add nsw i32 %1809, -1
  %1811 = icmp slt i32 %1807, %1810
  br i1 %1811, label %1812, label %1830

1812:                                             ; preds = %1804
  br i1 %1799, label %1822, label %1813

1813:                                             ; preds = %1812
  %1814 = shl i64 %1805, 32
  %1815 = add i64 %1814, -4294967296
  %1816 = ashr exact i64 %1815, 32
  %1817 = getelementptr inbounds i32, ptr %7, i64 %1816
  %1818 = load i32, ptr %1817, align 4, !tbaa !5
  %1819 = getelementptr inbounds i32, ptr %6, i64 %1805
  %1820 = load i32, ptr %1819, align 4, !tbaa !5
  %1821 = add nsw i32 %1820, %1818
  store i32 %1821, ptr %1819, align 4, !tbaa !5
  br label %1840

1822:                                             ; preds = %1795, %1812
  %1823 = phi i32 [ %1807, %1812 ], [ %1796, %1795 ]
  %1824 = phi ptr [ %1806, %1812 ], [ %4, %1795 ]
  %1825 = phi i64 [ %1805, %1812 ], [ 0, %1795 ]
  %1826 = add nsw i32 %1823, 1
  store i32 %1826, ptr %1824, align 4, !tbaa !5
  %1827 = getelementptr inbounds i32, ptr %7, i64 %1825
  %1828 = load i32, ptr %1827, align 4, !tbaa !5
  %1829 = getelementptr inbounds i32, ptr %6, i64 %1825
  br label %1840

1830:                                             ; preds = %1804
  %1831 = icmp eq i32 %1807, %1810
  br i1 %1831, label %1832, label %1838

1832:                                             ; preds = %1830
  store i32 0, ptr %1806, align 4, !tbaa !5
  %1833 = getelementptr inbounds i32, ptr %8, i64 %1805
  %1834 = load i32, ptr %1833, align 4, !tbaa !5
  %1835 = getelementptr inbounds i32, ptr %6, i64 %1805
  store i32 %1834, ptr %1835, align 4, !tbaa !5
  %1836 = add nuw nsw i64 %1805, 1
  %1837 = icmp eq i64 %1836, %1564
  br i1 %1837, label %1845, label %1804, !llvm.loop !642

1838:                                             ; preds = %1800, %1830
  %1839 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1172, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

1840:                                             ; preds = %1813, %1822
  %1841 = phi ptr [ %1829, %1822 ], [ %1806, %1813 ]
  %1842 = phi i32 [ %1828, %1822 ], [ 1, %1813 ]
  %1843 = load i32, ptr %1841, align 4, !tbaa !5
  %1844 = add nsw i32 %1843, %1842
  store i32 %1844, ptr %1841, align 4, !tbaa !5
  br label %1845

1845:                                             ; preds = %1832, %1840, %1802, %1786
  %1846 = icmp eq i32 %1794, %5
  br i1 %1846, label %5500, label %1709, !llvm.loop !643

1847:                                             ; preds = %1247
  %1848 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1172, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

1849:                                             ; preds = %18
  %1850 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1851 = load ptr, ptr %1850, align 8, !tbaa !9
  %1852 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1853 = load ptr, ptr %1852, align 8, !tbaa !9
  store i16 0, ptr %1853, align 2, !tbaa !78
  %1854 = icmp eq i32 %13, 0
  br i1 %1854, label %1855, label %1859

1855:                                             ; preds = %1849
  %1856 = load i32, ptr %1851, align 4, !tbaa !5
  %1857 = mul i32 %1856, %1856
  %1858 = trunc i32 %1857 to i16
  store i16 %1858, ptr %1853, align 2, !tbaa !78
  br label %5500

1859:                                             ; preds = %1849
  switch i32 %1, label %2459 [
    i32 1, label %1860
    i32 0, label %2165
  ]

1860:                                             ; preds = %1859
  %1861 = getelementptr inbounds i32, ptr %3, i64 %19
  %1862 = load i32, ptr %1861, align 4, !tbaa !5
  %1863 = icmp eq i32 %1862, 0
  %1864 = icmp sgt i32 %5, 0
  br i1 %1863, label %1874, label %1865

1865:                                             ; preds = %1860
  br i1 %1864, label %1866, label %5500

1866:                                             ; preds = %1865
  %1867 = icmp sgt i32 %13, 1
  %1868 = icmp sgt i32 %13, 0
  %1869 = add i32 %13, -2
  %1870 = zext i32 %1869 to i64
  %1871 = zext i32 %13 to i64
  %1872 = add nuw i32 %5, 1
  %1873 = icmp eq i32 %13, 1
  br label %2023

1874:                                             ; preds = %1860
  br i1 %1864, label %1875, label %5500

1875:                                             ; preds = %1874
  %1876 = icmp sgt i32 %13, 1
  %1877 = icmp sgt i32 %13, 0
  %1878 = add i32 %13, -2
  %1879 = zext i32 %1878 to i64
  %1880 = zext i32 %13 to i64
  %1881 = add nuw i32 %5, 1
  %1882 = icmp eq i32 %13, 1
  br label %1883

1883:                                             ; preds = %1875, %2021
  %1884 = phi i16 [ 0, %1875 ], [ %1971, %2021 ]
  %1885 = phi i32 [ 0, %1875 ], [ %1973, %2021 ]
  %1886 = phi double [ 0.000000e+00, %1875 ], [ %1972, %2021 ]
  %1887 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1876, label %1888, label %1957

1888:                                             ; preds = %1883, %1947
  %1889 = phi i32 [ %1956, %1947 ], [ 0, %1883 ]
  %1890 = phi i64 [ %1898, %1947 ], [ %1880, %1883 ]
  %1891 = phi i64 [ %1955, %1947 ], [ %1879, %1883 ]
  %1892 = phi i32 [ %1953, %1947 ], [ %1887, %1883 ]
  %1893 = sub i32 %1878, %1889
  %1894 = tail call i32 @llvm.smin.i32(i32 %1893, i32 0)
  %1895 = sub i32 %1893, %1894
  %1896 = zext i32 %1895 to i64
  %1897 = add nuw nsw i64 %1896, 1
  %1898 = add nsw i64 %1890, -1
  %1899 = icmp ult i32 %1895, 31
  br i1 %1899, label %1935, label %1900

1900:                                             ; preds = %1888
  %1901 = and i64 %1897, 8589934560
  %1902 = sub i64 %1891, %1901
  br label %1903

1903:                                             ; preds = %1903, %1900
  %1904 = phi i64 [ 0, %1900 ], [ %1927, %1903 ]
  %1905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1923, %1903 ]
  %1906 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1924, %1903 ]
  %1907 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1925, %1903 ]
  %1908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1926, %1903 ]
  %1909 = sub i64 %1891, %1904
  %1910 = getelementptr inbounds i32, ptr %9, i64 %1909
  %1911 = getelementptr inbounds i32, ptr %1910, i64 -7
  %1912 = load <8 x i32>, ptr %1911, align 4, !tbaa !5
  %1913 = shufflevector <8 x i32> %1912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1914 = getelementptr inbounds i32, ptr %1910, i64 -15
  %1915 = load <8 x i32>, ptr %1914, align 4, !tbaa !5
  %1916 = shufflevector <8 x i32> %1915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1917 = getelementptr inbounds i32, ptr %1910, i64 -23
  %1918 = load <8 x i32>, ptr %1917, align 4, !tbaa !5
  %1919 = shufflevector <8 x i32> %1918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1920 = getelementptr inbounds i32, ptr %1910, i64 -31
  %1921 = load <8 x i32>, ptr %1920, align 4, !tbaa !5
  %1922 = shufflevector <8 x i32> %1921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1923 = mul <8 x i32> %1913, %1905
  %1924 = mul <8 x i32> %1916, %1906
  %1925 = mul <8 x i32> %1919, %1907
  %1926 = mul <8 x i32> %1922, %1908
  %1927 = add nuw i64 %1904, 32
  %1928 = icmp eq i64 %1927, %1901
  br i1 %1928, label %1929, label %1903, !llvm.loop !644

1929:                                             ; preds = %1903
  %1930 = mul <8 x i32> %1924, %1923
  %1931 = mul <8 x i32> %1925, %1930
  %1932 = mul <8 x i32> %1926, %1931
  %1933 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1932)
  %1934 = icmp eq i64 %1897, %1901
  br i1 %1934, label %1947, label %1935

1935:                                             ; preds = %1888, %1929
  %1936 = phi i64 [ %1891, %1888 ], [ %1902, %1929 ]
  %1937 = phi i32 [ 1, %1888 ], [ %1933, %1929 ]
  br label %1938

1938:                                             ; preds = %1935, %1938
  %1939 = phi i64 [ %1944, %1938 ], [ %1936, %1935 ]
  %1940 = phi i32 [ %1943, %1938 ], [ %1937, %1935 ]
  %1941 = getelementptr inbounds i32, ptr %9, i64 %1939
  %1942 = load i32, ptr %1941, align 4, !tbaa !5
  %1943 = mul nsw i32 %1942, %1940
  %1944 = add nsw i64 %1939, -1
  %1945 = trunc i64 %1939 to i32
  %1946 = icmp sgt i32 %1945, 0
  br i1 %1946, label %1938, label %1947, !llvm.loop !645

1947:                                             ; preds = %1938, %1929
  %1948 = phi i32 [ %1933, %1929 ], [ %1943, %1938 ]
  %1949 = and i64 %1898, 4294967295
  %1950 = getelementptr inbounds i32, ptr %6, i64 %1949
  %1951 = load i32, ptr %1950, align 4, !tbaa !5
  %1952 = mul nsw i32 %1951, %1948
  %1953 = add nsw i32 %1952, %1892
  %1954 = icmp sgt i64 %1890, 2
  %1955 = add nsw i64 %1891, -1
  %1956 = add i32 %1889, 1
  br i1 %1954, label %1888, label %1957, !llvm.loop !646

1957:                                             ; preds = %1947, %1883
  %1958 = phi i32 [ %1887, %1883 ], [ %1953, %1947 ]
  %1959 = sext i32 %1958 to i64
  %1960 = getelementptr inbounds double, ptr %2, i64 %1959
  %1961 = load double, ptr %1960, align 8, !tbaa !18
  %1962 = getelementptr inbounds i32, ptr %1851, i64 %1959
  %1963 = load i32, ptr %1962, align 4, !tbaa !5
  %1964 = sitofp i16 %1884 to double
  %1965 = shl i32 %1963, 16
  %1966 = ashr exact i32 %1965, 16
  %1967 = sitofp i32 %1966 to double
  %1968 = fmul fast double %1961, %1967
  %1969 = fmul fast double %1968, %1968
  %1970 = fadd fast double %1969, %1964
  %1971 = fptosi double %1970 to i16
  %1972 = fadd fast double %1961, %1886
  %1973 = add nuw nsw i32 %1885, 1
  br i1 %1877, label %1974, label %2021

1974:                                             ; preds = %1957
  %1975 = load i32, ptr %4, align 4, !tbaa !5
  %1976 = load i32, ptr %12, align 4, !tbaa !5
  %1977 = add nsw i32 %1976, -1
  %1978 = icmp slt i32 %1975, %1977
  br i1 %1978, label %1998, label %1979

1979:                                             ; preds = %1974
  %1980 = icmp eq i32 %1975, %1977
  br i1 %1980, label %1981, label %2014

1981:                                             ; preds = %1979
  store i32 0, ptr %4, align 4, !tbaa !5
  %1982 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1982, ptr %6, align 4, !tbaa !5
  br i1 %1882, label %2021, label %1983

1983:                                             ; preds = %1981, %2008
  %1984 = phi i64 [ %2012, %2008 ], [ 1, %1981 ]
  %1985 = getelementptr inbounds i32, ptr %4, i64 %1984
  %1986 = load i32, ptr %1985, align 4, !tbaa !5
  %1987 = getelementptr inbounds i32, ptr %12, i64 %1984
  %1988 = load i32, ptr %1987, align 4, !tbaa !5
  %1989 = add nsw i32 %1988, -1
  %1990 = icmp slt i32 %1986, %1989
  br i1 %1990, label %1991, label %2006

1991:                                             ; preds = %1983
  br i1 %1978, label %1998, label %1992

1992:                                             ; preds = %1991
  %1993 = getelementptr inbounds i32, ptr %7, i64 %1984
  %1994 = load i32, ptr %1993, align 4, !tbaa !5
  %1995 = getelementptr inbounds i32, ptr %6, i64 %1984
  %1996 = load i32, ptr %1995, align 4, !tbaa !5
  %1997 = add nsw i32 %1996, %1994
  store i32 %1997, ptr %1995, align 4, !tbaa !5
  br label %2016

1998:                                             ; preds = %1974, %1991
  %1999 = phi i32 [ %1986, %1991 ], [ %1975, %1974 ]
  %2000 = phi ptr [ %1985, %1991 ], [ %4, %1974 ]
  %2001 = phi i64 [ %1984, %1991 ], [ 0, %1974 ]
  %2002 = add nsw i32 %1999, 1
  store i32 %2002, ptr %2000, align 4, !tbaa !5
  %2003 = getelementptr inbounds i32, ptr %7, i64 %2001
  %2004 = load i32, ptr %2003, align 4, !tbaa !5
  %2005 = getelementptr inbounds i32, ptr %6, i64 %2001
  br label %2016

2006:                                             ; preds = %1983
  %2007 = icmp eq i32 %1986, %1989
  br i1 %2007, label %2008, label %2014

2008:                                             ; preds = %2006
  store i32 0, ptr %1985, align 4, !tbaa !5
  %2009 = getelementptr inbounds i32, ptr %8, i64 %1984
  %2010 = load i32, ptr %2009, align 4, !tbaa !5
  %2011 = getelementptr inbounds i32, ptr %6, i64 %1984
  store i32 %2010, ptr %2011, align 4, !tbaa !5
  %2012 = add nuw nsw i64 %1984, 1
  %2013 = icmp eq i64 %2012, %1880
  br i1 %2013, label %2021, label %1983, !llvm.loop !647

2014:                                             ; preds = %1979, %2006
  store i16 %1971, ptr %1853, align 2, !tbaa !78
  %2015 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1177, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

2016:                                             ; preds = %1992, %1998
  %2017 = phi ptr [ %2005, %1998 ], [ %1985, %1992 ]
  %2018 = phi i32 [ %2004, %1998 ], [ 1, %1992 ]
  %2019 = load i32, ptr %2017, align 4, !tbaa !5
  %2020 = add nsw i32 %2019, %2018
  store i32 %2020, ptr %2017, align 4, !tbaa !5
  br label %2021

2021:                                             ; preds = %2008, %2016, %1981, %1957
  %2022 = icmp eq i32 %1973, %5
  br i1 %2022, label %5492, label %1883, !llvm.loop !648

2023:                                             ; preds = %1866, %2163
  %2024 = phi i16 [ 0, %1866 ], [ %2111, %2163 ]
  %2025 = phi i32 [ 0, %1866 ], [ %2112, %2163 ]
  %2026 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1867, label %2027, label %2096

2027:                                             ; preds = %2023, %2086
  %2028 = phi i32 [ %2095, %2086 ], [ 0, %2023 ]
  %2029 = phi i64 [ %2037, %2086 ], [ %1871, %2023 ]
  %2030 = phi i64 [ %2094, %2086 ], [ %1870, %2023 ]
  %2031 = phi i32 [ %2092, %2086 ], [ %2026, %2023 ]
  %2032 = sub i32 %1869, %2028
  %2033 = tail call i32 @llvm.smin.i32(i32 %2032, i32 0)
  %2034 = sub i32 %2032, %2033
  %2035 = zext i32 %2034 to i64
  %2036 = add nuw nsw i64 %2035, 1
  %2037 = add nsw i64 %2029, -1
  %2038 = icmp ult i32 %2034, 31
  br i1 %2038, label %2074, label %2039

2039:                                             ; preds = %2027
  %2040 = and i64 %2036, 8589934560
  %2041 = sub i64 %2030, %2040
  br label %2042

2042:                                             ; preds = %2042, %2039
  %2043 = phi i64 [ 0, %2039 ], [ %2066, %2042 ]
  %2044 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2062, %2042 ]
  %2045 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2063, %2042 ]
  %2046 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2064, %2042 ]
  %2047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2065, %2042 ]
  %2048 = sub i64 %2030, %2043
  %2049 = getelementptr inbounds i32, ptr %11, i64 %2048
  %2050 = getelementptr inbounds i32, ptr %2049, i64 -7
  %2051 = load <8 x i32>, ptr %2050, align 4, !tbaa !5
  %2052 = shufflevector <8 x i32> %2051, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2053 = getelementptr inbounds i32, ptr %2049, i64 -15
  %2054 = load <8 x i32>, ptr %2053, align 4, !tbaa !5
  %2055 = shufflevector <8 x i32> %2054, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2056 = getelementptr inbounds i32, ptr %2049, i64 -23
  %2057 = load <8 x i32>, ptr %2056, align 4, !tbaa !5
  %2058 = shufflevector <8 x i32> %2057, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2059 = getelementptr inbounds i32, ptr %2049, i64 -31
  %2060 = load <8 x i32>, ptr %2059, align 4, !tbaa !5
  %2061 = shufflevector <8 x i32> %2060, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2062 = mul <8 x i32> %2052, %2044
  %2063 = mul <8 x i32> %2055, %2045
  %2064 = mul <8 x i32> %2058, %2046
  %2065 = mul <8 x i32> %2061, %2047
  %2066 = add nuw i64 %2043, 32
  %2067 = icmp eq i64 %2066, %2040
  br i1 %2067, label %2068, label %2042, !llvm.loop !649

2068:                                             ; preds = %2042
  %2069 = mul <8 x i32> %2063, %2062
  %2070 = mul <8 x i32> %2064, %2069
  %2071 = mul <8 x i32> %2065, %2070
  %2072 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2071)
  %2073 = icmp eq i64 %2036, %2040
  br i1 %2073, label %2086, label %2074

2074:                                             ; preds = %2027, %2068
  %2075 = phi i64 [ %2030, %2027 ], [ %2041, %2068 ]
  %2076 = phi i32 [ 1, %2027 ], [ %2072, %2068 ]
  br label %2077

2077:                                             ; preds = %2074, %2077
  %2078 = phi i64 [ %2083, %2077 ], [ %2075, %2074 ]
  %2079 = phi i32 [ %2082, %2077 ], [ %2076, %2074 ]
  %2080 = getelementptr inbounds i32, ptr %11, i64 %2078
  %2081 = load i32, ptr %2080, align 4, !tbaa !5
  %2082 = mul nsw i32 %2081, %2079
  %2083 = add nsw i64 %2078, -1
  %2084 = trunc i64 %2078 to i32
  %2085 = icmp sgt i32 %2084, 0
  br i1 %2085, label %2077, label %2086, !llvm.loop !650

2086:                                             ; preds = %2077, %2068
  %2087 = phi i32 [ %2072, %2068 ], [ %2082, %2077 ]
  %2088 = and i64 %2037, 4294967295
  %2089 = getelementptr inbounds i32, ptr %6, i64 %2088
  %2090 = load i32, ptr %2089, align 4, !tbaa !5
  %2091 = mul nsw i32 %2090, %2087
  %2092 = add nsw i32 %2091, %2031
  %2093 = icmp sgt i64 %2029, 2
  %2094 = add nsw i64 %2030, -1
  %2095 = add i32 %2028, 1
  br i1 %2093, label %2027, label %2096, !llvm.loop !651

2096:                                             ; preds = %2086, %2023
  %2097 = phi i32 [ %2026, %2023 ], [ %2092, %2086 ]
  %2098 = icmp slt i32 %2097, %5
  br i1 %2098, label %2101, label %2099

2099:                                             ; preds = %2096
  %2100 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1177, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

2101:                                             ; preds = %2096
  %2102 = sext i32 %2097 to i64
  %2103 = getelementptr inbounds i32, ptr %1851, i64 %2102
  %2104 = load i32, ptr %2103, align 4, !tbaa !5
  %2105 = sitofp i16 %2024 to double
  %2106 = shl i32 %2104, 16
  %2107 = ashr exact i32 %2106, 16
  %2108 = sitofp i32 %2107 to double
  %2109 = fmul fast double %2108, %2108
  %2110 = fadd fast double %2109, %2105
  %2111 = fptosi double %2110 to i16
  store i16 %2111, ptr %1853, align 2, !tbaa !78
  %2112 = add nuw nsw i32 %2025, 1
  br i1 %1868, label %2113, label %2163

2113:                                             ; preds = %2101
  %2114 = load i32, ptr %4, align 4, !tbaa !5
  %2115 = load i32, ptr %12, align 4, !tbaa !5
  %2116 = add nsw i32 %2115, -1
  %2117 = icmp slt i32 %2114, %2116
  br i1 %2117, label %2140, label %2118

2118:                                             ; preds = %2113
  %2119 = icmp eq i32 %2114, %2116
  br i1 %2119, label %2120, label %2156

2120:                                             ; preds = %2118
  store i32 0, ptr %4, align 4, !tbaa !5
  %2121 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2121, ptr %6, align 4, !tbaa !5
  br i1 %1873, label %2163, label %2122

2122:                                             ; preds = %2120, %2150
  %2123 = phi i64 [ %2154, %2150 ], [ 1, %2120 ]
  %2124 = getelementptr inbounds i32, ptr %4, i64 %2123
  %2125 = load i32, ptr %2124, align 4, !tbaa !5
  %2126 = getelementptr inbounds i32, ptr %12, i64 %2123
  %2127 = load i32, ptr %2126, align 4, !tbaa !5
  %2128 = add nsw i32 %2127, -1
  %2129 = icmp slt i32 %2125, %2128
  br i1 %2129, label %2130, label %2148

2130:                                             ; preds = %2122
  br i1 %2117, label %2140, label %2131

2131:                                             ; preds = %2130
  %2132 = shl i64 %2123, 32
  %2133 = add i64 %2132, -4294967296
  %2134 = ashr exact i64 %2133, 32
  %2135 = getelementptr inbounds i32, ptr %7, i64 %2134
  %2136 = load i32, ptr %2135, align 4, !tbaa !5
  %2137 = getelementptr inbounds i32, ptr %6, i64 %2123
  %2138 = load i32, ptr %2137, align 4, !tbaa !5
  %2139 = add nsw i32 %2138, %2136
  store i32 %2139, ptr %2137, align 4, !tbaa !5
  br label %2158

2140:                                             ; preds = %2113, %2130
  %2141 = phi i32 [ %2125, %2130 ], [ %2114, %2113 ]
  %2142 = phi ptr [ %2124, %2130 ], [ %4, %2113 ]
  %2143 = phi i64 [ %2123, %2130 ], [ 0, %2113 ]
  %2144 = add nsw i32 %2141, 1
  store i32 %2144, ptr %2142, align 4, !tbaa !5
  %2145 = getelementptr inbounds i32, ptr %7, i64 %2143
  %2146 = load i32, ptr %2145, align 4, !tbaa !5
  %2147 = getelementptr inbounds i32, ptr %6, i64 %2143
  br label %2158

2148:                                             ; preds = %2122
  %2149 = icmp eq i32 %2125, %2128
  br i1 %2149, label %2150, label %2156

2150:                                             ; preds = %2148
  store i32 0, ptr %2124, align 4, !tbaa !5
  %2151 = getelementptr inbounds i32, ptr %8, i64 %2123
  %2152 = load i32, ptr %2151, align 4, !tbaa !5
  %2153 = getelementptr inbounds i32, ptr %6, i64 %2123
  store i32 %2152, ptr %2153, align 4, !tbaa !5
  %2154 = add nuw nsw i64 %2123, 1
  %2155 = icmp eq i64 %2154, %1871
  br i1 %2155, label %2163, label %2122, !llvm.loop !652

2156:                                             ; preds = %2118, %2148
  %2157 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1177, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

2158:                                             ; preds = %2131, %2140
  %2159 = phi ptr [ %2147, %2140 ], [ %2124, %2131 ]
  %2160 = phi i32 [ %2146, %2140 ], [ 1, %2131 ]
  %2161 = load i32, ptr %2159, align 4, !tbaa !5
  %2162 = add nsw i32 %2161, %2160
  store i32 %2162, ptr %2159, align 4, !tbaa !5
  br label %2163

2163:                                             ; preds = %2150, %2158, %2120, %2101
  %2164 = icmp eq i32 %2112, %5
  br i1 %2164, label %5500, label %2023, !llvm.loop !653

2165:                                             ; preds = %1859
  %2166 = getelementptr inbounds i32, ptr %3, i64 %19
  %2167 = load i32, ptr %2166, align 4, !tbaa !5
  %2168 = icmp eq i32 %2167, 0
  %2169 = icmp sgt i32 %5, 0
  br i1 %2168, label %2179, label %2170

2170:                                             ; preds = %2165
  br i1 %2169, label %2171, label %5500

2171:                                             ; preds = %2170
  %2172 = icmp sgt i32 %13, 1
  %2173 = icmp sgt i32 %13, 0
  %2174 = add i32 %13, -2
  %2175 = zext i32 %2174 to i64
  %2176 = zext i32 %13 to i64
  %2177 = add nuw i32 %5, 1
  %2178 = icmp eq i32 %13, 1
  br label %2321

2179:                                             ; preds = %2165
  br i1 %2169, label %2180, label %5500

2180:                                             ; preds = %2179
  %2181 = icmp sgt i32 %13, 1
  %2182 = icmp sgt i32 %13, 0
  %2183 = add i32 %13, -2
  %2184 = zext i32 %2183 to i64
  %2185 = zext i32 %13 to i64
  %2186 = add nuw i32 %5, 1
  %2187 = icmp eq i32 %13, 1
  br label %2188

2188:                                             ; preds = %2180, %2319
  %2189 = phi i16 [ 0, %2180 ], [ %2269, %2319 ]
  %2190 = phi i32 [ 0, %2180 ], [ %2271, %2319 ]
  %2191 = phi double [ 0.000000e+00, %2180 ], [ %2270, %2319 ]
  %2192 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2181, label %2193, label %2262

2193:                                             ; preds = %2188, %2252
  %2194 = phi i32 [ %2261, %2252 ], [ 0, %2188 ]
  %2195 = phi i64 [ %2203, %2252 ], [ %2185, %2188 ]
  %2196 = phi i64 [ %2260, %2252 ], [ %2184, %2188 ]
  %2197 = phi i32 [ %2258, %2252 ], [ %2192, %2188 ]
  %2198 = sub i32 %2183, %2194
  %2199 = tail call i32 @llvm.smin.i32(i32 %2198, i32 0)
  %2200 = sub i32 %2198, %2199
  %2201 = zext i32 %2200 to i64
  %2202 = add nuw nsw i64 %2201, 1
  %2203 = add nsw i64 %2195, -1
  %2204 = icmp ult i32 %2200, 31
  br i1 %2204, label %2240, label %2205

2205:                                             ; preds = %2193
  %2206 = and i64 %2202, 8589934560
  %2207 = sub i64 %2196, %2206
  br label %2208

2208:                                             ; preds = %2208, %2205
  %2209 = phi i64 [ 0, %2205 ], [ %2232, %2208 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2228, %2208 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2229, %2208 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2230, %2208 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2205 ], [ %2231, %2208 ]
  %2214 = sub i64 %2196, %2209
  %2215 = getelementptr inbounds i32, ptr %9, i64 %2214
  %2216 = getelementptr inbounds i32, ptr %2215, i64 -7
  %2217 = load <8 x i32>, ptr %2216, align 4, !tbaa !5
  %2218 = shufflevector <8 x i32> %2217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2219 = getelementptr inbounds i32, ptr %2215, i64 -15
  %2220 = load <8 x i32>, ptr %2219, align 4, !tbaa !5
  %2221 = shufflevector <8 x i32> %2220, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2222 = getelementptr inbounds i32, ptr %2215, i64 -23
  %2223 = load <8 x i32>, ptr %2222, align 4, !tbaa !5
  %2224 = shufflevector <8 x i32> %2223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2225 = getelementptr inbounds i32, ptr %2215, i64 -31
  %2226 = load <8 x i32>, ptr %2225, align 4, !tbaa !5
  %2227 = shufflevector <8 x i32> %2226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2228 = mul <8 x i32> %2218, %2210
  %2229 = mul <8 x i32> %2221, %2211
  %2230 = mul <8 x i32> %2224, %2212
  %2231 = mul <8 x i32> %2227, %2213
  %2232 = add nuw i64 %2209, 32
  %2233 = icmp eq i64 %2232, %2206
  br i1 %2233, label %2234, label %2208, !llvm.loop !654

2234:                                             ; preds = %2208
  %2235 = mul <8 x i32> %2229, %2228
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = mul <8 x i32> %2231, %2236
  %2238 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2237)
  %2239 = icmp eq i64 %2202, %2206
  br i1 %2239, label %2252, label %2240

2240:                                             ; preds = %2193, %2234
  %2241 = phi i64 [ %2196, %2193 ], [ %2207, %2234 ]
  %2242 = phi i32 [ 1, %2193 ], [ %2238, %2234 ]
  br label %2243

2243:                                             ; preds = %2240, %2243
  %2244 = phi i64 [ %2249, %2243 ], [ %2241, %2240 ]
  %2245 = phi i32 [ %2248, %2243 ], [ %2242, %2240 ]
  %2246 = getelementptr inbounds i32, ptr %9, i64 %2244
  %2247 = load i32, ptr %2246, align 4, !tbaa !5
  %2248 = mul nsw i32 %2247, %2245
  %2249 = add nsw i64 %2244, -1
  %2250 = trunc i64 %2244 to i32
  %2251 = icmp sgt i32 %2250, 0
  br i1 %2251, label %2243, label %2252, !llvm.loop !655

2252:                                             ; preds = %2243, %2234
  %2253 = phi i32 [ %2238, %2234 ], [ %2248, %2243 ]
  %2254 = and i64 %2203, 4294967295
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2254
  %2256 = load i32, ptr %2255, align 4, !tbaa !5
  %2257 = mul nsw i32 %2256, %2253
  %2258 = add nsw i32 %2257, %2197
  %2259 = icmp sgt i64 %2195, 2
  %2260 = add nsw i64 %2196, -1
  %2261 = add i32 %2194, 1
  br i1 %2259, label %2193, label %2262, !llvm.loop !656

2262:                                             ; preds = %2252, %2188
  %2263 = phi i32 [ %2192, %2188 ], [ %2258, %2252 ]
  %2264 = sext i32 %2263 to i64
  %2265 = getelementptr inbounds i32, ptr %1851, i64 %2264
  %2266 = load i32, ptr %2265, align 4, !tbaa !5
  %2267 = mul i32 %2266, %2266
  %2268 = trunc i32 %2267 to i16
  %2269 = add i16 %2189, %2268
  %2270 = fadd fast double %2191, 1.000000e+00
  %2271 = add nuw nsw i32 %2190, 1
  br i1 %2182, label %2272, label %2319

2272:                                             ; preds = %2262
  %2273 = load i32, ptr %4, align 4, !tbaa !5
  %2274 = load i32, ptr %12, align 4, !tbaa !5
  %2275 = add nsw i32 %2274, -1
  %2276 = icmp slt i32 %2273, %2275
  br i1 %2276, label %2296, label %2277

2277:                                             ; preds = %2272
  %2278 = icmp eq i32 %2273, %2275
  br i1 %2278, label %2279, label %2312

2279:                                             ; preds = %2277
  store i32 0, ptr %4, align 4, !tbaa !5
  %2280 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2280, ptr %6, align 4, !tbaa !5
  br i1 %2187, label %2319, label %2281

2281:                                             ; preds = %2279, %2306
  %2282 = phi i64 [ %2310, %2306 ], [ 1, %2279 ]
  %2283 = getelementptr inbounds i32, ptr %4, i64 %2282
  %2284 = load i32, ptr %2283, align 4, !tbaa !5
  %2285 = getelementptr inbounds i32, ptr %12, i64 %2282
  %2286 = load i32, ptr %2285, align 4, !tbaa !5
  %2287 = add nsw i32 %2286, -1
  %2288 = icmp slt i32 %2284, %2287
  br i1 %2288, label %2289, label %2304

2289:                                             ; preds = %2281
  br i1 %2276, label %2296, label %2290

2290:                                             ; preds = %2289
  %2291 = getelementptr inbounds i32, ptr %7, i64 %2282
  %2292 = load i32, ptr %2291, align 4, !tbaa !5
  %2293 = getelementptr inbounds i32, ptr %6, i64 %2282
  %2294 = load i32, ptr %2293, align 4, !tbaa !5
  %2295 = add nsw i32 %2294, %2292
  store i32 %2295, ptr %2293, align 4, !tbaa !5
  br label %2314

2296:                                             ; preds = %2272, %2289
  %2297 = phi i32 [ %2284, %2289 ], [ %2273, %2272 ]
  %2298 = phi ptr [ %2283, %2289 ], [ %4, %2272 ]
  %2299 = phi i64 [ %2282, %2289 ], [ 0, %2272 ]
  %2300 = add nsw i32 %2297, 1
  store i32 %2300, ptr %2298, align 4, !tbaa !5
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2302 = load i32, ptr %2301, align 4, !tbaa !5
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2299
  br label %2314

2304:                                             ; preds = %2281
  %2305 = icmp eq i32 %2284, %2287
  br i1 %2305, label %2306, label %2312

2306:                                             ; preds = %2304
  store i32 0, ptr %2283, align 4, !tbaa !5
  %2307 = getelementptr inbounds i32, ptr %8, i64 %2282
  %2308 = load i32, ptr %2307, align 4, !tbaa !5
  %2309 = getelementptr inbounds i32, ptr %6, i64 %2282
  store i32 %2308, ptr %2309, align 4, !tbaa !5
  %2310 = add nuw nsw i64 %2282, 1
  %2311 = icmp eq i64 %2310, %2185
  br i1 %2311, label %2319, label %2281, !llvm.loop !657

2312:                                             ; preds = %2277, %2304
  store i16 %2269, ptr %1853, align 2, !tbaa !78
  %2313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1177, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

2314:                                             ; preds = %2290, %2296
  %2315 = phi ptr [ %2303, %2296 ], [ %2283, %2290 ]
  %2316 = phi i32 [ %2302, %2296 ], [ 1, %2290 ]
  %2317 = load i32, ptr %2315, align 4, !tbaa !5
  %2318 = add nsw i32 %2317, %2316
  store i32 %2318, ptr %2315, align 4, !tbaa !5
  br label %2319

2319:                                             ; preds = %2306, %2314, %2279, %2262
  %2320 = icmp eq i32 %2271, %5
  br i1 %2320, label %5493, label %2188, !llvm.loop !658

2321:                                             ; preds = %2171, %2457
  %2322 = phi i16 [ 0, %2171 ], [ %2405, %2457 ]
  %2323 = phi i32 [ 0, %2171 ], [ %2406, %2457 ]
  %2324 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2172, label %2325, label %2394

2325:                                             ; preds = %2321, %2384
  %2326 = phi i32 [ %2393, %2384 ], [ 0, %2321 ]
  %2327 = phi i64 [ %2335, %2384 ], [ %2176, %2321 ]
  %2328 = phi i64 [ %2392, %2384 ], [ %2175, %2321 ]
  %2329 = phi i32 [ %2390, %2384 ], [ %2324, %2321 ]
  %2330 = sub i32 %2174, %2326
  %2331 = tail call i32 @llvm.smin.i32(i32 %2330, i32 0)
  %2332 = sub i32 %2330, %2331
  %2333 = zext i32 %2332 to i64
  %2334 = add nuw nsw i64 %2333, 1
  %2335 = add nsw i64 %2327, -1
  %2336 = icmp ult i32 %2332, 31
  br i1 %2336, label %2372, label %2337

2337:                                             ; preds = %2325
  %2338 = and i64 %2334, 8589934560
  %2339 = sub i64 %2328, %2338
  br label %2340

2340:                                             ; preds = %2340, %2337
  %2341 = phi i64 [ 0, %2337 ], [ %2364, %2340 ]
  %2342 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2360, %2340 ]
  %2343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2361, %2340 ]
  %2344 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2362, %2340 ]
  %2345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2337 ], [ %2363, %2340 ]
  %2346 = sub i64 %2328, %2341
  %2347 = getelementptr inbounds i32, ptr %11, i64 %2346
  %2348 = getelementptr inbounds i32, ptr %2347, i64 -7
  %2349 = load <8 x i32>, ptr %2348, align 4, !tbaa !5
  %2350 = shufflevector <8 x i32> %2349, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2351 = getelementptr inbounds i32, ptr %2347, i64 -15
  %2352 = load <8 x i32>, ptr %2351, align 4, !tbaa !5
  %2353 = shufflevector <8 x i32> %2352, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2354 = getelementptr inbounds i32, ptr %2347, i64 -23
  %2355 = load <8 x i32>, ptr %2354, align 4, !tbaa !5
  %2356 = shufflevector <8 x i32> %2355, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2357 = getelementptr inbounds i32, ptr %2347, i64 -31
  %2358 = load <8 x i32>, ptr %2357, align 4, !tbaa !5
  %2359 = shufflevector <8 x i32> %2358, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2360 = mul <8 x i32> %2350, %2342
  %2361 = mul <8 x i32> %2353, %2343
  %2362 = mul <8 x i32> %2356, %2344
  %2363 = mul <8 x i32> %2359, %2345
  %2364 = add nuw i64 %2341, 32
  %2365 = icmp eq i64 %2364, %2338
  br i1 %2365, label %2366, label %2340, !llvm.loop !659

2366:                                             ; preds = %2340
  %2367 = mul <8 x i32> %2361, %2360
  %2368 = mul <8 x i32> %2362, %2367
  %2369 = mul <8 x i32> %2363, %2368
  %2370 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2369)
  %2371 = icmp eq i64 %2334, %2338
  br i1 %2371, label %2384, label %2372

2372:                                             ; preds = %2325, %2366
  %2373 = phi i64 [ %2328, %2325 ], [ %2339, %2366 ]
  %2374 = phi i32 [ 1, %2325 ], [ %2370, %2366 ]
  br label %2375

2375:                                             ; preds = %2372, %2375
  %2376 = phi i64 [ %2381, %2375 ], [ %2373, %2372 ]
  %2377 = phi i32 [ %2380, %2375 ], [ %2374, %2372 ]
  %2378 = getelementptr inbounds i32, ptr %11, i64 %2376
  %2379 = load i32, ptr %2378, align 4, !tbaa !5
  %2380 = mul nsw i32 %2379, %2377
  %2381 = add nsw i64 %2376, -1
  %2382 = trunc i64 %2376 to i32
  %2383 = icmp sgt i32 %2382, 0
  br i1 %2383, label %2375, label %2384, !llvm.loop !660

2384:                                             ; preds = %2375, %2366
  %2385 = phi i32 [ %2370, %2366 ], [ %2380, %2375 ]
  %2386 = and i64 %2335, 4294967295
  %2387 = getelementptr inbounds i32, ptr %6, i64 %2386
  %2388 = load i32, ptr %2387, align 4, !tbaa !5
  %2389 = mul nsw i32 %2388, %2385
  %2390 = add nsw i32 %2389, %2329
  %2391 = icmp sgt i64 %2327, 2
  %2392 = add nsw i64 %2328, -1
  %2393 = add i32 %2326, 1
  br i1 %2391, label %2325, label %2394, !llvm.loop !661

2394:                                             ; preds = %2384, %2321
  %2395 = phi i32 [ %2324, %2321 ], [ %2390, %2384 ]
  %2396 = icmp slt i32 %2395, %5
  br i1 %2396, label %2399, label %2397

2397:                                             ; preds = %2394
  %2398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1177, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

2399:                                             ; preds = %2394
  %2400 = sext i32 %2395 to i64
  %2401 = getelementptr inbounds i32, ptr %1851, i64 %2400
  %2402 = load i32, ptr %2401, align 4, !tbaa !5
  %2403 = mul i32 %2402, %2402
  %2404 = trunc i32 %2403 to i16
  %2405 = add i16 %2322, %2404
  store i16 %2405, ptr %1853, align 2, !tbaa !78
  %2406 = add nuw nsw i32 %2323, 1
  br i1 %2173, label %2407, label %2457

2407:                                             ; preds = %2399
  %2408 = load i32, ptr %4, align 4, !tbaa !5
  %2409 = load i32, ptr %12, align 4, !tbaa !5
  %2410 = add nsw i32 %2409, -1
  %2411 = icmp slt i32 %2408, %2410
  br i1 %2411, label %2434, label %2412

2412:                                             ; preds = %2407
  %2413 = icmp eq i32 %2408, %2410
  br i1 %2413, label %2414, label %2450

2414:                                             ; preds = %2412
  store i32 0, ptr %4, align 4, !tbaa !5
  %2415 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2415, ptr %6, align 4, !tbaa !5
  br i1 %2178, label %2457, label %2416

2416:                                             ; preds = %2414, %2444
  %2417 = phi i64 [ %2448, %2444 ], [ 1, %2414 ]
  %2418 = getelementptr inbounds i32, ptr %4, i64 %2417
  %2419 = load i32, ptr %2418, align 4, !tbaa !5
  %2420 = getelementptr inbounds i32, ptr %12, i64 %2417
  %2421 = load i32, ptr %2420, align 4, !tbaa !5
  %2422 = add nsw i32 %2421, -1
  %2423 = icmp slt i32 %2419, %2422
  br i1 %2423, label %2424, label %2442

2424:                                             ; preds = %2416
  br i1 %2411, label %2434, label %2425

2425:                                             ; preds = %2424
  %2426 = shl i64 %2417, 32
  %2427 = add i64 %2426, -4294967296
  %2428 = ashr exact i64 %2427, 32
  %2429 = getelementptr inbounds i32, ptr %7, i64 %2428
  %2430 = load i32, ptr %2429, align 4, !tbaa !5
  %2431 = getelementptr inbounds i32, ptr %6, i64 %2417
  %2432 = load i32, ptr %2431, align 4, !tbaa !5
  %2433 = add nsw i32 %2432, %2430
  store i32 %2433, ptr %2431, align 4, !tbaa !5
  br label %2452

2434:                                             ; preds = %2407, %2424
  %2435 = phi i32 [ %2419, %2424 ], [ %2408, %2407 ]
  %2436 = phi ptr [ %2418, %2424 ], [ %4, %2407 ]
  %2437 = phi i64 [ %2417, %2424 ], [ 0, %2407 ]
  %2438 = add nsw i32 %2435, 1
  store i32 %2438, ptr %2436, align 4, !tbaa !5
  %2439 = getelementptr inbounds i32, ptr %7, i64 %2437
  %2440 = load i32, ptr %2439, align 4, !tbaa !5
  %2441 = getelementptr inbounds i32, ptr %6, i64 %2437
  br label %2452

2442:                                             ; preds = %2416
  %2443 = icmp eq i32 %2419, %2422
  br i1 %2443, label %2444, label %2450

2444:                                             ; preds = %2442
  store i32 0, ptr %2418, align 4, !tbaa !5
  %2445 = getelementptr inbounds i32, ptr %8, i64 %2417
  %2446 = load i32, ptr %2445, align 4, !tbaa !5
  %2447 = getelementptr inbounds i32, ptr %6, i64 %2417
  store i32 %2446, ptr %2447, align 4, !tbaa !5
  %2448 = add nuw nsw i64 %2417, 1
  %2449 = icmp eq i64 %2448, %2176
  br i1 %2449, label %2457, label %2416, !llvm.loop !662

2450:                                             ; preds = %2412, %2442
  %2451 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1177, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

2452:                                             ; preds = %2425, %2434
  %2453 = phi ptr [ %2441, %2434 ], [ %2418, %2425 ]
  %2454 = phi i32 [ %2440, %2434 ], [ 1, %2425 ]
  %2455 = load i32, ptr %2453, align 4, !tbaa !5
  %2456 = add nsw i32 %2455, %2454
  store i32 %2456, ptr %2453, align 4, !tbaa !5
  br label %2457

2457:                                             ; preds = %2444, %2452, %2414, %2399
  %2458 = icmp eq i32 %2406, %5
  br i1 %2458, label %5500, label %2321, !llvm.loop !663

2459:                                             ; preds = %1859
  %2460 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1177, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

2461:                                             ; preds = %18
  %2462 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2463 = load ptr, ptr %2462, align 8, !tbaa !9
  %2464 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2465 = load ptr, ptr %2464, align 8, !tbaa !9
  store i32 0, ptr %2465, align 4, !tbaa !5
  %2466 = icmp eq i32 %13, 0
  br i1 %2466, label %2467, label %2470

2467:                                             ; preds = %2461
  %2468 = load i32, ptr %2463, align 4, !tbaa !5
  %2469 = mul nsw i32 %2468, %2468
  store i32 %2469, ptr %2465, align 4, !tbaa !5
  br label %5500

2470:                                             ; preds = %2461
  switch i32 %1, label %3064 [
    i32 1, label %2471
    i32 0, label %2772
  ]

2471:                                             ; preds = %2470
  %2472 = getelementptr inbounds i32, ptr %3, i64 %19
  %2473 = load i32, ptr %2472, align 4, !tbaa !5
  %2474 = icmp eq i32 %2473, 0
  %2475 = icmp sgt i32 %5, 0
  br i1 %2474, label %2485, label %2476

2476:                                             ; preds = %2471
  br i1 %2475, label %2477, label %5500

2477:                                             ; preds = %2476
  %2478 = icmp sgt i32 %13, 1
  %2479 = icmp sgt i32 %13, 0
  %2480 = add i32 %13, -2
  %2481 = zext i32 %2480 to i64
  %2482 = zext i32 %13 to i64
  %2483 = add nuw i32 %5, 1
  %2484 = icmp eq i32 %13, 1
  br label %2632

2485:                                             ; preds = %2471
  br i1 %2475, label %2486, label %5500

2486:                                             ; preds = %2485
  %2487 = icmp sgt i32 %13, 1
  %2488 = icmp sgt i32 %13, 0
  %2489 = add i32 %13, -2
  %2490 = zext i32 %2489 to i64
  %2491 = zext i32 %13 to i64
  %2492 = add nuw i32 %5, 1
  %2493 = icmp eq i32 %13, 1
  br label %2494

2494:                                             ; preds = %2486, %2630
  %2495 = phi i32 [ 0, %2486 ], [ %2582, %2630 ]
  %2496 = phi double [ 0.000000e+00, %2486 ], [ %2581, %2630 ]
  %2497 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2487, label %2498, label %2567

2498:                                             ; preds = %2494, %2557
  %2499 = phi i32 [ %2566, %2557 ], [ 0, %2494 ]
  %2500 = phi i64 [ %2508, %2557 ], [ %2491, %2494 ]
  %2501 = phi i64 [ %2565, %2557 ], [ %2490, %2494 ]
  %2502 = phi i32 [ %2563, %2557 ], [ %2497, %2494 ]
  %2503 = sub i32 %2489, %2499
  %2504 = tail call i32 @llvm.smin.i32(i32 %2503, i32 0)
  %2505 = sub i32 %2503, %2504
  %2506 = zext i32 %2505 to i64
  %2507 = add nuw nsw i64 %2506, 1
  %2508 = add nsw i64 %2500, -1
  %2509 = icmp ult i32 %2505, 31
  br i1 %2509, label %2545, label %2510

2510:                                             ; preds = %2498
  %2511 = and i64 %2507, 8589934560
  %2512 = sub i64 %2501, %2511
  br label %2513

2513:                                             ; preds = %2513, %2510
  %2514 = phi i64 [ 0, %2510 ], [ %2537, %2513 ]
  %2515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2510 ], [ %2533, %2513 ]
  %2516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2510 ], [ %2534, %2513 ]
  %2517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2510 ], [ %2535, %2513 ]
  %2518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2510 ], [ %2536, %2513 ]
  %2519 = sub i64 %2501, %2514
  %2520 = getelementptr inbounds i32, ptr %9, i64 %2519
  %2521 = getelementptr inbounds i32, ptr %2520, i64 -7
  %2522 = load <8 x i32>, ptr %2521, align 4, !tbaa !5
  %2523 = shufflevector <8 x i32> %2522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2524 = getelementptr inbounds i32, ptr %2520, i64 -15
  %2525 = load <8 x i32>, ptr %2524, align 4, !tbaa !5
  %2526 = shufflevector <8 x i32> %2525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2527 = getelementptr inbounds i32, ptr %2520, i64 -23
  %2528 = load <8 x i32>, ptr %2527, align 4, !tbaa !5
  %2529 = shufflevector <8 x i32> %2528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2530 = getelementptr inbounds i32, ptr %2520, i64 -31
  %2531 = load <8 x i32>, ptr %2530, align 4, !tbaa !5
  %2532 = shufflevector <8 x i32> %2531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2533 = mul <8 x i32> %2523, %2515
  %2534 = mul <8 x i32> %2526, %2516
  %2535 = mul <8 x i32> %2529, %2517
  %2536 = mul <8 x i32> %2532, %2518
  %2537 = add nuw i64 %2514, 32
  %2538 = icmp eq i64 %2537, %2511
  br i1 %2538, label %2539, label %2513, !llvm.loop !664

2539:                                             ; preds = %2513
  %2540 = mul <8 x i32> %2534, %2533
  %2541 = mul <8 x i32> %2535, %2540
  %2542 = mul <8 x i32> %2536, %2541
  %2543 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2542)
  %2544 = icmp eq i64 %2507, %2511
  br i1 %2544, label %2557, label %2545

2545:                                             ; preds = %2498, %2539
  %2546 = phi i64 [ %2501, %2498 ], [ %2512, %2539 ]
  %2547 = phi i32 [ 1, %2498 ], [ %2543, %2539 ]
  br label %2548

2548:                                             ; preds = %2545, %2548
  %2549 = phi i64 [ %2554, %2548 ], [ %2546, %2545 ]
  %2550 = phi i32 [ %2553, %2548 ], [ %2547, %2545 ]
  %2551 = getelementptr inbounds i32, ptr %9, i64 %2549
  %2552 = load i32, ptr %2551, align 4, !tbaa !5
  %2553 = mul nsw i32 %2552, %2550
  %2554 = add nsw i64 %2549, -1
  %2555 = trunc i64 %2549 to i32
  %2556 = icmp sgt i32 %2555, 0
  br i1 %2556, label %2548, label %2557, !llvm.loop !665

2557:                                             ; preds = %2548, %2539
  %2558 = phi i32 [ %2543, %2539 ], [ %2553, %2548 ]
  %2559 = and i64 %2508, 4294967295
  %2560 = getelementptr inbounds i32, ptr %6, i64 %2559
  %2561 = load i32, ptr %2560, align 4, !tbaa !5
  %2562 = mul nsw i32 %2561, %2558
  %2563 = add nsw i32 %2562, %2502
  %2564 = icmp sgt i64 %2500, 2
  %2565 = add nsw i64 %2501, -1
  %2566 = add i32 %2499, 1
  br i1 %2564, label %2498, label %2567, !llvm.loop !666

2567:                                             ; preds = %2557, %2494
  %2568 = phi i32 [ %2497, %2494 ], [ %2563, %2557 ]
  %2569 = sext i32 %2568 to i64
  %2570 = getelementptr inbounds double, ptr %2, i64 %2569
  %2571 = load double, ptr %2570, align 8, !tbaa !18
  %2572 = getelementptr inbounds i32, ptr %2463, i64 %2569
  %2573 = load i32, ptr %2572, align 4, !tbaa !5
  %2574 = load i32, ptr %2465, align 4, !tbaa !5
  %2575 = sitofp i32 %2574 to double
  %2576 = sitofp i32 %2573 to double
  %2577 = fmul fast double %2571, %2576
  %2578 = fmul fast double %2577, %2577
  %2579 = fadd fast double %2578, %2575
  %2580 = fptosi double %2579 to i32
  store i32 %2580, ptr %2465, align 4, !tbaa !5
  %2581 = fadd fast double %2571, %2496
  %2582 = add nuw nsw i32 %2495, 1
  br i1 %2488, label %2583, label %2630

2583:                                             ; preds = %2567
  %2584 = load i32, ptr %4, align 4, !tbaa !5
  %2585 = load i32, ptr %12, align 4, !tbaa !5
  %2586 = add nsw i32 %2585, -1
  %2587 = icmp slt i32 %2584, %2586
  br i1 %2587, label %2607, label %2588

2588:                                             ; preds = %2583
  %2589 = icmp eq i32 %2584, %2586
  br i1 %2589, label %2590, label %2623

2590:                                             ; preds = %2588
  store i32 0, ptr %4, align 4, !tbaa !5
  %2591 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2591, ptr %6, align 4, !tbaa !5
  br i1 %2493, label %2630, label %2592

2592:                                             ; preds = %2590, %2617
  %2593 = phi i64 [ %2621, %2617 ], [ 1, %2590 ]
  %2594 = getelementptr inbounds i32, ptr %4, i64 %2593
  %2595 = load i32, ptr %2594, align 4, !tbaa !5
  %2596 = getelementptr inbounds i32, ptr %12, i64 %2593
  %2597 = load i32, ptr %2596, align 4, !tbaa !5
  %2598 = add nsw i32 %2597, -1
  %2599 = icmp slt i32 %2595, %2598
  br i1 %2599, label %2600, label %2615

2600:                                             ; preds = %2592
  br i1 %2587, label %2607, label %2601

2601:                                             ; preds = %2600
  %2602 = getelementptr inbounds i32, ptr %7, i64 %2593
  %2603 = load i32, ptr %2602, align 4, !tbaa !5
  %2604 = getelementptr inbounds i32, ptr %6, i64 %2593
  %2605 = load i32, ptr %2604, align 4, !tbaa !5
  %2606 = add nsw i32 %2605, %2603
  store i32 %2606, ptr %2604, align 4, !tbaa !5
  br label %2625

2607:                                             ; preds = %2583, %2600
  %2608 = phi i32 [ %2595, %2600 ], [ %2584, %2583 ]
  %2609 = phi ptr [ %2594, %2600 ], [ %4, %2583 ]
  %2610 = phi i64 [ %2593, %2600 ], [ 0, %2583 ]
  %2611 = add nsw i32 %2608, 1
  store i32 %2611, ptr %2609, align 4, !tbaa !5
  %2612 = getelementptr inbounds i32, ptr %7, i64 %2610
  %2613 = load i32, ptr %2612, align 4, !tbaa !5
  %2614 = getelementptr inbounds i32, ptr %6, i64 %2610
  br label %2625

2615:                                             ; preds = %2592
  %2616 = icmp eq i32 %2595, %2598
  br i1 %2616, label %2617, label %2623

2617:                                             ; preds = %2615
  store i32 0, ptr %2594, align 4, !tbaa !5
  %2618 = getelementptr inbounds i32, ptr %8, i64 %2593
  %2619 = load i32, ptr %2618, align 4, !tbaa !5
  %2620 = getelementptr inbounds i32, ptr %6, i64 %2593
  store i32 %2619, ptr %2620, align 4, !tbaa !5
  %2621 = add nuw nsw i64 %2593, 1
  %2622 = icmp eq i64 %2621, %2491
  br i1 %2622, label %2630, label %2592, !llvm.loop !667

2623:                                             ; preds = %2588, %2615
  %2624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1182, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

2625:                                             ; preds = %2601, %2607
  %2626 = phi ptr [ %2614, %2607 ], [ %2594, %2601 ]
  %2627 = phi i32 [ %2613, %2607 ], [ 1, %2601 ]
  %2628 = load i32, ptr %2626, align 4, !tbaa !5
  %2629 = add nsw i32 %2628, %2627
  store i32 %2629, ptr %2626, align 4, !tbaa !5
  br label %2630

2630:                                             ; preds = %2617, %2625, %2590, %2567
  %2631 = icmp eq i32 %2582, %5
  br i1 %2631, label %5500, label %2494, !llvm.loop !668

2632:                                             ; preds = %2477, %2770
  %2633 = phi i32 [ 0, %2477 ], [ %2719, %2770 ]
  %2634 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2478, label %2635, label %2704

2635:                                             ; preds = %2632, %2694
  %2636 = phi i32 [ %2703, %2694 ], [ 0, %2632 ]
  %2637 = phi i64 [ %2645, %2694 ], [ %2482, %2632 ]
  %2638 = phi i64 [ %2702, %2694 ], [ %2481, %2632 ]
  %2639 = phi i32 [ %2700, %2694 ], [ %2634, %2632 ]
  %2640 = sub i32 %2480, %2636
  %2641 = tail call i32 @llvm.smin.i32(i32 %2640, i32 0)
  %2642 = sub i32 %2640, %2641
  %2643 = zext i32 %2642 to i64
  %2644 = add nuw nsw i64 %2643, 1
  %2645 = add nsw i64 %2637, -1
  %2646 = icmp ult i32 %2642, 31
  br i1 %2646, label %2682, label %2647

2647:                                             ; preds = %2635
  %2648 = and i64 %2644, 8589934560
  %2649 = sub i64 %2638, %2648
  br label %2650

2650:                                             ; preds = %2650, %2647
  %2651 = phi i64 [ 0, %2647 ], [ %2674, %2650 ]
  %2652 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2647 ], [ %2670, %2650 ]
  %2653 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2647 ], [ %2671, %2650 ]
  %2654 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2647 ], [ %2672, %2650 ]
  %2655 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2647 ], [ %2673, %2650 ]
  %2656 = sub i64 %2638, %2651
  %2657 = getelementptr inbounds i32, ptr %11, i64 %2656
  %2658 = getelementptr inbounds i32, ptr %2657, i64 -7
  %2659 = load <8 x i32>, ptr %2658, align 4, !tbaa !5
  %2660 = shufflevector <8 x i32> %2659, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2661 = getelementptr inbounds i32, ptr %2657, i64 -15
  %2662 = load <8 x i32>, ptr %2661, align 4, !tbaa !5
  %2663 = shufflevector <8 x i32> %2662, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2664 = getelementptr inbounds i32, ptr %2657, i64 -23
  %2665 = load <8 x i32>, ptr %2664, align 4, !tbaa !5
  %2666 = shufflevector <8 x i32> %2665, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2667 = getelementptr inbounds i32, ptr %2657, i64 -31
  %2668 = load <8 x i32>, ptr %2667, align 4, !tbaa !5
  %2669 = shufflevector <8 x i32> %2668, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2670 = mul <8 x i32> %2660, %2652
  %2671 = mul <8 x i32> %2663, %2653
  %2672 = mul <8 x i32> %2666, %2654
  %2673 = mul <8 x i32> %2669, %2655
  %2674 = add nuw i64 %2651, 32
  %2675 = icmp eq i64 %2674, %2648
  br i1 %2675, label %2676, label %2650, !llvm.loop !669

2676:                                             ; preds = %2650
  %2677 = mul <8 x i32> %2671, %2670
  %2678 = mul <8 x i32> %2672, %2677
  %2679 = mul <8 x i32> %2673, %2678
  %2680 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2679)
  %2681 = icmp eq i64 %2644, %2648
  br i1 %2681, label %2694, label %2682

2682:                                             ; preds = %2635, %2676
  %2683 = phi i64 [ %2638, %2635 ], [ %2649, %2676 ]
  %2684 = phi i32 [ 1, %2635 ], [ %2680, %2676 ]
  br label %2685

2685:                                             ; preds = %2682, %2685
  %2686 = phi i64 [ %2691, %2685 ], [ %2683, %2682 ]
  %2687 = phi i32 [ %2690, %2685 ], [ %2684, %2682 ]
  %2688 = getelementptr inbounds i32, ptr %11, i64 %2686
  %2689 = load i32, ptr %2688, align 4, !tbaa !5
  %2690 = mul nsw i32 %2689, %2687
  %2691 = add nsw i64 %2686, -1
  %2692 = trunc i64 %2686 to i32
  %2693 = icmp sgt i32 %2692, 0
  br i1 %2693, label %2685, label %2694, !llvm.loop !670

2694:                                             ; preds = %2685, %2676
  %2695 = phi i32 [ %2680, %2676 ], [ %2690, %2685 ]
  %2696 = and i64 %2645, 4294967295
  %2697 = getelementptr inbounds i32, ptr %6, i64 %2696
  %2698 = load i32, ptr %2697, align 4, !tbaa !5
  %2699 = mul nsw i32 %2698, %2695
  %2700 = add nsw i32 %2699, %2639
  %2701 = icmp sgt i64 %2637, 2
  %2702 = add nsw i64 %2638, -1
  %2703 = add i32 %2636, 1
  br i1 %2701, label %2635, label %2704, !llvm.loop !671

2704:                                             ; preds = %2694, %2632
  %2705 = phi i32 [ %2634, %2632 ], [ %2700, %2694 ]
  %2706 = icmp slt i32 %2705, %5
  br i1 %2706, label %2709, label %2707

2707:                                             ; preds = %2704
  %2708 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1182, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

2709:                                             ; preds = %2704
  %2710 = sext i32 %2705 to i64
  %2711 = getelementptr inbounds i32, ptr %2463, i64 %2710
  %2712 = load i32, ptr %2711, align 4, !tbaa !5
  %2713 = load i32, ptr %2465, align 4, !tbaa !5
  %2714 = sitofp i32 %2713 to double
  %2715 = sitofp i32 %2712 to double
  %2716 = fmul fast double %2715, %2715
  %2717 = fadd fast double %2716, %2714
  %2718 = fptosi double %2717 to i32
  store i32 %2718, ptr %2465, align 4, !tbaa !5
  %2719 = add nuw nsw i32 %2633, 1
  br i1 %2479, label %2720, label %2770

2720:                                             ; preds = %2709
  %2721 = load i32, ptr %4, align 4, !tbaa !5
  %2722 = load i32, ptr %12, align 4, !tbaa !5
  %2723 = add nsw i32 %2722, -1
  %2724 = icmp slt i32 %2721, %2723
  br i1 %2724, label %2747, label %2725

2725:                                             ; preds = %2720
  %2726 = icmp eq i32 %2721, %2723
  br i1 %2726, label %2727, label %2763

2727:                                             ; preds = %2725
  store i32 0, ptr %4, align 4, !tbaa !5
  %2728 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2728, ptr %6, align 4, !tbaa !5
  br i1 %2484, label %2770, label %2729

2729:                                             ; preds = %2727, %2757
  %2730 = phi i64 [ %2761, %2757 ], [ 1, %2727 ]
  %2731 = getelementptr inbounds i32, ptr %4, i64 %2730
  %2732 = load i32, ptr %2731, align 4, !tbaa !5
  %2733 = getelementptr inbounds i32, ptr %12, i64 %2730
  %2734 = load i32, ptr %2733, align 4, !tbaa !5
  %2735 = add nsw i32 %2734, -1
  %2736 = icmp slt i32 %2732, %2735
  br i1 %2736, label %2737, label %2755

2737:                                             ; preds = %2729
  br i1 %2724, label %2747, label %2738

2738:                                             ; preds = %2737
  %2739 = shl i64 %2730, 32
  %2740 = add i64 %2739, -4294967296
  %2741 = ashr exact i64 %2740, 32
  %2742 = getelementptr inbounds i32, ptr %7, i64 %2741
  %2743 = load i32, ptr %2742, align 4, !tbaa !5
  %2744 = getelementptr inbounds i32, ptr %6, i64 %2730
  %2745 = load i32, ptr %2744, align 4, !tbaa !5
  %2746 = add nsw i32 %2745, %2743
  store i32 %2746, ptr %2744, align 4, !tbaa !5
  br label %2765

2747:                                             ; preds = %2720, %2737
  %2748 = phi i32 [ %2732, %2737 ], [ %2721, %2720 ]
  %2749 = phi ptr [ %2731, %2737 ], [ %4, %2720 ]
  %2750 = phi i64 [ %2730, %2737 ], [ 0, %2720 ]
  %2751 = add nsw i32 %2748, 1
  store i32 %2751, ptr %2749, align 4, !tbaa !5
  %2752 = getelementptr inbounds i32, ptr %7, i64 %2750
  %2753 = load i32, ptr %2752, align 4, !tbaa !5
  %2754 = getelementptr inbounds i32, ptr %6, i64 %2750
  br label %2765

2755:                                             ; preds = %2729
  %2756 = icmp eq i32 %2732, %2735
  br i1 %2756, label %2757, label %2763

2757:                                             ; preds = %2755
  store i32 0, ptr %2731, align 4, !tbaa !5
  %2758 = getelementptr inbounds i32, ptr %8, i64 %2730
  %2759 = load i32, ptr %2758, align 4, !tbaa !5
  %2760 = getelementptr inbounds i32, ptr %6, i64 %2730
  store i32 %2759, ptr %2760, align 4, !tbaa !5
  %2761 = add nuw nsw i64 %2730, 1
  %2762 = icmp eq i64 %2761, %2482
  br i1 %2762, label %2770, label %2729, !llvm.loop !672

2763:                                             ; preds = %2725, %2755
  %2764 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1182, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

2765:                                             ; preds = %2738, %2747
  %2766 = phi ptr [ %2754, %2747 ], [ %2731, %2738 ]
  %2767 = phi i32 [ %2753, %2747 ], [ 1, %2738 ]
  %2768 = load i32, ptr %2766, align 4, !tbaa !5
  %2769 = add nsw i32 %2768, %2767
  store i32 %2769, ptr %2766, align 4, !tbaa !5
  br label %2770

2770:                                             ; preds = %2757, %2765, %2727, %2709
  %2771 = icmp eq i32 %2719, %5
  br i1 %2771, label %5500, label %2632, !llvm.loop !673

2772:                                             ; preds = %2470
  %2773 = getelementptr inbounds i32, ptr %3, i64 %19
  %2774 = load i32, ptr %2773, align 4, !tbaa !5
  %2775 = icmp eq i32 %2774, 0
  %2776 = icmp sgt i32 %5, 0
  br i1 %2775, label %2786, label %2777

2777:                                             ; preds = %2772
  br i1 %2776, label %2778, label %5500

2778:                                             ; preds = %2777
  %2779 = icmp sgt i32 %13, 1
  %2780 = icmp sgt i32 %13, 0
  %2781 = add i32 %13, -2
  %2782 = zext i32 %2781 to i64
  %2783 = zext i32 %13 to i64
  %2784 = add nuw i32 %5, 1
  %2785 = icmp eq i32 %13, 1
  br label %2927

2786:                                             ; preds = %2772
  br i1 %2776, label %2787, label %5500

2787:                                             ; preds = %2786
  %2788 = icmp sgt i32 %13, 1
  %2789 = icmp sgt i32 %13, 0
  %2790 = add i32 %13, -2
  %2791 = zext i32 %2790 to i64
  %2792 = zext i32 %13 to i64
  %2793 = add nuw i32 %5, 1
  %2794 = icmp eq i32 %13, 1
  br label %2795

2795:                                             ; preds = %2787, %2925
  %2796 = phi i32 [ 0, %2787 ], [ %2877, %2925 ]
  %2797 = phi double [ 0.000000e+00, %2787 ], [ %2876, %2925 ]
  %2798 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2788, label %2799, label %2868

2799:                                             ; preds = %2795, %2858
  %2800 = phi i32 [ %2867, %2858 ], [ 0, %2795 ]
  %2801 = phi i64 [ %2809, %2858 ], [ %2792, %2795 ]
  %2802 = phi i64 [ %2866, %2858 ], [ %2791, %2795 ]
  %2803 = phi i32 [ %2864, %2858 ], [ %2798, %2795 ]
  %2804 = sub i32 %2790, %2800
  %2805 = tail call i32 @llvm.smin.i32(i32 %2804, i32 0)
  %2806 = sub i32 %2804, %2805
  %2807 = zext i32 %2806 to i64
  %2808 = add nuw nsw i64 %2807, 1
  %2809 = add nsw i64 %2801, -1
  %2810 = icmp ult i32 %2806, 31
  br i1 %2810, label %2846, label %2811

2811:                                             ; preds = %2799
  %2812 = and i64 %2808, 8589934560
  %2813 = sub i64 %2802, %2812
  br label %2814

2814:                                             ; preds = %2814, %2811
  %2815 = phi i64 [ 0, %2811 ], [ %2838, %2814 ]
  %2816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2811 ], [ %2834, %2814 ]
  %2817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2811 ], [ %2835, %2814 ]
  %2818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2811 ], [ %2836, %2814 ]
  %2819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2811 ], [ %2837, %2814 ]
  %2820 = sub i64 %2802, %2815
  %2821 = getelementptr inbounds i32, ptr %9, i64 %2820
  %2822 = getelementptr inbounds i32, ptr %2821, i64 -7
  %2823 = load <8 x i32>, ptr %2822, align 4, !tbaa !5
  %2824 = shufflevector <8 x i32> %2823, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2825 = getelementptr inbounds i32, ptr %2821, i64 -15
  %2826 = load <8 x i32>, ptr %2825, align 4, !tbaa !5
  %2827 = shufflevector <8 x i32> %2826, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2828 = getelementptr inbounds i32, ptr %2821, i64 -23
  %2829 = load <8 x i32>, ptr %2828, align 4, !tbaa !5
  %2830 = shufflevector <8 x i32> %2829, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2831 = getelementptr inbounds i32, ptr %2821, i64 -31
  %2832 = load <8 x i32>, ptr %2831, align 4, !tbaa !5
  %2833 = shufflevector <8 x i32> %2832, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2834 = mul <8 x i32> %2824, %2816
  %2835 = mul <8 x i32> %2827, %2817
  %2836 = mul <8 x i32> %2830, %2818
  %2837 = mul <8 x i32> %2833, %2819
  %2838 = add nuw i64 %2815, 32
  %2839 = icmp eq i64 %2838, %2812
  br i1 %2839, label %2840, label %2814, !llvm.loop !674

2840:                                             ; preds = %2814
  %2841 = mul <8 x i32> %2835, %2834
  %2842 = mul <8 x i32> %2836, %2841
  %2843 = mul <8 x i32> %2837, %2842
  %2844 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2843)
  %2845 = icmp eq i64 %2808, %2812
  br i1 %2845, label %2858, label %2846

2846:                                             ; preds = %2799, %2840
  %2847 = phi i64 [ %2802, %2799 ], [ %2813, %2840 ]
  %2848 = phi i32 [ 1, %2799 ], [ %2844, %2840 ]
  br label %2849

2849:                                             ; preds = %2846, %2849
  %2850 = phi i64 [ %2855, %2849 ], [ %2847, %2846 ]
  %2851 = phi i32 [ %2854, %2849 ], [ %2848, %2846 ]
  %2852 = getelementptr inbounds i32, ptr %9, i64 %2850
  %2853 = load i32, ptr %2852, align 4, !tbaa !5
  %2854 = mul nsw i32 %2853, %2851
  %2855 = add nsw i64 %2850, -1
  %2856 = trunc i64 %2850 to i32
  %2857 = icmp sgt i32 %2856, 0
  br i1 %2857, label %2849, label %2858, !llvm.loop !675

2858:                                             ; preds = %2849, %2840
  %2859 = phi i32 [ %2844, %2840 ], [ %2854, %2849 ]
  %2860 = and i64 %2809, 4294967295
  %2861 = getelementptr inbounds i32, ptr %6, i64 %2860
  %2862 = load i32, ptr %2861, align 4, !tbaa !5
  %2863 = mul nsw i32 %2862, %2859
  %2864 = add nsw i32 %2863, %2803
  %2865 = icmp sgt i64 %2801, 2
  %2866 = add nsw i64 %2802, -1
  %2867 = add i32 %2800, 1
  br i1 %2865, label %2799, label %2868, !llvm.loop !676

2868:                                             ; preds = %2858, %2795
  %2869 = phi i32 [ %2798, %2795 ], [ %2864, %2858 ]
  %2870 = sext i32 %2869 to i64
  %2871 = getelementptr inbounds i32, ptr %2463, i64 %2870
  %2872 = load i32, ptr %2871, align 4, !tbaa !5
  %2873 = load i32, ptr %2465, align 4, !tbaa !5
  %2874 = mul nsw i32 %2872, %2872
  %2875 = add nsw i32 %2873, %2874
  store i32 %2875, ptr %2465, align 4, !tbaa !5
  %2876 = fadd fast double %2797, 1.000000e+00
  %2877 = add nuw nsw i32 %2796, 1
  br i1 %2789, label %2878, label %2925

2878:                                             ; preds = %2868
  %2879 = load i32, ptr %4, align 4, !tbaa !5
  %2880 = load i32, ptr %12, align 4, !tbaa !5
  %2881 = add nsw i32 %2880, -1
  %2882 = icmp slt i32 %2879, %2881
  br i1 %2882, label %2902, label %2883

2883:                                             ; preds = %2878
  %2884 = icmp eq i32 %2879, %2881
  br i1 %2884, label %2885, label %2918

2885:                                             ; preds = %2883
  store i32 0, ptr %4, align 4, !tbaa !5
  %2886 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2886, ptr %6, align 4, !tbaa !5
  br i1 %2794, label %2925, label %2887

2887:                                             ; preds = %2885, %2912
  %2888 = phi i64 [ %2916, %2912 ], [ 1, %2885 ]
  %2889 = getelementptr inbounds i32, ptr %4, i64 %2888
  %2890 = load i32, ptr %2889, align 4, !tbaa !5
  %2891 = getelementptr inbounds i32, ptr %12, i64 %2888
  %2892 = load i32, ptr %2891, align 4, !tbaa !5
  %2893 = add nsw i32 %2892, -1
  %2894 = icmp slt i32 %2890, %2893
  br i1 %2894, label %2895, label %2910

2895:                                             ; preds = %2887
  br i1 %2882, label %2902, label %2896

2896:                                             ; preds = %2895
  %2897 = getelementptr inbounds i32, ptr %7, i64 %2888
  %2898 = load i32, ptr %2897, align 4, !tbaa !5
  %2899 = getelementptr inbounds i32, ptr %6, i64 %2888
  %2900 = load i32, ptr %2899, align 4, !tbaa !5
  %2901 = add nsw i32 %2900, %2898
  store i32 %2901, ptr %2899, align 4, !tbaa !5
  br label %2920

2902:                                             ; preds = %2878, %2895
  %2903 = phi i32 [ %2890, %2895 ], [ %2879, %2878 ]
  %2904 = phi ptr [ %2889, %2895 ], [ %4, %2878 ]
  %2905 = phi i64 [ %2888, %2895 ], [ 0, %2878 ]
  %2906 = add nsw i32 %2903, 1
  store i32 %2906, ptr %2904, align 4, !tbaa !5
  %2907 = getelementptr inbounds i32, ptr %7, i64 %2905
  %2908 = load i32, ptr %2907, align 4, !tbaa !5
  %2909 = getelementptr inbounds i32, ptr %6, i64 %2905
  br label %2920

2910:                                             ; preds = %2887
  %2911 = icmp eq i32 %2890, %2893
  br i1 %2911, label %2912, label %2918

2912:                                             ; preds = %2910
  store i32 0, ptr %2889, align 4, !tbaa !5
  %2913 = getelementptr inbounds i32, ptr %8, i64 %2888
  %2914 = load i32, ptr %2913, align 4, !tbaa !5
  %2915 = getelementptr inbounds i32, ptr %6, i64 %2888
  store i32 %2914, ptr %2915, align 4, !tbaa !5
  %2916 = add nuw nsw i64 %2888, 1
  %2917 = icmp eq i64 %2916, %2792
  br i1 %2917, label %2925, label %2887, !llvm.loop !677

2918:                                             ; preds = %2883, %2910
  %2919 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1182, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

2920:                                             ; preds = %2896, %2902
  %2921 = phi ptr [ %2909, %2902 ], [ %2889, %2896 ]
  %2922 = phi i32 [ %2908, %2902 ], [ 1, %2896 ]
  %2923 = load i32, ptr %2921, align 4, !tbaa !5
  %2924 = add nsw i32 %2923, %2922
  store i32 %2924, ptr %2921, align 4, !tbaa !5
  br label %2925

2925:                                             ; preds = %2912, %2920, %2885, %2868
  %2926 = icmp eq i32 %2877, %5
  br i1 %2926, label %5500, label %2795, !llvm.loop !678

2927:                                             ; preds = %2778, %3062
  %2928 = phi i32 [ 0, %2778 ], [ %3011, %3062 ]
  %2929 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2779, label %2930, label %2999

2930:                                             ; preds = %2927, %2989
  %2931 = phi i32 [ %2998, %2989 ], [ 0, %2927 ]
  %2932 = phi i64 [ %2940, %2989 ], [ %2783, %2927 ]
  %2933 = phi i64 [ %2997, %2989 ], [ %2782, %2927 ]
  %2934 = phi i32 [ %2995, %2989 ], [ %2929, %2927 ]
  %2935 = sub i32 %2781, %2931
  %2936 = tail call i32 @llvm.smin.i32(i32 %2935, i32 0)
  %2937 = sub i32 %2935, %2936
  %2938 = zext i32 %2937 to i64
  %2939 = add nuw nsw i64 %2938, 1
  %2940 = add nsw i64 %2932, -1
  %2941 = icmp ult i32 %2937, 31
  br i1 %2941, label %2977, label %2942

2942:                                             ; preds = %2930
  %2943 = and i64 %2939, 8589934560
  %2944 = sub i64 %2933, %2943
  br label %2945

2945:                                             ; preds = %2945, %2942
  %2946 = phi i64 [ 0, %2942 ], [ %2969, %2945 ]
  %2947 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2965, %2945 ]
  %2948 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2966, %2945 ]
  %2949 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2967, %2945 ]
  %2950 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2968, %2945 ]
  %2951 = sub i64 %2933, %2946
  %2952 = getelementptr inbounds i32, ptr %11, i64 %2951
  %2953 = getelementptr inbounds i32, ptr %2952, i64 -7
  %2954 = load <8 x i32>, ptr %2953, align 4, !tbaa !5
  %2955 = shufflevector <8 x i32> %2954, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2956 = getelementptr inbounds i32, ptr %2952, i64 -15
  %2957 = load <8 x i32>, ptr %2956, align 4, !tbaa !5
  %2958 = shufflevector <8 x i32> %2957, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2959 = getelementptr inbounds i32, ptr %2952, i64 -23
  %2960 = load <8 x i32>, ptr %2959, align 4, !tbaa !5
  %2961 = shufflevector <8 x i32> %2960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2962 = getelementptr inbounds i32, ptr %2952, i64 -31
  %2963 = load <8 x i32>, ptr %2962, align 4, !tbaa !5
  %2964 = shufflevector <8 x i32> %2963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2965 = mul <8 x i32> %2955, %2947
  %2966 = mul <8 x i32> %2958, %2948
  %2967 = mul <8 x i32> %2961, %2949
  %2968 = mul <8 x i32> %2964, %2950
  %2969 = add nuw i64 %2946, 32
  %2970 = icmp eq i64 %2969, %2943
  br i1 %2970, label %2971, label %2945, !llvm.loop !679

2971:                                             ; preds = %2945
  %2972 = mul <8 x i32> %2966, %2965
  %2973 = mul <8 x i32> %2967, %2972
  %2974 = mul <8 x i32> %2968, %2973
  %2975 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2974)
  %2976 = icmp eq i64 %2939, %2943
  br i1 %2976, label %2989, label %2977

2977:                                             ; preds = %2930, %2971
  %2978 = phi i64 [ %2933, %2930 ], [ %2944, %2971 ]
  %2979 = phi i32 [ 1, %2930 ], [ %2975, %2971 ]
  br label %2980

2980:                                             ; preds = %2977, %2980
  %2981 = phi i64 [ %2986, %2980 ], [ %2978, %2977 ]
  %2982 = phi i32 [ %2985, %2980 ], [ %2979, %2977 ]
  %2983 = getelementptr inbounds i32, ptr %11, i64 %2981
  %2984 = load i32, ptr %2983, align 4, !tbaa !5
  %2985 = mul nsw i32 %2984, %2982
  %2986 = add nsw i64 %2981, -1
  %2987 = trunc i64 %2981 to i32
  %2988 = icmp sgt i32 %2987, 0
  br i1 %2988, label %2980, label %2989, !llvm.loop !680

2989:                                             ; preds = %2980, %2971
  %2990 = phi i32 [ %2975, %2971 ], [ %2985, %2980 ]
  %2991 = and i64 %2940, 4294967295
  %2992 = getelementptr inbounds i32, ptr %6, i64 %2991
  %2993 = load i32, ptr %2992, align 4, !tbaa !5
  %2994 = mul nsw i32 %2993, %2990
  %2995 = add nsw i32 %2994, %2934
  %2996 = icmp sgt i64 %2932, 2
  %2997 = add nsw i64 %2933, -1
  %2998 = add i32 %2931, 1
  br i1 %2996, label %2930, label %2999, !llvm.loop !681

2999:                                             ; preds = %2989, %2927
  %3000 = phi i32 [ %2929, %2927 ], [ %2995, %2989 ]
  %3001 = icmp slt i32 %3000, %5
  br i1 %3001, label %3004, label %3002

3002:                                             ; preds = %2999
  %3003 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1182, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

3004:                                             ; preds = %2999
  %3005 = sext i32 %3000 to i64
  %3006 = getelementptr inbounds i32, ptr %2463, i64 %3005
  %3007 = load i32, ptr %3006, align 4, !tbaa !5
  %3008 = load i32, ptr %2465, align 4, !tbaa !5
  %3009 = mul nsw i32 %3007, %3007
  %3010 = add nsw i32 %3008, %3009
  store i32 %3010, ptr %2465, align 4, !tbaa !5
  %3011 = add nuw nsw i32 %2928, 1
  br i1 %2780, label %3012, label %3062

3012:                                             ; preds = %3004
  %3013 = load i32, ptr %4, align 4, !tbaa !5
  %3014 = load i32, ptr %12, align 4, !tbaa !5
  %3015 = add nsw i32 %3014, -1
  %3016 = icmp slt i32 %3013, %3015
  br i1 %3016, label %3039, label %3017

3017:                                             ; preds = %3012
  %3018 = icmp eq i32 %3013, %3015
  br i1 %3018, label %3019, label %3055

3019:                                             ; preds = %3017
  store i32 0, ptr %4, align 4, !tbaa !5
  %3020 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3020, ptr %6, align 4, !tbaa !5
  br i1 %2785, label %3062, label %3021

3021:                                             ; preds = %3019, %3049
  %3022 = phi i64 [ %3053, %3049 ], [ 1, %3019 ]
  %3023 = getelementptr inbounds i32, ptr %4, i64 %3022
  %3024 = load i32, ptr %3023, align 4, !tbaa !5
  %3025 = getelementptr inbounds i32, ptr %12, i64 %3022
  %3026 = load i32, ptr %3025, align 4, !tbaa !5
  %3027 = add nsw i32 %3026, -1
  %3028 = icmp slt i32 %3024, %3027
  br i1 %3028, label %3029, label %3047

3029:                                             ; preds = %3021
  br i1 %3016, label %3039, label %3030

3030:                                             ; preds = %3029
  %3031 = shl i64 %3022, 32
  %3032 = add i64 %3031, -4294967296
  %3033 = ashr exact i64 %3032, 32
  %3034 = getelementptr inbounds i32, ptr %7, i64 %3033
  %3035 = load i32, ptr %3034, align 4, !tbaa !5
  %3036 = getelementptr inbounds i32, ptr %6, i64 %3022
  %3037 = load i32, ptr %3036, align 4, !tbaa !5
  %3038 = add nsw i32 %3037, %3035
  store i32 %3038, ptr %3036, align 4, !tbaa !5
  br label %3057

3039:                                             ; preds = %3012, %3029
  %3040 = phi i32 [ %3024, %3029 ], [ %3013, %3012 ]
  %3041 = phi ptr [ %3023, %3029 ], [ %4, %3012 ]
  %3042 = phi i64 [ %3022, %3029 ], [ 0, %3012 ]
  %3043 = add nsw i32 %3040, 1
  store i32 %3043, ptr %3041, align 4, !tbaa !5
  %3044 = getelementptr inbounds i32, ptr %7, i64 %3042
  %3045 = load i32, ptr %3044, align 4, !tbaa !5
  %3046 = getelementptr inbounds i32, ptr %6, i64 %3042
  br label %3057

3047:                                             ; preds = %3021
  %3048 = icmp eq i32 %3024, %3027
  br i1 %3048, label %3049, label %3055

3049:                                             ; preds = %3047
  store i32 0, ptr %3023, align 4, !tbaa !5
  %3050 = getelementptr inbounds i32, ptr %8, i64 %3022
  %3051 = load i32, ptr %3050, align 4, !tbaa !5
  %3052 = getelementptr inbounds i32, ptr %6, i64 %3022
  store i32 %3051, ptr %3052, align 4, !tbaa !5
  %3053 = add nuw nsw i64 %3022, 1
  %3054 = icmp eq i64 %3053, %2783
  br i1 %3054, label %3062, label %3021, !llvm.loop !682

3055:                                             ; preds = %3017, %3047
  %3056 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1182, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

3057:                                             ; preds = %3030, %3039
  %3058 = phi ptr [ %3046, %3039 ], [ %3023, %3030 ]
  %3059 = phi i32 [ %3045, %3039 ], [ 1, %3030 ]
  %3060 = load i32, ptr %3058, align 4, !tbaa !5
  %3061 = add nsw i32 %3060, %3059
  store i32 %3061, ptr %3058, align 4, !tbaa !5
  br label %3062

3062:                                             ; preds = %3049, %3057, %3019, %3004
  %3063 = icmp eq i32 %3011, %5
  br i1 %3063, label %5500, label %2927, !llvm.loop !683

3064:                                             ; preds = %2470
  %3065 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1182, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

3066:                                             ; preds = %18
  %3067 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3068 = load ptr, ptr %3067, align 8, !tbaa !9
  %3069 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3070 = load ptr, ptr %3069, align 8, !tbaa !9
  store i64 0, ptr %3070, align 8, !tbaa !120
  %3071 = icmp eq i32 %13, 0
  br i1 %3071, label %3072, label %3076

3072:                                             ; preds = %3066
  %3073 = load i32, ptr %3068, align 4, !tbaa !5
  %3074 = sext i32 %3073 to i64
  %3075 = mul nsw i64 %3074, %3074
  store i64 %3075, ptr %3070, align 8, !tbaa !120
  br label %5500

3076:                                             ; preds = %3066
  switch i32 %1, label %3672 [
    i32 1, label %3077
    i32 0, label %3378
  ]

3077:                                             ; preds = %3076
  %3078 = getelementptr inbounds i32, ptr %3, i64 %19
  %3079 = load i32, ptr %3078, align 4, !tbaa !5
  %3080 = icmp eq i32 %3079, 0
  %3081 = icmp sgt i32 %5, 0
  br i1 %3080, label %3091, label %3082

3082:                                             ; preds = %3077
  br i1 %3081, label %3083, label %5500

3083:                                             ; preds = %3082
  %3084 = icmp sgt i32 %13, 1
  %3085 = icmp sgt i32 %13, 0
  %3086 = add i32 %13, -2
  %3087 = zext i32 %3086 to i64
  %3088 = zext i32 %13 to i64
  %3089 = add nuw i32 %5, 1
  %3090 = icmp eq i32 %13, 1
  br label %3238

3091:                                             ; preds = %3077
  br i1 %3081, label %3092, label %5500

3092:                                             ; preds = %3091
  %3093 = icmp sgt i32 %13, 1
  %3094 = icmp sgt i32 %13, 0
  %3095 = add i32 %13, -2
  %3096 = zext i32 %3095 to i64
  %3097 = zext i32 %13 to i64
  %3098 = add nuw i32 %5, 1
  %3099 = icmp eq i32 %13, 1
  br label %3100

3100:                                             ; preds = %3092, %3236
  %3101 = phi i64 [ 0, %3092 ], [ %3186, %3236 ]
  %3102 = phi i32 [ 0, %3092 ], [ %3188, %3236 ]
  %3103 = phi double [ 0.000000e+00, %3092 ], [ %3187, %3236 ]
  %3104 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3093, label %3105, label %3174

3105:                                             ; preds = %3100, %3164
  %3106 = phi i32 [ %3173, %3164 ], [ 0, %3100 ]
  %3107 = phi i64 [ %3115, %3164 ], [ %3097, %3100 ]
  %3108 = phi i64 [ %3172, %3164 ], [ %3096, %3100 ]
  %3109 = phi i32 [ %3170, %3164 ], [ %3104, %3100 ]
  %3110 = sub i32 %3095, %3106
  %3111 = tail call i32 @llvm.smin.i32(i32 %3110, i32 0)
  %3112 = sub i32 %3110, %3111
  %3113 = zext i32 %3112 to i64
  %3114 = add nuw nsw i64 %3113, 1
  %3115 = add nsw i64 %3107, -1
  %3116 = icmp ult i32 %3112, 31
  br i1 %3116, label %3152, label %3117

3117:                                             ; preds = %3105
  %3118 = and i64 %3114, 8589934560
  %3119 = sub i64 %3108, %3118
  br label %3120

3120:                                             ; preds = %3120, %3117
  %3121 = phi i64 [ 0, %3117 ], [ %3144, %3120 ]
  %3122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3117 ], [ %3140, %3120 ]
  %3123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3117 ], [ %3141, %3120 ]
  %3124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3117 ], [ %3142, %3120 ]
  %3125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3117 ], [ %3143, %3120 ]
  %3126 = sub i64 %3108, %3121
  %3127 = getelementptr inbounds i32, ptr %9, i64 %3126
  %3128 = getelementptr inbounds i32, ptr %3127, i64 -7
  %3129 = load <8 x i32>, ptr %3128, align 4, !tbaa !5
  %3130 = shufflevector <8 x i32> %3129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3131 = getelementptr inbounds i32, ptr %3127, i64 -15
  %3132 = load <8 x i32>, ptr %3131, align 4, !tbaa !5
  %3133 = shufflevector <8 x i32> %3132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3134 = getelementptr inbounds i32, ptr %3127, i64 -23
  %3135 = load <8 x i32>, ptr %3134, align 4, !tbaa !5
  %3136 = shufflevector <8 x i32> %3135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3137 = getelementptr inbounds i32, ptr %3127, i64 -31
  %3138 = load <8 x i32>, ptr %3137, align 4, !tbaa !5
  %3139 = shufflevector <8 x i32> %3138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3140 = mul <8 x i32> %3130, %3122
  %3141 = mul <8 x i32> %3133, %3123
  %3142 = mul <8 x i32> %3136, %3124
  %3143 = mul <8 x i32> %3139, %3125
  %3144 = add nuw i64 %3121, 32
  %3145 = icmp eq i64 %3144, %3118
  br i1 %3145, label %3146, label %3120, !llvm.loop !684

3146:                                             ; preds = %3120
  %3147 = mul <8 x i32> %3141, %3140
  %3148 = mul <8 x i32> %3142, %3147
  %3149 = mul <8 x i32> %3143, %3148
  %3150 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3149)
  %3151 = icmp eq i64 %3114, %3118
  br i1 %3151, label %3164, label %3152

3152:                                             ; preds = %3105, %3146
  %3153 = phi i64 [ %3108, %3105 ], [ %3119, %3146 ]
  %3154 = phi i32 [ 1, %3105 ], [ %3150, %3146 ]
  br label %3155

3155:                                             ; preds = %3152, %3155
  %3156 = phi i64 [ %3161, %3155 ], [ %3153, %3152 ]
  %3157 = phi i32 [ %3160, %3155 ], [ %3154, %3152 ]
  %3158 = getelementptr inbounds i32, ptr %9, i64 %3156
  %3159 = load i32, ptr %3158, align 4, !tbaa !5
  %3160 = mul nsw i32 %3159, %3157
  %3161 = add nsw i64 %3156, -1
  %3162 = trunc i64 %3156 to i32
  %3163 = icmp sgt i32 %3162, 0
  br i1 %3163, label %3155, label %3164, !llvm.loop !685

3164:                                             ; preds = %3155, %3146
  %3165 = phi i32 [ %3150, %3146 ], [ %3160, %3155 ]
  %3166 = and i64 %3115, 4294967295
  %3167 = getelementptr inbounds i32, ptr %6, i64 %3166
  %3168 = load i32, ptr %3167, align 4, !tbaa !5
  %3169 = mul nsw i32 %3168, %3165
  %3170 = add nsw i32 %3169, %3109
  %3171 = icmp sgt i64 %3107, 2
  %3172 = add nsw i64 %3108, -1
  %3173 = add i32 %3106, 1
  br i1 %3171, label %3105, label %3174, !llvm.loop !686

3174:                                             ; preds = %3164, %3100
  %3175 = phi i32 [ %3104, %3100 ], [ %3170, %3164 ]
  %3176 = sext i32 %3175 to i64
  %3177 = getelementptr inbounds double, ptr %2, i64 %3176
  %3178 = load double, ptr %3177, align 8, !tbaa !18
  %3179 = getelementptr inbounds i32, ptr %3068, i64 %3176
  %3180 = load i32, ptr %3179, align 4, !tbaa !5
  %3181 = sitofp i64 %3101 to double
  %3182 = sitofp i32 %3180 to double
  %3183 = fmul fast double %3178, %3182
  %3184 = fmul fast double %3183, %3183
  %3185 = fadd fast double %3184, %3181
  %3186 = fptosi double %3185 to i64
  %3187 = fadd fast double %3178, %3103
  %3188 = add nuw nsw i32 %3102, 1
  br i1 %3094, label %3189, label %3236

3189:                                             ; preds = %3174
  %3190 = load i32, ptr %4, align 4, !tbaa !5
  %3191 = load i32, ptr %12, align 4, !tbaa !5
  %3192 = add nsw i32 %3191, -1
  %3193 = icmp slt i32 %3190, %3192
  br i1 %3193, label %3213, label %3194

3194:                                             ; preds = %3189
  %3195 = icmp eq i32 %3190, %3192
  br i1 %3195, label %3196, label %3229

3196:                                             ; preds = %3194
  store i32 0, ptr %4, align 4, !tbaa !5
  %3197 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3197, ptr %6, align 4, !tbaa !5
  br i1 %3099, label %3236, label %3198

3198:                                             ; preds = %3196, %3223
  %3199 = phi i64 [ %3227, %3223 ], [ 1, %3196 ]
  %3200 = getelementptr inbounds i32, ptr %4, i64 %3199
  %3201 = load i32, ptr %3200, align 4, !tbaa !5
  %3202 = getelementptr inbounds i32, ptr %12, i64 %3199
  %3203 = load i32, ptr %3202, align 4, !tbaa !5
  %3204 = add nsw i32 %3203, -1
  %3205 = icmp slt i32 %3201, %3204
  br i1 %3205, label %3206, label %3221

3206:                                             ; preds = %3198
  br i1 %3193, label %3213, label %3207

3207:                                             ; preds = %3206
  %3208 = getelementptr inbounds i32, ptr %7, i64 %3199
  %3209 = load i32, ptr %3208, align 4, !tbaa !5
  %3210 = getelementptr inbounds i32, ptr %6, i64 %3199
  %3211 = load i32, ptr %3210, align 4, !tbaa !5
  %3212 = add nsw i32 %3211, %3209
  store i32 %3212, ptr %3210, align 4, !tbaa !5
  br label %3231

3213:                                             ; preds = %3189, %3206
  %3214 = phi i32 [ %3201, %3206 ], [ %3190, %3189 ]
  %3215 = phi ptr [ %3200, %3206 ], [ %4, %3189 ]
  %3216 = phi i64 [ %3199, %3206 ], [ 0, %3189 ]
  %3217 = add nsw i32 %3214, 1
  store i32 %3217, ptr %3215, align 4, !tbaa !5
  %3218 = getelementptr inbounds i32, ptr %7, i64 %3216
  %3219 = load i32, ptr %3218, align 4, !tbaa !5
  %3220 = getelementptr inbounds i32, ptr %6, i64 %3216
  br label %3231

3221:                                             ; preds = %3198
  %3222 = icmp eq i32 %3201, %3204
  br i1 %3222, label %3223, label %3229

3223:                                             ; preds = %3221
  store i32 0, ptr %3200, align 4, !tbaa !5
  %3224 = getelementptr inbounds i32, ptr %8, i64 %3199
  %3225 = load i32, ptr %3224, align 4, !tbaa !5
  %3226 = getelementptr inbounds i32, ptr %6, i64 %3199
  store i32 %3225, ptr %3226, align 4, !tbaa !5
  %3227 = add nuw nsw i64 %3199, 1
  %3228 = icmp eq i64 %3227, %3097
  br i1 %3228, label %3236, label %3198, !llvm.loop !687

3229:                                             ; preds = %3194, %3221
  store i64 %3186, ptr %3070, align 8, !tbaa !120
  %3230 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

3231:                                             ; preds = %3207, %3213
  %3232 = phi ptr [ %3220, %3213 ], [ %3200, %3207 ]
  %3233 = phi i32 [ %3219, %3213 ], [ 1, %3207 ]
  %3234 = load i32, ptr %3232, align 4, !tbaa !5
  %3235 = add nsw i32 %3234, %3233
  store i32 %3235, ptr %3232, align 4, !tbaa !5
  br label %3236

3236:                                             ; preds = %3223, %3231, %3196, %3174
  %3237 = icmp eq i32 %3188, %5
  br i1 %3237, label %5494, label %3100, !llvm.loop !688

3238:                                             ; preds = %3083, %3376
  %3239 = phi i64 [ 0, %3083 ], [ %3324, %3376 ]
  %3240 = phi i32 [ 0, %3083 ], [ %3325, %3376 ]
  %3241 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3084, label %3242, label %3311

3242:                                             ; preds = %3238, %3301
  %3243 = phi i32 [ %3310, %3301 ], [ 0, %3238 ]
  %3244 = phi i64 [ %3252, %3301 ], [ %3088, %3238 ]
  %3245 = phi i64 [ %3309, %3301 ], [ %3087, %3238 ]
  %3246 = phi i32 [ %3307, %3301 ], [ %3241, %3238 ]
  %3247 = sub i32 %3086, %3243
  %3248 = tail call i32 @llvm.smin.i32(i32 %3247, i32 0)
  %3249 = sub i32 %3247, %3248
  %3250 = zext i32 %3249 to i64
  %3251 = add nuw nsw i64 %3250, 1
  %3252 = add nsw i64 %3244, -1
  %3253 = icmp ult i32 %3249, 31
  br i1 %3253, label %3289, label %3254

3254:                                             ; preds = %3242
  %3255 = and i64 %3251, 8589934560
  %3256 = sub i64 %3245, %3255
  br label %3257

3257:                                             ; preds = %3257, %3254
  %3258 = phi i64 [ 0, %3254 ], [ %3281, %3257 ]
  %3259 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3254 ], [ %3277, %3257 ]
  %3260 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3254 ], [ %3278, %3257 ]
  %3261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3254 ], [ %3279, %3257 ]
  %3262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3254 ], [ %3280, %3257 ]
  %3263 = sub i64 %3245, %3258
  %3264 = getelementptr inbounds i32, ptr %11, i64 %3263
  %3265 = getelementptr inbounds i32, ptr %3264, i64 -7
  %3266 = load <8 x i32>, ptr %3265, align 4, !tbaa !5
  %3267 = shufflevector <8 x i32> %3266, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3268 = getelementptr inbounds i32, ptr %3264, i64 -15
  %3269 = load <8 x i32>, ptr %3268, align 4, !tbaa !5
  %3270 = shufflevector <8 x i32> %3269, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3271 = getelementptr inbounds i32, ptr %3264, i64 -23
  %3272 = load <8 x i32>, ptr %3271, align 4, !tbaa !5
  %3273 = shufflevector <8 x i32> %3272, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3274 = getelementptr inbounds i32, ptr %3264, i64 -31
  %3275 = load <8 x i32>, ptr %3274, align 4, !tbaa !5
  %3276 = shufflevector <8 x i32> %3275, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3277 = mul <8 x i32> %3267, %3259
  %3278 = mul <8 x i32> %3270, %3260
  %3279 = mul <8 x i32> %3273, %3261
  %3280 = mul <8 x i32> %3276, %3262
  %3281 = add nuw i64 %3258, 32
  %3282 = icmp eq i64 %3281, %3255
  br i1 %3282, label %3283, label %3257, !llvm.loop !689

3283:                                             ; preds = %3257
  %3284 = mul <8 x i32> %3278, %3277
  %3285 = mul <8 x i32> %3279, %3284
  %3286 = mul <8 x i32> %3280, %3285
  %3287 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3286)
  %3288 = icmp eq i64 %3251, %3255
  br i1 %3288, label %3301, label %3289

3289:                                             ; preds = %3242, %3283
  %3290 = phi i64 [ %3245, %3242 ], [ %3256, %3283 ]
  %3291 = phi i32 [ 1, %3242 ], [ %3287, %3283 ]
  br label %3292

3292:                                             ; preds = %3289, %3292
  %3293 = phi i64 [ %3298, %3292 ], [ %3290, %3289 ]
  %3294 = phi i32 [ %3297, %3292 ], [ %3291, %3289 ]
  %3295 = getelementptr inbounds i32, ptr %11, i64 %3293
  %3296 = load i32, ptr %3295, align 4, !tbaa !5
  %3297 = mul nsw i32 %3296, %3294
  %3298 = add nsw i64 %3293, -1
  %3299 = trunc i64 %3293 to i32
  %3300 = icmp sgt i32 %3299, 0
  br i1 %3300, label %3292, label %3301, !llvm.loop !690

3301:                                             ; preds = %3292, %3283
  %3302 = phi i32 [ %3287, %3283 ], [ %3297, %3292 ]
  %3303 = and i64 %3252, 4294967295
  %3304 = getelementptr inbounds i32, ptr %6, i64 %3303
  %3305 = load i32, ptr %3304, align 4, !tbaa !5
  %3306 = mul nsw i32 %3305, %3302
  %3307 = add nsw i32 %3306, %3246
  %3308 = icmp sgt i64 %3244, 2
  %3309 = add nsw i64 %3245, -1
  %3310 = add i32 %3243, 1
  br i1 %3308, label %3242, label %3311, !llvm.loop !691

3311:                                             ; preds = %3301, %3238
  %3312 = phi i32 [ %3241, %3238 ], [ %3307, %3301 ]
  %3313 = icmp slt i32 %3312, %5
  br i1 %3313, label %3316, label %3314

3314:                                             ; preds = %3311
  %3315 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

3316:                                             ; preds = %3311
  %3317 = sext i32 %3312 to i64
  %3318 = getelementptr inbounds i32, ptr %3068, i64 %3317
  %3319 = load i32, ptr %3318, align 4, !tbaa !5
  %3320 = sitofp i64 %3239 to double
  %3321 = sitofp i32 %3319 to double
  %3322 = fmul fast double %3321, %3321
  %3323 = fadd fast double %3322, %3320
  %3324 = fptosi double %3323 to i64
  store i64 %3324, ptr %3070, align 8, !tbaa !120
  %3325 = add nuw nsw i32 %3240, 1
  br i1 %3085, label %3326, label %3376

3326:                                             ; preds = %3316
  %3327 = load i32, ptr %4, align 4, !tbaa !5
  %3328 = load i32, ptr %12, align 4, !tbaa !5
  %3329 = add nsw i32 %3328, -1
  %3330 = icmp slt i32 %3327, %3329
  br i1 %3330, label %3353, label %3331

3331:                                             ; preds = %3326
  %3332 = icmp eq i32 %3327, %3329
  br i1 %3332, label %3333, label %3369

3333:                                             ; preds = %3331
  store i32 0, ptr %4, align 4, !tbaa !5
  %3334 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3334, ptr %6, align 4, !tbaa !5
  br i1 %3090, label %3376, label %3335

3335:                                             ; preds = %3333, %3363
  %3336 = phi i64 [ %3367, %3363 ], [ 1, %3333 ]
  %3337 = getelementptr inbounds i32, ptr %4, i64 %3336
  %3338 = load i32, ptr %3337, align 4, !tbaa !5
  %3339 = getelementptr inbounds i32, ptr %12, i64 %3336
  %3340 = load i32, ptr %3339, align 4, !tbaa !5
  %3341 = add nsw i32 %3340, -1
  %3342 = icmp slt i32 %3338, %3341
  br i1 %3342, label %3343, label %3361

3343:                                             ; preds = %3335
  br i1 %3330, label %3353, label %3344

3344:                                             ; preds = %3343
  %3345 = shl i64 %3336, 32
  %3346 = add i64 %3345, -4294967296
  %3347 = ashr exact i64 %3346, 32
  %3348 = getelementptr inbounds i32, ptr %7, i64 %3347
  %3349 = load i32, ptr %3348, align 4, !tbaa !5
  %3350 = getelementptr inbounds i32, ptr %6, i64 %3336
  %3351 = load i32, ptr %3350, align 4, !tbaa !5
  %3352 = add nsw i32 %3351, %3349
  store i32 %3352, ptr %3350, align 4, !tbaa !5
  br label %3371

3353:                                             ; preds = %3326, %3343
  %3354 = phi i32 [ %3338, %3343 ], [ %3327, %3326 ]
  %3355 = phi ptr [ %3337, %3343 ], [ %4, %3326 ]
  %3356 = phi i64 [ %3336, %3343 ], [ 0, %3326 ]
  %3357 = add nsw i32 %3354, 1
  store i32 %3357, ptr %3355, align 4, !tbaa !5
  %3358 = getelementptr inbounds i32, ptr %7, i64 %3356
  %3359 = load i32, ptr %3358, align 4, !tbaa !5
  %3360 = getelementptr inbounds i32, ptr %6, i64 %3356
  br label %3371

3361:                                             ; preds = %3335
  %3362 = icmp eq i32 %3338, %3341
  br i1 %3362, label %3363, label %3369

3363:                                             ; preds = %3361
  store i32 0, ptr %3337, align 4, !tbaa !5
  %3364 = getelementptr inbounds i32, ptr %8, i64 %3336
  %3365 = load i32, ptr %3364, align 4, !tbaa !5
  %3366 = getelementptr inbounds i32, ptr %6, i64 %3336
  store i32 %3365, ptr %3366, align 4, !tbaa !5
  %3367 = add nuw nsw i64 %3336, 1
  %3368 = icmp eq i64 %3367, %3088
  br i1 %3368, label %3376, label %3335, !llvm.loop !692

3369:                                             ; preds = %3331, %3361
  %3370 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

3371:                                             ; preds = %3344, %3353
  %3372 = phi ptr [ %3360, %3353 ], [ %3337, %3344 ]
  %3373 = phi i32 [ %3359, %3353 ], [ 1, %3344 ]
  %3374 = load i32, ptr %3372, align 4, !tbaa !5
  %3375 = add nsw i32 %3374, %3373
  store i32 %3375, ptr %3372, align 4, !tbaa !5
  br label %3376

3376:                                             ; preds = %3363, %3371, %3333, %3316
  %3377 = icmp eq i32 %3325, %5
  br i1 %3377, label %5500, label %3238, !llvm.loop !693

3378:                                             ; preds = %3076
  %3379 = getelementptr inbounds i32, ptr %3, i64 %19
  %3380 = load i32, ptr %3379, align 4, !tbaa !5
  %3381 = icmp eq i32 %3380, 0
  %3382 = icmp sgt i32 %5, 0
  br i1 %3381, label %3392, label %3383

3383:                                             ; preds = %3378
  br i1 %3382, label %3384, label %5500

3384:                                             ; preds = %3383
  %3385 = icmp sgt i32 %13, 1
  %3386 = icmp sgt i32 %13, 0
  %3387 = add i32 %13, -2
  %3388 = zext i32 %3387 to i64
  %3389 = zext i32 %13 to i64
  %3390 = add nuw i32 %5, 1
  %3391 = icmp eq i32 %13, 1
  br label %3534

3392:                                             ; preds = %3378
  br i1 %3382, label %3393, label %5500

3393:                                             ; preds = %3392
  %3394 = icmp sgt i32 %13, 1
  %3395 = icmp sgt i32 %13, 0
  %3396 = add i32 %13, -2
  %3397 = zext i32 %3396 to i64
  %3398 = zext i32 %13 to i64
  %3399 = add nuw i32 %5, 1
  %3400 = icmp eq i32 %13, 1
  br label %3401

3401:                                             ; preds = %3393, %3532
  %3402 = phi i64 [ 0, %3393 ], [ %3482, %3532 ]
  %3403 = phi i32 [ 0, %3393 ], [ %3484, %3532 ]
  %3404 = phi double [ 0.000000e+00, %3393 ], [ %3483, %3532 ]
  %3405 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3394, label %3406, label %3475

3406:                                             ; preds = %3401, %3465
  %3407 = phi i32 [ %3474, %3465 ], [ 0, %3401 ]
  %3408 = phi i64 [ %3416, %3465 ], [ %3398, %3401 ]
  %3409 = phi i64 [ %3473, %3465 ], [ %3397, %3401 ]
  %3410 = phi i32 [ %3471, %3465 ], [ %3405, %3401 ]
  %3411 = sub i32 %3396, %3407
  %3412 = tail call i32 @llvm.smin.i32(i32 %3411, i32 0)
  %3413 = sub i32 %3411, %3412
  %3414 = zext i32 %3413 to i64
  %3415 = add nuw nsw i64 %3414, 1
  %3416 = add nsw i64 %3408, -1
  %3417 = icmp ult i32 %3413, 31
  br i1 %3417, label %3453, label %3418

3418:                                             ; preds = %3406
  %3419 = and i64 %3415, 8589934560
  %3420 = sub i64 %3409, %3419
  br label %3421

3421:                                             ; preds = %3421, %3418
  %3422 = phi i64 [ 0, %3418 ], [ %3445, %3421 ]
  %3423 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3418 ], [ %3441, %3421 ]
  %3424 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3418 ], [ %3442, %3421 ]
  %3425 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3418 ], [ %3443, %3421 ]
  %3426 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3418 ], [ %3444, %3421 ]
  %3427 = sub i64 %3409, %3422
  %3428 = getelementptr inbounds i32, ptr %9, i64 %3427
  %3429 = getelementptr inbounds i32, ptr %3428, i64 -7
  %3430 = load <8 x i32>, ptr %3429, align 4, !tbaa !5
  %3431 = shufflevector <8 x i32> %3430, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3432 = getelementptr inbounds i32, ptr %3428, i64 -15
  %3433 = load <8 x i32>, ptr %3432, align 4, !tbaa !5
  %3434 = shufflevector <8 x i32> %3433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3435 = getelementptr inbounds i32, ptr %3428, i64 -23
  %3436 = load <8 x i32>, ptr %3435, align 4, !tbaa !5
  %3437 = shufflevector <8 x i32> %3436, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3438 = getelementptr inbounds i32, ptr %3428, i64 -31
  %3439 = load <8 x i32>, ptr %3438, align 4, !tbaa !5
  %3440 = shufflevector <8 x i32> %3439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3441 = mul <8 x i32> %3431, %3423
  %3442 = mul <8 x i32> %3434, %3424
  %3443 = mul <8 x i32> %3437, %3425
  %3444 = mul <8 x i32> %3440, %3426
  %3445 = add nuw i64 %3422, 32
  %3446 = icmp eq i64 %3445, %3419
  br i1 %3446, label %3447, label %3421, !llvm.loop !694

3447:                                             ; preds = %3421
  %3448 = mul <8 x i32> %3442, %3441
  %3449 = mul <8 x i32> %3443, %3448
  %3450 = mul <8 x i32> %3444, %3449
  %3451 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3450)
  %3452 = icmp eq i64 %3415, %3419
  br i1 %3452, label %3465, label %3453

3453:                                             ; preds = %3406, %3447
  %3454 = phi i64 [ %3409, %3406 ], [ %3420, %3447 ]
  %3455 = phi i32 [ 1, %3406 ], [ %3451, %3447 ]
  br label %3456

3456:                                             ; preds = %3453, %3456
  %3457 = phi i64 [ %3462, %3456 ], [ %3454, %3453 ]
  %3458 = phi i32 [ %3461, %3456 ], [ %3455, %3453 ]
  %3459 = getelementptr inbounds i32, ptr %9, i64 %3457
  %3460 = load i32, ptr %3459, align 4, !tbaa !5
  %3461 = mul nsw i32 %3460, %3458
  %3462 = add nsw i64 %3457, -1
  %3463 = trunc i64 %3457 to i32
  %3464 = icmp sgt i32 %3463, 0
  br i1 %3464, label %3456, label %3465, !llvm.loop !695

3465:                                             ; preds = %3456, %3447
  %3466 = phi i32 [ %3451, %3447 ], [ %3461, %3456 ]
  %3467 = and i64 %3416, 4294967295
  %3468 = getelementptr inbounds i32, ptr %6, i64 %3467
  %3469 = load i32, ptr %3468, align 4, !tbaa !5
  %3470 = mul nsw i32 %3469, %3466
  %3471 = add nsw i32 %3470, %3410
  %3472 = icmp sgt i64 %3408, 2
  %3473 = add nsw i64 %3409, -1
  %3474 = add i32 %3407, 1
  br i1 %3472, label %3406, label %3475, !llvm.loop !696

3475:                                             ; preds = %3465, %3401
  %3476 = phi i32 [ %3405, %3401 ], [ %3471, %3465 ]
  %3477 = sext i32 %3476 to i64
  %3478 = getelementptr inbounds i32, ptr %3068, i64 %3477
  %3479 = load i32, ptr %3478, align 4, !tbaa !5
  %3480 = sext i32 %3479 to i64
  %3481 = mul nsw i64 %3480, %3480
  %3482 = add nuw nsw i64 %3481, %3402
  %3483 = fadd fast double %3404, 1.000000e+00
  %3484 = add nuw nsw i32 %3403, 1
  br i1 %3395, label %3485, label %3532

3485:                                             ; preds = %3475
  %3486 = load i32, ptr %4, align 4, !tbaa !5
  %3487 = load i32, ptr %12, align 4, !tbaa !5
  %3488 = add nsw i32 %3487, -1
  %3489 = icmp slt i32 %3486, %3488
  br i1 %3489, label %3509, label %3490

3490:                                             ; preds = %3485
  %3491 = icmp eq i32 %3486, %3488
  br i1 %3491, label %3492, label %3525

3492:                                             ; preds = %3490
  store i32 0, ptr %4, align 4, !tbaa !5
  %3493 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3493, ptr %6, align 4, !tbaa !5
  br i1 %3400, label %3532, label %3494

3494:                                             ; preds = %3492, %3519
  %3495 = phi i64 [ %3523, %3519 ], [ 1, %3492 ]
  %3496 = getelementptr inbounds i32, ptr %4, i64 %3495
  %3497 = load i32, ptr %3496, align 4, !tbaa !5
  %3498 = getelementptr inbounds i32, ptr %12, i64 %3495
  %3499 = load i32, ptr %3498, align 4, !tbaa !5
  %3500 = add nsw i32 %3499, -1
  %3501 = icmp slt i32 %3497, %3500
  br i1 %3501, label %3502, label %3517

3502:                                             ; preds = %3494
  br i1 %3489, label %3509, label %3503

3503:                                             ; preds = %3502
  %3504 = getelementptr inbounds i32, ptr %7, i64 %3495
  %3505 = load i32, ptr %3504, align 4, !tbaa !5
  %3506 = getelementptr inbounds i32, ptr %6, i64 %3495
  %3507 = load i32, ptr %3506, align 4, !tbaa !5
  %3508 = add nsw i32 %3507, %3505
  store i32 %3508, ptr %3506, align 4, !tbaa !5
  br label %3527

3509:                                             ; preds = %3485, %3502
  %3510 = phi i32 [ %3497, %3502 ], [ %3486, %3485 ]
  %3511 = phi ptr [ %3496, %3502 ], [ %4, %3485 ]
  %3512 = phi i64 [ %3495, %3502 ], [ 0, %3485 ]
  %3513 = add nsw i32 %3510, 1
  store i32 %3513, ptr %3511, align 4, !tbaa !5
  %3514 = getelementptr inbounds i32, ptr %7, i64 %3512
  %3515 = load i32, ptr %3514, align 4, !tbaa !5
  %3516 = getelementptr inbounds i32, ptr %6, i64 %3512
  br label %3527

3517:                                             ; preds = %3494
  %3518 = icmp eq i32 %3497, %3500
  br i1 %3518, label %3519, label %3525

3519:                                             ; preds = %3517
  store i32 0, ptr %3496, align 4, !tbaa !5
  %3520 = getelementptr inbounds i32, ptr %8, i64 %3495
  %3521 = load i32, ptr %3520, align 4, !tbaa !5
  %3522 = getelementptr inbounds i32, ptr %6, i64 %3495
  store i32 %3521, ptr %3522, align 4, !tbaa !5
  %3523 = add nuw nsw i64 %3495, 1
  %3524 = icmp eq i64 %3523, %3398
  br i1 %3524, label %3532, label %3494, !llvm.loop !697

3525:                                             ; preds = %3490, %3517
  store i64 %3482, ptr %3070, align 8, !tbaa !120
  %3526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

3527:                                             ; preds = %3503, %3509
  %3528 = phi ptr [ %3516, %3509 ], [ %3496, %3503 ]
  %3529 = phi i32 [ %3515, %3509 ], [ 1, %3503 ]
  %3530 = load i32, ptr %3528, align 4, !tbaa !5
  %3531 = add nsw i32 %3530, %3529
  store i32 %3531, ptr %3528, align 4, !tbaa !5
  br label %3532

3532:                                             ; preds = %3519, %3527, %3492, %3475
  %3533 = icmp eq i32 %3484, %5
  br i1 %3533, label %5495, label %3401, !llvm.loop !698

3534:                                             ; preds = %3384, %3670
  %3535 = phi i64 [ 0, %3384 ], [ %3618, %3670 ]
  %3536 = phi i32 [ 0, %3384 ], [ %3619, %3670 ]
  %3537 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3385, label %3538, label %3607

3538:                                             ; preds = %3534, %3597
  %3539 = phi i32 [ %3606, %3597 ], [ 0, %3534 ]
  %3540 = phi i64 [ %3548, %3597 ], [ %3389, %3534 ]
  %3541 = phi i64 [ %3605, %3597 ], [ %3388, %3534 ]
  %3542 = phi i32 [ %3603, %3597 ], [ %3537, %3534 ]
  %3543 = sub i32 %3387, %3539
  %3544 = tail call i32 @llvm.smin.i32(i32 %3543, i32 0)
  %3545 = sub i32 %3543, %3544
  %3546 = zext i32 %3545 to i64
  %3547 = add nuw nsw i64 %3546, 1
  %3548 = add nsw i64 %3540, -1
  %3549 = icmp ult i32 %3545, 31
  br i1 %3549, label %3585, label %3550

3550:                                             ; preds = %3538
  %3551 = and i64 %3547, 8589934560
  %3552 = sub i64 %3541, %3551
  br label %3553

3553:                                             ; preds = %3553, %3550
  %3554 = phi i64 [ 0, %3550 ], [ %3577, %3553 ]
  %3555 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3550 ], [ %3573, %3553 ]
  %3556 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3550 ], [ %3574, %3553 ]
  %3557 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3550 ], [ %3575, %3553 ]
  %3558 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3550 ], [ %3576, %3553 ]
  %3559 = sub i64 %3541, %3554
  %3560 = getelementptr inbounds i32, ptr %11, i64 %3559
  %3561 = getelementptr inbounds i32, ptr %3560, i64 -7
  %3562 = load <8 x i32>, ptr %3561, align 4, !tbaa !5
  %3563 = shufflevector <8 x i32> %3562, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3564 = getelementptr inbounds i32, ptr %3560, i64 -15
  %3565 = load <8 x i32>, ptr %3564, align 4, !tbaa !5
  %3566 = shufflevector <8 x i32> %3565, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3567 = getelementptr inbounds i32, ptr %3560, i64 -23
  %3568 = load <8 x i32>, ptr %3567, align 4, !tbaa !5
  %3569 = shufflevector <8 x i32> %3568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3570 = getelementptr inbounds i32, ptr %3560, i64 -31
  %3571 = load <8 x i32>, ptr %3570, align 4, !tbaa !5
  %3572 = shufflevector <8 x i32> %3571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3573 = mul <8 x i32> %3563, %3555
  %3574 = mul <8 x i32> %3566, %3556
  %3575 = mul <8 x i32> %3569, %3557
  %3576 = mul <8 x i32> %3572, %3558
  %3577 = add nuw i64 %3554, 32
  %3578 = icmp eq i64 %3577, %3551
  br i1 %3578, label %3579, label %3553, !llvm.loop !699

3579:                                             ; preds = %3553
  %3580 = mul <8 x i32> %3574, %3573
  %3581 = mul <8 x i32> %3575, %3580
  %3582 = mul <8 x i32> %3576, %3581
  %3583 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3582)
  %3584 = icmp eq i64 %3547, %3551
  br i1 %3584, label %3597, label %3585

3585:                                             ; preds = %3538, %3579
  %3586 = phi i64 [ %3541, %3538 ], [ %3552, %3579 ]
  %3587 = phi i32 [ 1, %3538 ], [ %3583, %3579 ]
  br label %3588

3588:                                             ; preds = %3585, %3588
  %3589 = phi i64 [ %3594, %3588 ], [ %3586, %3585 ]
  %3590 = phi i32 [ %3593, %3588 ], [ %3587, %3585 ]
  %3591 = getelementptr inbounds i32, ptr %11, i64 %3589
  %3592 = load i32, ptr %3591, align 4, !tbaa !5
  %3593 = mul nsw i32 %3592, %3590
  %3594 = add nsw i64 %3589, -1
  %3595 = trunc i64 %3589 to i32
  %3596 = icmp sgt i32 %3595, 0
  br i1 %3596, label %3588, label %3597, !llvm.loop !700

3597:                                             ; preds = %3588, %3579
  %3598 = phi i32 [ %3583, %3579 ], [ %3593, %3588 ]
  %3599 = and i64 %3548, 4294967295
  %3600 = getelementptr inbounds i32, ptr %6, i64 %3599
  %3601 = load i32, ptr %3600, align 4, !tbaa !5
  %3602 = mul nsw i32 %3601, %3598
  %3603 = add nsw i32 %3602, %3542
  %3604 = icmp sgt i64 %3540, 2
  %3605 = add nsw i64 %3541, -1
  %3606 = add i32 %3539, 1
  br i1 %3604, label %3538, label %3607, !llvm.loop !701

3607:                                             ; preds = %3597, %3534
  %3608 = phi i32 [ %3537, %3534 ], [ %3603, %3597 ]
  %3609 = icmp slt i32 %3608, %5
  br i1 %3609, label %3612, label %3610

3610:                                             ; preds = %3607
  %3611 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

3612:                                             ; preds = %3607
  %3613 = sext i32 %3608 to i64
  %3614 = getelementptr inbounds i32, ptr %3068, i64 %3613
  %3615 = load i32, ptr %3614, align 4, !tbaa !5
  %3616 = sext i32 %3615 to i64
  %3617 = mul nsw i64 %3616, %3616
  %3618 = add nuw nsw i64 %3617, %3535
  store i64 %3618, ptr %3070, align 8, !tbaa !120
  %3619 = add nuw nsw i32 %3536, 1
  br i1 %3386, label %3620, label %3670

3620:                                             ; preds = %3612
  %3621 = load i32, ptr %4, align 4, !tbaa !5
  %3622 = load i32, ptr %12, align 4, !tbaa !5
  %3623 = add nsw i32 %3622, -1
  %3624 = icmp slt i32 %3621, %3623
  br i1 %3624, label %3647, label %3625

3625:                                             ; preds = %3620
  %3626 = icmp eq i32 %3621, %3623
  br i1 %3626, label %3627, label %3663

3627:                                             ; preds = %3625
  store i32 0, ptr %4, align 4, !tbaa !5
  %3628 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3628, ptr %6, align 4, !tbaa !5
  br i1 %3391, label %3670, label %3629

3629:                                             ; preds = %3627, %3657
  %3630 = phi i64 [ %3661, %3657 ], [ 1, %3627 ]
  %3631 = getelementptr inbounds i32, ptr %4, i64 %3630
  %3632 = load i32, ptr %3631, align 4, !tbaa !5
  %3633 = getelementptr inbounds i32, ptr %12, i64 %3630
  %3634 = load i32, ptr %3633, align 4, !tbaa !5
  %3635 = add nsw i32 %3634, -1
  %3636 = icmp slt i32 %3632, %3635
  br i1 %3636, label %3637, label %3655

3637:                                             ; preds = %3629
  br i1 %3624, label %3647, label %3638

3638:                                             ; preds = %3637
  %3639 = shl i64 %3630, 32
  %3640 = add i64 %3639, -4294967296
  %3641 = ashr exact i64 %3640, 32
  %3642 = getelementptr inbounds i32, ptr %7, i64 %3641
  %3643 = load i32, ptr %3642, align 4, !tbaa !5
  %3644 = getelementptr inbounds i32, ptr %6, i64 %3630
  %3645 = load i32, ptr %3644, align 4, !tbaa !5
  %3646 = add nsw i32 %3645, %3643
  store i32 %3646, ptr %3644, align 4, !tbaa !5
  br label %3665

3647:                                             ; preds = %3620, %3637
  %3648 = phi i32 [ %3632, %3637 ], [ %3621, %3620 ]
  %3649 = phi ptr [ %3631, %3637 ], [ %4, %3620 ]
  %3650 = phi i64 [ %3630, %3637 ], [ 0, %3620 ]
  %3651 = add nsw i32 %3648, 1
  store i32 %3651, ptr %3649, align 4, !tbaa !5
  %3652 = getelementptr inbounds i32, ptr %7, i64 %3650
  %3653 = load i32, ptr %3652, align 4, !tbaa !5
  %3654 = getelementptr inbounds i32, ptr %6, i64 %3650
  br label %3665

3655:                                             ; preds = %3629
  %3656 = icmp eq i32 %3632, %3635
  br i1 %3656, label %3657, label %3663

3657:                                             ; preds = %3655
  store i32 0, ptr %3631, align 4, !tbaa !5
  %3658 = getelementptr inbounds i32, ptr %8, i64 %3630
  %3659 = load i32, ptr %3658, align 4, !tbaa !5
  %3660 = getelementptr inbounds i32, ptr %6, i64 %3630
  store i32 %3659, ptr %3660, align 4, !tbaa !5
  %3661 = add nuw nsw i64 %3630, 1
  %3662 = icmp eq i64 %3661, %3389
  br i1 %3662, label %3670, label %3629, !llvm.loop !702

3663:                                             ; preds = %3625, %3655
  %3664 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

3665:                                             ; preds = %3638, %3647
  %3666 = phi ptr [ %3654, %3647 ], [ %3631, %3638 ]
  %3667 = phi i32 [ %3653, %3647 ], [ 1, %3638 ]
  %3668 = load i32, ptr %3666, align 4, !tbaa !5
  %3669 = add nsw i32 %3668, %3667
  store i32 %3669, ptr %3666, align 4, !tbaa !5
  br label %3670

3670:                                             ; preds = %3657, %3665, %3627, %3612
  %3671 = icmp eq i32 %3619, %5
  br i1 %3671, label %5500, label %3534, !llvm.loop !703

3672:                                             ; preds = %3076
  %3673 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1187, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

3674:                                             ; preds = %18
  %3675 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3676 = load ptr, ptr %3675, align 8, !tbaa !9
  %3677 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3678 = load ptr, ptr %3677, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3678, align 8, !tbaa !18
  %3679 = icmp eq i32 %13, 0
  br i1 %3679, label %3680, label %3684

3680:                                             ; preds = %3674
  %3681 = load i32, ptr %3676, align 4, !tbaa !5
  %3682 = sitofp i32 %3681 to double
  %3683 = fmul fast double %3682, %3682
  store double %3683, ptr %3678, align 8, !tbaa !18
  br label %5500

3684:                                             ; preds = %3674
  switch i32 %1, label %4276 [
    i32 1, label %3685
    i32 0, label %3982
  ]

3685:                                             ; preds = %3684
  %3686 = getelementptr inbounds i32, ptr %3, i64 %19
  %3687 = load i32, ptr %3686, align 4, !tbaa !5
  %3688 = icmp eq i32 %3687, 0
  %3689 = icmp sgt i32 %5, 0
  br i1 %3688, label %3699, label %3690

3690:                                             ; preds = %3685
  br i1 %3689, label %3691, label %5500

3691:                                             ; preds = %3690
  %3692 = icmp sgt i32 %13, 1
  %3693 = icmp sgt i32 %13, 0
  %3694 = add i32 %13, -2
  %3695 = zext i32 %3694 to i64
  %3696 = zext i32 %13 to i64
  %3697 = add nuw i32 %5, 1
  %3698 = icmp eq i32 %13, 1
  br label %3844

3699:                                             ; preds = %3685
  br i1 %3689, label %3700, label %5500

3700:                                             ; preds = %3699
  %3701 = icmp sgt i32 %13, 1
  %3702 = icmp sgt i32 %13, 0
  %3703 = add i32 %13, -2
  %3704 = zext i32 %3703 to i64
  %3705 = zext i32 %13 to i64
  %3706 = add nuw i32 %5, 1
  %3707 = icmp eq i32 %13, 1
  br label %3708

3708:                                             ; preds = %3700, %3842
  %3709 = phi double [ 0.000000e+00, %3700 ], [ %3792, %3842 ]
  %3710 = phi i32 [ 0, %3700 ], [ %3794, %3842 ]
  %3711 = phi double [ 0.000000e+00, %3700 ], [ %3793, %3842 ]
  %3712 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3701, label %3713, label %3782

3713:                                             ; preds = %3708, %3772
  %3714 = phi i32 [ %3781, %3772 ], [ 0, %3708 ]
  %3715 = phi i64 [ %3723, %3772 ], [ %3705, %3708 ]
  %3716 = phi i64 [ %3780, %3772 ], [ %3704, %3708 ]
  %3717 = phi i32 [ %3778, %3772 ], [ %3712, %3708 ]
  %3718 = sub i32 %3703, %3714
  %3719 = tail call i32 @llvm.smin.i32(i32 %3718, i32 0)
  %3720 = sub i32 %3718, %3719
  %3721 = zext i32 %3720 to i64
  %3722 = add nuw nsw i64 %3721, 1
  %3723 = add nsw i64 %3715, -1
  %3724 = icmp ult i32 %3720, 31
  br i1 %3724, label %3760, label %3725

3725:                                             ; preds = %3713
  %3726 = and i64 %3722, 8589934560
  %3727 = sub i64 %3716, %3726
  br label %3728

3728:                                             ; preds = %3728, %3725
  %3729 = phi i64 [ 0, %3725 ], [ %3752, %3728 ]
  %3730 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3725 ], [ %3748, %3728 ]
  %3731 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3725 ], [ %3749, %3728 ]
  %3732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3725 ], [ %3750, %3728 ]
  %3733 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3725 ], [ %3751, %3728 ]
  %3734 = sub i64 %3716, %3729
  %3735 = getelementptr inbounds i32, ptr %9, i64 %3734
  %3736 = getelementptr inbounds i32, ptr %3735, i64 -7
  %3737 = load <8 x i32>, ptr %3736, align 4, !tbaa !5
  %3738 = shufflevector <8 x i32> %3737, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3739 = getelementptr inbounds i32, ptr %3735, i64 -15
  %3740 = load <8 x i32>, ptr %3739, align 4, !tbaa !5
  %3741 = shufflevector <8 x i32> %3740, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3742 = getelementptr inbounds i32, ptr %3735, i64 -23
  %3743 = load <8 x i32>, ptr %3742, align 4, !tbaa !5
  %3744 = shufflevector <8 x i32> %3743, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3745 = getelementptr inbounds i32, ptr %3735, i64 -31
  %3746 = load <8 x i32>, ptr %3745, align 4, !tbaa !5
  %3747 = shufflevector <8 x i32> %3746, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3748 = mul <8 x i32> %3738, %3730
  %3749 = mul <8 x i32> %3741, %3731
  %3750 = mul <8 x i32> %3744, %3732
  %3751 = mul <8 x i32> %3747, %3733
  %3752 = add nuw i64 %3729, 32
  %3753 = icmp eq i64 %3752, %3726
  br i1 %3753, label %3754, label %3728, !llvm.loop !704

3754:                                             ; preds = %3728
  %3755 = mul <8 x i32> %3749, %3748
  %3756 = mul <8 x i32> %3750, %3755
  %3757 = mul <8 x i32> %3751, %3756
  %3758 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3757)
  %3759 = icmp eq i64 %3722, %3726
  br i1 %3759, label %3772, label %3760

3760:                                             ; preds = %3713, %3754
  %3761 = phi i64 [ %3716, %3713 ], [ %3727, %3754 ]
  %3762 = phi i32 [ 1, %3713 ], [ %3758, %3754 ]
  br label %3763

3763:                                             ; preds = %3760, %3763
  %3764 = phi i64 [ %3769, %3763 ], [ %3761, %3760 ]
  %3765 = phi i32 [ %3768, %3763 ], [ %3762, %3760 ]
  %3766 = getelementptr inbounds i32, ptr %9, i64 %3764
  %3767 = load i32, ptr %3766, align 4, !tbaa !5
  %3768 = mul nsw i32 %3767, %3765
  %3769 = add nsw i64 %3764, -1
  %3770 = trunc i64 %3764 to i32
  %3771 = icmp sgt i32 %3770, 0
  br i1 %3771, label %3763, label %3772, !llvm.loop !705

3772:                                             ; preds = %3763, %3754
  %3773 = phi i32 [ %3758, %3754 ], [ %3768, %3763 ]
  %3774 = and i64 %3723, 4294967295
  %3775 = getelementptr inbounds i32, ptr %6, i64 %3774
  %3776 = load i32, ptr %3775, align 4, !tbaa !5
  %3777 = mul nsw i32 %3776, %3773
  %3778 = add nsw i32 %3777, %3717
  %3779 = icmp sgt i64 %3715, 2
  %3780 = add nsw i64 %3716, -1
  %3781 = add i32 %3714, 1
  br i1 %3779, label %3713, label %3782, !llvm.loop !706

3782:                                             ; preds = %3772, %3708
  %3783 = phi i32 [ %3712, %3708 ], [ %3778, %3772 ]
  %3784 = sext i32 %3783 to i64
  %3785 = getelementptr inbounds double, ptr %2, i64 %3784
  %3786 = load double, ptr %3785, align 8, !tbaa !18
  %3787 = getelementptr inbounds i32, ptr %3676, i64 %3784
  %3788 = load i32, ptr %3787, align 4, !tbaa !5
  %3789 = sitofp i32 %3788 to double
  %3790 = fmul fast double %3786, %3789
  %3791 = fmul fast double %3790, %3790
  %3792 = fadd fast double %3791, %3709
  store double %3792, ptr %3678, align 8, !tbaa !18
  %3793 = fadd fast double %3786, %3711
  %3794 = add nuw nsw i32 %3710, 1
  br i1 %3702, label %3795, label %3842

3795:                                             ; preds = %3782
  %3796 = load i32, ptr %4, align 4, !tbaa !5
  %3797 = load i32, ptr %12, align 4, !tbaa !5
  %3798 = add nsw i32 %3797, -1
  %3799 = icmp slt i32 %3796, %3798
  br i1 %3799, label %3819, label %3800

3800:                                             ; preds = %3795
  %3801 = icmp eq i32 %3796, %3798
  br i1 %3801, label %3802, label %3835

3802:                                             ; preds = %3800
  store i32 0, ptr %4, align 4, !tbaa !5
  %3803 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3803, ptr %6, align 4, !tbaa !5
  br i1 %3707, label %3842, label %3804

3804:                                             ; preds = %3802, %3829
  %3805 = phi i64 [ %3833, %3829 ], [ 1, %3802 ]
  %3806 = getelementptr inbounds i32, ptr %4, i64 %3805
  %3807 = load i32, ptr %3806, align 4, !tbaa !5
  %3808 = getelementptr inbounds i32, ptr %12, i64 %3805
  %3809 = load i32, ptr %3808, align 4, !tbaa !5
  %3810 = add nsw i32 %3809, -1
  %3811 = icmp slt i32 %3807, %3810
  br i1 %3811, label %3812, label %3827

3812:                                             ; preds = %3804
  br i1 %3799, label %3819, label %3813

3813:                                             ; preds = %3812
  %3814 = getelementptr inbounds i32, ptr %7, i64 %3805
  %3815 = load i32, ptr %3814, align 4, !tbaa !5
  %3816 = getelementptr inbounds i32, ptr %6, i64 %3805
  %3817 = load i32, ptr %3816, align 4, !tbaa !5
  %3818 = add nsw i32 %3817, %3815
  store i32 %3818, ptr %3816, align 4, !tbaa !5
  br label %3837

3819:                                             ; preds = %3795, %3812
  %3820 = phi i32 [ %3807, %3812 ], [ %3796, %3795 ]
  %3821 = phi ptr [ %3806, %3812 ], [ %4, %3795 ]
  %3822 = phi i64 [ %3805, %3812 ], [ 0, %3795 ]
  %3823 = add nsw i32 %3820, 1
  store i32 %3823, ptr %3821, align 4, !tbaa !5
  %3824 = getelementptr inbounds i32, ptr %7, i64 %3822
  %3825 = load i32, ptr %3824, align 4, !tbaa !5
  %3826 = getelementptr inbounds i32, ptr %6, i64 %3822
  br label %3837

3827:                                             ; preds = %3804
  %3828 = icmp eq i32 %3807, %3810
  br i1 %3828, label %3829, label %3835

3829:                                             ; preds = %3827
  store i32 0, ptr %3806, align 4, !tbaa !5
  %3830 = getelementptr inbounds i32, ptr %8, i64 %3805
  %3831 = load i32, ptr %3830, align 4, !tbaa !5
  %3832 = getelementptr inbounds i32, ptr %6, i64 %3805
  store i32 %3831, ptr %3832, align 4, !tbaa !5
  %3833 = add nuw nsw i64 %3805, 1
  %3834 = icmp eq i64 %3833, %3705
  br i1 %3834, label %3842, label %3804, !llvm.loop !707

3835:                                             ; preds = %3800, %3827
  %3836 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

3837:                                             ; preds = %3813, %3819
  %3838 = phi ptr [ %3826, %3819 ], [ %3806, %3813 ]
  %3839 = phi i32 [ %3825, %3819 ], [ 1, %3813 ]
  %3840 = load i32, ptr %3838, align 4, !tbaa !5
  %3841 = add nsw i32 %3840, %3839
  store i32 %3841, ptr %3838, align 4, !tbaa !5
  br label %3842

3842:                                             ; preds = %3829, %3837, %3802, %3782
  %3843 = icmp eq i32 %3794, %5
  br i1 %3843, label %5500, label %3708, !llvm.loop !708

3844:                                             ; preds = %3691, %3980
  %3845 = phi double [ 0.000000e+00, %3691 ], [ %3928, %3980 ]
  %3846 = phi i32 [ 0, %3691 ], [ %3929, %3980 ]
  %3847 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3692, label %3848, label %3917

3848:                                             ; preds = %3844, %3907
  %3849 = phi i32 [ %3916, %3907 ], [ 0, %3844 ]
  %3850 = phi i64 [ %3858, %3907 ], [ %3696, %3844 ]
  %3851 = phi i64 [ %3915, %3907 ], [ %3695, %3844 ]
  %3852 = phi i32 [ %3913, %3907 ], [ %3847, %3844 ]
  %3853 = sub i32 %3694, %3849
  %3854 = tail call i32 @llvm.smin.i32(i32 %3853, i32 0)
  %3855 = sub i32 %3853, %3854
  %3856 = zext i32 %3855 to i64
  %3857 = add nuw nsw i64 %3856, 1
  %3858 = add nsw i64 %3850, -1
  %3859 = icmp ult i32 %3855, 31
  br i1 %3859, label %3895, label %3860

3860:                                             ; preds = %3848
  %3861 = and i64 %3857, 8589934560
  %3862 = sub i64 %3851, %3861
  br label %3863

3863:                                             ; preds = %3863, %3860
  %3864 = phi i64 [ 0, %3860 ], [ %3887, %3863 ]
  %3865 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3860 ], [ %3883, %3863 ]
  %3866 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3860 ], [ %3884, %3863 ]
  %3867 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3860 ], [ %3885, %3863 ]
  %3868 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3860 ], [ %3886, %3863 ]
  %3869 = sub i64 %3851, %3864
  %3870 = getelementptr inbounds i32, ptr %11, i64 %3869
  %3871 = getelementptr inbounds i32, ptr %3870, i64 -7
  %3872 = load <8 x i32>, ptr %3871, align 4, !tbaa !5
  %3873 = shufflevector <8 x i32> %3872, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3874 = getelementptr inbounds i32, ptr %3870, i64 -15
  %3875 = load <8 x i32>, ptr %3874, align 4, !tbaa !5
  %3876 = shufflevector <8 x i32> %3875, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3877 = getelementptr inbounds i32, ptr %3870, i64 -23
  %3878 = load <8 x i32>, ptr %3877, align 4, !tbaa !5
  %3879 = shufflevector <8 x i32> %3878, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3880 = getelementptr inbounds i32, ptr %3870, i64 -31
  %3881 = load <8 x i32>, ptr %3880, align 4, !tbaa !5
  %3882 = shufflevector <8 x i32> %3881, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3883 = mul <8 x i32> %3873, %3865
  %3884 = mul <8 x i32> %3876, %3866
  %3885 = mul <8 x i32> %3879, %3867
  %3886 = mul <8 x i32> %3882, %3868
  %3887 = add nuw i64 %3864, 32
  %3888 = icmp eq i64 %3887, %3861
  br i1 %3888, label %3889, label %3863, !llvm.loop !709

3889:                                             ; preds = %3863
  %3890 = mul <8 x i32> %3884, %3883
  %3891 = mul <8 x i32> %3885, %3890
  %3892 = mul <8 x i32> %3886, %3891
  %3893 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3892)
  %3894 = icmp eq i64 %3857, %3861
  br i1 %3894, label %3907, label %3895

3895:                                             ; preds = %3848, %3889
  %3896 = phi i64 [ %3851, %3848 ], [ %3862, %3889 ]
  %3897 = phi i32 [ 1, %3848 ], [ %3893, %3889 ]
  br label %3898

3898:                                             ; preds = %3895, %3898
  %3899 = phi i64 [ %3904, %3898 ], [ %3896, %3895 ]
  %3900 = phi i32 [ %3903, %3898 ], [ %3897, %3895 ]
  %3901 = getelementptr inbounds i32, ptr %11, i64 %3899
  %3902 = load i32, ptr %3901, align 4, !tbaa !5
  %3903 = mul nsw i32 %3902, %3900
  %3904 = add nsw i64 %3899, -1
  %3905 = trunc i64 %3899 to i32
  %3906 = icmp sgt i32 %3905, 0
  br i1 %3906, label %3898, label %3907, !llvm.loop !710

3907:                                             ; preds = %3898, %3889
  %3908 = phi i32 [ %3893, %3889 ], [ %3903, %3898 ]
  %3909 = and i64 %3858, 4294967295
  %3910 = getelementptr inbounds i32, ptr %6, i64 %3909
  %3911 = load i32, ptr %3910, align 4, !tbaa !5
  %3912 = mul nsw i32 %3911, %3908
  %3913 = add nsw i32 %3912, %3852
  %3914 = icmp sgt i64 %3850, 2
  %3915 = add nsw i64 %3851, -1
  %3916 = add i32 %3849, 1
  br i1 %3914, label %3848, label %3917, !llvm.loop !711

3917:                                             ; preds = %3907, %3844
  %3918 = phi i32 [ %3847, %3844 ], [ %3913, %3907 ]
  %3919 = icmp slt i32 %3918, %5
  br i1 %3919, label %3922, label %3920

3920:                                             ; preds = %3917
  %3921 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

3922:                                             ; preds = %3917
  %3923 = sext i32 %3918 to i64
  %3924 = getelementptr inbounds i32, ptr %3676, i64 %3923
  %3925 = load i32, ptr %3924, align 4, !tbaa !5
  %3926 = sitofp i32 %3925 to double
  %3927 = fmul fast double %3926, %3926
  %3928 = fadd fast double %3927, %3845
  store double %3928, ptr %3678, align 8, !tbaa !18
  %3929 = add nuw nsw i32 %3846, 1
  br i1 %3693, label %3930, label %3980

3930:                                             ; preds = %3922
  %3931 = load i32, ptr %4, align 4, !tbaa !5
  %3932 = load i32, ptr %12, align 4, !tbaa !5
  %3933 = add nsw i32 %3932, -1
  %3934 = icmp slt i32 %3931, %3933
  br i1 %3934, label %3957, label %3935

3935:                                             ; preds = %3930
  %3936 = icmp eq i32 %3931, %3933
  br i1 %3936, label %3937, label %3973

3937:                                             ; preds = %3935
  store i32 0, ptr %4, align 4, !tbaa !5
  %3938 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3938, ptr %6, align 4, !tbaa !5
  br i1 %3698, label %3980, label %3939

3939:                                             ; preds = %3937, %3967
  %3940 = phi i64 [ %3971, %3967 ], [ 1, %3937 ]
  %3941 = getelementptr inbounds i32, ptr %4, i64 %3940
  %3942 = load i32, ptr %3941, align 4, !tbaa !5
  %3943 = getelementptr inbounds i32, ptr %12, i64 %3940
  %3944 = load i32, ptr %3943, align 4, !tbaa !5
  %3945 = add nsw i32 %3944, -1
  %3946 = icmp slt i32 %3942, %3945
  br i1 %3946, label %3947, label %3965

3947:                                             ; preds = %3939
  br i1 %3934, label %3957, label %3948

3948:                                             ; preds = %3947
  %3949 = shl i64 %3940, 32
  %3950 = add i64 %3949, -4294967296
  %3951 = ashr exact i64 %3950, 32
  %3952 = getelementptr inbounds i32, ptr %7, i64 %3951
  %3953 = load i32, ptr %3952, align 4, !tbaa !5
  %3954 = getelementptr inbounds i32, ptr %6, i64 %3940
  %3955 = load i32, ptr %3954, align 4, !tbaa !5
  %3956 = add nsw i32 %3955, %3953
  store i32 %3956, ptr %3954, align 4, !tbaa !5
  br label %3975

3957:                                             ; preds = %3930, %3947
  %3958 = phi i32 [ %3942, %3947 ], [ %3931, %3930 ]
  %3959 = phi ptr [ %3941, %3947 ], [ %4, %3930 ]
  %3960 = phi i64 [ %3940, %3947 ], [ 0, %3930 ]
  %3961 = add nsw i32 %3958, 1
  store i32 %3961, ptr %3959, align 4, !tbaa !5
  %3962 = getelementptr inbounds i32, ptr %7, i64 %3960
  %3963 = load i32, ptr %3962, align 4, !tbaa !5
  %3964 = getelementptr inbounds i32, ptr %6, i64 %3960
  br label %3975

3965:                                             ; preds = %3939
  %3966 = icmp eq i32 %3942, %3945
  br i1 %3966, label %3967, label %3973

3967:                                             ; preds = %3965
  store i32 0, ptr %3941, align 4, !tbaa !5
  %3968 = getelementptr inbounds i32, ptr %8, i64 %3940
  %3969 = load i32, ptr %3968, align 4, !tbaa !5
  %3970 = getelementptr inbounds i32, ptr %6, i64 %3940
  store i32 %3969, ptr %3970, align 4, !tbaa !5
  %3971 = add nuw nsw i64 %3940, 1
  %3972 = icmp eq i64 %3971, %3696
  br i1 %3972, label %3980, label %3939, !llvm.loop !712

3973:                                             ; preds = %3935, %3965
  %3974 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

3975:                                             ; preds = %3948, %3957
  %3976 = phi ptr [ %3964, %3957 ], [ %3941, %3948 ]
  %3977 = phi i32 [ %3963, %3957 ], [ 1, %3948 ]
  %3978 = load i32, ptr %3976, align 4, !tbaa !5
  %3979 = add nsw i32 %3978, %3977
  store i32 %3979, ptr %3976, align 4, !tbaa !5
  br label %3980

3980:                                             ; preds = %3967, %3975, %3937, %3922
  %3981 = icmp eq i32 %3929, %5
  br i1 %3981, label %5500, label %3844, !llvm.loop !713

3982:                                             ; preds = %3684
  %3983 = getelementptr inbounds i32, ptr %3, i64 %19
  %3984 = load i32, ptr %3983, align 4, !tbaa !5
  %3985 = icmp eq i32 %3984, 0
  %3986 = icmp sgt i32 %5, 0
  br i1 %3985, label %3996, label %3987

3987:                                             ; preds = %3982
  br i1 %3986, label %3988, label %5500

3988:                                             ; preds = %3987
  %3989 = icmp sgt i32 %13, 1
  %3990 = icmp sgt i32 %13, 0
  %3991 = add i32 %13, -2
  %3992 = zext i32 %3991 to i64
  %3993 = zext i32 %13 to i64
  %3994 = add nuw i32 %5, 1
  %3995 = icmp eq i32 %13, 1
  br label %4138

3996:                                             ; preds = %3982
  br i1 %3986, label %3997, label %5500

3997:                                             ; preds = %3996
  %3998 = icmp sgt i32 %13, 1
  %3999 = icmp sgt i32 %13, 0
  %4000 = add i32 %13, -2
  %4001 = zext i32 %4000 to i64
  %4002 = zext i32 %13 to i64
  %4003 = add nuw i32 %5, 1
  %4004 = icmp eq i32 %13, 1
  br label %4005

4005:                                             ; preds = %3997, %4136
  %4006 = phi double [ 0.000000e+00, %3997 ], [ %4086, %4136 ]
  %4007 = phi i32 [ 0, %3997 ], [ %4088, %4136 ]
  %4008 = phi double [ 0.000000e+00, %3997 ], [ %4087, %4136 ]
  %4009 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3998, label %4010, label %4079

4010:                                             ; preds = %4005, %4069
  %4011 = phi i32 [ %4078, %4069 ], [ 0, %4005 ]
  %4012 = phi i64 [ %4020, %4069 ], [ %4002, %4005 ]
  %4013 = phi i64 [ %4077, %4069 ], [ %4001, %4005 ]
  %4014 = phi i32 [ %4075, %4069 ], [ %4009, %4005 ]
  %4015 = sub i32 %4000, %4011
  %4016 = tail call i32 @llvm.smin.i32(i32 %4015, i32 0)
  %4017 = sub i32 %4015, %4016
  %4018 = zext i32 %4017 to i64
  %4019 = add nuw nsw i64 %4018, 1
  %4020 = add nsw i64 %4012, -1
  %4021 = icmp ult i32 %4017, 31
  br i1 %4021, label %4057, label %4022

4022:                                             ; preds = %4010
  %4023 = and i64 %4019, 8589934560
  %4024 = sub i64 %4013, %4023
  br label %4025

4025:                                             ; preds = %4025, %4022
  %4026 = phi i64 [ 0, %4022 ], [ %4049, %4025 ]
  %4027 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4045, %4025 ]
  %4028 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4046, %4025 ]
  %4029 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4047, %4025 ]
  %4030 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4048, %4025 ]
  %4031 = sub i64 %4013, %4026
  %4032 = getelementptr inbounds i32, ptr %9, i64 %4031
  %4033 = getelementptr inbounds i32, ptr %4032, i64 -7
  %4034 = load <8 x i32>, ptr %4033, align 4, !tbaa !5
  %4035 = shufflevector <8 x i32> %4034, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4036 = getelementptr inbounds i32, ptr %4032, i64 -15
  %4037 = load <8 x i32>, ptr %4036, align 4, !tbaa !5
  %4038 = shufflevector <8 x i32> %4037, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4039 = getelementptr inbounds i32, ptr %4032, i64 -23
  %4040 = load <8 x i32>, ptr %4039, align 4, !tbaa !5
  %4041 = shufflevector <8 x i32> %4040, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4042 = getelementptr inbounds i32, ptr %4032, i64 -31
  %4043 = load <8 x i32>, ptr %4042, align 4, !tbaa !5
  %4044 = shufflevector <8 x i32> %4043, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4045 = mul <8 x i32> %4035, %4027
  %4046 = mul <8 x i32> %4038, %4028
  %4047 = mul <8 x i32> %4041, %4029
  %4048 = mul <8 x i32> %4044, %4030
  %4049 = add nuw i64 %4026, 32
  %4050 = icmp eq i64 %4049, %4023
  br i1 %4050, label %4051, label %4025, !llvm.loop !714

4051:                                             ; preds = %4025
  %4052 = mul <8 x i32> %4046, %4045
  %4053 = mul <8 x i32> %4047, %4052
  %4054 = mul <8 x i32> %4048, %4053
  %4055 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4054)
  %4056 = icmp eq i64 %4019, %4023
  br i1 %4056, label %4069, label %4057

4057:                                             ; preds = %4010, %4051
  %4058 = phi i64 [ %4013, %4010 ], [ %4024, %4051 ]
  %4059 = phi i32 [ 1, %4010 ], [ %4055, %4051 ]
  br label %4060

4060:                                             ; preds = %4057, %4060
  %4061 = phi i64 [ %4066, %4060 ], [ %4058, %4057 ]
  %4062 = phi i32 [ %4065, %4060 ], [ %4059, %4057 ]
  %4063 = getelementptr inbounds i32, ptr %9, i64 %4061
  %4064 = load i32, ptr %4063, align 4, !tbaa !5
  %4065 = mul nsw i32 %4064, %4062
  %4066 = add nsw i64 %4061, -1
  %4067 = trunc i64 %4061 to i32
  %4068 = icmp sgt i32 %4067, 0
  br i1 %4068, label %4060, label %4069, !llvm.loop !715

4069:                                             ; preds = %4060, %4051
  %4070 = phi i32 [ %4055, %4051 ], [ %4065, %4060 ]
  %4071 = and i64 %4020, 4294967295
  %4072 = getelementptr inbounds i32, ptr %6, i64 %4071
  %4073 = load i32, ptr %4072, align 4, !tbaa !5
  %4074 = mul nsw i32 %4073, %4070
  %4075 = add nsw i32 %4074, %4014
  %4076 = icmp sgt i64 %4012, 2
  %4077 = add nsw i64 %4013, -1
  %4078 = add i32 %4011, 1
  br i1 %4076, label %4010, label %4079, !llvm.loop !716

4079:                                             ; preds = %4069, %4005
  %4080 = phi i32 [ %4009, %4005 ], [ %4075, %4069 ]
  %4081 = sext i32 %4080 to i64
  %4082 = getelementptr inbounds i32, ptr %3676, i64 %4081
  %4083 = load i32, ptr %4082, align 4, !tbaa !5
  %4084 = sitofp i32 %4083 to double
  %4085 = fmul fast double %4084, %4084
  %4086 = fadd fast double %4085, %4006
  %4087 = fadd fast double %4008, 1.000000e+00
  %4088 = add nuw nsw i32 %4007, 1
  br i1 %3999, label %4089, label %4136

4089:                                             ; preds = %4079
  %4090 = load i32, ptr %4, align 4, !tbaa !5
  %4091 = load i32, ptr %12, align 4, !tbaa !5
  %4092 = add nsw i32 %4091, -1
  %4093 = icmp slt i32 %4090, %4092
  br i1 %4093, label %4113, label %4094

4094:                                             ; preds = %4089
  %4095 = icmp eq i32 %4090, %4092
  br i1 %4095, label %4096, label %4129

4096:                                             ; preds = %4094
  store i32 0, ptr %4, align 4, !tbaa !5
  %4097 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4097, ptr %6, align 4, !tbaa !5
  br i1 %4004, label %4136, label %4098

4098:                                             ; preds = %4096, %4123
  %4099 = phi i64 [ %4127, %4123 ], [ 1, %4096 ]
  %4100 = getelementptr inbounds i32, ptr %4, i64 %4099
  %4101 = load i32, ptr %4100, align 4, !tbaa !5
  %4102 = getelementptr inbounds i32, ptr %12, i64 %4099
  %4103 = load i32, ptr %4102, align 4, !tbaa !5
  %4104 = add nsw i32 %4103, -1
  %4105 = icmp slt i32 %4101, %4104
  br i1 %4105, label %4106, label %4121

4106:                                             ; preds = %4098
  br i1 %4093, label %4113, label %4107

4107:                                             ; preds = %4106
  %4108 = getelementptr inbounds i32, ptr %7, i64 %4099
  %4109 = load i32, ptr %4108, align 4, !tbaa !5
  %4110 = getelementptr inbounds i32, ptr %6, i64 %4099
  %4111 = load i32, ptr %4110, align 4, !tbaa !5
  %4112 = add nsw i32 %4111, %4109
  store i32 %4112, ptr %4110, align 4, !tbaa !5
  br label %4131

4113:                                             ; preds = %4089, %4106
  %4114 = phi i32 [ %4101, %4106 ], [ %4090, %4089 ]
  %4115 = phi ptr [ %4100, %4106 ], [ %4, %4089 ]
  %4116 = phi i64 [ %4099, %4106 ], [ 0, %4089 ]
  %4117 = add nsw i32 %4114, 1
  store i32 %4117, ptr %4115, align 4, !tbaa !5
  %4118 = getelementptr inbounds i32, ptr %7, i64 %4116
  %4119 = load i32, ptr %4118, align 4, !tbaa !5
  %4120 = getelementptr inbounds i32, ptr %6, i64 %4116
  br label %4131

4121:                                             ; preds = %4098
  %4122 = icmp eq i32 %4101, %4104
  br i1 %4122, label %4123, label %4129

4123:                                             ; preds = %4121
  store i32 0, ptr %4100, align 4, !tbaa !5
  %4124 = getelementptr inbounds i32, ptr %8, i64 %4099
  %4125 = load i32, ptr %4124, align 4, !tbaa !5
  %4126 = getelementptr inbounds i32, ptr %6, i64 %4099
  store i32 %4125, ptr %4126, align 4, !tbaa !5
  %4127 = add nuw nsw i64 %4099, 1
  %4128 = icmp eq i64 %4127, %4002
  br i1 %4128, label %4136, label %4098, !llvm.loop !717

4129:                                             ; preds = %4094, %4121
  store double %4086, ptr %3678, align 8, !tbaa !18
  %4130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

4131:                                             ; preds = %4107, %4113
  %4132 = phi ptr [ %4120, %4113 ], [ %4100, %4107 ]
  %4133 = phi i32 [ %4119, %4113 ], [ 1, %4107 ]
  %4134 = load i32, ptr %4132, align 4, !tbaa !5
  %4135 = add nsw i32 %4134, %4133
  store i32 %4135, ptr %4132, align 4, !tbaa !5
  br label %4136

4136:                                             ; preds = %4123, %4131, %4096, %4079
  %4137 = icmp eq i32 %4088, %5
  br i1 %4137, label %5496, label %4005, !llvm.loop !718

4138:                                             ; preds = %3988, %4274
  %4139 = phi double [ 0.000000e+00, %3988 ], [ %4222, %4274 ]
  %4140 = phi i32 [ 0, %3988 ], [ %4223, %4274 ]
  %4141 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3989, label %4142, label %4211

4142:                                             ; preds = %4138, %4201
  %4143 = phi i32 [ %4210, %4201 ], [ 0, %4138 ]
  %4144 = phi i64 [ %4152, %4201 ], [ %3993, %4138 ]
  %4145 = phi i64 [ %4209, %4201 ], [ %3992, %4138 ]
  %4146 = phi i32 [ %4207, %4201 ], [ %4141, %4138 ]
  %4147 = sub i32 %3991, %4143
  %4148 = tail call i32 @llvm.smin.i32(i32 %4147, i32 0)
  %4149 = sub i32 %4147, %4148
  %4150 = zext i32 %4149 to i64
  %4151 = add nuw nsw i64 %4150, 1
  %4152 = add nsw i64 %4144, -1
  %4153 = icmp ult i32 %4149, 31
  br i1 %4153, label %4189, label %4154

4154:                                             ; preds = %4142
  %4155 = and i64 %4151, 8589934560
  %4156 = sub i64 %4145, %4155
  br label %4157

4157:                                             ; preds = %4157, %4154
  %4158 = phi i64 [ 0, %4154 ], [ %4181, %4157 ]
  %4159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4154 ], [ %4177, %4157 ]
  %4160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4154 ], [ %4178, %4157 ]
  %4161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4154 ], [ %4179, %4157 ]
  %4162 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4154 ], [ %4180, %4157 ]
  %4163 = sub i64 %4145, %4158
  %4164 = getelementptr inbounds i32, ptr %11, i64 %4163
  %4165 = getelementptr inbounds i32, ptr %4164, i64 -7
  %4166 = load <8 x i32>, ptr %4165, align 4, !tbaa !5
  %4167 = shufflevector <8 x i32> %4166, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4168 = getelementptr inbounds i32, ptr %4164, i64 -15
  %4169 = load <8 x i32>, ptr %4168, align 4, !tbaa !5
  %4170 = shufflevector <8 x i32> %4169, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4171 = getelementptr inbounds i32, ptr %4164, i64 -23
  %4172 = load <8 x i32>, ptr %4171, align 4, !tbaa !5
  %4173 = shufflevector <8 x i32> %4172, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4174 = getelementptr inbounds i32, ptr %4164, i64 -31
  %4175 = load <8 x i32>, ptr %4174, align 4, !tbaa !5
  %4176 = shufflevector <8 x i32> %4175, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4177 = mul <8 x i32> %4167, %4159
  %4178 = mul <8 x i32> %4170, %4160
  %4179 = mul <8 x i32> %4173, %4161
  %4180 = mul <8 x i32> %4176, %4162
  %4181 = add nuw i64 %4158, 32
  %4182 = icmp eq i64 %4181, %4155
  br i1 %4182, label %4183, label %4157, !llvm.loop !719

4183:                                             ; preds = %4157
  %4184 = mul <8 x i32> %4178, %4177
  %4185 = mul <8 x i32> %4179, %4184
  %4186 = mul <8 x i32> %4180, %4185
  %4187 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4186)
  %4188 = icmp eq i64 %4151, %4155
  br i1 %4188, label %4201, label %4189

4189:                                             ; preds = %4142, %4183
  %4190 = phi i64 [ %4145, %4142 ], [ %4156, %4183 ]
  %4191 = phi i32 [ 1, %4142 ], [ %4187, %4183 ]
  br label %4192

4192:                                             ; preds = %4189, %4192
  %4193 = phi i64 [ %4198, %4192 ], [ %4190, %4189 ]
  %4194 = phi i32 [ %4197, %4192 ], [ %4191, %4189 ]
  %4195 = getelementptr inbounds i32, ptr %11, i64 %4193
  %4196 = load i32, ptr %4195, align 4, !tbaa !5
  %4197 = mul nsw i32 %4196, %4194
  %4198 = add nsw i64 %4193, -1
  %4199 = trunc i64 %4193 to i32
  %4200 = icmp sgt i32 %4199, 0
  br i1 %4200, label %4192, label %4201, !llvm.loop !720

4201:                                             ; preds = %4192, %4183
  %4202 = phi i32 [ %4187, %4183 ], [ %4197, %4192 ]
  %4203 = and i64 %4152, 4294967295
  %4204 = getelementptr inbounds i32, ptr %6, i64 %4203
  %4205 = load i32, ptr %4204, align 4, !tbaa !5
  %4206 = mul nsw i32 %4205, %4202
  %4207 = add nsw i32 %4206, %4146
  %4208 = icmp sgt i64 %4144, 2
  %4209 = add nsw i64 %4145, -1
  %4210 = add i32 %4143, 1
  br i1 %4208, label %4142, label %4211, !llvm.loop !721

4211:                                             ; preds = %4201, %4138
  %4212 = phi i32 [ %4141, %4138 ], [ %4207, %4201 ]
  %4213 = icmp slt i32 %4212, %5
  br i1 %4213, label %4216, label %4214

4214:                                             ; preds = %4211
  %4215 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

4216:                                             ; preds = %4211
  %4217 = sext i32 %4212 to i64
  %4218 = getelementptr inbounds i32, ptr %3676, i64 %4217
  %4219 = load i32, ptr %4218, align 4, !tbaa !5
  %4220 = sitofp i32 %4219 to double
  %4221 = fmul fast double %4220, %4220
  %4222 = fadd fast double %4221, %4139
  store double %4222, ptr %3678, align 8, !tbaa !18
  %4223 = add nuw nsw i32 %4140, 1
  br i1 %3990, label %4224, label %4274

4224:                                             ; preds = %4216
  %4225 = load i32, ptr %4, align 4, !tbaa !5
  %4226 = load i32, ptr %12, align 4, !tbaa !5
  %4227 = add nsw i32 %4226, -1
  %4228 = icmp slt i32 %4225, %4227
  br i1 %4228, label %4251, label %4229

4229:                                             ; preds = %4224
  %4230 = icmp eq i32 %4225, %4227
  br i1 %4230, label %4231, label %4267

4231:                                             ; preds = %4229
  store i32 0, ptr %4, align 4, !tbaa !5
  %4232 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4232, ptr %6, align 4, !tbaa !5
  br i1 %3995, label %4274, label %4233

4233:                                             ; preds = %4231, %4261
  %4234 = phi i64 [ %4265, %4261 ], [ 1, %4231 ]
  %4235 = getelementptr inbounds i32, ptr %4, i64 %4234
  %4236 = load i32, ptr %4235, align 4, !tbaa !5
  %4237 = getelementptr inbounds i32, ptr %12, i64 %4234
  %4238 = load i32, ptr %4237, align 4, !tbaa !5
  %4239 = add nsw i32 %4238, -1
  %4240 = icmp slt i32 %4236, %4239
  br i1 %4240, label %4241, label %4259

4241:                                             ; preds = %4233
  br i1 %4228, label %4251, label %4242

4242:                                             ; preds = %4241
  %4243 = shl i64 %4234, 32
  %4244 = add i64 %4243, -4294967296
  %4245 = ashr exact i64 %4244, 32
  %4246 = getelementptr inbounds i32, ptr %7, i64 %4245
  %4247 = load i32, ptr %4246, align 4, !tbaa !5
  %4248 = getelementptr inbounds i32, ptr %6, i64 %4234
  %4249 = load i32, ptr %4248, align 4, !tbaa !5
  %4250 = add nsw i32 %4249, %4247
  store i32 %4250, ptr %4248, align 4, !tbaa !5
  br label %4269

4251:                                             ; preds = %4224, %4241
  %4252 = phi i32 [ %4236, %4241 ], [ %4225, %4224 ]
  %4253 = phi ptr [ %4235, %4241 ], [ %4, %4224 ]
  %4254 = phi i64 [ %4234, %4241 ], [ 0, %4224 ]
  %4255 = add nsw i32 %4252, 1
  store i32 %4255, ptr %4253, align 4, !tbaa !5
  %4256 = getelementptr inbounds i32, ptr %7, i64 %4254
  %4257 = load i32, ptr %4256, align 4, !tbaa !5
  %4258 = getelementptr inbounds i32, ptr %6, i64 %4254
  br label %4269

4259:                                             ; preds = %4233
  %4260 = icmp eq i32 %4236, %4239
  br i1 %4260, label %4261, label %4267

4261:                                             ; preds = %4259
  store i32 0, ptr %4235, align 4, !tbaa !5
  %4262 = getelementptr inbounds i32, ptr %8, i64 %4234
  %4263 = load i32, ptr %4262, align 4, !tbaa !5
  %4264 = getelementptr inbounds i32, ptr %6, i64 %4234
  store i32 %4263, ptr %4264, align 4, !tbaa !5
  %4265 = add nuw nsw i64 %4234, 1
  %4266 = icmp eq i64 %4265, %3993
  br i1 %4266, label %4274, label %4233, !llvm.loop !722

4267:                                             ; preds = %4229, %4259
  %4268 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

4269:                                             ; preds = %4242, %4251
  %4270 = phi ptr [ %4258, %4251 ], [ %4235, %4242 ]
  %4271 = phi i32 [ %4257, %4251 ], [ 1, %4242 ]
  %4272 = load i32, ptr %4270, align 4, !tbaa !5
  %4273 = add nsw i32 %4272, %4271
  store i32 %4273, ptr %4270, align 4, !tbaa !5
  br label %4274

4274:                                             ; preds = %4261, %4269, %4231, %4216
  %4275 = icmp eq i32 %4223, %5
  br i1 %4275, label %5500, label %4138, !llvm.loop !723

4276:                                             ; preds = %3684
  %4277 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1191, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

4278:                                             ; preds = %18
  %4279 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4280 = load ptr, ptr %4279, align 8, !tbaa !9
  %4281 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4282 = load ptr, ptr %4281, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4282, align 4, !tbaa !162
  %4283 = icmp eq i32 %13, 0
  br i1 %4283, label %4284, label %4288

4284:                                             ; preds = %4278
  %4285 = load i32, ptr %4280, align 4, !tbaa !5
  %4286 = sitofp i32 %4285 to float
  %4287 = fmul fast float %4286, %4286
  store float %4287, ptr %4282, align 4, !tbaa !162
  br label %5500

4288:                                             ; preds = %4278
  switch i32 %1, label %4886 [
    i32 1, label %4289
    i32 0, label %4592
  ]

4289:                                             ; preds = %4288
  %4290 = getelementptr inbounds i32, ptr %3, i64 %19
  %4291 = load i32, ptr %4290, align 4, !tbaa !5
  %4292 = icmp eq i32 %4291, 0
  %4293 = icmp sgt i32 %5, 0
  br i1 %4292, label %4303, label %4294

4294:                                             ; preds = %4289
  br i1 %4293, label %4295, label %5500

4295:                                             ; preds = %4294
  %4296 = icmp sgt i32 %13, 1
  %4297 = icmp sgt i32 %13, 0
  %4298 = add i32 %13, -2
  %4299 = zext i32 %4298 to i64
  %4300 = zext i32 %13 to i64
  %4301 = add nuw i32 %5, 1
  %4302 = icmp eq i32 %13, 1
  br label %4451

4303:                                             ; preds = %4289
  br i1 %4293, label %4304, label %5500

4304:                                             ; preds = %4303
  %4305 = icmp sgt i32 %13, 1
  %4306 = icmp sgt i32 %13, 0
  %4307 = add i32 %13, -2
  %4308 = zext i32 %4307 to i64
  %4309 = zext i32 %13 to i64
  %4310 = add nuw i32 %5, 1
  %4311 = icmp eq i32 %13, 1
  br label %4312

4312:                                             ; preds = %4304, %4449
  %4313 = phi float [ 0.000000e+00, %4304 ], [ %4399, %4449 ]
  %4314 = phi i32 [ 0, %4304 ], [ %4401, %4449 ]
  %4315 = phi double [ 0.000000e+00, %4304 ], [ %4400, %4449 ]
  %4316 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4305, label %4317, label %4386

4317:                                             ; preds = %4312, %4376
  %4318 = phi i32 [ %4385, %4376 ], [ 0, %4312 ]
  %4319 = phi i64 [ %4327, %4376 ], [ %4309, %4312 ]
  %4320 = phi i64 [ %4384, %4376 ], [ %4308, %4312 ]
  %4321 = phi i32 [ %4382, %4376 ], [ %4316, %4312 ]
  %4322 = sub i32 %4307, %4318
  %4323 = tail call i32 @llvm.smin.i32(i32 %4322, i32 0)
  %4324 = sub i32 %4322, %4323
  %4325 = zext i32 %4324 to i64
  %4326 = add nuw nsw i64 %4325, 1
  %4327 = add nsw i64 %4319, -1
  %4328 = icmp ult i32 %4324, 31
  br i1 %4328, label %4364, label %4329

4329:                                             ; preds = %4317
  %4330 = and i64 %4326, 8589934560
  %4331 = sub i64 %4320, %4330
  br label %4332

4332:                                             ; preds = %4332, %4329
  %4333 = phi i64 [ 0, %4329 ], [ %4356, %4332 ]
  %4334 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4329 ], [ %4352, %4332 ]
  %4335 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4329 ], [ %4353, %4332 ]
  %4336 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4329 ], [ %4354, %4332 ]
  %4337 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4329 ], [ %4355, %4332 ]
  %4338 = sub i64 %4320, %4333
  %4339 = getelementptr inbounds i32, ptr %9, i64 %4338
  %4340 = getelementptr inbounds i32, ptr %4339, i64 -7
  %4341 = load <8 x i32>, ptr %4340, align 4, !tbaa !5
  %4342 = shufflevector <8 x i32> %4341, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4343 = getelementptr inbounds i32, ptr %4339, i64 -15
  %4344 = load <8 x i32>, ptr %4343, align 4, !tbaa !5
  %4345 = shufflevector <8 x i32> %4344, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4346 = getelementptr inbounds i32, ptr %4339, i64 -23
  %4347 = load <8 x i32>, ptr %4346, align 4, !tbaa !5
  %4348 = shufflevector <8 x i32> %4347, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4349 = getelementptr inbounds i32, ptr %4339, i64 -31
  %4350 = load <8 x i32>, ptr %4349, align 4, !tbaa !5
  %4351 = shufflevector <8 x i32> %4350, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4352 = mul <8 x i32> %4342, %4334
  %4353 = mul <8 x i32> %4345, %4335
  %4354 = mul <8 x i32> %4348, %4336
  %4355 = mul <8 x i32> %4351, %4337
  %4356 = add nuw i64 %4333, 32
  %4357 = icmp eq i64 %4356, %4330
  br i1 %4357, label %4358, label %4332, !llvm.loop !724

4358:                                             ; preds = %4332
  %4359 = mul <8 x i32> %4353, %4352
  %4360 = mul <8 x i32> %4354, %4359
  %4361 = mul <8 x i32> %4355, %4360
  %4362 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4361)
  %4363 = icmp eq i64 %4326, %4330
  br i1 %4363, label %4376, label %4364

4364:                                             ; preds = %4317, %4358
  %4365 = phi i64 [ %4320, %4317 ], [ %4331, %4358 ]
  %4366 = phi i32 [ 1, %4317 ], [ %4362, %4358 ]
  br label %4367

4367:                                             ; preds = %4364, %4367
  %4368 = phi i64 [ %4373, %4367 ], [ %4365, %4364 ]
  %4369 = phi i32 [ %4372, %4367 ], [ %4366, %4364 ]
  %4370 = getelementptr inbounds i32, ptr %9, i64 %4368
  %4371 = load i32, ptr %4370, align 4, !tbaa !5
  %4372 = mul nsw i32 %4371, %4369
  %4373 = add nsw i64 %4368, -1
  %4374 = trunc i64 %4368 to i32
  %4375 = icmp sgt i32 %4374, 0
  br i1 %4375, label %4367, label %4376, !llvm.loop !725

4376:                                             ; preds = %4367, %4358
  %4377 = phi i32 [ %4362, %4358 ], [ %4372, %4367 ]
  %4378 = and i64 %4327, 4294967295
  %4379 = getelementptr inbounds i32, ptr %6, i64 %4378
  %4380 = load i32, ptr %4379, align 4, !tbaa !5
  %4381 = mul nsw i32 %4380, %4377
  %4382 = add nsw i32 %4381, %4321
  %4383 = icmp sgt i64 %4319, 2
  %4384 = add nsw i64 %4320, -1
  %4385 = add i32 %4318, 1
  br i1 %4383, label %4317, label %4386, !llvm.loop !726

4386:                                             ; preds = %4376, %4312
  %4387 = phi i32 [ %4316, %4312 ], [ %4382, %4376 ]
  %4388 = sext i32 %4387 to i64
  %4389 = getelementptr inbounds double, ptr %2, i64 %4388
  %4390 = load double, ptr %4389, align 8, !tbaa !18
  %4391 = getelementptr inbounds i32, ptr %4280, i64 %4388
  %4392 = load i32, ptr %4391, align 4, !tbaa !5
  %4393 = sitofp i32 %4392 to float
  %4394 = fpext float %4313 to double
  %4395 = fpext float %4393 to double
  %4396 = fmul fast double %4390, %4395
  %4397 = fmul fast double %4396, %4396
  %4398 = fadd fast double %4397, %4394
  %4399 = fptrunc double %4398 to float
  %4400 = fadd fast double %4390, %4315
  %4401 = add nuw nsw i32 %4314, 1
  br i1 %4306, label %4402, label %4449

4402:                                             ; preds = %4386
  %4403 = load i32, ptr %4, align 4, !tbaa !5
  %4404 = load i32, ptr %12, align 4, !tbaa !5
  %4405 = add nsw i32 %4404, -1
  %4406 = icmp slt i32 %4403, %4405
  br i1 %4406, label %4426, label %4407

4407:                                             ; preds = %4402
  %4408 = icmp eq i32 %4403, %4405
  br i1 %4408, label %4409, label %4442

4409:                                             ; preds = %4407
  store i32 0, ptr %4, align 4, !tbaa !5
  %4410 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4410, ptr %6, align 4, !tbaa !5
  br i1 %4311, label %4449, label %4411

4411:                                             ; preds = %4409, %4436
  %4412 = phi i64 [ %4440, %4436 ], [ 1, %4409 ]
  %4413 = getelementptr inbounds i32, ptr %4, i64 %4412
  %4414 = load i32, ptr %4413, align 4, !tbaa !5
  %4415 = getelementptr inbounds i32, ptr %12, i64 %4412
  %4416 = load i32, ptr %4415, align 4, !tbaa !5
  %4417 = add nsw i32 %4416, -1
  %4418 = icmp slt i32 %4414, %4417
  br i1 %4418, label %4419, label %4434

4419:                                             ; preds = %4411
  br i1 %4406, label %4426, label %4420

4420:                                             ; preds = %4419
  %4421 = getelementptr inbounds i32, ptr %7, i64 %4412
  %4422 = load i32, ptr %4421, align 4, !tbaa !5
  %4423 = getelementptr inbounds i32, ptr %6, i64 %4412
  %4424 = load i32, ptr %4423, align 4, !tbaa !5
  %4425 = add nsw i32 %4424, %4422
  store i32 %4425, ptr %4423, align 4, !tbaa !5
  br label %4444

4426:                                             ; preds = %4402, %4419
  %4427 = phi i32 [ %4414, %4419 ], [ %4403, %4402 ]
  %4428 = phi ptr [ %4413, %4419 ], [ %4, %4402 ]
  %4429 = phi i64 [ %4412, %4419 ], [ 0, %4402 ]
  %4430 = add nsw i32 %4427, 1
  store i32 %4430, ptr %4428, align 4, !tbaa !5
  %4431 = getelementptr inbounds i32, ptr %7, i64 %4429
  %4432 = load i32, ptr %4431, align 4, !tbaa !5
  %4433 = getelementptr inbounds i32, ptr %6, i64 %4429
  br label %4444

4434:                                             ; preds = %4411
  %4435 = icmp eq i32 %4414, %4417
  br i1 %4435, label %4436, label %4442

4436:                                             ; preds = %4434
  store i32 0, ptr %4413, align 4, !tbaa !5
  %4437 = getelementptr inbounds i32, ptr %8, i64 %4412
  %4438 = load i32, ptr %4437, align 4, !tbaa !5
  %4439 = getelementptr inbounds i32, ptr %6, i64 %4412
  store i32 %4438, ptr %4439, align 4, !tbaa !5
  %4440 = add nuw nsw i64 %4412, 1
  %4441 = icmp eq i64 %4440, %4309
  br i1 %4441, label %4449, label %4411, !llvm.loop !727

4442:                                             ; preds = %4407, %4434
  store float %4399, ptr %4282, align 4, !tbaa !162
  %4443 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1195, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

4444:                                             ; preds = %4420, %4426
  %4445 = phi ptr [ %4433, %4426 ], [ %4413, %4420 ]
  %4446 = phi i32 [ %4432, %4426 ], [ 1, %4420 ]
  %4447 = load i32, ptr %4445, align 4, !tbaa !5
  %4448 = add nsw i32 %4447, %4446
  store i32 %4448, ptr %4445, align 4, !tbaa !5
  br label %4449

4449:                                             ; preds = %4436, %4444, %4409, %4386
  %4450 = icmp eq i32 %4401, %5
  br i1 %4450, label %5497, label %4312, !llvm.loop !728

4451:                                             ; preds = %4295, %4590
  %4452 = phi float [ 0.000000e+00, %4295 ], [ %4538, %4590 ]
  %4453 = phi i32 [ 0, %4295 ], [ %4539, %4590 ]
  %4454 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4296, label %4455, label %4524

4455:                                             ; preds = %4451, %4514
  %4456 = phi i32 [ %4523, %4514 ], [ 0, %4451 ]
  %4457 = phi i64 [ %4465, %4514 ], [ %4300, %4451 ]
  %4458 = phi i64 [ %4522, %4514 ], [ %4299, %4451 ]
  %4459 = phi i32 [ %4520, %4514 ], [ %4454, %4451 ]
  %4460 = sub i32 %4298, %4456
  %4461 = tail call i32 @llvm.smin.i32(i32 %4460, i32 0)
  %4462 = sub i32 %4460, %4461
  %4463 = zext i32 %4462 to i64
  %4464 = add nuw nsw i64 %4463, 1
  %4465 = add nsw i64 %4457, -1
  %4466 = icmp ult i32 %4462, 31
  br i1 %4466, label %4502, label %4467

4467:                                             ; preds = %4455
  %4468 = and i64 %4464, 8589934560
  %4469 = sub i64 %4458, %4468
  br label %4470

4470:                                             ; preds = %4470, %4467
  %4471 = phi i64 [ 0, %4467 ], [ %4494, %4470 ]
  %4472 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4467 ], [ %4490, %4470 ]
  %4473 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4467 ], [ %4491, %4470 ]
  %4474 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4467 ], [ %4492, %4470 ]
  %4475 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4467 ], [ %4493, %4470 ]
  %4476 = sub i64 %4458, %4471
  %4477 = getelementptr inbounds i32, ptr %11, i64 %4476
  %4478 = getelementptr inbounds i32, ptr %4477, i64 -7
  %4479 = load <8 x i32>, ptr %4478, align 4, !tbaa !5
  %4480 = shufflevector <8 x i32> %4479, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4481 = getelementptr inbounds i32, ptr %4477, i64 -15
  %4482 = load <8 x i32>, ptr %4481, align 4, !tbaa !5
  %4483 = shufflevector <8 x i32> %4482, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4484 = getelementptr inbounds i32, ptr %4477, i64 -23
  %4485 = load <8 x i32>, ptr %4484, align 4, !tbaa !5
  %4486 = shufflevector <8 x i32> %4485, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4487 = getelementptr inbounds i32, ptr %4477, i64 -31
  %4488 = load <8 x i32>, ptr %4487, align 4, !tbaa !5
  %4489 = shufflevector <8 x i32> %4488, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4490 = mul <8 x i32> %4480, %4472
  %4491 = mul <8 x i32> %4483, %4473
  %4492 = mul <8 x i32> %4486, %4474
  %4493 = mul <8 x i32> %4489, %4475
  %4494 = add nuw i64 %4471, 32
  %4495 = icmp eq i64 %4494, %4468
  br i1 %4495, label %4496, label %4470, !llvm.loop !729

4496:                                             ; preds = %4470
  %4497 = mul <8 x i32> %4491, %4490
  %4498 = mul <8 x i32> %4492, %4497
  %4499 = mul <8 x i32> %4493, %4498
  %4500 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4499)
  %4501 = icmp eq i64 %4464, %4468
  br i1 %4501, label %4514, label %4502

4502:                                             ; preds = %4455, %4496
  %4503 = phi i64 [ %4458, %4455 ], [ %4469, %4496 ]
  %4504 = phi i32 [ 1, %4455 ], [ %4500, %4496 ]
  br label %4505

4505:                                             ; preds = %4502, %4505
  %4506 = phi i64 [ %4511, %4505 ], [ %4503, %4502 ]
  %4507 = phi i32 [ %4510, %4505 ], [ %4504, %4502 ]
  %4508 = getelementptr inbounds i32, ptr %11, i64 %4506
  %4509 = load i32, ptr %4508, align 4, !tbaa !5
  %4510 = mul nsw i32 %4509, %4507
  %4511 = add nsw i64 %4506, -1
  %4512 = trunc i64 %4506 to i32
  %4513 = icmp sgt i32 %4512, 0
  br i1 %4513, label %4505, label %4514, !llvm.loop !730

4514:                                             ; preds = %4505, %4496
  %4515 = phi i32 [ %4500, %4496 ], [ %4510, %4505 ]
  %4516 = and i64 %4465, 4294967295
  %4517 = getelementptr inbounds i32, ptr %6, i64 %4516
  %4518 = load i32, ptr %4517, align 4, !tbaa !5
  %4519 = mul nsw i32 %4518, %4515
  %4520 = add nsw i32 %4519, %4459
  %4521 = icmp sgt i64 %4457, 2
  %4522 = add nsw i64 %4458, -1
  %4523 = add i32 %4456, 1
  br i1 %4521, label %4455, label %4524, !llvm.loop !731

4524:                                             ; preds = %4514, %4451
  %4525 = phi i32 [ %4454, %4451 ], [ %4520, %4514 ]
  %4526 = icmp slt i32 %4525, %5
  br i1 %4526, label %4529, label %4527

4527:                                             ; preds = %4524
  %4528 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1195, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

4529:                                             ; preds = %4524
  %4530 = sext i32 %4525 to i64
  %4531 = getelementptr inbounds i32, ptr %4280, i64 %4530
  %4532 = load i32, ptr %4531, align 4, !tbaa !5
  %4533 = sitofp i32 %4532 to float
  %4534 = fpext float %4452 to double
  %4535 = fpext float %4533 to double
  %4536 = fmul fast double %4535, %4535
  %4537 = fadd fast double %4536, %4534
  %4538 = fptrunc double %4537 to float
  store float %4538, ptr %4282, align 4, !tbaa !162
  %4539 = add nuw nsw i32 %4453, 1
  br i1 %4297, label %4540, label %4590

4540:                                             ; preds = %4529
  %4541 = load i32, ptr %4, align 4, !tbaa !5
  %4542 = load i32, ptr %12, align 4, !tbaa !5
  %4543 = add nsw i32 %4542, -1
  %4544 = icmp slt i32 %4541, %4543
  br i1 %4544, label %4567, label %4545

4545:                                             ; preds = %4540
  %4546 = icmp eq i32 %4541, %4543
  br i1 %4546, label %4547, label %4583

4547:                                             ; preds = %4545
  store i32 0, ptr %4, align 4, !tbaa !5
  %4548 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4548, ptr %6, align 4, !tbaa !5
  br i1 %4302, label %4590, label %4549

4549:                                             ; preds = %4547, %4577
  %4550 = phi i64 [ %4581, %4577 ], [ 1, %4547 ]
  %4551 = getelementptr inbounds i32, ptr %4, i64 %4550
  %4552 = load i32, ptr %4551, align 4, !tbaa !5
  %4553 = getelementptr inbounds i32, ptr %12, i64 %4550
  %4554 = load i32, ptr %4553, align 4, !tbaa !5
  %4555 = add nsw i32 %4554, -1
  %4556 = icmp slt i32 %4552, %4555
  br i1 %4556, label %4557, label %4575

4557:                                             ; preds = %4549
  br i1 %4544, label %4567, label %4558

4558:                                             ; preds = %4557
  %4559 = shl i64 %4550, 32
  %4560 = add i64 %4559, -4294967296
  %4561 = ashr exact i64 %4560, 32
  %4562 = getelementptr inbounds i32, ptr %7, i64 %4561
  %4563 = load i32, ptr %4562, align 4, !tbaa !5
  %4564 = getelementptr inbounds i32, ptr %6, i64 %4550
  %4565 = load i32, ptr %4564, align 4, !tbaa !5
  %4566 = add nsw i32 %4565, %4563
  store i32 %4566, ptr %4564, align 4, !tbaa !5
  br label %4585

4567:                                             ; preds = %4540, %4557
  %4568 = phi i32 [ %4552, %4557 ], [ %4541, %4540 ]
  %4569 = phi ptr [ %4551, %4557 ], [ %4, %4540 ]
  %4570 = phi i64 [ %4550, %4557 ], [ 0, %4540 ]
  %4571 = add nsw i32 %4568, 1
  store i32 %4571, ptr %4569, align 4, !tbaa !5
  %4572 = getelementptr inbounds i32, ptr %7, i64 %4570
  %4573 = load i32, ptr %4572, align 4, !tbaa !5
  %4574 = getelementptr inbounds i32, ptr %6, i64 %4570
  br label %4585

4575:                                             ; preds = %4549
  %4576 = icmp eq i32 %4552, %4555
  br i1 %4576, label %4577, label %4583

4577:                                             ; preds = %4575
  store i32 0, ptr %4551, align 4, !tbaa !5
  %4578 = getelementptr inbounds i32, ptr %8, i64 %4550
  %4579 = load i32, ptr %4578, align 4, !tbaa !5
  %4580 = getelementptr inbounds i32, ptr %6, i64 %4550
  store i32 %4579, ptr %4580, align 4, !tbaa !5
  %4581 = add nuw nsw i64 %4550, 1
  %4582 = icmp eq i64 %4581, %4300
  br i1 %4582, label %4590, label %4549, !llvm.loop !732

4583:                                             ; preds = %4545, %4575
  %4584 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1195, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

4585:                                             ; preds = %4558, %4567
  %4586 = phi ptr [ %4574, %4567 ], [ %4551, %4558 ]
  %4587 = phi i32 [ %4573, %4567 ], [ 1, %4558 ]
  %4588 = load i32, ptr %4586, align 4, !tbaa !5
  %4589 = add nsw i32 %4588, %4587
  store i32 %4589, ptr %4586, align 4, !tbaa !5
  br label %4590

4590:                                             ; preds = %4577, %4585, %4547, %4529
  %4591 = icmp eq i32 %4539, %5
  br i1 %4591, label %5500, label %4451, !llvm.loop !733

4592:                                             ; preds = %4288
  %4593 = getelementptr inbounds i32, ptr %3, i64 %19
  %4594 = load i32, ptr %4593, align 4, !tbaa !5
  %4595 = icmp eq i32 %4594, 0
  %4596 = icmp sgt i32 %5, 0
  br i1 %4595, label %4606, label %4597

4597:                                             ; preds = %4592
  br i1 %4596, label %4598, label %5500

4598:                                             ; preds = %4597
  %4599 = icmp sgt i32 %13, 1
  %4600 = icmp sgt i32 %13, 0
  %4601 = add i32 %13, -2
  %4602 = zext i32 %4601 to i64
  %4603 = zext i32 %13 to i64
  %4604 = add nuw i32 %5, 1
  %4605 = icmp eq i32 %13, 1
  br label %4748

4606:                                             ; preds = %4592
  br i1 %4596, label %4607, label %5500

4607:                                             ; preds = %4606
  %4608 = icmp sgt i32 %13, 1
  %4609 = icmp sgt i32 %13, 0
  %4610 = add i32 %13, -2
  %4611 = zext i32 %4610 to i64
  %4612 = zext i32 %13 to i64
  %4613 = add nuw i32 %5, 1
  %4614 = icmp eq i32 %13, 1
  br label %4615

4615:                                             ; preds = %4607, %4746
  %4616 = phi float [ 0.000000e+00, %4607 ], [ %4696, %4746 ]
  %4617 = phi i32 [ 0, %4607 ], [ %4698, %4746 ]
  %4618 = phi double [ 0.000000e+00, %4607 ], [ %4697, %4746 ]
  %4619 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4608, label %4620, label %4689

4620:                                             ; preds = %4615, %4679
  %4621 = phi i32 [ %4688, %4679 ], [ 0, %4615 ]
  %4622 = phi i64 [ %4630, %4679 ], [ %4612, %4615 ]
  %4623 = phi i64 [ %4687, %4679 ], [ %4611, %4615 ]
  %4624 = phi i32 [ %4685, %4679 ], [ %4619, %4615 ]
  %4625 = sub i32 %4610, %4621
  %4626 = tail call i32 @llvm.smin.i32(i32 %4625, i32 0)
  %4627 = sub i32 %4625, %4626
  %4628 = zext i32 %4627 to i64
  %4629 = add nuw nsw i64 %4628, 1
  %4630 = add nsw i64 %4622, -1
  %4631 = icmp ult i32 %4627, 31
  br i1 %4631, label %4667, label %4632

4632:                                             ; preds = %4620
  %4633 = and i64 %4629, 8589934560
  %4634 = sub i64 %4623, %4633
  br label %4635

4635:                                             ; preds = %4635, %4632
  %4636 = phi i64 [ 0, %4632 ], [ %4659, %4635 ]
  %4637 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4632 ], [ %4655, %4635 ]
  %4638 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4632 ], [ %4656, %4635 ]
  %4639 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4632 ], [ %4657, %4635 ]
  %4640 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4632 ], [ %4658, %4635 ]
  %4641 = sub i64 %4623, %4636
  %4642 = getelementptr inbounds i32, ptr %9, i64 %4641
  %4643 = getelementptr inbounds i32, ptr %4642, i64 -7
  %4644 = load <8 x i32>, ptr %4643, align 4, !tbaa !5
  %4645 = shufflevector <8 x i32> %4644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4646 = getelementptr inbounds i32, ptr %4642, i64 -15
  %4647 = load <8 x i32>, ptr %4646, align 4, !tbaa !5
  %4648 = shufflevector <8 x i32> %4647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4649 = getelementptr inbounds i32, ptr %4642, i64 -23
  %4650 = load <8 x i32>, ptr %4649, align 4, !tbaa !5
  %4651 = shufflevector <8 x i32> %4650, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4652 = getelementptr inbounds i32, ptr %4642, i64 -31
  %4653 = load <8 x i32>, ptr %4652, align 4, !tbaa !5
  %4654 = shufflevector <8 x i32> %4653, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4655 = mul <8 x i32> %4645, %4637
  %4656 = mul <8 x i32> %4648, %4638
  %4657 = mul <8 x i32> %4651, %4639
  %4658 = mul <8 x i32> %4654, %4640
  %4659 = add nuw i64 %4636, 32
  %4660 = icmp eq i64 %4659, %4633
  br i1 %4660, label %4661, label %4635, !llvm.loop !734

4661:                                             ; preds = %4635
  %4662 = mul <8 x i32> %4656, %4655
  %4663 = mul <8 x i32> %4657, %4662
  %4664 = mul <8 x i32> %4658, %4663
  %4665 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4664)
  %4666 = icmp eq i64 %4629, %4633
  br i1 %4666, label %4679, label %4667

4667:                                             ; preds = %4620, %4661
  %4668 = phi i64 [ %4623, %4620 ], [ %4634, %4661 ]
  %4669 = phi i32 [ 1, %4620 ], [ %4665, %4661 ]
  br label %4670

4670:                                             ; preds = %4667, %4670
  %4671 = phi i64 [ %4676, %4670 ], [ %4668, %4667 ]
  %4672 = phi i32 [ %4675, %4670 ], [ %4669, %4667 ]
  %4673 = getelementptr inbounds i32, ptr %9, i64 %4671
  %4674 = load i32, ptr %4673, align 4, !tbaa !5
  %4675 = mul nsw i32 %4674, %4672
  %4676 = add nsw i64 %4671, -1
  %4677 = trunc i64 %4671 to i32
  %4678 = icmp sgt i32 %4677, 0
  br i1 %4678, label %4670, label %4679, !llvm.loop !735

4679:                                             ; preds = %4670, %4661
  %4680 = phi i32 [ %4665, %4661 ], [ %4675, %4670 ]
  %4681 = and i64 %4630, 4294967295
  %4682 = getelementptr inbounds i32, ptr %6, i64 %4681
  %4683 = load i32, ptr %4682, align 4, !tbaa !5
  %4684 = mul nsw i32 %4683, %4680
  %4685 = add nsw i32 %4684, %4624
  %4686 = icmp sgt i64 %4622, 2
  %4687 = add nsw i64 %4623, -1
  %4688 = add i32 %4621, 1
  br i1 %4686, label %4620, label %4689, !llvm.loop !736

4689:                                             ; preds = %4679, %4615
  %4690 = phi i32 [ %4619, %4615 ], [ %4685, %4679 ]
  %4691 = sext i32 %4690 to i64
  %4692 = getelementptr inbounds i32, ptr %4280, i64 %4691
  %4693 = load i32, ptr %4692, align 4, !tbaa !5
  %4694 = sitofp i32 %4693 to float
  %4695 = fmul fast float %4694, %4694
  %4696 = fadd fast float %4695, %4616
  %4697 = fadd fast double %4618, 1.000000e+00
  %4698 = add nuw nsw i32 %4617, 1
  br i1 %4609, label %4699, label %4746

4699:                                             ; preds = %4689
  %4700 = load i32, ptr %4, align 4, !tbaa !5
  %4701 = load i32, ptr %12, align 4, !tbaa !5
  %4702 = add nsw i32 %4701, -1
  %4703 = icmp slt i32 %4700, %4702
  br i1 %4703, label %4723, label %4704

4704:                                             ; preds = %4699
  %4705 = icmp eq i32 %4700, %4702
  br i1 %4705, label %4706, label %4739

4706:                                             ; preds = %4704
  store i32 0, ptr %4, align 4, !tbaa !5
  %4707 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4707, ptr %6, align 4, !tbaa !5
  br i1 %4614, label %4746, label %4708

4708:                                             ; preds = %4706, %4733
  %4709 = phi i64 [ %4737, %4733 ], [ 1, %4706 ]
  %4710 = getelementptr inbounds i32, ptr %4, i64 %4709
  %4711 = load i32, ptr %4710, align 4, !tbaa !5
  %4712 = getelementptr inbounds i32, ptr %12, i64 %4709
  %4713 = load i32, ptr %4712, align 4, !tbaa !5
  %4714 = add nsw i32 %4713, -1
  %4715 = icmp slt i32 %4711, %4714
  br i1 %4715, label %4716, label %4731

4716:                                             ; preds = %4708
  br i1 %4703, label %4723, label %4717

4717:                                             ; preds = %4716
  %4718 = getelementptr inbounds i32, ptr %7, i64 %4709
  %4719 = load i32, ptr %4718, align 4, !tbaa !5
  %4720 = getelementptr inbounds i32, ptr %6, i64 %4709
  %4721 = load i32, ptr %4720, align 4, !tbaa !5
  %4722 = add nsw i32 %4721, %4719
  store i32 %4722, ptr %4720, align 4, !tbaa !5
  br label %4741

4723:                                             ; preds = %4699, %4716
  %4724 = phi i32 [ %4711, %4716 ], [ %4700, %4699 ]
  %4725 = phi ptr [ %4710, %4716 ], [ %4, %4699 ]
  %4726 = phi i64 [ %4709, %4716 ], [ 0, %4699 ]
  %4727 = add nsw i32 %4724, 1
  store i32 %4727, ptr %4725, align 4, !tbaa !5
  %4728 = getelementptr inbounds i32, ptr %7, i64 %4726
  %4729 = load i32, ptr %4728, align 4, !tbaa !5
  %4730 = getelementptr inbounds i32, ptr %6, i64 %4726
  br label %4741

4731:                                             ; preds = %4708
  %4732 = icmp eq i32 %4711, %4714
  br i1 %4732, label %4733, label %4739

4733:                                             ; preds = %4731
  store i32 0, ptr %4710, align 4, !tbaa !5
  %4734 = getelementptr inbounds i32, ptr %8, i64 %4709
  %4735 = load i32, ptr %4734, align 4, !tbaa !5
  %4736 = getelementptr inbounds i32, ptr %6, i64 %4709
  store i32 %4735, ptr %4736, align 4, !tbaa !5
  %4737 = add nuw nsw i64 %4709, 1
  %4738 = icmp eq i64 %4737, %4612
  br i1 %4738, label %4746, label %4708, !llvm.loop !737

4739:                                             ; preds = %4704, %4731
  store float %4696, ptr %4282, align 4, !tbaa !162
  %4740 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1195, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

4741:                                             ; preds = %4717, %4723
  %4742 = phi ptr [ %4730, %4723 ], [ %4710, %4717 ]
  %4743 = phi i32 [ %4729, %4723 ], [ 1, %4717 ]
  %4744 = load i32, ptr %4742, align 4, !tbaa !5
  %4745 = add nsw i32 %4744, %4743
  store i32 %4745, ptr %4742, align 4, !tbaa !5
  br label %4746

4746:                                             ; preds = %4733, %4741, %4706, %4689
  %4747 = icmp eq i32 %4698, %5
  br i1 %4747, label %5498, label %4615, !llvm.loop !738

4748:                                             ; preds = %4598, %4884
  %4749 = phi float [ 0.000000e+00, %4598 ], [ %4832, %4884 ]
  %4750 = phi i32 [ 0, %4598 ], [ %4833, %4884 ]
  %4751 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4599, label %4752, label %4821

4752:                                             ; preds = %4748, %4811
  %4753 = phi i32 [ %4820, %4811 ], [ 0, %4748 ]
  %4754 = phi i64 [ %4762, %4811 ], [ %4603, %4748 ]
  %4755 = phi i64 [ %4819, %4811 ], [ %4602, %4748 ]
  %4756 = phi i32 [ %4817, %4811 ], [ %4751, %4748 ]
  %4757 = sub i32 %4601, %4753
  %4758 = tail call i32 @llvm.smin.i32(i32 %4757, i32 0)
  %4759 = sub i32 %4757, %4758
  %4760 = zext i32 %4759 to i64
  %4761 = add nuw nsw i64 %4760, 1
  %4762 = add nsw i64 %4754, -1
  %4763 = icmp ult i32 %4759, 31
  br i1 %4763, label %4799, label %4764

4764:                                             ; preds = %4752
  %4765 = and i64 %4761, 8589934560
  %4766 = sub i64 %4755, %4765
  br label %4767

4767:                                             ; preds = %4767, %4764
  %4768 = phi i64 [ 0, %4764 ], [ %4791, %4767 ]
  %4769 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4764 ], [ %4787, %4767 ]
  %4770 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4764 ], [ %4788, %4767 ]
  %4771 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4764 ], [ %4789, %4767 ]
  %4772 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4764 ], [ %4790, %4767 ]
  %4773 = sub i64 %4755, %4768
  %4774 = getelementptr inbounds i32, ptr %11, i64 %4773
  %4775 = getelementptr inbounds i32, ptr %4774, i64 -7
  %4776 = load <8 x i32>, ptr %4775, align 4, !tbaa !5
  %4777 = shufflevector <8 x i32> %4776, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4778 = getelementptr inbounds i32, ptr %4774, i64 -15
  %4779 = load <8 x i32>, ptr %4778, align 4, !tbaa !5
  %4780 = shufflevector <8 x i32> %4779, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4781 = getelementptr inbounds i32, ptr %4774, i64 -23
  %4782 = load <8 x i32>, ptr %4781, align 4, !tbaa !5
  %4783 = shufflevector <8 x i32> %4782, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4784 = getelementptr inbounds i32, ptr %4774, i64 -31
  %4785 = load <8 x i32>, ptr %4784, align 4, !tbaa !5
  %4786 = shufflevector <8 x i32> %4785, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4787 = mul <8 x i32> %4777, %4769
  %4788 = mul <8 x i32> %4780, %4770
  %4789 = mul <8 x i32> %4783, %4771
  %4790 = mul <8 x i32> %4786, %4772
  %4791 = add nuw i64 %4768, 32
  %4792 = icmp eq i64 %4791, %4765
  br i1 %4792, label %4793, label %4767, !llvm.loop !739

4793:                                             ; preds = %4767
  %4794 = mul <8 x i32> %4788, %4787
  %4795 = mul <8 x i32> %4789, %4794
  %4796 = mul <8 x i32> %4790, %4795
  %4797 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4796)
  %4798 = icmp eq i64 %4761, %4765
  br i1 %4798, label %4811, label %4799

4799:                                             ; preds = %4752, %4793
  %4800 = phi i64 [ %4755, %4752 ], [ %4766, %4793 ]
  %4801 = phi i32 [ 1, %4752 ], [ %4797, %4793 ]
  br label %4802

4802:                                             ; preds = %4799, %4802
  %4803 = phi i64 [ %4808, %4802 ], [ %4800, %4799 ]
  %4804 = phi i32 [ %4807, %4802 ], [ %4801, %4799 ]
  %4805 = getelementptr inbounds i32, ptr %11, i64 %4803
  %4806 = load i32, ptr %4805, align 4, !tbaa !5
  %4807 = mul nsw i32 %4806, %4804
  %4808 = add nsw i64 %4803, -1
  %4809 = trunc i64 %4803 to i32
  %4810 = icmp sgt i32 %4809, 0
  br i1 %4810, label %4802, label %4811, !llvm.loop !740

4811:                                             ; preds = %4802, %4793
  %4812 = phi i32 [ %4797, %4793 ], [ %4807, %4802 ]
  %4813 = and i64 %4762, 4294967295
  %4814 = getelementptr inbounds i32, ptr %6, i64 %4813
  %4815 = load i32, ptr %4814, align 4, !tbaa !5
  %4816 = mul nsw i32 %4815, %4812
  %4817 = add nsw i32 %4816, %4756
  %4818 = icmp sgt i64 %4754, 2
  %4819 = add nsw i64 %4755, -1
  %4820 = add i32 %4753, 1
  br i1 %4818, label %4752, label %4821, !llvm.loop !741

4821:                                             ; preds = %4811, %4748
  %4822 = phi i32 [ %4751, %4748 ], [ %4817, %4811 ]
  %4823 = icmp slt i32 %4822, %5
  br i1 %4823, label %4826, label %4824

4824:                                             ; preds = %4821
  %4825 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1195, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

4826:                                             ; preds = %4821
  %4827 = sext i32 %4822 to i64
  %4828 = getelementptr inbounds i32, ptr %4280, i64 %4827
  %4829 = load i32, ptr %4828, align 4, !tbaa !5
  %4830 = sitofp i32 %4829 to float
  %4831 = fmul fast float %4830, %4830
  %4832 = fadd fast float %4831, %4749
  store float %4832, ptr %4282, align 4, !tbaa !162
  %4833 = add nuw nsw i32 %4750, 1
  br i1 %4600, label %4834, label %4884

4834:                                             ; preds = %4826
  %4835 = load i32, ptr %4, align 4, !tbaa !5
  %4836 = load i32, ptr %12, align 4, !tbaa !5
  %4837 = add nsw i32 %4836, -1
  %4838 = icmp slt i32 %4835, %4837
  br i1 %4838, label %4861, label %4839

4839:                                             ; preds = %4834
  %4840 = icmp eq i32 %4835, %4837
  br i1 %4840, label %4841, label %4877

4841:                                             ; preds = %4839
  store i32 0, ptr %4, align 4, !tbaa !5
  %4842 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4842, ptr %6, align 4, !tbaa !5
  br i1 %4605, label %4884, label %4843

4843:                                             ; preds = %4841, %4871
  %4844 = phi i64 [ %4875, %4871 ], [ 1, %4841 ]
  %4845 = getelementptr inbounds i32, ptr %4, i64 %4844
  %4846 = load i32, ptr %4845, align 4, !tbaa !5
  %4847 = getelementptr inbounds i32, ptr %12, i64 %4844
  %4848 = load i32, ptr %4847, align 4, !tbaa !5
  %4849 = add nsw i32 %4848, -1
  %4850 = icmp slt i32 %4846, %4849
  br i1 %4850, label %4851, label %4869

4851:                                             ; preds = %4843
  br i1 %4838, label %4861, label %4852

4852:                                             ; preds = %4851
  %4853 = shl i64 %4844, 32
  %4854 = add i64 %4853, -4294967296
  %4855 = ashr exact i64 %4854, 32
  %4856 = getelementptr inbounds i32, ptr %7, i64 %4855
  %4857 = load i32, ptr %4856, align 4, !tbaa !5
  %4858 = getelementptr inbounds i32, ptr %6, i64 %4844
  %4859 = load i32, ptr %4858, align 4, !tbaa !5
  %4860 = add nsw i32 %4859, %4857
  store i32 %4860, ptr %4858, align 4, !tbaa !5
  br label %4879

4861:                                             ; preds = %4834, %4851
  %4862 = phi i32 [ %4846, %4851 ], [ %4835, %4834 ]
  %4863 = phi ptr [ %4845, %4851 ], [ %4, %4834 ]
  %4864 = phi i64 [ %4844, %4851 ], [ 0, %4834 ]
  %4865 = add nsw i32 %4862, 1
  store i32 %4865, ptr %4863, align 4, !tbaa !5
  %4866 = getelementptr inbounds i32, ptr %7, i64 %4864
  %4867 = load i32, ptr %4866, align 4, !tbaa !5
  %4868 = getelementptr inbounds i32, ptr %6, i64 %4864
  br label %4879

4869:                                             ; preds = %4843
  %4870 = icmp eq i32 %4846, %4849
  br i1 %4870, label %4871, label %4877

4871:                                             ; preds = %4869
  store i32 0, ptr %4845, align 4, !tbaa !5
  %4872 = getelementptr inbounds i32, ptr %8, i64 %4844
  %4873 = load i32, ptr %4872, align 4, !tbaa !5
  %4874 = getelementptr inbounds i32, ptr %6, i64 %4844
  store i32 %4873, ptr %4874, align 4, !tbaa !5
  %4875 = add nuw nsw i64 %4844, 1
  %4876 = icmp eq i64 %4875, %4603
  br i1 %4876, label %4884, label %4843, !llvm.loop !742

4877:                                             ; preds = %4839, %4869
  %4878 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1195, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

4879:                                             ; preds = %4852, %4861
  %4880 = phi ptr [ %4868, %4861 ], [ %4845, %4852 ]
  %4881 = phi i32 [ %4867, %4861 ], [ 1, %4852 ]
  %4882 = load i32, ptr %4880, align 4, !tbaa !5
  %4883 = add nsw i32 %4882, %4881
  store i32 %4883, ptr %4880, align 4, !tbaa !5
  br label %4884

4884:                                             ; preds = %4871, %4879, %4841, %4826
  %4885 = icmp eq i32 %4833, %5
  br i1 %4885, label %5500, label %4748, !llvm.loop !743

4886:                                             ; preds = %4288
  %4887 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1195, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

4888:                                             ; preds = %18
  %4889 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4890 = load ptr, ptr %4889, align 8, !tbaa !9
  %4891 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4892 = load ptr, ptr %4891, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4892, align 8, !tbaa !18
  %4893 = icmp eq i32 %13, 0
  br i1 %4893, label %4894, label %4898

4894:                                             ; preds = %4888
  %4895 = load i32, ptr %4890, align 4, !tbaa !5
  %4896 = sitofp i32 %4895 to double
  %4897 = fmul fast double %4896, %4896
  store double %4897, ptr %4892, align 8, !tbaa !18
  br label %5500

4898:                                             ; preds = %4888
  switch i32 %1, label %5490 [
    i32 1, label %4899
    i32 0, label %5196
  ]

4899:                                             ; preds = %4898
  %4900 = getelementptr inbounds i32, ptr %3, i64 %19
  %4901 = load i32, ptr %4900, align 4, !tbaa !5
  %4902 = icmp eq i32 %4901, 0
  %4903 = icmp sgt i32 %5, 0
  br i1 %4902, label %4913, label %4904

4904:                                             ; preds = %4899
  br i1 %4903, label %4905, label %5500

4905:                                             ; preds = %4904
  %4906 = icmp sgt i32 %13, 1
  %4907 = icmp sgt i32 %13, 0
  %4908 = add i32 %13, -2
  %4909 = zext i32 %4908 to i64
  %4910 = zext i32 %13 to i64
  %4911 = add nuw i32 %5, 1
  %4912 = icmp eq i32 %13, 1
  br label %5058

4913:                                             ; preds = %4899
  br i1 %4903, label %4914, label %5500

4914:                                             ; preds = %4913
  %4915 = icmp sgt i32 %13, 1
  %4916 = icmp sgt i32 %13, 0
  %4917 = add i32 %13, -2
  %4918 = zext i32 %4917 to i64
  %4919 = zext i32 %13 to i64
  %4920 = add nuw i32 %5, 1
  %4921 = icmp eq i32 %13, 1
  br label %4922

4922:                                             ; preds = %4914, %5056
  %4923 = phi double [ 0.000000e+00, %4914 ], [ %5006, %5056 ]
  %4924 = phi i32 [ 0, %4914 ], [ %5008, %5056 ]
  %4925 = phi double [ 0.000000e+00, %4914 ], [ %5007, %5056 ]
  %4926 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4915, label %4927, label %4996

4927:                                             ; preds = %4922, %4986
  %4928 = phi i32 [ %4995, %4986 ], [ 0, %4922 ]
  %4929 = phi i64 [ %4937, %4986 ], [ %4919, %4922 ]
  %4930 = phi i64 [ %4994, %4986 ], [ %4918, %4922 ]
  %4931 = phi i32 [ %4992, %4986 ], [ %4926, %4922 ]
  %4932 = sub i32 %4917, %4928
  %4933 = tail call i32 @llvm.smin.i32(i32 %4932, i32 0)
  %4934 = sub i32 %4932, %4933
  %4935 = zext i32 %4934 to i64
  %4936 = add nuw nsw i64 %4935, 1
  %4937 = add nsw i64 %4929, -1
  %4938 = icmp ult i32 %4934, 31
  br i1 %4938, label %4974, label %4939

4939:                                             ; preds = %4927
  %4940 = and i64 %4936, 8589934560
  %4941 = sub i64 %4930, %4940
  br label %4942

4942:                                             ; preds = %4942, %4939
  %4943 = phi i64 [ 0, %4939 ], [ %4966, %4942 ]
  %4944 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4939 ], [ %4962, %4942 ]
  %4945 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4939 ], [ %4963, %4942 ]
  %4946 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4939 ], [ %4964, %4942 ]
  %4947 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4939 ], [ %4965, %4942 ]
  %4948 = sub i64 %4930, %4943
  %4949 = getelementptr inbounds i32, ptr %9, i64 %4948
  %4950 = getelementptr inbounds i32, ptr %4949, i64 -7
  %4951 = load <8 x i32>, ptr %4950, align 4, !tbaa !5
  %4952 = shufflevector <8 x i32> %4951, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4953 = getelementptr inbounds i32, ptr %4949, i64 -15
  %4954 = load <8 x i32>, ptr %4953, align 4, !tbaa !5
  %4955 = shufflevector <8 x i32> %4954, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4956 = getelementptr inbounds i32, ptr %4949, i64 -23
  %4957 = load <8 x i32>, ptr %4956, align 4, !tbaa !5
  %4958 = shufflevector <8 x i32> %4957, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4959 = getelementptr inbounds i32, ptr %4949, i64 -31
  %4960 = load <8 x i32>, ptr %4959, align 4, !tbaa !5
  %4961 = shufflevector <8 x i32> %4960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4962 = mul <8 x i32> %4952, %4944
  %4963 = mul <8 x i32> %4955, %4945
  %4964 = mul <8 x i32> %4958, %4946
  %4965 = mul <8 x i32> %4961, %4947
  %4966 = add nuw i64 %4943, 32
  %4967 = icmp eq i64 %4966, %4940
  br i1 %4967, label %4968, label %4942, !llvm.loop !744

4968:                                             ; preds = %4942
  %4969 = mul <8 x i32> %4963, %4962
  %4970 = mul <8 x i32> %4964, %4969
  %4971 = mul <8 x i32> %4965, %4970
  %4972 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4971)
  %4973 = icmp eq i64 %4936, %4940
  br i1 %4973, label %4986, label %4974

4974:                                             ; preds = %4927, %4968
  %4975 = phi i64 [ %4930, %4927 ], [ %4941, %4968 ]
  %4976 = phi i32 [ 1, %4927 ], [ %4972, %4968 ]
  br label %4977

4977:                                             ; preds = %4974, %4977
  %4978 = phi i64 [ %4983, %4977 ], [ %4975, %4974 ]
  %4979 = phi i32 [ %4982, %4977 ], [ %4976, %4974 ]
  %4980 = getelementptr inbounds i32, ptr %9, i64 %4978
  %4981 = load i32, ptr %4980, align 4, !tbaa !5
  %4982 = mul nsw i32 %4981, %4979
  %4983 = add nsw i64 %4978, -1
  %4984 = trunc i64 %4978 to i32
  %4985 = icmp sgt i32 %4984, 0
  br i1 %4985, label %4977, label %4986, !llvm.loop !745

4986:                                             ; preds = %4977, %4968
  %4987 = phi i32 [ %4972, %4968 ], [ %4982, %4977 ]
  %4988 = and i64 %4937, 4294967295
  %4989 = getelementptr inbounds i32, ptr %6, i64 %4988
  %4990 = load i32, ptr %4989, align 4, !tbaa !5
  %4991 = mul nsw i32 %4990, %4987
  %4992 = add nsw i32 %4991, %4931
  %4993 = icmp sgt i64 %4929, 2
  %4994 = add nsw i64 %4930, -1
  %4995 = add i32 %4928, 1
  br i1 %4993, label %4927, label %4996, !llvm.loop !746

4996:                                             ; preds = %4986, %4922
  %4997 = phi i32 [ %4926, %4922 ], [ %4992, %4986 ]
  %4998 = sext i32 %4997 to i64
  %4999 = getelementptr inbounds double, ptr %2, i64 %4998
  %5000 = load double, ptr %4999, align 8, !tbaa !18
  %5001 = getelementptr inbounds i32, ptr %4890, i64 %4998
  %5002 = load i32, ptr %5001, align 4, !tbaa !5
  %5003 = sitofp i32 %5002 to double
  %5004 = fmul fast double %5000, %5003
  %5005 = fmul fast double %5004, %5004
  %5006 = fadd fast double %5005, %4923
  store double %5006, ptr %4892, align 8, !tbaa !18
  %5007 = fadd fast double %5000, %4925
  %5008 = add nuw nsw i32 %4924, 1
  br i1 %4916, label %5009, label %5056

5009:                                             ; preds = %4996
  %5010 = load i32, ptr %4, align 4, !tbaa !5
  %5011 = load i32, ptr %12, align 4, !tbaa !5
  %5012 = add nsw i32 %5011, -1
  %5013 = icmp slt i32 %5010, %5012
  br i1 %5013, label %5033, label %5014

5014:                                             ; preds = %5009
  %5015 = icmp eq i32 %5010, %5012
  br i1 %5015, label %5016, label %5049

5016:                                             ; preds = %5014
  store i32 0, ptr %4, align 4, !tbaa !5
  %5017 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5017, ptr %6, align 4, !tbaa !5
  br i1 %4921, label %5056, label %5018

5018:                                             ; preds = %5016, %5043
  %5019 = phi i64 [ %5047, %5043 ], [ 1, %5016 ]
  %5020 = getelementptr inbounds i32, ptr %4, i64 %5019
  %5021 = load i32, ptr %5020, align 4, !tbaa !5
  %5022 = getelementptr inbounds i32, ptr %12, i64 %5019
  %5023 = load i32, ptr %5022, align 4, !tbaa !5
  %5024 = add nsw i32 %5023, -1
  %5025 = icmp slt i32 %5021, %5024
  br i1 %5025, label %5026, label %5041

5026:                                             ; preds = %5018
  br i1 %5013, label %5033, label %5027

5027:                                             ; preds = %5026
  %5028 = getelementptr inbounds i32, ptr %7, i64 %5019
  %5029 = load i32, ptr %5028, align 4, !tbaa !5
  %5030 = getelementptr inbounds i32, ptr %6, i64 %5019
  %5031 = load i32, ptr %5030, align 4, !tbaa !5
  %5032 = add nsw i32 %5031, %5029
  store i32 %5032, ptr %5030, align 4, !tbaa !5
  br label %5051

5033:                                             ; preds = %5009, %5026
  %5034 = phi i32 [ %5021, %5026 ], [ %5010, %5009 ]
  %5035 = phi ptr [ %5020, %5026 ], [ %4, %5009 ]
  %5036 = phi i64 [ %5019, %5026 ], [ 0, %5009 ]
  %5037 = add nsw i32 %5034, 1
  store i32 %5037, ptr %5035, align 4, !tbaa !5
  %5038 = getelementptr inbounds i32, ptr %7, i64 %5036
  %5039 = load i32, ptr %5038, align 4, !tbaa !5
  %5040 = getelementptr inbounds i32, ptr %6, i64 %5036
  br label %5051

5041:                                             ; preds = %5018
  %5042 = icmp eq i32 %5021, %5024
  br i1 %5042, label %5043, label %5049

5043:                                             ; preds = %5041
  store i32 0, ptr %5020, align 4, !tbaa !5
  %5044 = getelementptr inbounds i32, ptr %8, i64 %5019
  %5045 = load i32, ptr %5044, align 4, !tbaa !5
  %5046 = getelementptr inbounds i32, ptr %6, i64 %5019
  store i32 %5045, ptr %5046, align 4, !tbaa !5
  %5047 = add nuw nsw i64 %5019, 1
  %5048 = icmp eq i64 %5047, %4919
  br i1 %5048, label %5056, label %5018, !llvm.loop !747

5049:                                             ; preds = %5014, %5041
  %5050 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1200, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

5051:                                             ; preds = %5027, %5033
  %5052 = phi ptr [ %5040, %5033 ], [ %5020, %5027 ]
  %5053 = phi i32 [ %5039, %5033 ], [ 1, %5027 ]
  %5054 = load i32, ptr %5052, align 4, !tbaa !5
  %5055 = add nsw i32 %5054, %5053
  store i32 %5055, ptr %5052, align 4, !tbaa !5
  br label %5056

5056:                                             ; preds = %5043, %5051, %5016, %4996
  %5057 = icmp eq i32 %5008, %5
  br i1 %5057, label %5500, label %4922, !llvm.loop !748

5058:                                             ; preds = %4905, %5194
  %5059 = phi double [ 0.000000e+00, %4905 ], [ %5142, %5194 ]
  %5060 = phi i32 [ 0, %4905 ], [ %5143, %5194 ]
  %5061 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4906, label %5062, label %5131

5062:                                             ; preds = %5058, %5121
  %5063 = phi i32 [ %5130, %5121 ], [ 0, %5058 ]
  %5064 = phi i64 [ %5072, %5121 ], [ %4910, %5058 ]
  %5065 = phi i64 [ %5129, %5121 ], [ %4909, %5058 ]
  %5066 = phi i32 [ %5127, %5121 ], [ %5061, %5058 ]
  %5067 = sub i32 %4908, %5063
  %5068 = tail call i32 @llvm.smin.i32(i32 %5067, i32 0)
  %5069 = sub i32 %5067, %5068
  %5070 = zext i32 %5069 to i64
  %5071 = add nuw nsw i64 %5070, 1
  %5072 = add nsw i64 %5064, -1
  %5073 = icmp ult i32 %5069, 31
  br i1 %5073, label %5109, label %5074

5074:                                             ; preds = %5062
  %5075 = and i64 %5071, 8589934560
  %5076 = sub i64 %5065, %5075
  br label %5077

5077:                                             ; preds = %5077, %5074
  %5078 = phi i64 [ 0, %5074 ], [ %5101, %5077 ]
  %5079 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5074 ], [ %5097, %5077 ]
  %5080 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5074 ], [ %5098, %5077 ]
  %5081 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5074 ], [ %5099, %5077 ]
  %5082 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5074 ], [ %5100, %5077 ]
  %5083 = sub i64 %5065, %5078
  %5084 = getelementptr inbounds i32, ptr %11, i64 %5083
  %5085 = getelementptr inbounds i32, ptr %5084, i64 -7
  %5086 = load <8 x i32>, ptr %5085, align 4, !tbaa !5
  %5087 = shufflevector <8 x i32> %5086, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5088 = getelementptr inbounds i32, ptr %5084, i64 -15
  %5089 = load <8 x i32>, ptr %5088, align 4, !tbaa !5
  %5090 = shufflevector <8 x i32> %5089, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5091 = getelementptr inbounds i32, ptr %5084, i64 -23
  %5092 = load <8 x i32>, ptr %5091, align 4, !tbaa !5
  %5093 = shufflevector <8 x i32> %5092, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5094 = getelementptr inbounds i32, ptr %5084, i64 -31
  %5095 = load <8 x i32>, ptr %5094, align 4, !tbaa !5
  %5096 = shufflevector <8 x i32> %5095, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5097 = mul <8 x i32> %5087, %5079
  %5098 = mul <8 x i32> %5090, %5080
  %5099 = mul <8 x i32> %5093, %5081
  %5100 = mul <8 x i32> %5096, %5082
  %5101 = add nuw i64 %5078, 32
  %5102 = icmp eq i64 %5101, %5075
  br i1 %5102, label %5103, label %5077, !llvm.loop !749

5103:                                             ; preds = %5077
  %5104 = mul <8 x i32> %5098, %5097
  %5105 = mul <8 x i32> %5099, %5104
  %5106 = mul <8 x i32> %5100, %5105
  %5107 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5106)
  %5108 = icmp eq i64 %5071, %5075
  br i1 %5108, label %5121, label %5109

5109:                                             ; preds = %5062, %5103
  %5110 = phi i64 [ %5065, %5062 ], [ %5076, %5103 ]
  %5111 = phi i32 [ 1, %5062 ], [ %5107, %5103 ]
  br label %5112

5112:                                             ; preds = %5109, %5112
  %5113 = phi i64 [ %5118, %5112 ], [ %5110, %5109 ]
  %5114 = phi i32 [ %5117, %5112 ], [ %5111, %5109 ]
  %5115 = getelementptr inbounds i32, ptr %11, i64 %5113
  %5116 = load i32, ptr %5115, align 4, !tbaa !5
  %5117 = mul nsw i32 %5116, %5114
  %5118 = add nsw i64 %5113, -1
  %5119 = trunc i64 %5113 to i32
  %5120 = icmp sgt i32 %5119, 0
  br i1 %5120, label %5112, label %5121, !llvm.loop !750

5121:                                             ; preds = %5112, %5103
  %5122 = phi i32 [ %5107, %5103 ], [ %5117, %5112 ]
  %5123 = and i64 %5072, 4294967295
  %5124 = getelementptr inbounds i32, ptr %6, i64 %5123
  %5125 = load i32, ptr %5124, align 4, !tbaa !5
  %5126 = mul nsw i32 %5125, %5122
  %5127 = add nsw i32 %5126, %5066
  %5128 = icmp sgt i64 %5064, 2
  %5129 = add nsw i64 %5065, -1
  %5130 = add i32 %5063, 1
  br i1 %5128, label %5062, label %5131, !llvm.loop !751

5131:                                             ; preds = %5121, %5058
  %5132 = phi i32 [ %5061, %5058 ], [ %5127, %5121 ]
  %5133 = icmp slt i32 %5132, %5
  br i1 %5133, label %5136, label %5134

5134:                                             ; preds = %5131
  %5135 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1200, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

5136:                                             ; preds = %5131
  %5137 = sext i32 %5132 to i64
  %5138 = getelementptr inbounds i32, ptr %4890, i64 %5137
  %5139 = load i32, ptr %5138, align 4, !tbaa !5
  %5140 = sitofp i32 %5139 to double
  %5141 = fmul fast double %5140, %5140
  %5142 = fadd fast double %5141, %5059
  store double %5142, ptr %4892, align 8, !tbaa !18
  %5143 = add nuw nsw i32 %5060, 1
  br i1 %4907, label %5144, label %5194

5144:                                             ; preds = %5136
  %5145 = load i32, ptr %4, align 4, !tbaa !5
  %5146 = load i32, ptr %12, align 4, !tbaa !5
  %5147 = add nsw i32 %5146, -1
  %5148 = icmp slt i32 %5145, %5147
  br i1 %5148, label %5171, label %5149

5149:                                             ; preds = %5144
  %5150 = icmp eq i32 %5145, %5147
  br i1 %5150, label %5151, label %5187

5151:                                             ; preds = %5149
  store i32 0, ptr %4, align 4, !tbaa !5
  %5152 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5152, ptr %6, align 4, !tbaa !5
  br i1 %4912, label %5194, label %5153

5153:                                             ; preds = %5151, %5181
  %5154 = phi i64 [ %5185, %5181 ], [ 1, %5151 ]
  %5155 = getelementptr inbounds i32, ptr %4, i64 %5154
  %5156 = load i32, ptr %5155, align 4, !tbaa !5
  %5157 = getelementptr inbounds i32, ptr %12, i64 %5154
  %5158 = load i32, ptr %5157, align 4, !tbaa !5
  %5159 = add nsw i32 %5158, -1
  %5160 = icmp slt i32 %5156, %5159
  br i1 %5160, label %5161, label %5179

5161:                                             ; preds = %5153
  br i1 %5148, label %5171, label %5162

5162:                                             ; preds = %5161
  %5163 = shl i64 %5154, 32
  %5164 = add i64 %5163, -4294967296
  %5165 = ashr exact i64 %5164, 32
  %5166 = getelementptr inbounds i32, ptr %7, i64 %5165
  %5167 = load i32, ptr %5166, align 4, !tbaa !5
  %5168 = getelementptr inbounds i32, ptr %6, i64 %5154
  %5169 = load i32, ptr %5168, align 4, !tbaa !5
  %5170 = add nsw i32 %5169, %5167
  store i32 %5170, ptr %5168, align 4, !tbaa !5
  br label %5189

5171:                                             ; preds = %5144, %5161
  %5172 = phi i32 [ %5156, %5161 ], [ %5145, %5144 ]
  %5173 = phi ptr [ %5155, %5161 ], [ %4, %5144 ]
  %5174 = phi i64 [ %5154, %5161 ], [ 0, %5144 ]
  %5175 = add nsw i32 %5172, 1
  store i32 %5175, ptr %5173, align 4, !tbaa !5
  %5176 = getelementptr inbounds i32, ptr %7, i64 %5174
  %5177 = load i32, ptr %5176, align 4, !tbaa !5
  %5178 = getelementptr inbounds i32, ptr %6, i64 %5174
  br label %5189

5179:                                             ; preds = %5153
  %5180 = icmp eq i32 %5156, %5159
  br i1 %5180, label %5181, label %5187

5181:                                             ; preds = %5179
  store i32 0, ptr %5155, align 4, !tbaa !5
  %5182 = getelementptr inbounds i32, ptr %8, i64 %5154
  %5183 = load i32, ptr %5182, align 4, !tbaa !5
  %5184 = getelementptr inbounds i32, ptr %6, i64 %5154
  store i32 %5183, ptr %5184, align 4, !tbaa !5
  %5185 = add nuw nsw i64 %5154, 1
  %5186 = icmp eq i64 %5185, %4910
  br i1 %5186, label %5194, label %5153, !llvm.loop !752

5187:                                             ; preds = %5149, %5179
  %5188 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1200, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

5189:                                             ; preds = %5162, %5171
  %5190 = phi ptr [ %5178, %5171 ], [ %5155, %5162 ]
  %5191 = phi i32 [ %5177, %5171 ], [ 1, %5162 ]
  %5192 = load i32, ptr %5190, align 4, !tbaa !5
  %5193 = add nsw i32 %5192, %5191
  store i32 %5193, ptr %5190, align 4, !tbaa !5
  br label %5194

5194:                                             ; preds = %5181, %5189, %5151, %5136
  %5195 = icmp eq i32 %5143, %5
  br i1 %5195, label %5500, label %5058, !llvm.loop !753

5196:                                             ; preds = %4898
  %5197 = getelementptr inbounds i32, ptr %3, i64 %19
  %5198 = load i32, ptr %5197, align 4, !tbaa !5
  %5199 = icmp eq i32 %5198, 0
  %5200 = icmp sgt i32 %5, 0
  br i1 %5199, label %5210, label %5201

5201:                                             ; preds = %5196
  br i1 %5200, label %5202, label %5500

5202:                                             ; preds = %5201
  %5203 = icmp sgt i32 %13, 1
  %5204 = icmp sgt i32 %13, 0
  %5205 = add i32 %13, -2
  %5206 = zext i32 %5205 to i64
  %5207 = zext i32 %13 to i64
  %5208 = add nuw i32 %5, 1
  %5209 = icmp eq i32 %13, 1
  br label %5352

5210:                                             ; preds = %5196
  br i1 %5200, label %5211, label %5500

5211:                                             ; preds = %5210
  %5212 = icmp sgt i32 %13, 1
  %5213 = icmp sgt i32 %13, 0
  %5214 = add i32 %13, -2
  %5215 = zext i32 %5214 to i64
  %5216 = zext i32 %13 to i64
  %5217 = add nuw i32 %5, 1
  %5218 = icmp eq i32 %13, 1
  br label %5219

5219:                                             ; preds = %5211, %5350
  %5220 = phi double [ 0.000000e+00, %5211 ], [ %5300, %5350 ]
  %5221 = phi i32 [ 0, %5211 ], [ %5302, %5350 ]
  %5222 = phi double [ 0.000000e+00, %5211 ], [ %5301, %5350 ]
  %5223 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5212, label %5224, label %5293

5224:                                             ; preds = %5219, %5283
  %5225 = phi i32 [ %5292, %5283 ], [ 0, %5219 ]
  %5226 = phi i64 [ %5234, %5283 ], [ %5216, %5219 ]
  %5227 = phi i64 [ %5291, %5283 ], [ %5215, %5219 ]
  %5228 = phi i32 [ %5289, %5283 ], [ %5223, %5219 ]
  %5229 = sub i32 %5214, %5225
  %5230 = tail call i32 @llvm.smin.i32(i32 %5229, i32 0)
  %5231 = sub i32 %5229, %5230
  %5232 = zext i32 %5231 to i64
  %5233 = add nuw nsw i64 %5232, 1
  %5234 = add nsw i64 %5226, -1
  %5235 = icmp ult i32 %5231, 31
  br i1 %5235, label %5271, label %5236

5236:                                             ; preds = %5224
  %5237 = and i64 %5233, 8589934560
  %5238 = sub i64 %5227, %5237
  br label %5239

5239:                                             ; preds = %5239, %5236
  %5240 = phi i64 [ 0, %5236 ], [ %5263, %5239 ]
  %5241 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5236 ], [ %5259, %5239 ]
  %5242 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5236 ], [ %5260, %5239 ]
  %5243 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5236 ], [ %5261, %5239 ]
  %5244 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5236 ], [ %5262, %5239 ]
  %5245 = sub i64 %5227, %5240
  %5246 = getelementptr inbounds i32, ptr %9, i64 %5245
  %5247 = getelementptr inbounds i32, ptr %5246, i64 -7
  %5248 = load <8 x i32>, ptr %5247, align 4, !tbaa !5
  %5249 = shufflevector <8 x i32> %5248, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5250 = getelementptr inbounds i32, ptr %5246, i64 -15
  %5251 = load <8 x i32>, ptr %5250, align 4, !tbaa !5
  %5252 = shufflevector <8 x i32> %5251, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5253 = getelementptr inbounds i32, ptr %5246, i64 -23
  %5254 = load <8 x i32>, ptr %5253, align 4, !tbaa !5
  %5255 = shufflevector <8 x i32> %5254, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5256 = getelementptr inbounds i32, ptr %5246, i64 -31
  %5257 = load <8 x i32>, ptr %5256, align 4, !tbaa !5
  %5258 = shufflevector <8 x i32> %5257, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5259 = mul <8 x i32> %5249, %5241
  %5260 = mul <8 x i32> %5252, %5242
  %5261 = mul <8 x i32> %5255, %5243
  %5262 = mul <8 x i32> %5258, %5244
  %5263 = add nuw i64 %5240, 32
  %5264 = icmp eq i64 %5263, %5237
  br i1 %5264, label %5265, label %5239, !llvm.loop !754

5265:                                             ; preds = %5239
  %5266 = mul <8 x i32> %5260, %5259
  %5267 = mul <8 x i32> %5261, %5266
  %5268 = mul <8 x i32> %5262, %5267
  %5269 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5268)
  %5270 = icmp eq i64 %5233, %5237
  br i1 %5270, label %5283, label %5271

5271:                                             ; preds = %5224, %5265
  %5272 = phi i64 [ %5227, %5224 ], [ %5238, %5265 ]
  %5273 = phi i32 [ 1, %5224 ], [ %5269, %5265 ]
  br label %5274

5274:                                             ; preds = %5271, %5274
  %5275 = phi i64 [ %5280, %5274 ], [ %5272, %5271 ]
  %5276 = phi i32 [ %5279, %5274 ], [ %5273, %5271 ]
  %5277 = getelementptr inbounds i32, ptr %9, i64 %5275
  %5278 = load i32, ptr %5277, align 4, !tbaa !5
  %5279 = mul nsw i32 %5278, %5276
  %5280 = add nsw i64 %5275, -1
  %5281 = trunc i64 %5275 to i32
  %5282 = icmp sgt i32 %5281, 0
  br i1 %5282, label %5274, label %5283, !llvm.loop !755

5283:                                             ; preds = %5274, %5265
  %5284 = phi i32 [ %5269, %5265 ], [ %5279, %5274 ]
  %5285 = and i64 %5234, 4294967295
  %5286 = getelementptr inbounds i32, ptr %6, i64 %5285
  %5287 = load i32, ptr %5286, align 4, !tbaa !5
  %5288 = mul nsw i32 %5287, %5284
  %5289 = add nsw i32 %5288, %5228
  %5290 = icmp sgt i64 %5226, 2
  %5291 = add nsw i64 %5227, -1
  %5292 = add i32 %5225, 1
  br i1 %5290, label %5224, label %5293, !llvm.loop !756

5293:                                             ; preds = %5283, %5219
  %5294 = phi i32 [ %5223, %5219 ], [ %5289, %5283 ]
  %5295 = sext i32 %5294 to i64
  %5296 = getelementptr inbounds i32, ptr %4890, i64 %5295
  %5297 = load i32, ptr %5296, align 4, !tbaa !5
  %5298 = sitofp i32 %5297 to double
  %5299 = fmul fast double %5298, %5298
  %5300 = fadd fast double %5299, %5220
  %5301 = fadd fast double %5222, 1.000000e+00
  %5302 = add nuw nsw i32 %5221, 1
  br i1 %5213, label %5303, label %5350

5303:                                             ; preds = %5293
  %5304 = load i32, ptr %4, align 4, !tbaa !5
  %5305 = load i32, ptr %12, align 4, !tbaa !5
  %5306 = add nsw i32 %5305, -1
  %5307 = icmp slt i32 %5304, %5306
  br i1 %5307, label %5327, label %5308

5308:                                             ; preds = %5303
  %5309 = icmp eq i32 %5304, %5306
  br i1 %5309, label %5310, label %5343

5310:                                             ; preds = %5308
  store i32 0, ptr %4, align 4, !tbaa !5
  %5311 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5311, ptr %6, align 4, !tbaa !5
  br i1 %5218, label %5350, label %5312

5312:                                             ; preds = %5310, %5337
  %5313 = phi i64 [ %5341, %5337 ], [ 1, %5310 ]
  %5314 = getelementptr inbounds i32, ptr %4, i64 %5313
  %5315 = load i32, ptr %5314, align 4, !tbaa !5
  %5316 = getelementptr inbounds i32, ptr %12, i64 %5313
  %5317 = load i32, ptr %5316, align 4, !tbaa !5
  %5318 = add nsw i32 %5317, -1
  %5319 = icmp slt i32 %5315, %5318
  br i1 %5319, label %5320, label %5335

5320:                                             ; preds = %5312
  br i1 %5307, label %5327, label %5321

5321:                                             ; preds = %5320
  %5322 = getelementptr inbounds i32, ptr %7, i64 %5313
  %5323 = load i32, ptr %5322, align 4, !tbaa !5
  %5324 = getelementptr inbounds i32, ptr %6, i64 %5313
  %5325 = load i32, ptr %5324, align 4, !tbaa !5
  %5326 = add nsw i32 %5325, %5323
  store i32 %5326, ptr %5324, align 4, !tbaa !5
  br label %5345

5327:                                             ; preds = %5303, %5320
  %5328 = phi i32 [ %5315, %5320 ], [ %5304, %5303 ]
  %5329 = phi ptr [ %5314, %5320 ], [ %4, %5303 ]
  %5330 = phi i64 [ %5313, %5320 ], [ 0, %5303 ]
  %5331 = add nsw i32 %5328, 1
  store i32 %5331, ptr %5329, align 4, !tbaa !5
  %5332 = getelementptr inbounds i32, ptr %7, i64 %5330
  %5333 = load i32, ptr %5332, align 4, !tbaa !5
  %5334 = getelementptr inbounds i32, ptr %6, i64 %5330
  br label %5345

5335:                                             ; preds = %5312
  %5336 = icmp eq i32 %5315, %5318
  br i1 %5336, label %5337, label %5343

5337:                                             ; preds = %5335
  store i32 0, ptr %5314, align 4, !tbaa !5
  %5338 = getelementptr inbounds i32, ptr %8, i64 %5313
  %5339 = load i32, ptr %5338, align 4, !tbaa !5
  %5340 = getelementptr inbounds i32, ptr %6, i64 %5313
  store i32 %5339, ptr %5340, align 4, !tbaa !5
  %5341 = add nuw nsw i64 %5313, 1
  %5342 = icmp eq i64 %5341, %5216
  br i1 %5342, label %5350, label %5312, !llvm.loop !757

5343:                                             ; preds = %5308, %5335
  store double %5300, ptr %4892, align 8, !tbaa !18
  %5344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1200, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

5345:                                             ; preds = %5321, %5327
  %5346 = phi ptr [ %5334, %5327 ], [ %5314, %5321 ]
  %5347 = phi i32 [ %5333, %5327 ], [ 1, %5321 ]
  %5348 = load i32, ptr %5346, align 4, !tbaa !5
  %5349 = add nsw i32 %5348, %5347
  store i32 %5349, ptr %5346, align 4, !tbaa !5
  br label %5350

5350:                                             ; preds = %5337, %5345, %5310, %5293
  %5351 = icmp eq i32 %5302, %5
  br i1 %5351, label %5499, label %5219, !llvm.loop !758

5352:                                             ; preds = %5202, %5488
  %5353 = phi double [ 0.000000e+00, %5202 ], [ %5436, %5488 ]
  %5354 = phi i32 [ 0, %5202 ], [ %5437, %5488 ]
  %5355 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5203, label %5356, label %5425

5356:                                             ; preds = %5352, %5415
  %5357 = phi i32 [ %5424, %5415 ], [ 0, %5352 ]
  %5358 = phi i64 [ %5366, %5415 ], [ %5207, %5352 ]
  %5359 = phi i64 [ %5423, %5415 ], [ %5206, %5352 ]
  %5360 = phi i32 [ %5421, %5415 ], [ %5355, %5352 ]
  %5361 = sub i32 %5205, %5357
  %5362 = tail call i32 @llvm.smin.i32(i32 %5361, i32 0)
  %5363 = sub i32 %5361, %5362
  %5364 = zext i32 %5363 to i64
  %5365 = add nuw nsw i64 %5364, 1
  %5366 = add nsw i64 %5358, -1
  %5367 = icmp ult i32 %5363, 31
  br i1 %5367, label %5403, label %5368

5368:                                             ; preds = %5356
  %5369 = and i64 %5365, 8589934560
  %5370 = sub i64 %5359, %5369
  br label %5371

5371:                                             ; preds = %5371, %5368
  %5372 = phi i64 [ 0, %5368 ], [ %5395, %5371 ]
  %5373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5368 ], [ %5391, %5371 ]
  %5374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5368 ], [ %5392, %5371 ]
  %5375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5368 ], [ %5393, %5371 ]
  %5376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5368 ], [ %5394, %5371 ]
  %5377 = sub i64 %5359, %5372
  %5378 = getelementptr inbounds i32, ptr %11, i64 %5377
  %5379 = getelementptr inbounds i32, ptr %5378, i64 -7
  %5380 = load <8 x i32>, ptr %5379, align 4, !tbaa !5
  %5381 = shufflevector <8 x i32> %5380, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5382 = getelementptr inbounds i32, ptr %5378, i64 -15
  %5383 = load <8 x i32>, ptr %5382, align 4, !tbaa !5
  %5384 = shufflevector <8 x i32> %5383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5385 = getelementptr inbounds i32, ptr %5378, i64 -23
  %5386 = load <8 x i32>, ptr %5385, align 4, !tbaa !5
  %5387 = shufflevector <8 x i32> %5386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5388 = getelementptr inbounds i32, ptr %5378, i64 -31
  %5389 = load <8 x i32>, ptr %5388, align 4, !tbaa !5
  %5390 = shufflevector <8 x i32> %5389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5391 = mul <8 x i32> %5381, %5373
  %5392 = mul <8 x i32> %5384, %5374
  %5393 = mul <8 x i32> %5387, %5375
  %5394 = mul <8 x i32> %5390, %5376
  %5395 = add nuw i64 %5372, 32
  %5396 = icmp eq i64 %5395, %5369
  br i1 %5396, label %5397, label %5371, !llvm.loop !759

5397:                                             ; preds = %5371
  %5398 = mul <8 x i32> %5392, %5391
  %5399 = mul <8 x i32> %5393, %5398
  %5400 = mul <8 x i32> %5394, %5399
  %5401 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5400)
  %5402 = icmp eq i64 %5365, %5369
  br i1 %5402, label %5415, label %5403

5403:                                             ; preds = %5356, %5397
  %5404 = phi i64 [ %5359, %5356 ], [ %5370, %5397 ]
  %5405 = phi i32 [ 1, %5356 ], [ %5401, %5397 ]
  br label %5406

5406:                                             ; preds = %5403, %5406
  %5407 = phi i64 [ %5412, %5406 ], [ %5404, %5403 ]
  %5408 = phi i32 [ %5411, %5406 ], [ %5405, %5403 ]
  %5409 = getelementptr inbounds i32, ptr %11, i64 %5407
  %5410 = load i32, ptr %5409, align 4, !tbaa !5
  %5411 = mul nsw i32 %5410, %5408
  %5412 = add nsw i64 %5407, -1
  %5413 = trunc i64 %5407 to i32
  %5414 = icmp sgt i32 %5413, 0
  br i1 %5414, label %5406, label %5415, !llvm.loop !760

5415:                                             ; preds = %5406, %5397
  %5416 = phi i32 [ %5401, %5397 ], [ %5411, %5406 ]
  %5417 = and i64 %5366, 4294967295
  %5418 = getelementptr inbounds i32, ptr %6, i64 %5417
  %5419 = load i32, ptr %5418, align 4, !tbaa !5
  %5420 = mul nsw i32 %5419, %5416
  %5421 = add nsw i32 %5420, %5360
  %5422 = icmp sgt i64 %5358, 2
  %5423 = add nsw i64 %5359, -1
  %5424 = add i32 %5357, 1
  br i1 %5422, label %5356, label %5425, !llvm.loop !761

5425:                                             ; preds = %5415, %5352
  %5426 = phi i32 [ %5355, %5352 ], [ %5421, %5415 ]
  %5427 = icmp slt i32 %5426, %5
  br i1 %5427, label %5430, label %5428

5428:                                             ; preds = %5425
  %5429 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1200, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5505

5430:                                             ; preds = %5425
  %5431 = sext i32 %5426 to i64
  %5432 = getelementptr inbounds i32, ptr %4890, i64 %5431
  %5433 = load i32, ptr %5432, align 4, !tbaa !5
  %5434 = sitofp i32 %5433 to double
  %5435 = fmul fast double %5434, %5434
  %5436 = fadd fast double %5435, %5353
  store double %5436, ptr %4892, align 8, !tbaa !18
  %5437 = add nuw nsw i32 %5354, 1
  br i1 %5204, label %5438, label %5488

5438:                                             ; preds = %5430
  %5439 = load i32, ptr %4, align 4, !tbaa !5
  %5440 = load i32, ptr %12, align 4, !tbaa !5
  %5441 = add nsw i32 %5440, -1
  %5442 = icmp slt i32 %5439, %5441
  br i1 %5442, label %5465, label %5443

5443:                                             ; preds = %5438
  %5444 = icmp eq i32 %5439, %5441
  br i1 %5444, label %5445, label %5481

5445:                                             ; preds = %5443
  store i32 0, ptr %4, align 4, !tbaa !5
  %5446 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5446, ptr %6, align 4, !tbaa !5
  br i1 %5209, label %5488, label %5447

5447:                                             ; preds = %5445, %5475
  %5448 = phi i64 [ %5479, %5475 ], [ 1, %5445 ]
  %5449 = getelementptr inbounds i32, ptr %4, i64 %5448
  %5450 = load i32, ptr %5449, align 4, !tbaa !5
  %5451 = getelementptr inbounds i32, ptr %12, i64 %5448
  %5452 = load i32, ptr %5451, align 4, !tbaa !5
  %5453 = add nsw i32 %5452, -1
  %5454 = icmp slt i32 %5450, %5453
  br i1 %5454, label %5455, label %5473

5455:                                             ; preds = %5447
  br i1 %5442, label %5465, label %5456

5456:                                             ; preds = %5455
  %5457 = shl i64 %5448, 32
  %5458 = add i64 %5457, -4294967296
  %5459 = ashr exact i64 %5458, 32
  %5460 = getelementptr inbounds i32, ptr %7, i64 %5459
  %5461 = load i32, ptr %5460, align 4, !tbaa !5
  %5462 = getelementptr inbounds i32, ptr %6, i64 %5448
  %5463 = load i32, ptr %5462, align 4, !tbaa !5
  %5464 = add nsw i32 %5463, %5461
  store i32 %5464, ptr %5462, align 4, !tbaa !5
  br label %5483

5465:                                             ; preds = %5438, %5455
  %5466 = phi i32 [ %5450, %5455 ], [ %5439, %5438 ]
  %5467 = phi ptr [ %5449, %5455 ], [ %4, %5438 ]
  %5468 = phi i64 [ %5448, %5455 ], [ 0, %5438 ]
  %5469 = add nsw i32 %5466, 1
  store i32 %5469, ptr %5467, align 4, !tbaa !5
  %5470 = getelementptr inbounds i32, ptr %7, i64 %5468
  %5471 = load i32, ptr %5470, align 4, !tbaa !5
  %5472 = getelementptr inbounds i32, ptr %6, i64 %5468
  br label %5483

5473:                                             ; preds = %5447
  %5474 = icmp eq i32 %5450, %5453
  br i1 %5474, label %5475, label %5481

5475:                                             ; preds = %5473
  store i32 0, ptr %5449, align 4, !tbaa !5
  %5476 = getelementptr inbounds i32, ptr %8, i64 %5448
  %5477 = load i32, ptr %5476, align 4, !tbaa !5
  %5478 = getelementptr inbounds i32, ptr %6, i64 %5448
  store i32 %5477, ptr %5478, align 4, !tbaa !5
  %5479 = add nuw nsw i64 %5448, 1
  %5480 = icmp eq i64 %5479, %5207
  br i1 %5480, label %5488, label %5447, !llvm.loop !762

5481:                                             ; preds = %5443, %5473
  %5482 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1200, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5505

5483:                                             ; preds = %5456, %5465
  %5484 = phi ptr [ %5472, %5465 ], [ %5449, %5456 ]
  %5485 = phi i32 [ %5471, %5465 ], [ 1, %5456 ]
  %5486 = load i32, ptr %5484, align 4, !tbaa !5
  %5487 = add nsw i32 %5486, %5485
  store i32 %5487, ptr %5484, align 4, !tbaa !5
  br label %5488

5488:                                             ; preds = %5475, %5483, %5445, %5430
  %5489 = icmp eq i32 %5437, %5
  br i1 %5489, label %5500, label %5352, !llvm.loop !763

5490:                                             ; preds = %4898
  %5491 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1200, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5500

5492:                                             ; preds = %2021
  store i16 %1971, ptr %1853, align 2, !tbaa !78
  br label %5500

5493:                                             ; preds = %2319
  store i16 %2269, ptr %1853, align 2, !tbaa !78
  br label %5500

5494:                                             ; preds = %3236
  store i64 %3186, ptr %3070, align 8, !tbaa !120
  br label %5500

5495:                                             ; preds = %3532
  store i64 %3482, ptr %3070, align 8, !tbaa !120
  br label %5500

5496:                                             ; preds = %4136
  store double %4086, ptr %3678, align 8, !tbaa !18
  br label %5500

5497:                                             ; preds = %4449
  store float %4399, ptr %4282, align 4, !tbaa !162
  br label %5500

5498:                                             ; preds = %4746
  store float %4696, ptr %4282, align 4, !tbaa !162
  br label %5500

5499:                                             ; preds = %5350
  store double %5300, ptr %4892, align 8, !tbaa !18
  br label %5500

5500:                                             ; preds = %5488, %5194, %5056, %4884, %4590, %4274, %3980, %3842, %3670, %3376, %3062, %2925, %2770, %2630, %2457, %2163, %1845, %1707, %1551, %1409, %1233, %1096, %941, %801, %628, %490, %334, %193, %5201, %5210, %5499, %4904, %4913, %4597, %4606, %5498, %4294, %4303, %5497, %3987, %3996, %5496, %3690, %3699, %3383, %3392, %5495, %3082, %3091, %5494, %2777, %2786, %2476, %2485, %2170, %2179, %5493, %1865, %1874, %5492, %1558, %1567, %1253, %1262, %948, %957, %647, %656, %341, %350, %38, %47, %4894, %5490, %4284, %4886, %3680, %4276, %3072, %3672, %2467, %3064, %1855, %2459, %1243, %1847, %638, %1235, %28, %630, %18
  %5501 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1235 ], [ 0.000000e+00, %638 ], [ 0.000000e+00, %1847 ], [ 0.000000e+00, %1243 ], [ 0.000000e+00, %2459 ], [ 0.000000e+00, %1855 ], [ 0.000000e+00, %3064 ], [ 0.000000e+00, %2467 ], [ 0.000000e+00, %3672 ], [ 0.000000e+00, %3072 ], [ 0.000000e+00, %4276 ], [ 0.000000e+00, %3680 ], [ 0.000000e+00, %4886 ], [ 0.000000e+00, %4284 ], [ 0.000000e+00, %5490 ], [ 0.000000e+00, %4894 ], [ 0.000000e+00, %47 ], [ 0.000000e+00, %38 ], [ 0.000000e+00, %350 ], [ 0.000000e+00, %341 ], [ 0.000000e+00, %656 ], [ 0.000000e+00, %647 ], [ 0.000000e+00, %957 ], [ 0.000000e+00, %948 ], [ 0.000000e+00, %1262 ], [ 0.000000e+00, %1253 ], [ 0.000000e+00, %1567 ], [ 0.000000e+00, %1558 ], [ %1972, %5492 ], [ 0.000000e+00, %1874 ], [ 0.000000e+00, %1865 ], [ %2270, %5493 ], [ 0.000000e+00, %2179 ], [ 0.000000e+00, %2170 ], [ 0.000000e+00, %2485 ], [ 0.000000e+00, %2476 ], [ 0.000000e+00, %2786 ], [ 0.000000e+00, %2777 ], [ %3187, %5494 ], [ 0.000000e+00, %3091 ], [ 0.000000e+00, %3082 ], [ %3483, %5495 ], [ 0.000000e+00, %3392 ], [ 0.000000e+00, %3383 ], [ 0.000000e+00, %3699 ], [ 0.000000e+00, %3690 ], [ %4087, %5496 ], [ 0.000000e+00, %3996 ], [ 0.000000e+00, %3987 ], [ %4400, %5497 ], [ 0.000000e+00, %4303 ], [ 0.000000e+00, %4294 ], [ %4697, %5498 ], [ 0.000000e+00, %4606 ], [ 0.000000e+00, %4597 ], [ 0.000000e+00, %4913 ], [ 0.000000e+00, %4904 ], [ %5301, %5499 ], [ 0.000000e+00, %5210 ], [ 0.000000e+00, %5201 ], [ %144, %193 ], [ 0.000000e+00, %334 ], [ %441, %490 ], [ 0.000000e+00, %628 ], [ %752, %801 ], [ 0.000000e+00, %941 ], [ %1047, %1096 ], [ 0.000000e+00, %1233 ], [ %1360, %1409 ], [ 0.000000e+00, %1551 ], [ %1658, %1707 ], [ 0.000000e+00, %1845 ], [ 0.000000e+00, %2163 ], [ 0.000000e+00, %2457 ], [ %2581, %2630 ], [ 0.000000e+00, %2770 ], [ %2876, %2925 ], [ 0.000000e+00, %3062 ], [ 0.000000e+00, %3376 ], [ 0.000000e+00, %3670 ], [ %3793, %3842 ], [ 0.000000e+00, %3980 ], [ 0.000000e+00, %4274 ], [ 0.000000e+00, %4590 ], [ 0.000000e+00, %4884 ], [ %5007, %5056 ], [ 0.000000e+00, %5194 ], [ 0.000000e+00, %5488 ]
  %5502 = phi i32 [ %10, %18 ], [ 1, %630 ], [ 1, %28 ], [ 1, %1235 ], [ 1, %638 ], [ 1, %1847 ], [ 1, %1243 ], [ 1, %2459 ], [ 1, %1855 ], [ 1, %3064 ], [ 1, %2467 ], [ 1, %3672 ], [ 1, %3072 ], [ 1, %4276 ], [ 1, %3680 ], [ 1, %4886 ], [ 1, %4284 ], [ 1, %5490 ], [ 1, %4894 ], [ 1, %47 ], [ 1, %38 ], [ 1, %350 ], [ 1, %341 ], [ 1, %656 ], [ 1, %647 ], [ 1, %957 ], [ 1, %948 ], [ 1, %1262 ], [ 1, %1253 ], [ 1, %1567 ], [ 1, %1558 ], [ %1881, %5492 ], [ 1, %1874 ], [ 1, %1865 ], [ %2186, %5493 ], [ 1, %2179 ], [ 1, %2170 ], [ 1, %2485 ], [ 1, %2476 ], [ 1, %2786 ], [ 1, %2777 ], [ %3098, %5494 ], [ 1, %3091 ], [ 1, %3082 ], [ %3399, %5495 ], [ 1, %3392 ], [ 1, %3383 ], [ 1, %3699 ], [ 1, %3690 ], [ %4003, %5496 ], [ 1, %3996 ], [ 1, %3987 ], [ %4310, %5497 ], [ 1, %4303 ], [ 1, %4294 ], [ %4613, %5498 ], [ 1, %4606 ], [ 1, %4597 ], [ 1, %4913 ], [ 1, %4904 ], [ %5217, %5499 ], [ 1, %5210 ], [ 1, %5201 ], [ %54, %193 ], [ %45, %334 ], [ %357, %490 ], [ %348, %628 ], [ %663, %801 ], [ %654, %941 ], [ %964, %1096 ], [ %955, %1233 ], [ %1269, %1409 ], [ %1260, %1551 ], [ %1574, %1707 ], [ %1565, %1845 ], [ %1872, %2163 ], [ %2177, %2457 ], [ %2492, %2630 ], [ %2483, %2770 ], [ %2793, %2925 ], [ %2784, %3062 ], [ %3089, %3376 ], [ %3390, %3670 ], [ %3706, %3842 ], [ %3697, %3980 ], [ %3994, %4274 ], [ %4301, %4590 ], [ %4604, %4884 ], [ %4920, %5056 ], [ %4911, %5194 ], [ %5208, %5488 ]
  %5503 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5502, ptr noundef nonnull @.str.5) #3
  %5504 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5501, ptr noundef nonnull @.str.6) #3
  br label %5505

5505:                                             ; preds = %5049, %5134, %5187, %5343, %5428, %5481, %4442, %4527, %4583, %4739, %4824, %4877, %3835, %3920, %3973, %4129, %4214, %4267, %3229, %3314, %3369, %3525, %3610, %3663, %2623, %2707, %2763, %2918, %3002, %3055, %2014, %2099, %2156, %2312, %2397, %2450, %1402, %1486, %1544, %1700, %1784, %1838, %794, %878, %934, %1089, %1173, %1226, %186, %270, %327, %483, %567, %621, %5500
  %5506 = phi i32 [ 0, %5500 ], [ -1, %621 ], [ -1, %567 ], [ -1, %483 ], [ -1, %327 ], [ -1, %270 ], [ -1, %186 ], [ -1, %1226 ], [ -1, %1173 ], [ -1, %1089 ], [ -1, %934 ], [ -1, %878 ], [ -1, %794 ], [ -1, %1838 ], [ -1, %1784 ], [ -1, %1700 ], [ -1, %1544 ], [ -1, %1486 ], [ -1, %1402 ], [ -1, %2450 ], [ -1, %2397 ], [ -1, %2312 ], [ -1, %2156 ], [ -1, %2099 ], [ -1, %2014 ], [ -1, %3055 ], [ -1, %3002 ], [ -1, %2918 ], [ -1, %2763 ], [ -1, %2707 ], [ -1, %2623 ], [ -1, %3663 ], [ -1, %3610 ], [ -1, %3525 ], [ -1, %3369 ], [ -1, %3314 ], [ -1, %3229 ], [ -1, %4267 ], [ -1, %4214 ], [ -1, %4129 ], [ -1, %3973 ], [ -1, %3920 ], [ -1, %3835 ], [ -1, %4877 ], [ -1, %4824 ], [ -1, %4739 ], [ -1, %4583 ], [ -1, %4527 ], [ -1, %4442 ], [ -1, %5481 ], [ -1, %5428 ], [ -1, %5343 ], [ -1, %5187 ], [ -1, %5134 ], [ -1, %5049 ]
  ret i32 %5506
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm2_INT8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5511 [
    i32 101, label %22
    i32 102, label %634
    i32 103, label %1244
    i32 104, label %1858
    i32 105, label %2472
    i32 106, label %3082
    i32 107, label %3687
    i32 108, label %4291
    i32 109, label %4901
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = load i64, ptr %24, align 8, !tbaa !120
  %30 = trunc i64 %29 to i8
  %31 = mul i8 %30, %30
  store i8 %31, ptr %26, align 1, !tbaa !11
  br label %5511

32:                                               ; preds = %22
  switch i32 %1, label %632 [
    i32 1, label %33
    i32 0, label %338
  ]

33:                                               ; preds = %32
  %34 = getelementptr inbounds i32, ptr %3, i64 %19
  %35 = load i32, ptr %34, align 4, !tbaa !5
  %36 = icmp eq i32 %35, 0
  %37 = icmp sgt i32 %5, 0
  br i1 %36, label %47, label %38

38:                                               ; preds = %33
  br i1 %37, label %39, label %5511

39:                                               ; preds = %38
  %40 = icmp sgt i32 %13, 1
  %41 = icmp sgt i32 %13, 0
  %42 = add i32 %13, -2
  %43 = zext i32 %42 to i64
  %44 = zext i32 %13 to i64
  %45 = add nuw i32 %5, 1
  %46 = icmp eq i32 %13, 1
  br label %196

47:                                               ; preds = %33
  br i1 %37, label %48, label %5511

48:                                               ; preds = %47
  %49 = icmp sgt i32 %13, 1
  %50 = icmp sgt i32 %13, 0
  %51 = add i32 %13, -2
  %52 = zext i32 %51 to i64
  %53 = zext i32 %13 to i64
  %54 = add nuw i32 %5, 1
  %55 = icmp eq i32 %13, 1
  br label %56

56:                                               ; preds = %48, %194
  %57 = phi i32 [ 0, %48 ], [ %146, %194 ]
  %58 = phi double [ 0.000000e+00, %48 ], [ %145, %194 ]
  %59 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %49, label %60, label %129

60:                                               ; preds = %56, %119
  %61 = phi i32 [ %128, %119 ], [ 0, %56 ]
  %62 = phi i64 [ %70, %119 ], [ %53, %56 ]
  %63 = phi i64 [ %127, %119 ], [ %52, %56 ]
  %64 = phi i32 [ %125, %119 ], [ %59, %56 ]
  %65 = sub i32 %51, %61
  %66 = tail call i32 @llvm.smin.i32(i32 %65, i32 0)
  %67 = sub i32 %65, %66
  %68 = zext i32 %67 to i64
  %69 = add nuw nsw i64 %68, 1
  %70 = add nsw i64 %62, -1
  %71 = icmp ult i32 %67, 31
  br i1 %71, label %107, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 8589934560
  %74 = sub i64 %63, %73
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi i64 [ 0, %72 ], [ %99, %75 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %95, %75 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %96, %75 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %97, %75 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %98, %75 ]
  %81 = sub i64 %63, %76
  %82 = getelementptr inbounds i32, ptr %9, i64 %81
  %83 = getelementptr inbounds i32, ptr %82, i64 -7
  %84 = load <8 x i32>, ptr %83, align 4, !tbaa !5
  %85 = shufflevector <8 x i32> %84, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %86 = getelementptr inbounds i32, ptr %82, i64 -15
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !5
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %82, i64 -23
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !5
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %82, i64 -31
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !5
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = mul <8 x i32> %85, %77
  %96 = mul <8 x i32> %88, %78
  %97 = mul <8 x i32> %91, %79
  %98 = mul <8 x i32> %94, %80
  %99 = add nuw i64 %76, 32
  %100 = icmp eq i64 %99, %73
  br i1 %100, label %101, label %75, !llvm.loop !764

101:                                              ; preds = %75
  %102 = mul <8 x i32> %96, %95
  %103 = mul <8 x i32> %97, %102
  %104 = mul <8 x i32> %98, %103
  %105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %104)
  %106 = icmp eq i64 %69, %73
  br i1 %106, label %119, label %107

107:                                              ; preds = %60, %101
  %108 = phi i64 [ %63, %60 ], [ %74, %101 ]
  %109 = phi i32 [ 1, %60 ], [ %105, %101 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, ptr %9, i64 %111
  %114 = load i32, ptr %113, align 4, !tbaa !5
  %115 = mul nsw i32 %114, %112
  %116 = add nsw i64 %111, -1
  %117 = trunc i64 %111 to i32
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %110, label %119, !llvm.loop !765

119:                                              ; preds = %110, %101
  %120 = phi i32 [ %105, %101 ], [ %115, %110 ]
  %121 = and i64 %70, 4294967295
  %122 = getelementptr inbounds i32, ptr %6, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !5
  %124 = mul nsw i32 %123, %120
  %125 = add nsw i32 %124, %64
  %126 = icmp sgt i64 %62, 2
  %127 = add nsw i64 %63, -1
  %128 = add i32 %61, 1
  br i1 %126, label %60, label %129, !llvm.loop !766

129:                                              ; preds = %119, %56
  %130 = phi i32 [ %59, %56 ], [ %125, %119 ]
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds double, ptr %2, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !18
  %134 = getelementptr inbounds i64, ptr %24, i64 %131
  %135 = load i64, ptr %134, align 8, !tbaa !120
  %136 = trunc i64 %135 to i32
  %137 = load i8, ptr %26, align 1, !tbaa !11
  %138 = uitofp i8 %137 to double
  %139 = and i32 %136, 255
  %140 = sitofp i32 %139 to double
  %141 = fmul fast double %133, %140
  %142 = fmul fast double %141, %141
  %143 = fadd fast double %142, %138
  %144 = fptoui double %143 to i8
  store i8 %144, ptr %26, align 1, !tbaa !11
  %145 = fadd fast double %133, %58
  %146 = add nuw nsw i32 %57, 1
  br i1 %50, label %147, label %194

147:                                              ; preds = %129
  %148 = load i32, ptr %4, align 4, !tbaa !5
  %149 = load i32, ptr %12, align 4, !tbaa !5
  %150 = add nsw i32 %149, -1
  %151 = icmp slt i32 %148, %150
  br i1 %151, label %171, label %152

152:                                              ; preds = %147
  %153 = icmp eq i32 %148, %150
  br i1 %153, label %154, label %187

154:                                              ; preds = %152
  store i32 0, ptr %4, align 4, !tbaa !5
  %155 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %155, ptr %6, align 4, !tbaa !5
  br i1 %55, label %194, label %156

156:                                              ; preds = %154, %181
  %157 = phi i64 [ %185, %181 ], [ 1, %154 ]
  %158 = getelementptr inbounds i32, ptr %4, i64 %157
  %159 = load i32, ptr %158, align 4, !tbaa !5
  %160 = getelementptr inbounds i32, ptr %12, i64 %157
  %161 = load i32, ptr %160, align 4, !tbaa !5
  %162 = add nsw i32 %161, -1
  %163 = icmp slt i32 %159, %162
  br i1 %163, label %164, label %179

164:                                              ; preds = %156
  br i1 %151, label %171, label %165

165:                                              ; preds = %164
  %166 = getelementptr inbounds i32, ptr %7, i64 %157
  %167 = load i32, ptr %166, align 4, !tbaa !5
  %168 = getelementptr inbounds i32, ptr %6, i64 %157
  %169 = load i32, ptr %168, align 4, !tbaa !5
  %170 = add nsw i32 %169, %167
  store i32 %170, ptr %168, align 4, !tbaa !5
  br label %189

171:                                              ; preds = %147, %164
  %172 = phi i32 [ %159, %164 ], [ %148, %147 ]
  %173 = phi ptr [ %158, %164 ], [ %4, %147 ]
  %174 = phi i64 [ %157, %164 ], [ 0, %147 ]
  %175 = add nsw i32 %172, 1
  store i32 %175, ptr %173, align 4, !tbaa !5
  %176 = getelementptr inbounds i32, ptr %7, i64 %174
  %177 = load i32, ptr %176, align 4, !tbaa !5
  %178 = getelementptr inbounds i32, ptr %6, i64 %174
  br label %189

179:                                              ; preds = %156
  %180 = icmp eq i32 %159, %162
  br i1 %180, label %181, label %187

181:                                              ; preds = %179
  store i32 0, ptr %158, align 4, !tbaa !5
  %182 = getelementptr inbounds i32, ptr %8, i64 %157
  %183 = load i32, ptr %182, align 4, !tbaa !5
  %184 = getelementptr inbounds i32, ptr %6, i64 %157
  store i32 %183, ptr %184, align 4, !tbaa !5
  %185 = add nuw nsw i64 %157, 1
  %186 = icmp eq i64 %185, %53
  br i1 %186, label %194, label %156, !llvm.loop !767

187:                                              ; preds = %152, %179
  %188 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

189:                                              ; preds = %165, %171
  %190 = phi ptr [ %178, %171 ], [ %158, %165 ]
  %191 = phi i32 [ %177, %171 ], [ 1, %165 ]
  %192 = load i32, ptr %190, align 4, !tbaa !5
  %193 = add nsw i32 %192, %191
  store i32 %193, ptr %190, align 4, !tbaa !5
  br label %194

194:                                              ; preds = %181, %189, %154, %129
  %195 = icmp eq i32 %146, %5
  br i1 %195, label %5511, label %56, !llvm.loop !768

196:                                              ; preds = %39, %336
  %197 = phi i32 [ 0, %39 ], [ %285, %336 ]
  %198 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %40, label %199, label %268

199:                                              ; preds = %196, %258
  %200 = phi i32 [ %267, %258 ], [ 0, %196 ]
  %201 = phi i64 [ %209, %258 ], [ %44, %196 ]
  %202 = phi i64 [ %266, %258 ], [ %43, %196 ]
  %203 = phi i32 [ %264, %258 ], [ %198, %196 ]
  %204 = sub i32 %42, %200
  %205 = tail call i32 @llvm.smin.i32(i32 %204, i32 0)
  %206 = sub i32 %204, %205
  %207 = zext i32 %206 to i64
  %208 = add nuw nsw i64 %207, 1
  %209 = add nsw i64 %201, -1
  %210 = icmp ult i32 %206, 31
  br i1 %210, label %246, label %211

211:                                              ; preds = %199
  %212 = and i64 %208, 8589934560
  %213 = sub i64 %202, %212
  br label %214

214:                                              ; preds = %214, %211
  %215 = phi i64 [ 0, %211 ], [ %238, %214 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %211 ], [ %234, %214 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %211 ], [ %235, %214 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %211 ], [ %236, %214 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %211 ], [ %237, %214 ]
  %220 = sub i64 %202, %215
  %221 = getelementptr inbounds i32, ptr %11, i64 %220
  %222 = getelementptr inbounds i32, ptr %221, i64 -7
  %223 = load <8 x i32>, ptr %222, align 4, !tbaa !5
  %224 = shufflevector <8 x i32> %223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %225 = getelementptr inbounds i32, ptr %221, i64 -15
  %226 = load <8 x i32>, ptr %225, align 4, !tbaa !5
  %227 = shufflevector <8 x i32> %226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %228 = getelementptr inbounds i32, ptr %221, i64 -23
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = getelementptr inbounds i32, ptr %221, i64 -31
  %232 = load <8 x i32>, ptr %231, align 4, !tbaa !5
  %233 = shufflevector <8 x i32> %232, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %234 = mul <8 x i32> %224, %216
  %235 = mul <8 x i32> %227, %217
  %236 = mul <8 x i32> %230, %218
  %237 = mul <8 x i32> %233, %219
  %238 = add nuw i64 %215, 32
  %239 = icmp eq i64 %238, %212
  br i1 %239, label %240, label %214, !llvm.loop !769

240:                                              ; preds = %214
  %241 = mul <8 x i32> %235, %234
  %242 = mul <8 x i32> %236, %241
  %243 = mul <8 x i32> %237, %242
  %244 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %243)
  %245 = icmp eq i64 %208, %212
  br i1 %245, label %258, label %246

246:                                              ; preds = %199, %240
  %247 = phi i64 [ %202, %199 ], [ %213, %240 ]
  %248 = phi i32 [ 1, %199 ], [ %244, %240 ]
  br label %249

249:                                              ; preds = %246, %249
  %250 = phi i64 [ %255, %249 ], [ %247, %246 ]
  %251 = phi i32 [ %254, %249 ], [ %248, %246 ]
  %252 = getelementptr inbounds i32, ptr %11, i64 %250
  %253 = load i32, ptr %252, align 4, !tbaa !5
  %254 = mul nsw i32 %253, %251
  %255 = add nsw i64 %250, -1
  %256 = trunc i64 %250 to i32
  %257 = icmp sgt i32 %256, 0
  br i1 %257, label %249, label %258, !llvm.loop !770

258:                                              ; preds = %249, %240
  %259 = phi i32 [ %244, %240 ], [ %254, %249 ]
  %260 = and i64 %209, 4294967295
  %261 = getelementptr inbounds i32, ptr %6, i64 %260
  %262 = load i32, ptr %261, align 4, !tbaa !5
  %263 = mul nsw i32 %262, %259
  %264 = add nsw i32 %263, %203
  %265 = icmp sgt i64 %201, 2
  %266 = add nsw i64 %202, -1
  %267 = add i32 %200, 1
  br i1 %265, label %199, label %268, !llvm.loop !771

268:                                              ; preds = %258, %196
  %269 = phi i32 [ %198, %196 ], [ %264, %258 ]
  %270 = icmp slt i32 %269, %5
  br i1 %270, label %273, label %271

271:                                              ; preds = %268
  %272 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

273:                                              ; preds = %268
  %274 = sext i32 %269 to i64
  %275 = getelementptr inbounds i64, ptr %24, i64 %274
  %276 = load i64, ptr %275, align 8, !tbaa !120
  %277 = trunc i64 %276 to i32
  %278 = load i8, ptr %26, align 1, !tbaa !11
  %279 = uitofp i8 %278 to double
  %280 = and i32 %277, 255
  %281 = sitofp i32 %280 to double
  %282 = fmul fast double %281, %281
  %283 = fadd fast double %282, %279
  %284 = fptoui double %283 to i8
  store i8 %284, ptr %26, align 1, !tbaa !11
  %285 = add nuw nsw i32 %197, 1
  br i1 %41, label %286, label %336

286:                                              ; preds = %273
  %287 = load i32, ptr %4, align 4, !tbaa !5
  %288 = load i32, ptr %12, align 4, !tbaa !5
  %289 = add nsw i32 %288, -1
  %290 = icmp slt i32 %287, %289
  br i1 %290, label %313, label %291

291:                                              ; preds = %286
  %292 = icmp eq i32 %287, %289
  br i1 %292, label %293, label %329

293:                                              ; preds = %291
  store i32 0, ptr %4, align 4, !tbaa !5
  %294 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %294, ptr %6, align 4, !tbaa !5
  br i1 %46, label %336, label %295

295:                                              ; preds = %293, %323
  %296 = phi i64 [ %327, %323 ], [ 1, %293 ]
  %297 = getelementptr inbounds i32, ptr %4, i64 %296
  %298 = load i32, ptr %297, align 4, !tbaa !5
  %299 = getelementptr inbounds i32, ptr %12, i64 %296
  %300 = load i32, ptr %299, align 4, !tbaa !5
  %301 = add nsw i32 %300, -1
  %302 = icmp slt i32 %298, %301
  br i1 %302, label %303, label %321

303:                                              ; preds = %295
  br i1 %290, label %313, label %304

304:                                              ; preds = %303
  %305 = shl i64 %296, 32
  %306 = add i64 %305, -4294967296
  %307 = ashr exact i64 %306, 32
  %308 = getelementptr inbounds i32, ptr %7, i64 %307
  %309 = load i32, ptr %308, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %6, i64 %296
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = add nsw i32 %311, %309
  store i32 %312, ptr %310, align 4, !tbaa !5
  br label %331

313:                                              ; preds = %286, %303
  %314 = phi i32 [ %298, %303 ], [ %287, %286 ]
  %315 = phi ptr [ %297, %303 ], [ %4, %286 ]
  %316 = phi i64 [ %296, %303 ], [ 0, %286 ]
  %317 = add nsw i32 %314, 1
  store i32 %317, ptr %315, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %7, i64 %316
  %319 = load i32, ptr %318, align 4, !tbaa !5
  %320 = getelementptr inbounds i32, ptr %6, i64 %316
  br label %331

321:                                              ; preds = %295
  %322 = icmp eq i32 %298, %301
  br i1 %322, label %323, label %329

323:                                              ; preds = %321
  store i32 0, ptr %297, align 4, !tbaa !5
  %324 = getelementptr inbounds i32, ptr %8, i64 %296
  %325 = load i32, ptr %324, align 4, !tbaa !5
  %326 = getelementptr inbounds i32, ptr %6, i64 %296
  store i32 %325, ptr %326, align 4, !tbaa !5
  %327 = add nuw nsw i64 %296, 1
  %328 = icmp eq i64 %327, %44
  br i1 %328, label %336, label %295, !llvm.loop !772

329:                                              ; preds = %291, %321
  %330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

331:                                              ; preds = %304, %313
  %332 = phi ptr [ %320, %313 ], [ %297, %304 ]
  %333 = phi i32 [ %319, %313 ], [ 1, %304 ]
  %334 = load i32, ptr %332, align 4, !tbaa !5
  %335 = add nsw i32 %334, %333
  store i32 %335, ptr %332, align 4, !tbaa !5
  br label %336

336:                                              ; preds = %323, %331, %293, %273
  %337 = icmp eq i32 %285, %5
  br i1 %337, label %5511, label %196, !llvm.loop !773

338:                                              ; preds = %32
  %339 = getelementptr inbounds i32, ptr %3, i64 %19
  %340 = load i32, ptr %339, align 4, !tbaa !5
  %341 = icmp eq i32 %340, 0
  %342 = icmp sgt i32 %5, 0
  br i1 %341, label %352, label %343

343:                                              ; preds = %338
  br i1 %342, label %344, label %5511

344:                                              ; preds = %343
  %345 = icmp sgt i32 %13, 1
  %346 = icmp sgt i32 %13, 0
  %347 = add i32 %13, -2
  %348 = zext i32 %347 to i64
  %349 = zext i32 %13 to i64
  %350 = add nuw i32 %5, 1
  %351 = icmp eq i32 %13, 1
  br label %494

352:                                              ; preds = %338
  br i1 %342, label %353, label %5511

353:                                              ; preds = %352
  %354 = icmp sgt i32 %13, 1
  %355 = icmp sgt i32 %13, 0
  %356 = add i32 %13, -2
  %357 = zext i32 %356 to i64
  %358 = zext i32 %13 to i64
  %359 = add nuw i32 %5, 1
  %360 = icmp eq i32 %13, 1
  br label %361

361:                                              ; preds = %353, %492
  %362 = phi i32 [ 0, %353 ], [ %444, %492 ]
  %363 = phi double [ 0.000000e+00, %353 ], [ %443, %492 ]
  %364 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %354, label %365, label %434

365:                                              ; preds = %361, %424
  %366 = phi i32 [ %433, %424 ], [ 0, %361 ]
  %367 = phi i64 [ %375, %424 ], [ %358, %361 ]
  %368 = phi i64 [ %432, %424 ], [ %357, %361 ]
  %369 = phi i32 [ %430, %424 ], [ %364, %361 ]
  %370 = sub i32 %356, %366
  %371 = tail call i32 @llvm.smin.i32(i32 %370, i32 0)
  %372 = sub i32 %370, %371
  %373 = zext i32 %372 to i64
  %374 = add nuw nsw i64 %373, 1
  %375 = add nsw i64 %367, -1
  %376 = icmp ult i32 %372, 31
  br i1 %376, label %412, label %377

377:                                              ; preds = %365
  %378 = and i64 %374, 8589934560
  %379 = sub i64 %368, %378
  br label %380

380:                                              ; preds = %380, %377
  %381 = phi i64 [ 0, %377 ], [ %404, %380 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %400, %380 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %401, %380 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %402, %380 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %403, %380 ]
  %386 = sub i64 %368, %381
  %387 = getelementptr inbounds i32, ptr %9, i64 %386
  %388 = getelementptr inbounds i32, ptr %387, i64 -7
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !5
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %387, i64 -15
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !5
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %387, i64 -23
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !5
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = getelementptr inbounds i32, ptr %387, i64 -31
  %398 = load <8 x i32>, ptr %397, align 4, !tbaa !5
  %399 = shufflevector <8 x i32> %398, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %400 = mul <8 x i32> %390, %382
  %401 = mul <8 x i32> %393, %383
  %402 = mul <8 x i32> %396, %384
  %403 = mul <8 x i32> %399, %385
  %404 = add nuw i64 %381, 32
  %405 = icmp eq i64 %404, %378
  br i1 %405, label %406, label %380, !llvm.loop !774

406:                                              ; preds = %380
  %407 = mul <8 x i32> %401, %400
  %408 = mul <8 x i32> %402, %407
  %409 = mul <8 x i32> %403, %408
  %410 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %409)
  %411 = icmp eq i64 %374, %378
  br i1 %411, label %424, label %412

412:                                              ; preds = %365, %406
  %413 = phi i64 [ %368, %365 ], [ %379, %406 ]
  %414 = phi i32 [ 1, %365 ], [ %410, %406 ]
  br label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %421, %415 ], [ %413, %412 ]
  %417 = phi i32 [ %420, %415 ], [ %414, %412 ]
  %418 = getelementptr inbounds i32, ptr %9, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !5
  %420 = mul nsw i32 %419, %417
  %421 = add nsw i64 %416, -1
  %422 = trunc i64 %416 to i32
  %423 = icmp sgt i32 %422, 0
  br i1 %423, label %415, label %424, !llvm.loop !775

424:                                              ; preds = %415, %406
  %425 = phi i32 [ %410, %406 ], [ %420, %415 ]
  %426 = and i64 %375, 4294967295
  %427 = getelementptr inbounds i32, ptr %6, i64 %426
  %428 = load i32, ptr %427, align 4, !tbaa !5
  %429 = mul nsw i32 %428, %425
  %430 = add nsw i32 %429, %369
  %431 = icmp sgt i64 %367, 2
  %432 = add nsw i64 %368, -1
  %433 = add i32 %366, 1
  br i1 %431, label %365, label %434, !llvm.loop !776

434:                                              ; preds = %424, %361
  %435 = phi i32 [ %364, %361 ], [ %430, %424 ]
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds i64, ptr %24, i64 %436
  %438 = load i64, ptr %437, align 8, !tbaa !120
  %439 = trunc i64 %438 to i8
  %440 = load i8, ptr %26, align 1, !tbaa !11
  %441 = mul i8 %439, %439
  %442 = add i8 %441, %440
  store i8 %442, ptr %26, align 1, !tbaa !11
  %443 = fadd fast double %363, 1.000000e+00
  %444 = add nuw nsw i32 %362, 1
  br i1 %355, label %445, label %492

445:                                              ; preds = %434
  %446 = load i32, ptr %4, align 4, !tbaa !5
  %447 = load i32, ptr %12, align 4, !tbaa !5
  %448 = add nsw i32 %447, -1
  %449 = icmp slt i32 %446, %448
  br i1 %449, label %469, label %450

450:                                              ; preds = %445
  %451 = icmp eq i32 %446, %448
  br i1 %451, label %452, label %485

452:                                              ; preds = %450
  store i32 0, ptr %4, align 4, !tbaa !5
  %453 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %453, ptr %6, align 4, !tbaa !5
  br i1 %360, label %492, label %454

454:                                              ; preds = %452, %479
  %455 = phi i64 [ %483, %479 ], [ 1, %452 ]
  %456 = getelementptr inbounds i32, ptr %4, i64 %455
  %457 = load i32, ptr %456, align 4, !tbaa !5
  %458 = getelementptr inbounds i32, ptr %12, i64 %455
  %459 = load i32, ptr %458, align 4, !tbaa !5
  %460 = add nsw i32 %459, -1
  %461 = icmp slt i32 %457, %460
  br i1 %461, label %462, label %477

462:                                              ; preds = %454
  br i1 %449, label %469, label %463

463:                                              ; preds = %462
  %464 = getelementptr inbounds i32, ptr %7, i64 %455
  %465 = load i32, ptr %464, align 4, !tbaa !5
  %466 = getelementptr inbounds i32, ptr %6, i64 %455
  %467 = load i32, ptr %466, align 4, !tbaa !5
  %468 = add nsw i32 %467, %465
  store i32 %468, ptr %466, align 4, !tbaa !5
  br label %487

469:                                              ; preds = %445, %462
  %470 = phi i32 [ %457, %462 ], [ %446, %445 ]
  %471 = phi ptr [ %456, %462 ], [ %4, %445 ]
  %472 = phi i64 [ %455, %462 ], [ 0, %445 ]
  %473 = add nsw i32 %470, 1
  store i32 %473, ptr %471, align 4, !tbaa !5
  %474 = getelementptr inbounds i32, ptr %7, i64 %472
  %475 = load i32, ptr %474, align 4, !tbaa !5
  %476 = getelementptr inbounds i32, ptr %6, i64 %472
  br label %487

477:                                              ; preds = %454
  %478 = icmp eq i32 %457, %460
  br i1 %478, label %479, label %485

479:                                              ; preds = %477
  store i32 0, ptr %456, align 4, !tbaa !5
  %480 = getelementptr inbounds i32, ptr %8, i64 %455
  %481 = load i32, ptr %480, align 4, !tbaa !5
  %482 = getelementptr inbounds i32, ptr %6, i64 %455
  store i32 %481, ptr %482, align 4, !tbaa !5
  %483 = add nuw nsw i64 %455, 1
  %484 = icmp eq i64 %483, %358
  br i1 %484, label %492, label %454, !llvm.loop !777

485:                                              ; preds = %450, %477
  %486 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

487:                                              ; preds = %463, %469
  %488 = phi ptr [ %476, %469 ], [ %456, %463 ]
  %489 = phi i32 [ %475, %469 ], [ 1, %463 ]
  %490 = load i32, ptr %488, align 4, !tbaa !5
  %491 = add nsw i32 %490, %489
  store i32 %491, ptr %488, align 4, !tbaa !5
  br label %492

492:                                              ; preds = %479, %487, %452, %434
  %493 = icmp eq i32 %444, %5
  br i1 %493, label %5511, label %361, !llvm.loop !778

494:                                              ; preds = %344, %630
  %495 = phi i32 [ 0, %344 ], [ %579, %630 ]
  %496 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %345, label %497, label %566

497:                                              ; preds = %494, %556
  %498 = phi i32 [ %565, %556 ], [ 0, %494 ]
  %499 = phi i64 [ %507, %556 ], [ %349, %494 ]
  %500 = phi i64 [ %564, %556 ], [ %348, %494 ]
  %501 = phi i32 [ %562, %556 ], [ %496, %494 ]
  %502 = sub i32 %347, %498
  %503 = tail call i32 @llvm.smin.i32(i32 %502, i32 0)
  %504 = sub i32 %502, %503
  %505 = zext i32 %504 to i64
  %506 = add nuw nsw i64 %505, 1
  %507 = add nsw i64 %499, -1
  %508 = icmp ult i32 %504, 31
  br i1 %508, label %544, label %509

509:                                              ; preds = %497
  %510 = and i64 %506, 8589934560
  %511 = sub i64 %500, %510
  br label %512

512:                                              ; preds = %512, %509
  %513 = phi i64 [ 0, %509 ], [ %536, %512 ]
  %514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %509 ], [ %532, %512 ]
  %515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %509 ], [ %533, %512 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %509 ], [ %534, %512 ]
  %517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %509 ], [ %535, %512 ]
  %518 = sub i64 %500, %513
  %519 = getelementptr inbounds i32, ptr %11, i64 %518
  %520 = getelementptr inbounds i32, ptr %519, i64 -7
  %521 = load <8 x i32>, ptr %520, align 4, !tbaa !5
  %522 = shufflevector <8 x i32> %521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %523 = getelementptr inbounds i32, ptr %519, i64 -15
  %524 = load <8 x i32>, ptr %523, align 4, !tbaa !5
  %525 = shufflevector <8 x i32> %524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %526 = getelementptr inbounds i32, ptr %519, i64 -23
  %527 = load <8 x i32>, ptr %526, align 4, !tbaa !5
  %528 = shufflevector <8 x i32> %527, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %529 = getelementptr inbounds i32, ptr %519, i64 -31
  %530 = load <8 x i32>, ptr %529, align 4, !tbaa !5
  %531 = shufflevector <8 x i32> %530, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %532 = mul <8 x i32> %522, %514
  %533 = mul <8 x i32> %525, %515
  %534 = mul <8 x i32> %528, %516
  %535 = mul <8 x i32> %531, %517
  %536 = add nuw i64 %513, 32
  %537 = icmp eq i64 %536, %510
  br i1 %537, label %538, label %512, !llvm.loop !779

538:                                              ; preds = %512
  %539 = mul <8 x i32> %533, %532
  %540 = mul <8 x i32> %534, %539
  %541 = mul <8 x i32> %535, %540
  %542 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %541)
  %543 = icmp eq i64 %506, %510
  br i1 %543, label %556, label %544

544:                                              ; preds = %497, %538
  %545 = phi i64 [ %500, %497 ], [ %511, %538 ]
  %546 = phi i32 [ 1, %497 ], [ %542, %538 ]
  br label %547

547:                                              ; preds = %544, %547
  %548 = phi i64 [ %553, %547 ], [ %545, %544 ]
  %549 = phi i32 [ %552, %547 ], [ %546, %544 ]
  %550 = getelementptr inbounds i32, ptr %11, i64 %548
  %551 = load i32, ptr %550, align 4, !tbaa !5
  %552 = mul nsw i32 %551, %549
  %553 = add nsw i64 %548, -1
  %554 = trunc i64 %548 to i32
  %555 = icmp sgt i32 %554, 0
  br i1 %555, label %547, label %556, !llvm.loop !780

556:                                              ; preds = %547, %538
  %557 = phi i32 [ %542, %538 ], [ %552, %547 ]
  %558 = and i64 %507, 4294967295
  %559 = getelementptr inbounds i32, ptr %6, i64 %558
  %560 = load i32, ptr %559, align 4, !tbaa !5
  %561 = mul nsw i32 %560, %557
  %562 = add nsw i32 %561, %501
  %563 = icmp sgt i64 %499, 2
  %564 = add nsw i64 %500, -1
  %565 = add i32 %498, 1
  br i1 %563, label %497, label %566, !llvm.loop !781

566:                                              ; preds = %556, %494
  %567 = phi i32 [ %496, %494 ], [ %562, %556 ]
  %568 = icmp slt i32 %567, %5
  br i1 %568, label %571, label %569

569:                                              ; preds = %566
  %570 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

571:                                              ; preds = %566
  %572 = sext i32 %567 to i64
  %573 = getelementptr inbounds i64, ptr %24, i64 %572
  %574 = load i64, ptr %573, align 8, !tbaa !120
  %575 = trunc i64 %574 to i8
  %576 = load i8, ptr %26, align 1, !tbaa !11
  %577 = mul i8 %575, %575
  %578 = add i8 %577, %576
  store i8 %578, ptr %26, align 1, !tbaa !11
  %579 = add nuw nsw i32 %495, 1
  br i1 %346, label %580, label %630

580:                                              ; preds = %571
  %581 = load i32, ptr %4, align 4, !tbaa !5
  %582 = load i32, ptr %12, align 4, !tbaa !5
  %583 = add nsw i32 %582, -1
  %584 = icmp slt i32 %581, %583
  br i1 %584, label %607, label %585

585:                                              ; preds = %580
  %586 = icmp eq i32 %581, %583
  br i1 %586, label %587, label %623

587:                                              ; preds = %585
  store i32 0, ptr %4, align 4, !tbaa !5
  %588 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %588, ptr %6, align 4, !tbaa !5
  br i1 %351, label %630, label %589

589:                                              ; preds = %587, %617
  %590 = phi i64 [ %621, %617 ], [ 1, %587 ]
  %591 = getelementptr inbounds i32, ptr %4, i64 %590
  %592 = load i32, ptr %591, align 4, !tbaa !5
  %593 = getelementptr inbounds i32, ptr %12, i64 %590
  %594 = load i32, ptr %593, align 4, !tbaa !5
  %595 = add nsw i32 %594, -1
  %596 = icmp slt i32 %592, %595
  br i1 %596, label %597, label %615

597:                                              ; preds = %589
  br i1 %584, label %607, label %598

598:                                              ; preds = %597
  %599 = shl i64 %590, 32
  %600 = add i64 %599, -4294967296
  %601 = ashr exact i64 %600, 32
  %602 = getelementptr inbounds i32, ptr %7, i64 %601
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %6, i64 %590
  %605 = load i32, ptr %604, align 4, !tbaa !5
  %606 = add nsw i32 %605, %603
  store i32 %606, ptr %604, align 4, !tbaa !5
  br label %625

607:                                              ; preds = %580, %597
  %608 = phi i32 [ %592, %597 ], [ %581, %580 ]
  %609 = phi ptr [ %591, %597 ], [ %4, %580 ]
  %610 = phi i64 [ %590, %597 ], [ 0, %580 ]
  %611 = add nsw i32 %608, 1
  store i32 %611, ptr %609, align 4, !tbaa !5
  %612 = getelementptr inbounds i32, ptr %7, i64 %610
  %613 = load i32, ptr %612, align 4, !tbaa !5
  %614 = getelementptr inbounds i32, ptr %6, i64 %610
  br label %625

615:                                              ; preds = %589
  %616 = icmp eq i32 %592, %595
  br i1 %616, label %617, label %623

617:                                              ; preds = %615
  store i32 0, ptr %591, align 4, !tbaa !5
  %618 = getelementptr inbounds i32, ptr %8, i64 %590
  %619 = load i32, ptr %618, align 4, !tbaa !5
  %620 = getelementptr inbounds i32, ptr %6, i64 %590
  store i32 %619, ptr %620, align 4, !tbaa !5
  %621 = add nuw nsw i64 %590, 1
  %622 = icmp eq i64 %621, %349
  br i1 %622, label %630, label %589, !llvm.loop !782

623:                                              ; preds = %585, %615
  %624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

625:                                              ; preds = %598, %607
  %626 = phi ptr [ %614, %607 ], [ %591, %598 ]
  %627 = phi i32 [ %613, %607 ], [ 1, %598 ]
  %628 = load i32, ptr %626, align 4, !tbaa !5
  %629 = add nsw i32 %628, %627
  store i32 %629, ptr %626, align 4, !tbaa !5
  br label %630

630:                                              ; preds = %617, %625, %587, %571
  %631 = icmp eq i32 %579, %5
  br i1 %631, label %5511, label %494, !llvm.loop !783

632:                                              ; preds = %32
  %633 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1443, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5511

634:                                              ; preds = %18
  %635 = getelementptr inbounds ptr, ptr %14, i64 %19
  %636 = load ptr, ptr %635, align 8, !tbaa !9
  %637 = getelementptr inbounds ptr, ptr %16, i64 %19
  %638 = load ptr, ptr %637, align 8, !tbaa !9
  store i32 0, ptr %638, align 4, !tbaa !5
  %639 = icmp eq i32 %13, 0
  br i1 %639, label %640, label %644

640:                                              ; preds = %634
  %641 = load i64, ptr %636, align 8, !tbaa !120
  %642 = trunc i64 %641 to i32
  %643 = mul nsw i32 %642, %642
  store i32 %643, ptr %638, align 4, !tbaa !5
  br label %5511

644:                                              ; preds = %634
  switch i32 %1, label %1242 [
    i32 1, label %645
    i32 0, label %948
  ]

645:                                              ; preds = %644
  %646 = getelementptr inbounds i32, ptr %3, i64 %19
  %647 = load i32, ptr %646, align 4, !tbaa !5
  %648 = icmp eq i32 %647, 0
  %649 = icmp sgt i32 %5, 0
  br i1 %648, label %659, label %650

650:                                              ; preds = %645
  br i1 %649, label %651, label %5511

651:                                              ; preds = %650
  %652 = icmp sgt i32 %13, 1
  %653 = icmp sgt i32 %13, 0
  %654 = add i32 %13, -2
  %655 = zext i32 %654 to i64
  %656 = zext i32 %13 to i64
  %657 = add nuw i32 %5, 1
  %658 = icmp eq i32 %13, 1
  br label %807

659:                                              ; preds = %645
  br i1 %649, label %660, label %5511

660:                                              ; preds = %659
  %661 = icmp sgt i32 %13, 1
  %662 = icmp sgt i32 %13, 0
  %663 = add i32 %13, -2
  %664 = zext i32 %663 to i64
  %665 = zext i32 %13 to i64
  %666 = add nuw i32 %5, 1
  %667 = icmp eq i32 %13, 1
  br label %668

668:                                              ; preds = %660, %805
  %669 = phi i32 [ 0, %660 ], [ %757, %805 ]
  %670 = phi double [ 0.000000e+00, %660 ], [ %756, %805 ]
  %671 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %661, label %672, label %741

672:                                              ; preds = %668, %731
  %673 = phi i32 [ %740, %731 ], [ 0, %668 ]
  %674 = phi i64 [ %682, %731 ], [ %665, %668 ]
  %675 = phi i64 [ %739, %731 ], [ %664, %668 ]
  %676 = phi i32 [ %737, %731 ], [ %671, %668 ]
  %677 = sub i32 %663, %673
  %678 = tail call i32 @llvm.smin.i32(i32 %677, i32 0)
  %679 = sub i32 %677, %678
  %680 = zext i32 %679 to i64
  %681 = add nuw nsw i64 %680, 1
  %682 = add nsw i64 %674, -1
  %683 = icmp ult i32 %679, 31
  br i1 %683, label %719, label %684

684:                                              ; preds = %672
  %685 = and i64 %681, 8589934560
  %686 = sub i64 %675, %685
  br label %687

687:                                              ; preds = %687, %684
  %688 = phi i64 [ 0, %684 ], [ %711, %687 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %707, %687 ]
  %690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %708, %687 ]
  %691 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %709, %687 ]
  %692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %710, %687 ]
  %693 = sub i64 %675, %688
  %694 = getelementptr inbounds i32, ptr %9, i64 %693
  %695 = getelementptr inbounds i32, ptr %694, i64 -7
  %696 = load <8 x i32>, ptr %695, align 4, !tbaa !5
  %697 = shufflevector <8 x i32> %696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %698 = getelementptr inbounds i32, ptr %694, i64 -15
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !5
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %694, i64 -23
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !5
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %694, i64 -31
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !5
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = mul <8 x i32> %697, %689
  %708 = mul <8 x i32> %700, %690
  %709 = mul <8 x i32> %703, %691
  %710 = mul <8 x i32> %706, %692
  %711 = add nuw i64 %688, 32
  %712 = icmp eq i64 %711, %685
  br i1 %712, label %713, label %687, !llvm.loop !784

713:                                              ; preds = %687
  %714 = mul <8 x i32> %708, %707
  %715 = mul <8 x i32> %709, %714
  %716 = mul <8 x i32> %710, %715
  %717 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %716)
  %718 = icmp eq i64 %681, %685
  br i1 %718, label %731, label %719

719:                                              ; preds = %672, %713
  %720 = phi i64 [ %675, %672 ], [ %686, %713 ]
  %721 = phi i32 [ 1, %672 ], [ %717, %713 ]
  br label %722

722:                                              ; preds = %719, %722
  %723 = phi i64 [ %728, %722 ], [ %720, %719 ]
  %724 = phi i32 [ %727, %722 ], [ %721, %719 ]
  %725 = getelementptr inbounds i32, ptr %9, i64 %723
  %726 = load i32, ptr %725, align 4, !tbaa !5
  %727 = mul nsw i32 %726, %724
  %728 = add nsw i64 %723, -1
  %729 = trunc i64 %723 to i32
  %730 = icmp sgt i32 %729, 0
  br i1 %730, label %722, label %731, !llvm.loop !785

731:                                              ; preds = %722, %713
  %732 = phi i32 [ %717, %713 ], [ %727, %722 ]
  %733 = and i64 %682, 4294967295
  %734 = getelementptr inbounds i32, ptr %6, i64 %733
  %735 = load i32, ptr %734, align 4, !tbaa !5
  %736 = mul nsw i32 %735, %732
  %737 = add nsw i32 %736, %676
  %738 = icmp sgt i64 %674, 2
  %739 = add nsw i64 %675, -1
  %740 = add i32 %673, 1
  br i1 %738, label %672, label %741, !llvm.loop !786

741:                                              ; preds = %731, %668
  %742 = phi i32 [ %671, %668 ], [ %737, %731 ]
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds double, ptr %2, i64 %743
  %745 = load double, ptr %744, align 8, !tbaa !18
  %746 = getelementptr inbounds i64, ptr %636, i64 %743
  %747 = load i64, ptr %746, align 8, !tbaa !120
  %748 = trunc i64 %747 to i32
  %749 = load i32, ptr %638, align 4, !tbaa !5
  %750 = sitofp i32 %749 to double
  %751 = sitofp i32 %748 to double
  %752 = fmul fast double %745, %751
  %753 = fmul fast double %752, %752
  %754 = fadd fast double %753, %750
  %755 = fptosi double %754 to i32
  store i32 %755, ptr %638, align 4, !tbaa !5
  %756 = fadd fast double %745, %670
  %757 = add nuw nsw i32 %669, 1
  br i1 %662, label %758, label %805

758:                                              ; preds = %741
  %759 = load i32, ptr %4, align 4, !tbaa !5
  %760 = load i32, ptr %12, align 4, !tbaa !5
  %761 = add nsw i32 %760, -1
  %762 = icmp slt i32 %759, %761
  br i1 %762, label %782, label %763

763:                                              ; preds = %758
  %764 = icmp eq i32 %759, %761
  br i1 %764, label %765, label %798

765:                                              ; preds = %763
  store i32 0, ptr %4, align 4, !tbaa !5
  %766 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %766, ptr %6, align 4, !tbaa !5
  br i1 %667, label %805, label %767

767:                                              ; preds = %765, %792
  %768 = phi i64 [ %796, %792 ], [ 1, %765 ]
  %769 = getelementptr inbounds i32, ptr %4, i64 %768
  %770 = load i32, ptr %769, align 4, !tbaa !5
  %771 = getelementptr inbounds i32, ptr %12, i64 %768
  %772 = load i32, ptr %771, align 4, !tbaa !5
  %773 = add nsw i32 %772, -1
  %774 = icmp slt i32 %770, %773
  br i1 %774, label %775, label %790

775:                                              ; preds = %767
  br i1 %762, label %782, label %776

776:                                              ; preds = %775
  %777 = getelementptr inbounds i32, ptr %7, i64 %768
  %778 = load i32, ptr %777, align 4, !tbaa !5
  %779 = getelementptr inbounds i32, ptr %6, i64 %768
  %780 = load i32, ptr %779, align 4, !tbaa !5
  %781 = add nsw i32 %780, %778
  store i32 %781, ptr %779, align 4, !tbaa !5
  br label %800

782:                                              ; preds = %758, %775
  %783 = phi i32 [ %770, %775 ], [ %759, %758 ]
  %784 = phi ptr [ %769, %775 ], [ %4, %758 ]
  %785 = phi i64 [ %768, %775 ], [ 0, %758 ]
  %786 = add nsw i32 %783, 1
  store i32 %786, ptr %784, align 4, !tbaa !5
  %787 = getelementptr inbounds i32, ptr %7, i64 %785
  %788 = load i32, ptr %787, align 4, !tbaa !5
  %789 = getelementptr inbounds i32, ptr %6, i64 %785
  br label %800

790:                                              ; preds = %767
  %791 = icmp eq i32 %770, %773
  br i1 %791, label %792, label %798

792:                                              ; preds = %790
  store i32 0, ptr %769, align 4, !tbaa !5
  %793 = getelementptr inbounds i32, ptr %8, i64 %768
  %794 = load i32, ptr %793, align 4, !tbaa !5
  %795 = getelementptr inbounds i32, ptr %6, i64 %768
  store i32 %794, ptr %795, align 4, !tbaa !5
  %796 = add nuw nsw i64 %768, 1
  %797 = icmp eq i64 %796, %665
  br i1 %797, label %805, label %767, !llvm.loop !787

798:                                              ; preds = %763, %790
  %799 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

800:                                              ; preds = %776, %782
  %801 = phi ptr [ %789, %782 ], [ %769, %776 ]
  %802 = phi i32 [ %788, %782 ], [ 1, %776 ]
  %803 = load i32, ptr %801, align 4, !tbaa !5
  %804 = add nsw i32 %803, %802
  store i32 %804, ptr %801, align 4, !tbaa !5
  br label %805

805:                                              ; preds = %792, %800, %765, %741
  %806 = icmp eq i32 %757, %5
  br i1 %806, label %5511, label %668, !llvm.loop !788

807:                                              ; preds = %651, %946
  %808 = phi i32 [ 0, %651 ], [ %895, %946 ]
  %809 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %652, label %810, label %879

810:                                              ; preds = %807, %869
  %811 = phi i32 [ %878, %869 ], [ 0, %807 ]
  %812 = phi i64 [ %820, %869 ], [ %656, %807 ]
  %813 = phi i64 [ %877, %869 ], [ %655, %807 ]
  %814 = phi i32 [ %875, %869 ], [ %809, %807 ]
  %815 = sub i32 %654, %811
  %816 = tail call i32 @llvm.smin.i32(i32 %815, i32 0)
  %817 = sub i32 %815, %816
  %818 = zext i32 %817 to i64
  %819 = add nuw nsw i64 %818, 1
  %820 = add nsw i64 %812, -1
  %821 = icmp ult i32 %817, 31
  br i1 %821, label %857, label %822

822:                                              ; preds = %810
  %823 = and i64 %819, 8589934560
  %824 = sub i64 %813, %823
  br label %825

825:                                              ; preds = %825, %822
  %826 = phi i64 [ 0, %822 ], [ %849, %825 ]
  %827 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %822 ], [ %845, %825 ]
  %828 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %822 ], [ %846, %825 ]
  %829 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %822 ], [ %847, %825 ]
  %830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %822 ], [ %848, %825 ]
  %831 = sub i64 %813, %826
  %832 = getelementptr inbounds i32, ptr %11, i64 %831
  %833 = getelementptr inbounds i32, ptr %832, i64 -7
  %834 = load <8 x i32>, ptr %833, align 4, !tbaa !5
  %835 = shufflevector <8 x i32> %834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %836 = getelementptr inbounds i32, ptr %832, i64 -15
  %837 = load <8 x i32>, ptr %836, align 4, !tbaa !5
  %838 = shufflevector <8 x i32> %837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %839 = getelementptr inbounds i32, ptr %832, i64 -23
  %840 = load <8 x i32>, ptr %839, align 4, !tbaa !5
  %841 = shufflevector <8 x i32> %840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %842 = getelementptr inbounds i32, ptr %832, i64 -31
  %843 = load <8 x i32>, ptr %842, align 4, !tbaa !5
  %844 = shufflevector <8 x i32> %843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %845 = mul <8 x i32> %835, %827
  %846 = mul <8 x i32> %838, %828
  %847 = mul <8 x i32> %841, %829
  %848 = mul <8 x i32> %844, %830
  %849 = add nuw i64 %826, 32
  %850 = icmp eq i64 %849, %823
  br i1 %850, label %851, label %825, !llvm.loop !789

851:                                              ; preds = %825
  %852 = mul <8 x i32> %846, %845
  %853 = mul <8 x i32> %847, %852
  %854 = mul <8 x i32> %848, %853
  %855 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %854)
  %856 = icmp eq i64 %819, %823
  br i1 %856, label %869, label %857

857:                                              ; preds = %810, %851
  %858 = phi i64 [ %813, %810 ], [ %824, %851 ]
  %859 = phi i32 [ 1, %810 ], [ %855, %851 ]
  br label %860

860:                                              ; preds = %857, %860
  %861 = phi i64 [ %866, %860 ], [ %858, %857 ]
  %862 = phi i32 [ %865, %860 ], [ %859, %857 ]
  %863 = getelementptr inbounds i32, ptr %11, i64 %861
  %864 = load i32, ptr %863, align 4, !tbaa !5
  %865 = mul nsw i32 %864, %862
  %866 = add nsw i64 %861, -1
  %867 = trunc i64 %861 to i32
  %868 = icmp sgt i32 %867, 0
  br i1 %868, label %860, label %869, !llvm.loop !790

869:                                              ; preds = %860, %851
  %870 = phi i32 [ %855, %851 ], [ %865, %860 ]
  %871 = and i64 %820, 4294967295
  %872 = getelementptr inbounds i32, ptr %6, i64 %871
  %873 = load i32, ptr %872, align 4, !tbaa !5
  %874 = mul nsw i32 %873, %870
  %875 = add nsw i32 %874, %814
  %876 = icmp sgt i64 %812, 2
  %877 = add nsw i64 %813, -1
  %878 = add i32 %811, 1
  br i1 %876, label %810, label %879, !llvm.loop !791

879:                                              ; preds = %869, %807
  %880 = phi i32 [ %809, %807 ], [ %875, %869 ]
  %881 = icmp slt i32 %880, %5
  br i1 %881, label %884, label %882

882:                                              ; preds = %879
  %883 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

884:                                              ; preds = %879
  %885 = sext i32 %880 to i64
  %886 = getelementptr inbounds i64, ptr %636, i64 %885
  %887 = load i64, ptr %886, align 8, !tbaa !120
  %888 = trunc i64 %887 to i32
  %889 = load i32, ptr %638, align 4, !tbaa !5
  %890 = sitofp i32 %889 to double
  %891 = sitofp i32 %888 to double
  %892 = fmul fast double %891, %891
  %893 = fadd fast double %892, %890
  %894 = fptosi double %893 to i32
  store i32 %894, ptr %638, align 4, !tbaa !5
  %895 = add nuw nsw i32 %808, 1
  br i1 %653, label %896, label %946

896:                                              ; preds = %884
  %897 = load i32, ptr %4, align 4, !tbaa !5
  %898 = load i32, ptr %12, align 4, !tbaa !5
  %899 = add nsw i32 %898, -1
  %900 = icmp slt i32 %897, %899
  br i1 %900, label %923, label %901

901:                                              ; preds = %896
  %902 = icmp eq i32 %897, %899
  br i1 %902, label %903, label %939

903:                                              ; preds = %901
  store i32 0, ptr %4, align 4, !tbaa !5
  %904 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %904, ptr %6, align 4, !tbaa !5
  br i1 %658, label %946, label %905

905:                                              ; preds = %903, %933
  %906 = phi i64 [ %937, %933 ], [ 1, %903 ]
  %907 = getelementptr inbounds i32, ptr %4, i64 %906
  %908 = load i32, ptr %907, align 4, !tbaa !5
  %909 = getelementptr inbounds i32, ptr %12, i64 %906
  %910 = load i32, ptr %909, align 4, !tbaa !5
  %911 = add nsw i32 %910, -1
  %912 = icmp slt i32 %908, %911
  br i1 %912, label %913, label %931

913:                                              ; preds = %905
  br i1 %900, label %923, label %914

914:                                              ; preds = %913
  %915 = shl i64 %906, 32
  %916 = add i64 %915, -4294967296
  %917 = ashr exact i64 %916, 32
  %918 = getelementptr inbounds i32, ptr %7, i64 %917
  %919 = load i32, ptr %918, align 4, !tbaa !5
  %920 = getelementptr inbounds i32, ptr %6, i64 %906
  %921 = load i32, ptr %920, align 4, !tbaa !5
  %922 = add nsw i32 %921, %919
  store i32 %922, ptr %920, align 4, !tbaa !5
  br label %941

923:                                              ; preds = %896, %913
  %924 = phi i32 [ %908, %913 ], [ %897, %896 ]
  %925 = phi ptr [ %907, %913 ], [ %4, %896 ]
  %926 = phi i64 [ %906, %913 ], [ 0, %896 ]
  %927 = add nsw i32 %924, 1
  store i32 %927, ptr %925, align 4, !tbaa !5
  %928 = getelementptr inbounds i32, ptr %7, i64 %926
  %929 = load i32, ptr %928, align 4, !tbaa !5
  %930 = getelementptr inbounds i32, ptr %6, i64 %926
  br label %941

931:                                              ; preds = %905
  %932 = icmp eq i32 %908, %911
  br i1 %932, label %933, label %939

933:                                              ; preds = %931
  store i32 0, ptr %907, align 4, !tbaa !5
  %934 = getelementptr inbounds i32, ptr %8, i64 %906
  %935 = load i32, ptr %934, align 4, !tbaa !5
  %936 = getelementptr inbounds i32, ptr %6, i64 %906
  store i32 %935, ptr %936, align 4, !tbaa !5
  %937 = add nuw nsw i64 %906, 1
  %938 = icmp eq i64 %937, %656
  br i1 %938, label %946, label %905, !llvm.loop !792

939:                                              ; preds = %901, %931
  %940 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

941:                                              ; preds = %914, %923
  %942 = phi ptr [ %930, %923 ], [ %907, %914 ]
  %943 = phi i32 [ %929, %923 ], [ 1, %914 ]
  %944 = load i32, ptr %942, align 4, !tbaa !5
  %945 = add nsw i32 %944, %943
  store i32 %945, ptr %942, align 4, !tbaa !5
  br label %946

946:                                              ; preds = %933, %941, %903, %884
  %947 = icmp eq i32 %895, %5
  br i1 %947, label %5511, label %807, !llvm.loop !793

948:                                              ; preds = %644
  %949 = getelementptr inbounds i32, ptr %3, i64 %19
  %950 = load i32, ptr %949, align 4, !tbaa !5
  %951 = icmp eq i32 %950, 0
  %952 = icmp sgt i32 %5, 0
  br i1 %951, label %962, label %953

953:                                              ; preds = %948
  br i1 %952, label %954, label %5511

954:                                              ; preds = %953
  %955 = icmp sgt i32 %13, 1
  %956 = icmp sgt i32 %13, 0
  %957 = add i32 %13, -2
  %958 = zext i32 %957 to i64
  %959 = zext i32 %13 to i64
  %960 = add nuw i32 %5, 1
  %961 = icmp eq i32 %13, 1
  br label %1104

962:                                              ; preds = %948
  br i1 %952, label %963, label %5511

963:                                              ; preds = %962
  %964 = icmp sgt i32 %13, 1
  %965 = icmp sgt i32 %13, 0
  %966 = add i32 %13, -2
  %967 = zext i32 %966 to i64
  %968 = zext i32 %13 to i64
  %969 = add nuw i32 %5, 1
  %970 = icmp eq i32 %13, 1
  br label %971

971:                                              ; preds = %963, %1102
  %972 = phi i32 [ 0, %963 ], [ %1054, %1102 ]
  %973 = phi double [ 0.000000e+00, %963 ], [ %1053, %1102 ]
  %974 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %964, label %975, label %1044

975:                                              ; preds = %971, %1034
  %976 = phi i32 [ %1043, %1034 ], [ 0, %971 ]
  %977 = phi i64 [ %985, %1034 ], [ %968, %971 ]
  %978 = phi i64 [ %1042, %1034 ], [ %967, %971 ]
  %979 = phi i32 [ %1040, %1034 ], [ %974, %971 ]
  %980 = sub i32 %966, %976
  %981 = tail call i32 @llvm.smin.i32(i32 %980, i32 0)
  %982 = sub i32 %980, %981
  %983 = zext i32 %982 to i64
  %984 = add nuw nsw i64 %983, 1
  %985 = add nsw i64 %977, -1
  %986 = icmp ult i32 %982, 31
  br i1 %986, label %1022, label %987

987:                                              ; preds = %975
  %988 = and i64 %984, 8589934560
  %989 = sub i64 %978, %988
  br label %990

990:                                              ; preds = %990, %987
  %991 = phi i64 [ 0, %987 ], [ %1014, %990 ]
  %992 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %987 ], [ %1010, %990 ]
  %993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %987 ], [ %1011, %990 ]
  %994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %987 ], [ %1012, %990 ]
  %995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %987 ], [ %1013, %990 ]
  %996 = sub i64 %978, %991
  %997 = getelementptr inbounds i32, ptr %9, i64 %996
  %998 = getelementptr inbounds i32, ptr %997, i64 -7
  %999 = load <8 x i32>, ptr %998, align 4, !tbaa !5
  %1000 = shufflevector <8 x i32> %999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1001 = getelementptr inbounds i32, ptr %997, i64 -15
  %1002 = load <8 x i32>, ptr %1001, align 4, !tbaa !5
  %1003 = shufflevector <8 x i32> %1002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1004 = getelementptr inbounds i32, ptr %997, i64 -23
  %1005 = load <8 x i32>, ptr %1004, align 4, !tbaa !5
  %1006 = shufflevector <8 x i32> %1005, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1007 = getelementptr inbounds i32, ptr %997, i64 -31
  %1008 = load <8 x i32>, ptr %1007, align 4, !tbaa !5
  %1009 = shufflevector <8 x i32> %1008, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1010 = mul <8 x i32> %1000, %992
  %1011 = mul <8 x i32> %1003, %993
  %1012 = mul <8 x i32> %1006, %994
  %1013 = mul <8 x i32> %1009, %995
  %1014 = add nuw i64 %991, 32
  %1015 = icmp eq i64 %1014, %988
  br i1 %1015, label %1016, label %990, !llvm.loop !794

1016:                                             ; preds = %990
  %1017 = mul <8 x i32> %1011, %1010
  %1018 = mul <8 x i32> %1012, %1017
  %1019 = mul <8 x i32> %1013, %1018
  %1020 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1019)
  %1021 = icmp eq i64 %984, %988
  br i1 %1021, label %1034, label %1022

1022:                                             ; preds = %975, %1016
  %1023 = phi i64 [ %978, %975 ], [ %989, %1016 ]
  %1024 = phi i32 [ 1, %975 ], [ %1020, %1016 ]
  br label %1025

1025:                                             ; preds = %1022, %1025
  %1026 = phi i64 [ %1031, %1025 ], [ %1023, %1022 ]
  %1027 = phi i32 [ %1030, %1025 ], [ %1024, %1022 ]
  %1028 = getelementptr inbounds i32, ptr %9, i64 %1026
  %1029 = load i32, ptr %1028, align 4, !tbaa !5
  %1030 = mul nsw i32 %1029, %1027
  %1031 = add nsw i64 %1026, -1
  %1032 = trunc i64 %1026 to i32
  %1033 = icmp sgt i32 %1032, 0
  br i1 %1033, label %1025, label %1034, !llvm.loop !795

1034:                                             ; preds = %1025, %1016
  %1035 = phi i32 [ %1020, %1016 ], [ %1030, %1025 ]
  %1036 = and i64 %985, 4294967295
  %1037 = getelementptr inbounds i32, ptr %6, i64 %1036
  %1038 = load i32, ptr %1037, align 4, !tbaa !5
  %1039 = mul nsw i32 %1038, %1035
  %1040 = add nsw i32 %1039, %979
  %1041 = icmp sgt i64 %977, 2
  %1042 = add nsw i64 %978, -1
  %1043 = add i32 %976, 1
  br i1 %1041, label %975, label %1044, !llvm.loop !796

1044:                                             ; preds = %1034, %971
  %1045 = phi i32 [ %974, %971 ], [ %1040, %1034 ]
  %1046 = sext i32 %1045 to i64
  %1047 = getelementptr inbounds i64, ptr %636, i64 %1046
  %1048 = load i64, ptr %1047, align 8, !tbaa !120
  %1049 = trunc i64 %1048 to i32
  %1050 = load i32, ptr %638, align 4, !tbaa !5
  %1051 = mul nsw i32 %1049, %1049
  %1052 = add nsw i32 %1051, %1050
  store i32 %1052, ptr %638, align 4, !tbaa !5
  %1053 = fadd fast double %973, 1.000000e+00
  %1054 = add nuw nsw i32 %972, 1
  br i1 %965, label %1055, label %1102

1055:                                             ; preds = %1044
  %1056 = load i32, ptr %4, align 4, !tbaa !5
  %1057 = load i32, ptr %12, align 4, !tbaa !5
  %1058 = add nsw i32 %1057, -1
  %1059 = icmp slt i32 %1056, %1058
  br i1 %1059, label %1079, label %1060

1060:                                             ; preds = %1055
  %1061 = icmp eq i32 %1056, %1058
  br i1 %1061, label %1062, label %1095

1062:                                             ; preds = %1060
  store i32 0, ptr %4, align 4, !tbaa !5
  %1063 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1063, ptr %6, align 4, !tbaa !5
  br i1 %970, label %1102, label %1064

1064:                                             ; preds = %1062, %1089
  %1065 = phi i64 [ %1093, %1089 ], [ 1, %1062 ]
  %1066 = getelementptr inbounds i32, ptr %4, i64 %1065
  %1067 = load i32, ptr %1066, align 4, !tbaa !5
  %1068 = getelementptr inbounds i32, ptr %12, i64 %1065
  %1069 = load i32, ptr %1068, align 4, !tbaa !5
  %1070 = add nsw i32 %1069, -1
  %1071 = icmp slt i32 %1067, %1070
  br i1 %1071, label %1072, label %1087

1072:                                             ; preds = %1064
  br i1 %1059, label %1079, label %1073

1073:                                             ; preds = %1072
  %1074 = getelementptr inbounds i32, ptr %7, i64 %1065
  %1075 = load i32, ptr %1074, align 4, !tbaa !5
  %1076 = getelementptr inbounds i32, ptr %6, i64 %1065
  %1077 = load i32, ptr %1076, align 4, !tbaa !5
  %1078 = add nsw i32 %1077, %1075
  store i32 %1078, ptr %1076, align 4, !tbaa !5
  br label %1097

1079:                                             ; preds = %1055, %1072
  %1080 = phi i32 [ %1067, %1072 ], [ %1056, %1055 ]
  %1081 = phi ptr [ %1066, %1072 ], [ %4, %1055 ]
  %1082 = phi i64 [ %1065, %1072 ], [ 0, %1055 ]
  %1083 = add nsw i32 %1080, 1
  store i32 %1083, ptr %1081, align 4, !tbaa !5
  %1084 = getelementptr inbounds i32, ptr %7, i64 %1082
  %1085 = load i32, ptr %1084, align 4, !tbaa !5
  %1086 = getelementptr inbounds i32, ptr %6, i64 %1082
  br label %1097

1087:                                             ; preds = %1064
  %1088 = icmp eq i32 %1067, %1070
  br i1 %1088, label %1089, label %1095

1089:                                             ; preds = %1087
  store i32 0, ptr %1066, align 4, !tbaa !5
  %1090 = getelementptr inbounds i32, ptr %8, i64 %1065
  %1091 = load i32, ptr %1090, align 4, !tbaa !5
  %1092 = getelementptr inbounds i32, ptr %6, i64 %1065
  store i32 %1091, ptr %1092, align 4, !tbaa !5
  %1093 = add nuw nsw i64 %1065, 1
  %1094 = icmp eq i64 %1093, %968
  br i1 %1094, label %1102, label %1064, !llvm.loop !797

1095:                                             ; preds = %1060, %1087
  %1096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

1097:                                             ; preds = %1073, %1079
  %1098 = phi ptr [ %1086, %1079 ], [ %1066, %1073 ]
  %1099 = phi i32 [ %1085, %1079 ], [ 1, %1073 ]
  %1100 = load i32, ptr %1098, align 4, !tbaa !5
  %1101 = add nsw i32 %1100, %1099
  store i32 %1101, ptr %1098, align 4, !tbaa !5
  br label %1102

1102:                                             ; preds = %1089, %1097, %1062, %1044
  %1103 = icmp eq i32 %1054, %5
  br i1 %1103, label %5511, label %971, !llvm.loop !798

1104:                                             ; preds = %954, %1240
  %1105 = phi i32 [ 0, %954 ], [ %1189, %1240 ]
  %1106 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %955, label %1107, label %1176

1107:                                             ; preds = %1104, %1166
  %1108 = phi i32 [ %1175, %1166 ], [ 0, %1104 ]
  %1109 = phi i64 [ %1117, %1166 ], [ %959, %1104 ]
  %1110 = phi i64 [ %1174, %1166 ], [ %958, %1104 ]
  %1111 = phi i32 [ %1172, %1166 ], [ %1106, %1104 ]
  %1112 = sub i32 %957, %1108
  %1113 = tail call i32 @llvm.smin.i32(i32 %1112, i32 0)
  %1114 = sub i32 %1112, %1113
  %1115 = zext i32 %1114 to i64
  %1116 = add nuw nsw i64 %1115, 1
  %1117 = add nsw i64 %1109, -1
  %1118 = icmp ult i32 %1114, 31
  br i1 %1118, label %1154, label %1119

1119:                                             ; preds = %1107
  %1120 = and i64 %1116, 8589934560
  %1121 = sub i64 %1110, %1120
  br label %1122

1122:                                             ; preds = %1122, %1119
  %1123 = phi i64 [ 0, %1119 ], [ %1146, %1122 ]
  %1124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1119 ], [ %1142, %1122 ]
  %1125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1119 ], [ %1143, %1122 ]
  %1126 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1119 ], [ %1144, %1122 ]
  %1127 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1119 ], [ %1145, %1122 ]
  %1128 = sub i64 %1110, %1123
  %1129 = getelementptr inbounds i32, ptr %11, i64 %1128
  %1130 = getelementptr inbounds i32, ptr %1129, i64 -7
  %1131 = load <8 x i32>, ptr %1130, align 4, !tbaa !5
  %1132 = shufflevector <8 x i32> %1131, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1133 = getelementptr inbounds i32, ptr %1129, i64 -15
  %1134 = load <8 x i32>, ptr %1133, align 4, !tbaa !5
  %1135 = shufflevector <8 x i32> %1134, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1136 = getelementptr inbounds i32, ptr %1129, i64 -23
  %1137 = load <8 x i32>, ptr %1136, align 4, !tbaa !5
  %1138 = shufflevector <8 x i32> %1137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1139 = getelementptr inbounds i32, ptr %1129, i64 -31
  %1140 = load <8 x i32>, ptr %1139, align 4, !tbaa !5
  %1141 = shufflevector <8 x i32> %1140, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1142 = mul <8 x i32> %1132, %1124
  %1143 = mul <8 x i32> %1135, %1125
  %1144 = mul <8 x i32> %1138, %1126
  %1145 = mul <8 x i32> %1141, %1127
  %1146 = add nuw i64 %1123, 32
  %1147 = icmp eq i64 %1146, %1120
  br i1 %1147, label %1148, label %1122, !llvm.loop !799

1148:                                             ; preds = %1122
  %1149 = mul <8 x i32> %1143, %1142
  %1150 = mul <8 x i32> %1144, %1149
  %1151 = mul <8 x i32> %1145, %1150
  %1152 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1151)
  %1153 = icmp eq i64 %1116, %1120
  br i1 %1153, label %1166, label %1154

1154:                                             ; preds = %1107, %1148
  %1155 = phi i64 [ %1110, %1107 ], [ %1121, %1148 ]
  %1156 = phi i32 [ 1, %1107 ], [ %1152, %1148 ]
  br label %1157

1157:                                             ; preds = %1154, %1157
  %1158 = phi i64 [ %1163, %1157 ], [ %1155, %1154 ]
  %1159 = phi i32 [ %1162, %1157 ], [ %1156, %1154 ]
  %1160 = getelementptr inbounds i32, ptr %11, i64 %1158
  %1161 = load i32, ptr %1160, align 4, !tbaa !5
  %1162 = mul nsw i32 %1161, %1159
  %1163 = add nsw i64 %1158, -1
  %1164 = trunc i64 %1158 to i32
  %1165 = icmp sgt i32 %1164, 0
  br i1 %1165, label %1157, label %1166, !llvm.loop !800

1166:                                             ; preds = %1157, %1148
  %1167 = phi i32 [ %1152, %1148 ], [ %1162, %1157 ]
  %1168 = and i64 %1117, 4294967295
  %1169 = getelementptr inbounds i32, ptr %6, i64 %1168
  %1170 = load i32, ptr %1169, align 4, !tbaa !5
  %1171 = mul nsw i32 %1170, %1167
  %1172 = add nsw i32 %1171, %1111
  %1173 = icmp sgt i64 %1109, 2
  %1174 = add nsw i64 %1110, -1
  %1175 = add i32 %1108, 1
  br i1 %1173, label %1107, label %1176, !llvm.loop !801

1176:                                             ; preds = %1166, %1104
  %1177 = phi i32 [ %1106, %1104 ], [ %1172, %1166 ]
  %1178 = icmp slt i32 %1177, %5
  br i1 %1178, label %1181, label %1179

1179:                                             ; preds = %1176
  %1180 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

1181:                                             ; preds = %1176
  %1182 = sext i32 %1177 to i64
  %1183 = getelementptr inbounds i64, ptr %636, i64 %1182
  %1184 = load i64, ptr %1183, align 8, !tbaa !120
  %1185 = trunc i64 %1184 to i32
  %1186 = load i32, ptr %638, align 4, !tbaa !5
  %1187 = mul nsw i32 %1185, %1185
  %1188 = add nsw i32 %1187, %1186
  store i32 %1188, ptr %638, align 4, !tbaa !5
  %1189 = add nuw nsw i32 %1105, 1
  br i1 %956, label %1190, label %1240

1190:                                             ; preds = %1181
  %1191 = load i32, ptr %4, align 4, !tbaa !5
  %1192 = load i32, ptr %12, align 4, !tbaa !5
  %1193 = add nsw i32 %1192, -1
  %1194 = icmp slt i32 %1191, %1193
  br i1 %1194, label %1217, label %1195

1195:                                             ; preds = %1190
  %1196 = icmp eq i32 %1191, %1193
  br i1 %1196, label %1197, label %1233

1197:                                             ; preds = %1195
  store i32 0, ptr %4, align 4, !tbaa !5
  %1198 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1198, ptr %6, align 4, !tbaa !5
  br i1 %961, label %1240, label %1199

1199:                                             ; preds = %1197, %1227
  %1200 = phi i64 [ %1231, %1227 ], [ 1, %1197 ]
  %1201 = getelementptr inbounds i32, ptr %4, i64 %1200
  %1202 = load i32, ptr %1201, align 4, !tbaa !5
  %1203 = getelementptr inbounds i32, ptr %12, i64 %1200
  %1204 = load i32, ptr %1203, align 4, !tbaa !5
  %1205 = add nsw i32 %1204, -1
  %1206 = icmp slt i32 %1202, %1205
  br i1 %1206, label %1207, label %1225

1207:                                             ; preds = %1199
  br i1 %1194, label %1217, label %1208

1208:                                             ; preds = %1207
  %1209 = shl i64 %1200, 32
  %1210 = add i64 %1209, -4294967296
  %1211 = ashr exact i64 %1210, 32
  %1212 = getelementptr inbounds i32, ptr %7, i64 %1211
  %1213 = load i32, ptr %1212, align 4, !tbaa !5
  %1214 = getelementptr inbounds i32, ptr %6, i64 %1200
  %1215 = load i32, ptr %1214, align 4, !tbaa !5
  %1216 = add nsw i32 %1215, %1213
  store i32 %1216, ptr %1214, align 4, !tbaa !5
  br label %1235

1217:                                             ; preds = %1190, %1207
  %1218 = phi i32 [ %1202, %1207 ], [ %1191, %1190 ]
  %1219 = phi ptr [ %1201, %1207 ], [ %4, %1190 ]
  %1220 = phi i64 [ %1200, %1207 ], [ 0, %1190 ]
  %1221 = add nsw i32 %1218, 1
  store i32 %1221, ptr %1219, align 4, !tbaa !5
  %1222 = getelementptr inbounds i32, ptr %7, i64 %1220
  %1223 = load i32, ptr %1222, align 4, !tbaa !5
  %1224 = getelementptr inbounds i32, ptr %6, i64 %1220
  br label %1235

1225:                                             ; preds = %1199
  %1226 = icmp eq i32 %1202, %1205
  br i1 %1226, label %1227, label %1233

1227:                                             ; preds = %1225
  store i32 0, ptr %1201, align 4, !tbaa !5
  %1228 = getelementptr inbounds i32, ptr %8, i64 %1200
  %1229 = load i32, ptr %1228, align 4, !tbaa !5
  %1230 = getelementptr inbounds i32, ptr %6, i64 %1200
  store i32 %1229, ptr %1230, align 4, !tbaa !5
  %1231 = add nuw nsw i64 %1200, 1
  %1232 = icmp eq i64 %1231, %959
  br i1 %1232, label %1240, label %1199, !llvm.loop !802

1233:                                             ; preds = %1195, %1225
  %1234 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

1235:                                             ; preds = %1208, %1217
  %1236 = phi ptr [ %1224, %1217 ], [ %1201, %1208 ]
  %1237 = phi i32 [ %1223, %1217 ], [ 1, %1208 ]
  %1238 = load i32, ptr %1236, align 4, !tbaa !5
  %1239 = add nsw i32 %1238, %1237
  store i32 %1239, ptr %1236, align 4, !tbaa !5
  br label %1240

1240:                                             ; preds = %1227, %1235, %1197, %1181
  %1241 = icmp eq i32 %1189, %5
  br i1 %1241, label %5511, label %1104, !llvm.loop !803

1242:                                             ; preds = %644
  %1243 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1446, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5511

1244:                                             ; preds = %18
  %1245 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1246 = load ptr, ptr %1245, align 8, !tbaa !9
  %1247 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1248 = load ptr, ptr %1247, align 8, !tbaa !9
  store i8 0, ptr %1248, align 1, !tbaa !11
  %1249 = icmp eq i32 %13, 0
  br i1 %1249, label %1250, label %1254

1250:                                             ; preds = %1244
  %1251 = load i64, ptr %1246, align 8, !tbaa !120
  %1252 = trunc i64 %1251 to i8
  %1253 = mul i8 %1252, %1252
  store i8 %1253, ptr %1248, align 1, !tbaa !11
  br label %5511

1254:                                             ; preds = %1244
  switch i32 %1, label %1856 [
    i32 1, label %1255
    i32 0, label %1562
  ]

1255:                                             ; preds = %1254
  %1256 = getelementptr inbounds i32, ptr %3, i64 %19
  %1257 = load i32, ptr %1256, align 4, !tbaa !5
  %1258 = icmp eq i32 %1257, 0
  %1259 = icmp sgt i32 %5, 0
  br i1 %1258, label %1269, label %1260

1260:                                             ; preds = %1255
  br i1 %1259, label %1261, label %5511

1261:                                             ; preds = %1260
  %1262 = icmp sgt i32 %13, 1
  %1263 = icmp sgt i32 %13, 0
  %1264 = add i32 %13, -2
  %1265 = zext i32 %1264 to i64
  %1266 = zext i32 %13 to i64
  %1267 = add nuw i32 %5, 1
  %1268 = icmp eq i32 %13, 1
  br label %1419

1269:                                             ; preds = %1255
  br i1 %1259, label %1270, label %5511

1270:                                             ; preds = %1269
  %1271 = icmp sgt i32 %13, 1
  %1272 = icmp sgt i32 %13, 0
  %1273 = add i32 %13, -2
  %1274 = zext i32 %1273 to i64
  %1275 = zext i32 %13 to i64
  %1276 = add nuw i32 %5, 1
  %1277 = icmp eq i32 %13, 1
  br label %1278

1278:                                             ; preds = %1270, %1417
  %1279 = phi i32 [ 0, %1270 ], [ %1369, %1417 ]
  %1280 = phi double [ 0.000000e+00, %1270 ], [ %1368, %1417 ]
  %1281 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1271, label %1282, label %1351

1282:                                             ; preds = %1278, %1341
  %1283 = phi i32 [ %1350, %1341 ], [ 0, %1278 ]
  %1284 = phi i64 [ %1292, %1341 ], [ %1275, %1278 ]
  %1285 = phi i64 [ %1349, %1341 ], [ %1274, %1278 ]
  %1286 = phi i32 [ %1347, %1341 ], [ %1281, %1278 ]
  %1287 = sub i32 %1273, %1283
  %1288 = tail call i32 @llvm.smin.i32(i32 %1287, i32 0)
  %1289 = sub i32 %1287, %1288
  %1290 = zext i32 %1289 to i64
  %1291 = add nuw nsw i64 %1290, 1
  %1292 = add nsw i64 %1284, -1
  %1293 = icmp ult i32 %1289, 31
  br i1 %1293, label %1329, label %1294

1294:                                             ; preds = %1282
  %1295 = and i64 %1291, 8589934560
  %1296 = sub i64 %1285, %1295
  br label %1297

1297:                                             ; preds = %1297, %1294
  %1298 = phi i64 [ 0, %1294 ], [ %1321, %1297 ]
  %1299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1317, %1297 ]
  %1300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1318, %1297 ]
  %1301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1319, %1297 ]
  %1302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1320, %1297 ]
  %1303 = sub i64 %1285, %1298
  %1304 = getelementptr inbounds i32, ptr %9, i64 %1303
  %1305 = getelementptr inbounds i32, ptr %1304, i64 -7
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !5
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = getelementptr inbounds i32, ptr %1304, i64 -15
  %1309 = load <8 x i32>, ptr %1308, align 4, !tbaa !5
  %1310 = shufflevector <8 x i32> %1309, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1311 = getelementptr inbounds i32, ptr %1304, i64 -23
  %1312 = load <8 x i32>, ptr %1311, align 4, !tbaa !5
  %1313 = shufflevector <8 x i32> %1312, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1314 = getelementptr inbounds i32, ptr %1304, i64 -31
  %1315 = load <8 x i32>, ptr %1314, align 4, !tbaa !5
  %1316 = shufflevector <8 x i32> %1315, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1317 = mul <8 x i32> %1307, %1299
  %1318 = mul <8 x i32> %1310, %1300
  %1319 = mul <8 x i32> %1313, %1301
  %1320 = mul <8 x i32> %1316, %1302
  %1321 = add nuw i64 %1298, 32
  %1322 = icmp eq i64 %1321, %1295
  br i1 %1322, label %1323, label %1297, !llvm.loop !804

1323:                                             ; preds = %1297
  %1324 = mul <8 x i32> %1318, %1317
  %1325 = mul <8 x i32> %1319, %1324
  %1326 = mul <8 x i32> %1320, %1325
  %1327 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1326)
  %1328 = icmp eq i64 %1291, %1295
  br i1 %1328, label %1341, label %1329

1329:                                             ; preds = %1282, %1323
  %1330 = phi i64 [ %1285, %1282 ], [ %1296, %1323 ]
  %1331 = phi i32 [ 1, %1282 ], [ %1327, %1323 ]
  br label %1332

1332:                                             ; preds = %1329, %1332
  %1333 = phi i64 [ %1338, %1332 ], [ %1330, %1329 ]
  %1334 = phi i32 [ %1337, %1332 ], [ %1331, %1329 ]
  %1335 = getelementptr inbounds i32, ptr %9, i64 %1333
  %1336 = load i32, ptr %1335, align 4, !tbaa !5
  %1337 = mul nsw i32 %1336, %1334
  %1338 = add nsw i64 %1333, -1
  %1339 = trunc i64 %1333 to i32
  %1340 = icmp sgt i32 %1339, 0
  br i1 %1340, label %1332, label %1341, !llvm.loop !805

1341:                                             ; preds = %1332, %1323
  %1342 = phi i32 [ %1327, %1323 ], [ %1337, %1332 ]
  %1343 = and i64 %1292, 4294967295
  %1344 = getelementptr inbounds i32, ptr %6, i64 %1343
  %1345 = load i32, ptr %1344, align 4, !tbaa !5
  %1346 = mul nsw i32 %1345, %1342
  %1347 = add nsw i32 %1346, %1286
  %1348 = icmp sgt i64 %1284, 2
  %1349 = add nsw i64 %1285, -1
  %1350 = add i32 %1283, 1
  br i1 %1348, label %1282, label %1351, !llvm.loop !806

1351:                                             ; preds = %1341, %1278
  %1352 = phi i32 [ %1281, %1278 ], [ %1347, %1341 ]
  %1353 = sext i32 %1352 to i64
  %1354 = getelementptr inbounds double, ptr %2, i64 %1353
  %1355 = load double, ptr %1354, align 8, !tbaa !18
  %1356 = getelementptr inbounds i64, ptr %1246, i64 %1353
  %1357 = load i64, ptr %1356, align 8, !tbaa !120
  %1358 = trunc i64 %1357 to i32
  %1359 = load i8, ptr %1248, align 1, !tbaa !11
  %1360 = sitofp i8 %1359 to double
  %1361 = shl i32 %1358, 24
  %1362 = ashr exact i32 %1361, 24
  %1363 = sitofp i32 %1362 to double
  %1364 = fmul fast double %1355, %1363
  %1365 = fmul fast double %1364, %1364
  %1366 = fadd fast double %1365, %1360
  %1367 = fptosi double %1366 to i8
  store i8 %1367, ptr %1248, align 1, !tbaa !11
  %1368 = fadd fast double %1355, %1280
  %1369 = add nuw nsw i32 %1279, 1
  br i1 %1272, label %1370, label %1417

1370:                                             ; preds = %1351
  %1371 = load i32, ptr %4, align 4, !tbaa !5
  %1372 = load i32, ptr %12, align 4, !tbaa !5
  %1373 = add nsw i32 %1372, -1
  %1374 = icmp slt i32 %1371, %1373
  br i1 %1374, label %1394, label %1375

1375:                                             ; preds = %1370
  %1376 = icmp eq i32 %1371, %1373
  br i1 %1376, label %1377, label %1410

1377:                                             ; preds = %1375
  store i32 0, ptr %4, align 4, !tbaa !5
  %1378 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1378, ptr %6, align 4, !tbaa !5
  br i1 %1277, label %1417, label %1379

1379:                                             ; preds = %1377, %1404
  %1380 = phi i64 [ %1408, %1404 ], [ 1, %1377 ]
  %1381 = getelementptr inbounds i32, ptr %4, i64 %1380
  %1382 = load i32, ptr %1381, align 4, !tbaa !5
  %1383 = getelementptr inbounds i32, ptr %12, i64 %1380
  %1384 = load i32, ptr %1383, align 4, !tbaa !5
  %1385 = add nsw i32 %1384, -1
  %1386 = icmp slt i32 %1382, %1385
  br i1 %1386, label %1387, label %1402

1387:                                             ; preds = %1379
  br i1 %1374, label %1394, label %1388

1388:                                             ; preds = %1387
  %1389 = getelementptr inbounds i32, ptr %7, i64 %1380
  %1390 = load i32, ptr %1389, align 4, !tbaa !5
  %1391 = getelementptr inbounds i32, ptr %6, i64 %1380
  %1392 = load i32, ptr %1391, align 4, !tbaa !5
  %1393 = add nsw i32 %1392, %1390
  store i32 %1393, ptr %1391, align 4, !tbaa !5
  br label %1412

1394:                                             ; preds = %1370, %1387
  %1395 = phi i32 [ %1382, %1387 ], [ %1371, %1370 ]
  %1396 = phi ptr [ %1381, %1387 ], [ %4, %1370 ]
  %1397 = phi i64 [ %1380, %1387 ], [ 0, %1370 ]
  %1398 = add nsw i32 %1395, 1
  store i32 %1398, ptr %1396, align 4, !tbaa !5
  %1399 = getelementptr inbounds i32, ptr %7, i64 %1397
  %1400 = load i32, ptr %1399, align 4, !tbaa !5
  %1401 = getelementptr inbounds i32, ptr %6, i64 %1397
  br label %1412

1402:                                             ; preds = %1379
  %1403 = icmp eq i32 %1382, %1385
  br i1 %1403, label %1404, label %1410

1404:                                             ; preds = %1402
  store i32 0, ptr %1381, align 4, !tbaa !5
  %1405 = getelementptr inbounds i32, ptr %8, i64 %1380
  %1406 = load i32, ptr %1405, align 4, !tbaa !5
  %1407 = getelementptr inbounds i32, ptr %6, i64 %1380
  store i32 %1406, ptr %1407, align 4, !tbaa !5
  %1408 = add nuw nsw i64 %1380, 1
  %1409 = icmp eq i64 %1408, %1275
  br i1 %1409, label %1417, label %1379, !llvm.loop !807

1410:                                             ; preds = %1375, %1402
  %1411 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

1412:                                             ; preds = %1388, %1394
  %1413 = phi ptr [ %1401, %1394 ], [ %1381, %1388 ]
  %1414 = phi i32 [ %1400, %1394 ], [ 1, %1388 ]
  %1415 = load i32, ptr %1413, align 4, !tbaa !5
  %1416 = add nsw i32 %1415, %1414
  store i32 %1416, ptr %1413, align 4, !tbaa !5
  br label %1417

1417:                                             ; preds = %1404, %1412, %1377, %1351
  %1418 = icmp eq i32 %1369, %5
  br i1 %1418, label %5511, label %1278, !llvm.loop !808

1419:                                             ; preds = %1261, %1560
  %1420 = phi i32 [ 0, %1261 ], [ %1509, %1560 ]
  %1421 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1262, label %1422, label %1491

1422:                                             ; preds = %1419, %1481
  %1423 = phi i32 [ %1490, %1481 ], [ 0, %1419 ]
  %1424 = phi i64 [ %1432, %1481 ], [ %1266, %1419 ]
  %1425 = phi i64 [ %1489, %1481 ], [ %1265, %1419 ]
  %1426 = phi i32 [ %1487, %1481 ], [ %1421, %1419 ]
  %1427 = sub i32 %1264, %1423
  %1428 = tail call i32 @llvm.smin.i32(i32 %1427, i32 0)
  %1429 = sub i32 %1427, %1428
  %1430 = zext i32 %1429 to i64
  %1431 = add nuw nsw i64 %1430, 1
  %1432 = add nsw i64 %1424, -1
  %1433 = icmp ult i32 %1429, 31
  br i1 %1433, label %1469, label %1434

1434:                                             ; preds = %1422
  %1435 = and i64 %1431, 8589934560
  %1436 = sub i64 %1425, %1435
  br label %1437

1437:                                             ; preds = %1437, %1434
  %1438 = phi i64 [ 0, %1434 ], [ %1461, %1437 ]
  %1439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1434 ], [ %1457, %1437 ]
  %1440 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1434 ], [ %1458, %1437 ]
  %1441 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1434 ], [ %1459, %1437 ]
  %1442 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1434 ], [ %1460, %1437 ]
  %1443 = sub i64 %1425, %1438
  %1444 = getelementptr inbounds i32, ptr %11, i64 %1443
  %1445 = getelementptr inbounds i32, ptr %1444, i64 -7
  %1446 = load <8 x i32>, ptr %1445, align 4, !tbaa !5
  %1447 = shufflevector <8 x i32> %1446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1448 = getelementptr inbounds i32, ptr %1444, i64 -15
  %1449 = load <8 x i32>, ptr %1448, align 4, !tbaa !5
  %1450 = shufflevector <8 x i32> %1449, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1451 = getelementptr inbounds i32, ptr %1444, i64 -23
  %1452 = load <8 x i32>, ptr %1451, align 4, !tbaa !5
  %1453 = shufflevector <8 x i32> %1452, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1454 = getelementptr inbounds i32, ptr %1444, i64 -31
  %1455 = load <8 x i32>, ptr %1454, align 4, !tbaa !5
  %1456 = shufflevector <8 x i32> %1455, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1457 = mul <8 x i32> %1447, %1439
  %1458 = mul <8 x i32> %1450, %1440
  %1459 = mul <8 x i32> %1453, %1441
  %1460 = mul <8 x i32> %1456, %1442
  %1461 = add nuw i64 %1438, 32
  %1462 = icmp eq i64 %1461, %1435
  br i1 %1462, label %1463, label %1437, !llvm.loop !809

1463:                                             ; preds = %1437
  %1464 = mul <8 x i32> %1458, %1457
  %1465 = mul <8 x i32> %1459, %1464
  %1466 = mul <8 x i32> %1460, %1465
  %1467 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1466)
  %1468 = icmp eq i64 %1431, %1435
  br i1 %1468, label %1481, label %1469

1469:                                             ; preds = %1422, %1463
  %1470 = phi i64 [ %1425, %1422 ], [ %1436, %1463 ]
  %1471 = phi i32 [ 1, %1422 ], [ %1467, %1463 ]
  br label %1472

1472:                                             ; preds = %1469, %1472
  %1473 = phi i64 [ %1478, %1472 ], [ %1470, %1469 ]
  %1474 = phi i32 [ %1477, %1472 ], [ %1471, %1469 ]
  %1475 = getelementptr inbounds i32, ptr %11, i64 %1473
  %1476 = load i32, ptr %1475, align 4, !tbaa !5
  %1477 = mul nsw i32 %1476, %1474
  %1478 = add nsw i64 %1473, -1
  %1479 = trunc i64 %1473 to i32
  %1480 = icmp sgt i32 %1479, 0
  br i1 %1480, label %1472, label %1481, !llvm.loop !810

1481:                                             ; preds = %1472, %1463
  %1482 = phi i32 [ %1467, %1463 ], [ %1477, %1472 ]
  %1483 = and i64 %1432, 4294967295
  %1484 = getelementptr inbounds i32, ptr %6, i64 %1483
  %1485 = load i32, ptr %1484, align 4, !tbaa !5
  %1486 = mul nsw i32 %1485, %1482
  %1487 = add nsw i32 %1486, %1426
  %1488 = icmp sgt i64 %1424, 2
  %1489 = add nsw i64 %1425, -1
  %1490 = add i32 %1423, 1
  br i1 %1488, label %1422, label %1491, !llvm.loop !811

1491:                                             ; preds = %1481, %1419
  %1492 = phi i32 [ %1421, %1419 ], [ %1487, %1481 ]
  %1493 = icmp slt i32 %1492, %5
  br i1 %1493, label %1496, label %1494

1494:                                             ; preds = %1491
  %1495 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

1496:                                             ; preds = %1491
  %1497 = sext i32 %1492 to i64
  %1498 = getelementptr inbounds i64, ptr %1246, i64 %1497
  %1499 = load i64, ptr %1498, align 8, !tbaa !120
  %1500 = trunc i64 %1499 to i32
  %1501 = load i8, ptr %1248, align 1, !tbaa !11
  %1502 = sitofp i8 %1501 to double
  %1503 = shl i32 %1500, 24
  %1504 = ashr exact i32 %1503, 24
  %1505 = sitofp i32 %1504 to double
  %1506 = fmul fast double %1505, %1505
  %1507 = fadd fast double %1506, %1502
  %1508 = fptosi double %1507 to i8
  store i8 %1508, ptr %1248, align 1, !tbaa !11
  %1509 = add nuw nsw i32 %1420, 1
  br i1 %1263, label %1510, label %1560

1510:                                             ; preds = %1496
  %1511 = load i32, ptr %4, align 4, !tbaa !5
  %1512 = load i32, ptr %12, align 4, !tbaa !5
  %1513 = add nsw i32 %1512, -1
  %1514 = icmp slt i32 %1511, %1513
  br i1 %1514, label %1537, label %1515

1515:                                             ; preds = %1510
  %1516 = icmp eq i32 %1511, %1513
  br i1 %1516, label %1517, label %1553

1517:                                             ; preds = %1515
  store i32 0, ptr %4, align 4, !tbaa !5
  %1518 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1518, ptr %6, align 4, !tbaa !5
  br i1 %1268, label %1560, label %1519

1519:                                             ; preds = %1517, %1547
  %1520 = phi i64 [ %1551, %1547 ], [ 1, %1517 ]
  %1521 = getelementptr inbounds i32, ptr %4, i64 %1520
  %1522 = load i32, ptr %1521, align 4, !tbaa !5
  %1523 = getelementptr inbounds i32, ptr %12, i64 %1520
  %1524 = load i32, ptr %1523, align 4, !tbaa !5
  %1525 = add nsw i32 %1524, -1
  %1526 = icmp slt i32 %1522, %1525
  br i1 %1526, label %1527, label %1545

1527:                                             ; preds = %1519
  br i1 %1514, label %1537, label %1528

1528:                                             ; preds = %1527
  %1529 = shl i64 %1520, 32
  %1530 = add i64 %1529, -4294967296
  %1531 = ashr exact i64 %1530, 32
  %1532 = getelementptr inbounds i32, ptr %7, i64 %1531
  %1533 = load i32, ptr %1532, align 4, !tbaa !5
  %1534 = getelementptr inbounds i32, ptr %6, i64 %1520
  %1535 = load i32, ptr %1534, align 4, !tbaa !5
  %1536 = add nsw i32 %1535, %1533
  store i32 %1536, ptr %1534, align 4, !tbaa !5
  br label %1555

1537:                                             ; preds = %1510, %1527
  %1538 = phi i32 [ %1522, %1527 ], [ %1511, %1510 ]
  %1539 = phi ptr [ %1521, %1527 ], [ %4, %1510 ]
  %1540 = phi i64 [ %1520, %1527 ], [ 0, %1510 ]
  %1541 = add nsw i32 %1538, 1
  store i32 %1541, ptr %1539, align 4, !tbaa !5
  %1542 = getelementptr inbounds i32, ptr %7, i64 %1540
  %1543 = load i32, ptr %1542, align 4, !tbaa !5
  %1544 = getelementptr inbounds i32, ptr %6, i64 %1540
  br label %1555

1545:                                             ; preds = %1519
  %1546 = icmp eq i32 %1522, %1525
  br i1 %1546, label %1547, label %1553

1547:                                             ; preds = %1545
  store i32 0, ptr %1521, align 4, !tbaa !5
  %1548 = getelementptr inbounds i32, ptr %8, i64 %1520
  %1549 = load i32, ptr %1548, align 4, !tbaa !5
  %1550 = getelementptr inbounds i32, ptr %6, i64 %1520
  store i32 %1549, ptr %1550, align 4, !tbaa !5
  %1551 = add nuw nsw i64 %1520, 1
  %1552 = icmp eq i64 %1551, %1266
  br i1 %1552, label %1560, label %1519, !llvm.loop !812

1553:                                             ; preds = %1515, %1545
  %1554 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

1555:                                             ; preds = %1528, %1537
  %1556 = phi ptr [ %1544, %1537 ], [ %1521, %1528 ]
  %1557 = phi i32 [ %1543, %1537 ], [ 1, %1528 ]
  %1558 = load i32, ptr %1556, align 4, !tbaa !5
  %1559 = add nsw i32 %1558, %1557
  store i32 %1559, ptr %1556, align 4, !tbaa !5
  br label %1560

1560:                                             ; preds = %1547, %1555, %1517, %1496
  %1561 = icmp eq i32 %1509, %5
  br i1 %1561, label %5511, label %1419, !llvm.loop !813

1562:                                             ; preds = %1254
  %1563 = getelementptr inbounds i32, ptr %3, i64 %19
  %1564 = load i32, ptr %1563, align 4, !tbaa !5
  %1565 = icmp eq i32 %1564, 0
  %1566 = icmp sgt i32 %5, 0
  br i1 %1565, label %1576, label %1567

1567:                                             ; preds = %1562
  br i1 %1566, label %1568, label %5511

1568:                                             ; preds = %1567
  %1569 = icmp sgt i32 %13, 1
  %1570 = icmp sgt i32 %13, 0
  %1571 = add i32 %13, -2
  %1572 = zext i32 %1571 to i64
  %1573 = zext i32 %13 to i64
  %1574 = add nuw i32 %5, 1
  %1575 = icmp eq i32 %13, 1
  br label %1718

1576:                                             ; preds = %1562
  br i1 %1566, label %1577, label %5511

1577:                                             ; preds = %1576
  %1578 = icmp sgt i32 %13, 1
  %1579 = icmp sgt i32 %13, 0
  %1580 = add i32 %13, -2
  %1581 = zext i32 %1580 to i64
  %1582 = zext i32 %13 to i64
  %1583 = add nuw i32 %5, 1
  %1584 = icmp eq i32 %13, 1
  br label %1585

1585:                                             ; preds = %1577, %1716
  %1586 = phi i32 [ 0, %1577 ], [ %1668, %1716 ]
  %1587 = phi double [ 0.000000e+00, %1577 ], [ %1667, %1716 ]
  %1588 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1578, label %1589, label %1658

1589:                                             ; preds = %1585, %1648
  %1590 = phi i32 [ %1657, %1648 ], [ 0, %1585 ]
  %1591 = phi i64 [ %1599, %1648 ], [ %1582, %1585 ]
  %1592 = phi i64 [ %1656, %1648 ], [ %1581, %1585 ]
  %1593 = phi i32 [ %1654, %1648 ], [ %1588, %1585 ]
  %1594 = sub i32 %1580, %1590
  %1595 = tail call i32 @llvm.smin.i32(i32 %1594, i32 0)
  %1596 = sub i32 %1594, %1595
  %1597 = zext i32 %1596 to i64
  %1598 = add nuw nsw i64 %1597, 1
  %1599 = add nsw i64 %1591, -1
  %1600 = icmp ult i32 %1596, 31
  br i1 %1600, label %1636, label %1601

1601:                                             ; preds = %1589
  %1602 = and i64 %1598, 8589934560
  %1603 = sub i64 %1592, %1602
  br label %1604

1604:                                             ; preds = %1604, %1601
  %1605 = phi i64 [ 0, %1601 ], [ %1628, %1604 ]
  %1606 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1601 ], [ %1624, %1604 ]
  %1607 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1601 ], [ %1625, %1604 ]
  %1608 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1601 ], [ %1626, %1604 ]
  %1609 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1601 ], [ %1627, %1604 ]
  %1610 = sub i64 %1592, %1605
  %1611 = getelementptr inbounds i32, ptr %9, i64 %1610
  %1612 = getelementptr inbounds i32, ptr %1611, i64 -7
  %1613 = load <8 x i32>, ptr %1612, align 4, !tbaa !5
  %1614 = shufflevector <8 x i32> %1613, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1615 = getelementptr inbounds i32, ptr %1611, i64 -15
  %1616 = load <8 x i32>, ptr %1615, align 4, !tbaa !5
  %1617 = shufflevector <8 x i32> %1616, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1618 = getelementptr inbounds i32, ptr %1611, i64 -23
  %1619 = load <8 x i32>, ptr %1618, align 4, !tbaa !5
  %1620 = shufflevector <8 x i32> %1619, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1621 = getelementptr inbounds i32, ptr %1611, i64 -31
  %1622 = load <8 x i32>, ptr %1621, align 4, !tbaa !5
  %1623 = shufflevector <8 x i32> %1622, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1624 = mul <8 x i32> %1614, %1606
  %1625 = mul <8 x i32> %1617, %1607
  %1626 = mul <8 x i32> %1620, %1608
  %1627 = mul <8 x i32> %1623, %1609
  %1628 = add nuw i64 %1605, 32
  %1629 = icmp eq i64 %1628, %1602
  br i1 %1629, label %1630, label %1604, !llvm.loop !814

1630:                                             ; preds = %1604
  %1631 = mul <8 x i32> %1625, %1624
  %1632 = mul <8 x i32> %1626, %1631
  %1633 = mul <8 x i32> %1627, %1632
  %1634 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1633)
  %1635 = icmp eq i64 %1598, %1602
  br i1 %1635, label %1648, label %1636

1636:                                             ; preds = %1589, %1630
  %1637 = phi i64 [ %1592, %1589 ], [ %1603, %1630 ]
  %1638 = phi i32 [ 1, %1589 ], [ %1634, %1630 ]
  br label %1639

1639:                                             ; preds = %1636, %1639
  %1640 = phi i64 [ %1645, %1639 ], [ %1637, %1636 ]
  %1641 = phi i32 [ %1644, %1639 ], [ %1638, %1636 ]
  %1642 = getelementptr inbounds i32, ptr %9, i64 %1640
  %1643 = load i32, ptr %1642, align 4, !tbaa !5
  %1644 = mul nsw i32 %1643, %1641
  %1645 = add nsw i64 %1640, -1
  %1646 = trunc i64 %1640 to i32
  %1647 = icmp sgt i32 %1646, 0
  br i1 %1647, label %1639, label %1648, !llvm.loop !815

1648:                                             ; preds = %1639, %1630
  %1649 = phi i32 [ %1634, %1630 ], [ %1644, %1639 ]
  %1650 = and i64 %1599, 4294967295
  %1651 = getelementptr inbounds i32, ptr %6, i64 %1650
  %1652 = load i32, ptr %1651, align 4, !tbaa !5
  %1653 = mul nsw i32 %1652, %1649
  %1654 = add nsw i32 %1653, %1593
  %1655 = icmp sgt i64 %1591, 2
  %1656 = add nsw i64 %1592, -1
  %1657 = add i32 %1590, 1
  br i1 %1655, label %1589, label %1658, !llvm.loop !816

1658:                                             ; preds = %1648, %1585
  %1659 = phi i32 [ %1588, %1585 ], [ %1654, %1648 ]
  %1660 = sext i32 %1659 to i64
  %1661 = getelementptr inbounds i64, ptr %1246, i64 %1660
  %1662 = load i64, ptr %1661, align 8, !tbaa !120
  %1663 = trunc i64 %1662 to i8
  %1664 = load i8, ptr %1248, align 1, !tbaa !11
  %1665 = mul i8 %1663, %1663
  %1666 = add i8 %1665, %1664
  store i8 %1666, ptr %1248, align 1, !tbaa !11
  %1667 = fadd fast double %1587, 1.000000e+00
  %1668 = add nuw nsw i32 %1586, 1
  br i1 %1579, label %1669, label %1716

1669:                                             ; preds = %1658
  %1670 = load i32, ptr %4, align 4, !tbaa !5
  %1671 = load i32, ptr %12, align 4, !tbaa !5
  %1672 = add nsw i32 %1671, -1
  %1673 = icmp slt i32 %1670, %1672
  br i1 %1673, label %1693, label %1674

1674:                                             ; preds = %1669
  %1675 = icmp eq i32 %1670, %1672
  br i1 %1675, label %1676, label %1709

1676:                                             ; preds = %1674
  store i32 0, ptr %4, align 4, !tbaa !5
  %1677 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1677, ptr %6, align 4, !tbaa !5
  br i1 %1584, label %1716, label %1678

1678:                                             ; preds = %1676, %1703
  %1679 = phi i64 [ %1707, %1703 ], [ 1, %1676 ]
  %1680 = getelementptr inbounds i32, ptr %4, i64 %1679
  %1681 = load i32, ptr %1680, align 4, !tbaa !5
  %1682 = getelementptr inbounds i32, ptr %12, i64 %1679
  %1683 = load i32, ptr %1682, align 4, !tbaa !5
  %1684 = add nsw i32 %1683, -1
  %1685 = icmp slt i32 %1681, %1684
  br i1 %1685, label %1686, label %1701

1686:                                             ; preds = %1678
  br i1 %1673, label %1693, label %1687

1687:                                             ; preds = %1686
  %1688 = getelementptr inbounds i32, ptr %7, i64 %1679
  %1689 = load i32, ptr %1688, align 4, !tbaa !5
  %1690 = getelementptr inbounds i32, ptr %6, i64 %1679
  %1691 = load i32, ptr %1690, align 4, !tbaa !5
  %1692 = add nsw i32 %1691, %1689
  store i32 %1692, ptr %1690, align 4, !tbaa !5
  br label %1711

1693:                                             ; preds = %1669, %1686
  %1694 = phi i32 [ %1681, %1686 ], [ %1670, %1669 ]
  %1695 = phi ptr [ %1680, %1686 ], [ %4, %1669 ]
  %1696 = phi i64 [ %1679, %1686 ], [ 0, %1669 ]
  %1697 = add nsw i32 %1694, 1
  store i32 %1697, ptr %1695, align 4, !tbaa !5
  %1698 = getelementptr inbounds i32, ptr %7, i64 %1696
  %1699 = load i32, ptr %1698, align 4, !tbaa !5
  %1700 = getelementptr inbounds i32, ptr %6, i64 %1696
  br label %1711

1701:                                             ; preds = %1678
  %1702 = icmp eq i32 %1681, %1684
  br i1 %1702, label %1703, label %1709

1703:                                             ; preds = %1701
  store i32 0, ptr %1680, align 4, !tbaa !5
  %1704 = getelementptr inbounds i32, ptr %8, i64 %1679
  %1705 = load i32, ptr %1704, align 4, !tbaa !5
  %1706 = getelementptr inbounds i32, ptr %6, i64 %1679
  store i32 %1705, ptr %1706, align 4, !tbaa !5
  %1707 = add nuw nsw i64 %1679, 1
  %1708 = icmp eq i64 %1707, %1582
  br i1 %1708, label %1716, label %1678, !llvm.loop !817

1709:                                             ; preds = %1674, %1701
  %1710 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

1711:                                             ; preds = %1687, %1693
  %1712 = phi ptr [ %1700, %1693 ], [ %1680, %1687 ]
  %1713 = phi i32 [ %1699, %1693 ], [ 1, %1687 ]
  %1714 = load i32, ptr %1712, align 4, !tbaa !5
  %1715 = add nsw i32 %1714, %1713
  store i32 %1715, ptr %1712, align 4, !tbaa !5
  br label %1716

1716:                                             ; preds = %1703, %1711, %1676, %1658
  %1717 = icmp eq i32 %1668, %5
  br i1 %1717, label %5511, label %1585, !llvm.loop !818

1718:                                             ; preds = %1568, %1854
  %1719 = phi i32 [ 0, %1568 ], [ %1803, %1854 ]
  %1720 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1569, label %1721, label %1790

1721:                                             ; preds = %1718, %1780
  %1722 = phi i32 [ %1789, %1780 ], [ 0, %1718 ]
  %1723 = phi i64 [ %1731, %1780 ], [ %1573, %1718 ]
  %1724 = phi i64 [ %1788, %1780 ], [ %1572, %1718 ]
  %1725 = phi i32 [ %1786, %1780 ], [ %1720, %1718 ]
  %1726 = sub i32 %1571, %1722
  %1727 = tail call i32 @llvm.smin.i32(i32 %1726, i32 0)
  %1728 = sub i32 %1726, %1727
  %1729 = zext i32 %1728 to i64
  %1730 = add nuw nsw i64 %1729, 1
  %1731 = add nsw i64 %1723, -1
  %1732 = icmp ult i32 %1728, 31
  br i1 %1732, label %1768, label %1733

1733:                                             ; preds = %1721
  %1734 = and i64 %1730, 8589934560
  %1735 = sub i64 %1724, %1734
  br label %1736

1736:                                             ; preds = %1736, %1733
  %1737 = phi i64 [ 0, %1733 ], [ %1760, %1736 ]
  %1738 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1733 ], [ %1756, %1736 ]
  %1739 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1733 ], [ %1757, %1736 ]
  %1740 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1733 ], [ %1758, %1736 ]
  %1741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1733 ], [ %1759, %1736 ]
  %1742 = sub i64 %1724, %1737
  %1743 = getelementptr inbounds i32, ptr %11, i64 %1742
  %1744 = getelementptr inbounds i32, ptr %1743, i64 -7
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !5
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = getelementptr inbounds i32, ptr %1743, i64 -15
  %1748 = load <8 x i32>, ptr %1747, align 4, !tbaa !5
  %1749 = shufflevector <8 x i32> %1748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1750 = getelementptr inbounds i32, ptr %1743, i64 -23
  %1751 = load <8 x i32>, ptr %1750, align 4, !tbaa !5
  %1752 = shufflevector <8 x i32> %1751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1753 = getelementptr inbounds i32, ptr %1743, i64 -31
  %1754 = load <8 x i32>, ptr %1753, align 4, !tbaa !5
  %1755 = shufflevector <8 x i32> %1754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1756 = mul <8 x i32> %1746, %1738
  %1757 = mul <8 x i32> %1749, %1739
  %1758 = mul <8 x i32> %1752, %1740
  %1759 = mul <8 x i32> %1755, %1741
  %1760 = add nuw i64 %1737, 32
  %1761 = icmp eq i64 %1760, %1734
  br i1 %1761, label %1762, label %1736, !llvm.loop !819

1762:                                             ; preds = %1736
  %1763 = mul <8 x i32> %1757, %1756
  %1764 = mul <8 x i32> %1758, %1763
  %1765 = mul <8 x i32> %1759, %1764
  %1766 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1765)
  %1767 = icmp eq i64 %1730, %1734
  br i1 %1767, label %1780, label %1768

1768:                                             ; preds = %1721, %1762
  %1769 = phi i64 [ %1724, %1721 ], [ %1735, %1762 ]
  %1770 = phi i32 [ 1, %1721 ], [ %1766, %1762 ]
  br label %1771

1771:                                             ; preds = %1768, %1771
  %1772 = phi i64 [ %1777, %1771 ], [ %1769, %1768 ]
  %1773 = phi i32 [ %1776, %1771 ], [ %1770, %1768 ]
  %1774 = getelementptr inbounds i32, ptr %11, i64 %1772
  %1775 = load i32, ptr %1774, align 4, !tbaa !5
  %1776 = mul nsw i32 %1775, %1773
  %1777 = add nsw i64 %1772, -1
  %1778 = trunc i64 %1772 to i32
  %1779 = icmp sgt i32 %1778, 0
  br i1 %1779, label %1771, label %1780, !llvm.loop !820

1780:                                             ; preds = %1771, %1762
  %1781 = phi i32 [ %1766, %1762 ], [ %1776, %1771 ]
  %1782 = and i64 %1731, 4294967295
  %1783 = getelementptr inbounds i32, ptr %6, i64 %1782
  %1784 = load i32, ptr %1783, align 4, !tbaa !5
  %1785 = mul nsw i32 %1784, %1781
  %1786 = add nsw i32 %1785, %1725
  %1787 = icmp sgt i64 %1723, 2
  %1788 = add nsw i64 %1724, -1
  %1789 = add i32 %1722, 1
  br i1 %1787, label %1721, label %1790, !llvm.loop !821

1790:                                             ; preds = %1780, %1718
  %1791 = phi i32 [ %1720, %1718 ], [ %1786, %1780 ]
  %1792 = icmp slt i32 %1791, %5
  br i1 %1792, label %1795, label %1793

1793:                                             ; preds = %1790
  %1794 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

1795:                                             ; preds = %1790
  %1796 = sext i32 %1791 to i64
  %1797 = getelementptr inbounds i64, ptr %1246, i64 %1796
  %1798 = load i64, ptr %1797, align 8, !tbaa !120
  %1799 = trunc i64 %1798 to i8
  %1800 = load i8, ptr %1248, align 1, !tbaa !11
  %1801 = mul i8 %1799, %1799
  %1802 = add i8 %1801, %1800
  store i8 %1802, ptr %1248, align 1, !tbaa !11
  %1803 = add nuw nsw i32 %1719, 1
  br i1 %1570, label %1804, label %1854

1804:                                             ; preds = %1795
  %1805 = load i32, ptr %4, align 4, !tbaa !5
  %1806 = load i32, ptr %12, align 4, !tbaa !5
  %1807 = add nsw i32 %1806, -1
  %1808 = icmp slt i32 %1805, %1807
  br i1 %1808, label %1831, label %1809

1809:                                             ; preds = %1804
  %1810 = icmp eq i32 %1805, %1807
  br i1 %1810, label %1811, label %1847

1811:                                             ; preds = %1809
  store i32 0, ptr %4, align 4, !tbaa !5
  %1812 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1812, ptr %6, align 4, !tbaa !5
  br i1 %1575, label %1854, label %1813

1813:                                             ; preds = %1811, %1841
  %1814 = phi i64 [ %1845, %1841 ], [ 1, %1811 ]
  %1815 = getelementptr inbounds i32, ptr %4, i64 %1814
  %1816 = load i32, ptr %1815, align 4, !tbaa !5
  %1817 = getelementptr inbounds i32, ptr %12, i64 %1814
  %1818 = load i32, ptr %1817, align 4, !tbaa !5
  %1819 = add nsw i32 %1818, -1
  %1820 = icmp slt i32 %1816, %1819
  br i1 %1820, label %1821, label %1839

1821:                                             ; preds = %1813
  br i1 %1808, label %1831, label %1822

1822:                                             ; preds = %1821
  %1823 = shl i64 %1814, 32
  %1824 = add i64 %1823, -4294967296
  %1825 = ashr exact i64 %1824, 32
  %1826 = getelementptr inbounds i32, ptr %7, i64 %1825
  %1827 = load i32, ptr %1826, align 4, !tbaa !5
  %1828 = getelementptr inbounds i32, ptr %6, i64 %1814
  %1829 = load i32, ptr %1828, align 4, !tbaa !5
  %1830 = add nsw i32 %1829, %1827
  store i32 %1830, ptr %1828, align 4, !tbaa !5
  br label %1849

1831:                                             ; preds = %1804, %1821
  %1832 = phi i32 [ %1816, %1821 ], [ %1805, %1804 ]
  %1833 = phi ptr [ %1815, %1821 ], [ %4, %1804 ]
  %1834 = phi i64 [ %1814, %1821 ], [ 0, %1804 ]
  %1835 = add nsw i32 %1832, 1
  store i32 %1835, ptr %1833, align 4, !tbaa !5
  %1836 = getelementptr inbounds i32, ptr %7, i64 %1834
  %1837 = load i32, ptr %1836, align 4, !tbaa !5
  %1838 = getelementptr inbounds i32, ptr %6, i64 %1834
  br label %1849

1839:                                             ; preds = %1813
  %1840 = icmp eq i32 %1816, %1819
  br i1 %1840, label %1841, label %1847

1841:                                             ; preds = %1839
  store i32 0, ptr %1815, align 4, !tbaa !5
  %1842 = getelementptr inbounds i32, ptr %8, i64 %1814
  %1843 = load i32, ptr %1842, align 4, !tbaa !5
  %1844 = getelementptr inbounds i32, ptr %6, i64 %1814
  store i32 %1843, ptr %1844, align 4, !tbaa !5
  %1845 = add nuw nsw i64 %1814, 1
  %1846 = icmp eq i64 %1845, %1573
  br i1 %1846, label %1854, label %1813, !llvm.loop !822

1847:                                             ; preds = %1809, %1839
  %1848 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

1849:                                             ; preds = %1822, %1831
  %1850 = phi ptr [ %1838, %1831 ], [ %1815, %1822 ]
  %1851 = phi i32 [ %1837, %1831 ], [ 1, %1822 ]
  %1852 = load i32, ptr %1850, align 4, !tbaa !5
  %1853 = add nsw i32 %1852, %1851
  store i32 %1853, ptr %1850, align 4, !tbaa !5
  br label %1854

1854:                                             ; preds = %1841, %1849, %1811, %1795
  %1855 = icmp eq i32 %1803, %5
  br i1 %1855, label %5511, label %1718, !llvm.loop !823

1856:                                             ; preds = %1254
  %1857 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1450, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5511

1858:                                             ; preds = %18
  %1859 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1860 = load ptr, ptr %1859, align 8, !tbaa !9
  %1861 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1862 = load ptr, ptr %1861, align 8, !tbaa !9
  store i16 0, ptr %1862, align 2, !tbaa !78
  %1863 = icmp eq i32 %13, 0
  br i1 %1863, label %1864, label %1868

1864:                                             ; preds = %1858
  %1865 = load i64, ptr %1860, align 8, !tbaa !120
  %1866 = trunc i64 %1865 to i16
  %1867 = mul i16 %1866, %1866
  store i16 %1867, ptr %1862, align 2, !tbaa !78
  br label %5511

1868:                                             ; preds = %1858
  switch i32 %1, label %2470 [
    i32 1, label %1869
    i32 0, label %2176
  ]

1869:                                             ; preds = %1868
  %1870 = getelementptr inbounds i32, ptr %3, i64 %19
  %1871 = load i32, ptr %1870, align 4, !tbaa !5
  %1872 = icmp eq i32 %1871, 0
  %1873 = icmp sgt i32 %5, 0
  br i1 %1872, label %1883, label %1874

1874:                                             ; preds = %1869
  br i1 %1873, label %1875, label %5511

1875:                                             ; preds = %1874
  %1876 = icmp sgt i32 %13, 1
  %1877 = icmp sgt i32 %13, 0
  %1878 = add i32 %13, -2
  %1879 = zext i32 %1878 to i64
  %1880 = zext i32 %13 to i64
  %1881 = add nuw i32 %5, 1
  %1882 = icmp eq i32 %13, 1
  br label %2033

1883:                                             ; preds = %1869
  br i1 %1873, label %1884, label %5511

1884:                                             ; preds = %1883
  %1885 = icmp sgt i32 %13, 1
  %1886 = icmp sgt i32 %13, 0
  %1887 = add i32 %13, -2
  %1888 = zext i32 %1887 to i64
  %1889 = zext i32 %13 to i64
  %1890 = add nuw i32 %5, 1
  %1891 = icmp eq i32 %13, 1
  br label %1892

1892:                                             ; preds = %1884, %2031
  %1893 = phi i16 [ 0, %1884 ], [ %1981, %2031 ]
  %1894 = phi i32 [ 0, %1884 ], [ %1983, %2031 ]
  %1895 = phi double [ 0.000000e+00, %1884 ], [ %1982, %2031 ]
  %1896 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1885, label %1897, label %1966

1897:                                             ; preds = %1892, %1956
  %1898 = phi i32 [ %1965, %1956 ], [ 0, %1892 ]
  %1899 = phi i64 [ %1907, %1956 ], [ %1889, %1892 ]
  %1900 = phi i64 [ %1964, %1956 ], [ %1888, %1892 ]
  %1901 = phi i32 [ %1962, %1956 ], [ %1896, %1892 ]
  %1902 = sub i32 %1887, %1898
  %1903 = tail call i32 @llvm.smin.i32(i32 %1902, i32 0)
  %1904 = sub i32 %1902, %1903
  %1905 = zext i32 %1904 to i64
  %1906 = add nuw nsw i64 %1905, 1
  %1907 = add nsw i64 %1899, -1
  %1908 = icmp ult i32 %1904, 31
  br i1 %1908, label %1944, label %1909

1909:                                             ; preds = %1897
  %1910 = and i64 %1906, 8589934560
  %1911 = sub i64 %1900, %1910
  br label %1912

1912:                                             ; preds = %1912, %1909
  %1913 = phi i64 [ 0, %1909 ], [ %1936, %1912 ]
  %1914 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1909 ], [ %1932, %1912 ]
  %1915 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1909 ], [ %1933, %1912 ]
  %1916 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1909 ], [ %1934, %1912 ]
  %1917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1909 ], [ %1935, %1912 ]
  %1918 = sub i64 %1900, %1913
  %1919 = getelementptr inbounds i32, ptr %9, i64 %1918
  %1920 = getelementptr inbounds i32, ptr %1919, i64 -7
  %1921 = load <8 x i32>, ptr %1920, align 4, !tbaa !5
  %1922 = shufflevector <8 x i32> %1921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1923 = getelementptr inbounds i32, ptr %1919, i64 -15
  %1924 = load <8 x i32>, ptr %1923, align 4, !tbaa !5
  %1925 = shufflevector <8 x i32> %1924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1926 = getelementptr inbounds i32, ptr %1919, i64 -23
  %1927 = load <8 x i32>, ptr %1926, align 4, !tbaa !5
  %1928 = shufflevector <8 x i32> %1927, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1929 = getelementptr inbounds i32, ptr %1919, i64 -31
  %1930 = load <8 x i32>, ptr %1929, align 4, !tbaa !5
  %1931 = shufflevector <8 x i32> %1930, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1932 = mul <8 x i32> %1922, %1914
  %1933 = mul <8 x i32> %1925, %1915
  %1934 = mul <8 x i32> %1928, %1916
  %1935 = mul <8 x i32> %1931, %1917
  %1936 = add nuw i64 %1913, 32
  %1937 = icmp eq i64 %1936, %1910
  br i1 %1937, label %1938, label %1912, !llvm.loop !824

1938:                                             ; preds = %1912
  %1939 = mul <8 x i32> %1933, %1932
  %1940 = mul <8 x i32> %1934, %1939
  %1941 = mul <8 x i32> %1935, %1940
  %1942 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1941)
  %1943 = icmp eq i64 %1906, %1910
  br i1 %1943, label %1956, label %1944

1944:                                             ; preds = %1897, %1938
  %1945 = phi i64 [ %1900, %1897 ], [ %1911, %1938 ]
  %1946 = phi i32 [ 1, %1897 ], [ %1942, %1938 ]
  br label %1947

1947:                                             ; preds = %1944, %1947
  %1948 = phi i64 [ %1953, %1947 ], [ %1945, %1944 ]
  %1949 = phi i32 [ %1952, %1947 ], [ %1946, %1944 ]
  %1950 = getelementptr inbounds i32, ptr %9, i64 %1948
  %1951 = load i32, ptr %1950, align 4, !tbaa !5
  %1952 = mul nsw i32 %1951, %1949
  %1953 = add nsw i64 %1948, -1
  %1954 = trunc i64 %1948 to i32
  %1955 = icmp sgt i32 %1954, 0
  br i1 %1955, label %1947, label %1956, !llvm.loop !825

1956:                                             ; preds = %1947, %1938
  %1957 = phi i32 [ %1942, %1938 ], [ %1952, %1947 ]
  %1958 = and i64 %1907, 4294967295
  %1959 = getelementptr inbounds i32, ptr %6, i64 %1958
  %1960 = load i32, ptr %1959, align 4, !tbaa !5
  %1961 = mul nsw i32 %1960, %1957
  %1962 = add nsw i32 %1961, %1901
  %1963 = icmp sgt i64 %1899, 2
  %1964 = add nsw i64 %1900, -1
  %1965 = add i32 %1898, 1
  br i1 %1963, label %1897, label %1966, !llvm.loop !826

1966:                                             ; preds = %1956, %1892
  %1967 = phi i32 [ %1896, %1892 ], [ %1962, %1956 ]
  %1968 = sext i32 %1967 to i64
  %1969 = getelementptr inbounds double, ptr %2, i64 %1968
  %1970 = load double, ptr %1969, align 8, !tbaa !18
  %1971 = getelementptr inbounds i64, ptr %1860, i64 %1968
  %1972 = load i64, ptr %1971, align 8, !tbaa !120
  %1973 = trunc i64 %1972 to i32
  %1974 = sitofp i16 %1893 to double
  %1975 = shl i32 %1973, 16
  %1976 = ashr exact i32 %1975, 16
  %1977 = sitofp i32 %1976 to double
  %1978 = fmul fast double %1970, %1977
  %1979 = fmul fast double %1978, %1978
  %1980 = fadd fast double %1979, %1974
  %1981 = fptosi double %1980 to i16
  %1982 = fadd fast double %1970, %1895
  %1983 = add nuw nsw i32 %1894, 1
  br i1 %1886, label %1984, label %2031

1984:                                             ; preds = %1966
  %1985 = load i32, ptr %4, align 4, !tbaa !5
  %1986 = load i32, ptr %12, align 4, !tbaa !5
  %1987 = add nsw i32 %1986, -1
  %1988 = icmp slt i32 %1985, %1987
  br i1 %1988, label %2008, label %1989

1989:                                             ; preds = %1984
  %1990 = icmp eq i32 %1985, %1987
  br i1 %1990, label %1991, label %2024

1991:                                             ; preds = %1989
  store i32 0, ptr %4, align 4, !tbaa !5
  %1992 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1992, ptr %6, align 4, !tbaa !5
  br i1 %1891, label %2031, label %1993

1993:                                             ; preds = %1991, %2018
  %1994 = phi i64 [ %2022, %2018 ], [ 1, %1991 ]
  %1995 = getelementptr inbounds i32, ptr %4, i64 %1994
  %1996 = load i32, ptr %1995, align 4, !tbaa !5
  %1997 = getelementptr inbounds i32, ptr %12, i64 %1994
  %1998 = load i32, ptr %1997, align 4, !tbaa !5
  %1999 = add nsw i32 %1998, -1
  %2000 = icmp slt i32 %1996, %1999
  br i1 %2000, label %2001, label %2016

2001:                                             ; preds = %1993
  br i1 %1988, label %2008, label %2002

2002:                                             ; preds = %2001
  %2003 = getelementptr inbounds i32, ptr %7, i64 %1994
  %2004 = load i32, ptr %2003, align 4, !tbaa !5
  %2005 = getelementptr inbounds i32, ptr %6, i64 %1994
  %2006 = load i32, ptr %2005, align 4, !tbaa !5
  %2007 = add nsw i32 %2006, %2004
  store i32 %2007, ptr %2005, align 4, !tbaa !5
  br label %2026

2008:                                             ; preds = %1984, %2001
  %2009 = phi i32 [ %1996, %2001 ], [ %1985, %1984 ]
  %2010 = phi ptr [ %1995, %2001 ], [ %4, %1984 ]
  %2011 = phi i64 [ %1994, %2001 ], [ 0, %1984 ]
  %2012 = add nsw i32 %2009, 1
  store i32 %2012, ptr %2010, align 4, !tbaa !5
  %2013 = getelementptr inbounds i32, ptr %7, i64 %2011
  %2014 = load i32, ptr %2013, align 4, !tbaa !5
  %2015 = getelementptr inbounds i32, ptr %6, i64 %2011
  br label %2026

2016:                                             ; preds = %1993
  %2017 = icmp eq i32 %1996, %1999
  br i1 %2017, label %2018, label %2024

2018:                                             ; preds = %2016
  store i32 0, ptr %1995, align 4, !tbaa !5
  %2019 = getelementptr inbounds i32, ptr %8, i64 %1994
  %2020 = load i32, ptr %2019, align 4, !tbaa !5
  %2021 = getelementptr inbounds i32, ptr %6, i64 %1994
  store i32 %2020, ptr %2021, align 4, !tbaa !5
  %2022 = add nuw nsw i64 %1994, 1
  %2023 = icmp eq i64 %2022, %1889
  br i1 %2023, label %2031, label %1993, !llvm.loop !827

2024:                                             ; preds = %1989, %2016
  store i16 %1981, ptr %1862, align 2, !tbaa !78
  %2025 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

2026:                                             ; preds = %2002, %2008
  %2027 = phi ptr [ %2015, %2008 ], [ %1995, %2002 ]
  %2028 = phi i32 [ %2014, %2008 ], [ 1, %2002 ]
  %2029 = load i32, ptr %2027, align 4, !tbaa !5
  %2030 = add nsw i32 %2029, %2028
  store i32 %2030, ptr %2027, align 4, !tbaa !5
  br label %2031

2031:                                             ; preds = %2018, %2026, %1991, %1966
  %2032 = icmp eq i32 %1983, %5
  br i1 %2032, label %5505, label %1892, !llvm.loop !828

2033:                                             ; preds = %1875, %2174
  %2034 = phi i16 [ 0, %1875 ], [ %2122, %2174 ]
  %2035 = phi i32 [ 0, %1875 ], [ %2123, %2174 ]
  %2036 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1876, label %2037, label %2106

2037:                                             ; preds = %2033, %2096
  %2038 = phi i32 [ %2105, %2096 ], [ 0, %2033 ]
  %2039 = phi i64 [ %2047, %2096 ], [ %1880, %2033 ]
  %2040 = phi i64 [ %2104, %2096 ], [ %1879, %2033 ]
  %2041 = phi i32 [ %2102, %2096 ], [ %2036, %2033 ]
  %2042 = sub i32 %1878, %2038
  %2043 = tail call i32 @llvm.smin.i32(i32 %2042, i32 0)
  %2044 = sub i32 %2042, %2043
  %2045 = zext i32 %2044 to i64
  %2046 = add nuw nsw i64 %2045, 1
  %2047 = add nsw i64 %2039, -1
  %2048 = icmp ult i32 %2044, 31
  br i1 %2048, label %2084, label %2049

2049:                                             ; preds = %2037
  %2050 = and i64 %2046, 8589934560
  %2051 = sub i64 %2040, %2050
  br label %2052

2052:                                             ; preds = %2052, %2049
  %2053 = phi i64 [ 0, %2049 ], [ %2076, %2052 ]
  %2054 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2049 ], [ %2072, %2052 ]
  %2055 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2049 ], [ %2073, %2052 ]
  %2056 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2049 ], [ %2074, %2052 ]
  %2057 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2049 ], [ %2075, %2052 ]
  %2058 = sub i64 %2040, %2053
  %2059 = getelementptr inbounds i32, ptr %11, i64 %2058
  %2060 = getelementptr inbounds i32, ptr %2059, i64 -7
  %2061 = load <8 x i32>, ptr %2060, align 4, !tbaa !5
  %2062 = shufflevector <8 x i32> %2061, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2063 = getelementptr inbounds i32, ptr %2059, i64 -15
  %2064 = load <8 x i32>, ptr %2063, align 4, !tbaa !5
  %2065 = shufflevector <8 x i32> %2064, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2066 = getelementptr inbounds i32, ptr %2059, i64 -23
  %2067 = load <8 x i32>, ptr %2066, align 4, !tbaa !5
  %2068 = shufflevector <8 x i32> %2067, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2069 = getelementptr inbounds i32, ptr %2059, i64 -31
  %2070 = load <8 x i32>, ptr %2069, align 4, !tbaa !5
  %2071 = shufflevector <8 x i32> %2070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2072 = mul <8 x i32> %2062, %2054
  %2073 = mul <8 x i32> %2065, %2055
  %2074 = mul <8 x i32> %2068, %2056
  %2075 = mul <8 x i32> %2071, %2057
  %2076 = add nuw i64 %2053, 32
  %2077 = icmp eq i64 %2076, %2050
  br i1 %2077, label %2078, label %2052, !llvm.loop !829

2078:                                             ; preds = %2052
  %2079 = mul <8 x i32> %2073, %2072
  %2080 = mul <8 x i32> %2074, %2079
  %2081 = mul <8 x i32> %2075, %2080
  %2082 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2081)
  %2083 = icmp eq i64 %2046, %2050
  br i1 %2083, label %2096, label %2084

2084:                                             ; preds = %2037, %2078
  %2085 = phi i64 [ %2040, %2037 ], [ %2051, %2078 ]
  %2086 = phi i32 [ 1, %2037 ], [ %2082, %2078 ]
  br label %2087

2087:                                             ; preds = %2084, %2087
  %2088 = phi i64 [ %2093, %2087 ], [ %2085, %2084 ]
  %2089 = phi i32 [ %2092, %2087 ], [ %2086, %2084 ]
  %2090 = getelementptr inbounds i32, ptr %11, i64 %2088
  %2091 = load i32, ptr %2090, align 4, !tbaa !5
  %2092 = mul nsw i32 %2091, %2089
  %2093 = add nsw i64 %2088, -1
  %2094 = trunc i64 %2088 to i32
  %2095 = icmp sgt i32 %2094, 0
  br i1 %2095, label %2087, label %2096, !llvm.loop !830

2096:                                             ; preds = %2087, %2078
  %2097 = phi i32 [ %2082, %2078 ], [ %2092, %2087 ]
  %2098 = and i64 %2047, 4294967295
  %2099 = getelementptr inbounds i32, ptr %6, i64 %2098
  %2100 = load i32, ptr %2099, align 4, !tbaa !5
  %2101 = mul nsw i32 %2100, %2097
  %2102 = add nsw i32 %2101, %2041
  %2103 = icmp sgt i64 %2039, 2
  %2104 = add nsw i64 %2040, -1
  %2105 = add i32 %2038, 1
  br i1 %2103, label %2037, label %2106, !llvm.loop !831

2106:                                             ; preds = %2096, %2033
  %2107 = phi i32 [ %2036, %2033 ], [ %2102, %2096 ]
  %2108 = icmp slt i32 %2107, %5
  br i1 %2108, label %2111, label %2109

2109:                                             ; preds = %2106
  %2110 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

2111:                                             ; preds = %2106
  %2112 = sext i32 %2107 to i64
  %2113 = getelementptr inbounds i64, ptr %1860, i64 %2112
  %2114 = load i64, ptr %2113, align 8, !tbaa !120
  %2115 = trunc i64 %2114 to i32
  %2116 = sitofp i16 %2034 to double
  %2117 = shl i32 %2115, 16
  %2118 = ashr exact i32 %2117, 16
  %2119 = sitofp i32 %2118 to double
  %2120 = fmul fast double %2119, %2119
  %2121 = fadd fast double %2120, %2116
  %2122 = fptosi double %2121 to i16
  store i16 %2122, ptr %1862, align 2, !tbaa !78
  %2123 = add nuw nsw i32 %2035, 1
  br i1 %1877, label %2124, label %2174

2124:                                             ; preds = %2111
  %2125 = load i32, ptr %4, align 4, !tbaa !5
  %2126 = load i32, ptr %12, align 4, !tbaa !5
  %2127 = add nsw i32 %2126, -1
  %2128 = icmp slt i32 %2125, %2127
  br i1 %2128, label %2151, label %2129

2129:                                             ; preds = %2124
  %2130 = icmp eq i32 %2125, %2127
  br i1 %2130, label %2131, label %2167

2131:                                             ; preds = %2129
  store i32 0, ptr %4, align 4, !tbaa !5
  %2132 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2132, ptr %6, align 4, !tbaa !5
  br i1 %1882, label %2174, label %2133

2133:                                             ; preds = %2131, %2161
  %2134 = phi i64 [ %2165, %2161 ], [ 1, %2131 ]
  %2135 = getelementptr inbounds i32, ptr %4, i64 %2134
  %2136 = load i32, ptr %2135, align 4, !tbaa !5
  %2137 = getelementptr inbounds i32, ptr %12, i64 %2134
  %2138 = load i32, ptr %2137, align 4, !tbaa !5
  %2139 = add nsw i32 %2138, -1
  %2140 = icmp slt i32 %2136, %2139
  br i1 %2140, label %2141, label %2159

2141:                                             ; preds = %2133
  br i1 %2128, label %2151, label %2142

2142:                                             ; preds = %2141
  %2143 = shl i64 %2134, 32
  %2144 = add i64 %2143, -4294967296
  %2145 = ashr exact i64 %2144, 32
  %2146 = getelementptr inbounds i32, ptr %7, i64 %2145
  %2147 = load i32, ptr %2146, align 4, !tbaa !5
  %2148 = getelementptr inbounds i32, ptr %6, i64 %2134
  %2149 = load i32, ptr %2148, align 4, !tbaa !5
  %2150 = add nsw i32 %2149, %2147
  store i32 %2150, ptr %2148, align 4, !tbaa !5
  br label %2169

2151:                                             ; preds = %2124, %2141
  %2152 = phi i32 [ %2136, %2141 ], [ %2125, %2124 ]
  %2153 = phi ptr [ %2135, %2141 ], [ %4, %2124 ]
  %2154 = phi i64 [ %2134, %2141 ], [ 0, %2124 ]
  %2155 = add nsw i32 %2152, 1
  store i32 %2155, ptr %2153, align 4, !tbaa !5
  %2156 = getelementptr inbounds i32, ptr %7, i64 %2154
  %2157 = load i32, ptr %2156, align 4, !tbaa !5
  %2158 = getelementptr inbounds i32, ptr %6, i64 %2154
  br label %2169

2159:                                             ; preds = %2133
  %2160 = icmp eq i32 %2136, %2139
  br i1 %2160, label %2161, label %2167

2161:                                             ; preds = %2159
  store i32 0, ptr %2135, align 4, !tbaa !5
  %2162 = getelementptr inbounds i32, ptr %8, i64 %2134
  %2163 = load i32, ptr %2162, align 4, !tbaa !5
  %2164 = getelementptr inbounds i32, ptr %6, i64 %2134
  store i32 %2163, ptr %2164, align 4, !tbaa !5
  %2165 = add nuw nsw i64 %2134, 1
  %2166 = icmp eq i64 %2165, %1880
  br i1 %2166, label %2174, label %2133, !llvm.loop !832

2167:                                             ; preds = %2129, %2159
  %2168 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

2169:                                             ; preds = %2142, %2151
  %2170 = phi ptr [ %2158, %2151 ], [ %2135, %2142 ]
  %2171 = phi i32 [ %2157, %2151 ], [ 1, %2142 ]
  %2172 = load i32, ptr %2170, align 4, !tbaa !5
  %2173 = add nsw i32 %2172, %2171
  store i32 %2173, ptr %2170, align 4, !tbaa !5
  br label %2174

2174:                                             ; preds = %2161, %2169, %2131, %2111
  %2175 = icmp eq i32 %2123, %5
  br i1 %2175, label %5511, label %2033, !llvm.loop !833

2176:                                             ; preds = %1868
  %2177 = getelementptr inbounds i32, ptr %3, i64 %19
  %2178 = load i32, ptr %2177, align 4, !tbaa !5
  %2179 = icmp eq i32 %2178, 0
  %2180 = icmp sgt i32 %5, 0
  br i1 %2179, label %2190, label %2181

2181:                                             ; preds = %2176
  br i1 %2180, label %2182, label %5511

2182:                                             ; preds = %2181
  %2183 = icmp sgt i32 %13, 1
  %2184 = icmp sgt i32 %13, 0
  %2185 = add i32 %13, -2
  %2186 = zext i32 %2185 to i64
  %2187 = zext i32 %13 to i64
  %2188 = add nuw i32 %5, 1
  %2189 = icmp eq i32 %13, 1
  br label %2332

2190:                                             ; preds = %2176
  br i1 %2180, label %2191, label %5511

2191:                                             ; preds = %2190
  %2192 = icmp sgt i32 %13, 1
  %2193 = icmp sgt i32 %13, 0
  %2194 = add i32 %13, -2
  %2195 = zext i32 %2194 to i64
  %2196 = zext i32 %13 to i64
  %2197 = add nuw i32 %5, 1
  %2198 = icmp eq i32 %13, 1
  br label %2199

2199:                                             ; preds = %2191, %2330
  %2200 = phi i16 [ 0, %2191 ], [ %2280, %2330 ]
  %2201 = phi i32 [ 0, %2191 ], [ %2282, %2330 ]
  %2202 = phi double [ 0.000000e+00, %2191 ], [ %2281, %2330 ]
  %2203 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2192, label %2204, label %2273

2204:                                             ; preds = %2199, %2263
  %2205 = phi i32 [ %2272, %2263 ], [ 0, %2199 ]
  %2206 = phi i64 [ %2214, %2263 ], [ %2196, %2199 ]
  %2207 = phi i64 [ %2271, %2263 ], [ %2195, %2199 ]
  %2208 = phi i32 [ %2269, %2263 ], [ %2203, %2199 ]
  %2209 = sub i32 %2194, %2205
  %2210 = tail call i32 @llvm.smin.i32(i32 %2209, i32 0)
  %2211 = sub i32 %2209, %2210
  %2212 = zext i32 %2211 to i64
  %2213 = add nuw nsw i64 %2212, 1
  %2214 = add nsw i64 %2206, -1
  %2215 = icmp ult i32 %2211, 31
  br i1 %2215, label %2251, label %2216

2216:                                             ; preds = %2204
  %2217 = and i64 %2213, 8589934560
  %2218 = sub i64 %2207, %2217
  br label %2219

2219:                                             ; preds = %2219, %2216
  %2220 = phi i64 [ 0, %2216 ], [ %2243, %2219 ]
  %2221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2216 ], [ %2239, %2219 ]
  %2222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2216 ], [ %2240, %2219 ]
  %2223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2216 ], [ %2241, %2219 ]
  %2224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2216 ], [ %2242, %2219 ]
  %2225 = sub i64 %2207, %2220
  %2226 = getelementptr inbounds i32, ptr %9, i64 %2225
  %2227 = getelementptr inbounds i32, ptr %2226, i64 -7
  %2228 = load <8 x i32>, ptr %2227, align 4, !tbaa !5
  %2229 = shufflevector <8 x i32> %2228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2230 = getelementptr inbounds i32, ptr %2226, i64 -15
  %2231 = load <8 x i32>, ptr %2230, align 4, !tbaa !5
  %2232 = shufflevector <8 x i32> %2231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2233 = getelementptr inbounds i32, ptr %2226, i64 -23
  %2234 = load <8 x i32>, ptr %2233, align 4, !tbaa !5
  %2235 = shufflevector <8 x i32> %2234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2236 = getelementptr inbounds i32, ptr %2226, i64 -31
  %2237 = load <8 x i32>, ptr %2236, align 4, !tbaa !5
  %2238 = shufflevector <8 x i32> %2237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2239 = mul <8 x i32> %2229, %2221
  %2240 = mul <8 x i32> %2232, %2222
  %2241 = mul <8 x i32> %2235, %2223
  %2242 = mul <8 x i32> %2238, %2224
  %2243 = add nuw i64 %2220, 32
  %2244 = icmp eq i64 %2243, %2217
  br i1 %2244, label %2245, label %2219, !llvm.loop !834

2245:                                             ; preds = %2219
  %2246 = mul <8 x i32> %2240, %2239
  %2247 = mul <8 x i32> %2241, %2246
  %2248 = mul <8 x i32> %2242, %2247
  %2249 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2248)
  %2250 = icmp eq i64 %2213, %2217
  br i1 %2250, label %2263, label %2251

2251:                                             ; preds = %2204, %2245
  %2252 = phi i64 [ %2207, %2204 ], [ %2218, %2245 ]
  %2253 = phi i32 [ 1, %2204 ], [ %2249, %2245 ]
  br label %2254

2254:                                             ; preds = %2251, %2254
  %2255 = phi i64 [ %2260, %2254 ], [ %2252, %2251 ]
  %2256 = phi i32 [ %2259, %2254 ], [ %2253, %2251 ]
  %2257 = getelementptr inbounds i32, ptr %9, i64 %2255
  %2258 = load i32, ptr %2257, align 4, !tbaa !5
  %2259 = mul nsw i32 %2258, %2256
  %2260 = add nsw i64 %2255, -1
  %2261 = trunc i64 %2255 to i32
  %2262 = icmp sgt i32 %2261, 0
  br i1 %2262, label %2254, label %2263, !llvm.loop !835

2263:                                             ; preds = %2254, %2245
  %2264 = phi i32 [ %2249, %2245 ], [ %2259, %2254 ]
  %2265 = and i64 %2214, 4294967295
  %2266 = getelementptr inbounds i32, ptr %6, i64 %2265
  %2267 = load i32, ptr %2266, align 4, !tbaa !5
  %2268 = mul nsw i32 %2267, %2264
  %2269 = add nsw i32 %2268, %2208
  %2270 = icmp sgt i64 %2206, 2
  %2271 = add nsw i64 %2207, -1
  %2272 = add i32 %2205, 1
  br i1 %2270, label %2204, label %2273, !llvm.loop !836

2273:                                             ; preds = %2263, %2199
  %2274 = phi i32 [ %2203, %2199 ], [ %2269, %2263 ]
  %2275 = sext i32 %2274 to i64
  %2276 = getelementptr inbounds i64, ptr %1860, i64 %2275
  %2277 = load i64, ptr %2276, align 8, !tbaa !120
  %2278 = trunc i64 %2277 to i16
  %2279 = mul i16 %2278, %2278
  %2280 = add i16 %2279, %2200
  %2281 = fadd fast double %2202, 1.000000e+00
  %2282 = add nuw nsw i32 %2201, 1
  br i1 %2193, label %2283, label %2330

2283:                                             ; preds = %2273
  %2284 = load i32, ptr %4, align 4, !tbaa !5
  %2285 = load i32, ptr %12, align 4, !tbaa !5
  %2286 = add nsw i32 %2285, -1
  %2287 = icmp slt i32 %2284, %2286
  br i1 %2287, label %2307, label %2288

2288:                                             ; preds = %2283
  %2289 = icmp eq i32 %2284, %2286
  br i1 %2289, label %2290, label %2323

2290:                                             ; preds = %2288
  store i32 0, ptr %4, align 4, !tbaa !5
  %2291 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2291, ptr %6, align 4, !tbaa !5
  br i1 %2198, label %2330, label %2292

2292:                                             ; preds = %2290, %2317
  %2293 = phi i64 [ %2321, %2317 ], [ 1, %2290 ]
  %2294 = getelementptr inbounds i32, ptr %4, i64 %2293
  %2295 = load i32, ptr %2294, align 4, !tbaa !5
  %2296 = getelementptr inbounds i32, ptr %12, i64 %2293
  %2297 = load i32, ptr %2296, align 4, !tbaa !5
  %2298 = add nsw i32 %2297, -1
  %2299 = icmp slt i32 %2295, %2298
  br i1 %2299, label %2300, label %2315

2300:                                             ; preds = %2292
  br i1 %2287, label %2307, label %2301

2301:                                             ; preds = %2300
  %2302 = getelementptr inbounds i32, ptr %7, i64 %2293
  %2303 = load i32, ptr %2302, align 4, !tbaa !5
  %2304 = getelementptr inbounds i32, ptr %6, i64 %2293
  %2305 = load i32, ptr %2304, align 4, !tbaa !5
  %2306 = add nsw i32 %2305, %2303
  store i32 %2306, ptr %2304, align 4, !tbaa !5
  br label %2325

2307:                                             ; preds = %2283, %2300
  %2308 = phi i32 [ %2295, %2300 ], [ %2284, %2283 ]
  %2309 = phi ptr [ %2294, %2300 ], [ %4, %2283 ]
  %2310 = phi i64 [ %2293, %2300 ], [ 0, %2283 ]
  %2311 = add nsw i32 %2308, 1
  store i32 %2311, ptr %2309, align 4, !tbaa !5
  %2312 = getelementptr inbounds i32, ptr %7, i64 %2310
  %2313 = load i32, ptr %2312, align 4, !tbaa !5
  %2314 = getelementptr inbounds i32, ptr %6, i64 %2310
  br label %2325

2315:                                             ; preds = %2292
  %2316 = icmp eq i32 %2295, %2298
  br i1 %2316, label %2317, label %2323

2317:                                             ; preds = %2315
  store i32 0, ptr %2294, align 4, !tbaa !5
  %2318 = getelementptr inbounds i32, ptr %8, i64 %2293
  %2319 = load i32, ptr %2318, align 4, !tbaa !5
  %2320 = getelementptr inbounds i32, ptr %6, i64 %2293
  store i32 %2319, ptr %2320, align 4, !tbaa !5
  %2321 = add nuw nsw i64 %2293, 1
  %2322 = icmp eq i64 %2321, %2196
  br i1 %2322, label %2330, label %2292, !llvm.loop !837

2323:                                             ; preds = %2288, %2315
  store i16 %2280, ptr %1862, align 2, !tbaa !78
  %2324 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

2325:                                             ; preds = %2301, %2307
  %2326 = phi ptr [ %2314, %2307 ], [ %2294, %2301 ]
  %2327 = phi i32 [ %2313, %2307 ], [ 1, %2301 ]
  %2328 = load i32, ptr %2326, align 4, !tbaa !5
  %2329 = add nsw i32 %2328, %2327
  store i32 %2329, ptr %2326, align 4, !tbaa !5
  br label %2330

2330:                                             ; preds = %2317, %2325, %2290, %2273
  %2331 = icmp eq i32 %2282, %5
  br i1 %2331, label %5506, label %2199, !llvm.loop !838

2332:                                             ; preds = %2182, %2468
  %2333 = phi i16 [ 0, %2182 ], [ %2416, %2468 ]
  %2334 = phi i32 [ 0, %2182 ], [ %2417, %2468 ]
  %2335 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2183, label %2336, label %2405

2336:                                             ; preds = %2332, %2395
  %2337 = phi i32 [ %2404, %2395 ], [ 0, %2332 ]
  %2338 = phi i64 [ %2346, %2395 ], [ %2187, %2332 ]
  %2339 = phi i64 [ %2403, %2395 ], [ %2186, %2332 ]
  %2340 = phi i32 [ %2401, %2395 ], [ %2335, %2332 ]
  %2341 = sub i32 %2185, %2337
  %2342 = tail call i32 @llvm.smin.i32(i32 %2341, i32 0)
  %2343 = sub i32 %2341, %2342
  %2344 = zext i32 %2343 to i64
  %2345 = add nuw nsw i64 %2344, 1
  %2346 = add nsw i64 %2338, -1
  %2347 = icmp ult i32 %2343, 31
  br i1 %2347, label %2383, label %2348

2348:                                             ; preds = %2336
  %2349 = and i64 %2345, 8589934560
  %2350 = sub i64 %2339, %2349
  br label %2351

2351:                                             ; preds = %2351, %2348
  %2352 = phi i64 [ 0, %2348 ], [ %2375, %2351 ]
  %2353 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2348 ], [ %2371, %2351 ]
  %2354 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2348 ], [ %2372, %2351 ]
  %2355 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2348 ], [ %2373, %2351 ]
  %2356 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2348 ], [ %2374, %2351 ]
  %2357 = sub i64 %2339, %2352
  %2358 = getelementptr inbounds i32, ptr %11, i64 %2357
  %2359 = getelementptr inbounds i32, ptr %2358, i64 -7
  %2360 = load <8 x i32>, ptr %2359, align 4, !tbaa !5
  %2361 = shufflevector <8 x i32> %2360, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2362 = getelementptr inbounds i32, ptr %2358, i64 -15
  %2363 = load <8 x i32>, ptr %2362, align 4, !tbaa !5
  %2364 = shufflevector <8 x i32> %2363, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2365 = getelementptr inbounds i32, ptr %2358, i64 -23
  %2366 = load <8 x i32>, ptr %2365, align 4, !tbaa !5
  %2367 = shufflevector <8 x i32> %2366, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2368 = getelementptr inbounds i32, ptr %2358, i64 -31
  %2369 = load <8 x i32>, ptr %2368, align 4, !tbaa !5
  %2370 = shufflevector <8 x i32> %2369, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2371 = mul <8 x i32> %2361, %2353
  %2372 = mul <8 x i32> %2364, %2354
  %2373 = mul <8 x i32> %2367, %2355
  %2374 = mul <8 x i32> %2370, %2356
  %2375 = add nuw i64 %2352, 32
  %2376 = icmp eq i64 %2375, %2349
  br i1 %2376, label %2377, label %2351, !llvm.loop !839

2377:                                             ; preds = %2351
  %2378 = mul <8 x i32> %2372, %2371
  %2379 = mul <8 x i32> %2373, %2378
  %2380 = mul <8 x i32> %2374, %2379
  %2381 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2380)
  %2382 = icmp eq i64 %2345, %2349
  br i1 %2382, label %2395, label %2383

2383:                                             ; preds = %2336, %2377
  %2384 = phi i64 [ %2339, %2336 ], [ %2350, %2377 ]
  %2385 = phi i32 [ 1, %2336 ], [ %2381, %2377 ]
  br label %2386

2386:                                             ; preds = %2383, %2386
  %2387 = phi i64 [ %2392, %2386 ], [ %2384, %2383 ]
  %2388 = phi i32 [ %2391, %2386 ], [ %2385, %2383 ]
  %2389 = getelementptr inbounds i32, ptr %11, i64 %2387
  %2390 = load i32, ptr %2389, align 4, !tbaa !5
  %2391 = mul nsw i32 %2390, %2388
  %2392 = add nsw i64 %2387, -1
  %2393 = trunc i64 %2387 to i32
  %2394 = icmp sgt i32 %2393, 0
  br i1 %2394, label %2386, label %2395, !llvm.loop !840

2395:                                             ; preds = %2386, %2377
  %2396 = phi i32 [ %2381, %2377 ], [ %2391, %2386 ]
  %2397 = and i64 %2346, 4294967295
  %2398 = getelementptr inbounds i32, ptr %6, i64 %2397
  %2399 = load i32, ptr %2398, align 4, !tbaa !5
  %2400 = mul nsw i32 %2399, %2396
  %2401 = add nsw i32 %2400, %2340
  %2402 = icmp sgt i64 %2338, 2
  %2403 = add nsw i64 %2339, -1
  %2404 = add i32 %2337, 1
  br i1 %2402, label %2336, label %2405, !llvm.loop !841

2405:                                             ; preds = %2395, %2332
  %2406 = phi i32 [ %2335, %2332 ], [ %2401, %2395 ]
  %2407 = icmp slt i32 %2406, %5
  br i1 %2407, label %2410, label %2408

2408:                                             ; preds = %2405
  %2409 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

2410:                                             ; preds = %2405
  %2411 = sext i32 %2406 to i64
  %2412 = getelementptr inbounds i64, ptr %1860, i64 %2411
  %2413 = load i64, ptr %2412, align 8, !tbaa !120
  %2414 = trunc i64 %2413 to i16
  %2415 = mul i16 %2414, %2414
  %2416 = add i16 %2415, %2333
  store i16 %2416, ptr %1862, align 2, !tbaa !78
  %2417 = add nuw nsw i32 %2334, 1
  br i1 %2184, label %2418, label %2468

2418:                                             ; preds = %2410
  %2419 = load i32, ptr %4, align 4, !tbaa !5
  %2420 = load i32, ptr %12, align 4, !tbaa !5
  %2421 = add nsw i32 %2420, -1
  %2422 = icmp slt i32 %2419, %2421
  br i1 %2422, label %2445, label %2423

2423:                                             ; preds = %2418
  %2424 = icmp eq i32 %2419, %2421
  br i1 %2424, label %2425, label %2461

2425:                                             ; preds = %2423
  store i32 0, ptr %4, align 4, !tbaa !5
  %2426 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2426, ptr %6, align 4, !tbaa !5
  br i1 %2189, label %2468, label %2427

2427:                                             ; preds = %2425, %2455
  %2428 = phi i64 [ %2459, %2455 ], [ 1, %2425 ]
  %2429 = getelementptr inbounds i32, ptr %4, i64 %2428
  %2430 = load i32, ptr %2429, align 4, !tbaa !5
  %2431 = getelementptr inbounds i32, ptr %12, i64 %2428
  %2432 = load i32, ptr %2431, align 4, !tbaa !5
  %2433 = add nsw i32 %2432, -1
  %2434 = icmp slt i32 %2430, %2433
  br i1 %2434, label %2435, label %2453

2435:                                             ; preds = %2427
  br i1 %2422, label %2445, label %2436

2436:                                             ; preds = %2435
  %2437 = shl i64 %2428, 32
  %2438 = add i64 %2437, -4294967296
  %2439 = ashr exact i64 %2438, 32
  %2440 = getelementptr inbounds i32, ptr %7, i64 %2439
  %2441 = load i32, ptr %2440, align 4, !tbaa !5
  %2442 = getelementptr inbounds i32, ptr %6, i64 %2428
  %2443 = load i32, ptr %2442, align 4, !tbaa !5
  %2444 = add nsw i32 %2443, %2441
  store i32 %2444, ptr %2442, align 4, !tbaa !5
  br label %2463

2445:                                             ; preds = %2418, %2435
  %2446 = phi i32 [ %2430, %2435 ], [ %2419, %2418 ]
  %2447 = phi ptr [ %2429, %2435 ], [ %4, %2418 ]
  %2448 = phi i64 [ %2428, %2435 ], [ 0, %2418 ]
  %2449 = add nsw i32 %2446, 1
  store i32 %2449, ptr %2447, align 4, !tbaa !5
  %2450 = getelementptr inbounds i32, ptr %7, i64 %2448
  %2451 = load i32, ptr %2450, align 4, !tbaa !5
  %2452 = getelementptr inbounds i32, ptr %6, i64 %2448
  br label %2463

2453:                                             ; preds = %2427
  %2454 = icmp eq i32 %2430, %2433
  br i1 %2454, label %2455, label %2461

2455:                                             ; preds = %2453
  store i32 0, ptr %2429, align 4, !tbaa !5
  %2456 = getelementptr inbounds i32, ptr %8, i64 %2428
  %2457 = load i32, ptr %2456, align 4, !tbaa !5
  %2458 = getelementptr inbounds i32, ptr %6, i64 %2428
  store i32 %2457, ptr %2458, align 4, !tbaa !5
  %2459 = add nuw nsw i64 %2428, 1
  %2460 = icmp eq i64 %2459, %2187
  br i1 %2460, label %2468, label %2427, !llvm.loop !842

2461:                                             ; preds = %2423, %2453
  %2462 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

2463:                                             ; preds = %2436, %2445
  %2464 = phi ptr [ %2452, %2445 ], [ %2429, %2436 ]
  %2465 = phi i32 [ %2451, %2445 ], [ 1, %2436 ]
  %2466 = load i32, ptr %2464, align 4, !tbaa !5
  %2467 = add nsw i32 %2466, %2465
  store i32 %2467, ptr %2464, align 4, !tbaa !5
  br label %2468

2468:                                             ; preds = %2455, %2463, %2425, %2410
  %2469 = icmp eq i32 %2417, %5
  br i1 %2469, label %5511, label %2332, !llvm.loop !843

2470:                                             ; preds = %1868
  %2471 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1455, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5511

2472:                                             ; preds = %18
  %2473 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2474 = load ptr, ptr %2473, align 8, !tbaa !9
  %2475 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2476 = load ptr, ptr %2475, align 8, !tbaa !9
  store i32 0, ptr %2476, align 4, !tbaa !5
  %2477 = icmp eq i32 %13, 0
  br i1 %2477, label %2478, label %2482

2478:                                             ; preds = %2472
  %2479 = load i64, ptr %2474, align 8, !tbaa !120
  %2480 = trunc i64 %2479 to i32
  %2481 = mul nsw i32 %2480, %2480
  store i32 %2481, ptr %2476, align 4, !tbaa !5
  br label %5511

2482:                                             ; preds = %2472
  switch i32 %1, label %3080 [
    i32 1, label %2483
    i32 0, label %2786
  ]

2483:                                             ; preds = %2482
  %2484 = getelementptr inbounds i32, ptr %3, i64 %19
  %2485 = load i32, ptr %2484, align 4, !tbaa !5
  %2486 = icmp eq i32 %2485, 0
  %2487 = icmp sgt i32 %5, 0
  br i1 %2486, label %2497, label %2488

2488:                                             ; preds = %2483
  br i1 %2487, label %2489, label %5511

2489:                                             ; preds = %2488
  %2490 = icmp sgt i32 %13, 1
  %2491 = icmp sgt i32 %13, 0
  %2492 = add i32 %13, -2
  %2493 = zext i32 %2492 to i64
  %2494 = zext i32 %13 to i64
  %2495 = add nuw i32 %5, 1
  %2496 = icmp eq i32 %13, 1
  br label %2645

2497:                                             ; preds = %2483
  br i1 %2487, label %2498, label %5511

2498:                                             ; preds = %2497
  %2499 = icmp sgt i32 %13, 1
  %2500 = icmp sgt i32 %13, 0
  %2501 = add i32 %13, -2
  %2502 = zext i32 %2501 to i64
  %2503 = zext i32 %13 to i64
  %2504 = add nuw i32 %5, 1
  %2505 = icmp eq i32 %13, 1
  br label %2506

2506:                                             ; preds = %2498, %2643
  %2507 = phi i32 [ 0, %2498 ], [ %2595, %2643 ]
  %2508 = phi double [ 0.000000e+00, %2498 ], [ %2594, %2643 ]
  %2509 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2499, label %2510, label %2579

2510:                                             ; preds = %2506, %2569
  %2511 = phi i32 [ %2578, %2569 ], [ 0, %2506 ]
  %2512 = phi i64 [ %2520, %2569 ], [ %2503, %2506 ]
  %2513 = phi i64 [ %2577, %2569 ], [ %2502, %2506 ]
  %2514 = phi i32 [ %2575, %2569 ], [ %2509, %2506 ]
  %2515 = sub i32 %2501, %2511
  %2516 = tail call i32 @llvm.smin.i32(i32 %2515, i32 0)
  %2517 = sub i32 %2515, %2516
  %2518 = zext i32 %2517 to i64
  %2519 = add nuw nsw i64 %2518, 1
  %2520 = add nsw i64 %2512, -1
  %2521 = icmp ult i32 %2517, 31
  br i1 %2521, label %2557, label %2522

2522:                                             ; preds = %2510
  %2523 = and i64 %2519, 8589934560
  %2524 = sub i64 %2513, %2523
  br label %2525

2525:                                             ; preds = %2525, %2522
  %2526 = phi i64 [ 0, %2522 ], [ %2549, %2525 ]
  %2527 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2522 ], [ %2545, %2525 ]
  %2528 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2522 ], [ %2546, %2525 ]
  %2529 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2522 ], [ %2547, %2525 ]
  %2530 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2522 ], [ %2548, %2525 ]
  %2531 = sub i64 %2513, %2526
  %2532 = getelementptr inbounds i32, ptr %9, i64 %2531
  %2533 = getelementptr inbounds i32, ptr %2532, i64 -7
  %2534 = load <8 x i32>, ptr %2533, align 4, !tbaa !5
  %2535 = shufflevector <8 x i32> %2534, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2536 = getelementptr inbounds i32, ptr %2532, i64 -15
  %2537 = load <8 x i32>, ptr %2536, align 4, !tbaa !5
  %2538 = shufflevector <8 x i32> %2537, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2539 = getelementptr inbounds i32, ptr %2532, i64 -23
  %2540 = load <8 x i32>, ptr %2539, align 4, !tbaa !5
  %2541 = shufflevector <8 x i32> %2540, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2542 = getelementptr inbounds i32, ptr %2532, i64 -31
  %2543 = load <8 x i32>, ptr %2542, align 4, !tbaa !5
  %2544 = shufflevector <8 x i32> %2543, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2545 = mul <8 x i32> %2535, %2527
  %2546 = mul <8 x i32> %2538, %2528
  %2547 = mul <8 x i32> %2541, %2529
  %2548 = mul <8 x i32> %2544, %2530
  %2549 = add nuw i64 %2526, 32
  %2550 = icmp eq i64 %2549, %2523
  br i1 %2550, label %2551, label %2525, !llvm.loop !844

2551:                                             ; preds = %2525
  %2552 = mul <8 x i32> %2546, %2545
  %2553 = mul <8 x i32> %2547, %2552
  %2554 = mul <8 x i32> %2548, %2553
  %2555 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2554)
  %2556 = icmp eq i64 %2519, %2523
  br i1 %2556, label %2569, label %2557

2557:                                             ; preds = %2510, %2551
  %2558 = phi i64 [ %2513, %2510 ], [ %2524, %2551 ]
  %2559 = phi i32 [ 1, %2510 ], [ %2555, %2551 ]
  br label %2560

2560:                                             ; preds = %2557, %2560
  %2561 = phi i64 [ %2566, %2560 ], [ %2558, %2557 ]
  %2562 = phi i32 [ %2565, %2560 ], [ %2559, %2557 ]
  %2563 = getelementptr inbounds i32, ptr %9, i64 %2561
  %2564 = load i32, ptr %2563, align 4, !tbaa !5
  %2565 = mul nsw i32 %2564, %2562
  %2566 = add nsw i64 %2561, -1
  %2567 = trunc i64 %2561 to i32
  %2568 = icmp sgt i32 %2567, 0
  br i1 %2568, label %2560, label %2569, !llvm.loop !845

2569:                                             ; preds = %2560, %2551
  %2570 = phi i32 [ %2555, %2551 ], [ %2565, %2560 ]
  %2571 = and i64 %2520, 4294967295
  %2572 = getelementptr inbounds i32, ptr %6, i64 %2571
  %2573 = load i32, ptr %2572, align 4, !tbaa !5
  %2574 = mul nsw i32 %2573, %2570
  %2575 = add nsw i32 %2574, %2514
  %2576 = icmp sgt i64 %2512, 2
  %2577 = add nsw i64 %2513, -1
  %2578 = add i32 %2511, 1
  br i1 %2576, label %2510, label %2579, !llvm.loop !846

2579:                                             ; preds = %2569, %2506
  %2580 = phi i32 [ %2509, %2506 ], [ %2575, %2569 ]
  %2581 = sext i32 %2580 to i64
  %2582 = getelementptr inbounds double, ptr %2, i64 %2581
  %2583 = load double, ptr %2582, align 8, !tbaa !18
  %2584 = getelementptr inbounds i64, ptr %2474, i64 %2581
  %2585 = load i64, ptr %2584, align 8, !tbaa !120
  %2586 = trunc i64 %2585 to i32
  %2587 = load i32, ptr %2476, align 4, !tbaa !5
  %2588 = sitofp i32 %2587 to double
  %2589 = sitofp i32 %2586 to double
  %2590 = fmul fast double %2583, %2589
  %2591 = fmul fast double %2590, %2590
  %2592 = fadd fast double %2591, %2588
  %2593 = fptosi double %2592 to i32
  store i32 %2593, ptr %2476, align 4, !tbaa !5
  %2594 = fadd fast double %2583, %2508
  %2595 = add nuw nsw i32 %2507, 1
  br i1 %2500, label %2596, label %2643

2596:                                             ; preds = %2579
  %2597 = load i32, ptr %4, align 4, !tbaa !5
  %2598 = load i32, ptr %12, align 4, !tbaa !5
  %2599 = add nsw i32 %2598, -1
  %2600 = icmp slt i32 %2597, %2599
  br i1 %2600, label %2620, label %2601

2601:                                             ; preds = %2596
  %2602 = icmp eq i32 %2597, %2599
  br i1 %2602, label %2603, label %2636

2603:                                             ; preds = %2601
  store i32 0, ptr %4, align 4, !tbaa !5
  %2604 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2604, ptr %6, align 4, !tbaa !5
  br i1 %2505, label %2643, label %2605

2605:                                             ; preds = %2603, %2630
  %2606 = phi i64 [ %2634, %2630 ], [ 1, %2603 ]
  %2607 = getelementptr inbounds i32, ptr %4, i64 %2606
  %2608 = load i32, ptr %2607, align 4, !tbaa !5
  %2609 = getelementptr inbounds i32, ptr %12, i64 %2606
  %2610 = load i32, ptr %2609, align 4, !tbaa !5
  %2611 = add nsw i32 %2610, -1
  %2612 = icmp slt i32 %2608, %2611
  br i1 %2612, label %2613, label %2628

2613:                                             ; preds = %2605
  br i1 %2600, label %2620, label %2614

2614:                                             ; preds = %2613
  %2615 = getelementptr inbounds i32, ptr %7, i64 %2606
  %2616 = load i32, ptr %2615, align 4, !tbaa !5
  %2617 = getelementptr inbounds i32, ptr %6, i64 %2606
  %2618 = load i32, ptr %2617, align 4, !tbaa !5
  %2619 = add nsw i32 %2618, %2616
  store i32 %2619, ptr %2617, align 4, !tbaa !5
  br label %2638

2620:                                             ; preds = %2596, %2613
  %2621 = phi i32 [ %2608, %2613 ], [ %2597, %2596 ]
  %2622 = phi ptr [ %2607, %2613 ], [ %4, %2596 ]
  %2623 = phi i64 [ %2606, %2613 ], [ 0, %2596 ]
  %2624 = add nsw i32 %2621, 1
  store i32 %2624, ptr %2622, align 4, !tbaa !5
  %2625 = getelementptr inbounds i32, ptr %7, i64 %2623
  %2626 = load i32, ptr %2625, align 4, !tbaa !5
  %2627 = getelementptr inbounds i32, ptr %6, i64 %2623
  br label %2638

2628:                                             ; preds = %2605
  %2629 = icmp eq i32 %2608, %2611
  br i1 %2629, label %2630, label %2636

2630:                                             ; preds = %2628
  store i32 0, ptr %2607, align 4, !tbaa !5
  %2631 = getelementptr inbounds i32, ptr %8, i64 %2606
  %2632 = load i32, ptr %2631, align 4, !tbaa !5
  %2633 = getelementptr inbounds i32, ptr %6, i64 %2606
  store i32 %2632, ptr %2633, align 4, !tbaa !5
  %2634 = add nuw nsw i64 %2606, 1
  %2635 = icmp eq i64 %2634, %2503
  br i1 %2635, label %2643, label %2605, !llvm.loop !847

2636:                                             ; preds = %2601, %2628
  %2637 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

2638:                                             ; preds = %2614, %2620
  %2639 = phi ptr [ %2627, %2620 ], [ %2607, %2614 ]
  %2640 = phi i32 [ %2626, %2620 ], [ 1, %2614 ]
  %2641 = load i32, ptr %2639, align 4, !tbaa !5
  %2642 = add nsw i32 %2641, %2640
  store i32 %2642, ptr %2639, align 4, !tbaa !5
  br label %2643

2643:                                             ; preds = %2630, %2638, %2603, %2579
  %2644 = icmp eq i32 %2595, %5
  br i1 %2644, label %5511, label %2506, !llvm.loop !848

2645:                                             ; preds = %2489, %2784
  %2646 = phi i32 [ 0, %2489 ], [ %2733, %2784 ]
  %2647 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2490, label %2648, label %2717

2648:                                             ; preds = %2645, %2707
  %2649 = phi i32 [ %2716, %2707 ], [ 0, %2645 ]
  %2650 = phi i64 [ %2658, %2707 ], [ %2494, %2645 ]
  %2651 = phi i64 [ %2715, %2707 ], [ %2493, %2645 ]
  %2652 = phi i32 [ %2713, %2707 ], [ %2647, %2645 ]
  %2653 = sub i32 %2492, %2649
  %2654 = tail call i32 @llvm.smin.i32(i32 %2653, i32 0)
  %2655 = sub i32 %2653, %2654
  %2656 = zext i32 %2655 to i64
  %2657 = add nuw nsw i64 %2656, 1
  %2658 = add nsw i64 %2650, -1
  %2659 = icmp ult i32 %2655, 31
  br i1 %2659, label %2695, label %2660

2660:                                             ; preds = %2648
  %2661 = and i64 %2657, 8589934560
  %2662 = sub i64 %2651, %2661
  br label %2663

2663:                                             ; preds = %2663, %2660
  %2664 = phi i64 [ 0, %2660 ], [ %2687, %2663 ]
  %2665 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2660 ], [ %2683, %2663 ]
  %2666 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2660 ], [ %2684, %2663 ]
  %2667 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2660 ], [ %2685, %2663 ]
  %2668 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2660 ], [ %2686, %2663 ]
  %2669 = sub i64 %2651, %2664
  %2670 = getelementptr inbounds i32, ptr %11, i64 %2669
  %2671 = getelementptr inbounds i32, ptr %2670, i64 -7
  %2672 = load <8 x i32>, ptr %2671, align 4, !tbaa !5
  %2673 = shufflevector <8 x i32> %2672, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2674 = getelementptr inbounds i32, ptr %2670, i64 -15
  %2675 = load <8 x i32>, ptr %2674, align 4, !tbaa !5
  %2676 = shufflevector <8 x i32> %2675, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2677 = getelementptr inbounds i32, ptr %2670, i64 -23
  %2678 = load <8 x i32>, ptr %2677, align 4, !tbaa !5
  %2679 = shufflevector <8 x i32> %2678, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2680 = getelementptr inbounds i32, ptr %2670, i64 -31
  %2681 = load <8 x i32>, ptr %2680, align 4, !tbaa !5
  %2682 = shufflevector <8 x i32> %2681, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2683 = mul <8 x i32> %2673, %2665
  %2684 = mul <8 x i32> %2676, %2666
  %2685 = mul <8 x i32> %2679, %2667
  %2686 = mul <8 x i32> %2682, %2668
  %2687 = add nuw i64 %2664, 32
  %2688 = icmp eq i64 %2687, %2661
  br i1 %2688, label %2689, label %2663, !llvm.loop !849

2689:                                             ; preds = %2663
  %2690 = mul <8 x i32> %2684, %2683
  %2691 = mul <8 x i32> %2685, %2690
  %2692 = mul <8 x i32> %2686, %2691
  %2693 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2692)
  %2694 = icmp eq i64 %2657, %2661
  br i1 %2694, label %2707, label %2695

2695:                                             ; preds = %2648, %2689
  %2696 = phi i64 [ %2651, %2648 ], [ %2662, %2689 ]
  %2697 = phi i32 [ 1, %2648 ], [ %2693, %2689 ]
  br label %2698

2698:                                             ; preds = %2695, %2698
  %2699 = phi i64 [ %2704, %2698 ], [ %2696, %2695 ]
  %2700 = phi i32 [ %2703, %2698 ], [ %2697, %2695 ]
  %2701 = getelementptr inbounds i32, ptr %11, i64 %2699
  %2702 = load i32, ptr %2701, align 4, !tbaa !5
  %2703 = mul nsw i32 %2702, %2700
  %2704 = add nsw i64 %2699, -1
  %2705 = trunc i64 %2699 to i32
  %2706 = icmp sgt i32 %2705, 0
  br i1 %2706, label %2698, label %2707, !llvm.loop !850

2707:                                             ; preds = %2698, %2689
  %2708 = phi i32 [ %2693, %2689 ], [ %2703, %2698 ]
  %2709 = and i64 %2658, 4294967295
  %2710 = getelementptr inbounds i32, ptr %6, i64 %2709
  %2711 = load i32, ptr %2710, align 4, !tbaa !5
  %2712 = mul nsw i32 %2711, %2708
  %2713 = add nsw i32 %2712, %2652
  %2714 = icmp sgt i64 %2650, 2
  %2715 = add nsw i64 %2651, -1
  %2716 = add i32 %2649, 1
  br i1 %2714, label %2648, label %2717, !llvm.loop !851

2717:                                             ; preds = %2707, %2645
  %2718 = phi i32 [ %2647, %2645 ], [ %2713, %2707 ]
  %2719 = icmp slt i32 %2718, %5
  br i1 %2719, label %2722, label %2720

2720:                                             ; preds = %2717
  %2721 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

2722:                                             ; preds = %2717
  %2723 = sext i32 %2718 to i64
  %2724 = getelementptr inbounds i64, ptr %2474, i64 %2723
  %2725 = load i64, ptr %2724, align 8, !tbaa !120
  %2726 = trunc i64 %2725 to i32
  %2727 = load i32, ptr %2476, align 4, !tbaa !5
  %2728 = sitofp i32 %2727 to double
  %2729 = sitofp i32 %2726 to double
  %2730 = fmul fast double %2729, %2729
  %2731 = fadd fast double %2730, %2728
  %2732 = fptosi double %2731 to i32
  store i32 %2732, ptr %2476, align 4, !tbaa !5
  %2733 = add nuw nsw i32 %2646, 1
  br i1 %2491, label %2734, label %2784

2734:                                             ; preds = %2722
  %2735 = load i32, ptr %4, align 4, !tbaa !5
  %2736 = load i32, ptr %12, align 4, !tbaa !5
  %2737 = add nsw i32 %2736, -1
  %2738 = icmp slt i32 %2735, %2737
  br i1 %2738, label %2761, label %2739

2739:                                             ; preds = %2734
  %2740 = icmp eq i32 %2735, %2737
  br i1 %2740, label %2741, label %2777

2741:                                             ; preds = %2739
  store i32 0, ptr %4, align 4, !tbaa !5
  %2742 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2742, ptr %6, align 4, !tbaa !5
  br i1 %2496, label %2784, label %2743

2743:                                             ; preds = %2741, %2771
  %2744 = phi i64 [ %2775, %2771 ], [ 1, %2741 ]
  %2745 = getelementptr inbounds i32, ptr %4, i64 %2744
  %2746 = load i32, ptr %2745, align 4, !tbaa !5
  %2747 = getelementptr inbounds i32, ptr %12, i64 %2744
  %2748 = load i32, ptr %2747, align 4, !tbaa !5
  %2749 = add nsw i32 %2748, -1
  %2750 = icmp slt i32 %2746, %2749
  br i1 %2750, label %2751, label %2769

2751:                                             ; preds = %2743
  br i1 %2738, label %2761, label %2752

2752:                                             ; preds = %2751
  %2753 = shl i64 %2744, 32
  %2754 = add i64 %2753, -4294967296
  %2755 = ashr exact i64 %2754, 32
  %2756 = getelementptr inbounds i32, ptr %7, i64 %2755
  %2757 = load i32, ptr %2756, align 4, !tbaa !5
  %2758 = getelementptr inbounds i32, ptr %6, i64 %2744
  %2759 = load i32, ptr %2758, align 4, !tbaa !5
  %2760 = add nsw i32 %2759, %2757
  store i32 %2760, ptr %2758, align 4, !tbaa !5
  br label %2779

2761:                                             ; preds = %2734, %2751
  %2762 = phi i32 [ %2746, %2751 ], [ %2735, %2734 ]
  %2763 = phi ptr [ %2745, %2751 ], [ %4, %2734 ]
  %2764 = phi i64 [ %2744, %2751 ], [ 0, %2734 ]
  %2765 = add nsw i32 %2762, 1
  store i32 %2765, ptr %2763, align 4, !tbaa !5
  %2766 = getelementptr inbounds i32, ptr %7, i64 %2764
  %2767 = load i32, ptr %2766, align 4, !tbaa !5
  %2768 = getelementptr inbounds i32, ptr %6, i64 %2764
  br label %2779

2769:                                             ; preds = %2743
  %2770 = icmp eq i32 %2746, %2749
  br i1 %2770, label %2771, label %2777

2771:                                             ; preds = %2769
  store i32 0, ptr %2745, align 4, !tbaa !5
  %2772 = getelementptr inbounds i32, ptr %8, i64 %2744
  %2773 = load i32, ptr %2772, align 4, !tbaa !5
  %2774 = getelementptr inbounds i32, ptr %6, i64 %2744
  store i32 %2773, ptr %2774, align 4, !tbaa !5
  %2775 = add nuw nsw i64 %2744, 1
  %2776 = icmp eq i64 %2775, %2494
  br i1 %2776, label %2784, label %2743, !llvm.loop !852

2777:                                             ; preds = %2739, %2769
  %2778 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

2779:                                             ; preds = %2752, %2761
  %2780 = phi ptr [ %2768, %2761 ], [ %2745, %2752 ]
  %2781 = phi i32 [ %2767, %2761 ], [ 1, %2752 ]
  %2782 = load i32, ptr %2780, align 4, !tbaa !5
  %2783 = add nsw i32 %2782, %2781
  store i32 %2783, ptr %2780, align 4, !tbaa !5
  br label %2784

2784:                                             ; preds = %2771, %2779, %2741, %2722
  %2785 = icmp eq i32 %2733, %5
  br i1 %2785, label %5511, label %2645, !llvm.loop !853

2786:                                             ; preds = %2482
  %2787 = getelementptr inbounds i32, ptr %3, i64 %19
  %2788 = load i32, ptr %2787, align 4, !tbaa !5
  %2789 = icmp eq i32 %2788, 0
  %2790 = icmp sgt i32 %5, 0
  br i1 %2789, label %2800, label %2791

2791:                                             ; preds = %2786
  br i1 %2790, label %2792, label %5511

2792:                                             ; preds = %2791
  %2793 = icmp sgt i32 %13, 1
  %2794 = icmp sgt i32 %13, 0
  %2795 = add i32 %13, -2
  %2796 = zext i32 %2795 to i64
  %2797 = zext i32 %13 to i64
  %2798 = add nuw i32 %5, 1
  %2799 = icmp eq i32 %13, 1
  br label %2942

2800:                                             ; preds = %2786
  br i1 %2790, label %2801, label %5511

2801:                                             ; preds = %2800
  %2802 = icmp sgt i32 %13, 1
  %2803 = icmp sgt i32 %13, 0
  %2804 = add i32 %13, -2
  %2805 = zext i32 %2804 to i64
  %2806 = zext i32 %13 to i64
  %2807 = add nuw i32 %5, 1
  %2808 = icmp eq i32 %13, 1
  br label %2809

2809:                                             ; preds = %2801, %2940
  %2810 = phi i32 [ 0, %2801 ], [ %2892, %2940 ]
  %2811 = phi double [ 0.000000e+00, %2801 ], [ %2891, %2940 ]
  %2812 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2802, label %2813, label %2882

2813:                                             ; preds = %2809, %2872
  %2814 = phi i32 [ %2881, %2872 ], [ 0, %2809 ]
  %2815 = phi i64 [ %2823, %2872 ], [ %2806, %2809 ]
  %2816 = phi i64 [ %2880, %2872 ], [ %2805, %2809 ]
  %2817 = phi i32 [ %2878, %2872 ], [ %2812, %2809 ]
  %2818 = sub i32 %2804, %2814
  %2819 = tail call i32 @llvm.smin.i32(i32 %2818, i32 0)
  %2820 = sub i32 %2818, %2819
  %2821 = zext i32 %2820 to i64
  %2822 = add nuw nsw i64 %2821, 1
  %2823 = add nsw i64 %2815, -1
  %2824 = icmp ult i32 %2820, 31
  br i1 %2824, label %2860, label %2825

2825:                                             ; preds = %2813
  %2826 = and i64 %2822, 8589934560
  %2827 = sub i64 %2816, %2826
  br label %2828

2828:                                             ; preds = %2828, %2825
  %2829 = phi i64 [ 0, %2825 ], [ %2852, %2828 ]
  %2830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2825 ], [ %2848, %2828 ]
  %2831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2825 ], [ %2849, %2828 ]
  %2832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2825 ], [ %2850, %2828 ]
  %2833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2825 ], [ %2851, %2828 ]
  %2834 = sub i64 %2816, %2829
  %2835 = getelementptr inbounds i32, ptr %9, i64 %2834
  %2836 = getelementptr inbounds i32, ptr %2835, i64 -7
  %2837 = load <8 x i32>, ptr %2836, align 4, !tbaa !5
  %2838 = shufflevector <8 x i32> %2837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2839 = getelementptr inbounds i32, ptr %2835, i64 -15
  %2840 = load <8 x i32>, ptr %2839, align 4, !tbaa !5
  %2841 = shufflevector <8 x i32> %2840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2842 = getelementptr inbounds i32, ptr %2835, i64 -23
  %2843 = load <8 x i32>, ptr %2842, align 4, !tbaa !5
  %2844 = shufflevector <8 x i32> %2843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2845 = getelementptr inbounds i32, ptr %2835, i64 -31
  %2846 = load <8 x i32>, ptr %2845, align 4, !tbaa !5
  %2847 = shufflevector <8 x i32> %2846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2848 = mul <8 x i32> %2838, %2830
  %2849 = mul <8 x i32> %2841, %2831
  %2850 = mul <8 x i32> %2844, %2832
  %2851 = mul <8 x i32> %2847, %2833
  %2852 = add nuw i64 %2829, 32
  %2853 = icmp eq i64 %2852, %2826
  br i1 %2853, label %2854, label %2828, !llvm.loop !854

2854:                                             ; preds = %2828
  %2855 = mul <8 x i32> %2849, %2848
  %2856 = mul <8 x i32> %2850, %2855
  %2857 = mul <8 x i32> %2851, %2856
  %2858 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2857)
  %2859 = icmp eq i64 %2822, %2826
  br i1 %2859, label %2872, label %2860

2860:                                             ; preds = %2813, %2854
  %2861 = phi i64 [ %2816, %2813 ], [ %2827, %2854 ]
  %2862 = phi i32 [ 1, %2813 ], [ %2858, %2854 ]
  br label %2863

2863:                                             ; preds = %2860, %2863
  %2864 = phi i64 [ %2869, %2863 ], [ %2861, %2860 ]
  %2865 = phi i32 [ %2868, %2863 ], [ %2862, %2860 ]
  %2866 = getelementptr inbounds i32, ptr %9, i64 %2864
  %2867 = load i32, ptr %2866, align 4, !tbaa !5
  %2868 = mul nsw i32 %2867, %2865
  %2869 = add nsw i64 %2864, -1
  %2870 = trunc i64 %2864 to i32
  %2871 = icmp sgt i32 %2870, 0
  br i1 %2871, label %2863, label %2872, !llvm.loop !855

2872:                                             ; preds = %2863, %2854
  %2873 = phi i32 [ %2858, %2854 ], [ %2868, %2863 ]
  %2874 = and i64 %2823, 4294967295
  %2875 = getelementptr inbounds i32, ptr %6, i64 %2874
  %2876 = load i32, ptr %2875, align 4, !tbaa !5
  %2877 = mul nsw i32 %2876, %2873
  %2878 = add nsw i32 %2877, %2817
  %2879 = icmp sgt i64 %2815, 2
  %2880 = add nsw i64 %2816, -1
  %2881 = add i32 %2814, 1
  br i1 %2879, label %2813, label %2882, !llvm.loop !856

2882:                                             ; preds = %2872, %2809
  %2883 = phi i32 [ %2812, %2809 ], [ %2878, %2872 ]
  %2884 = sext i32 %2883 to i64
  %2885 = getelementptr inbounds i64, ptr %2474, i64 %2884
  %2886 = load i64, ptr %2885, align 8, !tbaa !120
  %2887 = trunc i64 %2886 to i32
  %2888 = load i32, ptr %2476, align 4, !tbaa !5
  %2889 = mul nsw i32 %2887, %2887
  %2890 = add nsw i32 %2889, %2888
  store i32 %2890, ptr %2476, align 4, !tbaa !5
  %2891 = fadd fast double %2811, 1.000000e+00
  %2892 = add nuw nsw i32 %2810, 1
  br i1 %2803, label %2893, label %2940

2893:                                             ; preds = %2882
  %2894 = load i32, ptr %4, align 4, !tbaa !5
  %2895 = load i32, ptr %12, align 4, !tbaa !5
  %2896 = add nsw i32 %2895, -1
  %2897 = icmp slt i32 %2894, %2896
  br i1 %2897, label %2917, label %2898

2898:                                             ; preds = %2893
  %2899 = icmp eq i32 %2894, %2896
  br i1 %2899, label %2900, label %2933

2900:                                             ; preds = %2898
  store i32 0, ptr %4, align 4, !tbaa !5
  %2901 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2901, ptr %6, align 4, !tbaa !5
  br i1 %2808, label %2940, label %2902

2902:                                             ; preds = %2900, %2927
  %2903 = phi i64 [ %2931, %2927 ], [ 1, %2900 ]
  %2904 = getelementptr inbounds i32, ptr %4, i64 %2903
  %2905 = load i32, ptr %2904, align 4, !tbaa !5
  %2906 = getelementptr inbounds i32, ptr %12, i64 %2903
  %2907 = load i32, ptr %2906, align 4, !tbaa !5
  %2908 = add nsw i32 %2907, -1
  %2909 = icmp slt i32 %2905, %2908
  br i1 %2909, label %2910, label %2925

2910:                                             ; preds = %2902
  br i1 %2897, label %2917, label %2911

2911:                                             ; preds = %2910
  %2912 = getelementptr inbounds i32, ptr %7, i64 %2903
  %2913 = load i32, ptr %2912, align 4, !tbaa !5
  %2914 = getelementptr inbounds i32, ptr %6, i64 %2903
  %2915 = load i32, ptr %2914, align 4, !tbaa !5
  %2916 = add nsw i32 %2915, %2913
  store i32 %2916, ptr %2914, align 4, !tbaa !5
  br label %2935

2917:                                             ; preds = %2893, %2910
  %2918 = phi i32 [ %2905, %2910 ], [ %2894, %2893 ]
  %2919 = phi ptr [ %2904, %2910 ], [ %4, %2893 ]
  %2920 = phi i64 [ %2903, %2910 ], [ 0, %2893 ]
  %2921 = add nsw i32 %2918, 1
  store i32 %2921, ptr %2919, align 4, !tbaa !5
  %2922 = getelementptr inbounds i32, ptr %7, i64 %2920
  %2923 = load i32, ptr %2922, align 4, !tbaa !5
  %2924 = getelementptr inbounds i32, ptr %6, i64 %2920
  br label %2935

2925:                                             ; preds = %2902
  %2926 = icmp eq i32 %2905, %2908
  br i1 %2926, label %2927, label %2933

2927:                                             ; preds = %2925
  store i32 0, ptr %2904, align 4, !tbaa !5
  %2928 = getelementptr inbounds i32, ptr %8, i64 %2903
  %2929 = load i32, ptr %2928, align 4, !tbaa !5
  %2930 = getelementptr inbounds i32, ptr %6, i64 %2903
  store i32 %2929, ptr %2930, align 4, !tbaa !5
  %2931 = add nuw nsw i64 %2903, 1
  %2932 = icmp eq i64 %2931, %2806
  br i1 %2932, label %2940, label %2902, !llvm.loop !857

2933:                                             ; preds = %2898, %2925
  %2934 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

2935:                                             ; preds = %2911, %2917
  %2936 = phi ptr [ %2924, %2917 ], [ %2904, %2911 ]
  %2937 = phi i32 [ %2923, %2917 ], [ 1, %2911 ]
  %2938 = load i32, ptr %2936, align 4, !tbaa !5
  %2939 = add nsw i32 %2938, %2937
  store i32 %2939, ptr %2936, align 4, !tbaa !5
  br label %2940

2940:                                             ; preds = %2927, %2935, %2900, %2882
  %2941 = icmp eq i32 %2892, %5
  br i1 %2941, label %5511, label %2809, !llvm.loop !858

2942:                                             ; preds = %2792, %3078
  %2943 = phi i32 [ 0, %2792 ], [ %3027, %3078 ]
  %2944 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2793, label %2945, label %3014

2945:                                             ; preds = %2942, %3004
  %2946 = phi i32 [ %3013, %3004 ], [ 0, %2942 ]
  %2947 = phi i64 [ %2955, %3004 ], [ %2797, %2942 ]
  %2948 = phi i64 [ %3012, %3004 ], [ %2796, %2942 ]
  %2949 = phi i32 [ %3010, %3004 ], [ %2944, %2942 ]
  %2950 = sub i32 %2795, %2946
  %2951 = tail call i32 @llvm.smin.i32(i32 %2950, i32 0)
  %2952 = sub i32 %2950, %2951
  %2953 = zext i32 %2952 to i64
  %2954 = add nuw nsw i64 %2953, 1
  %2955 = add nsw i64 %2947, -1
  %2956 = icmp ult i32 %2952, 31
  br i1 %2956, label %2992, label %2957

2957:                                             ; preds = %2945
  %2958 = and i64 %2954, 8589934560
  %2959 = sub i64 %2948, %2958
  br label %2960

2960:                                             ; preds = %2960, %2957
  %2961 = phi i64 [ 0, %2957 ], [ %2984, %2960 ]
  %2962 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2957 ], [ %2980, %2960 ]
  %2963 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2957 ], [ %2981, %2960 ]
  %2964 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2957 ], [ %2982, %2960 ]
  %2965 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2957 ], [ %2983, %2960 ]
  %2966 = sub i64 %2948, %2961
  %2967 = getelementptr inbounds i32, ptr %11, i64 %2966
  %2968 = getelementptr inbounds i32, ptr %2967, i64 -7
  %2969 = load <8 x i32>, ptr %2968, align 4, !tbaa !5
  %2970 = shufflevector <8 x i32> %2969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2971 = getelementptr inbounds i32, ptr %2967, i64 -15
  %2972 = load <8 x i32>, ptr %2971, align 4, !tbaa !5
  %2973 = shufflevector <8 x i32> %2972, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2974 = getelementptr inbounds i32, ptr %2967, i64 -23
  %2975 = load <8 x i32>, ptr %2974, align 4, !tbaa !5
  %2976 = shufflevector <8 x i32> %2975, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2977 = getelementptr inbounds i32, ptr %2967, i64 -31
  %2978 = load <8 x i32>, ptr %2977, align 4, !tbaa !5
  %2979 = shufflevector <8 x i32> %2978, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2980 = mul <8 x i32> %2970, %2962
  %2981 = mul <8 x i32> %2973, %2963
  %2982 = mul <8 x i32> %2976, %2964
  %2983 = mul <8 x i32> %2979, %2965
  %2984 = add nuw i64 %2961, 32
  %2985 = icmp eq i64 %2984, %2958
  br i1 %2985, label %2986, label %2960, !llvm.loop !859

2986:                                             ; preds = %2960
  %2987 = mul <8 x i32> %2981, %2980
  %2988 = mul <8 x i32> %2982, %2987
  %2989 = mul <8 x i32> %2983, %2988
  %2990 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2989)
  %2991 = icmp eq i64 %2954, %2958
  br i1 %2991, label %3004, label %2992

2992:                                             ; preds = %2945, %2986
  %2993 = phi i64 [ %2948, %2945 ], [ %2959, %2986 ]
  %2994 = phi i32 [ 1, %2945 ], [ %2990, %2986 ]
  br label %2995

2995:                                             ; preds = %2992, %2995
  %2996 = phi i64 [ %3001, %2995 ], [ %2993, %2992 ]
  %2997 = phi i32 [ %3000, %2995 ], [ %2994, %2992 ]
  %2998 = getelementptr inbounds i32, ptr %11, i64 %2996
  %2999 = load i32, ptr %2998, align 4, !tbaa !5
  %3000 = mul nsw i32 %2999, %2997
  %3001 = add nsw i64 %2996, -1
  %3002 = trunc i64 %2996 to i32
  %3003 = icmp sgt i32 %3002, 0
  br i1 %3003, label %2995, label %3004, !llvm.loop !860

3004:                                             ; preds = %2995, %2986
  %3005 = phi i32 [ %2990, %2986 ], [ %3000, %2995 ]
  %3006 = and i64 %2955, 4294967295
  %3007 = getelementptr inbounds i32, ptr %6, i64 %3006
  %3008 = load i32, ptr %3007, align 4, !tbaa !5
  %3009 = mul nsw i32 %3008, %3005
  %3010 = add nsw i32 %3009, %2949
  %3011 = icmp sgt i64 %2947, 2
  %3012 = add nsw i64 %2948, -1
  %3013 = add i32 %2946, 1
  br i1 %3011, label %2945, label %3014, !llvm.loop !861

3014:                                             ; preds = %3004, %2942
  %3015 = phi i32 [ %2944, %2942 ], [ %3010, %3004 ]
  %3016 = icmp slt i32 %3015, %5
  br i1 %3016, label %3019, label %3017

3017:                                             ; preds = %3014
  %3018 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

3019:                                             ; preds = %3014
  %3020 = sext i32 %3015 to i64
  %3021 = getelementptr inbounds i64, ptr %2474, i64 %3020
  %3022 = load i64, ptr %3021, align 8, !tbaa !120
  %3023 = trunc i64 %3022 to i32
  %3024 = load i32, ptr %2476, align 4, !tbaa !5
  %3025 = mul nsw i32 %3023, %3023
  %3026 = add nsw i32 %3025, %3024
  store i32 %3026, ptr %2476, align 4, !tbaa !5
  %3027 = add nuw nsw i32 %2943, 1
  br i1 %2794, label %3028, label %3078

3028:                                             ; preds = %3019
  %3029 = load i32, ptr %4, align 4, !tbaa !5
  %3030 = load i32, ptr %12, align 4, !tbaa !5
  %3031 = add nsw i32 %3030, -1
  %3032 = icmp slt i32 %3029, %3031
  br i1 %3032, label %3055, label %3033

3033:                                             ; preds = %3028
  %3034 = icmp eq i32 %3029, %3031
  br i1 %3034, label %3035, label %3071

3035:                                             ; preds = %3033
  store i32 0, ptr %4, align 4, !tbaa !5
  %3036 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3036, ptr %6, align 4, !tbaa !5
  br i1 %2799, label %3078, label %3037

3037:                                             ; preds = %3035, %3065
  %3038 = phi i64 [ %3069, %3065 ], [ 1, %3035 ]
  %3039 = getelementptr inbounds i32, ptr %4, i64 %3038
  %3040 = load i32, ptr %3039, align 4, !tbaa !5
  %3041 = getelementptr inbounds i32, ptr %12, i64 %3038
  %3042 = load i32, ptr %3041, align 4, !tbaa !5
  %3043 = add nsw i32 %3042, -1
  %3044 = icmp slt i32 %3040, %3043
  br i1 %3044, label %3045, label %3063

3045:                                             ; preds = %3037
  br i1 %3032, label %3055, label %3046

3046:                                             ; preds = %3045
  %3047 = shl i64 %3038, 32
  %3048 = add i64 %3047, -4294967296
  %3049 = ashr exact i64 %3048, 32
  %3050 = getelementptr inbounds i32, ptr %7, i64 %3049
  %3051 = load i32, ptr %3050, align 4, !tbaa !5
  %3052 = getelementptr inbounds i32, ptr %6, i64 %3038
  %3053 = load i32, ptr %3052, align 4, !tbaa !5
  %3054 = add nsw i32 %3053, %3051
  store i32 %3054, ptr %3052, align 4, !tbaa !5
  br label %3073

3055:                                             ; preds = %3028, %3045
  %3056 = phi i32 [ %3040, %3045 ], [ %3029, %3028 ]
  %3057 = phi ptr [ %3039, %3045 ], [ %4, %3028 ]
  %3058 = phi i64 [ %3038, %3045 ], [ 0, %3028 ]
  %3059 = add nsw i32 %3056, 1
  store i32 %3059, ptr %3057, align 4, !tbaa !5
  %3060 = getelementptr inbounds i32, ptr %7, i64 %3058
  %3061 = load i32, ptr %3060, align 4, !tbaa !5
  %3062 = getelementptr inbounds i32, ptr %6, i64 %3058
  br label %3073

3063:                                             ; preds = %3037
  %3064 = icmp eq i32 %3040, %3043
  br i1 %3064, label %3065, label %3071

3065:                                             ; preds = %3063
  store i32 0, ptr %3039, align 4, !tbaa !5
  %3066 = getelementptr inbounds i32, ptr %8, i64 %3038
  %3067 = load i32, ptr %3066, align 4, !tbaa !5
  %3068 = getelementptr inbounds i32, ptr %6, i64 %3038
  store i32 %3067, ptr %3068, align 4, !tbaa !5
  %3069 = add nuw nsw i64 %3038, 1
  %3070 = icmp eq i64 %3069, %2797
  br i1 %3070, label %3078, label %3037, !llvm.loop !862

3071:                                             ; preds = %3033, %3063
  %3072 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

3073:                                             ; preds = %3046, %3055
  %3074 = phi ptr [ %3062, %3055 ], [ %3039, %3046 ]
  %3075 = phi i32 [ %3061, %3055 ], [ 1, %3046 ]
  %3076 = load i32, ptr %3074, align 4, !tbaa !5
  %3077 = add nsw i32 %3076, %3075
  store i32 %3077, ptr %3074, align 4, !tbaa !5
  br label %3078

3078:                                             ; preds = %3065, %3073, %3035, %3019
  %3079 = icmp eq i32 %3027, %5
  br i1 %3079, label %5511, label %2942, !llvm.loop !863

3080:                                             ; preds = %2482
  %3081 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1460, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5511

3082:                                             ; preds = %18
  %3083 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3084 = load ptr, ptr %3083, align 8, !tbaa !9
  %3085 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3086 = load ptr, ptr %3085, align 8, !tbaa !9
  store i64 0, ptr %3086, align 8, !tbaa !120
  %3087 = icmp eq i32 %13, 0
  br i1 %3087, label %3088, label %3091

3088:                                             ; preds = %3082
  %3089 = load i64, ptr %3084, align 8, !tbaa !120
  %3090 = mul nsw i64 %3089, %3089
  store i64 %3090, ptr %3086, align 8, !tbaa !120
  br label %5511

3091:                                             ; preds = %3082
  switch i32 %1, label %3685 [
    i32 1, label %3092
    i32 0, label %3393
  ]

3092:                                             ; preds = %3091
  %3093 = getelementptr inbounds i32, ptr %3, i64 %19
  %3094 = load i32, ptr %3093, align 4, !tbaa !5
  %3095 = icmp eq i32 %3094, 0
  %3096 = icmp sgt i32 %5, 0
  br i1 %3095, label %3106, label %3097

3097:                                             ; preds = %3092
  br i1 %3096, label %3098, label %5511

3098:                                             ; preds = %3097
  %3099 = icmp sgt i32 %13, 1
  %3100 = icmp sgt i32 %13, 0
  %3101 = add i32 %13, -2
  %3102 = zext i32 %3101 to i64
  %3103 = zext i32 %13 to i64
  %3104 = add nuw i32 %5, 1
  %3105 = icmp eq i32 %13, 1
  br label %3253

3106:                                             ; preds = %3092
  br i1 %3096, label %3107, label %5511

3107:                                             ; preds = %3106
  %3108 = icmp sgt i32 %13, 1
  %3109 = icmp sgt i32 %13, 0
  %3110 = add i32 %13, -2
  %3111 = zext i32 %3110 to i64
  %3112 = zext i32 %13 to i64
  %3113 = add nuw i32 %5, 1
  %3114 = icmp eq i32 %13, 1
  br label %3115

3115:                                             ; preds = %3107, %3251
  %3116 = phi i64 [ 0, %3107 ], [ %3201, %3251 ]
  %3117 = phi i32 [ 0, %3107 ], [ %3203, %3251 ]
  %3118 = phi double [ 0.000000e+00, %3107 ], [ %3202, %3251 ]
  %3119 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3108, label %3120, label %3189

3120:                                             ; preds = %3115, %3179
  %3121 = phi i32 [ %3188, %3179 ], [ 0, %3115 ]
  %3122 = phi i64 [ %3130, %3179 ], [ %3112, %3115 ]
  %3123 = phi i64 [ %3187, %3179 ], [ %3111, %3115 ]
  %3124 = phi i32 [ %3185, %3179 ], [ %3119, %3115 ]
  %3125 = sub i32 %3110, %3121
  %3126 = tail call i32 @llvm.smin.i32(i32 %3125, i32 0)
  %3127 = sub i32 %3125, %3126
  %3128 = zext i32 %3127 to i64
  %3129 = add nuw nsw i64 %3128, 1
  %3130 = add nsw i64 %3122, -1
  %3131 = icmp ult i32 %3127, 31
  br i1 %3131, label %3167, label %3132

3132:                                             ; preds = %3120
  %3133 = and i64 %3129, 8589934560
  %3134 = sub i64 %3123, %3133
  br label %3135

3135:                                             ; preds = %3135, %3132
  %3136 = phi i64 [ 0, %3132 ], [ %3159, %3135 ]
  %3137 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3155, %3135 ]
  %3138 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3156, %3135 ]
  %3139 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3157, %3135 ]
  %3140 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3158, %3135 ]
  %3141 = sub i64 %3123, %3136
  %3142 = getelementptr inbounds i32, ptr %9, i64 %3141
  %3143 = getelementptr inbounds i32, ptr %3142, i64 -7
  %3144 = load <8 x i32>, ptr %3143, align 4, !tbaa !5
  %3145 = shufflevector <8 x i32> %3144, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3146 = getelementptr inbounds i32, ptr %3142, i64 -15
  %3147 = load <8 x i32>, ptr %3146, align 4, !tbaa !5
  %3148 = shufflevector <8 x i32> %3147, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3149 = getelementptr inbounds i32, ptr %3142, i64 -23
  %3150 = load <8 x i32>, ptr %3149, align 4, !tbaa !5
  %3151 = shufflevector <8 x i32> %3150, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3152 = getelementptr inbounds i32, ptr %3142, i64 -31
  %3153 = load <8 x i32>, ptr %3152, align 4, !tbaa !5
  %3154 = shufflevector <8 x i32> %3153, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3155 = mul <8 x i32> %3145, %3137
  %3156 = mul <8 x i32> %3148, %3138
  %3157 = mul <8 x i32> %3151, %3139
  %3158 = mul <8 x i32> %3154, %3140
  %3159 = add nuw i64 %3136, 32
  %3160 = icmp eq i64 %3159, %3133
  br i1 %3160, label %3161, label %3135, !llvm.loop !864

3161:                                             ; preds = %3135
  %3162 = mul <8 x i32> %3156, %3155
  %3163 = mul <8 x i32> %3157, %3162
  %3164 = mul <8 x i32> %3158, %3163
  %3165 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3164)
  %3166 = icmp eq i64 %3129, %3133
  br i1 %3166, label %3179, label %3167

3167:                                             ; preds = %3120, %3161
  %3168 = phi i64 [ %3123, %3120 ], [ %3134, %3161 ]
  %3169 = phi i32 [ 1, %3120 ], [ %3165, %3161 ]
  br label %3170

3170:                                             ; preds = %3167, %3170
  %3171 = phi i64 [ %3176, %3170 ], [ %3168, %3167 ]
  %3172 = phi i32 [ %3175, %3170 ], [ %3169, %3167 ]
  %3173 = getelementptr inbounds i32, ptr %9, i64 %3171
  %3174 = load i32, ptr %3173, align 4, !tbaa !5
  %3175 = mul nsw i32 %3174, %3172
  %3176 = add nsw i64 %3171, -1
  %3177 = trunc i64 %3171 to i32
  %3178 = icmp sgt i32 %3177, 0
  br i1 %3178, label %3170, label %3179, !llvm.loop !865

3179:                                             ; preds = %3170, %3161
  %3180 = phi i32 [ %3165, %3161 ], [ %3175, %3170 ]
  %3181 = and i64 %3130, 4294967295
  %3182 = getelementptr inbounds i32, ptr %6, i64 %3181
  %3183 = load i32, ptr %3182, align 4, !tbaa !5
  %3184 = mul nsw i32 %3183, %3180
  %3185 = add nsw i32 %3184, %3124
  %3186 = icmp sgt i64 %3122, 2
  %3187 = add nsw i64 %3123, -1
  %3188 = add i32 %3121, 1
  br i1 %3186, label %3120, label %3189, !llvm.loop !866

3189:                                             ; preds = %3179, %3115
  %3190 = phi i32 [ %3119, %3115 ], [ %3185, %3179 ]
  %3191 = sext i32 %3190 to i64
  %3192 = getelementptr inbounds double, ptr %2, i64 %3191
  %3193 = load double, ptr %3192, align 8, !tbaa !18
  %3194 = getelementptr inbounds i64, ptr %3084, i64 %3191
  %3195 = load i64, ptr %3194, align 8, !tbaa !120
  %3196 = sitofp i64 %3116 to double
  %3197 = sitofp i64 %3195 to double
  %3198 = fmul fast double %3193, %3197
  %3199 = fmul fast double %3198, %3198
  %3200 = fadd fast double %3199, %3196
  %3201 = fptosi double %3200 to i64
  store i64 %3201, ptr %3086, align 8, !tbaa !120
  %3202 = fadd fast double %3193, %3118
  %3203 = add nuw nsw i32 %3117, 1
  br i1 %3109, label %3204, label %3251

3204:                                             ; preds = %3189
  %3205 = load i32, ptr %4, align 4, !tbaa !5
  %3206 = load i32, ptr %12, align 4, !tbaa !5
  %3207 = add nsw i32 %3206, -1
  %3208 = icmp slt i32 %3205, %3207
  br i1 %3208, label %3228, label %3209

3209:                                             ; preds = %3204
  %3210 = icmp eq i32 %3205, %3207
  br i1 %3210, label %3211, label %3244

3211:                                             ; preds = %3209
  store i32 0, ptr %4, align 4, !tbaa !5
  %3212 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3212, ptr %6, align 4, !tbaa !5
  br i1 %3114, label %3251, label %3213

3213:                                             ; preds = %3211, %3238
  %3214 = phi i64 [ %3242, %3238 ], [ 1, %3211 ]
  %3215 = getelementptr inbounds i32, ptr %4, i64 %3214
  %3216 = load i32, ptr %3215, align 4, !tbaa !5
  %3217 = getelementptr inbounds i32, ptr %12, i64 %3214
  %3218 = load i32, ptr %3217, align 4, !tbaa !5
  %3219 = add nsw i32 %3218, -1
  %3220 = icmp slt i32 %3216, %3219
  br i1 %3220, label %3221, label %3236

3221:                                             ; preds = %3213
  br i1 %3208, label %3228, label %3222

3222:                                             ; preds = %3221
  %3223 = getelementptr inbounds i32, ptr %7, i64 %3214
  %3224 = load i32, ptr %3223, align 4, !tbaa !5
  %3225 = getelementptr inbounds i32, ptr %6, i64 %3214
  %3226 = load i32, ptr %3225, align 4, !tbaa !5
  %3227 = add nsw i32 %3226, %3224
  store i32 %3227, ptr %3225, align 4, !tbaa !5
  br label %3246

3228:                                             ; preds = %3204, %3221
  %3229 = phi i32 [ %3216, %3221 ], [ %3205, %3204 ]
  %3230 = phi ptr [ %3215, %3221 ], [ %4, %3204 ]
  %3231 = phi i64 [ %3214, %3221 ], [ 0, %3204 ]
  %3232 = add nsw i32 %3229, 1
  store i32 %3232, ptr %3230, align 4, !tbaa !5
  %3233 = getelementptr inbounds i32, ptr %7, i64 %3231
  %3234 = load i32, ptr %3233, align 4, !tbaa !5
  %3235 = getelementptr inbounds i32, ptr %6, i64 %3231
  br label %3246

3236:                                             ; preds = %3213
  %3237 = icmp eq i32 %3216, %3219
  br i1 %3237, label %3238, label %3244

3238:                                             ; preds = %3236
  store i32 0, ptr %3215, align 4, !tbaa !5
  %3239 = getelementptr inbounds i32, ptr %8, i64 %3214
  %3240 = load i32, ptr %3239, align 4, !tbaa !5
  %3241 = getelementptr inbounds i32, ptr %6, i64 %3214
  store i32 %3240, ptr %3241, align 4, !tbaa !5
  %3242 = add nuw nsw i64 %3214, 1
  %3243 = icmp eq i64 %3242, %3112
  br i1 %3243, label %3251, label %3213, !llvm.loop !867

3244:                                             ; preds = %3209, %3236
  %3245 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

3246:                                             ; preds = %3222, %3228
  %3247 = phi ptr [ %3235, %3228 ], [ %3215, %3222 ]
  %3248 = phi i32 [ %3234, %3228 ], [ 1, %3222 ]
  %3249 = load i32, ptr %3247, align 4, !tbaa !5
  %3250 = add nsw i32 %3249, %3248
  store i32 %3250, ptr %3247, align 4, !tbaa !5
  br label %3251

3251:                                             ; preds = %3238, %3246, %3211, %3189
  %3252 = icmp eq i32 %3203, %5
  br i1 %3252, label %5511, label %3115, !llvm.loop !868

3253:                                             ; preds = %3098, %3391
  %3254 = phi i64 [ 0, %3098 ], [ %3339, %3391 ]
  %3255 = phi i32 [ 0, %3098 ], [ %3340, %3391 ]
  %3256 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3099, label %3257, label %3326

3257:                                             ; preds = %3253, %3316
  %3258 = phi i32 [ %3325, %3316 ], [ 0, %3253 ]
  %3259 = phi i64 [ %3267, %3316 ], [ %3103, %3253 ]
  %3260 = phi i64 [ %3324, %3316 ], [ %3102, %3253 ]
  %3261 = phi i32 [ %3322, %3316 ], [ %3256, %3253 ]
  %3262 = sub i32 %3101, %3258
  %3263 = tail call i32 @llvm.smin.i32(i32 %3262, i32 0)
  %3264 = sub i32 %3262, %3263
  %3265 = zext i32 %3264 to i64
  %3266 = add nuw nsw i64 %3265, 1
  %3267 = add nsw i64 %3259, -1
  %3268 = icmp ult i32 %3264, 31
  br i1 %3268, label %3304, label %3269

3269:                                             ; preds = %3257
  %3270 = and i64 %3266, 8589934560
  %3271 = sub i64 %3260, %3270
  br label %3272

3272:                                             ; preds = %3272, %3269
  %3273 = phi i64 [ 0, %3269 ], [ %3296, %3272 ]
  %3274 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3269 ], [ %3292, %3272 ]
  %3275 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3269 ], [ %3293, %3272 ]
  %3276 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3269 ], [ %3294, %3272 ]
  %3277 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3269 ], [ %3295, %3272 ]
  %3278 = sub i64 %3260, %3273
  %3279 = getelementptr inbounds i32, ptr %11, i64 %3278
  %3280 = getelementptr inbounds i32, ptr %3279, i64 -7
  %3281 = load <8 x i32>, ptr %3280, align 4, !tbaa !5
  %3282 = shufflevector <8 x i32> %3281, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3283 = getelementptr inbounds i32, ptr %3279, i64 -15
  %3284 = load <8 x i32>, ptr %3283, align 4, !tbaa !5
  %3285 = shufflevector <8 x i32> %3284, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3286 = getelementptr inbounds i32, ptr %3279, i64 -23
  %3287 = load <8 x i32>, ptr %3286, align 4, !tbaa !5
  %3288 = shufflevector <8 x i32> %3287, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3289 = getelementptr inbounds i32, ptr %3279, i64 -31
  %3290 = load <8 x i32>, ptr %3289, align 4, !tbaa !5
  %3291 = shufflevector <8 x i32> %3290, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3292 = mul <8 x i32> %3282, %3274
  %3293 = mul <8 x i32> %3285, %3275
  %3294 = mul <8 x i32> %3288, %3276
  %3295 = mul <8 x i32> %3291, %3277
  %3296 = add nuw i64 %3273, 32
  %3297 = icmp eq i64 %3296, %3270
  br i1 %3297, label %3298, label %3272, !llvm.loop !869

3298:                                             ; preds = %3272
  %3299 = mul <8 x i32> %3293, %3292
  %3300 = mul <8 x i32> %3294, %3299
  %3301 = mul <8 x i32> %3295, %3300
  %3302 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3301)
  %3303 = icmp eq i64 %3266, %3270
  br i1 %3303, label %3316, label %3304

3304:                                             ; preds = %3257, %3298
  %3305 = phi i64 [ %3260, %3257 ], [ %3271, %3298 ]
  %3306 = phi i32 [ 1, %3257 ], [ %3302, %3298 ]
  br label %3307

3307:                                             ; preds = %3304, %3307
  %3308 = phi i64 [ %3313, %3307 ], [ %3305, %3304 ]
  %3309 = phi i32 [ %3312, %3307 ], [ %3306, %3304 ]
  %3310 = getelementptr inbounds i32, ptr %11, i64 %3308
  %3311 = load i32, ptr %3310, align 4, !tbaa !5
  %3312 = mul nsw i32 %3311, %3309
  %3313 = add nsw i64 %3308, -1
  %3314 = trunc i64 %3308 to i32
  %3315 = icmp sgt i32 %3314, 0
  br i1 %3315, label %3307, label %3316, !llvm.loop !870

3316:                                             ; preds = %3307, %3298
  %3317 = phi i32 [ %3302, %3298 ], [ %3312, %3307 ]
  %3318 = and i64 %3267, 4294967295
  %3319 = getelementptr inbounds i32, ptr %6, i64 %3318
  %3320 = load i32, ptr %3319, align 4, !tbaa !5
  %3321 = mul nsw i32 %3320, %3317
  %3322 = add nsw i32 %3321, %3261
  %3323 = icmp sgt i64 %3259, 2
  %3324 = add nsw i64 %3260, -1
  %3325 = add i32 %3258, 1
  br i1 %3323, label %3257, label %3326, !llvm.loop !871

3326:                                             ; preds = %3316, %3253
  %3327 = phi i32 [ %3256, %3253 ], [ %3322, %3316 ]
  %3328 = icmp slt i32 %3327, %5
  br i1 %3328, label %3331, label %3329

3329:                                             ; preds = %3326
  %3330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

3331:                                             ; preds = %3326
  %3332 = sext i32 %3327 to i64
  %3333 = getelementptr inbounds i64, ptr %3084, i64 %3332
  %3334 = load i64, ptr %3333, align 8, !tbaa !120
  %3335 = sitofp i64 %3254 to double
  %3336 = sitofp i64 %3334 to double
  %3337 = fmul fast double %3336, %3336
  %3338 = fadd fast double %3337, %3335
  %3339 = fptosi double %3338 to i64
  store i64 %3339, ptr %3086, align 8, !tbaa !120
  %3340 = add nuw nsw i32 %3255, 1
  br i1 %3100, label %3341, label %3391

3341:                                             ; preds = %3331
  %3342 = load i32, ptr %4, align 4, !tbaa !5
  %3343 = load i32, ptr %12, align 4, !tbaa !5
  %3344 = add nsw i32 %3343, -1
  %3345 = icmp slt i32 %3342, %3344
  br i1 %3345, label %3368, label %3346

3346:                                             ; preds = %3341
  %3347 = icmp eq i32 %3342, %3344
  br i1 %3347, label %3348, label %3384

3348:                                             ; preds = %3346
  store i32 0, ptr %4, align 4, !tbaa !5
  %3349 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3349, ptr %6, align 4, !tbaa !5
  br i1 %3105, label %3391, label %3350

3350:                                             ; preds = %3348, %3378
  %3351 = phi i64 [ %3382, %3378 ], [ 1, %3348 ]
  %3352 = getelementptr inbounds i32, ptr %4, i64 %3351
  %3353 = load i32, ptr %3352, align 4, !tbaa !5
  %3354 = getelementptr inbounds i32, ptr %12, i64 %3351
  %3355 = load i32, ptr %3354, align 4, !tbaa !5
  %3356 = add nsw i32 %3355, -1
  %3357 = icmp slt i32 %3353, %3356
  br i1 %3357, label %3358, label %3376

3358:                                             ; preds = %3350
  br i1 %3345, label %3368, label %3359

3359:                                             ; preds = %3358
  %3360 = shl i64 %3351, 32
  %3361 = add i64 %3360, -4294967296
  %3362 = ashr exact i64 %3361, 32
  %3363 = getelementptr inbounds i32, ptr %7, i64 %3362
  %3364 = load i32, ptr %3363, align 4, !tbaa !5
  %3365 = getelementptr inbounds i32, ptr %6, i64 %3351
  %3366 = load i32, ptr %3365, align 4, !tbaa !5
  %3367 = add nsw i32 %3366, %3364
  store i32 %3367, ptr %3365, align 4, !tbaa !5
  br label %3386

3368:                                             ; preds = %3341, %3358
  %3369 = phi i32 [ %3353, %3358 ], [ %3342, %3341 ]
  %3370 = phi ptr [ %3352, %3358 ], [ %4, %3341 ]
  %3371 = phi i64 [ %3351, %3358 ], [ 0, %3341 ]
  %3372 = add nsw i32 %3369, 1
  store i32 %3372, ptr %3370, align 4, !tbaa !5
  %3373 = getelementptr inbounds i32, ptr %7, i64 %3371
  %3374 = load i32, ptr %3373, align 4, !tbaa !5
  %3375 = getelementptr inbounds i32, ptr %6, i64 %3371
  br label %3386

3376:                                             ; preds = %3350
  %3377 = icmp eq i32 %3353, %3356
  br i1 %3377, label %3378, label %3384

3378:                                             ; preds = %3376
  store i32 0, ptr %3352, align 4, !tbaa !5
  %3379 = getelementptr inbounds i32, ptr %8, i64 %3351
  %3380 = load i32, ptr %3379, align 4, !tbaa !5
  %3381 = getelementptr inbounds i32, ptr %6, i64 %3351
  store i32 %3380, ptr %3381, align 4, !tbaa !5
  %3382 = add nuw nsw i64 %3351, 1
  %3383 = icmp eq i64 %3382, %3103
  br i1 %3383, label %3391, label %3350, !llvm.loop !872

3384:                                             ; preds = %3346, %3376
  %3385 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

3386:                                             ; preds = %3359, %3368
  %3387 = phi ptr [ %3375, %3368 ], [ %3352, %3359 ]
  %3388 = phi i32 [ %3374, %3368 ], [ 1, %3359 ]
  %3389 = load i32, ptr %3387, align 4, !tbaa !5
  %3390 = add nsw i32 %3389, %3388
  store i32 %3390, ptr %3387, align 4, !tbaa !5
  br label %3391

3391:                                             ; preds = %3378, %3386, %3348, %3331
  %3392 = icmp eq i32 %3340, %5
  br i1 %3392, label %5511, label %3253, !llvm.loop !873

3393:                                             ; preds = %3091
  %3394 = getelementptr inbounds i32, ptr %3, i64 %19
  %3395 = load i32, ptr %3394, align 4, !tbaa !5
  %3396 = icmp eq i32 %3395, 0
  %3397 = icmp sgt i32 %5, 0
  br i1 %3396, label %3407, label %3398

3398:                                             ; preds = %3393
  br i1 %3397, label %3399, label %5511

3399:                                             ; preds = %3398
  %3400 = icmp sgt i32 %13, 1
  %3401 = icmp sgt i32 %13, 0
  %3402 = add i32 %13, -2
  %3403 = zext i32 %3402 to i64
  %3404 = zext i32 %13 to i64
  %3405 = add nuw i32 %5, 1
  %3406 = icmp eq i32 %13, 1
  br label %3548

3407:                                             ; preds = %3393
  br i1 %3397, label %3408, label %5511

3408:                                             ; preds = %3407
  %3409 = icmp sgt i32 %13, 1
  %3410 = icmp sgt i32 %13, 0
  %3411 = add i32 %13, -2
  %3412 = zext i32 %3411 to i64
  %3413 = zext i32 %13 to i64
  %3414 = add nuw i32 %5, 1
  %3415 = icmp eq i32 %13, 1
  br label %3416

3416:                                             ; preds = %3408, %3546
  %3417 = phi i64 [ 0, %3408 ], [ %3496, %3546 ]
  %3418 = phi i32 [ 0, %3408 ], [ %3498, %3546 ]
  %3419 = phi double [ 0.000000e+00, %3408 ], [ %3497, %3546 ]
  %3420 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3409, label %3421, label %3490

3421:                                             ; preds = %3416, %3480
  %3422 = phi i32 [ %3489, %3480 ], [ 0, %3416 ]
  %3423 = phi i64 [ %3431, %3480 ], [ %3413, %3416 ]
  %3424 = phi i64 [ %3488, %3480 ], [ %3412, %3416 ]
  %3425 = phi i32 [ %3486, %3480 ], [ %3420, %3416 ]
  %3426 = sub i32 %3411, %3422
  %3427 = tail call i32 @llvm.smin.i32(i32 %3426, i32 0)
  %3428 = sub i32 %3426, %3427
  %3429 = zext i32 %3428 to i64
  %3430 = add nuw nsw i64 %3429, 1
  %3431 = add nsw i64 %3423, -1
  %3432 = icmp ult i32 %3428, 31
  br i1 %3432, label %3468, label %3433

3433:                                             ; preds = %3421
  %3434 = and i64 %3430, 8589934560
  %3435 = sub i64 %3424, %3434
  br label %3436

3436:                                             ; preds = %3436, %3433
  %3437 = phi i64 [ 0, %3433 ], [ %3460, %3436 ]
  %3438 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3456, %3436 ]
  %3439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3457, %3436 ]
  %3440 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3458, %3436 ]
  %3441 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3433 ], [ %3459, %3436 ]
  %3442 = sub i64 %3424, %3437
  %3443 = getelementptr inbounds i32, ptr %9, i64 %3442
  %3444 = getelementptr inbounds i32, ptr %3443, i64 -7
  %3445 = load <8 x i32>, ptr %3444, align 4, !tbaa !5
  %3446 = shufflevector <8 x i32> %3445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3447 = getelementptr inbounds i32, ptr %3443, i64 -15
  %3448 = load <8 x i32>, ptr %3447, align 4, !tbaa !5
  %3449 = shufflevector <8 x i32> %3448, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3450 = getelementptr inbounds i32, ptr %3443, i64 -23
  %3451 = load <8 x i32>, ptr %3450, align 4, !tbaa !5
  %3452 = shufflevector <8 x i32> %3451, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3453 = getelementptr inbounds i32, ptr %3443, i64 -31
  %3454 = load <8 x i32>, ptr %3453, align 4, !tbaa !5
  %3455 = shufflevector <8 x i32> %3454, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3456 = mul <8 x i32> %3446, %3438
  %3457 = mul <8 x i32> %3449, %3439
  %3458 = mul <8 x i32> %3452, %3440
  %3459 = mul <8 x i32> %3455, %3441
  %3460 = add nuw i64 %3437, 32
  %3461 = icmp eq i64 %3460, %3434
  br i1 %3461, label %3462, label %3436, !llvm.loop !874

3462:                                             ; preds = %3436
  %3463 = mul <8 x i32> %3457, %3456
  %3464 = mul <8 x i32> %3458, %3463
  %3465 = mul <8 x i32> %3459, %3464
  %3466 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3465)
  %3467 = icmp eq i64 %3430, %3434
  br i1 %3467, label %3480, label %3468

3468:                                             ; preds = %3421, %3462
  %3469 = phi i64 [ %3424, %3421 ], [ %3435, %3462 ]
  %3470 = phi i32 [ 1, %3421 ], [ %3466, %3462 ]
  br label %3471

3471:                                             ; preds = %3468, %3471
  %3472 = phi i64 [ %3477, %3471 ], [ %3469, %3468 ]
  %3473 = phi i32 [ %3476, %3471 ], [ %3470, %3468 ]
  %3474 = getelementptr inbounds i32, ptr %9, i64 %3472
  %3475 = load i32, ptr %3474, align 4, !tbaa !5
  %3476 = mul nsw i32 %3475, %3473
  %3477 = add nsw i64 %3472, -1
  %3478 = trunc i64 %3472 to i32
  %3479 = icmp sgt i32 %3478, 0
  br i1 %3479, label %3471, label %3480, !llvm.loop !875

3480:                                             ; preds = %3471, %3462
  %3481 = phi i32 [ %3466, %3462 ], [ %3476, %3471 ]
  %3482 = and i64 %3431, 4294967295
  %3483 = getelementptr inbounds i32, ptr %6, i64 %3482
  %3484 = load i32, ptr %3483, align 4, !tbaa !5
  %3485 = mul nsw i32 %3484, %3481
  %3486 = add nsw i32 %3485, %3425
  %3487 = icmp sgt i64 %3423, 2
  %3488 = add nsw i64 %3424, -1
  %3489 = add i32 %3422, 1
  br i1 %3487, label %3421, label %3490, !llvm.loop !876

3490:                                             ; preds = %3480, %3416
  %3491 = phi i32 [ %3420, %3416 ], [ %3486, %3480 ]
  %3492 = sext i32 %3491 to i64
  %3493 = getelementptr inbounds i64, ptr %3084, i64 %3492
  %3494 = load i64, ptr %3493, align 8, !tbaa !120
  %3495 = mul nsw i64 %3494, %3494
  %3496 = add nuw nsw i64 %3417, %3495
  store i64 %3496, ptr %3086, align 8, !tbaa !120
  %3497 = fadd fast double %3419, 1.000000e+00
  %3498 = add nuw nsw i32 %3418, 1
  br i1 %3410, label %3499, label %3546

3499:                                             ; preds = %3490
  %3500 = load i32, ptr %4, align 4, !tbaa !5
  %3501 = load i32, ptr %12, align 4, !tbaa !5
  %3502 = add nsw i32 %3501, -1
  %3503 = icmp slt i32 %3500, %3502
  br i1 %3503, label %3523, label %3504

3504:                                             ; preds = %3499
  %3505 = icmp eq i32 %3500, %3502
  br i1 %3505, label %3506, label %3539

3506:                                             ; preds = %3504
  store i32 0, ptr %4, align 4, !tbaa !5
  %3507 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3507, ptr %6, align 4, !tbaa !5
  br i1 %3415, label %3546, label %3508

3508:                                             ; preds = %3506, %3533
  %3509 = phi i64 [ %3537, %3533 ], [ 1, %3506 ]
  %3510 = getelementptr inbounds i32, ptr %4, i64 %3509
  %3511 = load i32, ptr %3510, align 4, !tbaa !5
  %3512 = getelementptr inbounds i32, ptr %12, i64 %3509
  %3513 = load i32, ptr %3512, align 4, !tbaa !5
  %3514 = add nsw i32 %3513, -1
  %3515 = icmp slt i32 %3511, %3514
  br i1 %3515, label %3516, label %3531

3516:                                             ; preds = %3508
  br i1 %3503, label %3523, label %3517

3517:                                             ; preds = %3516
  %3518 = getelementptr inbounds i32, ptr %7, i64 %3509
  %3519 = load i32, ptr %3518, align 4, !tbaa !5
  %3520 = getelementptr inbounds i32, ptr %6, i64 %3509
  %3521 = load i32, ptr %3520, align 4, !tbaa !5
  %3522 = add nsw i32 %3521, %3519
  store i32 %3522, ptr %3520, align 4, !tbaa !5
  br label %3541

3523:                                             ; preds = %3499, %3516
  %3524 = phi i32 [ %3511, %3516 ], [ %3500, %3499 ]
  %3525 = phi ptr [ %3510, %3516 ], [ %4, %3499 ]
  %3526 = phi i64 [ %3509, %3516 ], [ 0, %3499 ]
  %3527 = add nsw i32 %3524, 1
  store i32 %3527, ptr %3525, align 4, !tbaa !5
  %3528 = getelementptr inbounds i32, ptr %7, i64 %3526
  %3529 = load i32, ptr %3528, align 4, !tbaa !5
  %3530 = getelementptr inbounds i32, ptr %6, i64 %3526
  br label %3541

3531:                                             ; preds = %3508
  %3532 = icmp eq i32 %3511, %3514
  br i1 %3532, label %3533, label %3539

3533:                                             ; preds = %3531
  store i32 0, ptr %3510, align 4, !tbaa !5
  %3534 = getelementptr inbounds i32, ptr %8, i64 %3509
  %3535 = load i32, ptr %3534, align 4, !tbaa !5
  %3536 = getelementptr inbounds i32, ptr %6, i64 %3509
  store i32 %3535, ptr %3536, align 4, !tbaa !5
  %3537 = add nuw nsw i64 %3509, 1
  %3538 = icmp eq i64 %3537, %3413
  br i1 %3538, label %3546, label %3508, !llvm.loop !877

3539:                                             ; preds = %3504, %3531
  %3540 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

3541:                                             ; preds = %3517, %3523
  %3542 = phi ptr [ %3530, %3523 ], [ %3510, %3517 ]
  %3543 = phi i32 [ %3529, %3523 ], [ 1, %3517 ]
  %3544 = load i32, ptr %3542, align 4, !tbaa !5
  %3545 = add nsw i32 %3544, %3543
  store i32 %3545, ptr %3542, align 4, !tbaa !5
  br label %3546

3546:                                             ; preds = %3533, %3541, %3506, %3490
  %3547 = icmp eq i32 %3498, %5
  br i1 %3547, label %5511, label %3416, !llvm.loop !878

3548:                                             ; preds = %3399, %3683
  %3549 = phi i64 [ 0, %3399 ], [ %3631, %3683 ]
  %3550 = phi i32 [ 0, %3399 ], [ %3632, %3683 ]
  %3551 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3400, label %3552, label %3621

3552:                                             ; preds = %3548, %3611
  %3553 = phi i32 [ %3620, %3611 ], [ 0, %3548 ]
  %3554 = phi i64 [ %3562, %3611 ], [ %3404, %3548 ]
  %3555 = phi i64 [ %3619, %3611 ], [ %3403, %3548 ]
  %3556 = phi i32 [ %3617, %3611 ], [ %3551, %3548 ]
  %3557 = sub i32 %3402, %3553
  %3558 = tail call i32 @llvm.smin.i32(i32 %3557, i32 0)
  %3559 = sub i32 %3557, %3558
  %3560 = zext i32 %3559 to i64
  %3561 = add nuw nsw i64 %3560, 1
  %3562 = add nsw i64 %3554, -1
  %3563 = icmp ult i32 %3559, 31
  br i1 %3563, label %3599, label %3564

3564:                                             ; preds = %3552
  %3565 = and i64 %3561, 8589934560
  %3566 = sub i64 %3555, %3565
  br label %3567

3567:                                             ; preds = %3567, %3564
  %3568 = phi i64 [ 0, %3564 ], [ %3591, %3567 ]
  %3569 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3564 ], [ %3587, %3567 ]
  %3570 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3564 ], [ %3588, %3567 ]
  %3571 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3564 ], [ %3589, %3567 ]
  %3572 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3564 ], [ %3590, %3567 ]
  %3573 = sub i64 %3555, %3568
  %3574 = getelementptr inbounds i32, ptr %11, i64 %3573
  %3575 = getelementptr inbounds i32, ptr %3574, i64 -7
  %3576 = load <8 x i32>, ptr %3575, align 4, !tbaa !5
  %3577 = shufflevector <8 x i32> %3576, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3578 = getelementptr inbounds i32, ptr %3574, i64 -15
  %3579 = load <8 x i32>, ptr %3578, align 4, !tbaa !5
  %3580 = shufflevector <8 x i32> %3579, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3581 = getelementptr inbounds i32, ptr %3574, i64 -23
  %3582 = load <8 x i32>, ptr %3581, align 4, !tbaa !5
  %3583 = shufflevector <8 x i32> %3582, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3584 = getelementptr inbounds i32, ptr %3574, i64 -31
  %3585 = load <8 x i32>, ptr %3584, align 4, !tbaa !5
  %3586 = shufflevector <8 x i32> %3585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3587 = mul <8 x i32> %3577, %3569
  %3588 = mul <8 x i32> %3580, %3570
  %3589 = mul <8 x i32> %3583, %3571
  %3590 = mul <8 x i32> %3586, %3572
  %3591 = add nuw i64 %3568, 32
  %3592 = icmp eq i64 %3591, %3565
  br i1 %3592, label %3593, label %3567, !llvm.loop !879

3593:                                             ; preds = %3567
  %3594 = mul <8 x i32> %3588, %3587
  %3595 = mul <8 x i32> %3589, %3594
  %3596 = mul <8 x i32> %3590, %3595
  %3597 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3596)
  %3598 = icmp eq i64 %3561, %3565
  br i1 %3598, label %3611, label %3599

3599:                                             ; preds = %3552, %3593
  %3600 = phi i64 [ %3555, %3552 ], [ %3566, %3593 ]
  %3601 = phi i32 [ 1, %3552 ], [ %3597, %3593 ]
  br label %3602

3602:                                             ; preds = %3599, %3602
  %3603 = phi i64 [ %3608, %3602 ], [ %3600, %3599 ]
  %3604 = phi i32 [ %3607, %3602 ], [ %3601, %3599 ]
  %3605 = getelementptr inbounds i32, ptr %11, i64 %3603
  %3606 = load i32, ptr %3605, align 4, !tbaa !5
  %3607 = mul nsw i32 %3606, %3604
  %3608 = add nsw i64 %3603, -1
  %3609 = trunc i64 %3603 to i32
  %3610 = icmp sgt i32 %3609, 0
  br i1 %3610, label %3602, label %3611, !llvm.loop !880

3611:                                             ; preds = %3602, %3593
  %3612 = phi i32 [ %3597, %3593 ], [ %3607, %3602 ]
  %3613 = and i64 %3562, 4294967295
  %3614 = getelementptr inbounds i32, ptr %6, i64 %3613
  %3615 = load i32, ptr %3614, align 4, !tbaa !5
  %3616 = mul nsw i32 %3615, %3612
  %3617 = add nsw i32 %3616, %3556
  %3618 = icmp sgt i64 %3554, 2
  %3619 = add nsw i64 %3555, -1
  %3620 = add i32 %3553, 1
  br i1 %3618, label %3552, label %3621, !llvm.loop !881

3621:                                             ; preds = %3611, %3548
  %3622 = phi i32 [ %3551, %3548 ], [ %3617, %3611 ]
  %3623 = icmp slt i32 %3622, %5
  br i1 %3623, label %3626, label %3624

3624:                                             ; preds = %3621
  %3625 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

3626:                                             ; preds = %3621
  %3627 = sext i32 %3622 to i64
  %3628 = getelementptr inbounds i64, ptr %3084, i64 %3627
  %3629 = load i64, ptr %3628, align 8, !tbaa !120
  %3630 = mul nsw i64 %3629, %3629
  %3631 = add nuw nsw i64 %3549, %3630
  store i64 %3631, ptr %3086, align 8, !tbaa !120
  %3632 = add nuw nsw i32 %3550, 1
  br i1 %3401, label %3633, label %3683

3633:                                             ; preds = %3626
  %3634 = load i32, ptr %4, align 4, !tbaa !5
  %3635 = load i32, ptr %12, align 4, !tbaa !5
  %3636 = add nsw i32 %3635, -1
  %3637 = icmp slt i32 %3634, %3636
  br i1 %3637, label %3660, label %3638

3638:                                             ; preds = %3633
  %3639 = icmp eq i32 %3634, %3636
  br i1 %3639, label %3640, label %3676

3640:                                             ; preds = %3638
  store i32 0, ptr %4, align 4, !tbaa !5
  %3641 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3641, ptr %6, align 4, !tbaa !5
  br i1 %3406, label %3683, label %3642

3642:                                             ; preds = %3640, %3670
  %3643 = phi i64 [ %3674, %3670 ], [ 1, %3640 ]
  %3644 = getelementptr inbounds i32, ptr %4, i64 %3643
  %3645 = load i32, ptr %3644, align 4, !tbaa !5
  %3646 = getelementptr inbounds i32, ptr %12, i64 %3643
  %3647 = load i32, ptr %3646, align 4, !tbaa !5
  %3648 = add nsw i32 %3647, -1
  %3649 = icmp slt i32 %3645, %3648
  br i1 %3649, label %3650, label %3668

3650:                                             ; preds = %3642
  br i1 %3637, label %3660, label %3651

3651:                                             ; preds = %3650
  %3652 = shl i64 %3643, 32
  %3653 = add i64 %3652, -4294967296
  %3654 = ashr exact i64 %3653, 32
  %3655 = getelementptr inbounds i32, ptr %7, i64 %3654
  %3656 = load i32, ptr %3655, align 4, !tbaa !5
  %3657 = getelementptr inbounds i32, ptr %6, i64 %3643
  %3658 = load i32, ptr %3657, align 4, !tbaa !5
  %3659 = add nsw i32 %3658, %3656
  store i32 %3659, ptr %3657, align 4, !tbaa !5
  br label %3678

3660:                                             ; preds = %3633, %3650
  %3661 = phi i32 [ %3645, %3650 ], [ %3634, %3633 ]
  %3662 = phi ptr [ %3644, %3650 ], [ %4, %3633 ]
  %3663 = phi i64 [ %3643, %3650 ], [ 0, %3633 ]
  %3664 = add nsw i32 %3661, 1
  store i32 %3664, ptr %3662, align 4, !tbaa !5
  %3665 = getelementptr inbounds i32, ptr %7, i64 %3663
  %3666 = load i32, ptr %3665, align 4, !tbaa !5
  %3667 = getelementptr inbounds i32, ptr %6, i64 %3663
  br label %3678

3668:                                             ; preds = %3642
  %3669 = icmp eq i32 %3645, %3648
  br i1 %3669, label %3670, label %3676

3670:                                             ; preds = %3668
  store i32 0, ptr %3644, align 4, !tbaa !5
  %3671 = getelementptr inbounds i32, ptr %8, i64 %3643
  %3672 = load i32, ptr %3671, align 4, !tbaa !5
  %3673 = getelementptr inbounds i32, ptr %6, i64 %3643
  store i32 %3672, ptr %3673, align 4, !tbaa !5
  %3674 = add nuw nsw i64 %3643, 1
  %3675 = icmp eq i64 %3674, %3404
  br i1 %3675, label %3683, label %3642, !llvm.loop !882

3676:                                             ; preds = %3638, %3668
  %3677 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

3678:                                             ; preds = %3651, %3660
  %3679 = phi ptr [ %3667, %3660 ], [ %3644, %3651 ]
  %3680 = phi i32 [ %3666, %3660 ], [ 1, %3651 ]
  %3681 = load i32, ptr %3679, align 4, !tbaa !5
  %3682 = add nsw i32 %3681, %3680
  store i32 %3682, ptr %3679, align 4, !tbaa !5
  br label %3683

3683:                                             ; preds = %3670, %3678, %3640, %3626
  %3684 = icmp eq i32 %3632, %5
  br i1 %3684, label %5511, label %3548, !llvm.loop !883

3685:                                             ; preds = %3091
  %3686 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1465, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5511

3687:                                             ; preds = %18
  %3688 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3689 = load ptr, ptr %3688, align 8, !tbaa !9
  %3690 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3691 = load ptr, ptr %3690, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3691, align 8, !tbaa !18
  %3692 = icmp eq i32 %13, 0
  br i1 %3692, label %3693, label %3697

3693:                                             ; preds = %3687
  %3694 = load i64, ptr %3689, align 8, !tbaa !120
  %3695 = sitofp i64 %3694 to double
  %3696 = fmul fast double %3695, %3695
  store double %3696, ptr %3691, align 8, !tbaa !18
  br label %5511

3697:                                             ; preds = %3687
  switch i32 %1, label %4289 [
    i32 1, label %3698
    i32 0, label %3995
  ]

3698:                                             ; preds = %3697
  %3699 = getelementptr inbounds i32, ptr %3, i64 %19
  %3700 = load i32, ptr %3699, align 4, !tbaa !5
  %3701 = icmp eq i32 %3700, 0
  %3702 = icmp sgt i32 %5, 0
  br i1 %3701, label %3712, label %3703

3703:                                             ; preds = %3698
  br i1 %3702, label %3704, label %5511

3704:                                             ; preds = %3703
  %3705 = icmp sgt i32 %13, 1
  %3706 = icmp sgt i32 %13, 0
  %3707 = add i32 %13, -2
  %3708 = zext i32 %3707 to i64
  %3709 = zext i32 %13 to i64
  %3710 = add nuw i32 %5, 1
  %3711 = icmp eq i32 %13, 1
  br label %3857

3712:                                             ; preds = %3698
  br i1 %3702, label %3713, label %5511

3713:                                             ; preds = %3712
  %3714 = icmp sgt i32 %13, 1
  %3715 = icmp sgt i32 %13, 0
  %3716 = add i32 %13, -2
  %3717 = zext i32 %3716 to i64
  %3718 = zext i32 %13 to i64
  %3719 = add nuw i32 %5, 1
  %3720 = icmp eq i32 %13, 1
  br label %3721

3721:                                             ; preds = %3713, %3855
  %3722 = phi double [ 0.000000e+00, %3713 ], [ %3805, %3855 ]
  %3723 = phi i32 [ 0, %3713 ], [ %3807, %3855 ]
  %3724 = phi double [ 0.000000e+00, %3713 ], [ %3806, %3855 ]
  %3725 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3714, label %3726, label %3795

3726:                                             ; preds = %3721, %3785
  %3727 = phi i32 [ %3794, %3785 ], [ 0, %3721 ]
  %3728 = phi i64 [ %3736, %3785 ], [ %3718, %3721 ]
  %3729 = phi i64 [ %3793, %3785 ], [ %3717, %3721 ]
  %3730 = phi i32 [ %3791, %3785 ], [ %3725, %3721 ]
  %3731 = sub i32 %3716, %3727
  %3732 = tail call i32 @llvm.smin.i32(i32 %3731, i32 0)
  %3733 = sub i32 %3731, %3732
  %3734 = zext i32 %3733 to i64
  %3735 = add nuw nsw i64 %3734, 1
  %3736 = add nsw i64 %3728, -1
  %3737 = icmp ult i32 %3733, 31
  br i1 %3737, label %3773, label %3738

3738:                                             ; preds = %3726
  %3739 = and i64 %3735, 8589934560
  %3740 = sub i64 %3729, %3739
  br label %3741

3741:                                             ; preds = %3741, %3738
  %3742 = phi i64 [ 0, %3738 ], [ %3765, %3741 ]
  %3743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3738 ], [ %3761, %3741 ]
  %3744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3738 ], [ %3762, %3741 ]
  %3745 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3738 ], [ %3763, %3741 ]
  %3746 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3738 ], [ %3764, %3741 ]
  %3747 = sub i64 %3729, %3742
  %3748 = getelementptr inbounds i32, ptr %9, i64 %3747
  %3749 = getelementptr inbounds i32, ptr %3748, i64 -7
  %3750 = load <8 x i32>, ptr %3749, align 4, !tbaa !5
  %3751 = shufflevector <8 x i32> %3750, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3752 = getelementptr inbounds i32, ptr %3748, i64 -15
  %3753 = load <8 x i32>, ptr %3752, align 4, !tbaa !5
  %3754 = shufflevector <8 x i32> %3753, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3755 = getelementptr inbounds i32, ptr %3748, i64 -23
  %3756 = load <8 x i32>, ptr %3755, align 4, !tbaa !5
  %3757 = shufflevector <8 x i32> %3756, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3758 = getelementptr inbounds i32, ptr %3748, i64 -31
  %3759 = load <8 x i32>, ptr %3758, align 4, !tbaa !5
  %3760 = shufflevector <8 x i32> %3759, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3761 = mul <8 x i32> %3751, %3743
  %3762 = mul <8 x i32> %3754, %3744
  %3763 = mul <8 x i32> %3757, %3745
  %3764 = mul <8 x i32> %3760, %3746
  %3765 = add nuw i64 %3742, 32
  %3766 = icmp eq i64 %3765, %3739
  br i1 %3766, label %3767, label %3741, !llvm.loop !884

3767:                                             ; preds = %3741
  %3768 = mul <8 x i32> %3762, %3761
  %3769 = mul <8 x i32> %3763, %3768
  %3770 = mul <8 x i32> %3764, %3769
  %3771 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3770)
  %3772 = icmp eq i64 %3735, %3739
  br i1 %3772, label %3785, label %3773

3773:                                             ; preds = %3726, %3767
  %3774 = phi i64 [ %3729, %3726 ], [ %3740, %3767 ]
  %3775 = phi i32 [ 1, %3726 ], [ %3771, %3767 ]
  br label %3776

3776:                                             ; preds = %3773, %3776
  %3777 = phi i64 [ %3782, %3776 ], [ %3774, %3773 ]
  %3778 = phi i32 [ %3781, %3776 ], [ %3775, %3773 ]
  %3779 = getelementptr inbounds i32, ptr %9, i64 %3777
  %3780 = load i32, ptr %3779, align 4, !tbaa !5
  %3781 = mul nsw i32 %3780, %3778
  %3782 = add nsw i64 %3777, -1
  %3783 = trunc i64 %3777 to i32
  %3784 = icmp sgt i32 %3783, 0
  br i1 %3784, label %3776, label %3785, !llvm.loop !885

3785:                                             ; preds = %3776, %3767
  %3786 = phi i32 [ %3771, %3767 ], [ %3781, %3776 ]
  %3787 = and i64 %3736, 4294967295
  %3788 = getelementptr inbounds i32, ptr %6, i64 %3787
  %3789 = load i32, ptr %3788, align 4, !tbaa !5
  %3790 = mul nsw i32 %3789, %3786
  %3791 = add nsw i32 %3790, %3730
  %3792 = icmp sgt i64 %3728, 2
  %3793 = add nsw i64 %3729, -1
  %3794 = add i32 %3727, 1
  br i1 %3792, label %3726, label %3795, !llvm.loop !886

3795:                                             ; preds = %3785, %3721
  %3796 = phi i32 [ %3725, %3721 ], [ %3791, %3785 ]
  %3797 = sext i32 %3796 to i64
  %3798 = getelementptr inbounds double, ptr %2, i64 %3797
  %3799 = load double, ptr %3798, align 8, !tbaa !18
  %3800 = getelementptr inbounds i64, ptr %3689, i64 %3797
  %3801 = load i64, ptr %3800, align 8, !tbaa !120
  %3802 = sitofp i64 %3801 to double
  %3803 = fmul fast double %3799, %3802
  %3804 = fmul fast double %3803, %3803
  %3805 = fadd fast double %3804, %3722
  store double %3805, ptr %3691, align 8, !tbaa !18
  %3806 = fadd fast double %3799, %3724
  %3807 = add nuw nsw i32 %3723, 1
  br i1 %3715, label %3808, label %3855

3808:                                             ; preds = %3795
  %3809 = load i32, ptr %4, align 4, !tbaa !5
  %3810 = load i32, ptr %12, align 4, !tbaa !5
  %3811 = add nsw i32 %3810, -1
  %3812 = icmp slt i32 %3809, %3811
  br i1 %3812, label %3832, label %3813

3813:                                             ; preds = %3808
  %3814 = icmp eq i32 %3809, %3811
  br i1 %3814, label %3815, label %3848

3815:                                             ; preds = %3813
  store i32 0, ptr %4, align 4, !tbaa !5
  %3816 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3816, ptr %6, align 4, !tbaa !5
  br i1 %3720, label %3855, label %3817

3817:                                             ; preds = %3815, %3842
  %3818 = phi i64 [ %3846, %3842 ], [ 1, %3815 ]
  %3819 = getelementptr inbounds i32, ptr %4, i64 %3818
  %3820 = load i32, ptr %3819, align 4, !tbaa !5
  %3821 = getelementptr inbounds i32, ptr %12, i64 %3818
  %3822 = load i32, ptr %3821, align 4, !tbaa !5
  %3823 = add nsw i32 %3822, -1
  %3824 = icmp slt i32 %3820, %3823
  br i1 %3824, label %3825, label %3840

3825:                                             ; preds = %3817
  br i1 %3812, label %3832, label %3826

3826:                                             ; preds = %3825
  %3827 = getelementptr inbounds i32, ptr %7, i64 %3818
  %3828 = load i32, ptr %3827, align 4, !tbaa !5
  %3829 = getelementptr inbounds i32, ptr %6, i64 %3818
  %3830 = load i32, ptr %3829, align 4, !tbaa !5
  %3831 = add nsw i32 %3830, %3828
  store i32 %3831, ptr %3829, align 4, !tbaa !5
  br label %3850

3832:                                             ; preds = %3808, %3825
  %3833 = phi i32 [ %3820, %3825 ], [ %3809, %3808 ]
  %3834 = phi ptr [ %3819, %3825 ], [ %4, %3808 ]
  %3835 = phi i64 [ %3818, %3825 ], [ 0, %3808 ]
  %3836 = add nsw i32 %3833, 1
  store i32 %3836, ptr %3834, align 4, !tbaa !5
  %3837 = getelementptr inbounds i32, ptr %7, i64 %3835
  %3838 = load i32, ptr %3837, align 4, !tbaa !5
  %3839 = getelementptr inbounds i32, ptr %6, i64 %3835
  br label %3850

3840:                                             ; preds = %3817
  %3841 = icmp eq i32 %3820, %3823
  br i1 %3841, label %3842, label %3848

3842:                                             ; preds = %3840
  store i32 0, ptr %3819, align 4, !tbaa !5
  %3843 = getelementptr inbounds i32, ptr %8, i64 %3818
  %3844 = load i32, ptr %3843, align 4, !tbaa !5
  %3845 = getelementptr inbounds i32, ptr %6, i64 %3818
  store i32 %3844, ptr %3845, align 4, !tbaa !5
  %3846 = add nuw nsw i64 %3818, 1
  %3847 = icmp eq i64 %3846, %3718
  br i1 %3847, label %3855, label %3817, !llvm.loop !887

3848:                                             ; preds = %3813, %3840
  %3849 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

3850:                                             ; preds = %3826, %3832
  %3851 = phi ptr [ %3839, %3832 ], [ %3819, %3826 ]
  %3852 = phi i32 [ %3838, %3832 ], [ 1, %3826 ]
  %3853 = load i32, ptr %3851, align 4, !tbaa !5
  %3854 = add nsw i32 %3853, %3852
  store i32 %3854, ptr %3851, align 4, !tbaa !5
  br label %3855

3855:                                             ; preds = %3842, %3850, %3815, %3795
  %3856 = icmp eq i32 %3807, %5
  br i1 %3856, label %5511, label %3721, !llvm.loop !888

3857:                                             ; preds = %3704, %3993
  %3858 = phi double [ 0.000000e+00, %3704 ], [ %3941, %3993 ]
  %3859 = phi i32 [ 0, %3704 ], [ %3942, %3993 ]
  %3860 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3705, label %3861, label %3930

3861:                                             ; preds = %3857, %3920
  %3862 = phi i32 [ %3929, %3920 ], [ 0, %3857 ]
  %3863 = phi i64 [ %3871, %3920 ], [ %3709, %3857 ]
  %3864 = phi i64 [ %3928, %3920 ], [ %3708, %3857 ]
  %3865 = phi i32 [ %3926, %3920 ], [ %3860, %3857 ]
  %3866 = sub i32 %3707, %3862
  %3867 = tail call i32 @llvm.smin.i32(i32 %3866, i32 0)
  %3868 = sub i32 %3866, %3867
  %3869 = zext i32 %3868 to i64
  %3870 = add nuw nsw i64 %3869, 1
  %3871 = add nsw i64 %3863, -1
  %3872 = icmp ult i32 %3868, 31
  br i1 %3872, label %3908, label %3873

3873:                                             ; preds = %3861
  %3874 = and i64 %3870, 8589934560
  %3875 = sub i64 %3864, %3874
  br label %3876

3876:                                             ; preds = %3876, %3873
  %3877 = phi i64 [ 0, %3873 ], [ %3900, %3876 ]
  %3878 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3873 ], [ %3896, %3876 ]
  %3879 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3873 ], [ %3897, %3876 ]
  %3880 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3873 ], [ %3898, %3876 ]
  %3881 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3873 ], [ %3899, %3876 ]
  %3882 = sub i64 %3864, %3877
  %3883 = getelementptr inbounds i32, ptr %11, i64 %3882
  %3884 = getelementptr inbounds i32, ptr %3883, i64 -7
  %3885 = load <8 x i32>, ptr %3884, align 4, !tbaa !5
  %3886 = shufflevector <8 x i32> %3885, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3887 = getelementptr inbounds i32, ptr %3883, i64 -15
  %3888 = load <8 x i32>, ptr %3887, align 4, !tbaa !5
  %3889 = shufflevector <8 x i32> %3888, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3890 = getelementptr inbounds i32, ptr %3883, i64 -23
  %3891 = load <8 x i32>, ptr %3890, align 4, !tbaa !5
  %3892 = shufflevector <8 x i32> %3891, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3893 = getelementptr inbounds i32, ptr %3883, i64 -31
  %3894 = load <8 x i32>, ptr %3893, align 4, !tbaa !5
  %3895 = shufflevector <8 x i32> %3894, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3896 = mul <8 x i32> %3886, %3878
  %3897 = mul <8 x i32> %3889, %3879
  %3898 = mul <8 x i32> %3892, %3880
  %3899 = mul <8 x i32> %3895, %3881
  %3900 = add nuw i64 %3877, 32
  %3901 = icmp eq i64 %3900, %3874
  br i1 %3901, label %3902, label %3876, !llvm.loop !889

3902:                                             ; preds = %3876
  %3903 = mul <8 x i32> %3897, %3896
  %3904 = mul <8 x i32> %3898, %3903
  %3905 = mul <8 x i32> %3899, %3904
  %3906 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3905)
  %3907 = icmp eq i64 %3870, %3874
  br i1 %3907, label %3920, label %3908

3908:                                             ; preds = %3861, %3902
  %3909 = phi i64 [ %3864, %3861 ], [ %3875, %3902 ]
  %3910 = phi i32 [ 1, %3861 ], [ %3906, %3902 ]
  br label %3911

3911:                                             ; preds = %3908, %3911
  %3912 = phi i64 [ %3917, %3911 ], [ %3909, %3908 ]
  %3913 = phi i32 [ %3916, %3911 ], [ %3910, %3908 ]
  %3914 = getelementptr inbounds i32, ptr %11, i64 %3912
  %3915 = load i32, ptr %3914, align 4, !tbaa !5
  %3916 = mul nsw i32 %3915, %3913
  %3917 = add nsw i64 %3912, -1
  %3918 = trunc i64 %3912 to i32
  %3919 = icmp sgt i32 %3918, 0
  br i1 %3919, label %3911, label %3920, !llvm.loop !890

3920:                                             ; preds = %3911, %3902
  %3921 = phi i32 [ %3906, %3902 ], [ %3916, %3911 ]
  %3922 = and i64 %3871, 4294967295
  %3923 = getelementptr inbounds i32, ptr %6, i64 %3922
  %3924 = load i32, ptr %3923, align 4, !tbaa !5
  %3925 = mul nsw i32 %3924, %3921
  %3926 = add nsw i32 %3925, %3865
  %3927 = icmp sgt i64 %3863, 2
  %3928 = add nsw i64 %3864, -1
  %3929 = add i32 %3862, 1
  br i1 %3927, label %3861, label %3930, !llvm.loop !891

3930:                                             ; preds = %3920, %3857
  %3931 = phi i32 [ %3860, %3857 ], [ %3926, %3920 ]
  %3932 = icmp slt i32 %3931, %5
  br i1 %3932, label %3935, label %3933

3933:                                             ; preds = %3930
  %3934 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

3935:                                             ; preds = %3930
  %3936 = sext i32 %3931 to i64
  %3937 = getelementptr inbounds i64, ptr %3689, i64 %3936
  %3938 = load i64, ptr %3937, align 8, !tbaa !120
  %3939 = sitofp i64 %3938 to double
  %3940 = fmul fast double %3939, %3939
  %3941 = fadd fast double %3940, %3858
  store double %3941, ptr %3691, align 8, !tbaa !18
  %3942 = add nuw nsw i32 %3859, 1
  br i1 %3706, label %3943, label %3993

3943:                                             ; preds = %3935
  %3944 = load i32, ptr %4, align 4, !tbaa !5
  %3945 = load i32, ptr %12, align 4, !tbaa !5
  %3946 = add nsw i32 %3945, -1
  %3947 = icmp slt i32 %3944, %3946
  br i1 %3947, label %3970, label %3948

3948:                                             ; preds = %3943
  %3949 = icmp eq i32 %3944, %3946
  br i1 %3949, label %3950, label %3986

3950:                                             ; preds = %3948
  store i32 0, ptr %4, align 4, !tbaa !5
  %3951 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3951, ptr %6, align 4, !tbaa !5
  br i1 %3711, label %3993, label %3952

3952:                                             ; preds = %3950, %3980
  %3953 = phi i64 [ %3984, %3980 ], [ 1, %3950 ]
  %3954 = getelementptr inbounds i32, ptr %4, i64 %3953
  %3955 = load i32, ptr %3954, align 4, !tbaa !5
  %3956 = getelementptr inbounds i32, ptr %12, i64 %3953
  %3957 = load i32, ptr %3956, align 4, !tbaa !5
  %3958 = add nsw i32 %3957, -1
  %3959 = icmp slt i32 %3955, %3958
  br i1 %3959, label %3960, label %3978

3960:                                             ; preds = %3952
  br i1 %3947, label %3970, label %3961

3961:                                             ; preds = %3960
  %3962 = shl i64 %3953, 32
  %3963 = add i64 %3962, -4294967296
  %3964 = ashr exact i64 %3963, 32
  %3965 = getelementptr inbounds i32, ptr %7, i64 %3964
  %3966 = load i32, ptr %3965, align 4, !tbaa !5
  %3967 = getelementptr inbounds i32, ptr %6, i64 %3953
  %3968 = load i32, ptr %3967, align 4, !tbaa !5
  %3969 = add nsw i32 %3968, %3966
  store i32 %3969, ptr %3967, align 4, !tbaa !5
  br label %3988

3970:                                             ; preds = %3943, %3960
  %3971 = phi i32 [ %3955, %3960 ], [ %3944, %3943 ]
  %3972 = phi ptr [ %3954, %3960 ], [ %4, %3943 ]
  %3973 = phi i64 [ %3953, %3960 ], [ 0, %3943 ]
  %3974 = add nsw i32 %3971, 1
  store i32 %3974, ptr %3972, align 4, !tbaa !5
  %3975 = getelementptr inbounds i32, ptr %7, i64 %3973
  %3976 = load i32, ptr %3975, align 4, !tbaa !5
  %3977 = getelementptr inbounds i32, ptr %6, i64 %3973
  br label %3988

3978:                                             ; preds = %3952
  %3979 = icmp eq i32 %3955, %3958
  br i1 %3979, label %3980, label %3986

3980:                                             ; preds = %3978
  store i32 0, ptr %3954, align 4, !tbaa !5
  %3981 = getelementptr inbounds i32, ptr %8, i64 %3953
  %3982 = load i32, ptr %3981, align 4, !tbaa !5
  %3983 = getelementptr inbounds i32, ptr %6, i64 %3953
  store i32 %3982, ptr %3983, align 4, !tbaa !5
  %3984 = add nuw nsw i64 %3953, 1
  %3985 = icmp eq i64 %3984, %3709
  br i1 %3985, label %3993, label %3952, !llvm.loop !892

3986:                                             ; preds = %3948, %3978
  %3987 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

3988:                                             ; preds = %3961, %3970
  %3989 = phi ptr [ %3977, %3970 ], [ %3954, %3961 ]
  %3990 = phi i32 [ %3976, %3970 ], [ 1, %3961 ]
  %3991 = load i32, ptr %3989, align 4, !tbaa !5
  %3992 = add nsw i32 %3991, %3990
  store i32 %3992, ptr %3989, align 4, !tbaa !5
  br label %3993

3993:                                             ; preds = %3980, %3988, %3950, %3935
  %3994 = icmp eq i32 %3942, %5
  br i1 %3994, label %5511, label %3857, !llvm.loop !893

3995:                                             ; preds = %3697
  %3996 = getelementptr inbounds i32, ptr %3, i64 %19
  %3997 = load i32, ptr %3996, align 4, !tbaa !5
  %3998 = icmp eq i32 %3997, 0
  %3999 = icmp sgt i32 %5, 0
  br i1 %3998, label %4009, label %4000

4000:                                             ; preds = %3995
  br i1 %3999, label %4001, label %5511

4001:                                             ; preds = %4000
  %4002 = icmp sgt i32 %13, 1
  %4003 = icmp sgt i32 %13, 0
  %4004 = add i32 %13, -2
  %4005 = zext i32 %4004 to i64
  %4006 = zext i32 %13 to i64
  %4007 = add nuw i32 %5, 1
  %4008 = icmp eq i32 %13, 1
  br label %4151

4009:                                             ; preds = %3995
  br i1 %3999, label %4010, label %5511

4010:                                             ; preds = %4009
  %4011 = icmp sgt i32 %13, 1
  %4012 = icmp sgt i32 %13, 0
  %4013 = add i32 %13, -2
  %4014 = zext i32 %4013 to i64
  %4015 = zext i32 %13 to i64
  %4016 = add nuw i32 %5, 1
  %4017 = icmp eq i32 %13, 1
  br label %4018

4018:                                             ; preds = %4010, %4149
  %4019 = phi double [ 0.000000e+00, %4010 ], [ %4099, %4149 ]
  %4020 = phi i32 [ 0, %4010 ], [ %4101, %4149 ]
  %4021 = phi double [ 0.000000e+00, %4010 ], [ %4100, %4149 ]
  %4022 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4011, label %4023, label %4092

4023:                                             ; preds = %4018, %4082
  %4024 = phi i32 [ %4091, %4082 ], [ 0, %4018 ]
  %4025 = phi i64 [ %4033, %4082 ], [ %4015, %4018 ]
  %4026 = phi i64 [ %4090, %4082 ], [ %4014, %4018 ]
  %4027 = phi i32 [ %4088, %4082 ], [ %4022, %4018 ]
  %4028 = sub i32 %4013, %4024
  %4029 = tail call i32 @llvm.smin.i32(i32 %4028, i32 0)
  %4030 = sub i32 %4028, %4029
  %4031 = zext i32 %4030 to i64
  %4032 = add nuw nsw i64 %4031, 1
  %4033 = add nsw i64 %4025, -1
  %4034 = icmp ult i32 %4030, 31
  br i1 %4034, label %4070, label %4035

4035:                                             ; preds = %4023
  %4036 = and i64 %4032, 8589934560
  %4037 = sub i64 %4026, %4036
  br label %4038

4038:                                             ; preds = %4038, %4035
  %4039 = phi i64 [ 0, %4035 ], [ %4062, %4038 ]
  %4040 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4035 ], [ %4058, %4038 ]
  %4041 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4035 ], [ %4059, %4038 ]
  %4042 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4035 ], [ %4060, %4038 ]
  %4043 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4035 ], [ %4061, %4038 ]
  %4044 = sub i64 %4026, %4039
  %4045 = getelementptr inbounds i32, ptr %9, i64 %4044
  %4046 = getelementptr inbounds i32, ptr %4045, i64 -7
  %4047 = load <8 x i32>, ptr %4046, align 4, !tbaa !5
  %4048 = shufflevector <8 x i32> %4047, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4049 = getelementptr inbounds i32, ptr %4045, i64 -15
  %4050 = load <8 x i32>, ptr %4049, align 4, !tbaa !5
  %4051 = shufflevector <8 x i32> %4050, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4052 = getelementptr inbounds i32, ptr %4045, i64 -23
  %4053 = load <8 x i32>, ptr %4052, align 4, !tbaa !5
  %4054 = shufflevector <8 x i32> %4053, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4055 = getelementptr inbounds i32, ptr %4045, i64 -31
  %4056 = load <8 x i32>, ptr %4055, align 4, !tbaa !5
  %4057 = shufflevector <8 x i32> %4056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4058 = mul <8 x i32> %4048, %4040
  %4059 = mul <8 x i32> %4051, %4041
  %4060 = mul <8 x i32> %4054, %4042
  %4061 = mul <8 x i32> %4057, %4043
  %4062 = add nuw i64 %4039, 32
  %4063 = icmp eq i64 %4062, %4036
  br i1 %4063, label %4064, label %4038, !llvm.loop !894

4064:                                             ; preds = %4038
  %4065 = mul <8 x i32> %4059, %4058
  %4066 = mul <8 x i32> %4060, %4065
  %4067 = mul <8 x i32> %4061, %4066
  %4068 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4067)
  %4069 = icmp eq i64 %4032, %4036
  br i1 %4069, label %4082, label %4070

4070:                                             ; preds = %4023, %4064
  %4071 = phi i64 [ %4026, %4023 ], [ %4037, %4064 ]
  %4072 = phi i32 [ 1, %4023 ], [ %4068, %4064 ]
  br label %4073

4073:                                             ; preds = %4070, %4073
  %4074 = phi i64 [ %4079, %4073 ], [ %4071, %4070 ]
  %4075 = phi i32 [ %4078, %4073 ], [ %4072, %4070 ]
  %4076 = getelementptr inbounds i32, ptr %9, i64 %4074
  %4077 = load i32, ptr %4076, align 4, !tbaa !5
  %4078 = mul nsw i32 %4077, %4075
  %4079 = add nsw i64 %4074, -1
  %4080 = trunc i64 %4074 to i32
  %4081 = icmp sgt i32 %4080, 0
  br i1 %4081, label %4073, label %4082, !llvm.loop !895

4082:                                             ; preds = %4073, %4064
  %4083 = phi i32 [ %4068, %4064 ], [ %4078, %4073 ]
  %4084 = and i64 %4033, 4294967295
  %4085 = getelementptr inbounds i32, ptr %6, i64 %4084
  %4086 = load i32, ptr %4085, align 4, !tbaa !5
  %4087 = mul nsw i32 %4086, %4083
  %4088 = add nsw i32 %4087, %4027
  %4089 = icmp sgt i64 %4025, 2
  %4090 = add nsw i64 %4026, -1
  %4091 = add i32 %4024, 1
  br i1 %4089, label %4023, label %4092, !llvm.loop !896

4092:                                             ; preds = %4082, %4018
  %4093 = phi i32 [ %4022, %4018 ], [ %4088, %4082 ]
  %4094 = sext i32 %4093 to i64
  %4095 = getelementptr inbounds i64, ptr %3689, i64 %4094
  %4096 = load i64, ptr %4095, align 8, !tbaa !120
  %4097 = sitofp i64 %4096 to double
  %4098 = fmul fast double %4097, %4097
  %4099 = fadd fast double %4098, %4019
  %4100 = fadd fast double %4021, 1.000000e+00
  %4101 = add nuw nsw i32 %4020, 1
  br i1 %4012, label %4102, label %4149

4102:                                             ; preds = %4092
  %4103 = load i32, ptr %4, align 4, !tbaa !5
  %4104 = load i32, ptr %12, align 4, !tbaa !5
  %4105 = add nsw i32 %4104, -1
  %4106 = icmp slt i32 %4103, %4105
  br i1 %4106, label %4126, label %4107

4107:                                             ; preds = %4102
  %4108 = icmp eq i32 %4103, %4105
  br i1 %4108, label %4109, label %4142

4109:                                             ; preds = %4107
  store i32 0, ptr %4, align 4, !tbaa !5
  %4110 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4110, ptr %6, align 4, !tbaa !5
  br i1 %4017, label %4149, label %4111

4111:                                             ; preds = %4109, %4136
  %4112 = phi i64 [ %4140, %4136 ], [ 1, %4109 ]
  %4113 = getelementptr inbounds i32, ptr %4, i64 %4112
  %4114 = load i32, ptr %4113, align 4, !tbaa !5
  %4115 = getelementptr inbounds i32, ptr %12, i64 %4112
  %4116 = load i32, ptr %4115, align 4, !tbaa !5
  %4117 = add nsw i32 %4116, -1
  %4118 = icmp slt i32 %4114, %4117
  br i1 %4118, label %4119, label %4134

4119:                                             ; preds = %4111
  br i1 %4106, label %4126, label %4120

4120:                                             ; preds = %4119
  %4121 = getelementptr inbounds i32, ptr %7, i64 %4112
  %4122 = load i32, ptr %4121, align 4, !tbaa !5
  %4123 = getelementptr inbounds i32, ptr %6, i64 %4112
  %4124 = load i32, ptr %4123, align 4, !tbaa !5
  %4125 = add nsw i32 %4124, %4122
  store i32 %4125, ptr %4123, align 4, !tbaa !5
  br label %4144

4126:                                             ; preds = %4102, %4119
  %4127 = phi i32 [ %4114, %4119 ], [ %4103, %4102 ]
  %4128 = phi ptr [ %4113, %4119 ], [ %4, %4102 ]
  %4129 = phi i64 [ %4112, %4119 ], [ 0, %4102 ]
  %4130 = add nsw i32 %4127, 1
  store i32 %4130, ptr %4128, align 4, !tbaa !5
  %4131 = getelementptr inbounds i32, ptr %7, i64 %4129
  %4132 = load i32, ptr %4131, align 4, !tbaa !5
  %4133 = getelementptr inbounds i32, ptr %6, i64 %4129
  br label %4144

4134:                                             ; preds = %4111
  %4135 = icmp eq i32 %4114, %4117
  br i1 %4135, label %4136, label %4142

4136:                                             ; preds = %4134
  store i32 0, ptr %4113, align 4, !tbaa !5
  %4137 = getelementptr inbounds i32, ptr %8, i64 %4112
  %4138 = load i32, ptr %4137, align 4, !tbaa !5
  %4139 = getelementptr inbounds i32, ptr %6, i64 %4112
  store i32 %4138, ptr %4139, align 4, !tbaa !5
  %4140 = add nuw nsw i64 %4112, 1
  %4141 = icmp eq i64 %4140, %4015
  br i1 %4141, label %4149, label %4111, !llvm.loop !897

4142:                                             ; preds = %4107, %4134
  store double %4099, ptr %3691, align 8, !tbaa !18
  %4143 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

4144:                                             ; preds = %4120, %4126
  %4145 = phi ptr [ %4133, %4126 ], [ %4113, %4120 ]
  %4146 = phi i32 [ %4132, %4126 ], [ 1, %4120 ]
  %4147 = load i32, ptr %4145, align 4, !tbaa !5
  %4148 = add nsw i32 %4147, %4146
  store i32 %4148, ptr %4145, align 4, !tbaa !5
  br label %4149

4149:                                             ; preds = %4136, %4144, %4109, %4092
  %4150 = icmp eq i32 %4101, %5
  br i1 %4150, label %5507, label %4018, !llvm.loop !898

4151:                                             ; preds = %4001, %4287
  %4152 = phi double [ 0.000000e+00, %4001 ], [ %4235, %4287 ]
  %4153 = phi i32 [ 0, %4001 ], [ %4236, %4287 ]
  %4154 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4002, label %4155, label %4224

4155:                                             ; preds = %4151, %4214
  %4156 = phi i32 [ %4223, %4214 ], [ 0, %4151 ]
  %4157 = phi i64 [ %4165, %4214 ], [ %4006, %4151 ]
  %4158 = phi i64 [ %4222, %4214 ], [ %4005, %4151 ]
  %4159 = phi i32 [ %4220, %4214 ], [ %4154, %4151 ]
  %4160 = sub i32 %4004, %4156
  %4161 = tail call i32 @llvm.smin.i32(i32 %4160, i32 0)
  %4162 = sub i32 %4160, %4161
  %4163 = zext i32 %4162 to i64
  %4164 = add nuw nsw i64 %4163, 1
  %4165 = add nsw i64 %4157, -1
  %4166 = icmp ult i32 %4162, 31
  br i1 %4166, label %4202, label %4167

4167:                                             ; preds = %4155
  %4168 = and i64 %4164, 8589934560
  %4169 = sub i64 %4158, %4168
  br label %4170

4170:                                             ; preds = %4170, %4167
  %4171 = phi i64 [ 0, %4167 ], [ %4194, %4170 ]
  %4172 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4190, %4170 ]
  %4173 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4191, %4170 ]
  %4174 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4192, %4170 ]
  %4175 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4193, %4170 ]
  %4176 = sub i64 %4158, %4171
  %4177 = getelementptr inbounds i32, ptr %11, i64 %4176
  %4178 = getelementptr inbounds i32, ptr %4177, i64 -7
  %4179 = load <8 x i32>, ptr %4178, align 4, !tbaa !5
  %4180 = shufflevector <8 x i32> %4179, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4181 = getelementptr inbounds i32, ptr %4177, i64 -15
  %4182 = load <8 x i32>, ptr %4181, align 4, !tbaa !5
  %4183 = shufflevector <8 x i32> %4182, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4184 = getelementptr inbounds i32, ptr %4177, i64 -23
  %4185 = load <8 x i32>, ptr %4184, align 4, !tbaa !5
  %4186 = shufflevector <8 x i32> %4185, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4187 = getelementptr inbounds i32, ptr %4177, i64 -31
  %4188 = load <8 x i32>, ptr %4187, align 4, !tbaa !5
  %4189 = shufflevector <8 x i32> %4188, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4190 = mul <8 x i32> %4180, %4172
  %4191 = mul <8 x i32> %4183, %4173
  %4192 = mul <8 x i32> %4186, %4174
  %4193 = mul <8 x i32> %4189, %4175
  %4194 = add nuw i64 %4171, 32
  %4195 = icmp eq i64 %4194, %4168
  br i1 %4195, label %4196, label %4170, !llvm.loop !899

4196:                                             ; preds = %4170
  %4197 = mul <8 x i32> %4191, %4190
  %4198 = mul <8 x i32> %4192, %4197
  %4199 = mul <8 x i32> %4193, %4198
  %4200 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4199)
  %4201 = icmp eq i64 %4164, %4168
  br i1 %4201, label %4214, label %4202

4202:                                             ; preds = %4155, %4196
  %4203 = phi i64 [ %4158, %4155 ], [ %4169, %4196 ]
  %4204 = phi i32 [ 1, %4155 ], [ %4200, %4196 ]
  br label %4205

4205:                                             ; preds = %4202, %4205
  %4206 = phi i64 [ %4211, %4205 ], [ %4203, %4202 ]
  %4207 = phi i32 [ %4210, %4205 ], [ %4204, %4202 ]
  %4208 = getelementptr inbounds i32, ptr %11, i64 %4206
  %4209 = load i32, ptr %4208, align 4, !tbaa !5
  %4210 = mul nsw i32 %4209, %4207
  %4211 = add nsw i64 %4206, -1
  %4212 = trunc i64 %4206 to i32
  %4213 = icmp sgt i32 %4212, 0
  br i1 %4213, label %4205, label %4214, !llvm.loop !900

4214:                                             ; preds = %4205, %4196
  %4215 = phi i32 [ %4200, %4196 ], [ %4210, %4205 ]
  %4216 = and i64 %4165, 4294967295
  %4217 = getelementptr inbounds i32, ptr %6, i64 %4216
  %4218 = load i32, ptr %4217, align 4, !tbaa !5
  %4219 = mul nsw i32 %4218, %4215
  %4220 = add nsw i32 %4219, %4159
  %4221 = icmp sgt i64 %4157, 2
  %4222 = add nsw i64 %4158, -1
  %4223 = add i32 %4156, 1
  br i1 %4221, label %4155, label %4224, !llvm.loop !901

4224:                                             ; preds = %4214, %4151
  %4225 = phi i32 [ %4154, %4151 ], [ %4220, %4214 ]
  %4226 = icmp slt i32 %4225, %5
  br i1 %4226, label %4229, label %4227

4227:                                             ; preds = %4224
  %4228 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

4229:                                             ; preds = %4224
  %4230 = sext i32 %4225 to i64
  %4231 = getelementptr inbounds i64, ptr %3689, i64 %4230
  %4232 = load i64, ptr %4231, align 8, !tbaa !120
  %4233 = sitofp i64 %4232 to double
  %4234 = fmul fast double %4233, %4233
  %4235 = fadd fast double %4234, %4152
  store double %4235, ptr %3691, align 8, !tbaa !18
  %4236 = add nuw nsw i32 %4153, 1
  br i1 %4003, label %4237, label %4287

4237:                                             ; preds = %4229
  %4238 = load i32, ptr %4, align 4, !tbaa !5
  %4239 = load i32, ptr %12, align 4, !tbaa !5
  %4240 = add nsw i32 %4239, -1
  %4241 = icmp slt i32 %4238, %4240
  br i1 %4241, label %4264, label %4242

4242:                                             ; preds = %4237
  %4243 = icmp eq i32 %4238, %4240
  br i1 %4243, label %4244, label %4280

4244:                                             ; preds = %4242
  store i32 0, ptr %4, align 4, !tbaa !5
  %4245 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4245, ptr %6, align 4, !tbaa !5
  br i1 %4008, label %4287, label %4246

4246:                                             ; preds = %4244, %4274
  %4247 = phi i64 [ %4278, %4274 ], [ 1, %4244 ]
  %4248 = getelementptr inbounds i32, ptr %4, i64 %4247
  %4249 = load i32, ptr %4248, align 4, !tbaa !5
  %4250 = getelementptr inbounds i32, ptr %12, i64 %4247
  %4251 = load i32, ptr %4250, align 4, !tbaa !5
  %4252 = add nsw i32 %4251, -1
  %4253 = icmp slt i32 %4249, %4252
  br i1 %4253, label %4254, label %4272

4254:                                             ; preds = %4246
  br i1 %4241, label %4264, label %4255

4255:                                             ; preds = %4254
  %4256 = shl i64 %4247, 32
  %4257 = add i64 %4256, -4294967296
  %4258 = ashr exact i64 %4257, 32
  %4259 = getelementptr inbounds i32, ptr %7, i64 %4258
  %4260 = load i32, ptr %4259, align 4, !tbaa !5
  %4261 = getelementptr inbounds i32, ptr %6, i64 %4247
  %4262 = load i32, ptr %4261, align 4, !tbaa !5
  %4263 = add nsw i32 %4262, %4260
  store i32 %4263, ptr %4261, align 4, !tbaa !5
  br label %4282

4264:                                             ; preds = %4237, %4254
  %4265 = phi i32 [ %4249, %4254 ], [ %4238, %4237 ]
  %4266 = phi ptr [ %4248, %4254 ], [ %4, %4237 ]
  %4267 = phi i64 [ %4247, %4254 ], [ 0, %4237 ]
  %4268 = add nsw i32 %4265, 1
  store i32 %4268, ptr %4266, align 4, !tbaa !5
  %4269 = getelementptr inbounds i32, ptr %7, i64 %4267
  %4270 = load i32, ptr %4269, align 4, !tbaa !5
  %4271 = getelementptr inbounds i32, ptr %6, i64 %4267
  br label %4282

4272:                                             ; preds = %4246
  %4273 = icmp eq i32 %4249, %4252
  br i1 %4273, label %4274, label %4280

4274:                                             ; preds = %4272
  store i32 0, ptr %4248, align 4, !tbaa !5
  %4275 = getelementptr inbounds i32, ptr %8, i64 %4247
  %4276 = load i32, ptr %4275, align 4, !tbaa !5
  %4277 = getelementptr inbounds i32, ptr %6, i64 %4247
  store i32 %4276, ptr %4277, align 4, !tbaa !5
  %4278 = add nuw nsw i64 %4247, 1
  %4279 = icmp eq i64 %4278, %4006
  br i1 %4279, label %4287, label %4246, !llvm.loop !902

4280:                                             ; preds = %4242, %4272
  %4281 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

4282:                                             ; preds = %4255, %4264
  %4283 = phi ptr [ %4271, %4264 ], [ %4248, %4255 ]
  %4284 = phi i32 [ %4270, %4264 ], [ 1, %4255 ]
  %4285 = load i32, ptr %4283, align 4, !tbaa !5
  %4286 = add nsw i32 %4285, %4284
  store i32 %4286, ptr %4283, align 4, !tbaa !5
  br label %4287

4287:                                             ; preds = %4274, %4282, %4244, %4229
  %4288 = icmp eq i32 %4236, %5
  br i1 %4288, label %5511, label %4151, !llvm.loop !903

4289:                                             ; preds = %3697
  %4290 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1469, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5511

4291:                                             ; preds = %18
  %4292 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4293 = load ptr, ptr %4292, align 8, !tbaa !9
  %4294 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4295 = load ptr, ptr %4294, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4295, align 4, !tbaa !162
  %4296 = icmp eq i32 %13, 0
  br i1 %4296, label %4297, label %4301

4297:                                             ; preds = %4291
  %4298 = load i64, ptr %4293, align 8, !tbaa !120
  %4299 = sitofp i64 %4298 to float
  %4300 = fmul fast float %4299, %4299
  store float %4300, ptr %4295, align 4, !tbaa !162
  br label %5511

4301:                                             ; preds = %4291
  switch i32 %1, label %4899 [
    i32 1, label %4302
    i32 0, label %4605
  ]

4302:                                             ; preds = %4301
  %4303 = getelementptr inbounds i32, ptr %3, i64 %19
  %4304 = load i32, ptr %4303, align 4, !tbaa !5
  %4305 = icmp eq i32 %4304, 0
  %4306 = icmp sgt i32 %5, 0
  br i1 %4305, label %4316, label %4307

4307:                                             ; preds = %4302
  br i1 %4306, label %4308, label %5511

4308:                                             ; preds = %4307
  %4309 = icmp sgt i32 %13, 1
  %4310 = icmp sgt i32 %13, 0
  %4311 = add i32 %13, -2
  %4312 = zext i32 %4311 to i64
  %4313 = zext i32 %13 to i64
  %4314 = add nuw i32 %5, 1
  %4315 = icmp eq i32 %13, 1
  br label %4464

4316:                                             ; preds = %4302
  br i1 %4306, label %4317, label %5511

4317:                                             ; preds = %4316
  %4318 = icmp sgt i32 %13, 1
  %4319 = icmp sgt i32 %13, 0
  %4320 = add i32 %13, -2
  %4321 = zext i32 %4320 to i64
  %4322 = zext i32 %13 to i64
  %4323 = add nuw i32 %5, 1
  %4324 = icmp eq i32 %13, 1
  br label %4325

4325:                                             ; preds = %4317, %4462
  %4326 = phi float [ 0.000000e+00, %4317 ], [ %4412, %4462 ]
  %4327 = phi i32 [ 0, %4317 ], [ %4414, %4462 ]
  %4328 = phi double [ 0.000000e+00, %4317 ], [ %4413, %4462 ]
  %4329 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4318, label %4330, label %4399

4330:                                             ; preds = %4325, %4389
  %4331 = phi i32 [ %4398, %4389 ], [ 0, %4325 ]
  %4332 = phi i64 [ %4340, %4389 ], [ %4322, %4325 ]
  %4333 = phi i64 [ %4397, %4389 ], [ %4321, %4325 ]
  %4334 = phi i32 [ %4395, %4389 ], [ %4329, %4325 ]
  %4335 = sub i32 %4320, %4331
  %4336 = tail call i32 @llvm.smin.i32(i32 %4335, i32 0)
  %4337 = sub i32 %4335, %4336
  %4338 = zext i32 %4337 to i64
  %4339 = add nuw nsw i64 %4338, 1
  %4340 = add nsw i64 %4332, -1
  %4341 = icmp ult i32 %4337, 31
  br i1 %4341, label %4377, label %4342

4342:                                             ; preds = %4330
  %4343 = and i64 %4339, 8589934560
  %4344 = sub i64 %4333, %4343
  br label %4345

4345:                                             ; preds = %4345, %4342
  %4346 = phi i64 [ 0, %4342 ], [ %4369, %4345 ]
  %4347 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4342 ], [ %4365, %4345 ]
  %4348 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4342 ], [ %4366, %4345 ]
  %4349 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4342 ], [ %4367, %4345 ]
  %4350 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4342 ], [ %4368, %4345 ]
  %4351 = sub i64 %4333, %4346
  %4352 = getelementptr inbounds i32, ptr %9, i64 %4351
  %4353 = getelementptr inbounds i32, ptr %4352, i64 -7
  %4354 = load <8 x i32>, ptr %4353, align 4, !tbaa !5
  %4355 = shufflevector <8 x i32> %4354, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4356 = getelementptr inbounds i32, ptr %4352, i64 -15
  %4357 = load <8 x i32>, ptr %4356, align 4, !tbaa !5
  %4358 = shufflevector <8 x i32> %4357, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4359 = getelementptr inbounds i32, ptr %4352, i64 -23
  %4360 = load <8 x i32>, ptr %4359, align 4, !tbaa !5
  %4361 = shufflevector <8 x i32> %4360, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4362 = getelementptr inbounds i32, ptr %4352, i64 -31
  %4363 = load <8 x i32>, ptr %4362, align 4, !tbaa !5
  %4364 = shufflevector <8 x i32> %4363, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4365 = mul <8 x i32> %4355, %4347
  %4366 = mul <8 x i32> %4358, %4348
  %4367 = mul <8 x i32> %4361, %4349
  %4368 = mul <8 x i32> %4364, %4350
  %4369 = add nuw i64 %4346, 32
  %4370 = icmp eq i64 %4369, %4343
  br i1 %4370, label %4371, label %4345, !llvm.loop !904

4371:                                             ; preds = %4345
  %4372 = mul <8 x i32> %4366, %4365
  %4373 = mul <8 x i32> %4367, %4372
  %4374 = mul <8 x i32> %4368, %4373
  %4375 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4374)
  %4376 = icmp eq i64 %4339, %4343
  br i1 %4376, label %4389, label %4377

4377:                                             ; preds = %4330, %4371
  %4378 = phi i64 [ %4333, %4330 ], [ %4344, %4371 ]
  %4379 = phi i32 [ 1, %4330 ], [ %4375, %4371 ]
  br label %4380

4380:                                             ; preds = %4377, %4380
  %4381 = phi i64 [ %4386, %4380 ], [ %4378, %4377 ]
  %4382 = phi i32 [ %4385, %4380 ], [ %4379, %4377 ]
  %4383 = getelementptr inbounds i32, ptr %9, i64 %4381
  %4384 = load i32, ptr %4383, align 4, !tbaa !5
  %4385 = mul nsw i32 %4384, %4382
  %4386 = add nsw i64 %4381, -1
  %4387 = trunc i64 %4381 to i32
  %4388 = icmp sgt i32 %4387, 0
  br i1 %4388, label %4380, label %4389, !llvm.loop !905

4389:                                             ; preds = %4380, %4371
  %4390 = phi i32 [ %4375, %4371 ], [ %4385, %4380 ]
  %4391 = and i64 %4340, 4294967295
  %4392 = getelementptr inbounds i32, ptr %6, i64 %4391
  %4393 = load i32, ptr %4392, align 4, !tbaa !5
  %4394 = mul nsw i32 %4393, %4390
  %4395 = add nsw i32 %4394, %4334
  %4396 = icmp sgt i64 %4332, 2
  %4397 = add nsw i64 %4333, -1
  %4398 = add i32 %4331, 1
  br i1 %4396, label %4330, label %4399, !llvm.loop !906

4399:                                             ; preds = %4389, %4325
  %4400 = phi i32 [ %4329, %4325 ], [ %4395, %4389 ]
  %4401 = sext i32 %4400 to i64
  %4402 = getelementptr inbounds double, ptr %2, i64 %4401
  %4403 = load double, ptr %4402, align 8, !tbaa !18
  %4404 = getelementptr inbounds i64, ptr %4293, i64 %4401
  %4405 = load i64, ptr %4404, align 8, !tbaa !120
  %4406 = sitofp i64 %4405 to float
  %4407 = fpext float %4326 to double
  %4408 = fpext float %4406 to double
  %4409 = fmul fast double %4403, %4408
  %4410 = fmul fast double %4409, %4409
  %4411 = fadd fast double %4410, %4407
  %4412 = fptrunc double %4411 to float
  %4413 = fadd fast double %4403, %4328
  %4414 = add nuw nsw i32 %4327, 1
  br i1 %4319, label %4415, label %4462

4415:                                             ; preds = %4399
  %4416 = load i32, ptr %4, align 4, !tbaa !5
  %4417 = load i32, ptr %12, align 4, !tbaa !5
  %4418 = add nsw i32 %4417, -1
  %4419 = icmp slt i32 %4416, %4418
  br i1 %4419, label %4439, label %4420

4420:                                             ; preds = %4415
  %4421 = icmp eq i32 %4416, %4418
  br i1 %4421, label %4422, label %4455

4422:                                             ; preds = %4420
  store i32 0, ptr %4, align 4, !tbaa !5
  %4423 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4423, ptr %6, align 4, !tbaa !5
  br i1 %4324, label %4462, label %4424

4424:                                             ; preds = %4422, %4449
  %4425 = phi i64 [ %4453, %4449 ], [ 1, %4422 ]
  %4426 = getelementptr inbounds i32, ptr %4, i64 %4425
  %4427 = load i32, ptr %4426, align 4, !tbaa !5
  %4428 = getelementptr inbounds i32, ptr %12, i64 %4425
  %4429 = load i32, ptr %4428, align 4, !tbaa !5
  %4430 = add nsw i32 %4429, -1
  %4431 = icmp slt i32 %4427, %4430
  br i1 %4431, label %4432, label %4447

4432:                                             ; preds = %4424
  br i1 %4419, label %4439, label %4433

4433:                                             ; preds = %4432
  %4434 = getelementptr inbounds i32, ptr %7, i64 %4425
  %4435 = load i32, ptr %4434, align 4, !tbaa !5
  %4436 = getelementptr inbounds i32, ptr %6, i64 %4425
  %4437 = load i32, ptr %4436, align 4, !tbaa !5
  %4438 = add nsw i32 %4437, %4435
  store i32 %4438, ptr %4436, align 4, !tbaa !5
  br label %4457

4439:                                             ; preds = %4415, %4432
  %4440 = phi i32 [ %4427, %4432 ], [ %4416, %4415 ]
  %4441 = phi ptr [ %4426, %4432 ], [ %4, %4415 ]
  %4442 = phi i64 [ %4425, %4432 ], [ 0, %4415 ]
  %4443 = add nsw i32 %4440, 1
  store i32 %4443, ptr %4441, align 4, !tbaa !5
  %4444 = getelementptr inbounds i32, ptr %7, i64 %4442
  %4445 = load i32, ptr %4444, align 4, !tbaa !5
  %4446 = getelementptr inbounds i32, ptr %6, i64 %4442
  br label %4457

4447:                                             ; preds = %4424
  %4448 = icmp eq i32 %4427, %4430
  br i1 %4448, label %4449, label %4455

4449:                                             ; preds = %4447
  store i32 0, ptr %4426, align 4, !tbaa !5
  %4450 = getelementptr inbounds i32, ptr %8, i64 %4425
  %4451 = load i32, ptr %4450, align 4, !tbaa !5
  %4452 = getelementptr inbounds i32, ptr %6, i64 %4425
  store i32 %4451, ptr %4452, align 4, !tbaa !5
  %4453 = add nuw nsw i64 %4425, 1
  %4454 = icmp eq i64 %4453, %4322
  br i1 %4454, label %4462, label %4424, !llvm.loop !907

4455:                                             ; preds = %4420, %4447
  store float %4412, ptr %4295, align 4, !tbaa !162
  %4456 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

4457:                                             ; preds = %4433, %4439
  %4458 = phi ptr [ %4446, %4439 ], [ %4426, %4433 ]
  %4459 = phi i32 [ %4445, %4439 ], [ 1, %4433 ]
  %4460 = load i32, ptr %4458, align 4, !tbaa !5
  %4461 = add nsw i32 %4460, %4459
  store i32 %4461, ptr %4458, align 4, !tbaa !5
  br label %4462

4462:                                             ; preds = %4449, %4457, %4422, %4399
  %4463 = icmp eq i32 %4414, %5
  br i1 %4463, label %5508, label %4325, !llvm.loop !908

4464:                                             ; preds = %4308, %4603
  %4465 = phi float [ 0.000000e+00, %4308 ], [ %4551, %4603 ]
  %4466 = phi i32 [ 0, %4308 ], [ %4552, %4603 ]
  %4467 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4309, label %4468, label %4537

4468:                                             ; preds = %4464, %4527
  %4469 = phi i32 [ %4536, %4527 ], [ 0, %4464 ]
  %4470 = phi i64 [ %4478, %4527 ], [ %4313, %4464 ]
  %4471 = phi i64 [ %4535, %4527 ], [ %4312, %4464 ]
  %4472 = phi i32 [ %4533, %4527 ], [ %4467, %4464 ]
  %4473 = sub i32 %4311, %4469
  %4474 = tail call i32 @llvm.smin.i32(i32 %4473, i32 0)
  %4475 = sub i32 %4473, %4474
  %4476 = zext i32 %4475 to i64
  %4477 = add nuw nsw i64 %4476, 1
  %4478 = add nsw i64 %4470, -1
  %4479 = icmp ult i32 %4475, 31
  br i1 %4479, label %4515, label %4480

4480:                                             ; preds = %4468
  %4481 = and i64 %4477, 8589934560
  %4482 = sub i64 %4471, %4481
  br label %4483

4483:                                             ; preds = %4483, %4480
  %4484 = phi i64 [ 0, %4480 ], [ %4507, %4483 ]
  %4485 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4480 ], [ %4503, %4483 ]
  %4486 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4480 ], [ %4504, %4483 ]
  %4487 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4480 ], [ %4505, %4483 ]
  %4488 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4480 ], [ %4506, %4483 ]
  %4489 = sub i64 %4471, %4484
  %4490 = getelementptr inbounds i32, ptr %11, i64 %4489
  %4491 = getelementptr inbounds i32, ptr %4490, i64 -7
  %4492 = load <8 x i32>, ptr %4491, align 4, !tbaa !5
  %4493 = shufflevector <8 x i32> %4492, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4494 = getelementptr inbounds i32, ptr %4490, i64 -15
  %4495 = load <8 x i32>, ptr %4494, align 4, !tbaa !5
  %4496 = shufflevector <8 x i32> %4495, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4497 = getelementptr inbounds i32, ptr %4490, i64 -23
  %4498 = load <8 x i32>, ptr %4497, align 4, !tbaa !5
  %4499 = shufflevector <8 x i32> %4498, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4500 = getelementptr inbounds i32, ptr %4490, i64 -31
  %4501 = load <8 x i32>, ptr %4500, align 4, !tbaa !5
  %4502 = shufflevector <8 x i32> %4501, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4503 = mul <8 x i32> %4493, %4485
  %4504 = mul <8 x i32> %4496, %4486
  %4505 = mul <8 x i32> %4499, %4487
  %4506 = mul <8 x i32> %4502, %4488
  %4507 = add nuw i64 %4484, 32
  %4508 = icmp eq i64 %4507, %4481
  br i1 %4508, label %4509, label %4483, !llvm.loop !909

4509:                                             ; preds = %4483
  %4510 = mul <8 x i32> %4504, %4503
  %4511 = mul <8 x i32> %4505, %4510
  %4512 = mul <8 x i32> %4506, %4511
  %4513 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4512)
  %4514 = icmp eq i64 %4477, %4481
  br i1 %4514, label %4527, label %4515

4515:                                             ; preds = %4468, %4509
  %4516 = phi i64 [ %4471, %4468 ], [ %4482, %4509 ]
  %4517 = phi i32 [ 1, %4468 ], [ %4513, %4509 ]
  br label %4518

4518:                                             ; preds = %4515, %4518
  %4519 = phi i64 [ %4524, %4518 ], [ %4516, %4515 ]
  %4520 = phi i32 [ %4523, %4518 ], [ %4517, %4515 ]
  %4521 = getelementptr inbounds i32, ptr %11, i64 %4519
  %4522 = load i32, ptr %4521, align 4, !tbaa !5
  %4523 = mul nsw i32 %4522, %4520
  %4524 = add nsw i64 %4519, -1
  %4525 = trunc i64 %4519 to i32
  %4526 = icmp sgt i32 %4525, 0
  br i1 %4526, label %4518, label %4527, !llvm.loop !910

4527:                                             ; preds = %4518, %4509
  %4528 = phi i32 [ %4513, %4509 ], [ %4523, %4518 ]
  %4529 = and i64 %4478, 4294967295
  %4530 = getelementptr inbounds i32, ptr %6, i64 %4529
  %4531 = load i32, ptr %4530, align 4, !tbaa !5
  %4532 = mul nsw i32 %4531, %4528
  %4533 = add nsw i32 %4532, %4472
  %4534 = icmp sgt i64 %4470, 2
  %4535 = add nsw i64 %4471, -1
  %4536 = add i32 %4469, 1
  br i1 %4534, label %4468, label %4537, !llvm.loop !911

4537:                                             ; preds = %4527, %4464
  %4538 = phi i32 [ %4467, %4464 ], [ %4533, %4527 ]
  %4539 = icmp slt i32 %4538, %5
  br i1 %4539, label %4542, label %4540

4540:                                             ; preds = %4537
  %4541 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

4542:                                             ; preds = %4537
  %4543 = sext i32 %4538 to i64
  %4544 = getelementptr inbounds i64, ptr %4293, i64 %4543
  %4545 = load i64, ptr %4544, align 8, !tbaa !120
  %4546 = sitofp i64 %4545 to float
  %4547 = fpext float %4465 to double
  %4548 = fpext float %4546 to double
  %4549 = fmul fast double %4548, %4548
  %4550 = fadd fast double %4549, %4547
  %4551 = fptrunc double %4550 to float
  store float %4551, ptr %4295, align 4, !tbaa !162
  %4552 = add nuw nsw i32 %4466, 1
  br i1 %4310, label %4553, label %4603

4553:                                             ; preds = %4542
  %4554 = load i32, ptr %4, align 4, !tbaa !5
  %4555 = load i32, ptr %12, align 4, !tbaa !5
  %4556 = add nsw i32 %4555, -1
  %4557 = icmp slt i32 %4554, %4556
  br i1 %4557, label %4580, label %4558

4558:                                             ; preds = %4553
  %4559 = icmp eq i32 %4554, %4556
  br i1 %4559, label %4560, label %4596

4560:                                             ; preds = %4558
  store i32 0, ptr %4, align 4, !tbaa !5
  %4561 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4561, ptr %6, align 4, !tbaa !5
  br i1 %4315, label %4603, label %4562

4562:                                             ; preds = %4560, %4590
  %4563 = phi i64 [ %4594, %4590 ], [ 1, %4560 ]
  %4564 = getelementptr inbounds i32, ptr %4, i64 %4563
  %4565 = load i32, ptr %4564, align 4, !tbaa !5
  %4566 = getelementptr inbounds i32, ptr %12, i64 %4563
  %4567 = load i32, ptr %4566, align 4, !tbaa !5
  %4568 = add nsw i32 %4567, -1
  %4569 = icmp slt i32 %4565, %4568
  br i1 %4569, label %4570, label %4588

4570:                                             ; preds = %4562
  br i1 %4557, label %4580, label %4571

4571:                                             ; preds = %4570
  %4572 = shl i64 %4563, 32
  %4573 = add i64 %4572, -4294967296
  %4574 = ashr exact i64 %4573, 32
  %4575 = getelementptr inbounds i32, ptr %7, i64 %4574
  %4576 = load i32, ptr %4575, align 4, !tbaa !5
  %4577 = getelementptr inbounds i32, ptr %6, i64 %4563
  %4578 = load i32, ptr %4577, align 4, !tbaa !5
  %4579 = add nsw i32 %4578, %4576
  store i32 %4579, ptr %4577, align 4, !tbaa !5
  br label %4598

4580:                                             ; preds = %4553, %4570
  %4581 = phi i32 [ %4565, %4570 ], [ %4554, %4553 ]
  %4582 = phi ptr [ %4564, %4570 ], [ %4, %4553 ]
  %4583 = phi i64 [ %4563, %4570 ], [ 0, %4553 ]
  %4584 = add nsw i32 %4581, 1
  store i32 %4584, ptr %4582, align 4, !tbaa !5
  %4585 = getelementptr inbounds i32, ptr %7, i64 %4583
  %4586 = load i32, ptr %4585, align 4, !tbaa !5
  %4587 = getelementptr inbounds i32, ptr %6, i64 %4583
  br label %4598

4588:                                             ; preds = %4562
  %4589 = icmp eq i32 %4565, %4568
  br i1 %4589, label %4590, label %4596

4590:                                             ; preds = %4588
  store i32 0, ptr %4564, align 4, !tbaa !5
  %4591 = getelementptr inbounds i32, ptr %8, i64 %4563
  %4592 = load i32, ptr %4591, align 4, !tbaa !5
  %4593 = getelementptr inbounds i32, ptr %6, i64 %4563
  store i32 %4592, ptr %4593, align 4, !tbaa !5
  %4594 = add nuw nsw i64 %4563, 1
  %4595 = icmp eq i64 %4594, %4313
  br i1 %4595, label %4603, label %4562, !llvm.loop !912

4596:                                             ; preds = %4558, %4588
  %4597 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

4598:                                             ; preds = %4571, %4580
  %4599 = phi ptr [ %4587, %4580 ], [ %4564, %4571 ]
  %4600 = phi i32 [ %4586, %4580 ], [ 1, %4571 ]
  %4601 = load i32, ptr %4599, align 4, !tbaa !5
  %4602 = add nsw i32 %4601, %4600
  store i32 %4602, ptr %4599, align 4, !tbaa !5
  br label %4603

4603:                                             ; preds = %4590, %4598, %4560, %4542
  %4604 = icmp eq i32 %4552, %5
  br i1 %4604, label %5511, label %4464, !llvm.loop !913

4605:                                             ; preds = %4301
  %4606 = getelementptr inbounds i32, ptr %3, i64 %19
  %4607 = load i32, ptr %4606, align 4, !tbaa !5
  %4608 = icmp eq i32 %4607, 0
  %4609 = icmp sgt i32 %5, 0
  br i1 %4608, label %4619, label %4610

4610:                                             ; preds = %4605
  br i1 %4609, label %4611, label %5511

4611:                                             ; preds = %4610
  %4612 = icmp sgt i32 %13, 1
  %4613 = icmp sgt i32 %13, 0
  %4614 = add i32 %13, -2
  %4615 = zext i32 %4614 to i64
  %4616 = zext i32 %13 to i64
  %4617 = add nuw i32 %5, 1
  %4618 = icmp eq i32 %13, 1
  br label %4761

4619:                                             ; preds = %4605
  br i1 %4609, label %4620, label %5511

4620:                                             ; preds = %4619
  %4621 = icmp sgt i32 %13, 1
  %4622 = icmp sgt i32 %13, 0
  %4623 = add i32 %13, -2
  %4624 = zext i32 %4623 to i64
  %4625 = zext i32 %13 to i64
  %4626 = add nuw i32 %5, 1
  %4627 = icmp eq i32 %13, 1
  br label %4628

4628:                                             ; preds = %4620, %4759
  %4629 = phi float [ 0.000000e+00, %4620 ], [ %4709, %4759 ]
  %4630 = phi i32 [ 0, %4620 ], [ %4711, %4759 ]
  %4631 = phi double [ 0.000000e+00, %4620 ], [ %4710, %4759 ]
  %4632 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4621, label %4633, label %4702

4633:                                             ; preds = %4628, %4692
  %4634 = phi i32 [ %4701, %4692 ], [ 0, %4628 ]
  %4635 = phi i64 [ %4643, %4692 ], [ %4625, %4628 ]
  %4636 = phi i64 [ %4700, %4692 ], [ %4624, %4628 ]
  %4637 = phi i32 [ %4698, %4692 ], [ %4632, %4628 ]
  %4638 = sub i32 %4623, %4634
  %4639 = tail call i32 @llvm.smin.i32(i32 %4638, i32 0)
  %4640 = sub i32 %4638, %4639
  %4641 = zext i32 %4640 to i64
  %4642 = add nuw nsw i64 %4641, 1
  %4643 = add nsw i64 %4635, -1
  %4644 = icmp ult i32 %4640, 31
  br i1 %4644, label %4680, label %4645

4645:                                             ; preds = %4633
  %4646 = and i64 %4642, 8589934560
  %4647 = sub i64 %4636, %4646
  br label %4648

4648:                                             ; preds = %4648, %4645
  %4649 = phi i64 [ 0, %4645 ], [ %4672, %4648 ]
  %4650 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4645 ], [ %4668, %4648 ]
  %4651 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4645 ], [ %4669, %4648 ]
  %4652 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4645 ], [ %4670, %4648 ]
  %4653 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4645 ], [ %4671, %4648 ]
  %4654 = sub i64 %4636, %4649
  %4655 = getelementptr inbounds i32, ptr %9, i64 %4654
  %4656 = getelementptr inbounds i32, ptr %4655, i64 -7
  %4657 = load <8 x i32>, ptr %4656, align 4, !tbaa !5
  %4658 = shufflevector <8 x i32> %4657, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4659 = getelementptr inbounds i32, ptr %4655, i64 -15
  %4660 = load <8 x i32>, ptr %4659, align 4, !tbaa !5
  %4661 = shufflevector <8 x i32> %4660, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4662 = getelementptr inbounds i32, ptr %4655, i64 -23
  %4663 = load <8 x i32>, ptr %4662, align 4, !tbaa !5
  %4664 = shufflevector <8 x i32> %4663, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4665 = getelementptr inbounds i32, ptr %4655, i64 -31
  %4666 = load <8 x i32>, ptr %4665, align 4, !tbaa !5
  %4667 = shufflevector <8 x i32> %4666, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4668 = mul <8 x i32> %4658, %4650
  %4669 = mul <8 x i32> %4661, %4651
  %4670 = mul <8 x i32> %4664, %4652
  %4671 = mul <8 x i32> %4667, %4653
  %4672 = add nuw i64 %4649, 32
  %4673 = icmp eq i64 %4672, %4646
  br i1 %4673, label %4674, label %4648, !llvm.loop !914

4674:                                             ; preds = %4648
  %4675 = mul <8 x i32> %4669, %4668
  %4676 = mul <8 x i32> %4670, %4675
  %4677 = mul <8 x i32> %4671, %4676
  %4678 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4677)
  %4679 = icmp eq i64 %4642, %4646
  br i1 %4679, label %4692, label %4680

4680:                                             ; preds = %4633, %4674
  %4681 = phi i64 [ %4636, %4633 ], [ %4647, %4674 ]
  %4682 = phi i32 [ 1, %4633 ], [ %4678, %4674 ]
  br label %4683

4683:                                             ; preds = %4680, %4683
  %4684 = phi i64 [ %4689, %4683 ], [ %4681, %4680 ]
  %4685 = phi i32 [ %4688, %4683 ], [ %4682, %4680 ]
  %4686 = getelementptr inbounds i32, ptr %9, i64 %4684
  %4687 = load i32, ptr %4686, align 4, !tbaa !5
  %4688 = mul nsw i32 %4687, %4685
  %4689 = add nsw i64 %4684, -1
  %4690 = trunc i64 %4684 to i32
  %4691 = icmp sgt i32 %4690, 0
  br i1 %4691, label %4683, label %4692, !llvm.loop !915

4692:                                             ; preds = %4683, %4674
  %4693 = phi i32 [ %4678, %4674 ], [ %4688, %4683 ]
  %4694 = and i64 %4643, 4294967295
  %4695 = getelementptr inbounds i32, ptr %6, i64 %4694
  %4696 = load i32, ptr %4695, align 4, !tbaa !5
  %4697 = mul nsw i32 %4696, %4693
  %4698 = add nsw i32 %4697, %4637
  %4699 = icmp sgt i64 %4635, 2
  %4700 = add nsw i64 %4636, -1
  %4701 = add i32 %4634, 1
  br i1 %4699, label %4633, label %4702, !llvm.loop !916

4702:                                             ; preds = %4692, %4628
  %4703 = phi i32 [ %4632, %4628 ], [ %4698, %4692 ]
  %4704 = sext i32 %4703 to i64
  %4705 = getelementptr inbounds i64, ptr %4293, i64 %4704
  %4706 = load i64, ptr %4705, align 8, !tbaa !120
  %4707 = sitofp i64 %4706 to float
  %4708 = fmul fast float %4707, %4707
  %4709 = fadd fast float %4708, %4629
  %4710 = fadd fast double %4631, 1.000000e+00
  %4711 = add nuw nsw i32 %4630, 1
  br i1 %4622, label %4712, label %4759

4712:                                             ; preds = %4702
  %4713 = load i32, ptr %4, align 4, !tbaa !5
  %4714 = load i32, ptr %12, align 4, !tbaa !5
  %4715 = add nsw i32 %4714, -1
  %4716 = icmp slt i32 %4713, %4715
  br i1 %4716, label %4736, label %4717

4717:                                             ; preds = %4712
  %4718 = icmp eq i32 %4713, %4715
  br i1 %4718, label %4719, label %4752

4719:                                             ; preds = %4717
  store i32 0, ptr %4, align 4, !tbaa !5
  %4720 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4720, ptr %6, align 4, !tbaa !5
  br i1 %4627, label %4759, label %4721

4721:                                             ; preds = %4719, %4746
  %4722 = phi i64 [ %4750, %4746 ], [ 1, %4719 ]
  %4723 = getelementptr inbounds i32, ptr %4, i64 %4722
  %4724 = load i32, ptr %4723, align 4, !tbaa !5
  %4725 = getelementptr inbounds i32, ptr %12, i64 %4722
  %4726 = load i32, ptr %4725, align 4, !tbaa !5
  %4727 = add nsw i32 %4726, -1
  %4728 = icmp slt i32 %4724, %4727
  br i1 %4728, label %4729, label %4744

4729:                                             ; preds = %4721
  br i1 %4716, label %4736, label %4730

4730:                                             ; preds = %4729
  %4731 = getelementptr inbounds i32, ptr %7, i64 %4722
  %4732 = load i32, ptr %4731, align 4, !tbaa !5
  %4733 = getelementptr inbounds i32, ptr %6, i64 %4722
  %4734 = load i32, ptr %4733, align 4, !tbaa !5
  %4735 = add nsw i32 %4734, %4732
  store i32 %4735, ptr %4733, align 4, !tbaa !5
  br label %4754

4736:                                             ; preds = %4712, %4729
  %4737 = phi i32 [ %4724, %4729 ], [ %4713, %4712 ]
  %4738 = phi ptr [ %4723, %4729 ], [ %4, %4712 ]
  %4739 = phi i64 [ %4722, %4729 ], [ 0, %4712 ]
  %4740 = add nsw i32 %4737, 1
  store i32 %4740, ptr %4738, align 4, !tbaa !5
  %4741 = getelementptr inbounds i32, ptr %7, i64 %4739
  %4742 = load i32, ptr %4741, align 4, !tbaa !5
  %4743 = getelementptr inbounds i32, ptr %6, i64 %4739
  br label %4754

4744:                                             ; preds = %4721
  %4745 = icmp eq i32 %4724, %4727
  br i1 %4745, label %4746, label %4752

4746:                                             ; preds = %4744
  store i32 0, ptr %4723, align 4, !tbaa !5
  %4747 = getelementptr inbounds i32, ptr %8, i64 %4722
  %4748 = load i32, ptr %4747, align 4, !tbaa !5
  %4749 = getelementptr inbounds i32, ptr %6, i64 %4722
  store i32 %4748, ptr %4749, align 4, !tbaa !5
  %4750 = add nuw nsw i64 %4722, 1
  %4751 = icmp eq i64 %4750, %4625
  br i1 %4751, label %4759, label %4721, !llvm.loop !917

4752:                                             ; preds = %4717, %4744
  store float %4709, ptr %4295, align 4, !tbaa !162
  %4753 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

4754:                                             ; preds = %4730, %4736
  %4755 = phi ptr [ %4743, %4736 ], [ %4723, %4730 ]
  %4756 = phi i32 [ %4742, %4736 ], [ 1, %4730 ]
  %4757 = load i32, ptr %4755, align 4, !tbaa !5
  %4758 = add nsw i32 %4757, %4756
  store i32 %4758, ptr %4755, align 4, !tbaa !5
  br label %4759

4759:                                             ; preds = %4746, %4754, %4719, %4702
  %4760 = icmp eq i32 %4711, %5
  br i1 %4760, label %5509, label %4628, !llvm.loop !918

4761:                                             ; preds = %4611, %4897
  %4762 = phi float [ 0.000000e+00, %4611 ], [ %4845, %4897 ]
  %4763 = phi i32 [ 0, %4611 ], [ %4846, %4897 ]
  %4764 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4612, label %4765, label %4834

4765:                                             ; preds = %4761, %4824
  %4766 = phi i32 [ %4833, %4824 ], [ 0, %4761 ]
  %4767 = phi i64 [ %4775, %4824 ], [ %4616, %4761 ]
  %4768 = phi i64 [ %4832, %4824 ], [ %4615, %4761 ]
  %4769 = phi i32 [ %4830, %4824 ], [ %4764, %4761 ]
  %4770 = sub i32 %4614, %4766
  %4771 = tail call i32 @llvm.smin.i32(i32 %4770, i32 0)
  %4772 = sub i32 %4770, %4771
  %4773 = zext i32 %4772 to i64
  %4774 = add nuw nsw i64 %4773, 1
  %4775 = add nsw i64 %4767, -1
  %4776 = icmp ult i32 %4772, 31
  br i1 %4776, label %4812, label %4777

4777:                                             ; preds = %4765
  %4778 = and i64 %4774, 8589934560
  %4779 = sub i64 %4768, %4778
  br label %4780

4780:                                             ; preds = %4780, %4777
  %4781 = phi i64 [ 0, %4777 ], [ %4804, %4780 ]
  %4782 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4777 ], [ %4800, %4780 ]
  %4783 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4777 ], [ %4801, %4780 ]
  %4784 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4777 ], [ %4802, %4780 ]
  %4785 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4777 ], [ %4803, %4780 ]
  %4786 = sub i64 %4768, %4781
  %4787 = getelementptr inbounds i32, ptr %11, i64 %4786
  %4788 = getelementptr inbounds i32, ptr %4787, i64 -7
  %4789 = load <8 x i32>, ptr %4788, align 4, !tbaa !5
  %4790 = shufflevector <8 x i32> %4789, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4791 = getelementptr inbounds i32, ptr %4787, i64 -15
  %4792 = load <8 x i32>, ptr %4791, align 4, !tbaa !5
  %4793 = shufflevector <8 x i32> %4792, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4794 = getelementptr inbounds i32, ptr %4787, i64 -23
  %4795 = load <8 x i32>, ptr %4794, align 4, !tbaa !5
  %4796 = shufflevector <8 x i32> %4795, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4797 = getelementptr inbounds i32, ptr %4787, i64 -31
  %4798 = load <8 x i32>, ptr %4797, align 4, !tbaa !5
  %4799 = shufflevector <8 x i32> %4798, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4800 = mul <8 x i32> %4790, %4782
  %4801 = mul <8 x i32> %4793, %4783
  %4802 = mul <8 x i32> %4796, %4784
  %4803 = mul <8 x i32> %4799, %4785
  %4804 = add nuw i64 %4781, 32
  %4805 = icmp eq i64 %4804, %4778
  br i1 %4805, label %4806, label %4780, !llvm.loop !919

4806:                                             ; preds = %4780
  %4807 = mul <8 x i32> %4801, %4800
  %4808 = mul <8 x i32> %4802, %4807
  %4809 = mul <8 x i32> %4803, %4808
  %4810 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4809)
  %4811 = icmp eq i64 %4774, %4778
  br i1 %4811, label %4824, label %4812

4812:                                             ; preds = %4765, %4806
  %4813 = phi i64 [ %4768, %4765 ], [ %4779, %4806 ]
  %4814 = phi i32 [ 1, %4765 ], [ %4810, %4806 ]
  br label %4815

4815:                                             ; preds = %4812, %4815
  %4816 = phi i64 [ %4821, %4815 ], [ %4813, %4812 ]
  %4817 = phi i32 [ %4820, %4815 ], [ %4814, %4812 ]
  %4818 = getelementptr inbounds i32, ptr %11, i64 %4816
  %4819 = load i32, ptr %4818, align 4, !tbaa !5
  %4820 = mul nsw i32 %4819, %4817
  %4821 = add nsw i64 %4816, -1
  %4822 = trunc i64 %4816 to i32
  %4823 = icmp sgt i32 %4822, 0
  br i1 %4823, label %4815, label %4824, !llvm.loop !920

4824:                                             ; preds = %4815, %4806
  %4825 = phi i32 [ %4810, %4806 ], [ %4820, %4815 ]
  %4826 = and i64 %4775, 4294967295
  %4827 = getelementptr inbounds i32, ptr %6, i64 %4826
  %4828 = load i32, ptr %4827, align 4, !tbaa !5
  %4829 = mul nsw i32 %4828, %4825
  %4830 = add nsw i32 %4829, %4769
  %4831 = icmp sgt i64 %4767, 2
  %4832 = add nsw i64 %4768, -1
  %4833 = add i32 %4766, 1
  br i1 %4831, label %4765, label %4834, !llvm.loop !921

4834:                                             ; preds = %4824, %4761
  %4835 = phi i32 [ %4764, %4761 ], [ %4830, %4824 ]
  %4836 = icmp slt i32 %4835, %5
  br i1 %4836, label %4839, label %4837

4837:                                             ; preds = %4834
  %4838 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

4839:                                             ; preds = %4834
  %4840 = sext i32 %4835 to i64
  %4841 = getelementptr inbounds i64, ptr %4293, i64 %4840
  %4842 = load i64, ptr %4841, align 8, !tbaa !120
  %4843 = sitofp i64 %4842 to float
  %4844 = fmul fast float %4843, %4843
  %4845 = fadd fast float %4844, %4762
  store float %4845, ptr %4295, align 4, !tbaa !162
  %4846 = add nuw nsw i32 %4763, 1
  br i1 %4613, label %4847, label %4897

4847:                                             ; preds = %4839
  %4848 = load i32, ptr %4, align 4, !tbaa !5
  %4849 = load i32, ptr %12, align 4, !tbaa !5
  %4850 = add nsw i32 %4849, -1
  %4851 = icmp slt i32 %4848, %4850
  br i1 %4851, label %4874, label %4852

4852:                                             ; preds = %4847
  %4853 = icmp eq i32 %4848, %4850
  br i1 %4853, label %4854, label %4890

4854:                                             ; preds = %4852
  store i32 0, ptr %4, align 4, !tbaa !5
  %4855 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4855, ptr %6, align 4, !tbaa !5
  br i1 %4618, label %4897, label %4856

4856:                                             ; preds = %4854, %4884
  %4857 = phi i64 [ %4888, %4884 ], [ 1, %4854 ]
  %4858 = getelementptr inbounds i32, ptr %4, i64 %4857
  %4859 = load i32, ptr %4858, align 4, !tbaa !5
  %4860 = getelementptr inbounds i32, ptr %12, i64 %4857
  %4861 = load i32, ptr %4860, align 4, !tbaa !5
  %4862 = add nsw i32 %4861, -1
  %4863 = icmp slt i32 %4859, %4862
  br i1 %4863, label %4864, label %4882

4864:                                             ; preds = %4856
  br i1 %4851, label %4874, label %4865

4865:                                             ; preds = %4864
  %4866 = shl i64 %4857, 32
  %4867 = add i64 %4866, -4294967296
  %4868 = ashr exact i64 %4867, 32
  %4869 = getelementptr inbounds i32, ptr %7, i64 %4868
  %4870 = load i32, ptr %4869, align 4, !tbaa !5
  %4871 = getelementptr inbounds i32, ptr %6, i64 %4857
  %4872 = load i32, ptr %4871, align 4, !tbaa !5
  %4873 = add nsw i32 %4872, %4870
  store i32 %4873, ptr %4871, align 4, !tbaa !5
  br label %4892

4874:                                             ; preds = %4847, %4864
  %4875 = phi i32 [ %4859, %4864 ], [ %4848, %4847 ]
  %4876 = phi ptr [ %4858, %4864 ], [ %4, %4847 ]
  %4877 = phi i64 [ %4857, %4864 ], [ 0, %4847 ]
  %4878 = add nsw i32 %4875, 1
  store i32 %4878, ptr %4876, align 4, !tbaa !5
  %4879 = getelementptr inbounds i32, ptr %7, i64 %4877
  %4880 = load i32, ptr %4879, align 4, !tbaa !5
  %4881 = getelementptr inbounds i32, ptr %6, i64 %4877
  br label %4892

4882:                                             ; preds = %4856
  %4883 = icmp eq i32 %4859, %4862
  br i1 %4883, label %4884, label %4890

4884:                                             ; preds = %4882
  store i32 0, ptr %4858, align 4, !tbaa !5
  %4885 = getelementptr inbounds i32, ptr %8, i64 %4857
  %4886 = load i32, ptr %4885, align 4, !tbaa !5
  %4887 = getelementptr inbounds i32, ptr %6, i64 %4857
  store i32 %4886, ptr %4887, align 4, !tbaa !5
  %4888 = add nuw nsw i64 %4857, 1
  %4889 = icmp eq i64 %4888, %4616
  br i1 %4889, label %4897, label %4856, !llvm.loop !922

4890:                                             ; preds = %4852, %4882
  %4891 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

4892:                                             ; preds = %4865, %4874
  %4893 = phi ptr [ %4881, %4874 ], [ %4858, %4865 ]
  %4894 = phi i32 [ %4880, %4874 ], [ 1, %4865 ]
  %4895 = load i32, ptr %4893, align 4, !tbaa !5
  %4896 = add nsw i32 %4895, %4894
  store i32 %4896, ptr %4893, align 4, !tbaa !5
  br label %4897

4897:                                             ; preds = %4884, %4892, %4854, %4839
  %4898 = icmp eq i32 %4846, %5
  br i1 %4898, label %5511, label %4761, !llvm.loop !923

4899:                                             ; preds = %4301
  %4900 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1473, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5511

4901:                                             ; preds = %18
  %4902 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4903 = load ptr, ptr %4902, align 8, !tbaa !9
  %4904 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4905 = load ptr, ptr %4904, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4905, align 8, !tbaa !18
  %4906 = icmp eq i32 %13, 0
  br i1 %4906, label %4907, label %4911

4907:                                             ; preds = %4901
  %4908 = load i64, ptr %4903, align 8, !tbaa !120
  %4909 = sitofp i64 %4908 to double
  %4910 = fmul fast double %4909, %4909
  store double %4910, ptr %4905, align 8, !tbaa !18
  br label %5511

4911:                                             ; preds = %4901
  switch i32 %1, label %5503 [
    i32 1, label %4912
    i32 0, label %5209
  ]

4912:                                             ; preds = %4911
  %4913 = getelementptr inbounds i32, ptr %3, i64 %19
  %4914 = load i32, ptr %4913, align 4, !tbaa !5
  %4915 = icmp eq i32 %4914, 0
  %4916 = icmp sgt i32 %5, 0
  br i1 %4915, label %4926, label %4917

4917:                                             ; preds = %4912
  br i1 %4916, label %4918, label %5511

4918:                                             ; preds = %4917
  %4919 = icmp sgt i32 %13, 1
  %4920 = icmp sgt i32 %13, 0
  %4921 = add i32 %13, -2
  %4922 = zext i32 %4921 to i64
  %4923 = zext i32 %13 to i64
  %4924 = add nuw i32 %5, 1
  %4925 = icmp eq i32 %13, 1
  br label %5071

4926:                                             ; preds = %4912
  br i1 %4916, label %4927, label %5511

4927:                                             ; preds = %4926
  %4928 = icmp sgt i32 %13, 1
  %4929 = icmp sgt i32 %13, 0
  %4930 = add i32 %13, -2
  %4931 = zext i32 %4930 to i64
  %4932 = zext i32 %13 to i64
  %4933 = add nuw i32 %5, 1
  %4934 = icmp eq i32 %13, 1
  br label %4935

4935:                                             ; preds = %4927, %5069
  %4936 = phi double [ 0.000000e+00, %4927 ], [ %5019, %5069 ]
  %4937 = phi i32 [ 0, %4927 ], [ %5021, %5069 ]
  %4938 = phi double [ 0.000000e+00, %4927 ], [ %5020, %5069 ]
  %4939 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4928, label %4940, label %5009

4940:                                             ; preds = %4935, %4999
  %4941 = phi i32 [ %5008, %4999 ], [ 0, %4935 ]
  %4942 = phi i64 [ %4950, %4999 ], [ %4932, %4935 ]
  %4943 = phi i64 [ %5007, %4999 ], [ %4931, %4935 ]
  %4944 = phi i32 [ %5005, %4999 ], [ %4939, %4935 ]
  %4945 = sub i32 %4930, %4941
  %4946 = tail call i32 @llvm.smin.i32(i32 %4945, i32 0)
  %4947 = sub i32 %4945, %4946
  %4948 = zext i32 %4947 to i64
  %4949 = add nuw nsw i64 %4948, 1
  %4950 = add nsw i64 %4942, -1
  %4951 = icmp ult i32 %4947, 31
  br i1 %4951, label %4987, label %4952

4952:                                             ; preds = %4940
  %4953 = and i64 %4949, 8589934560
  %4954 = sub i64 %4943, %4953
  br label %4955

4955:                                             ; preds = %4955, %4952
  %4956 = phi i64 [ 0, %4952 ], [ %4979, %4955 ]
  %4957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4952 ], [ %4975, %4955 ]
  %4958 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4952 ], [ %4976, %4955 ]
  %4959 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4952 ], [ %4977, %4955 ]
  %4960 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4952 ], [ %4978, %4955 ]
  %4961 = sub i64 %4943, %4956
  %4962 = getelementptr inbounds i32, ptr %9, i64 %4961
  %4963 = getelementptr inbounds i32, ptr %4962, i64 -7
  %4964 = load <8 x i32>, ptr %4963, align 4, !tbaa !5
  %4965 = shufflevector <8 x i32> %4964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4966 = getelementptr inbounds i32, ptr %4962, i64 -15
  %4967 = load <8 x i32>, ptr %4966, align 4, !tbaa !5
  %4968 = shufflevector <8 x i32> %4967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4969 = getelementptr inbounds i32, ptr %4962, i64 -23
  %4970 = load <8 x i32>, ptr %4969, align 4, !tbaa !5
  %4971 = shufflevector <8 x i32> %4970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4972 = getelementptr inbounds i32, ptr %4962, i64 -31
  %4973 = load <8 x i32>, ptr %4972, align 4, !tbaa !5
  %4974 = shufflevector <8 x i32> %4973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4975 = mul <8 x i32> %4965, %4957
  %4976 = mul <8 x i32> %4968, %4958
  %4977 = mul <8 x i32> %4971, %4959
  %4978 = mul <8 x i32> %4974, %4960
  %4979 = add nuw i64 %4956, 32
  %4980 = icmp eq i64 %4979, %4953
  br i1 %4980, label %4981, label %4955, !llvm.loop !924

4981:                                             ; preds = %4955
  %4982 = mul <8 x i32> %4976, %4975
  %4983 = mul <8 x i32> %4977, %4982
  %4984 = mul <8 x i32> %4978, %4983
  %4985 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4984)
  %4986 = icmp eq i64 %4949, %4953
  br i1 %4986, label %4999, label %4987

4987:                                             ; preds = %4940, %4981
  %4988 = phi i64 [ %4943, %4940 ], [ %4954, %4981 ]
  %4989 = phi i32 [ 1, %4940 ], [ %4985, %4981 ]
  br label %4990

4990:                                             ; preds = %4987, %4990
  %4991 = phi i64 [ %4996, %4990 ], [ %4988, %4987 ]
  %4992 = phi i32 [ %4995, %4990 ], [ %4989, %4987 ]
  %4993 = getelementptr inbounds i32, ptr %9, i64 %4991
  %4994 = load i32, ptr %4993, align 4, !tbaa !5
  %4995 = mul nsw i32 %4994, %4992
  %4996 = add nsw i64 %4991, -1
  %4997 = trunc i64 %4991 to i32
  %4998 = icmp sgt i32 %4997, 0
  br i1 %4998, label %4990, label %4999, !llvm.loop !925

4999:                                             ; preds = %4990, %4981
  %5000 = phi i32 [ %4985, %4981 ], [ %4995, %4990 ]
  %5001 = and i64 %4950, 4294967295
  %5002 = getelementptr inbounds i32, ptr %6, i64 %5001
  %5003 = load i32, ptr %5002, align 4, !tbaa !5
  %5004 = mul nsw i32 %5003, %5000
  %5005 = add nsw i32 %5004, %4944
  %5006 = icmp sgt i64 %4942, 2
  %5007 = add nsw i64 %4943, -1
  %5008 = add i32 %4941, 1
  br i1 %5006, label %4940, label %5009, !llvm.loop !926

5009:                                             ; preds = %4999, %4935
  %5010 = phi i32 [ %4939, %4935 ], [ %5005, %4999 ]
  %5011 = sext i32 %5010 to i64
  %5012 = getelementptr inbounds double, ptr %2, i64 %5011
  %5013 = load double, ptr %5012, align 8, !tbaa !18
  %5014 = getelementptr inbounds i64, ptr %4903, i64 %5011
  %5015 = load i64, ptr %5014, align 8, !tbaa !120
  %5016 = sitofp i64 %5015 to double
  %5017 = fmul fast double %5013, %5016
  %5018 = fmul fast double %5017, %5017
  %5019 = fadd fast double %5018, %4936
  store double %5019, ptr %4905, align 8, !tbaa !18
  %5020 = fadd fast double %5013, %4938
  %5021 = add nuw nsw i32 %4937, 1
  br i1 %4929, label %5022, label %5069

5022:                                             ; preds = %5009
  %5023 = load i32, ptr %4, align 4, !tbaa !5
  %5024 = load i32, ptr %12, align 4, !tbaa !5
  %5025 = add nsw i32 %5024, -1
  %5026 = icmp slt i32 %5023, %5025
  br i1 %5026, label %5046, label %5027

5027:                                             ; preds = %5022
  %5028 = icmp eq i32 %5023, %5025
  br i1 %5028, label %5029, label %5062

5029:                                             ; preds = %5027
  store i32 0, ptr %4, align 4, !tbaa !5
  %5030 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5030, ptr %6, align 4, !tbaa !5
  br i1 %4934, label %5069, label %5031

5031:                                             ; preds = %5029, %5056
  %5032 = phi i64 [ %5060, %5056 ], [ 1, %5029 ]
  %5033 = getelementptr inbounds i32, ptr %4, i64 %5032
  %5034 = load i32, ptr %5033, align 4, !tbaa !5
  %5035 = getelementptr inbounds i32, ptr %12, i64 %5032
  %5036 = load i32, ptr %5035, align 4, !tbaa !5
  %5037 = add nsw i32 %5036, -1
  %5038 = icmp slt i32 %5034, %5037
  br i1 %5038, label %5039, label %5054

5039:                                             ; preds = %5031
  br i1 %5026, label %5046, label %5040

5040:                                             ; preds = %5039
  %5041 = getelementptr inbounds i32, ptr %7, i64 %5032
  %5042 = load i32, ptr %5041, align 4, !tbaa !5
  %5043 = getelementptr inbounds i32, ptr %6, i64 %5032
  %5044 = load i32, ptr %5043, align 4, !tbaa !5
  %5045 = add nsw i32 %5044, %5042
  store i32 %5045, ptr %5043, align 4, !tbaa !5
  br label %5064

5046:                                             ; preds = %5022, %5039
  %5047 = phi i32 [ %5034, %5039 ], [ %5023, %5022 ]
  %5048 = phi ptr [ %5033, %5039 ], [ %4, %5022 ]
  %5049 = phi i64 [ %5032, %5039 ], [ 0, %5022 ]
  %5050 = add nsw i32 %5047, 1
  store i32 %5050, ptr %5048, align 4, !tbaa !5
  %5051 = getelementptr inbounds i32, ptr %7, i64 %5049
  %5052 = load i32, ptr %5051, align 4, !tbaa !5
  %5053 = getelementptr inbounds i32, ptr %6, i64 %5049
  br label %5064

5054:                                             ; preds = %5031
  %5055 = icmp eq i32 %5034, %5037
  br i1 %5055, label %5056, label %5062

5056:                                             ; preds = %5054
  store i32 0, ptr %5033, align 4, !tbaa !5
  %5057 = getelementptr inbounds i32, ptr %8, i64 %5032
  %5058 = load i32, ptr %5057, align 4, !tbaa !5
  %5059 = getelementptr inbounds i32, ptr %6, i64 %5032
  store i32 %5058, ptr %5059, align 4, !tbaa !5
  %5060 = add nuw nsw i64 %5032, 1
  %5061 = icmp eq i64 %5060, %4932
  br i1 %5061, label %5069, label %5031, !llvm.loop !927

5062:                                             ; preds = %5027, %5054
  %5063 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

5064:                                             ; preds = %5040, %5046
  %5065 = phi ptr [ %5053, %5046 ], [ %5033, %5040 ]
  %5066 = phi i32 [ %5052, %5046 ], [ 1, %5040 ]
  %5067 = load i32, ptr %5065, align 4, !tbaa !5
  %5068 = add nsw i32 %5067, %5066
  store i32 %5068, ptr %5065, align 4, !tbaa !5
  br label %5069

5069:                                             ; preds = %5056, %5064, %5029, %5009
  %5070 = icmp eq i32 %5021, %5
  br i1 %5070, label %5511, label %4935, !llvm.loop !928

5071:                                             ; preds = %4918, %5207
  %5072 = phi double [ 0.000000e+00, %4918 ], [ %5155, %5207 ]
  %5073 = phi i32 [ 0, %4918 ], [ %5156, %5207 ]
  %5074 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4919, label %5075, label %5144

5075:                                             ; preds = %5071, %5134
  %5076 = phi i32 [ %5143, %5134 ], [ 0, %5071 ]
  %5077 = phi i64 [ %5085, %5134 ], [ %4923, %5071 ]
  %5078 = phi i64 [ %5142, %5134 ], [ %4922, %5071 ]
  %5079 = phi i32 [ %5140, %5134 ], [ %5074, %5071 ]
  %5080 = sub i32 %4921, %5076
  %5081 = tail call i32 @llvm.smin.i32(i32 %5080, i32 0)
  %5082 = sub i32 %5080, %5081
  %5083 = zext i32 %5082 to i64
  %5084 = add nuw nsw i64 %5083, 1
  %5085 = add nsw i64 %5077, -1
  %5086 = icmp ult i32 %5082, 31
  br i1 %5086, label %5122, label %5087

5087:                                             ; preds = %5075
  %5088 = and i64 %5084, 8589934560
  %5089 = sub i64 %5078, %5088
  br label %5090

5090:                                             ; preds = %5090, %5087
  %5091 = phi i64 [ 0, %5087 ], [ %5114, %5090 ]
  %5092 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5087 ], [ %5110, %5090 ]
  %5093 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5087 ], [ %5111, %5090 ]
  %5094 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5087 ], [ %5112, %5090 ]
  %5095 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5087 ], [ %5113, %5090 ]
  %5096 = sub i64 %5078, %5091
  %5097 = getelementptr inbounds i32, ptr %11, i64 %5096
  %5098 = getelementptr inbounds i32, ptr %5097, i64 -7
  %5099 = load <8 x i32>, ptr %5098, align 4, !tbaa !5
  %5100 = shufflevector <8 x i32> %5099, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5101 = getelementptr inbounds i32, ptr %5097, i64 -15
  %5102 = load <8 x i32>, ptr %5101, align 4, !tbaa !5
  %5103 = shufflevector <8 x i32> %5102, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5104 = getelementptr inbounds i32, ptr %5097, i64 -23
  %5105 = load <8 x i32>, ptr %5104, align 4, !tbaa !5
  %5106 = shufflevector <8 x i32> %5105, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5107 = getelementptr inbounds i32, ptr %5097, i64 -31
  %5108 = load <8 x i32>, ptr %5107, align 4, !tbaa !5
  %5109 = shufflevector <8 x i32> %5108, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5110 = mul <8 x i32> %5100, %5092
  %5111 = mul <8 x i32> %5103, %5093
  %5112 = mul <8 x i32> %5106, %5094
  %5113 = mul <8 x i32> %5109, %5095
  %5114 = add nuw i64 %5091, 32
  %5115 = icmp eq i64 %5114, %5088
  br i1 %5115, label %5116, label %5090, !llvm.loop !929

5116:                                             ; preds = %5090
  %5117 = mul <8 x i32> %5111, %5110
  %5118 = mul <8 x i32> %5112, %5117
  %5119 = mul <8 x i32> %5113, %5118
  %5120 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5119)
  %5121 = icmp eq i64 %5084, %5088
  br i1 %5121, label %5134, label %5122

5122:                                             ; preds = %5075, %5116
  %5123 = phi i64 [ %5078, %5075 ], [ %5089, %5116 ]
  %5124 = phi i32 [ 1, %5075 ], [ %5120, %5116 ]
  br label %5125

5125:                                             ; preds = %5122, %5125
  %5126 = phi i64 [ %5131, %5125 ], [ %5123, %5122 ]
  %5127 = phi i32 [ %5130, %5125 ], [ %5124, %5122 ]
  %5128 = getelementptr inbounds i32, ptr %11, i64 %5126
  %5129 = load i32, ptr %5128, align 4, !tbaa !5
  %5130 = mul nsw i32 %5129, %5127
  %5131 = add nsw i64 %5126, -1
  %5132 = trunc i64 %5126 to i32
  %5133 = icmp sgt i32 %5132, 0
  br i1 %5133, label %5125, label %5134, !llvm.loop !930

5134:                                             ; preds = %5125, %5116
  %5135 = phi i32 [ %5120, %5116 ], [ %5130, %5125 ]
  %5136 = and i64 %5085, 4294967295
  %5137 = getelementptr inbounds i32, ptr %6, i64 %5136
  %5138 = load i32, ptr %5137, align 4, !tbaa !5
  %5139 = mul nsw i32 %5138, %5135
  %5140 = add nsw i32 %5139, %5079
  %5141 = icmp sgt i64 %5077, 2
  %5142 = add nsw i64 %5078, -1
  %5143 = add i32 %5076, 1
  br i1 %5141, label %5075, label %5144, !llvm.loop !931

5144:                                             ; preds = %5134, %5071
  %5145 = phi i32 [ %5074, %5071 ], [ %5140, %5134 ]
  %5146 = icmp slt i32 %5145, %5
  br i1 %5146, label %5149, label %5147

5147:                                             ; preds = %5144
  %5148 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

5149:                                             ; preds = %5144
  %5150 = sext i32 %5145 to i64
  %5151 = getelementptr inbounds i64, ptr %4903, i64 %5150
  %5152 = load i64, ptr %5151, align 8, !tbaa !120
  %5153 = sitofp i64 %5152 to double
  %5154 = fmul fast double %5153, %5153
  %5155 = fadd fast double %5154, %5072
  store double %5155, ptr %4905, align 8, !tbaa !18
  %5156 = add nuw nsw i32 %5073, 1
  br i1 %4920, label %5157, label %5207

5157:                                             ; preds = %5149
  %5158 = load i32, ptr %4, align 4, !tbaa !5
  %5159 = load i32, ptr %12, align 4, !tbaa !5
  %5160 = add nsw i32 %5159, -1
  %5161 = icmp slt i32 %5158, %5160
  br i1 %5161, label %5184, label %5162

5162:                                             ; preds = %5157
  %5163 = icmp eq i32 %5158, %5160
  br i1 %5163, label %5164, label %5200

5164:                                             ; preds = %5162
  store i32 0, ptr %4, align 4, !tbaa !5
  %5165 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5165, ptr %6, align 4, !tbaa !5
  br i1 %4925, label %5207, label %5166

5166:                                             ; preds = %5164, %5194
  %5167 = phi i64 [ %5198, %5194 ], [ 1, %5164 ]
  %5168 = getelementptr inbounds i32, ptr %4, i64 %5167
  %5169 = load i32, ptr %5168, align 4, !tbaa !5
  %5170 = getelementptr inbounds i32, ptr %12, i64 %5167
  %5171 = load i32, ptr %5170, align 4, !tbaa !5
  %5172 = add nsw i32 %5171, -1
  %5173 = icmp slt i32 %5169, %5172
  br i1 %5173, label %5174, label %5192

5174:                                             ; preds = %5166
  br i1 %5161, label %5184, label %5175

5175:                                             ; preds = %5174
  %5176 = shl i64 %5167, 32
  %5177 = add i64 %5176, -4294967296
  %5178 = ashr exact i64 %5177, 32
  %5179 = getelementptr inbounds i32, ptr %7, i64 %5178
  %5180 = load i32, ptr %5179, align 4, !tbaa !5
  %5181 = getelementptr inbounds i32, ptr %6, i64 %5167
  %5182 = load i32, ptr %5181, align 4, !tbaa !5
  %5183 = add nsw i32 %5182, %5180
  store i32 %5183, ptr %5181, align 4, !tbaa !5
  br label %5202

5184:                                             ; preds = %5157, %5174
  %5185 = phi i32 [ %5169, %5174 ], [ %5158, %5157 ]
  %5186 = phi ptr [ %5168, %5174 ], [ %4, %5157 ]
  %5187 = phi i64 [ %5167, %5174 ], [ 0, %5157 ]
  %5188 = add nsw i32 %5185, 1
  store i32 %5188, ptr %5186, align 4, !tbaa !5
  %5189 = getelementptr inbounds i32, ptr %7, i64 %5187
  %5190 = load i32, ptr %5189, align 4, !tbaa !5
  %5191 = getelementptr inbounds i32, ptr %6, i64 %5187
  br label %5202

5192:                                             ; preds = %5166
  %5193 = icmp eq i32 %5169, %5172
  br i1 %5193, label %5194, label %5200

5194:                                             ; preds = %5192
  store i32 0, ptr %5168, align 4, !tbaa !5
  %5195 = getelementptr inbounds i32, ptr %8, i64 %5167
  %5196 = load i32, ptr %5195, align 4, !tbaa !5
  %5197 = getelementptr inbounds i32, ptr %6, i64 %5167
  store i32 %5196, ptr %5197, align 4, !tbaa !5
  %5198 = add nuw nsw i64 %5167, 1
  %5199 = icmp eq i64 %5198, %4923
  br i1 %5199, label %5207, label %5166, !llvm.loop !932

5200:                                             ; preds = %5162, %5192
  %5201 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

5202:                                             ; preds = %5175, %5184
  %5203 = phi ptr [ %5191, %5184 ], [ %5168, %5175 ]
  %5204 = phi i32 [ %5190, %5184 ], [ 1, %5175 ]
  %5205 = load i32, ptr %5203, align 4, !tbaa !5
  %5206 = add nsw i32 %5205, %5204
  store i32 %5206, ptr %5203, align 4, !tbaa !5
  br label %5207

5207:                                             ; preds = %5194, %5202, %5164, %5149
  %5208 = icmp eq i32 %5156, %5
  br i1 %5208, label %5511, label %5071, !llvm.loop !933

5209:                                             ; preds = %4911
  %5210 = getelementptr inbounds i32, ptr %3, i64 %19
  %5211 = load i32, ptr %5210, align 4, !tbaa !5
  %5212 = icmp eq i32 %5211, 0
  %5213 = icmp sgt i32 %5, 0
  br i1 %5212, label %5223, label %5214

5214:                                             ; preds = %5209
  br i1 %5213, label %5215, label %5511

5215:                                             ; preds = %5214
  %5216 = icmp sgt i32 %13, 1
  %5217 = icmp sgt i32 %13, 0
  %5218 = add i32 %13, -2
  %5219 = zext i32 %5218 to i64
  %5220 = zext i32 %13 to i64
  %5221 = add nuw i32 %5, 1
  %5222 = icmp eq i32 %13, 1
  br label %5365

5223:                                             ; preds = %5209
  br i1 %5213, label %5224, label %5511

5224:                                             ; preds = %5223
  %5225 = icmp sgt i32 %13, 1
  %5226 = icmp sgt i32 %13, 0
  %5227 = add i32 %13, -2
  %5228 = zext i32 %5227 to i64
  %5229 = zext i32 %13 to i64
  %5230 = add nuw i32 %5, 1
  %5231 = icmp eq i32 %13, 1
  br label %5232

5232:                                             ; preds = %5224, %5363
  %5233 = phi double [ 0.000000e+00, %5224 ], [ %5313, %5363 ]
  %5234 = phi i32 [ 0, %5224 ], [ %5315, %5363 ]
  %5235 = phi double [ 0.000000e+00, %5224 ], [ %5314, %5363 ]
  %5236 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5225, label %5237, label %5306

5237:                                             ; preds = %5232, %5296
  %5238 = phi i32 [ %5305, %5296 ], [ 0, %5232 ]
  %5239 = phi i64 [ %5247, %5296 ], [ %5229, %5232 ]
  %5240 = phi i64 [ %5304, %5296 ], [ %5228, %5232 ]
  %5241 = phi i32 [ %5302, %5296 ], [ %5236, %5232 ]
  %5242 = sub i32 %5227, %5238
  %5243 = tail call i32 @llvm.smin.i32(i32 %5242, i32 0)
  %5244 = sub i32 %5242, %5243
  %5245 = zext i32 %5244 to i64
  %5246 = add nuw nsw i64 %5245, 1
  %5247 = add nsw i64 %5239, -1
  %5248 = icmp ult i32 %5244, 31
  br i1 %5248, label %5284, label %5249

5249:                                             ; preds = %5237
  %5250 = and i64 %5246, 8589934560
  %5251 = sub i64 %5240, %5250
  br label %5252

5252:                                             ; preds = %5252, %5249
  %5253 = phi i64 [ 0, %5249 ], [ %5276, %5252 ]
  %5254 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5249 ], [ %5272, %5252 ]
  %5255 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5249 ], [ %5273, %5252 ]
  %5256 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5249 ], [ %5274, %5252 ]
  %5257 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5249 ], [ %5275, %5252 ]
  %5258 = sub i64 %5240, %5253
  %5259 = getelementptr inbounds i32, ptr %9, i64 %5258
  %5260 = getelementptr inbounds i32, ptr %5259, i64 -7
  %5261 = load <8 x i32>, ptr %5260, align 4, !tbaa !5
  %5262 = shufflevector <8 x i32> %5261, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5263 = getelementptr inbounds i32, ptr %5259, i64 -15
  %5264 = load <8 x i32>, ptr %5263, align 4, !tbaa !5
  %5265 = shufflevector <8 x i32> %5264, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5266 = getelementptr inbounds i32, ptr %5259, i64 -23
  %5267 = load <8 x i32>, ptr %5266, align 4, !tbaa !5
  %5268 = shufflevector <8 x i32> %5267, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5269 = getelementptr inbounds i32, ptr %5259, i64 -31
  %5270 = load <8 x i32>, ptr %5269, align 4, !tbaa !5
  %5271 = shufflevector <8 x i32> %5270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5272 = mul <8 x i32> %5262, %5254
  %5273 = mul <8 x i32> %5265, %5255
  %5274 = mul <8 x i32> %5268, %5256
  %5275 = mul <8 x i32> %5271, %5257
  %5276 = add nuw i64 %5253, 32
  %5277 = icmp eq i64 %5276, %5250
  br i1 %5277, label %5278, label %5252, !llvm.loop !934

5278:                                             ; preds = %5252
  %5279 = mul <8 x i32> %5273, %5272
  %5280 = mul <8 x i32> %5274, %5279
  %5281 = mul <8 x i32> %5275, %5280
  %5282 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5281)
  %5283 = icmp eq i64 %5246, %5250
  br i1 %5283, label %5296, label %5284

5284:                                             ; preds = %5237, %5278
  %5285 = phi i64 [ %5240, %5237 ], [ %5251, %5278 ]
  %5286 = phi i32 [ 1, %5237 ], [ %5282, %5278 ]
  br label %5287

5287:                                             ; preds = %5284, %5287
  %5288 = phi i64 [ %5293, %5287 ], [ %5285, %5284 ]
  %5289 = phi i32 [ %5292, %5287 ], [ %5286, %5284 ]
  %5290 = getelementptr inbounds i32, ptr %9, i64 %5288
  %5291 = load i32, ptr %5290, align 4, !tbaa !5
  %5292 = mul nsw i32 %5291, %5289
  %5293 = add nsw i64 %5288, -1
  %5294 = trunc i64 %5288 to i32
  %5295 = icmp sgt i32 %5294, 0
  br i1 %5295, label %5287, label %5296, !llvm.loop !935

5296:                                             ; preds = %5287, %5278
  %5297 = phi i32 [ %5282, %5278 ], [ %5292, %5287 ]
  %5298 = and i64 %5247, 4294967295
  %5299 = getelementptr inbounds i32, ptr %6, i64 %5298
  %5300 = load i32, ptr %5299, align 4, !tbaa !5
  %5301 = mul nsw i32 %5300, %5297
  %5302 = add nsw i32 %5301, %5241
  %5303 = icmp sgt i64 %5239, 2
  %5304 = add nsw i64 %5240, -1
  %5305 = add i32 %5238, 1
  br i1 %5303, label %5237, label %5306, !llvm.loop !936

5306:                                             ; preds = %5296, %5232
  %5307 = phi i32 [ %5236, %5232 ], [ %5302, %5296 ]
  %5308 = sext i32 %5307 to i64
  %5309 = getelementptr inbounds i64, ptr %4903, i64 %5308
  %5310 = load i64, ptr %5309, align 8, !tbaa !120
  %5311 = sitofp i64 %5310 to double
  %5312 = fmul fast double %5311, %5311
  %5313 = fadd fast double %5312, %5233
  %5314 = fadd fast double %5235, 1.000000e+00
  %5315 = add nuw nsw i32 %5234, 1
  br i1 %5226, label %5316, label %5363

5316:                                             ; preds = %5306
  %5317 = load i32, ptr %4, align 4, !tbaa !5
  %5318 = load i32, ptr %12, align 4, !tbaa !5
  %5319 = add nsw i32 %5318, -1
  %5320 = icmp slt i32 %5317, %5319
  br i1 %5320, label %5340, label %5321

5321:                                             ; preds = %5316
  %5322 = icmp eq i32 %5317, %5319
  br i1 %5322, label %5323, label %5356

5323:                                             ; preds = %5321
  store i32 0, ptr %4, align 4, !tbaa !5
  %5324 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5324, ptr %6, align 4, !tbaa !5
  br i1 %5231, label %5363, label %5325

5325:                                             ; preds = %5323, %5350
  %5326 = phi i64 [ %5354, %5350 ], [ 1, %5323 ]
  %5327 = getelementptr inbounds i32, ptr %4, i64 %5326
  %5328 = load i32, ptr %5327, align 4, !tbaa !5
  %5329 = getelementptr inbounds i32, ptr %12, i64 %5326
  %5330 = load i32, ptr %5329, align 4, !tbaa !5
  %5331 = add nsw i32 %5330, -1
  %5332 = icmp slt i32 %5328, %5331
  br i1 %5332, label %5333, label %5348

5333:                                             ; preds = %5325
  br i1 %5320, label %5340, label %5334

5334:                                             ; preds = %5333
  %5335 = getelementptr inbounds i32, ptr %7, i64 %5326
  %5336 = load i32, ptr %5335, align 4, !tbaa !5
  %5337 = getelementptr inbounds i32, ptr %6, i64 %5326
  %5338 = load i32, ptr %5337, align 4, !tbaa !5
  %5339 = add nsw i32 %5338, %5336
  store i32 %5339, ptr %5337, align 4, !tbaa !5
  br label %5358

5340:                                             ; preds = %5316, %5333
  %5341 = phi i32 [ %5328, %5333 ], [ %5317, %5316 ]
  %5342 = phi ptr [ %5327, %5333 ], [ %4, %5316 ]
  %5343 = phi i64 [ %5326, %5333 ], [ 0, %5316 ]
  %5344 = add nsw i32 %5341, 1
  store i32 %5344, ptr %5342, align 4, !tbaa !5
  %5345 = getelementptr inbounds i32, ptr %7, i64 %5343
  %5346 = load i32, ptr %5345, align 4, !tbaa !5
  %5347 = getelementptr inbounds i32, ptr %6, i64 %5343
  br label %5358

5348:                                             ; preds = %5325
  %5349 = icmp eq i32 %5328, %5331
  br i1 %5349, label %5350, label %5356

5350:                                             ; preds = %5348
  store i32 0, ptr %5327, align 4, !tbaa !5
  %5351 = getelementptr inbounds i32, ptr %8, i64 %5326
  %5352 = load i32, ptr %5351, align 4, !tbaa !5
  %5353 = getelementptr inbounds i32, ptr %6, i64 %5326
  store i32 %5352, ptr %5353, align 4, !tbaa !5
  %5354 = add nuw nsw i64 %5326, 1
  %5355 = icmp eq i64 %5354, %5229
  br i1 %5355, label %5363, label %5325, !llvm.loop !937

5356:                                             ; preds = %5321, %5348
  store double %5313, ptr %4905, align 8, !tbaa !18
  %5357 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

5358:                                             ; preds = %5334, %5340
  %5359 = phi ptr [ %5347, %5340 ], [ %5327, %5334 ]
  %5360 = phi i32 [ %5346, %5340 ], [ 1, %5334 ]
  %5361 = load i32, ptr %5359, align 4, !tbaa !5
  %5362 = add nsw i32 %5361, %5360
  store i32 %5362, ptr %5359, align 4, !tbaa !5
  br label %5363

5363:                                             ; preds = %5350, %5358, %5323, %5306
  %5364 = icmp eq i32 %5315, %5
  br i1 %5364, label %5510, label %5232, !llvm.loop !938

5365:                                             ; preds = %5215, %5501
  %5366 = phi double [ 0.000000e+00, %5215 ], [ %5449, %5501 ]
  %5367 = phi i32 [ 0, %5215 ], [ %5450, %5501 ]
  %5368 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5216, label %5369, label %5438

5369:                                             ; preds = %5365, %5428
  %5370 = phi i32 [ %5437, %5428 ], [ 0, %5365 ]
  %5371 = phi i64 [ %5379, %5428 ], [ %5220, %5365 ]
  %5372 = phi i64 [ %5436, %5428 ], [ %5219, %5365 ]
  %5373 = phi i32 [ %5434, %5428 ], [ %5368, %5365 ]
  %5374 = sub i32 %5218, %5370
  %5375 = tail call i32 @llvm.smin.i32(i32 %5374, i32 0)
  %5376 = sub i32 %5374, %5375
  %5377 = zext i32 %5376 to i64
  %5378 = add nuw nsw i64 %5377, 1
  %5379 = add nsw i64 %5371, -1
  %5380 = icmp ult i32 %5376, 31
  br i1 %5380, label %5416, label %5381

5381:                                             ; preds = %5369
  %5382 = and i64 %5378, 8589934560
  %5383 = sub i64 %5372, %5382
  br label %5384

5384:                                             ; preds = %5384, %5381
  %5385 = phi i64 [ 0, %5381 ], [ %5408, %5384 ]
  %5386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5381 ], [ %5404, %5384 ]
  %5387 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5381 ], [ %5405, %5384 ]
  %5388 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5381 ], [ %5406, %5384 ]
  %5389 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5381 ], [ %5407, %5384 ]
  %5390 = sub i64 %5372, %5385
  %5391 = getelementptr inbounds i32, ptr %11, i64 %5390
  %5392 = getelementptr inbounds i32, ptr %5391, i64 -7
  %5393 = load <8 x i32>, ptr %5392, align 4, !tbaa !5
  %5394 = shufflevector <8 x i32> %5393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5395 = getelementptr inbounds i32, ptr %5391, i64 -15
  %5396 = load <8 x i32>, ptr %5395, align 4, !tbaa !5
  %5397 = shufflevector <8 x i32> %5396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5398 = getelementptr inbounds i32, ptr %5391, i64 -23
  %5399 = load <8 x i32>, ptr %5398, align 4, !tbaa !5
  %5400 = shufflevector <8 x i32> %5399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5401 = getelementptr inbounds i32, ptr %5391, i64 -31
  %5402 = load <8 x i32>, ptr %5401, align 4, !tbaa !5
  %5403 = shufflevector <8 x i32> %5402, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5404 = mul <8 x i32> %5394, %5386
  %5405 = mul <8 x i32> %5397, %5387
  %5406 = mul <8 x i32> %5400, %5388
  %5407 = mul <8 x i32> %5403, %5389
  %5408 = add nuw i64 %5385, 32
  %5409 = icmp eq i64 %5408, %5382
  br i1 %5409, label %5410, label %5384, !llvm.loop !939

5410:                                             ; preds = %5384
  %5411 = mul <8 x i32> %5405, %5404
  %5412 = mul <8 x i32> %5406, %5411
  %5413 = mul <8 x i32> %5407, %5412
  %5414 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5413)
  %5415 = icmp eq i64 %5378, %5382
  br i1 %5415, label %5428, label %5416

5416:                                             ; preds = %5369, %5410
  %5417 = phi i64 [ %5372, %5369 ], [ %5383, %5410 ]
  %5418 = phi i32 [ 1, %5369 ], [ %5414, %5410 ]
  br label %5419

5419:                                             ; preds = %5416, %5419
  %5420 = phi i64 [ %5425, %5419 ], [ %5417, %5416 ]
  %5421 = phi i32 [ %5424, %5419 ], [ %5418, %5416 ]
  %5422 = getelementptr inbounds i32, ptr %11, i64 %5420
  %5423 = load i32, ptr %5422, align 4, !tbaa !5
  %5424 = mul nsw i32 %5423, %5421
  %5425 = add nsw i64 %5420, -1
  %5426 = trunc i64 %5420 to i32
  %5427 = icmp sgt i32 %5426, 0
  br i1 %5427, label %5419, label %5428, !llvm.loop !940

5428:                                             ; preds = %5419, %5410
  %5429 = phi i32 [ %5414, %5410 ], [ %5424, %5419 ]
  %5430 = and i64 %5379, 4294967295
  %5431 = getelementptr inbounds i32, ptr %6, i64 %5430
  %5432 = load i32, ptr %5431, align 4, !tbaa !5
  %5433 = mul nsw i32 %5432, %5429
  %5434 = add nsw i32 %5433, %5373
  %5435 = icmp sgt i64 %5371, 2
  %5436 = add nsw i64 %5372, -1
  %5437 = add i32 %5370, 1
  br i1 %5435, label %5369, label %5438, !llvm.loop !941

5438:                                             ; preds = %5428, %5365
  %5439 = phi i32 [ %5368, %5365 ], [ %5434, %5428 ]
  %5440 = icmp slt i32 %5439, %5
  br i1 %5440, label %5443, label %5441

5441:                                             ; preds = %5438
  %5442 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5516

5443:                                             ; preds = %5438
  %5444 = sext i32 %5439 to i64
  %5445 = getelementptr inbounds i64, ptr %4903, i64 %5444
  %5446 = load i64, ptr %5445, align 8, !tbaa !120
  %5447 = sitofp i64 %5446 to double
  %5448 = fmul fast double %5447, %5447
  %5449 = fadd fast double %5448, %5366
  store double %5449, ptr %4905, align 8, !tbaa !18
  %5450 = add nuw nsw i32 %5367, 1
  br i1 %5217, label %5451, label %5501

5451:                                             ; preds = %5443
  %5452 = load i32, ptr %4, align 4, !tbaa !5
  %5453 = load i32, ptr %12, align 4, !tbaa !5
  %5454 = add nsw i32 %5453, -1
  %5455 = icmp slt i32 %5452, %5454
  br i1 %5455, label %5478, label %5456

5456:                                             ; preds = %5451
  %5457 = icmp eq i32 %5452, %5454
  br i1 %5457, label %5458, label %5494

5458:                                             ; preds = %5456
  store i32 0, ptr %4, align 4, !tbaa !5
  %5459 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5459, ptr %6, align 4, !tbaa !5
  br i1 %5222, label %5501, label %5460

5460:                                             ; preds = %5458, %5488
  %5461 = phi i64 [ %5492, %5488 ], [ 1, %5458 ]
  %5462 = getelementptr inbounds i32, ptr %4, i64 %5461
  %5463 = load i32, ptr %5462, align 4, !tbaa !5
  %5464 = getelementptr inbounds i32, ptr %12, i64 %5461
  %5465 = load i32, ptr %5464, align 4, !tbaa !5
  %5466 = add nsw i32 %5465, -1
  %5467 = icmp slt i32 %5463, %5466
  br i1 %5467, label %5468, label %5486

5468:                                             ; preds = %5460
  br i1 %5455, label %5478, label %5469

5469:                                             ; preds = %5468
  %5470 = shl i64 %5461, 32
  %5471 = add i64 %5470, -4294967296
  %5472 = ashr exact i64 %5471, 32
  %5473 = getelementptr inbounds i32, ptr %7, i64 %5472
  %5474 = load i32, ptr %5473, align 4, !tbaa !5
  %5475 = getelementptr inbounds i32, ptr %6, i64 %5461
  %5476 = load i32, ptr %5475, align 4, !tbaa !5
  %5477 = add nsw i32 %5476, %5474
  store i32 %5477, ptr %5475, align 4, !tbaa !5
  br label %5496

5478:                                             ; preds = %5451, %5468
  %5479 = phi i32 [ %5463, %5468 ], [ %5452, %5451 ]
  %5480 = phi ptr [ %5462, %5468 ], [ %4, %5451 ]
  %5481 = phi i64 [ %5461, %5468 ], [ 0, %5451 ]
  %5482 = add nsw i32 %5479, 1
  store i32 %5482, ptr %5480, align 4, !tbaa !5
  %5483 = getelementptr inbounds i32, ptr %7, i64 %5481
  %5484 = load i32, ptr %5483, align 4, !tbaa !5
  %5485 = getelementptr inbounds i32, ptr %6, i64 %5481
  br label %5496

5486:                                             ; preds = %5460
  %5487 = icmp eq i32 %5463, %5466
  br i1 %5487, label %5488, label %5494

5488:                                             ; preds = %5486
  store i32 0, ptr %5462, align 4, !tbaa !5
  %5489 = getelementptr inbounds i32, ptr %8, i64 %5461
  %5490 = load i32, ptr %5489, align 4, !tbaa !5
  %5491 = getelementptr inbounds i32, ptr %6, i64 %5461
  store i32 %5490, ptr %5491, align 4, !tbaa !5
  %5492 = add nuw nsw i64 %5461, 1
  %5493 = icmp eq i64 %5492, %5220
  br i1 %5493, label %5501, label %5460, !llvm.loop !942

5494:                                             ; preds = %5456, %5486
  %5495 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5516

5496:                                             ; preds = %5469, %5478
  %5497 = phi ptr [ %5485, %5478 ], [ %5462, %5469 ]
  %5498 = phi i32 [ %5484, %5478 ], [ 1, %5469 ]
  %5499 = load i32, ptr %5497, align 4, !tbaa !5
  %5500 = add nsw i32 %5499, %5498
  store i32 %5500, ptr %5497, align 4, !tbaa !5
  br label %5501

5501:                                             ; preds = %5488, %5496, %5458, %5443
  %5502 = icmp eq i32 %5450, %5
  br i1 %5502, label %5511, label %5365, !llvm.loop !943

5503:                                             ; preds = %4911
  %5504 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1478, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5511

5505:                                             ; preds = %2031
  store i16 %1981, ptr %1862, align 2, !tbaa !78
  br label %5511

5506:                                             ; preds = %2330
  store i16 %2280, ptr %1862, align 2, !tbaa !78
  br label %5511

5507:                                             ; preds = %4149
  store double %4099, ptr %3691, align 8, !tbaa !18
  br label %5511

5508:                                             ; preds = %4462
  store float %4412, ptr %4295, align 4, !tbaa !162
  br label %5511

5509:                                             ; preds = %4759
  store float %4709, ptr %4295, align 4, !tbaa !162
  br label %5511

5510:                                             ; preds = %5363
  store double %5313, ptr %4905, align 8, !tbaa !18
  br label %5511

5511:                                             ; preds = %5501, %5207, %5069, %4897, %4603, %4287, %3993, %3855, %3683, %3546, %3391, %3251, %3078, %2940, %2784, %2643, %2468, %2174, %1854, %1716, %1560, %1417, %1240, %1102, %946, %805, %630, %492, %336, %194, %5214, %5223, %5510, %4917, %4926, %4610, %4619, %5509, %4307, %4316, %5508, %4000, %4009, %5507, %3703, %3712, %3398, %3407, %3097, %3106, %2791, %2800, %2488, %2497, %2181, %2190, %5506, %1874, %1883, %5505, %1567, %1576, %1260, %1269, %953, %962, %650, %659, %343, %352, %38, %47, %4907, %5503, %4297, %4899, %3693, %4289, %3088, %3685, %2478, %3080, %1864, %2470, %1250, %1856, %640, %1242, %28, %632, %18
  %5512 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %632 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1242 ], [ 0.000000e+00, %640 ], [ 0.000000e+00, %1856 ], [ 0.000000e+00, %1250 ], [ 0.000000e+00, %2470 ], [ 0.000000e+00, %1864 ], [ 0.000000e+00, %3080 ], [ 0.000000e+00, %2478 ], [ 0.000000e+00, %3685 ], [ 0.000000e+00, %3088 ], [ 0.000000e+00, %4289 ], [ 0.000000e+00, %3693 ], [ 0.000000e+00, %4899 ], [ 0.000000e+00, %4297 ], [ 0.000000e+00, %5503 ], [ 0.000000e+00, %4907 ], [ 0.000000e+00, %47 ], [ 0.000000e+00, %38 ], [ 0.000000e+00, %352 ], [ 0.000000e+00, %343 ], [ 0.000000e+00, %659 ], [ 0.000000e+00, %650 ], [ 0.000000e+00, %962 ], [ 0.000000e+00, %953 ], [ 0.000000e+00, %1269 ], [ 0.000000e+00, %1260 ], [ 0.000000e+00, %1576 ], [ 0.000000e+00, %1567 ], [ %1982, %5505 ], [ 0.000000e+00, %1883 ], [ 0.000000e+00, %1874 ], [ %2281, %5506 ], [ 0.000000e+00, %2190 ], [ 0.000000e+00, %2181 ], [ 0.000000e+00, %2497 ], [ 0.000000e+00, %2488 ], [ 0.000000e+00, %2800 ], [ 0.000000e+00, %2791 ], [ 0.000000e+00, %3106 ], [ 0.000000e+00, %3097 ], [ 0.000000e+00, %3407 ], [ 0.000000e+00, %3398 ], [ 0.000000e+00, %3712 ], [ 0.000000e+00, %3703 ], [ %4100, %5507 ], [ 0.000000e+00, %4009 ], [ 0.000000e+00, %4000 ], [ %4413, %5508 ], [ 0.000000e+00, %4316 ], [ 0.000000e+00, %4307 ], [ %4710, %5509 ], [ 0.000000e+00, %4619 ], [ 0.000000e+00, %4610 ], [ 0.000000e+00, %4926 ], [ 0.000000e+00, %4917 ], [ %5314, %5510 ], [ 0.000000e+00, %5223 ], [ 0.000000e+00, %5214 ], [ %145, %194 ], [ 0.000000e+00, %336 ], [ %443, %492 ], [ 0.000000e+00, %630 ], [ %756, %805 ], [ 0.000000e+00, %946 ], [ %1053, %1102 ], [ 0.000000e+00, %1240 ], [ %1368, %1417 ], [ 0.000000e+00, %1560 ], [ %1667, %1716 ], [ 0.000000e+00, %1854 ], [ 0.000000e+00, %2174 ], [ 0.000000e+00, %2468 ], [ %2594, %2643 ], [ 0.000000e+00, %2784 ], [ %2891, %2940 ], [ 0.000000e+00, %3078 ], [ %3202, %3251 ], [ 0.000000e+00, %3391 ], [ %3497, %3546 ], [ 0.000000e+00, %3683 ], [ %3806, %3855 ], [ 0.000000e+00, %3993 ], [ 0.000000e+00, %4287 ], [ 0.000000e+00, %4603 ], [ 0.000000e+00, %4897 ], [ %5020, %5069 ], [ 0.000000e+00, %5207 ], [ 0.000000e+00, %5501 ]
  %5513 = phi i32 [ %10, %18 ], [ 1, %632 ], [ 1, %28 ], [ 1, %1242 ], [ 1, %640 ], [ 1, %1856 ], [ 1, %1250 ], [ 1, %2470 ], [ 1, %1864 ], [ 1, %3080 ], [ 1, %2478 ], [ 1, %3685 ], [ 1, %3088 ], [ 1, %4289 ], [ 1, %3693 ], [ 1, %4899 ], [ 1, %4297 ], [ 1, %5503 ], [ 1, %4907 ], [ 1, %47 ], [ 1, %38 ], [ 1, %352 ], [ 1, %343 ], [ 1, %659 ], [ 1, %650 ], [ 1, %962 ], [ 1, %953 ], [ 1, %1269 ], [ 1, %1260 ], [ 1, %1576 ], [ 1, %1567 ], [ %1890, %5505 ], [ 1, %1883 ], [ 1, %1874 ], [ %2197, %5506 ], [ 1, %2190 ], [ 1, %2181 ], [ 1, %2497 ], [ 1, %2488 ], [ 1, %2800 ], [ 1, %2791 ], [ 1, %3106 ], [ 1, %3097 ], [ 1, %3407 ], [ 1, %3398 ], [ 1, %3712 ], [ 1, %3703 ], [ %4016, %5507 ], [ 1, %4009 ], [ 1, %4000 ], [ %4323, %5508 ], [ 1, %4316 ], [ 1, %4307 ], [ %4626, %5509 ], [ 1, %4619 ], [ 1, %4610 ], [ 1, %4926 ], [ 1, %4917 ], [ %5230, %5510 ], [ 1, %5223 ], [ 1, %5214 ], [ %54, %194 ], [ %45, %336 ], [ %359, %492 ], [ %350, %630 ], [ %666, %805 ], [ %657, %946 ], [ %969, %1102 ], [ %960, %1240 ], [ %1276, %1417 ], [ %1267, %1560 ], [ %1583, %1716 ], [ %1574, %1854 ], [ %1881, %2174 ], [ %2188, %2468 ], [ %2504, %2643 ], [ %2495, %2784 ], [ %2807, %2940 ], [ %2798, %3078 ], [ %3113, %3251 ], [ %3104, %3391 ], [ %3414, %3546 ], [ %3405, %3683 ], [ %3719, %3855 ], [ %3710, %3993 ], [ %4007, %4287 ], [ %4314, %4603 ], [ %4617, %4897 ], [ %4933, %5069 ], [ %4924, %5207 ], [ %5221, %5501 ]
  %5514 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5513, ptr noundef nonnull @.str.5) #3
  %5515 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5512, ptr noundef nonnull @.str.6) #3
  br label %5516

5516:                                             ; preds = %5062, %5147, %5200, %5356, %5441, %5494, %4455, %4540, %4596, %4752, %4837, %4890, %3848, %3933, %3986, %4142, %4227, %4280, %3244, %3329, %3384, %3539, %3624, %3676, %2636, %2720, %2777, %2933, %3017, %3071, %2024, %2109, %2167, %2323, %2408, %2461, %1410, %1494, %1553, %1709, %1793, %1847, %798, %882, %939, %1095, %1179, %1233, %187, %271, %329, %485, %569, %623, %5511
  %5517 = phi i32 [ 0, %5511 ], [ -1, %623 ], [ -1, %569 ], [ -1, %485 ], [ -1, %329 ], [ -1, %271 ], [ -1, %187 ], [ -1, %1233 ], [ -1, %1179 ], [ -1, %1095 ], [ -1, %939 ], [ -1, %882 ], [ -1, %798 ], [ -1, %1847 ], [ -1, %1793 ], [ -1, %1709 ], [ -1, %1553 ], [ -1, %1494 ], [ -1, %1410 ], [ -1, %2461 ], [ -1, %2408 ], [ -1, %2323 ], [ -1, %2167 ], [ -1, %2109 ], [ -1, %2024 ], [ -1, %3071 ], [ -1, %3017 ], [ -1, %2933 ], [ -1, %2777 ], [ -1, %2720 ], [ -1, %2636 ], [ -1, %3676 ], [ -1, %3624 ], [ -1, %3539 ], [ -1, %3384 ], [ -1, %3329 ], [ -1, %3244 ], [ -1, %4280 ], [ -1, %4227 ], [ -1, %4142 ], [ -1, %3986 ], [ -1, %3933 ], [ -1, %3848 ], [ -1, %4890 ], [ -1, %4837 ], [ -1, %4752 ], [ -1, %4596 ], [ -1, %4540 ], [ -1, %4455 ], [ -1, %5494 ], [ -1, %5441 ], [ -1, %5356 ], [ -1, %5200 ], [ -1, %5147 ], [ -1, %5062 ]
  ret i32 %5517
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm2_REAL(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5491 [
    i32 101, label %22
    i32 102, label %629
    i32 103, label %1239
    i32 104, label %1846
    i32 105, label %2457
    i32 106, label %3067
    i32 107, label %3677
    i32 108, label %4276
    i32 109, label %4886
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = load double, ptr %24, align 8, !tbaa !18
  %30 = fptoui double %29 to i8
  %31 = mul i8 %30, %30
  store i8 %31, ptr %26, align 1, !tbaa !11
  br label %5491

32:                                               ; preds = %22
  switch i32 %1, label %627 [
    i32 1, label %33
    i32 0, label %333
  ]

33:                                               ; preds = %32
  %34 = getelementptr inbounds i32, ptr %3, i64 %19
  %35 = load i32, ptr %34, align 4, !tbaa !5
  %36 = icmp eq i32 %35, 0
  %37 = icmp sgt i32 %5, 0
  br i1 %36, label %47, label %38

38:                                               ; preds = %33
  br i1 %37, label %39, label %5491

39:                                               ; preds = %38
  %40 = icmp sgt i32 %13, 1
  %41 = icmp sgt i32 %13, 0
  %42 = add i32 %13, -2
  %43 = zext i32 %42 to i64
  %44 = zext i32 %13 to i64
  %45 = add nuw i32 %5, 1
  %46 = icmp eq i32 %13, 1
  br label %195

47:                                               ; preds = %33
  br i1 %37, label %48, label %5491

48:                                               ; preds = %47
  %49 = icmp sgt i32 %13, 1
  %50 = icmp sgt i32 %13, 0
  %51 = add i32 %13, -2
  %52 = zext i32 %51 to i64
  %53 = zext i32 %13 to i64
  %54 = add nuw i32 %5, 1
  %55 = icmp eq i32 %13, 1
  br label %56

56:                                               ; preds = %48, %193
  %57 = phi i32 [ 0, %48 ], [ %145, %193 ]
  %58 = phi double [ 0.000000e+00, %48 ], [ %144, %193 ]
  %59 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %49, label %60, label %129

60:                                               ; preds = %56, %119
  %61 = phi i32 [ %128, %119 ], [ 0, %56 ]
  %62 = phi i64 [ %70, %119 ], [ %53, %56 ]
  %63 = phi i64 [ %127, %119 ], [ %52, %56 ]
  %64 = phi i32 [ %125, %119 ], [ %59, %56 ]
  %65 = sub i32 %51, %61
  %66 = tail call i32 @llvm.smin.i32(i32 %65, i32 0)
  %67 = sub i32 %65, %66
  %68 = zext i32 %67 to i64
  %69 = add nuw nsw i64 %68, 1
  %70 = add nsw i64 %62, -1
  %71 = icmp ult i32 %67, 31
  br i1 %71, label %107, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 8589934560
  %74 = sub i64 %63, %73
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi i64 [ 0, %72 ], [ %99, %75 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %95, %75 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %96, %75 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %97, %75 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %98, %75 ]
  %81 = sub i64 %63, %76
  %82 = getelementptr inbounds i32, ptr %9, i64 %81
  %83 = getelementptr inbounds i32, ptr %82, i64 -7
  %84 = load <8 x i32>, ptr %83, align 4, !tbaa !5
  %85 = shufflevector <8 x i32> %84, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %86 = getelementptr inbounds i32, ptr %82, i64 -15
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !5
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %82, i64 -23
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !5
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %82, i64 -31
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !5
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = mul <8 x i32> %85, %77
  %96 = mul <8 x i32> %88, %78
  %97 = mul <8 x i32> %91, %79
  %98 = mul <8 x i32> %94, %80
  %99 = add nuw i64 %76, 32
  %100 = icmp eq i64 %99, %73
  br i1 %100, label %101, label %75, !llvm.loop !944

101:                                              ; preds = %75
  %102 = mul <8 x i32> %96, %95
  %103 = mul <8 x i32> %97, %102
  %104 = mul <8 x i32> %98, %103
  %105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %104)
  %106 = icmp eq i64 %69, %73
  br i1 %106, label %119, label %107

107:                                              ; preds = %60, %101
  %108 = phi i64 [ %63, %60 ], [ %74, %101 ]
  %109 = phi i32 [ 1, %60 ], [ %105, %101 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, ptr %9, i64 %111
  %114 = load i32, ptr %113, align 4, !tbaa !5
  %115 = mul nsw i32 %114, %112
  %116 = add nsw i64 %111, -1
  %117 = trunc i64 %111 to i32
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %110, label %119, !llvm.loop !945

119:                                              ; preds = %110, %101
  %120 = phi i32 [ %105, %101 ], [ %115, %110 ]
  %121 = and i64 %70, 4294967295
  %122 = getelementptr inbounds i32, ptr %6, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !5
  %124 = mul nsw i32 %123, %120
  %125 = add nsw i32 %124, %64
  %126 = icmp sgt i64 %62, 2
  %127 = add nsw i64 %63, -1
  %128 = add i32 %61, 1
  br i1 %126, label %60, label %129, !llvm.loop !946

129:                                              ; preds = %119, %56
  %130 = phi i32 [ %59, %56 ], [ %125, %119 ]
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds double, ptr %2, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !18
  %134 = getelementptr inbounds double, ptr %24, i64 %131
  %135 = load double, ptr %134, align 8, !tbaa !18
  %136 = fptoui double %135 to i8
  %137 = load i8, ptr %26, align 1, !tbaa !11
  %138 = uitofp i8 %137 to double
  %139 = uitofp i8 %136 to double
  %140 = fmul fast double %133, %139
  %141 = fmul fast double %140, %140
  %142 = fadd fast double %141, %138
  %143 = fptoui double %142 to i8
  store i8 %143, ptr %26, align 1, !tbaa !11
  %144 = fadd fast double %133, %58
  %145 = add nuw nsw i32 %57, 1
  br i1 %50, label %146, label %193

146:                                              ; preds = %129
  %147 = load i32, ptr %4, align 4, !tbaa !5
  %148 = load i32, ptr %12, align 4, !tbaa !5
  %149 = add nsw i32 %148, -1
  %150 = icmp slt i32 %147, %149
  br i1 %150, label %170, label %151

151:                                              ; preds = %146
  %152 = icmp eq i32 %147, %149
  br i1 %152, label %153, label %186

153:                                              ; preds = %151
  store i32 0, ptr %4, align 4, !tbaa !5
  %154 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %154, ptr %6, align 4, !tbaa !5
  br i1 %55, label %193, label %155

155:                                              ; preds = %153, %180
  %156 = phi i64 [ %184, %180 ], [ 1, %153 ]
  %157 = getelementptr inbounds i32, ptr %4, i64 %156
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = getelementptr inbounds i32, ptr %12, i64 %156
  %160 = load i32, ptr %159, align 4, !tbaa !5
  %161 = add nsw i32 %160, -1
  %162 = icmp slt i32 %158, %161
  br i1 %162, label %163, label %178

163:                                              ; preds = %155
  br i1 %150, label %170, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds i32, ptr %7, i64 %156
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = getelementptr inbounds i32, ptr %6, i64 %156
  %168 = load i32, ptr %167, align 4, !tbaa !5
  %169 = add nsw i32 %168, %166
  store i32 %169, ptr %167, align 4, !tbaa !5
  br label %188

170:                                              ; preds = %146, %163
  %171 = phi i32 [ %158, %163 ], [ %147, %146 ]
  %172 = phi ptr [ %157, %163 ], [ %4, %146 ]
  %173 = phi i64 [ %156, %163 ], [ 0, %146 ]
  %174 = add nsw i32 %171, 1
  store i32 %174, ptr %172, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %7, i64 %173
  %176 = load i32, ptr %175, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %6, i64 %173
  br label %188

178:                                              ; preds = %155
  %179 = icmp eq i32 %158, %161
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  store i32 0, ptr %157, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %8, i64 %156
  %182 = load i32, ptr %181, align 4, !tbaa !5
  %183 = getelementptr inbounds i32, ptr %6, i64 %156
  store i32 %182, ptr %183, align 4, !tbaa !5
  %184 = add nuw nsw i64 %156, 1
  %185 = icmp eq i64 %184, %53
  br i1 %185, label %193, label %155, !llvm.loop !947

186:                                              ; preds = %151, %178
  %187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

188:                                              ; preds = %164, %170
  %189 = phi ptr [ %177, %170 ], [ %157, %164 ]
  %190 = phi i32 [ %176, %170 ], [ 1, %164 ]
  %191 = load i32, ptr %189, align 4, !tbaa !5
  %192 = add nsw i32 %191, %190
  store i32 %192, ptr %189, align 4, !tbaa !5
  br label %193

193:                                              ; preds = %180, %188, %153, %129
  %194 = icmp eq i32 %145, %5
  br i1 %194, label %5491, label %56, !llvm.loop !948

195:                                              ; preds = %39, %331
  %196 = phi i32 [ 0, %39 ], [ %280, %331 ]
  %197 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %40, label %198, label %267

198:                                              ; preds = %195, %257
  %199 = phi i32 [ %266, %257 ], [ 0, %195 ]
  %200 = phi i64 [ %208, %257 ], [ %44, %195 ]
  %201 = phi i64 [ %265, %257 ], [ %43, %195 ]
  %202 = phi i32 [ %263, %257 ], [ %197, %195 ]
  %203 = sub i32 %42, %199
  %204 = tail call i32 @llvm.smin.i32(i32 %203, i32 0)
  %205 = sub i32 %203, %204
  %206 = zext i32 %205 to i64
  %207 = add nuw nsw i64 %206, 1
  %208 = add nsw i64 %200, -1
  %209 = icmp ult i32 %205, 31
  br i1 %209, label %245, label %210

210:                                              ; preds = %198
  %211 = and i64 %207, 8589934560
  %212 = sub i64 %201, %211
  br label %213

213:                                              ; preds = %213, %210
  %214 = phi i64 [ 0, %210 ], [ %237, %213 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %233, %213 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %234, %213 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %235, %213 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %236, %213 ]
  %219 = sub i64 %201, %214
  %220 = getelementptr inbounds i32, ptr %11, i64 %219
  %221 = getelementptr inbounds i32, ptr %220, i64 -7
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %220, i64 -15
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %220, i64 -23
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %220, i64 -31
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = mul <8 x i32> %223, %215
  %234 = mul <8 x i32> %226, %216
  %235 = mul <8 x i32> %229, %217
  %236 = mul <8 x i32> %232, %218
  %237 = add nuw i64 %214, 32
  %238 = icmp eq i64 %237, %211
  br i1 %238, label %239, label %213, !llvm.loop !949

239:                                              ; preds = %213
  %240 = mul <8 x i32> %234, %233
  %241 = mul <8 x i32> %235, %240
  %242 = mul <8 x i32> %236, %241
  %243 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %242)
  %244 = icmp eq i64 %207, %211
  br i1 %244, label %257, label %245

245:                                              ; preds = %198, %239
  %246 = phi i64 [ %201, %198 ], [ %212, %239 ]
  %247 = phi i32 [ 1, %198 ], [ %243, %239 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %254, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %253, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i32, ptr %11, i64 %249
  %252 = load i32, ptr %251, align 4, !tbaa !5
  %253 = mul nsw i32 %252, %250
  %254 = add nsw i64 %249, -1
  %255 = trunc i64 %249 to i32
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %248, label %257, !llvm.loop !950

257:                                              ; preds = %248, %239
  %258 = phi i32 [ %243, %239 ], [ %253, %248 ]
  %259 = and i64 %208, 4294967295
  %260 = getelementptr inbounds i32, ptr %6, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !5
  %262 = mul nsw i32 %261, %258
  %263 = add nsw i32 %262, %202
  %264 = icmp sgt i64 %200, 2
  %265 = add nsw i64 %201, -1
  %266 = add i32 %199, 1
  br i1 %264, label %198, label %267, !llvm.loop !951

267:                                              ; preds = %257, %195
  %268 = phi i32 [ %197, %195 ], [ %263, %257 ]
  %269 = icmp slt i32 %268, %5
  br i1 %269, label %272, label %270

270:                                              ; preds = %267
  %271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

272:                                              ; preds = %267
  %273 = sext i32 %268 to i64
  %274 = getelementptr inbounds double, ptr %24, i64 %273
  %275 = load double, ptr %274, align 8, !tbaa !18
  %276 = fptoui double %275 to i8
  %277 = load i8, ptr %26, align 1, !tbaa !11
  %278 = mul i8 %276, %276
  %279 = add i8 %278, %277
  store i8 %279, ptr %26, align 1, !tbaa !11
  %280 = add nuw nsw i32 %196, 1
  br i1 %41, label %281, label %331

281:                                              ; preds = %272
  %282 = load i32, ptr %4, align 4, !tbaa !5
  %283 = load i32, ptr %12, align 4, !tbaa !5
  %284 = add nsw i32 %283, -1
  %285 = icmp slt i32 %282, %284
  br i1 %285, label %308, label %286

286:                                              ; preds = %281
  %287 = icmp eq i32 %282, %284
  br i1 %287, label %288, label %324

288:                                              ; preds = %286
  store i32 0, ptr %4, align 4, !tbaa !5
  %289 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %289, ptr %6, align 4, !tbaa !5
  br i1 %46, label %331, label %290

290:                                              ; preds = %288, %318
  %291 = phi i64 [ %322, %318 ], [ 1, %288 ]
  %292 = getelementptr inbounds i32, ptr %4, i64 %291
  %293 = load i32, ptr %292, align 4, !tbaa !5
  %294 = getelementptr inbounds i32, ptr %12, i64 %291
  %295 = load i32, ptr %294, align 4, !tbaa !5
  %296 = add nsw i32 %295, -1
  %297 = icmp slt i32 %293, %296
  br i1 %297, label %298, label %316

298:                                              ; preds = %290
  br i1 %285, label %308, label %299

299:                                              ; preds = %298
  %300 = shl i64 %291, 32
  %301 = add i64 %300, -4294967296
  %302 = ashr exact i64 %301, 32
  %303 = getelementptr inbounds i32, ptr %7, i64 %302
  %304 = load i32, ptr %303, align 4, !tbaa !5
  %305 = getelementptr inbounds i32, ptr %6, i64 %291
  %306 = load i32, ptr %305, align 4, !tbaa !5
  %307 = add nsw i32 %306, %304
  store i32 %307, ptr %305, align 4, !tbaa !5
  br label %326

308:                                              ; preds = %281, %298
  %309 = phi i32 [ %293, %298 ], [ %282, %281 ]
  %310 = phi ptr [ %292, %298 ], [ %4, %281 ]
  %311 = phi i64 [ %291, %298 ], [ 0, %281 ]
  %312 = add nsw i32 %309, 1
  store i32 %312, ptr %310, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %7, i64 %311
  %314 = load i32, ptr %313, align 4, !tbaa !5
  %315 = getelementptr inbounds i32, ptr %6, i64 %311
  br label %326

316:                                              ; preds = %290
  %317 = icmp eq i32 %293, %296
  br i1 %317, label %318, label %324

318:                                              ; preds = %316
  store i32 0, ptr %292, align 4, !tbaa !5
  %319 = getelementptr inbounds i32, ptr %8, i64 %291
  %320 = load i32, ptr %319, align 4, !tbaa !5
  %321 = getelementptr inbounds i32, ptr %6, i64 %291
  store i32 %320, ptr %321, align 4, !tbaa !5
  %322 = add nuw nsw i64 %291, 1
  %323 = icmp eq i64 %322, %44
  br i1 %323, label %331, label %290, !llvm.loop !952

324:                                              ; preds = %286, %316
  %325 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

326:                                              ; preds = %299, %308
  %327 = phi ptr [ %315, %308 ], [ %292, %299 ]
  %328 = phi i32 [ %314, %308 ], [ 1, %299 ]
  %329 = load i32, ptr %327, align 4, !tbaa !5
  %330 = add nsw i32 %329, %328
  store i32 %330, ptr %327, align 4, !tbaa !5
  br label %331

331:                                              ; preds = %318, %326, %288, %272
  %332 = icmp eq i32 %280, %5
  br i1 %332, label %5491, label %195, !llvm.loop !953

333:                                              ; preds = %32
  %334 = getelementptr inbounds i32, ptr %3, i64 %19
  %335 = load i32, ptr %334, align 4, !tbaa !5
  %336 = icmp eq i32 %335, 0
  %337 = icmp sgt i32 %5, 0
  br i1 %336, label %347, label %338

338:                                              ; preds = %333
  br i1 %337, label %339, label %5491

339:                                              ; preds = %338
  %340 = icmp sgt i32 %13, 1
  %341 = icmp sgt i32 %13, 0
  %342 = add i32 %13, -2
  %343 = zext i32 %342 to i64
  %344 = zext i32 %13 to i64
  %345 = add nuw i32 %5, 1
  %346 = icmp eq i32 %13, 1
  br label %489

347:                                              ; preds = %333
  br i1 %337, label %348, label %5491

348:                                              ; preds = %347
  %349 = icmp sgt i32 %13, 1
  %350 = icmp sgt i32 %13, 0
  %351 = add i32 %13, -2
  %352 = zext i32 %351 to i64
  %353 = zext i32 %13 to i64
  %354 = add nuw i32 %5, 1
  %355 = icmp eq i32 %13, 1
  br label %356

356:                                              ; preds = %348, %487
  %357 = phi i32 [ 0, %348 ], [ %439, %487 ]
  %358 = phi double [ 0.000000e+00, %348 ], [ %438, %487 ]
  %359 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %349, label %360, label %429

360:                                              ; preds = %356, %419
  %361 = phi i32 [ %428, %419 ], [ 0, %356 ]
  %362 = phi i64 [ %370, %419 ], [ %353, %356 ]
  %363 = phi i64 [ %427, %419 ], [ %352, %356 ]
  %364 = phi i32 [ %425, %419 ], [ %359, %356 ]
  %365 = sub i32 %351, %361
  %366 = tail call i32 @llvm.smin.i32(i32 %365, i32 0)
  %367 = sub i32 %365, %366
  %368 = zext i32 %367 to i64
  %369 = add nuw nsw i64 %368, 1
  %370 = add nsw i64 %362, -1
  %371 = icmp ult i32 %367, 31
  br i1 %371, label %407, label %372

372:                                              ; preds = %360
  %373 = and i64 %369, 8589934560
  %374 = sub i64 %363, %373
  br label %375

375:                                              ; preds = %375, %372
  %376 = phi i64 [ 0, %372 ], [ %399, %375 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %395, %375 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %396, %375 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %397, %375 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %398, %375 ]
  %381 = sub i64 %363, %376
  %382 = getelementptr inbounds i32, ptr %9, i64 %381
  %383 = getelementptr inbounds i32, ptr %382, i64 -7
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %382, i64 -15
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %382, i64 -23
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %382, i64 -31
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !5
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = mul <8 x i32> %385, %377
  %396 = mul <8 x i32> %388, %378
  %397 = mul <8 x i32> %391, %379
  %398 = mul <8 x i32> %394, %380
  %399 = add nuw i64 %376, 32
  %400 = icmp eq i64 %399, %373
  br i1 %400, label %401, label %375, !llvm.loop !954

401:                                              ; preds = %375
  %402 = mul <8 x i32> %396, %395
  %403 = mul <8 x i32> %397, %402
  %404 = mul <8 x i32> %398, %403
  %405 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %404)
  %406 = icmp eq i64 %369, %373
  br i1 %406, label %419, label %407

407:                                              ; preds = %360, %401
  %408 = phi i64 [ %363, %360 ], [ %374, %401 ]
  %409 = phi i32 [ 1, %360 ], [ %405, %401 ]
  br label %410

410:                                              ; preds = %407, %410
  %411 = phi i64 [ %416, %410 ], [ %408, %407 ]
  %412 = phi i32 [ %415, %410 ], [ %409, %407 ]
  %413 = getelementptr inbounds i32, ptr %9, i64 %411
  %414 = load i32, ptr %413, align 4, !tbaa !5
  %415 = mul nsw i32 %414, %412
  %416 = add nsw i64 %411, -1
  %417 = trunc i64 %411 to i32
  %418 = icmp sgt i32 %417, 0
  br i1 %418, label %410, label %419, !llvm.loop !955

419:                                              ; preds = %410, %401
  %420 = phi i32 [ %405, %401 ], [ %415, %410 ]
  %421 = and i64 %370, 4294967295
  %422 = getelementptr inbounds i32, ptr %6, i64 %421
  %423 = load i32, ptr %422, align 4, !tbaa !5
  %424 = mul nsw i32 %423, %420
  %425 = add nsw i32 %424, %364
  %426 = icmp sgt i64 %362, 2
  %427 = add nsw i64 %363, -1
  %428 = add i32 %361, 1
  br i1 %426, label %360, label %429, !llvm.loop !956

429:                                              ; preds = %419, %356
  %430 = phi i32 [ %359, %356 ], [ %425, %419 ]
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds double, ptr %24, i64 %431
  %433 = load double, ptr %432, align 8, !tbaa !18
  %434 = fptoui double %433 to i8
  %435 = load i8, ptr %26, align 1, !tbaa !11
  %436 = mul i8 %434, %434
  %437 = add i8 %436, %435
  store i8 %437, ptr %26, align 1, !tbaa !11
  %438 = fadd fast double %358, 1.000000e+00
  %439 = add nuw nsw i32 %357, 1
  br i1 %350, label %440, label %487

440:                                              ; preds = %429
  %441 = load i32, ptr %4, align 4, !tbaa !5
  %442 = load i32, ptr %12, align 4, !tbaa !5
  %443 = add nsw i32 %442, -1
  %444 = icmp slt i32 %441, %443
  br i1 %444, label %464, label %445

445:                                              ; preds = %440
  %446 = icmp eq i32 %441, %443
  br i1 %446, label %447, label %480

447:                                              ; preds = %445
  store i32 0, ptr %4, align 4, !tbaa !5
  %448 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %448, ptr %6, align 4, !tbaa !5
  br i1 %355, label %487, label %449

449:                                              ; preds = %447, %474
  %450 = phi i64 [ %478, %474 ], [ 1, %447 ]
  %451 = getelementptr inbounds i32, ptr %4, i64 %450
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %12, i64 %450
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, -1
  %456 = icmp slt i32 %452, %455
  br i1 %456, label %457, label %472

457:                                              ; preds = %449
  br i1 %444, label %464, label %458

458:                                              ; preds = %457
  %459 = getelementptr inbounds i32, ptr %7, i64 %450
  %460 = load i32, ptr %459, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %6, i64 %450
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = add nsw i32 %462, %460
  store i32 %463, ptr %461, align 4, !tbaa !5
  br label %482

464:                                              ; preds = %440, %457
  %465 = phi i32 [ %452, %457 ], [ %441, %440 ]
  %466 = phi ptr [ %451, %457 ], [ %4, %440 ]
  %467 = phi i64 [ %450, %457 ], [ 0, %440 ]
  %468 = add nsw i32 %465, 1
  store i32 %468, ptr %466, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %7, i64 %467
  %470 = load i32, ptr %469, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %6, i64 %467
  br label %482

472:                                              ; preds = %449
  %473 = icmp eq i32 %452, %455
  br i1 %473, label %474, label %480

474:                                              ; preds = %472
  store i32 0, ptr %451, align 4, !tbaa !5
  %475 = getelementptr inbounds i32, ptr %8, i64 %450
  %476 = load i32, ptr %475, align 4, !tbaa !5
  %477 = getelementptr inbounds i32, ptr %6, i64 %450
  store i32 %476, ptr %477, align 4, !tbaa !5
  %478 = add nuw nsw i64 %450, 1
  %479 = icmp eq i64 %478, %353
  br i1 %479, label %487, label %449, !llvm.loop !957

480:                                              ; preds = %445, %472
  %481 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

482:                                              ; preds = %458, %464
  %483 = phi ptr [ %471, %464 ], [ %451, %458 ]
  %484 = phi i32 [ %470, %464 ], [ 1, %458 ]
  %485 = load i32, ptr %483, align 4, !tbaa !5
  %486 = add nsw i32 %485, %484
  store i32 %486, ptr %483, align 4, !tbaa !5
  br label %487

487:                                              ; preds = %474, %482, %447, %429
  %488 = icmp eq i32 %439, %5
  br i1 %488, label %5491, label %356, !llvm.loop !958

489:                                              ; preds = %339, %625
  %490 = phi i32 [ 0, %339 ], [ %574, %625 ]
  %491 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %340, label %492, label %561

492:                                              ; preds = %489, %551
  %493 = phi i32 [ %560, %551 ], [ 0, %489 ]
  %494 = phi i64 [ %502, %551 ], [ %344, %489 ]
  %495 = phi i64 [ %559, %551 ], [ %343, %489 ]
  %496 = phi i32 [ %557, %551 ], [ %491, %489 ]
  %497 = sub i32 %342, %493
  %498 = tail call i32 @llvm.smin.i32(i32 %497, i32 0)
  %499 = sub i32 %497, %498
  %500 = zext i32 %499 to i64
  %501 = add nuw nsw i64 %500, 1
  %502 = add nsw i64 %494, -1
  %503 = icmp ult i32 %499, 31
  br i1 %503, label %539, label %504

504:                                              ; preds = %492
  %505 = and i64 %501, 8589934560
  %506 = sub i64 %495, %505
  br label %507

507:                                              ; preds = %507, %504
  %508 = phi i64 [ 0, %504 ], [ %531, %507 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %527, %507 ]
  %510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %528, %507 ]
  %511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %529, %507 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %530, %507 ]
  %513 = sub i64 %495, %508
  %514 = getelementptr inbounds i32, ptr %11, i64 %513
  %515 = getelementptr inbounds i32, ptr %514, i64 -7
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %514, i64 -15
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %514, i64 -23
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %514, i64 -31
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !5
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = mul <8 x i32> %517, %509
  %528 = mul <8 x i32> %520, %510
  %529 = mul <8 x i32> %523, %511
  %530 = mul <8 x i32> %526, %512
  %531 = add nuw i64 %508, 32
  %532 = icmp eq i64 %531, %505
  br i1 %532, label %533, label %507, !llvm.loop !959

533:                                              ; preds = %507
  %534 = mul <8 x i32> %528, %527
  %535 = mul <8 x i32> %529, %534
  %536 = mul <8 x i32> %530, %535
  %537 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %536)
  %538 = icmp eq i64 %501, %505
  br i1 %538, label %551, label %539

539:                                              ; preds = %492, %533
  %540 = phi i64 [ %495, %492 ], [ %506, %533 ]
  %541 = phi i32 [ 1, %492 ], [ %537, %533 ]
  br label %542

542:                                              ; preds = %539, %542
  %543 = phi i64 [ %548, %542 ], [ %540, %539 ]
  %544 = phi i32 [ %547, %542 ], [ %541, %539 ]
  %545 = getelementptr inbounds i32, ptr %11, i64 %543
  %546 = load i32, ptr %545, align 4, !tbaa !5
  %547 = mul nsw i32 %546, %544
  %548 = add nsw i64 %543, -1
  %549 = trunc i64 %543 to i32
  %550 = icmp sgt i32 %549, 0
  br i1 %550, label %542, label %551, !llvm.loop !960

551:                                              ; preds = %542, %533
  %552 = phi i32 [ %537, %533 ], [ %547, %542 ]
  %553 = and i64 %502, 4294967295
  %554 = getelementptr inbounds i32, ptr %6, i64 %553
  %555 = load i32, ptr %554, align 4, !tbaa !5
  %556 = mul nsw i32 %555, %552
  %557 = add nsw i32 %556, %496
  %558 = icmp sgt i64 %494, 2
  %559 = add nsw i64 %495, -1
  %560 = add i32 %493, 1
  br i1 %558, label %492, label %561, !llvm.loop !961

561:                                              ; preds = %551, %489
  %562 = phi i32 [ %491, %489 ], [ %557, %551 ]
  %563 = icmp slt i32 %562, %5
  br i1 %563, label %566, label %564

564:                                              ; preds = %561
  %565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

566:                                              ; preds = %561
  %567 = sext i32 %562 to i64
  %568 = getelementptr inbounds double, ptr %24, i64 %567
  %569 = load double, ptr %568, align 8, !tbaa !18
  %570 = fptoui double %569 to i8
  %571 = load i8, ptr %26, align 1, !tbaa !11
  %572 = mul i8 %570, %570
  %573 = add i8 %572, %571
  store i8 %573, ptr %26, align 1, !tbaa !11
  %574 = add nuw nsw i32 %490, 1
  br i1 %341, label %575, label %625

575:                                              ; preds = %566
  %576 = load i32, ptr %4, align 4, !tbaa !5
  %577 = load i32, ptr %12, align 4, !tbaa !5
  %578 = add nsw i32 %577, -1
  %579 = icmp slt i32 %576, %578
  br i1 %579, label %602, label %580

580:                                              ; preds = %575
  %581 = icmp eq i32 %576, %578
  br i1 %581, label %582, label %618

582:                                              ; preds = %580
  store i32 0, ptr %4, align 4, !tbaa !5
  %583 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %583, ptr %6, align 4, !tbaa !5
  br i1 %346, label %625, label %584

584:                                              ; preds = %582, %612
  %585 = phi i64 [ %616, %612 ], [ 1, %582 ]
  %586 = getelementptr inbounds i32, ptr %4, i64 %585
  %587 = load i32, ptr %586, align 4, !tbaa !5
  %588 = getelementptr inbounds i32, ptr %12, i64 %585
  %589 = load i32, ptr %588, align 4, !tbaa !5
  %590 = add nsw i32 %589, -1
  %591 = icmp slt i32 %587, %590
  br i1 %591, label %592, label %610

592:                                              ; preds = %584
  br i1 %579, label %602, label %593

593:                                              ; preds = %592
  %594 = shl i64 %585, 32
  %595 = add i64 %594, -4294967296
  %596 = ashr exact i64 %595, 32
  %597 = getelementptr inbounds i32, ptr %7, i64 %596
  %598 = load i32, ptr %597, align 4, !tbaa !5
  %599 = getelementptr inbounds i32, ptr %6, i64 %585
  %600 = load i32, ptr %599, align 4, !tbaa !5
  %601 = add nsw i32 %600, %598
  store i32 %601, ptr %599, align 4, !tbaa !5
  br label %620

602:                                              ; preds = %575, %592
  %603 = phi i32 [ %587, %592 ], [ %576, %575 ]
  %604 = phi ptr [ %586, %592 ], [ %4, %575 ]
  %605 = phi i64 [ %585, %592 ], [ 0, %575 ]
  %606 = add nsw i32 %603, 1
  store i32 %606, ptr %604, align 4, !tbaa !5
  %607 = getelementptr inbounds i32, ptr %7, i64 %605
  %608 = load i32, ptr %607, align 4, !tbaa !5
  %609 = getelementptr inbounds i32, ptr %6, i64 %605
  br label %620

610:                                              ; preds = %584
  %611 = icmp eq i32 %587, %590
  br i1 %611, label %612, label %618

612:                                              ; preds = %610
  store i32 0, ptr %586, align 4, !tbaa !5
  %613 = getelementptr inbounds i32, ptr %8, i64 %585
  %614 = load i32, ptr %613, align 4, !tbaa !5
  %615 = getelementptr inbounds i32, ptr %6, i64 %585
  store i32 %614, ptr %615, align 4, !tbaa !5
  %616 = add nuw nsw i64 %585, 1
  %617 = icmp eq i64 %616, %344
  br i1 %617, label %625, label %584, !llvm.loop !962

618:                                              ; preds = %580, %610
  %619 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

620:                                              ; preds = %593, %602
  %621 = phi ptr [ %609, %602 ], [ %586, %593 ]
  %622 = phi i32 [ %608, %602 ], [ 1, %593 ]
  %623 = load i32, ptr %621, align 4, !tbaa !5
  %624 = add nsw i32 %623, %622
  store i32 %624, ptr %621, align 4, !tbaa !5
  br label %625

625:                                              ; preds = %612, %620, %582, %566
  %626 = icmp eq i32 %574, %5
  br i1 %626, label %5491, label %489, !llvm.loop !963

627:                                              ; preds = %32
  %628 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

629:                                              ; preds = %18
  %630 = getelementptr inbounds ptr, ptr %14, i64 %19
  %631 = load ptr, ptr %630, align 8, !tbaa !9
  %632 = getelementptr inbounds ptr, ptr %16, i64 %19
  %633 = load ptr, ptr %632, align 8, !tbaa !9
  store i32 0, ptr %633, align 4, !tbaa !5
  %634 = icmp eq i32 %13, 0
  br i1 %634, label %635, label %639

635:                                              ; preds = %629
  %636 = load double, ptr %631, align 8, !tbaa !18
  %637 = fptosi double %636 to i32
  %638 = mul nsw i32 %637, %637
  store i32 %638, ptr %633, align 4, !tbaa !5
  br label %5491

639:                                              ; preds = %629
  switch i32 %1, label %1237 [
    i32 1, label %640
    i32 0, label %943
  ]

640:                                              ; preds = %639
  %641 = getelementptr inbounds i32, ptr %3, i64 %19
  %642 = load i32, ptr %641, align 4, !tbaa !5
  %643 = icmp eq i32 %642, 0
  %644 = icmp sgt i32 %5, 0
  br i1 %643, label %654, label %645

645:                                              ; preds = %640
  br i1 %644, label %646, label %5491

646:                                              ; preds = %645
  %647 = icmp sgt i32 %13, 1
  %648 = icmp sgt i32 %13, 0
  %649 = add i32 %13, -2
  %650 = zext i32 %649 to i64
  %651 = zext i32 %13 to i64
  %652 = add nuw i32 %5, 1
  %653 = icmp eq i32 %13, 1
  br label %802

654:                                              ; preds = %640
  br i1 %644, label %655, label %5491

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %663

663:                                              ; preds = %655, %800
  %664 = phi i32 [ 0, %655 ], [ %752, %800 ]
  %665 = phi double [ 0.000000e+00, %655 ], [ %751, %800 ]
  %666 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %656, label %667, label %736

667:                                              ; preds = %663, %726
  %668 = phi i32 [ %735, %726 ], [ 0, %663 ]
  %669 = phi i64 [ %677, %726 ], [ %660, %663 ]
  %670 = phi i64 [ %734, %726 ], [ %659, %663 ]
  %671 = phi i32 [ %732, %726 ], [ %666, %663 ]
  %672 = sub i32 %658, %668
  %673 = tail call i32 @llvm.smin.i32(i32 %672, i32 0)
  %674 = sub i32 %672, %673
  %675 = zext i32 %674 to i64
  %676 = add nuw nsw i64 %675, 1
  %677 = add nsw i64 %669, -1
  %678 = icmp ult i32 %674, 31
  br i1 %678, label %714, label %679

679:                                              ; preds = %667
  %680 = and i64 %676, 8589934560
  %681 = sub i64 %670, %680
  br label %682

682:                                              ; preds = %682, %679
  %683 = phi i64 [ 0, %679 ], [ %706, %682 ]
  %684 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %702, %682 ]
  %685 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %703, %682 ]
  %686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %704, %682 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %705, %682 ]
  %688 = sub i64 %670, %683
  %689 = getelementptr inbounds i32, ptr %9, i64 %688
  %690 = getelementptr inbounds i32, ptr %689, i64 -7
  %691 = load <8 x i32>, ptr %690, align 4, !tbaa !5
  %692 = shufflevector <8 x i32> %691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %693 = getelementptr inbounds i32, ptr %689, i64 -15
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !5
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = getelementptr inbounds i32, ptr %689, i64 -23
  %697 = load <8 x i32>, ptr %696, align 4, !tbaa !5
  %698 = shufflevector <8 x i32> %697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %699 = getelementptr inbounds i32, ptr %689, i64 -31
  %700 = load <8 x i32>, ptr %699, align 4, !tbaa !5
  %701 = shufflevector <8 x i32> %700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %702 = mul <8 x i32> %692, %684
  %703 = mul <8 x i32> %695, %685
  %704 = mul <8 x i32> %698, %686
  %705 = mul <8 x i32> %701, %687
  %706 = add nuw i64 %683, 32
  %707 = icmp eq i64 %706, %680
  br i1 %707, label %708, label %682, !llvm.loop !964

708:                                              ; preds = %682
  %709 = mul <8 x i32> %703, %702
  %710 = mul <8 x i32> %704, %709
  %711 = mul <8 x i32> %705, %710
  %712 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %711)
  %713 = icmp eq i64 %676, %680
  br i1 %713, label %726, label %714

714:                                              ; preds = %667, %708
  %715 = phi i64 [ %670, %667 ], [ %681, %708 ]
  %716 = phi i32 [ 1, %667 ], [ %712, %708 ]
  br label %717

717:                                              ; preds = %714, %717
  %718 = phi i64 [ %723, %717 ], [ %715, %714 ]
  %719 = phi i32 [ %722, %717 ], [ %716, %714 ]
  %720 = getelementptr inbounds i32, ptr %9, i64 %718
  %721 = load i32, ptr %720, align 4, !tbaa !5
  %722 = mul nsw i32 %721, %719
  %723 = add nsw i64 %718, -1
  %724 = trunc i64 %718 to i32
  %725 = icmp sgt i32 %724, 0
  br i1 %725, label %717, label %726, !llvm.loop !965

726:                                              ; preds = %717, %708
  %727 = phi i32 [ %712, %708 ], [ %722, %717 ]
  %728 = and i64 %677, 4294967295
  %729 = getelementptr inbounds i32, ptr %6, i64 %728
  %730 = load i32, ptr %729, align 4, !tbaa !5
  %731 = mul nsw i32 %730, %727
  %732 = add nsw i32 %731, %671
  %733 = icmp sgt i64 %669, 2
  %734 = add nsw i64 %670, -1
  %735 = add i32 %668, 1
  br i1 %733, label %667, label %736, !llvm.loop !966

736:                                              ; preds = %726, %663
  %737 = phi i32 [ %666, %663 ], [ %732, %726 ]
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds double, ptr %2, i64 %738
  %740 = load double, ptr %739, align 8, !tbaa !18
  %741 = getelementptr inbounds double, ptr %631, i64 %738
  %742 = load double, ptr %741, align 8, !tbaa !18
  %743 = fptosi double %742 to i32
  %744 = load i32, ptr %633, align 4, !tbaa !5
  %745 = sitofp i32 %744 to double
  %746 = sitofp i32 %743 to double
  %747 = fmul fast double %740, %746
  %748 = fmul fast double %747, %747
  %749 = fadd fast double %748, %745
  %750 = fptosi double %749 to i32
  store i32 %750, ptr %633, align 4, !tbaa !5
  %751 = fadd fast double %740, %665
  %752 = add nuw nsw i32 %664, 1
  br i1 %657, label %753, label %800

753:                                              ; preds = %736
  %754 = load i32, ptr %4, align 4, !tbaa !5
  %755 = load i32, ptr %12, align 4, !tbaa !5
  %756 = add nsw i32 %755, -1
  %757 = icmp slt i32 %754, %756
  br i1 %757, label %777, label %758

758:                                              ; preds = %753
  %759 = icmp eq i32 %754, %756
  br i1 %759, label %760, label %793

760:                                              ; preds = %758
  store i32 0, ptr %4, align 4, !tbaa !5
  %761 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %761, ptr %6, align 4, !tbaa !5
  br i1 %662, label %800, label %762

762:                                              ; preds = %760, %787
  %763 = phi i64 [ %791, %787 ], [ 1, %760 ]
  %764 = getelementptr inbounds i32, ptr %4, i64 %763
  %765 = load i32, ptr %764, align 4, !tbaa !5
  %766 = getelementptr inbounds i32, ptr %12, i64 %763
  %767 = load i32, ptr %766, align 4, !tbaa !5
  %768 = add nsw i32 %767, -1
  %769 = icmp slt i32 %765, %768
  br i1 %769, label %770, label %785

770:                                              ; preds = %762
  br i1 %757, label %777, label %771

771:                                              ; preds = %770
  %772 = getelementptr inbounds i32, ptr %7, i64 %763
  %773 = load i32, ptr %772, align 4, !tbaa !5
  %774 = getelementptr inbounds i32, ptr %6, i64 %763
  %775 = load i32, ptr %774, align 4, !tbaa !5
  %776 = add nsw i32 %775, %773
  store i32 %776, ptr %774, align 4, !tbaa !5
  br label %795

777:                                              ; preds = %753, %770
  %778 = phi i32 [ %765, %770 ], [ %754, %753 ]
  %779 = phi ptr [ %764, %770 ], [ %4, %753 ]
  %780 = phi i64 [ %763, %770 ], [ 0, %753 ]
  %781 = add nsw i32 %778, 1
  store i32 %781, ptr %779, align 4, !tbaa !5
  %782 = getelementptr inbounds i32, ptr %7, i64 %780
  %783 = load i32, ptr %782, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %6, i64 %780
  br label %795

785:                                              ; preds = %762
  %786 = icmp eq i32 %765, %768
  br i1 %786, label %787, label %793

787:                                              ; preds = %785
  store i32 0, ptr %764, align 4, !tbaa !5
  %788 = getelementptr inbounds i32, ptr %8, i64 %763
  %789 = load i32, ptr %788, align 4, !tbaa !5
  %790 = getelementptr inbounds i32, ptr %6, i64 %763
  store i32 %789, ptr %790, align 4, !tbaa !5
  %791 = add nuw nsw i64 %763, 1
  %792 = icmp eq i64 %791, %660
  br i1 %792, label %800, label %762, !llvm.loop !967

793:                                              ; preds = %758, %785
  %794 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

795:                                              ; preds = %771, %777
  %796 = phi ptr [ %784, %777 ], [ %764, %771 ]
  %797 = phi i32 [ %783, %777 ], [ 1, %771 ]
  %798 = load i32, ptr %796, align 4, !tbaa !5
  %799 = add nsw i32 %798, %797
  store i32 %799, ptr %796, align 4, !tbaa !5
  br label %800

800:                                              ; preds = %787, %795, %760, %736
  %801 = icmp eq i32 %752, %5
  br i1 %801, label %5491, label %663, !llvm.loop !968

802:                                              ; preds = %646, %941
  %803 = phi i32 [ 0, %646 ], [ %890, %941 ]
  %804 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %647, label %805, label %874

805:                                              ; preds = %802, %864
  %806 = phi i32 [ %873, %864 ], [ 0, %802 ]
  %807 = phi i64 [ %815, %864 ], [ %651, %802 ]
  %808 = phi i64 [ %872, %864 ], [ %650, %802 ]
  %809 = phi i32 [ %870, %864 ], [ %804, %802 ]
  %810 = sub i32 %649, %806
  %811 = tail call i32 @llvm.smin.i32(i32 %810, i32 0)
  %812 = sub i32 %810, %811
  %813 = zext i32 %812 to i64
  %814 = add nuw nsw i64 %813, 1
  %815 = add nsw i64 %807, -1
  %816 = icmp ult i32 %812, 31
  br i1 %816, label %852, label %817

817:                                              ; preds = %805
  %818 = and i64 %814, 8589934560
  %819 = sub i64 %808, %818
  br label %820

820:                                              ; preds = %820, %817
  %821 = phi i64 [ 0, %817 ], [ %844, %820 ]
  %822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %840, %820 ]
  %823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %841, %820 ]
  %824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %842, %820 ]
  %825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %843, %820 ]
  %826 = sub i64 %808, %821
  %827 = getelementptr inbounds i32, ptr %11, i64 %826
  %828 = getelementptr inbounds i32, ptr %827, i64 -7
  %829 = load <8 x i32>, ptr %828, align 4, !tbaa !5
  %830 = shufflevector <8 x i32> %829, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %831 = getelementptr inbounds i32, ptr %827, i64 -15
  %832 = load <8 x i32>, ptr %831, align 4, !tbaa !5
  %833 = shufflevector <8 x i32> %832, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %834 = getelementptr inbounds i32, ptr %827, i64 -23
  %835 = load <8 x i32>, ptr %834, align 4, !tbaa !5
  %836 = shufflevector <8 x i32> %835, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %837 = getelementptr inbounds i32, ptr %827, i64 -31
  %838 = load <8 x i32>, ptr %837, align 4, !tbaa !5
  %839 = shufflevector <8 x i32> %838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %840 = mul <8 x i32> %830, %822
  %841 = mul <8 x i32> %833, %823
  %842 = mul <8 x i32> %836, %824
  %843 = mul <8 x i32> %839, %825
  %844 = add nuw i64 %821, 32
  %845 = icmp eq i64 %844, %818
  br i1 %845, label %846, label %820, !llvm.loop !969

846:                                              ; preds = %820
  %847 = mul <8 x i32> %841, %840
  %848 = mul <8 x i32> %842, %847
  %849 = mul <8 x i32> %843, %848
  %850 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %849)
  %851 = icmp eq i64 %814, %818
  br i1 %851, label %864, label %852

852:                                              ; preds = %805, %846
  %853 = phi i64 [ %808, %805 ], [ %819, %846 ]
  %854 = phi i32 [ 1, %805 ], [ %850, %846 ]
  br label %855

855:                                              ; preds = %852, %855
  %856 = phi i64 [ %861, %855 ], [ %853, %852 ]
  %857 = phi i32 [ %860, %855 ], [ %854, %852 ]
  %858 = getelementptr inbounds i32, ptr %11, i64 %856
  %859 = load i32, ptr %858, align 4, !tbaa !5
  %860 = mul nsw i32 %859, %857
  %861 = add nsw i64 %856, -1
  %862 = trunc i64 %856 to i32
  %863 = icmp sgt i32 %862, 0
  br i1 %863, label %855, label %864, !llvm.loop !970

864:                                              ; preds = %855, %846
  %865 = phi i32 [ %850, %846 ], [ %860, %855 ]
  %866 = and i64 %815, 4294967295
  %867 = getelementptr inbounds i32, ptr %6, i64 %866
  %868 = load i32, ptr %867, align 4, !tbaa !5
  %869 = mul nsw i32 %868, %865
  %870 = add nsw i32 %869, %809
  %871 = icmp sgt i64 %807, 2
  %872 = add nsw i64 %808, -1
  %873 = add i32 %806, 1
  br i1 %871, label %805, label %874, !llvm.loop !971

874:                                              ; preds = %864, %802
  %875 = phi i32 [ %804, %802 ], [ %870, %864 ]
  %876 = icmp slt i32 %875, %5
  br i1 %876, label %879, label %877

877:                                              ; preds = %874
  %878 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

879:                                              ; preds = %874
  %880 = sext i32 %875 to i64
  %881 = getelementptr inbounds double, ptr %631, i64 %880
  %882 = load double, ptr %881, align 8, !tbaa !18
  %883 = fptosi double %882 to i32
  %884 = load i32, ptr %633, align 4, !tbaa !5
  %885 = sitofp i32 %884 to double
  %886 = sitofp i32 %883 to double
  %887 = fmul fast double %886, %886
  %888 = fadd fast double %887, %885
  %889 = fptosi double %888 to i32
  store i32 %889, ptr %633, align 4, !tbaa !5
  %890 = add nuw nsw i32 %803, 1
  br i1 %648, label %891, label %941

891:                                              ; preds = %879
  %892 = load i32, ptr %4, align 4, !tbaa !5
  %893 = load i32, ptr %12, align 4, !tbaa !5
  %894 = add nsw i32 %893, -1
  %895 = icmp slt i32 %892, %894
  br i1 %895, label %918, label %896

896:                                              ; preds = %891
  %897 = icmp eq i32 %892, %894
  br i1 %897, label %898, label %934

898:                                              ; preds = %896
  store i32 0, ptr %4, align 4, !tbaa !5
  %899 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %899, ptr %6, align 4, !tbaa !5
  br i1 %653, label %941, label %900

900:                                              ; preds = %898, %928
  %901 = phi i64 [ %932, %928 ], [ 1, %898 ]
  %902 = getelementptr inbounds i32, ptr %4, i64 %901
  %903 = load i32, ptr %902, align 4, !tbaa !5
  %904 = getelementptr inbounds i32, ptr %12, i64 %901
  %905 = load i32, ptr %904, align 4, !tbaa !5
  %906 = add nsw i32 %905, -1
  %907 = icmp slt i32 %903, %906
  br i1 %907, label %908, label %926

908:                                              ; preds = %900
  br i1 %895, label %918, label %909

909:                                              ; preds = %908
  %910 = shl i64 %901, 32
  %911 = add i64 %910, -4294967296
  %912 = ashr exact i64 %911, 32
  %913 = getelementptr inbounds i32, ptr %7, i64 %912
  %914 = load i32, ptr %913, align 4, !tbaa !5
  %915 = getelementptr inbounds i32, ptr %6, i64 %901
  %916 = load i32, ptr %915, align 4, !tbaa !5
  %917 = add nsw i32 %916, %914
  store i32 %917, ptr %915, align 4, !tbaa !5
  br label %936

918:                                              ; preds = %891, %908
  %919 = phi i32 [ %903, %908 ], [ %892, %891 ]
  %920 = phi ptr [ %902, %908 ], [ %4, %891 ]
  %921 = phi i64 [ %901, %908 ], [ 0, %891 ]
  %922 = add nsw i32 %919, 1
  store i32 %922, ptr %920, align 4, !tbaa !5
  %923 = getelementptr inbounds i32, ptr %7, i64 %921
  %924 = load i32, ptr %923, align 4, !tbaa !5
  %925 = getelementptr inbounds i32, ptr %6, i64 %921
  br label %936

926:                                              ; preds = %900
  %927 = icmp eq i32 %903, %906
  br i1 %927, label %928, label %934

928:                                              ; preds = %926
  store i32 0, ptr %902, align 4, !tbaa !5
  %929 = getelementptr inbounds i32, ptr %8, i64 %901
  %930 = load i32, ptr %929, align 4, !tbaa !5
  %931 = getelementptr inbounds i32, ptr %6, i64 %901
  store i32 %930, ptr %931, align 4, !tbaa !5
  %932 = add nuw nsw i64 %901, 1
  %933 = icmp eq i64 %932, %651
  br i1 %933, label %941, label %900, !llvm.loop !972

934:                                              ; preds = %896, %926
  %935 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

936:                                              ; preds = %909, %918
  %937 = phi ptr [ %925, %918 ], [ %902, %909 ]
  %938 = phi i32 [ %924, %918 ], [ 1, %909 ]
  %939 = load i32, ptr %937, align 4, !tbaa !5
  %940 = add nsw i32 %939, %938
  store i32 %940, ptr %937, align 4, !tbaa !5
  br label %941

941:                                              ; preds = %928, %936, %898, %879
  %942 = icmp eq i32 %890, %5
  br i1 %942, label %5491, label %802, !llvm.loop !973

943:                                              ; preds = %639
  %944 = getelementptr inbounds i32, ptr %3, i64 %19
  %945 = load i32, ptr %944, align 4, !tbaa !5
  %946 = icmp eq i32 %945, 0
  %947 = icmp sgt i32 %5, 0
  br i1 %946, label %957, label %948

948:                                              ; preds = %943
  br i1 %947, label %949, label %5491

949:                                              ; preds = %948
  %950 = icmp sgt i32 %13, 1
  %951 = icmp sgt i32 %13, 0
  %952 = add i32 %13, -2
  %953 = zext i32 %952 to i64
  %954 = zext i32 %13 to i64
  %955 = add nuw i32 %5, 1
  %956 = icmp eq i32 %13, 1
  br label %1099

957:                                              ; preds = %943
  br i1 %947, label %958, label %5491

958:                                              ; preds = %957
  %959 = icmp sgt i32 %13, 1
  %960 = icmp sgt i32 %13, 0
  %961 = add i32 %13, -2
  %962 = zext i32 %961 to i64
  %963 = zext i32 %13 to i64
  %964 = add nuw i32 %5, 1
  %965 = icmp eq i32 %13, 1
  br label %966

966:                                              ; preds = %958, %1097
  %967 = phi i32 [ 0, %958 ], [ %1049, %1097 ]
  %968 = phi double [ 0.000000e+00, %958 ], [ %1048, %1097 ]
  %969 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %959, label %970, label %1039

970:                                              ; preds = %966, %1029
  %971 = phi i32 [ %1038, %1029 ], [ 0, %966 ]
  %972 = phi i64 [ %980, %1029 ], [ %963, %966 ]
  %973 = phi i64 [ %1037, %1029 ], [ %962, %966 ]
  %974 = phi i32 [ %1035, %1029 ], [ %969, %966 ]
  %975 = sub i32 %961, %971
  %976 = tail call i32 @llvm.smin.i32(i32 %975, i32 0)
  %977 = sub i32 %975, %976
  %978 = zext i32 %977 to i64
  %979 = add nuw nsw i64 %978, 1
  %980 = add nsw i64 %972, -1
  %981 = icmp ult i32 %977, 31
  br i1 %981, label %1017, label %982

982:                                              ; preds = %970
  %983 = and i64 %979, 8589934560
  %984 = sub i64 %973, %983
  br label %985

985:                                              ; preds = %985, %982
  %986 = phi i64 [ 0, %982 ], [ %1009, %985 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1005, %985 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1006, %985 ]
  %989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1007, %985 ]
  %990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1008, %985 ]
  %991 = sub i64 %973, %986
  %992 = getelementptr inbounds i32, ptr %9, i64 %991
  %993 = getelementptr inbounds i32, ptr %992, i64 -7
  %994 = load <8 x i32>, ptr %993, align 4, !tbaa !5
  %995 = shufflevector <8 x i32> %994, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %996 = getelementptr inbounds i32, ptr %992, i64 -15
  %997 = load <8 x i32>, ptr %996, align 4, !tbaa !5
  %998 = shufflevector <8 x i32> %997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %999 = getelementptr inbounds i32, ptr %992, i64 -23
  %1000 = load <8 x i32>, ptr %999, align 4, !tbaa !5
  %1001 = shufflevector <8 x i32> %1000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1002 = getelementptr inbounds i32, ptr %992, i64 -31
  %1003 = load <8 x i32>, ptr %1002, align 4, !tbaa !5
  %1004 = shufflevector <8 x i32> %1003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1005 = mul <8 x i32> %995, %987
  %1006 = mul <8 x i32> %998, %988
  %1007 = mul <8 x i32> %1001, %989
  %1008 = mul <8 x i32> %1004, %990
  %1009 = add nuw i64 %986, 32
  %1010 = icmp eq i64 %1009, %983
  br i1 %1010, label %1011, label %985, !llvm.loop !974

1011:                                             ; preds = %985
  %1012 = mul <8 x i32> %1006, %1005
  %1013 = mul <8 x i32> %1007, %1012
  %1014 = mul <8 x i32> %1008, %1013
  %1015 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1014)
  %1016 = icmp eq i64 %979, %983
  br i1 %1016, label %1029, label %1017

1017:                                             ; preds = %970, %1011
  %1018 = phi i64 [ %973, %970 ], [ %984, %1011 ]
  %1019 = phi i32 [ 1, %970 ], [ %1015, %1011 ]
  br label %1020

1020:                                             ; preds = %1017, %1020
  %1021 = phi i64 [ %1026, %1020 ], [ %1018, %1017 ]
  %1022 = phi i32 [ %1025, %1020 ], [ %1019, %1017 ]
  %1023 = getelementptr inbounds i32, ptr %9, i64 %1021
  %1024 = load i32, ptr %1023, align 4, !tbaa !5
  %1025 = mul nsw i32 %1024, %1022
  %1026 = add nsw i64 %1021, -1
  %1027 = trunc i64 %1021 to i32
  %1028 = icmp sgt i32 %1027, 0
  br i1 %1028, label %1020, label %1029, !llvm.loop !975

1029:                                             ; preds = %1020, %1011
  %1030 = phi i32 [ %1015, %1011 ], [ %1025, %1020 ]
  %1031 = and i64 %980, 4294967295
  %1032 = getelementptr inbounds i32, ptr %6, i64 %1031
  %1033 = load i32, ptr %1032, align 4, !tbaa !5
  %1034 = mul nsw i32 %1033, %1030
  %1035 = add nsw i32 %1034, %974
  %1036 = icmp sgt i64 %972, 2
  %1037 = add nsw i64 %973, -1
  %1038 = add i32 %971, 1
  br i1 %1036, label %970, label %1039, !llvm.loop !976

1039:                                             ; preds = %1029, %966
  %1040 = phi i32 [ %969, %966 ], [ %1035, %1029 ]
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds double, ptr %631, i64 %1041
  %1043 = load double, ptr %1042, align 8, !tbaa !18
  %1044 = fptosi double %1043 to i32
  %1045 = load i32, ptr %633, align 4, !tbaa !5
  %1046 = mul nsw i32 %1044, %1044
  %1047 = add nsw i32 %1046, %1045
  store i32 %1047, ptr %633, align 4, !tbaa !5
  %1048 = fadd fast double %968, 1.000000e+00
  %1049 = add nuw nsw i32 %967, 1
  br i1 %960, label %1050, label %1097

1050:                                             ; preds = %1039
  %1051 = load i32, ptr %4, align 4, !tbaa !5
  %1052 = load i32, ptr %12, align 4, !tbaa !5
  %1053 = add nsw i32 %1052, -1
  %1054 = icmp slt i32 %1051, %1053
  br i1 %1054, label %1074, label %1055

1055:                                             ; preds = %1050
  %1056 = icmp eq i32 %1051, %1053
  br i1 %1056, label %1057, label %1090

1057:                                             ; preds = %1055
  store i32 0, ptr %4, align 4, !tbaa !5
  %1058 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1058, ptr %6, align 4, !tbaa !5
  br i1 %965, label %1097, label %1059

1059:                                             ; preds = %1057, %1084
  %1060 = phi i64 [ %1088, %1084 ], [ 1, %1057 ]
  %1061 = getelementptr inbounds i32, ptr %4, i64 %1060
  %1062 = load i32, ptr %1061, align 4, !tbaa !5
  %1063 = getelementptr inbounds i32, ptr %12, i64 %1060
  %1064 = load i32, ptr %1063, align 4, !tbaa !5
  %1065 = add nsw i32 %1064, -1
  %1066 = icmp slt i32 %1062, %1065
  br i1 %1066, label %1067, label %1082

1067:                                             ; preds = %1059
  br i1 %1054, label %1074, label %1068

1068:                                             ; preds = %1067
  %1069 = getelementptr inbounds i32, ptr %7, i64 %1060
  %1070 = load i32, ptr %1069, align 4, !tbaa !5
  %1071 = getelementptr inbounds i32, ptr %6, i64 %1060
  %1072 = load i32, ptr %1071, align 4, !tbaa !5
  %1073 = add nsw i32 %1072, %1070
  store i32 %1073, ptr %1071, align 4, !tbaa !5
  br label %1092

1074:                                             ; preds = %1050, %1067
  %1075 = phi i32 [ %1062, %1067 ], [ %1051, %1050 ]
  %1076 = phi ptr [ %1061, %1067 ], [ %4, %1050 ]
  %1077 = phi i64 [ %1060, %1067 ], [ 0, %1050 ]
  %1078 = add nsw i32 %1075, 1
  store i32 %1078, ptr %1076, align 4, !tbaa !5
  %1079 = getelementptr inbounds i32, ptr %7, i64 %1077
  %1080 = load i32, ptr %1079, align 4, !tbaa !5
  %1081 = getelementptr inbounds i32, ptr %6, i64 %1077
  br label %1092

1082:                                             ; preds = %1059
  %1083 = icmp eq i32 %1062, %1065
  br i1 %1083, label %1084, label %1090

1084:                                             ; preds = %1082
  store i32 0, ptr %1061, align 4, !tbaa !5
  %1085 = getelementptr inbounds i32, ptr %8, i64 %1060
  %1086 = load i32, ptr %1085, align 4, !tbaa !5
  %1087 = getelementptr inbounds i32, ptr %6, i64 %1060
  store i32 %1086, ptr %1087, align 4, !tbaa !5
  %1088 = add nuw nsw i64 %1060, 1
  %1089 = icmp eq i64 %1088, %963
  br i1 %1089, label %1097, label %1059, !llvm.loop !977

1090:                                             ; preds = %1055, %1082
  %1091 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

1092:                                             ; preds = %1068, %1074
  %1093 = phi ptr [ %1081, %1074 ], [ %1061, %1068 ]
  %1094 = phi i32 [ %1080, %1074 ], [ 1, %1068 ]
  %1095 = load i32, ptr %1093, align 4, !tbaa !5
  %1096 = add nsw i32 %1095, %1094
  store i32 %1096, ptr %1093, align 4, !tbaa !5
  br label %1097

1097:                                             ; preds = %1084, %1092, %1057, %1039
  %1098 = icmp eq i32 %1049, %5
  br i1 %1098, label %5491, label %966, !llvm.loop !978

1099:                                             ; preds = %949, %1235
  %1100 = phi i32 [ 0, %949 ], [ %1184, %1235 ]
  %1101 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %950, label %1102, label %1171

1102:                                             ; preds = %1099, %1161
  %1103 = phi i32 [ %1170, %1161 ], [ 0, %1099 ]
  %1104 = phi i64 [ %1112, %1161 ], [ %954, %1099 ]
  %1105 = phi i64 [ %1169, %1161 ], [ %953, %1099 ]
  %1106 = phi i32 [ %1167, %1161 ], [ %1101, %1099 ]
  %1107 = sub i32 %952, %1103
  %1108 = tail call i32 @llvm.smin.i32(i32 %1107, i32 0)
  %1109 = sub i32 %1107, %1108
  %1110 = zext i32 %1109 to i64
  %1111 = add nuw nsw i64 %1110, 1
  %1112 = add nsw i64 %1104, -1
  %1113 = icmp ult i32 %1109, 31
  br i1 %1113, label %1149, label %1114

1114:                                             ; preds = %1102
  %1115 = and i64 %1111, 8589934560
  %1116 = sub i64 %1105, %1115
  br label %1117

1117:                                             ; preds = %1117, %1114
  %1118 = phi i64 [ 0, %1114 ], [ %1141, %1117 ]
  %1119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1137, %1117 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1138, %1117 ]
  %1121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1139, %1117 ]
  %1122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1140, %1117 ]
  %1123 = sub i64 %1105, %1118
  %1124 = getelementptr inbounds i32, ptr %11, i64 %1123
  %1125 = getelementptr inbounds i32, ptr %1124, i64 -7
  %1126 = load <8 x i32>, ptr %1125, align 4, !tbaa !5
  %1127 = shufflevector <8 x i32> %1126, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1128 = getelementptr inbounds i32, ptr %1124, i64 -15
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !5
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = getelementptr inbounds i32, ptr %1124, i64 -23
  %1132 = load <8 x i32>, ptr %1131, align 4, !tbaa !5
  %1133 = shufflevector <8 x i32> %1132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1134 = getelementptr inbounds i32, ptr %1124, i64 -31
  %1135 = load <8 x i32>, ptr %1134, align 4, !tbaa !5
  %1136 = shufflevector <8 x i32> %1135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1137 = mul <8 x i32> %1127, %1119
  %1138 = mul <8 x i32> %1130, %1120
  %1139 = mul <8 x i32> %1133, %1121
  %1140 = mul <8 x i32> %1136, %1122
  %1141 = add nuw i64 %1118, 32
  %1142 = icmp eq i64 %1141, %1115
  br i1 %1142, label %1143, label %1117, !llvm.loop !979

1143:                                             ; preds = %1117
  %1144 = mul <8 x i32> %1138, %1137
  %1145 = mul <8 x i32> %1139, %1144
  %1146 = mul <8 x i32> %1140, %1145
  %1147 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1146)
  %1148 = icmp eq i64 %1111, %1115
  br i1 %1148, label %1161, label %1149

1149:                                             ; preds = %1102, %1143
  %1150 = phi i64 [ %1105, %1102 ], [ %1116, %1143 ]
  %1151 = phi i32 [ 1, %1102 ], [ %1147, %1143 ]
  br label %1152

1152:                                             ; preds = %1149, %1152
  %1153 = phi i64 [ %1158, %1152 ], [ %1150, %1149 ]
  %1154 = phi i32 [ %1157, %1152 ], [ %1151, %1149 ]
  %1155 = getelementptr inbounds i32, ptr %11, i64 %1153
  %1156 = load i32, ptr %1155, align 4, !tbaa !5
  %1157 = mul nsw i32 %1156, %1154
  %1158 = add nsw i64 %1153, -1
  %1159 = trunc i64 %1153 to i32
  %1160 = icmp sgt i32 %1159, 0
  br i1 %1160, label %1152, label %1161, !llvm.loop !980

1161:                                             ; preds = %1152, %1143
  %1162 = phi i32 [ %1147, %1143 ], [ %1157, %1152 ]
  %1163 = and i64 %1112, 4294967295
  %1164 = getelementptr inbounds i32, ptr %6, i64 %1163
  %1165 = load i32, ptr %1164, align 4, !tbaa !5
  %1166 = mul nsw i32 %1165, %1162
  %1167 = add nsw i32 %1166, %1106
  %1168 = icmp sgt i64 %1104, 2
  %1169 = add nsw i64 %1105, -1
  %1170 = add i32 %1103, 1
  br i1 %1168, label %1102, label %1171, !llvm.loop !981

1171:                                             ; preds = %1161, %1099
  %1172 = phi i32 [ %1101, %1099 ], [ %1167, %1161 ]
  %1173 = icmp slt i32 %1172, %5
  br i1 %1173, label %1176, label %1174

1174:                                             ; preds = %1171
  %1175 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

1176:                                             ; preds = %1171
  %1177 = sext i32 %1172 to i64
  %1178 = getelementptr inbounds double, ptr %631, i64 %1177
  %1179 = load double, ptr %1178, align 8, !tbaa !18
  %1180 = fptosi double %1179 to i32
  %1181 = load i32, ptr %633, align 4, !tbaa !5
  %1182 = mul nsw i32 %1180, %1180
  %1183 = add nsw i32 %1182, %1181
  store i32 %1183, ptr %633, align 4, !tbaa !5
  %1184 = add nuw nsw i32 %1100, 1
  br i1 %951, label %1185, label %1235

1185:                                             ; preds = %1176
  %1186 = load i32, ptr %4, align 4, !tbaa !5
  %1187 = load i32, ptr %12, align 4, !tbaa !5
  %1188 = add nsw i32 %1187, -1
  %1189 = icmp slt i32 %1186, %1188
  br i1 %1189, label %1212, label %1190

1190:                                             ; preds = %1185
  %1191 = icmp eq i32 %1186, %1188
  br i1 %1191, label %1192, label %1228

1192:                                             ; preds = %1190
  store i32 0, ptr %4, align 4, !tbaa !5
  %1193 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1193, ptr %6, align 4, !tbaa !5
  br i1 %956, label %1235, label %1194

1194:                                             ; preds = %1192, %1222
  %1195 = phi i64 [ %1226, %1222 ], [ 1, %1192 ]
  %1196 = getelementptr inbounds i32, ptr %4, i64 %1195
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = getelementptr inbounds i32, ptr %12, i64 %1195
  %1199 = load i32, ptr %1198, align 4, !tbaa !5
  %1200 = add nsw i32 %1199, -1
  %1201 = icmp slt i32 %1197, %1200
  br i1 %1201, label %1202, label %1220

1202:                                             ; preds = %1194
  br i1 %1189, label %1212, label %1203

1203:                                             ; preds = %1202
  %1204 = shl i64 %1195, 32
  %1205 = add i64 %1204, -4294967296
  %1206 = ashr exact i64 %1205, 32
  %1207 = getelementptr inbounds i32, ptr %7, i64 %1206
  %1208 = load i32, ptr %1207, align 4, !tbaa !5
  %1209 = getelementptr inbounds i32, ptr %6, i64 %1195
  %1210 = load i32, ptr %1209, align 4, !tbaa !5
  %1211 = add nsw i32 %1210, %1208
  store i32 %1211, ptr %1209, align 4, !tbaa !5
  br label %1230

1212:                                             ; preds = %1185, %1202
  %1213 = phi i32 [ %1197, %1202 ], [ %1186, %1185 ]
  %1214 = phi ptr [ %1196, %1202 ], [ %4, %1185 ]
  %1215 = phi i64 [ %1195, %1202 ], [ 0, %1185 ]
  %1216 = add nsw i32 %1213, 1
  store i32 %1216, ptr %1214, align 4, !tbaa !5
  %1217 = getelementptr inbounds i32, ptr %7, i64 %1215
  %1218 = load i32, ptr %1217, align 4, !tbaa !5
  %1219 = getelementptr inbounds i32, ptr %6, i64 %1215
  br label %1230

1220:                                             ; preds = %1194
  %1221 = icmp eq i32 %1197, %1200
  br i1 %1221, label %1222, label %1228

1222:                                             ; preds = %1220
  store i32 0, ptr %1196, align 4, !tbaa !5
  %1223 = getelementptr inbounds i32, ptr %8, i64 %1195
  %1224 = load i32, ptr %1223, align 4, !tbaa !5
  %1225 = getelementptr inbounds i32, ptr %6, i64 %1195
  store i32 %1224, ptr %1225, align 4, !tbaa !5
  %1226 = add nuw nsw i64 %1195, 1
  %1227 = icmp eq i64 %1226, %954
  br i1 %1227, label %1235, label %1194, !llvm.loop !982

1228:                                             ; preds = %1190, %1220
  %1229 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

1230:                                             ; preds = %1203, %1212
  %1231 = phi ptr [ %1219, %1212 ], [ %1196, %1203 ]
  %1232 = phi i32 [ %1218, %1212 ], [ 1, %1203 ]
  %1233 = load i32, ptr %1231, align 4, !tbaa !5
  %1234 = add nsw i32 %1233, %1232
  store i32 %1234, ptr %1231, align 4, !tbaa !5
  br label %1235

1235:                                             ; preds = %1222, %1230, %1192, %1176
  %1236 = icmp eq i32 %1184, %5
  br i1 %1236, label %5491, label %1099, !llvm.loop !983

1237:                                             ; preds = %639
  %1238 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

1239:                                             ; preds = %18
  %1240 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1241 = load ptr, ptr %1240, align 8, !tbaa !9
  %1242 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1243 = load ptr, ptr %1242, align 8, !tbaa !9
  store i8 0, ptr %1243, align 1, !tbaa !11
  %1244 = icmp eq i32 %13, 0
  br i1 %1244, label %1245, label %1249

1245:                                             ; preds = %1239
  %1246 = load double, ptr %1241, align 8, !tbaa !18
  %1247 = fptosi double %1246 to i8
  %1248 = mul i8 %1247, %1247
  store i8 %1248, ptr %1243, align 1, !tbaa !11
  br label %5491

1249:                                             ; preds = %1239
  switch i32 %1, label %1844 [
    i32 1, label %1250
    i32 0, label %1550
  ]

1250:                                             ; preds = %1249
  %1251 = getelementptr inbounds i32, ptr %3, i64 %19
  %1252 = load i32, ptr %1251, align 4, !tbaa !5
  %1253 = icmp eq i32 %1252, 0
  %1254 = icmp sgt i32 %5, 0
  br i1 %1253, label %1264, label %1255

1255:                                             ; preds = %1250
  br i1 %1254, label %1256, label %5491

1256:                                             ; preds = %1255
  %1257 = icmp sgt i32 %13, 1
  %1258 = icmp sgt i32 %13, 0
  %1259 = add i32 %13, -2
  %1260 = zext i32 %1259 to i64
  %1261 = zext i32 %13 to i64
  %1262 = add nuw i32 %5, 1
  %1263 = icmp eq i32 %13, 1
  br label %1412

1264:                                             ; preds = %1250
  br i1 %1254, label %1265, label %5491

1265:                                             ; preds = %1264
  %1266 = icmp sgt i32 %13, 1
  %1267 = icmp sgt i32 %13, 0
  %1268 = add i32 %13, -2
  %1269 = zext i32 %1268 to i64
  %1270 = zext i32 %13 to i64
  %1271 = add nuw i32 %5, 1
  %1272 = icmp eq i32 %13, 1
  br label %1273

1273:                                             ; preds = %1265, %1410
  %1274 = phi i32 [ 0, %1265 ], [ %1362, %1410 ]
  %1275 = phi double [ 0.000000e+00, %1265 ], [ %1361, %1410 ]
  %1276 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1266, label %1277, label %1346

1277:                                             ; preds = %1273, %1336
  %1278 = phi i32 [ %1345, %1336 ], [ 0, %1273 ]
  %1279 = phi i64 [ %1287, %1336 ], [ %1270, %1273 ]
  %1280 = phi i64 [ %1344, %1336 ], [ %1269, %1273 ]
  %1281 = phi i32 [ %1342, %1336 ], [ %1276, %1273 ]
  %1282 = sub i32 %1268, %1278
  %1283 = tail call i32 @llvm.smin.i32(i32 %1282, i32 0)
  %1284 = sub i32 %1282, %1283
  %1285 = zext i32 %1284 to i64
  %1286 = add nuw nsw i64 %1285, 1
  %1287 = add nsw i64 %1279, -1
  %1288 = icmp ult i32 %1284, 31
  br i1 %1288, label %1324, label %1289

1289:                                             ; preds = %1277
  %1290 = and i64 %1286, 8589934560
  %1291 = sub i64 %1280, %1290
  br label %1292

1292:                                             ; preds = %1292, %1289
  %1293 = phi i64 [ 0, %1289 ], [ %1316, %1292 ]
  %1294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1289 ], [ %1312, %1292 ]
  %1295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1289 ], [ %1313, %1292 ]
  %1296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1289 ], [ %1314, %1292 ]
  %1297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1289 ], [ %1315, %1292 ]
  %1298 = sub i64 %1280, %1293
  %1299 = getelementptr inbounds i32, ptr %9, i64 %1298
  %1300 = getelementptr inbounds i32, ptr %1299, i64 -7
  %1301 = load <8 x i32>, ptr %1300, align 4, !tbaa !5
  %1302 = shufflevector <8 x i32> %1301, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1303 = getelementptr inbounds i32, ptr %1299, i64 -15
  %1304 = load <8 x i32>, ptr %1303, align 4, !tbaa !5
  %1305 = shufflevector <8 x i32> %1304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1306 = getelementptr inbounds i32, ptr %1299, i64 -23
  %1307 = load <8 x i32>, ptr %1306, align 4, !tbaa !5
  %1308 = shufflevector <8 x i32> %1307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1309 = getelementptr inbounds i32, ptr %1299, i64 -31
  %1310 = load <8 x i32>, ptr %1309, align 4, !tbaa !5
  %1311 = shufflevector <8 x i32> %1310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1312 = mul <8 x i32> %1302, %1294
  %1313 = mul <8 x i32> %1305, %1295
  %1314 = mul <8 x i32> %1308, %1296
  %1315 = mul <8 x i32> %1311, %1297
  %1316 = add nuw i64 %1293, 32
  %1317 = icmp eq i64 %1316, %1290
  br i1 %1317, label %1318, label %1292, !llvm.loop !984

1318:                                             ; preds = %1292
  %1319 = mul <8 x i32> %1313, %1312
  %1320 = mul <8 x i32> %1314, %1319
  %1321 = mul <8 x i32> %1315, %1320
  %1322 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1321)
  %1323 = icmp eq i64 %1286, %1290
  br i1 %1323, label %1336, label %1324

1324:                                             ; preds = %1277, %1318
  %1325 = phi i64 [ %1280, %1277 ], [ %1291, %1318 ]
  %1326 = phi i32 [ 1, %1277 ], [ %1322, %1318 ]
  br label %1327

1327:                                             ; preds = %1324, %1327
  %1328 = phi i64 [ %1333, %1327 ], [ %1325, %1324 ]
  %1329 = phi i32 [ %1332, %1327 ], [ %1326, %1324 ]
  %1330 = getelementptr inbounds i32, ptr %9, i64 %1328
  %1331 = load i32, ptr %1330, align 4, !tbaa !5
  %1332 = mul nsw i32 %1331, %1329
  %1333 = add nsw i64 %1328, -1
  %1334 = trunc i64 %1328 to i32
  %1335 = icmp sgt i32 %1334, 0
  br i1 %1335, label %1327, label %1336, !llvm.loop !985

1336:                                             ; preds = %1327, %1318
  %1337 = phi i32 [ %1322, %1318 ], [ %1332, %1327 ]
  %1338 = and i64 %1287, 4294967295
  %1339 = getelementptr inbounds i32, ptr %6, i64 %1338
  %1340 = load i32, ptr %1339, align 4, !tbaa !5
  %1341 = mul nsw i32 %1340, %1337
  %1342 = add nsw i32 %1341, %1281
  %1343 = icmp sgt i64 %1279, 2
  %1344 = add nsw i64 %1280, -1
  %1345 = add i32 %1278, 1
  br i1 %1343, label %1277, label %1346, !llvm.loop !986

1346:                                             ; preds = %1336, %1273
  %1347 = phi i32 [ %1276, %1273 ], [ %1342, %1336 ]
  %1348 = sext i32 %1347 to i64
  %1349 = getelementptr inbounds double, ptr %2, i64 %1348
  %1350 = load double, ptr %1349, align 8, !tbaa !18
  %1351 = getelementptr inbounds double, ptr %1241, i64 %1348
  %1352 = load double, ptr %1351, align 8, !tbaa !18
  %1353 = fptosi double %1352 to i8
  %1354 = load i8, ptr %1243, align 1, !tbaa !11
  %1355 = sitofp i8 %1354 to double
  %1356 = sitofp i8 %1353 to double
  %1357 = fmul fast double %1350, %1356
  %1358 = fmul fast double %1357, %1357
  %1359 = fadd fast double %1358, %1355
  %1360 = fptosi double %1359 to i8
  store i8 %1360, ptr %1243, align 1, !tbaa !11
  %1361 = fadd fast double %1350, %1275
  %1362 = add nuw nsw i32 %1274, 1
  br i1 %1267, label %1363, label %1410

1363:                                             ; preds = %1346
  %1364 = load i32, ptr %4, align 4, !tbaa !5
  %1365 = load i32, ptr %12, align 4, !tbaa !5
  %1366 = add nsw i32 %1365, -1
  %1367 = icmp slt i32 %1364, %1366
  br i1 %1367, label %1387, label %1368

1368:                                             ; preds = %1363
  %1369 = icmp eq i32 %1364, %1366
  br i1 %1369, label %1370, label %1403

1370:                                             ; preds = %1368
  store i32 0, ptr %4, align 4, !tbaa !5
  %1371 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1371, ptr %6, align 4, !tbaa !5
  br i1 %1272, label %1410, label %1372

1372:                                             ; preds = %1370, %1397
  %1373 = phi i64 [ %1401, %1397 ], [ 1, %1370 ]
  %1374 = getelementptr inbounds i32, ptr %4, i64 %1373
  %1375 = load i32, ptr %1374, align 4, !tbaa !5
  %1376 = getelementptr inbounds i32, ptr %12, i64 %1373
  %1377 = load i32, ptr %1376, align 4, !tbaa !5
  %1378 = add nsw i32 %1377, -1
  %1379 = icmp slt i32 %1375, %1378
  br i1 %1379, label %1380, label %1395

1380:                                             ; preds = %1372
  br i1 %1367, label %1387, label %1381

1381:                                             ; preds = %1380
  %1382 = getelementptr inbounds i32, ptr %7, i64 %1373
  %1383 = load i32, ptr %1382, align 4, !tbaa !5
  %1384 = getelementptr inbounds i32, ptr %6, i64 %1373
  %1385 = load i32, ptr %1384, align 4, !tbaa !5
  %1386 = add nsw i32 %1385, %1383
  store i32 %1386, ptr %1384, align 4, !tbaa !5
  br label %1405

1387:                                             ; preds = %1363, %1380
  %1388 = phi i32 [ %1375, %1380 ], [ %1364, %1363 ]
  %1389 = phi ptr [ %1374, %1380 ], [ %4, %1363 ]
  %1390 = phi i64 [ %1373, %1380 ], [ 0, %1363 ]
  %1391 = add nsw i32 %1388, 1
  store i32 %1391, ptr %1389, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %7, i64 %1390
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = getelementptr inbounds i32, ptr %6, i64 %1390
  br label %1405

1395:                                             ; preds = %1372
  %1396 = icmp eq i32 %1375, %1378
  br i1 %1396, label %1397, label %1403

1397:                                             ; preds = %1395
  store i32 0, ptr %1374, align 4, !tbaa !5
  %1398 = getelementptr inbounds i32, ptr %8, i64 %1373
  %1399 = load i32, ptr %1398, align 4, !tbaa !5
  %1400 = getelementptr inbounds i32, ptr %6, i64 %1373
  store i32 %1399, ptr %1400, align 4, !tbaa !5
  %1401 = add nuw nsw i64 %1373, 1
  %1402 = icmp eq i64 %1401, %1270
  br i1 %1402, label %1410, label %1372, !llvm.loop !987

1403:                                             ; preds = %1368, %1395
  %1404 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

1405:                                             ; preds = %1381, %1387
  %1406 = phi ptr [ %1394, %1387 ], [ %1374, %1381 ]
  %1407 = phi i32 [ %1393, %1387 ], [ 1, %1381 ]
  %1408 = load i32, ptr %1406, align 4, !tbaa !5
  %1409 = add nsw i32 %1408, %1407
  store i32 %1409, ptr %1406, align 4, !tbaa !5
  br label %1410

1410:                                             ; preds = %1397, %1405, %1370, %1346
  %1411 = icmp eq i32 %1362, %5
  br i1 %1411, label %5491, label %1273, !llvm.loop !988

1412:                                             ; preds = %1256, %1548
  %1413 = phi i32 [ 0, %1256 ], [ %1497, %1548 ]
  %1414 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1257, label %1415, label %1484

1415:                                             ; preds = %1412, %1474
  %1416 = phi i32 [ %1483, %1474 ], [ 0, %1412 ]
  %1417 = phi i64 [ %1425, %1474 ], [ %1261, %1412 ]
  %1418 = phi i64 [ %1482, %1474 ], [ %1260, %1412 ]
  %1419 = phi i32 [ %1480, %1474 ], [ %1414, %1412 ]
  %1420 = sub i32 %1259, %1416
  %1421 = tail call i32 @llvm.smin.i32(i32 %1420, i32 0)
  %1422 = sub i32 %1420, %1421
  %1423 = zext i32 %1422 to i64
  %1424 = add nuw nsw i64 %1423, 1
  %1425 = add nsw i64 %1417, -1
  %1426 = icmp ult i32 %1422, 31
  br i1 %1426, label %1462, label %1427

1427:                                             ; preds = %1415
  %1428 = and i64 %1424, 8589934560
  %1429 = sub i64 %1418, %1428
  br label %1430

1430:                                             ; preds = %1430, %1427
  %1431 = phi i64 [ 0, %1427 ], [ %1454, %1430 ]
  %1432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1450, %1430 ]
  %1433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1451, %1430 ]
  %1434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1452, %1430 ]
  %1435 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1453, %1430 ]
  %1436 = sub i64 %1418, %1431
  %1437 = getelementptr inbounds i32, ptr %11, i64 %1436
  %1438 = getelementptr inbounds i32, ptr %1437, i64 -7
  %1439 = load <8 x i32>, ptr %1438, align 4, !tbaa !5
  %1440 = shufflevector <8 x i32> %1439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1441 = getelementptr inbounds i32, ptr %1437, i64 -15
  %1442 = load <8 x i32>, ptr %1441, align 4, !tbaa !5
  %1443 = shufflevector <8 x i32> %1442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1444 = getelementptr inbounds i32, ptr %1437, i64 -23
  %1445 = load <8 x i32>, ptr %1444, align 4, !tbaa !5
  %1446 = shufflevector <8 x i32> %1445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1447 = getelementptr inbounds i32, ptr %1437, i64 -31
  %1448 = load <8 x i32>, ptr %1447, align 4, !tbaa !5
  %1449 = shufflevector <8 x i32> %1448, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1450 = mul <8 x i32> %1440, %1432
  %1451 = mul <8 x i32> %1443, %1433
  %1452 = mul <8 x i32> %1446, %1434
  %1453 = mul <8 x i32> %1449, %1435
  %1454 = add nuw i64 %1431, 32
  %1455 = icmp eq i64 %1454, %1428
  br i1 %1455, label %1456, label %1430, !llvm.loop !989

1456:                                             ; preds = %1430
  %1457 = mul <8 x i32> %1451, %1450
  %1458 = mul <8 x i32> %1452, %1457
  %1459 = mul <8 x i32> %1453, %1458
  %1460 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1459)
  %1461 = icmp eq i64 %1424, %1428
  br i1 %1461, label %1474, label %1462

1462:                                             ; preds = %1415, %1456
  %1463 = phi i64 [ %1418, %1415 ], [ %1429, %1456 ]
  %1464 = phi i32 [ 1, %1415 ], [ %1460, %1456 ]
  br label %1465

1465:                                             ; preds = %1462, %1465
  %1466 = phi i64 [ %1471, %1465 ], [ %1463, %1462 ]
  %1467 = phi i32 [ %1470, %1465 ], [ %1464, %1462 ]
  %1468 = getelementptr inbounds i32, ptr %11, i64 %1466
  %1469 = load i32, ptr %1468, align 4, !tbaa !5
  %1470 = mul nsw i32 %1469, %1467
  %1471 = add nsw i64 %1466, -1
  %1472 = trunc i64 %1466 to i32
  %1473 = icmp sgt i32 %1472, 0
  br i1 %1473, label %1465, label %1474, !llvm.loop !990

1474:                                             ; preds = %1465, %1456
  %1475 = phi i32 [ %1460, %1456 ], [ %1470, %1465 ]
  %1476 = and i64 %1425, 4294967295
  %1477 = getelementptr inbounds i32, ptr %6, i64 %1476
  %1478 = load i32, ptr %1477, align 4, !tbaa !5
  %1479 = mul nsw i32 %1478, %1475
  %1480 = add nsw i32 %1479, %1419
  %1481 = icmp sgt i64 %1417, 2
  %1482 = add nsw i64 %1418, -1
  %1483 = add i32 %1416, 1
  br i1 %1481, label %1415, label %1484, !llvm.loop !991

1484:                                             ; preds = %1474, %1412
  %1485 = phi i32 [ %1414, %1412 ], [ %1480, %1474 ]
  %1486 = icmp slt i32 %1485, %5
  br i1 %1486, label %1489, label %1487

1487:                                             ; preds = %1484
  %1488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

1489:                                             ; preds = %1484
  %1490 = sext i32 %1485 to i64
  %1491 = getelementptr inbounds double, ptr %1241, i64 %1490
  %1492 = load double, ptr %1491, align 8, !tbaa !18
  %1493 = fptosi double %1492 to i8
  %1494 = load i8, ptr %1243, align 1, !tbaa !11
  %1495 = mul i8 %1493, %1493
  %1496 = add i8 %1495, %1494
  store i8 %1496, ptr %1243, align 1, !tbaa !11
  %1497 = add nuw nsw i32 %1413, 1
  br i1 %1258, label %1498, label %1548

1498:                                             ; preds = %1489
  %1499 = load i32, ptr %4, align 4, !tbaa !5
  %1500 = load i32, ptr %12, align 4, !tbaa !5
  %1501 = add nsw i32 %1500, -1
  %1502 = icmp slt i32 %1499, %1501
  br i1 %1502, label %1525, label %1503

1503:                                             ; preds = %1498
  %1504 = icmp eq i32 %1499, %1501
  br i1 %1504, label %1505, label %1541

1505:                                             ; preds = %1503
  store i32 0, ptr %4, align 4, !tbaa !5
  %1506 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1506, ptr %6, align 4, !tbaa !5
  br i1 %1263, label %1548, label %1507

1507:                                             ; preds = %1505, %1535
  %1508 = phi i64 [ %1539, %1535 ], [ 1, %1505 ]
  %1509 = getelementptr inbounds i32, ptr %4, i64 %1508
  %1510 = load i32, ptr %1509, align 4, !tbaa !5
  %1511 = getelementptr inbounds i32, ptr %12, i64 %1508
  %1512 = load i32, ptr %1511, align 4, !tbaa !5
  %1513 = add nsw i32 %1512, -1
  %1514 = icmp slt i32 %1510, %1513
  br i1 %1514, label %1515, label %1533

1515:                                             ; preds = %1507
  br i1 %1502, label %1525, label %1516

1516:                                             ; preds = %1515
  %1517 = shl i64 %1508, 32
  %1518 = add i64 %1517, -4294967296
  %1519 = ashr exact i64 %1518, 32
  %1520 = getelementptr inbounds i32, ptr %7, i64 %1519
  %1521 = load i32, ptr %1520, align 4, !tbaa !5
  %1522 = getelementptr inbounds i32, ptr %6, i64 %1508
  %1523 = load i32, ptr %1522, align 4, !tbaa !5
  %1524 = add nsw i32 %1523, %1521
  store i32 %1524, ptr %1522, align 4, !tbaa !5
  br label %1543

1525:                                             ; preds = %1498, %1515
  %1526 = phi i32 [ %1510, %1515 ], [ %1499, %1498 ]
  %1527 = phi ptr [ %1509, %1515 ], [ %4, %1498 ]
  %1528 = phi i64 [ %1508, %1515 ], [ 0, %1498 ]
  %1529 = add nsw i32 %1526, 1
  store i32 %1529, ptr %1527, align 4, !tbaa !5
  %1530 = getelementptr inbounds i32, ptr %7, i64 %1528
  %1531 = load i32, ptr %1530, align 4, !tbaa !5
  %1532 = getelementptr inbounds i32, ptr %6, i64 %1528
  br label %1543

1533:                                             ; preds = %1507
  %1534 = icmp eq i32 %1510, %1513
  br i1 %1534, label %1535, label %1541

1535:                                             ; preds = %1533
  store i32 0, ptr %1509, align 4, !tbaa !5
  %1536 = getelementptr inbounds i32, ptr %8, i64 %1508
  %1537 = load i32, ptr %1536, align 4, !tbaa !5
  %1538 = getelementptr inbounds i32, ptr %6, i64 %1508
  store i32 %1537, ptr %1538, align 4, !tbaa !5
  %1539 = add nuw nsw i64 %1508, 1
  %1540 = icmp eq i64 %1539, %1261
  br i1 %1540, label %1548, label %1507, !llvm.loop !992

1541:                                             ; preds = %1503, %1533
  %1542 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

1543:                                             ; preds = %1516, %1525
  %1544 = phi ptr [ %1532, %1525 ], [ %1509, %1516 ]
  %1545 = phi i32 [ %1531, %1525 ], [ 1, %1516 ]
  %1546 = load i32, ptr %1544, align 4, !tbaa !5
  %1547 = add nsw i32 %1546, %1545
  store i32 %1547, ptr %1544, align 4, !tbaa !5
  br label %1548

1548:                                             ; preds = %1535, %1543, %1505, %1489
  %1549 = icmp eq i32 %1497, %5
  br i1 %1549, label %5491, label %1412, !llvm.loop !993

1550:                                             ; preds = %1249
  %1551 = getelementptr inbounds i32, ptr %3, i64 %19
  %1552 = load i32, ptr %1551, align 4, !tbaa !5
  %1553 = icmp eq i32 %1552, 0
  %1554 = icmp sgt i32 %5, 0
  br i1 %1553, label %1564, label %1555

1555:                                             ; preds = %1550
  br i1 %1554, label %1556, label %5491

1556:                                             ; preds = %1555
  %1557 = icmp sgt i32 %13, 1
  %1558 = icmp sgt i32 %13, 0
  %1559 = add i32 %13, -2
  %1560 = zext i32 %1559 to i64
  %1561 = zext i32 %13 to i64
  %1562 = add nuw i32 %5, 1
  %1563 = icmp eq i32 %13, 1
  br label %1706

1564:                                             ; preds = %1550
  br i1 %1554, label %1565, label %5491

1565:                                             ; preds = %1564
  %1566 = icmp sgt i32 %13, 1
  %1567 = icmp sgt i32 %13, 0
  %1568 = add i32 %13, -2
  %1569 = zext i32 %1568 to i64
  %1570 = zext i32 %13 to i64
  %1571 = add nuw i32 %5, 1
  %1572 = icmp eq i32 %13, 1
  br label %1573

1573:                                             ; preds = %1565, %1704
  %1574 = phi i32 [ 0, %1565 ], [ %1656, %1704 ]
  %1575 = phi double [ 0.000000e+00, %1565 ], [ %1655, %1704 ]
  %1576 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1566, label %1577, label %1646

1577:                                             ; preds = %1573, %1636
  %1578 = phi i32 [ %1645, %1636 ], [ 0, %1573 ]
  %1579 = phi i64 [ %1587, %1636 ], [ %1570, %1573 ]
  %1580 = phi i64 [ %1644, %1636 ], [ %1569, %1573 ]
  %1581 = phi i32 [ %1642, %1636 ], [ %1576, %1573 ]
  %1582 = sub i32 %1568, %1578
  %1583 = tail call i32 @llvm.smin.i32(i32 %1582, i32 0)
  %1584 = sub i32 %1582, %1583
  %1585 = zext i32 %1584 to i64
  %1586 = add nuw nsw i64 %1585, 1
  %1587 = add nsw i64 %1579, -1
  %1588 = icmp ult i32 %1584, 31
  br i1 %1588, label %1624, label %1589

1589:                                             ; preds = %1577
  %1590 = and i64 %1586, 8589934560
  %1591 = sub i64 %1580, %1590
  br label %1592

1592:                                             ; preds = %1592, %1589
  %1593 = phi i64 [ 0, %1589 ], [ %1616, %1592 ]
  %1594 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1612, %1592 ]
  %1595 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1613, %1592 ]
  %1596 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1614, %1592 ]
  %1597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1615, %1592 ]
  %1598 = sub i64 %1580, %1593
  %1599 = getelementptr inbounds i32, ptr %9, i64 %1598
  %1600 = getelementptr inbounds i32, ptr %1599, i64 -7
  %1601 = load <8 x i32>, ptr %1600, align 4, !tbaa !5
  %1602 = shufflevector <8 x i32> %1601, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1603 = getelementptr inbounds i32, ptr %1599, i64 -15
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = getelementptr inbounds i32, ptr %1599, i64 -23
  %1607 = load <8 x i32>, ptr %1606, align 4, !tbaa !5
  %1608 = shufflevector <8 x i32> %1607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1609 = getelementptr inbounds i32, ptr %1599, i64 -31
  %1610 = load <8 x i32>, ptr %1609, align 4, !tbaa !5
  %1611 = shufflevector <8 x i32> %1610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1612 = mul <8 x i32> %1602, %1594
  %1613 = mul <8 x i32> %1605, %1595
  %1614 = mul <8 x i32> %1608, %1596
  %1615 = mul <8 x i32> %1611, %1597
  %1616 = add nuw i64 %1593, 32
  %1617 = icmp eq i64 %1616, %1590
  br i1 %1617, label %1618, label %1592, !llvm.loop !994

1618:                                             ; preds = %1592
  %1619 = mul <8 x i32> %1613, %1612
  %1620 = mul <8 x i32> %1614, %1619
  %1621 = mul <8 x i32> %1615, %1620
  %1622 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1621)
  %1623 = icmp eq i64 %1586, %1590
  br i1 %1623, label %1636, label %1624

1624:                                             ; preds = %1577, %1618
  %1625 = phi i64 [ %1580, %1577 ], [ %1591, %1618 ]
  %1626 = phi i32 [ 1, %1577 ], [ %1622, %1618 ]
  br label %1627

1627:                                             ; preds = %1624, %1627
  %1628 = phi i64 [ %1633, %1627 ], [ %1625, %1624 ]
  %1629 = phi i32 [ %1632, %1627 ], [ %1626, %1624 ]
  %1630 = getelementptr inbounds i32, ptr %9, i64 %1628
  %1631 = load i32, ptr %1630, align 4, !tbaa !5
  %1632 = mul nsw i32 %1631, %1629
  %1633 = add nsw i64 %1628, -1
  %1634 = trunc i64 %1628 to i32
  %1635 = icmp sgt i32 %1634, 0
  br i1 %1635, label %1627, label %1636, !llvm.loop !995

1636:                                             ; preds = %1627, %1618
  %1637 = phi i32 [ %1622, %1618 ], [ %1632, %1627 ]
  %1638 = and i64 %1587, 4294967295
  %1639 = getelementptr inbounds i32, ptr %6, i64 %1638
  %1640 = load i32, ptr %1639, align 4, !tbaa !5
  %1641 = mul nsw i32 %1640, %1637
  %1642 = add nsw i32 %1641, %1581
  %1643 = icmp sgt i64 %1579, 2
  %1644 = add nsw i64 %1580, -1
  %1645 = add i32 %1578, 1
  br i1 %1643, label %1577, label %1646, !llvm.loop !996

1646:                                             ; preds = %1636, %1573
  %1647 = phi i32 [ %1576, %1573 ], [ %1642, %1636 ]
  %1648 = sext i32 %1647 to i64
  %1649 = getelementptr inbounds double, ptr %1241, i64 %1648
  %1650 = load double, ptr %1649, align 8, !tbaa !18
  %1651 = fptosi double %1650 to i8
  %1652 = load i8, ptr %1243, align 1, !tbaa !11
  %1653 = mul i8 %1651, %1651
  %1654 = add i8 %1653, %1652
  store i8 %1654, ptr %1243, align 1, !tbaa !11
  %1655 = fadd fast double %1575, 1.000000e+00
  %1656 = add nuw nsw i32 %1574, 1
  br i1 %1567, label %1657, label %1704

1657:                                             ; preds = %1646
  %1658 = load i32, ptr %4, align 4, !tbaa !5
  %1659 = load i32, ptr %12, align 4, !tbaa !5
  %1660 = add nsw i32 %1659, -1
  %1661 = icmp slt i32 %1658, %1660
  br i1 %1661, label %1681, label %1662

1662:                                             ; preds = %1657
  %1663 = icmp eq i32 %1658, %1660
  br i1 %1663, label %1664, label %1697

1664:                                             ; preds = %1662
  store i32 0, ptr %4, align 4, !tbaa !5
  %1665 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1665, ptr %6, align 4, !tbaa !5
  br i1 %1572, label %1704, label %1666

1666:                                             ; preds = %1664, %1691
  %1667 = phi i64 [ %1695, %1691 ], [ 1, %1664 ]
  %1668 = getelementptr inbounds i32, ptr %4, i64 %1667
  %1669 = load i32, ptr %1668, align 4, !tbaa !5
  %1670 = getelementptr inbounds i32, ptr %12, i64 %1667
  %1671 = load i32, ptr %1670, align 4, !tbaa !5
  %1672 = add nsw i32 %1671, -1
  %1673 = icmp slt i32 %1669, %1672
  br i1 %1673, label %1674, label %1689

1674:                                             ; preds = %1666
  br i1 %1661, label %1681, label %1675

1675:                                             ; preds = %1674
  %1676 = getelementptr inbounds i32, ptr %7, i64 %1667
  %1677 = load i32, ptr %1676, align 4, !tbaa !5
  %1678 = getelementptr inbounds i32, ptr %6, i64 %1667
  %1679 = load i32, ptr %1678, align 4, !tbaa !5
  %1680 = add nsw i32 %1679, %1677
  store i32 %1680, ptr %1678, align 4, !tbaa !5
  br label %1699

1681:                                             ; preds = %1657, %1674
  %1682 = phi i32 [ %1669, %1674 ], [ %1658, %1657 ]
  %1683 = phi ptr [ %1668, %1674 ], [ %4, %1657 ]
  %1684 = phi i64 [ %1667, %1674 ], [ 0, %1657 ]
  %1685 = add nsw i32 %1682, 1
  store i32 %1685, ptr %1683, align 4, !tbaa !5
  %1686 = getelementptr inbounds i32, ptr %7, i64 %1684
  %1687 = load i32, ptr %1686, align 4, !tbaa !5
  %1688 = getelementptr inbounds i32, ptr %6, i64 %1684
  br label %1699

1689:                                             ; preds = %1666
  %1690 = icmp eq i32 %1669, %1672
  br i1 %1690, label %1691, label %1697

1691:                                             ; preds = %1689
  store i32 0, ptr %1668, align 4, !tbaa !5
  %1692 = getelementptr inbounds i32, ptr %8, i64 %1667
  %1693 = load i32, ptr %1692, align 4, !tbaa !5
  %1694 = getelementptr inbounds i32, ptr %6, i64 %1667
  store i32 %1693, ptr %1694, align 4, !tbaa !5
  %1695 = add nuw nsw i64 %1667, 1
  %1696 = icmp eq i64 %1695, %1570
  br i1 %1696, label %1704, label %1666, !llvm.loop !997

1697:                                             ; preds = %1662, %1689
  %1698 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

1699:                                             ; preds = %1675, %1681
  %1700 = phi ptr [ %1688, %1681 ], [ %1668, %1675 ]
  %1701 = phi i32 [ %1687, %1681 ], [ 1, %1675 ]
  %1702 = load i32, ptr %1700, align 4, !tbaa !5
  %1703 = add nsw i32 %1702, %1701
  store i32 %1703, ptr %1700, align 4, !tbaa !5
  br label %1704

1704:                                             ; preds = %1691, %1699, %1664, %1646
  %1705 = icmp eq i32 %1656, %5
  br i1 %1705, label %5491, label %1573, !llvm.loop !998

1706:                                             ; preds = %1556, %1842
  %1707 = phi i32 [ 0, %1556 ], [ %1791, %1842 ]
  %1708 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1557, label %1709, label %1778

1709:                                             ; preds = %1706, %1768
  %1710 = phi i32 [ %1777, %1768 ], [ 0, %1706 ]
  %1711 = phi i64 [ %1719, %1768 ], [ %1561, %1706 ]
  %1712 = phi i64 [ %1776, %1768 ], [ %1560, %1706 ]
  %1713 = phi i32 [ %1774, %1768 ], [ %1708, %1706 ]
  %1714 = sub i32 %1559, %1710
  %1715 = tail call i32 @llvm.smin.i32(i32 %1714, i32 0)
  %1716 = sub i32 %1714, %1715
  %1717 = zext i32 %1716 to i64
  %1718 = add nuw nsw i64 %1717, 1
  %1719 = add nsw i64 %1711, -1
  %1720 = icmp ult i32 %1716, 31
  br i1 %1720, label %1756, label %1721

1721:                                             ; preds = %1709
  %1722 = and i64 %1718, 8589934560
  %1723 = sub i64 %1712, %1722
  br label %1724

1724:                                             ; preds = %1724, %1721
  %1725 = phi i64 [ 0, %1721 ], [ %1748, %1724 ]
  %1726 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1744, %1724 ]
  %1727 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1745, %1724 ]
  %1728 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1746, %1724 ]
  %1729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1747, %1724 ]
  %1730 = sub i64 %1712, %1725
  %1731 = getelementptr inbounds i32, ptr %11, i64 %1730
  %1732 = getelementptr inbounds i32, ptr %1731, i64 -7
  %1733 = load <8 x i32>, ptr %1732, align 4, !tbaa !5
  %1734 = shufflevector <8 x i32> %1733, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1735 = getelementptr inbounds i32, ptr %1731, i64 -15
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = getelementptr inbounds i32, ptr %1731, i64 -23
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !5
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1731, i64 -31
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !5
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = mul <8 x i32> %1734, %1726
  %1745 = mul <8 x i32> %1737, %1727
  %1746 = mul <8 x i32> %1740, %1728
  %1747 = mul <8 x i32> %1743, %1729
  %1748 = add nuw i64 %1725, 32
  %1749 = icmp eq i64 %1748, %1722
  br i1 %1749, label %1750, label %1724, !llvm.loop !999

1750:                                             ; preds = %1724
  %1751 = mul <8 x i32> %1745, %1744
  %1752 = mul <8 x i32> %1746, %1751
  %1753 = mul <8 x i32> %1747, %1752
  %1754 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1753)
  %1755 = icmp eq i64 %1718, %1722
  br i1 %1755, label %1768, label %1756

1756:                                             ; preds = %1709, %1750
  %1757 = phi i64 [ %1712, %1709 ], [ %1723, %1750 ]
  %1758 = phi i32 [ 1, %1709 ], [ %1754, %1750 ]
  br label %1759

1759:                                             ; preds = %1756, %1759
  %1760 = phi i64 [ %1765, %1759 ], [ %1757, %1756 ]
  %1761 = phi i32 [ %1764, %1759 ], [ %1758, %1756 ]
  %1762 = getelementptr inbounds i32, ptr %11, i64 %1760
  %1763 = load i32, ptr %1762, align 4, !tbaa !5
  %1764 = mul nsw i32 %1763, %1761
  %1765 = add nsw i64 %1760, -1
  %1766 = trunc i64 %1760 to i32
  %1767 = icmp sgt i32 %1766, 0
  br i1 %1767, label %1759, label %1768, !llvm.loop !1000

1768:                                             ; preds = %1759, %1750
  %1769 = phi i32 [ %1754, %1750 ], [ %1764, %1759 ]
  %1770 = and i64 %1719, 4294967295
  %1771 = getelementptr inbounds i32, ptr %6, i64 %1770
  %1772 = load i32, ptr %1771, align 4, !tbaa !5
  %1773 = mul nsw i32 %1772, %1769
  %1774 = add nsw i32 %1773, %1713
  %1775 = icmp sgt i64 %1711, 2
  %1776 = add nsw i64 %1712, -1
  %1777 = add i32 %1710, 1
  br i1 %1775, label %1709, label %1778, !llvm.loop !1001

1778:                                             ; preds = %1768, %1706
  %1779 = phi i32 [ %1708, %1706 ], [ %1774, %1768 ]
  %1780 = icmp slt i32 %1779, %5
  br i1 %1780, label %1783, label %1781

1781:                                             ; preds = %1778
  %1782 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

1783:                                             ; preds = %1778
  %1784 = sext i32 %1779 to i64
  %1785 = getelementptr inbounds double, ptr %1241, i64 %1784
  %1786 = load double, ptr %1785, align 8, !tbaa !18
  %1787 = fptosi double %1786 to i8
  %1788 = load i8, ptr %1243, align 1, !tbaa !11
  %1789 = mul i8 %1787, %1787
  %1790 = add i8 %1789, %1788
  store i8 %1790, ptr %1243, align 1, !tbaa !11
  %1791 = add nuw nsw i32 %1707, 1
  br i1 %1558, label %1792, label %1842

1792:                                             ; preds = %1783
  %1793 = load i32, ptr %4, align 4, !tbaa !5
  %1794 = load i32, ptr %12, align 4, !tbaa !5
  %1795 = add nsw i32 %1794, -1
  %1796 = icmp slt i32 %1793, %1795
  br i1 %1796, label %1819, label %1797

1797:                                             ; preds = %1792
  %1798 = icmp eq i32 %1793, %1795
  br i1 %1798, label %1799, label %1835

1799:                                             ; preds = %1797
  store i32 0, ptr %4, align 4, !tbaa !5
  %1800 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1800, ptr %6, align 4, !tbaa !5
  br i1 %1563, label %1842, label %1801

1801:                                             ; preds = %1799, %1829
  %1802 = phi i64 [ %1833, %1829 ], [ 1, %1799 ]
  %1803 = getelementptr inbounds i32, ptr %4, i64 %1802
  %1804 = load i32, ptr %1803, align 4, !tbaa !5
  %1805 = getelementptr inbounds i32, ptr %12, i64 %1802
  %1806 = load i32, ptr %1805, align 4, !tbaa !5
  %1807 = add nsw i32 %1806, -1
  %1808 = icmp slt i32 %1804, %1807
  br i1 %1808, label %1809, label %1827

1809:                                             ; preds = %1801
  br i1 %1796, label %1819, label %1810

1810:                                             ; preds = %1809
  %1811 = shl i64 %1802, 32
  %1812 = add i64 %1811, -4294967296
  %1813 = ashr exact i64 %1812, 32
  %1814 = getelementptr inbounds i32, ptr %7, i64 %1813
  %1815 = load i32, ptr %1814, align 4, !tbaa !5
  %1816 = getelementptr inbounds i32, ptr %6, i64 %1802
  %1817 = load i32, ptr %1816, align 4, !tbaa !5
  %1818 = add nsw i32 %1817, %1815
  store i32 %1818, ptr %1816, align 4, !tbaa !5
  br label %1837

1819:                                             ; preds = %1792, %1809
  %1820 = phi i32 [ %1804, %1809 ], [ %1793, %1792 ]
  %1821 = phi ptr [ %1803, %1809 ], [ %4, %1792 ]
  %1822 = phi i64 [ %1802, %1809 ], [ 0, %1792 ]
  %1823 = add nsw i32 %1820, 1
  store i32 %1823, ptr %1821, align 4, !tbaa !5
  %1824 = getelementptr inbounds i32, ptr %7, i64 %1822
  %1825 = load i32, ptr %1824, align 4, !tbaa !5
  %1826 = getelementptr inbounds i32, ptr %6, i64 %1822
  br label %1837

1827:                                             ; preds = %1801
  %1828 = icmp eq i32 %1804, %1807
  br i1 %1828, label %1829, label %1835

1829:                                             ; preds = %1827
  store i32 0, ptr %1803, align 4, !tbaa !5
  %1830 = getelementptr inbounds i32, ptr %8, i64 %1802
  %1831 = load i32, ptr %1830, align 4, !tbaa !5
  %1832 = getelementptr inbounds i32, ptr %6, i64 %1802
  store i32 %1831, ptr %1832, align 4, !tbaa !5
  %1833 = add nuw nsw i64 %1802, 1
  %1834 = icmp eq i64 %1833, %1561
  br i1 %1834, label %1842, label %1801, !llvm.loop !1002

1835:                                             ; preds = %1797, %1827
  %1836 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

1837:                                             ; preds = %1810, %1819
  %1838 = phi ptr [ %1826, %1819 ], [ %1803, %1810 ]
  %1839 = phi i32 [ %1825, %1819 ], [ 1, %1810 ]
  %1840 = load i32, ptr %1838, align 4, !tbaa !5
  %1841 = add nsw i32 %1840, %1839
  store i32 %1841, ptr %1838, align 4, !tbaa !5
  br label %1842

1842:                                             ; preds = %1829, %1837, %1799, %1783
  %1843 = icmp eq i32 %1791, %5
  br i1 %1843, label %5491, label %1706, !llvm.loop !1003

1844:                                             ; preds = %1249
  %1845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

1846:                                             ; preds = %18
  %1847 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1848 = load ptr, ptr %1847, align 8, !tbaa !9
  %1849 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1850 = load ptr, ptr %1849, align 8, !tbaa !9
  store i16 0, ptr %1850, align 2, !tbaa !78
  %1851 = icmp eq i32 %13, 0
  br i1 %1851, label %1852, label %1856

1852:                                             ; preds = %1846
  %1853 = load double, ptr %1848, align 8, !tbaa !18
  %1854 = fptosi double %1853 to i16
  %1855 = mul i16 %1854, %1854
  store i16 %1855, ptr %1850, align 2, !tbaa !78
  br label %5491

1856:                                             ; preds = %1846
  switch i32 %1, label %2455 [
    i32 1, label %1857
    i32 0, label %2161
  ]

1857:                                             ; preds = %1856
  %1858 = getelementptr inbounds i32, ptr %3, i64 %19
  %1859 = load i32, ptr %1858, align 4, !tbaa !5
  %1860 = icmp eq i32 %1859, 0
  %1861 = icmp sgt i32 %5, 0
  br i1 %1860, label %1871, label %1862

1862:                                             ; preds = %1857
  br i1 %1861, label %1863, label %5491

1863:                                             ; preds = %1862
  %1864 = icmp sgt i32 %13, 1
  %1865 = icmp sgt i32 %13, 0
  %1866 = add i32 %13, -2
  %1867 = zext i32 %1866 to i64
  %1868 = zext i32 %13 to i64
  %1869 = add nuw i32 %5, 1
  %1870 = icmp eq i32 %13, 1
  br label %2019

1871:                                             ; preds = %1857
  br i1 %1861, label %1872, label %5491

1872:                                             ; preds = %1871
  %1873 = icmp sgt i32 %13, 1
  %1874 = icmp sgt i32 %13, 0
  %1875 = add i32 %13, -2
  %1876 = zext i32 %1875 to i64
  %1877 = zext i32 %13 to i64
  %1878 = add nuw i32 %5, 1
  %1879 = icmp eq i32 %13, 1
  br label %1880

1880:                                             ; preds = %1872, %2017
  %1881 = phi i16 [ 0, %1872 ], [ %1967, %2017 ]
  %1882 = phi i32 [ 0, %1872 ], [ %1969, %2017 ]
  %1883 = phi double [ 0.000000e+00, %1872 ], [ %1968, %2017 ]
  %1884 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1873, label %1885, label %1954

1885:                                             ; preds = %1880, %1944
  %1886 = phi i32 [ %1953, %1944 ], [ 0, %1880 ]
  %1887 = phi i64 [ %1895, %1944 ], [ %1877, %1880 ]
  %1888 = phi i64 [ %1952, %1944 ], [ %1876, %1880 ]
  %1889 = phi i32 [ %1950, %1944 ], [ %1884, %1880 ]
  %1890 = sub i32 %1875, %1886
  %1891 = tail call i32 @llvm.smin.i32(i32 %1890, i32 0)
  %1892 = sub i32 %1890, %1891
  %1893 = zext i32 %1892 to i64
  %1894 = add nuw nsw i64 %1893, 1
  %1895 = add nsw i64 %1887, -1
  %1896 = icmp ult i32 %1892, 31
  br i1 %1896, label %1932, label %1897

1897:                                             ; preds = %1885
  %1898 = and i64 %1894, 8589934560
  %1899 = sub i64 %1888, %1898
  br label %1900

1900:                                             ; preds = %1900, %1897
  %1901 = phi i64 [ 0, %1897 ], [ %1924, %1900 ]
  %1902 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1920, %1900 ]
  %1903 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1921, %1900 ]
  %1904 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1922, %1900 ]
  %1905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1923, %1900 ]
  %1906 = sub i64 %1888, %1901
  %1907 = getelementptr inbounds i32, ptr %9, i64 %1906
  %1908 = getelementptr inbounds i32, ptr %1907, i64 -7
  %1909 = load <8 x i32>, ptr %1908, align 4, !tbaa !5
  %1910 = shufflevector <8 x i32> %1909, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1911 = getelementptr inbounds i32, ptr %1907, i64 -15
  %1912 = load <8 x i32>, ptr %1911, align 4, !tbaa !5
  %1913 = shufflevector <8 x i32> %1912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1914 = getelementptr inbounds i32, ptr %1907, i64 -23
  %1915 = load <8 x i32>, ptr %1914, align 4, !tbaa !5
  %1916 = shufflevector <8 x i32> %1915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1917 = getelementptr inbounds i32, ptr %1907, i64 -31
  %1918 = load <8 x i32>, ptr %1917, align 4, !tbaa !5
  %1919 = shufflevector <8 x i32> %1918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1920 = mul <8 x i32> %1910, %1902
  %1921 = mul <8 x i32> %1913, %1903
  %1922 = mul <8 x i32> %1916, %1904
  %1923 = mul <8 x i32> %1919, %1905
  %1924 = add nuw i64 %1901, 32
  %1925 = icmp eq i64 %1924, %1898
  br i1 %1925, label %1926, label %1900, !llvm.loop !1004

1926:                                             ; preds = %1900
  %1927 = mul <8 x i32> %1921, %1920
  %1928 = mul <8 x i32> %1922, %1927
  %1929 = mul <8 x i32> %1923, %1928
  %1930 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1929)
  %1931 = icmp eq i64 %1894, %1898
  br i1 %1931, label %1944, label %1932

1932:                                             ; preds = %1885, %1926
  %1933 = phi i64 [ %1888, %1885 ], [ %1899, %1926 ]
  %1934 = phi i32 [ 1, %1885 ], [ %1930, %1926 ]
  br label %1935

1935:                                             ; preds = %1932, %1935
  %1936 = phi i64 [ %1941, %1935 ], [ %1933, %1932 ]
  %1937 = phi i32 [ %1940, %1935 ], [ %1934, %1932 ]
  %1938 = getelementptr inbounds i32, ptr %9, i64 %1936
  %1939 = load i32, ptr %1938, align 4, !tbaa !5
  %1940 = mul nsw i32 %1939, %1937
  %1941 = add nsw i64 %1936, -1
  %1942 = trunc i64 %1936 to i32
  %1943 = icmp sgt i32 %1942, 0
  br i1 %1943, label %1935, label %1944, !llvm.loop !1005

1944:                                             ; preds = %1935, %1926
  %1945 = phi i32 [ %1930, %1926 ], [ %1940, %1935 ]
  %1946 = and i64 %1895, 4294967295
  %1947 = getelementptr inbounds i32, ptr %6, i64 %1946
  %1948 = load i32, ptr %1947, align 4, !tbaa !5
  %1949 = mul nsw i32 %1948, %1945
  %1950 = add nsw i32 %1949, %1889
  %1951 = icmp sgt i64 %1887, 2
  %1952 = add nsw i64 %1888, -1
  %1953 = add i32 %1886, 1
  br i1 %1951, label %1885, label %1954, !llvm.loop !1006

1954:                                             ; preds = %1944, %1880
  %1955 = phi i32 [ %1884, %1880 ], [ %1950, %1944 ]
  %1956 = sext i32 %1955 to i64
  %1957 = getelementptr inbounds double, ptr %2, i64 %1956
  %1958 = load double, ptr %1957, align 8, !tbaa !18
  %1959 = getelementptr inbounds double, ptr %1848, i64 %1956
  %1960 = load double, ptr %1959, align 8, !tbaa !18
  %1961 = fptosi double %1960 to i16
  %1962 = sitofp i16 %1881 to double
  %1963 = sitofp i16 %1961 to double
  %1964 = fmul fast double %1958, %1963
  %1965 = fmul fast double %1964, %1964
  %1966 = fadd fast double %1965, %1962
  %1967 = fptosi double %1966 to i16
  %1968 = fadd fast double %1958, %1883
  %1969 = add nuw nsw i32 %1882, 1
  br i1 %1874, label %1970, label %2017

1970:                                             ; preds = %1954
  %1971 = load i32, ptr %4, align 4, !tbaa !5
  %1972 = load i32, ptr %12, align 4, !tbaa !5
  %1973 = add nsw i32 %1972, -1
  %1974 = icmp slt i32 %1971, %1973
  br i1 %1974, label %1994, label %1975

1975:                                             ; preds = %1970
  %1976 = icmp eq i32 %1971, %1973
  br i1 %1976, label %1977, label %2010

1977:                                             ; preds = %1975
  store i32 0, ptr %4, align 4, !tbaa !5
  %1978 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1978, ptr %6, align 4, !tbaa !5
  br i1 %1879, label %2017, label %1979

1979:                                             ; preds = %1977, %2004
  %1980 = phi i64 [ %2008, %2004 ], [ 1, %1977 ]
  %1981 = getelementptr inbounds i32, ptr %4, i64 %1980
  %1982 = load i32, ptr %1981, align 4, !tbaa !5
  %1983 = getelementptr inbounds i32, ptr %12, i64 %1980
  %1984 = load i32, ptr %1983, align 4, !tbaa !5
  %1985 = add nsw i32 %1984, -1
  %1986 = icmp slt i32 %1982, %1985
  br i1 %1986, label %1987, label %2002

1987:                                             ; preds = %1979
  br i1 %1974, label %1994, label %1988

1988:                                             ; preds = %1987
  %1989 = getelementptr inbounds i32, ptr %7, i64 %1980
  %1990 = load i32, ptr %1989, align 4, !tbaa !5
  %1991 = getelementptr inbounds i32, ptr %6, i64 %1980
  %1992 = load i32, ptr %1991, align 4, !tbaa !5
  %1993 = add nsw i32 %1992, %1990
  store i32 %1993, ptr %1991, align 4, !tbaa !5
  br label %2012

1994:                                             ; preds = %1970, %1987
  %1995 = phi i32 [ %1982, %1987 ], [ %1971, %1970 ]
  %1996 = phi ptr [ %1981, %1987 ], [ %4, %1970 ]
  %1997 = phi i64 [ %1980, %1987 ], [ 0, %1970 ]
  %1998 = add nsw i32 %1995, 1
  store i32 %1998, ptr %1996, align 4, !tbaa !5
  %1999 = getelementptr inbounds i32, ptr %7, i64 %1997
  %2000 = load i32, ptr %1999, align 4, !tbaa !5
  %2001 = getelementptr inbounds i32, ptr %6, i64 %1997
  br label %2012

2002:                                             ; preds = %1979
  %2003 = icmp eq i32 %1982, %1985
  br i1 %2003, label %2004, label %2010

2004:                                             ; preds = %2002
  store i32 0, ptr %1981, align 4, !tbaa !5
  %2005 = getelementptr inbounds i32, ptr %8, i64 %1980
  %2006 = load i32, ptr %2005, align 4, !tbaa !5
  %2007 = getelementptr inbounds i32, ptr %6, i64 %1980
  store i32 %2006, ptr %2007, align 4, !tbaa !5
  %2008 = add nuw nsw i64 %1980, 1
  %2009 = icmp eq i64 %2008, %1877
  br i1 %2009, label %2017, label %1979, !llvm.loop !1007

2010:                                             ; preds = %1975, %2002
  store i16 %1967, ptr %1850, align 2, !tbaa !78
  %2011 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

2012:                                             ; preds = %1988, %1994
  %2013 = phi ptr [ %2001, %1994 ], [ %1981, %1988 ]
  %2014 = phi i32 [ %2000, %1994 ], [ 1, %1988 ]
  %2015 = load i32, ptr %2013, align 4, !tbaa !5
  %2016 = add nsw i32 %2015, %2014
  store i32 %2016, ptr %2013, align 4, !tbaa !5
  br label %2017

2017:                                             ; preds = %2004, %2012, %1977, %1954
  %2018 = icmp eq i32 %1969, %5
  br i1 %2018, label %5485, label %1880, !llvm.loop !1008

2019:                                             ; preds = %1863, %2159
  %2020 = phi i64 [ 0, %1863 ], [ %2106, %2159 ]
  %2021 = phi i32 [ 0, %1863 ], [ %2108, %2159 ]
  %2022 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1864, label %2023, label %2092

2023:                                             ; preds = %2019, %2082
  %2024 = phi i32 [ %2091, %2082 ], [ 0, %2019 ]
  %2025 = phi i64 [ %2033, %2082 ], [ %1868, %2019 ]
  %2026 = phi i64 [ %2090, %2082 ], [ %1867, %2019 ]
  %2027 = phi i32 [ %2088, %2082 ], [ %2022, %2019 ]
  %2028 = sub i32 %1866, %2024
  %2029 = tail call i32 @llvm.smin.i32(i32 %2028, i32 0)
  %2030 = sub i32 %2028, %2029
  %2031 = zext i32 %2030 to i64
  %2032 = add nuw nsw i64 %2031, 1
  %2033 = add nsw i64 %2025, -1
  %2034 = icmp ult i32 %2030, 31
  br i1 %2034, label %2070, label %2035

2035:                                             ; preds = %2023
  %2036 = and i64 %2032, 8589934560
  %2037 = sub i64 %2026, %2036
  br label %2038

2038:                                             ; preds = %2038, %2035
  %2039 = phi i64 [ 0, %2035 ], [ %2062, %2038 ]
  %2040 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2058, %2038 ]
  %2041 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2059, %2038 ]
  %2042 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2060, %2038 ]
  %2043 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2061, %2038 ]
  %2044 = sub i64 %2026, %2039
  %2045 = getelementptr inbounds i32, ptr %11, i64 %2044
  %2046 = getelementptr inbounds i32, ptr %2045, i64 -7
  %2047 = load <8 x i32>, ptr %2046, align 4, !tbaa !5
  %2048 = shufflevector <8 x i32> %2047, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2049 = getelementptr inbounds i32, ptr %2045, i64 -15
  %2050 = load <8 x i32>, ptr %2049, align 4, !tbaa !5
  %2051 = shufflevector <8 x i32> %2050, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2052 = getelementptr inbounds i32, ptr %2045, i64 -23
  %2053 = load <8 x i32>, ptr %2052, align 4, !tbaa !5
  %2054 = shufflevector <8 x i32> %2053, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2055 = getelementptr inbounds i32, ptr %2045, i64 -31
  %2056 = load <8 x i32>, ptr %2055, align 4, !tbaa !5
  %2057 = shufflevector <8 x i32> %2056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2058 = mul <8 x i32> %2048, %2040
  %2059 = mul <8 x i32> %2051, %2041
  %2060 = mul <8 x i32> %2054, %2042
  %2061 = mul <8 x i32> %2057, %2043
  %2062 = add nuw i64 %2039, 32
  %2063 = icmp eq i64 %2062, %2036
  br i1 %2063, label %2064, label %2038, !llvm.loop !1009

2064:                                             ; preds = %2038
  %2065 = mul <8 x i32> %2059, %2058
  %2066 = mul <8 x i32> %2060, %2065
  %2067 = mul <8 x i32> %2061, %2066
  %2068 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2067)
  %2069 = icmp eq i64 %2032, %2036
  br i1 %2069, label %2082, label %2070

2070:                                             ; preds = %2023, %2064
  %2071 = phi i64 [ %2026, %2023 ], [ %2037, %2064 ]
  %2072 = phi i32 [ 1, %2023 ], [ %2068, %2064 ]
  br label %2073

2073:                                             ; preds = %2070, %2073
  %2074 = phi i64 [ %2079, %2073 ], [ %2071, %2070 ]
  %2075 = phi i32 [ %2078, %2073 ], [ %2072, %2070 ]
  %2076 = getelementptr inbounds i32, ptr %11, i64 %2074
  %2077 = load i32, ptr %2076, align 4, !tbaa !5
  %2078 = mul nsw i32 %2077, %2075
  %2079 = add nsw i64 %2074, -1
  %2080 = trunc i64 %2074 to i32
  %2081 = icmp sgt i32 %2080, 0
  br i1 %2081, label %2073, label %2082, !llvm.loop !1010

2082:                                             ; preds = %2073, %2064
  %2083 = phi i32 [ %2068, %2064 ], [ %2078, %2073 ]
  %2084 = and i64 %2033, 4294967295
  %2085 = getelementptr inbounds i32, ptr %6, i64 %2084
  %2086 = load i32, ptr %2085, align 4, !tbaa !5
  %2087 = mul nsw i32 %2086, %2083
  %2088 = add nsw i32 %2087, %2027
  %2089 = icmp sgt i64 %2025, 2
  %2090 = add nsw i64 %2026, -1
  %2091 = add i32 %2024, 1
  br i1 %2089, label %2023, label %2092, !llvm.loop !1011

2092:                                             ; preds = %2082, %2019
  %2093 = phi i32 [ %2022, %2019 ], [ %2088, %2082 ]
  %2094 = icmp slt i32 %2093, %5
  br i1 %2094, label %2097, label %2095

2095:                                             ; preds = %2092
  %2096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

2097:                                             ; preds = %2092
  %2098 = sext i32 %2093 to i64
  %2099 = getelementptr inbounds double, ptr %1848, i64 %2098
  %2100 = load double, ptr %2099, align 8, !tbaa !18
  %2101 = fptosi double %2100 to i16
  %2102 = shl i64 %2020, 48
  %2103 = ashr exact i64 %2102, 48
  %2104 = sext i16 %2101 to i64
  %2105 = mul nsw i64 %2104, %2104
  %2106 = add nsw i64 %2105, %2103
  %2107 = trunc i64 %2106 to i16
  store i16 %2107, ptr %1850, align 2, !tbaa !78
  %2108 = add nuw nsw i32 %2021, 1
  br i1 %1865, label %2109, label %2159

2109:                                             ; preds = %2097
  %2110 = load i32, ptr %4, align 4, !tbaa !5
  %2111 = load i32, ptr %12, align 4, !tbaa !5
  %2112 = add nsw i32 %2111, -1
  %2113 = icmp slt i32 %2110, %2112
  br i1 %2113, label %2136, label %2114

2114:                                             ; preds = %2109
  %2115 = icmp eq i32 %2110, %2112
  br i1 %2115, label %2116, label %2152

2116:                                             ; preds = %2114
  store i32 0, ptr %4, align 4, !tbaa !5
  %2117 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2117, ptr %6, align 4, !tbaa !5
  br i1 %1870, label %2159, label %2118

2118:                                             ; preds = %2116, %2146
  %2119 = phi i64 [ %2150, %2146 ], [ 1, %2116 ]
  %2120 = getelementptr inbounds i32, ptr %4, i64 %2119
  %2121 = load i32, ptr %2120, align 4, !tbaa !5
  %2122 = getelementptr inbounds i32, ptr %12, i64 %2119
  %2123 = load i32, ptr %2122, align 4, !tbaa !5
  %2124 = add nsw i32 %2123, -1
  %2125 = icmp slt i32 %2121, %2124
  br i1 %2125, label %2126, label %2144

2126:                                             ; preds = %2118
  br i1 %2113, label %2136, label %2127

2127:                                             ; preds = %2126
  %2128 = shl i64 %2119, 32
  %2129 = add i64 %2128, -4294967296
  %2130 = ashr exact i64 %2129, 32
  %2131 = getelementptr inbounds i32, ptr %7, i64 %2130
  %2132 = load i32, ptr %2131, align 4, !tbaa !5
  %2133 = getelementptr inbounds i32, ptr %6, i64 %2119
  %2134 = load i32, ptr %2133, align 4, !tbaa !5
  %2135 = add nsw i32 %2134, %2132
  store i32 %2135, ptr %2133, align 4, !tbaa !5
  br label %2154

2136:                                             ; preds = %2109, %2126
  %2137 = phi i32 [ %2121, %2126 ], [ %2110, %2109 ]
  %2138 = phi ptr [ %2120, %2126 ], [ %4, %2109 ]
  %2139 = phi i64 [ %2119, %2126 ], [ 0, %2109 ]
  %2140 = add nsw i32 %2137, 1
  store i32 %2140, ptr %2138, align 4, !tbaa !5
  %2141 = getelementptr inbounds i32, ptr %7, i64 %2139
  %2142 = load i32, ptr %2141, align 4, !tbaa !5
  %2143 = getelementptr inbounds i32, ptr %6, i64 %2139
  br label %2154

2144:                                             ; preds = %2118
  %2145 = icmp eq i32 %2121, %2124
  br i1 %2145, label %2146, label %2152

2146:                                             ; preds = %2144
  store i32 0, ptr %2120, align 4, !tbaa !5
  %2147 = getelementptr inbounds i32, ptr %8, i64 %2119
  %2148 = load i32, ptr %2147, align 4, !tbaa !5
  %2149 = getelementptr inbounds i32, ptr %6, i64 %2119
  store i32 %2148, ptr %2149, align 4, !tbaa !5
  %2150 = add nuw nsw i64 %2119, 1
  %2151 = icmp eq i64 %2150, %1868
  br i1 %2151, label %2159, label %2118, !llvm.loop !1012

2152:                                             ; preds = %2114, %2144
  %2153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

2154:                                             ; preds = %2127, %2136
  %2155 = phi ptr [ %2143, %2136 ], [ %2120, %2127 ]
  %2156 = phi i32 [ %2142, %2136 ], [ 1, %2127 ]
  %2157 = load i32, ptr %2155, align 4, !tbaa !5
  %2158 = add nsw i32 %2157, %2156
  store i32 %2158, ptr %2155, align 4, !tbaa !5
  br label %2159

2159:                                             ; preds = %2146, %2154, %2116, %2097
  %2160 = icmp eq i32 %2108, %5
  br i1 %2160, label %5491, label %2019, !llvm.loop !1013

2161:                                             ; preds = %1856
  %2162 = getelementptr inbounds i32, ptr %3, i64 %19
  %2163 = load i32, ptr %2162, align 4, !tbaa !5
  %2164 = icmp eq i32 %2163, 0
  %2165 = icmp sgt i32 %5, 0
  br i1 %2164, label %2175, label %2166

2166:                                             ; preds = %2161
  br i1 %2165, label %2167, label %5491

2167:                                             ; preds = %2166
  %2168 = icmp sgt i32 %13, 1
  %2169 = icmp sgt i32 %13, 0
  %2170 = add i32 %13, -2
  %2171 = zext i32 %2170 to i64
  %2172 = zext i32 %13 to i64
  %2173 = add nuw i32 %5, 1
  %2174 = icmp eq i32 %13, 1
  br label %2317

2175:                                             ; preds = %2161
  br i1 %2165, label %2176, label %5491

2176:                                             ; preds = %2175
  %2177 = icmp sgt i32 %13, 1
  %2178 = icmp sgt i32 %13, 0
  %2179 = add i32 %13, -2
  %2180 = zext i32 %2179 to i64
  %2181 = zext i32 %13 to i64
  %2182 = add nuw i32 %5, 1
  %2183 = icmp eq i32 %13, 1
  br label %2184

2184:                                             ; preds = %2176, %2315
  %2185 = phi i16 [ 0, %2176 ], [ %2265, %2315 ]
  %2186 = phi i32 [ 0, %2176 ], [ %2267, %2315 ]
  %2187 = phi double [ 0.000000e+00, %2176 ], [ %2266, %2315 ]
  %2188 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2177, label %2189, label %2258

2189:                                             ; preds = %2184, %2248
  %2190 = phi i32 [ %2257, %2248 ], [ 0, %2184 ]
  %2191 = phi i64 [ %2199, %2248 ], [ %2181, %2184 ]
  %2192 = phi i64 [ %2256, %2248 ], [ %2180, %2184 ]
  %2193 = phi i32 [ %2254, %2248 ], [ %2188, %2184 ]
  %2194 = sub i32 %2179, %2190
  %2195 = tail call i32 @llvm.smin.i32(i32 %2194, i32 0)
  %2196 = sub i32 %2194, %2195
  %2197 = zext i32 %2196 to i64
  %2198 = add nuw nsw i64 %2197, 1
  %2199 = add nsw i64 %2191, -1
  %2200 = icmp ult i32 %2196, 31
  br i1 %2200, label %2236, label %2201

2201:                                             ; preds = %2189
  %2202 = and i64 %2198, 8589934560
  %2203 = sub i64 %2192, %2202
  br label %2204

2204:                                             ; preds = %2204, %2201
  %2205 = phi i64 [ 0, %2201 ], [ %2228, %2204 ]
  %2206 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2201 ], [ %2224, %2204 ]
  %2207 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2201 ], [ %2225, %2204 ]
  %2208 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2201 ], [ %2226, %2204 ]
  %2209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2201 ], [ %2227, %2204 ]
  %2210 = sub i64 %2192, %2205
  %2211 = getelementptr inbounds i32, ptr %9, i64 %2210
  %2212 = getelementptr inbounds i32, ptr %2211, i64 -7
  %2213 = load <8 x i32>, ptr %2212, align 4, !tbaa !5
  %2214 = shufflevector <8 x i32> %2213, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2215 = getelementptr inbounds i32, ptr %2211, i64 -15
  %2216 = load <8 x i32>, ptr %2215, align 4, !tbaa !5
  %2217 = shufflevector <8 x i32> %2216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2218 = getelementptr inbounds i32, ptr %2211, i64 -23
  %2219 = load <8 x i32>, ptr %2218, align 4, !tbaa !5
  %2220 = shufflevector <8 x i32> %2219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2221 = getelementptr inbounds i32, ptr %2211, i64 -31
  %2222 = load <8 x i32>, ptr %2221, align 4, !tbaa !5
  %2223 = shufflevector <8 x i32> %2222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2224 = mul <8 x i32> %2214, %2206
  %2225 = mul <8 x i32> %2217, %2207
  %2226 = mul <8 x i32> %2220, %2208
  %2227 = mul <8 x i32> %2223, %2209
  %2228 = add nuw i64 %2205, 32
  %2229 = icmp eq i64 %2228, %2202
  br i1 %2229, label %2230, label %2204, !llvm.loop !1014

2230:                                             ; preds = %2204
  %2231 = mul <8 x i32> %2225, %2224
  %2232 = mul <8 x i32> %2226, %2231
  %2233 = mul <8 x i32> %2227, %2232
  %2234 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2233)
  %2235 = icmp eq i64 %2198, %2202
  br i1 %2235, label %2248, label %2236

2236:                                             ; preds = %2189, %2230
  %2237 = phi i64 [ %2192, %2189 ], [ %2203, %2230 ]
  %2238 = phi i32 [ 1, %2189 ], [ %2234, %2230 ]
  br label %2239

2239:                                             ; preds = %2236, %2239
  %2240 = phi i64 [ %2245, %2239 ], [ %2237, %2236 ]
  %2241 = phi i32 [ %2244, %2239 ], [ %2238, %2236 ]
  %2242 = getelementptr inbounds i32, ptr %9, i64 %2240
  %2243 = load i32, ptr %2242, align 4, !tbaa !5
  %2244 = mul nsw i32 %2243, %2241
  %2245 = add nsw i64 %2240, -1
  %2246 = trunc i64 %2240 to i32
  %2247 = icmp sgt i32 %2246, 0
  br i1 %2247, label %2239, label %2248, !llvm.loop !1015

2248:                                             ; preds = %2239, %2230
  %2249 = phi i32 [ %2234, %2230 ], [ %2244, %2239 ]
  %2250 = and i64 %2199, 4294967295
  %2251 = getelementptr inbounds i32, ptr %6, i64 %2250
  %2252 = load i32, ptr %2251, align 4, !tbaa !5
  %2253 = mul nsw i32 %2252, %2249
  %2254 = add nsw i32 %2253, %2193
  %2255 = icmp sgt i64 %2191, 2
  %2256 = add nsw i64 %2192, -1
  %2257 = add i32 %2190, 1
  br i1 %2255, label %2189, label %2258, !llvm.loop !1016

2258:                                             ; preds = %2248, %2184
  %2259 = phi i32 [ %2188, %2184 ], [ %2254, %2248 ]
  %2260 = sext i32 %2259 to i64
  %2261 = getelementptr inbounds double, ptr %1848, i64 %2260
  %2262 = load double, ptr %2261, align 8, !tbaa !18
  %2263 = fptosi double %2262 to i16
  %2264 = mul i16 %2263, %2263
  %2265 = add i16 %2264, %2185
  %2266 = fadd fast double %2187, 1.000000e+00
  %2267 = add nuw nsw i32 %2186, 1
  br i1 %2178, label %2268, label %2315

2268:                                             ; preds = %2258
  %2269 = load i32, ptr %4, align 4, !tbaa !5
  %2270 = load i32, ptr %12, align 4, !tbaa !5
  %2271 = add nsw i32 %2270, -1
  %2272 = icmp slt i32 %2269, %2271
  br i1 %2272, label %2292, label %2273

2273:                                             ; preds = %2268
  %2274 = icmp eq i32 %2269, %2271
  br i1 %2274, label %2275, label %2308

2275:                                             ; preds = %2273
  store i32 0, ptr %4, align 4, !tbaa !5
  %2276 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2276, ptr %6, align 4, !tbaa !5
  br i1 %2183, label %2315, label %2277

2277:                                             ; preds = %2275, %2302
  %2278 = phi i64 [ %2306, %2302 ], [ 1, %2275 ]
  %2279 = getelementptr inbounds i32, ptr %4, i64 %2278
  %2280 = load i32, ptr %2279, align 4, !tbaa !5
  %2281 = getelementptr inbounds i32, ptr %12, i64 %2278
  %2282 = load i32, ptr %2281, align 4, !tbaa !5
  %2283 = add nsw i32 %2282, -1
  %2284 = icmp slt i32 %2280, %2283
  br i1 %2284, label %2285, label %2300

2285:                                             ; preds = %2277
  br i1 %2272, label %2292, label %2286

2286:                                             ; preds = %2285
  %2287 = getelementptr inbounds i32, ptr %7, i64 %2278
  %2288 = load i32, ptr %2287, align 4, !tbaa !5
  %2289 = getelementptr inbounds i32, ptr %6, i64 %2278
  %2290 = load i32, ptr %2289, align 4, !tbaa !5
  %2291 = add nsw i32 %2290, %2288
  store i32 %2291, ptr %2289, align 4, !tbaa !5
  br label %2310

2292:                                             ; preds = %2268, %2285
  %2293 = phi i32 [ %2280, %2285 ], [ %2269, %2268 ]
  %2294 = phi ptr [ %2279, %2285 ], [ %4, %2268 ]
  %2295 = phi i64 [ %2278, %2285 ], [ 0, %2268 ]
  %2296 = add nsw i32 %2293, 1
  store i32 %2296, ptr %2294, align 4, !tbaa !5
  %2297 = getelementptr inbounds i32, ptr %7, i64 %2295
  %2298 = load i32, ptr %2297, align 4, !tbaa !5
  %2299 = getelementptr inbounds i32, ptr %6, i64 %2295
  br label %2310

2300:                                             ; preds = %2277
  %2301 = icmp eq i32 %2280, %2283
  br i1 %2301, label %2302, label %2308

2302:                                             ; preds = %2300
  store i32 0, ptr %2279, align 4, !tbaa !5
  %2303 = getelementptr inbounds i32, ptr %8, i64 %2278
  %2304 = load i32, ptr %2303, align 4, !tbaa !5
  %2305 = getelementptr inbounds i32, ptr %6, i64 %2278
  store i32 %2304, ptr %2305, align 4, !tbaa !5
  %2306 = add nuw nsw i64 %2278, 1
  %2307 = icmp eq i64 %2306, %2181
  br i1 %2307, label %2315, label %2277, !llvm.loop !1017

2308:                                             ; preds = %2273, %2300
  store i16 %2265, ptr %1850, align 2, !tbaa !78
  %2309 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

2310:                                             ; preds = %2286, %2292
  %2311 = phi ptr [ %2299, %2292 ], [ %2279, %2286 ]
  %2312 = phi i32 [ %2298, %2292 ], [ 1, %2286 ]
  %2313 = load i32, ptr %2311, align 4, !tbaa !5
  %2314 = add nsw i32 %2313, %2312
  store i32 %2314, ptr %2311, align 4, !tbaa !5
  br label %2315

2315:                                             ; preds = %2302, %2310, %2275, %2258
  %2316 = icmp eq i32 %2267, %5
  br i1 %2316, label %5486, label %2184, !llvm.loop !1018

2317:                                             ; preds = %2167, %2453
  %2318 = phi i16 [ 0, %2167 ], [ %2401, %2453 ]
  %2319 = phi i32 [ 0, %2167 ], [ %2402, %2453 ]
  %2320 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2168, label %2321, label %2390

2321:                                             ; preds = %2317, %2380
  %2322 = phi i32 [ %2389, %2380 ], [ 0, %2317 ]
  %2323 = phi i64 [ %2331, %2380 ], [ %2172, %2317 ]
  %2324 = phi i64 [ %2388, %2380 ], [ %2171, %2317 ]
  %2325 = phi i32 [ %2386, %2380 ], [ %2320, %2317 ]
  %2326 = sub i32 %2170, %2322
  %2327 = tail call i32 @llvm.smin.i32(i32 %2326, i32 0)
  %2328 = sub i32 %2326, %2327
  %2329 = zext i32 %2328 to i64
  %2330 = add nuw nsw i64 %2329, 1
  %2331 = add nsw i64 %2323, -1
  %2332 = icmp ult i32 %2328, 31
  br i1 %2332, label %2368, label %2333

2333:                                             ; preds = %2321
  %2334 = and i64 %2330, 8589934560
  %2335 = sub i64 %2324, %2334
  br label %2336

2336:                                             ; preds = %2336, %2333
  %2337 = phi i64 [ 0, %2333 ], [ %2360, %2336 ]
  %2338 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2333 ], [ %2356, %2336 ]
  %2339 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2333 ], [ %2357, %2336 ]
  %2340 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2333 ], [ %2358, %2336 ]
  %2341 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2333 ], [ %2359, %2336 ]
  %2342 = sub i64 %2324, %2337
  %2343 = getelementptr inbounds i32, ptr %11, i64 %2342
  %2344 = getelementptr inbounds i32, ptr %2343, i64 -7
  %2345 = load <8 x i32>, ptr %2344, align 4, !tbaa !5
  %2346 = shufflevector <8 x i32> %2345, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2347 = getelementptr inbounds i32, ptr %2343, i64 -15
  %2348 = load <8 x i32>, ptr %2347, align 4, !tbaa !5
  %2349 = shufflevector <8 x i32> %2348, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2350 = getelementptr inbounds i32, ptr %2343, i64 -23
  %2351 = load <8 x i32>, ptr %2350, align 4, !tbaa !5
  %2352 = shufflevector <8 x i32> %2351, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2353 = getelementptr inbounds i32, ptr %2343, i64 -31
  %2354 = load <8 x i32>, ptr %2353, align 4, !tbaa !5
  %2355 = shufflevector <8 x i32> %2354, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2356 = mul <8 x i32> %2346, %2338
  %2357 = mul <8 x i32> %2349, %2339
  %2358 = mul <8 x i32> %2352, %2340
  %2359 = mul <8 x i32> %2355, %2341
  %2360 = add nuw i64 %2337, 32
  %2361 = icmp eq i64 %2360, %2334
  br i1 %2361, label %2362, label %2336, !llvm.loop !1019

2362:                                             ; preds = %2336
  %2363 = mul <8 x i32> %2357, %2356
  %2364 = mul <8 x i32> %2358, %2363
  %2365 = mul <8 x i32> %2359, %2364
  %2366 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2365)
  %2367 = icmp eq i64 %2330, %2334
  br i1 %2367, label %2380, label %2368

2368:                                             ; preds = %2321, %2362
  %2369 = phi i64 [ %2324, %2321 ], [ %2335, %2362 ]
  %2370 = phi i32 [ 1, %2321 ], [ %2366, %2362 ]
  br label %2371

2371:                                             ; preds = %2368, %2371
  %2372 = phi i64 [ %2377, %2371 ], [ %2369, %2368 ]
  %2373 = phi i32 [ %2376, %2371 ], [ %2370, %2368 ]
  %2374 = getelementptr inbounds i32, ptr %11, i64 %2372
  %2375 = load i32, ptr %2374, align 4, !tbaa !5
  %2376 = mul nsw i32 %2375, %2373
  %2377 = add nsw i64 %2372, -1
  %2378 = trunc i64 %2372 to i32
  %2379 = icmp sgt i32 %2378, 0
  br i1 %2379, label %2371, label %2380, !llvm.loop !1020

2380:                                             ; preds = %2371, %2362
  %2381 = phi i32 [ %2366, %2362 ], [ %2376, %2371 ]
  %2382 = and i64 %2331, 4294967295
  %2383 = getelementptr inbounds i32, ptr %6, i64 %2382
  %2384 = load i32, ptr %2383, align 4, !tbaa !5
  %2385 = mul nsw i32 %2384, %2381
  %2386 = add nsw i32 %2385, %2325
  %2387 = icmp sgt i64 %2323, 2
  %2388 = add nsw i64 %2324, -1
  %2389 = add i32 %2322, 1
  br i1 %2387, label %2321, label %2390, !llvm.loop !1021

2390:                                             ; preds = %2380, %2317
  %2391 = phi i32 [ %2320, %2317 ], [ %2386, %2380 ]
  %2392 = icmp slt i32 %2391, %5
  br i1 %2392, label %2395, label %2393

2393:                                             ; preds = %2390
  %2394 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

2395:                                             ; preds = %2390
  %2396 = sext i32 %2391 to i64
  %2397 = getelementptr inbounds double, ptr %1848, i64 %2396
  %2398 = load double, ptr %2397, align 8, !tbaa !18
  %2399 = fptosi double %2398 to i16
  %2400 = mul i16 %2399, %2399
  %2401 = add i16 %2400, %2318
  store i16 %2401, ptr %1850, align 2, !tbaa !78
  %2402 = add nuw nsw i32 %2319, 1
  br i1 %2169, label %2403, label %2453

2403:                                             ; preds = %2395
  %2404 = load i32, ptr %4, align 4, !tbaa !5
  %2405 = load i32, ptr %12, align 4, !tbaa !5
  %2406 = add nsw i32 %2405, -1
  %2407 = icmp slt i32 %2404, %2406
  br i1 %2407, label %2430, label %2408

2408:                                             ; preds = %2403
  %2409 = icmp eq i32 %2404, %2406
  br i1 %2409, label %2410, label %2446

2410:                                             ; preds = %2408
  store i32 0, ptr %4, align 4, !tbaa !5
  %2411 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2411, ptr %6, align 4, !tbaa !5
  br i1 %2174, label %2453, label %2412

2412:                                             ; preds = %2410, %2440
  %2413 = phi i64 [ %2444, %2440 ], [ 1, %2410 ]
  %2414 = getelementptr inbounds i32, ptr %4, i64 %2413
  %2415 = load i32, ptr %2414, align 4, !tbaa !5
  %2416 = getelementptr inbounds i32, ptr %12, i64 %2413
  %2417 = load i32, ptr %2416, align 4, !tbaa !5
  %2418 = add nsw i32 %2417, -1
  %2419 = icmp slt i32 %2415, %2418
  br i1 %2419, label %2420, label %2438

2420:                                             ; preds = %2412
  br i1 %2407, label %2430, label %2421

2421:                                             ; preds = %2420
  %2422 = shl i64 %2413, 32
  %2423 = add i64 %2422, -4294967296
  %2424 = ashr exact i64 %2423, 32
  %2425 = getelementptr inbounds i32, ptr %7, i64 %2424
  %2426 = load i32, ptr %2425, align 4, !tbaa !5
  %2427 = getelementptr inbounds i32, ptr %6, i64 %2413
  %2428 = load i32, ptr %2427, align 4, !tbaa !5
  %2429 = add nsw i32 %2428, %2426
  store i32 %2429, ptr %2427, align 4, !tbaa !5
  br label %2448

2430:                                             ; preds = %2403, %2420
  %2431 = phi i32 [ %2415, %2420 ], [ %2404, %2403 ]
  %2432 = phi ptr [ %2414, %2420 ], [ %4, %2403 ]
  %2433 = phi i64 [ %2413, %2420 ], [ 0, %2403 ]
  %2434 = add nsw i32 %2431, 1
  store i32 %2434, ptr %2432, align 4, !tbaa !5
  %2435 = getelementptr inbounds i32, ptr %7, i64 %2433
  %2436 = load i32, ptr %2435, align 4, !tbaa !5
  %2437 = getelementptr inbounds i32, ptr %6, i64 %2433
  br label %2448

2438:                                             ; preds = %2412
  %2439 = icmp eq i32 %2415, %2418
  br i1 %2439, label %2440, label %2446

2440:                                             ; preds = %2438
  store i32 0, ptr %2414, align 4, !tbaa !5
  %2441 = getelementptr inbounds i32, ptr %8, i64 %2413
  %2442 = load i32, ptr %2441, align 4, !tbaa !5
  %2443 = getelementptr inbounds i32, ptr %6, i64 %2413
  store i32 %2442, ptr %2443, align 4, !tbaa !5
  %2444 = add nuw nsw i64 %2413, 1
  %2445 = icmp eq i64 %2444, %2172
  br i1 %2445, label %2453, label %2412, !llvm.loop !1022

2446:                                             ; preds = %2408, %2438
  %2447 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

2448:                                             ; preds = %2421, %2430
  %2449 = phi ptr [ %2437, %2430 ], [ %2414, %2421 ]
  %2450 = phi i32 [ %2436, %2430 ], [ 1, %2421 ]
  %2451 = load i32, ptr %2449, align 4, !tbaa !5
  %2452 = add nsw i32 %2451, %2450
  store i32 %2452, ptr %2449, align 4, !tbaa !5
  br label %2453

2453:                                             ; preds = %2440, %2448, %2410, %2395
  %2454 = icmp eq i32 %2402, %5
  br i1 %2454, label %5491, label %2317, !llvm.loop !1023

2455:                                             ; preds = %1856
  %2456 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

2457:                                             ; preds = %18
  %2458 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2459 = load ptr, ptr %2458, align 8, !tbaa !9
  %2460 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2461 = load ptr, ptr %2460, align 8, !tbaa !9
  store i32 0, ptr %2461, align 4, !tbaa !5
  %2462 = icmp eq i32 %13, 0
  br i1 %2462, label %2463, label %2467

2463:                                             ; preds = %2457
  %2464 = load double, ptr %2459, align 8, !tbaa !18
  %2465 = fptosi double %2464 to i32
  %2466 = mul nsw i32 %2465, %2465
  store i32 %2466, ptr %2461, align 4, !tbaa !5
  br label %5491

2467:                                             ; preds = %2457
  switch i32 %1, label %3065 [
    i32 1, label %2468
    i32 0, label %2771
  ]

2468:                                             ; preds = %2467
  %2469 = getelementptr inbounds i32, ptr %3, i64 %19
  %2470 = load i32, ptr %2469, align 4, !tbaa !5
  %2471 = icmp eq i32 %2470, 0
  %2472 = icmp sgt i32 %5, 0
  br i1 %2471, label %2482, label %2473

2473:                                             ; preds = %2468
  br i1 %2472, label %2474, label %5491

2474:                                             ; preds = %2473
  %2475 = icmp sgt i32 %13, 1
  %2476 = icmp sgt i32 %13, 0
  %2477 = add i32 %13, -2
  %2478 = zext i32 %2477 to i64
  %2479 = zext i32 %13 to i64
  %2480 = add nuw i32 %5, 1
  %2481 = icmp eq i32 %13, 1
  br label %2630

2482:                                             ; preds = %2468
  br i1 %2472, label %2483, label %5491

2483:                                             ; preds = %2482
  %2484 = icmp sgt i32 %13, 1
  %2485 = icmp sgt i32 %13, 0
  %2486 = add i32 %13, -2
  %2487 = zext i32 %2486 to i64
  %2488 = zext i32 %13 to i64
  %2489 = add nuw i32 %5, 1
  %2490 = icmp eq i32 %13, 1
  br label %2491

2491:                                             ; preds = %2483, %2628
  %2492 = phi i32 [ 0, %2483 ], [ %2580, %2628 ]
  %2493 = phi double [ 0.000000e+00, %2483 ], [ %2579, %2628 ]
  %2494 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2484, label %2495, label %2564

2495:                                             ; preds = %2491, %2554
  %2496 = phi i32 [ %2563, %2554 ], [ 0, %2491 ]
  %2497 = phi i64 [ %2505, %2554 ], [ %2488, %2491 ]
  %2498 = phi i64 [ %2562, %2554 ], [ %2487, %2491 ]
  %2499 = phi i32 [ %2560, %2554 ], [ %2494, %2491 ]
  %2500 = sub i32 %2486, %2496
  %2501 = tail call i32 @llvm.smin.i32(i32 %2500, i32 0)
  %2502 = sub i32 %2500, %2501
  %2503 = zext i32 %2502 to i64
  %2504 = add nuw nsw i64 %2503, 1
  %2505 = add nsw i64 %2497, -1
  %2506 = icmp ult i32 %2502, 31
  br i1 %2506, label %2542, label %2507

2507:                                             ; preds = %2495
  %2508 = and i64 %2504, 8589934560
  %2509 = sub i64 %2498, %2508
  br label %2510

2510:                                             ; preds = %2510, %2507
  %2511 = phi i64 [ 0, %2507 ], [ %2534, %2510 ]
  %2512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2507 ], [ %2530, %2510 ]
  %2513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2507 ], [ %2531, %2510 ]
  %2514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2507 ], [ %2532, %2510 ]
  %2515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2507 ], [ %2533, %2510 ]
  %2516 = sub i64 %2498, %2511
  %2517 = getelementptr inbounds i32, ptr %9, i64 %2516
  %2518 = getelementptr inbounds i32, ptr %2517, i64 -7
  %2519 = load <8 x i32>, ptr %2518, align 4, !tbaa !5
  %2520 = shufflevector <8 x i32> %2519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2521 = getelementptr inbounds i32, ptr %2517, i64 -15
  %2522 = load <8 x i32>, ptr %2521, align 4, !tbaa !5
  %2523 = shufflevector <8 x i32> %2522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2524 = getelementptr inbounds i32, ptr %2517, i64 -23
  %2525 = load <8 x i32>, ptr %2524, align 4, !tbaa !5
  %2526 = shufflevector <8 x i32> %2525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2527 = getelementptr inbounds i32, ptr %2517, i64 -31
  %2528 = load <8 x i32>, ptr %2527, align 4, !tbaa !5
  %2529 = shufflevector <8 x i32> %2528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2530 = mul <8 x i32> %2520, %2512
  %2531 = mul <8 x i32> %2523, %2513
  %2532 = mul <8 x i32> %2526, %2514
  %2533 = mul <8 x i32> %2529, %2515
  %2534 = add nuw i64 %2511, 32
  %2535 = icmp eq i64 %2534, %2508
  br i1 %2535, label %2536, label %2510, !llvm.loop !1024

2536:                                             ; preds = %2510
  %2537 = mul <8 x i32> %2531, %2530
  %2538 = mul <8 x i32> %2532, %2537
  %2539 = mul <8 x i32> %2533, %2538
  %2540 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2539)
  %2541 = icmp eq i64 %2504, %2508
  br i1 %2541, label %2554, label %2542

2542:                                             ; preds = %2495, %2536
  %2543 = phi i64 [ %2498, %2495 ], [ %2509, %2536 ]
  %2544 = phi i32 [ 1, %2495 ], [ %2540, %2536 ]
  br label %2545

2545:                                             ; preds = %2542, %2545
  %2546 = phi i64 [ %2551, %2545 ], [ %2543, %2542 ]
  %2547 = phi i32 [ %2550, %2545 ], [ %2544, %2542 ]
  %2548 = getelementptr inbounds i32, ptr %9, i64 %2546
  %2549 = load i32, ptr %2548, align 4, !tbaa !5
  %2550 = mul nsw i32 %2549, %2547
  %2551 = add nsw i64 %2546, -1
  %2552 = trunc i64 %2546 to i32
  %2553 = icmp sgt i32 %2552, 0
  br i1 %2553, label %2545, label %2554, !llvm.loop !1025

2554:                                             ; preds = %2545, %2536
  %2555 = phi i32 [ %2540, %2536 ], [ %2550, %2545 ]
  %2556 = and i64 %2505, 4294967295
  %2557 = getelementptr inbounds i32, ptr %6, i64 %2556
  %2558 = load i32, ptr %2557, align 4, !tbaa !5
  %2559 = mul nsw i32 %2558, %2555
  %2560 = add nsw i32 %2559, %2499
  %2561 = icmp sgt i64 %2497, 2
  %2562 = add nsw i64 %2498, -1
  %2563 = add i32 %2496, 1
  br i1 %2561, label %2495, label %2564, !llvm.loop !1026

2564:                                             ; preds = %2554, %2491
  %2565 = phi i32 [ %2494, %2491 ], [ %2560, %2554 ]
  %2566 = sext i32 %2565 to i64
  %2567 = getelementptr inbounds double, ptr %2, i64 %2566
  %2568 = load double, ptr %2567, align 8, !tbaa !18
  %2569 = getelementptr inbounds double, ptr %2459, i64 %2566
  %2570 = load double, ptr %2569, align 8, !tbaa !18
  %2571 = fptosi double %2570 to i32
  %2572 = load i32, ptr %2461, align 4, !tbaa !5
  %2573 = sitofp i32 %2572 to double
  %2574 = sitofp i32 %2571 to double
  %2575 = fmul fast double %2568, %2574
  %2576 = fmul fast double %2575, %2575
  %2577 = fadd fast double %2576, %2573
  %2578 = fptosi double %2577 to i32
  store i32 %2578, ptr %2461, align 4, !tbaa !5
  %2579 = fadd fast double %2568, %2493
  %2580 = add nuw nsw i32 %2492, 1
  br i1 %2485, label %2581, label %2628

2581:                                             ; preds = %2564
  %2582 = load i32, ptr %4, align 4, !tbaa !5
  %2583 = load i32, ptr %12, align 4, !tbaa !5
  %2584 = add nsw i32 %2583, -1
  %2585 = icmp slt i32 %2582, %2584
  br i1 %2585, label %2605, label %2586

2586:                                             ; preds = %2581
  %2587 = icmp eq i32 %2582, %2584
  br i1 %2587, label %2588, label %2621

2588:                                             ; preds = %2586
  store i32 0, ptr %4, align 4, !tbaa !5
  %2589 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2589, ptr %6, align 4, !tbaa !5
  br i1 %2490, label %2628, label %2590

2590:                                             ; preds = %2588, %2615
  %2591 = phi i64 [ %2619, %2615 ], [ 1, %2588 ]
  %2592 = getelementptr inbounds i32, ptr %4, i64 %2591
  %2593 = load i32, ptr %2592, align 4, !tbaa !5
  %2594 = getelementptr inbounds i32, ptr %12, i64 %2591
  %2595 = load i32, ptr %2594, align 4, !tbaa !5
  %2596 = add nsw i32 %2595, -1
  %2597 = icmp slt i32 %2593, %2596
  br i1 %2597, label %2598, label %2613

2598:                                             ; preds = %2590
  br i1 %2585, label %2605, label %2599

2599:                                             ; preds = %2598
  %2600 = getelementptr inbounds i32, ptr %7, i64 %2591
  %2601 = load i32, ptr %2600, align 4, !tbaa !5
  %2602 = getelementptr inbounds i32, ptr %6, i64 %2591
  %2603 = load i32, ptr %2602, align 4, !tbaa !5
  %2604 = add nsw i32 %2603, %2601
  store i32 %2604, ptr %2602, align 4, !tbaa !5
  br label %2623

2605:                                             ; preds = %2581, %2598
  %2606 = phi i32 [ %2593, %2598 ], [ %2582, %2581 ]
  %2607 = phi ptr [ %2592, %2598 ], [ %4, %2581 ]
  %2608 = phi i64 [ %2591, %2598 ], [ 0, %2581 ]
  %2609 = add nsw i32 %2606, 1
  store i32 %2609, ptr %2607, align 4, !tbaa !5
  %2610 = getelementptr inbounds i32, ptr %7, i64 %2608
  %2611 = load i32, ptr %2610, align 4, !tbaa !5
  %2612 = getelementptr inbounds i32, ptr %6, i64 %2608
  br label %2623

2613:                                             ; preds = %2590
  %2614 = icmp eq i32 %2593, %2596
  br i1 %2614, label %2615, label %2621

2615:                                             ; preds = %2613
  store i32 0, ptr %2592, align 4, !tbaa !5
  %2616 = getelementptr inbounds i32, ptr %8, i64 %2591
  %2617 = load i32, ptr %2616, align 4, !tbaa !5
  %2618 = getelementptr inbounds i32, ptr %6, i64 %2591
  store i32 %2617, ptr %2618, align 4, !tbaa !5
  %2619 = add nuw nsw i64 %2591, 1
  %2620 = icmp eq i64 %2619, %2488
  br i1 %2620, label %2628, label %2590, !llvm.loop !1027

2621:                                             ; preds = %2586, %2613
  %2622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

2623:                                             ; preds = %2599, %2605
  %2624 = phi ptr [ %2612, %2605 ], [ %2592, %2599 ]
  %2625 = phi i32 [ %2611, %2605 ], [ 1, %2599 ]
  %2626 = load i32, ptr %2624, align 4, !tbaa !5
  %2627 = add nsw i32 %2626, %2625
  store i32 %2627, ptr %2624, align 4, !tbaa !5
  br label %2628

2628:                                             ; preds = %2615, %2623, %2588, %2564
  %2629 = icmp eq i32 %2580, %5
  br i1 %2629, label %5491, label %2491, !llvm.loop !1028

2630:                                             ; preds = %2474, %2769
  %2631 = phi i32 [ 0, %2474 ], [ %2718, %2769 ]
  %2632 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2475, label %2633, label %2702

2633:                                             ; preds = %2630, %2692
  %2634 = phi i32 [ %2701, %2692 ], [ 0, %2630 ]
  %2635 = phi i64 [ %2643, %2692 ], [ %2479, %2630 ]
  %2636 = phi i64 [ %2700, %2692 ], [ %2478, %2630 ]
  %2637 = phi i32 [ %2698, %2692 ], [ %2632, %2630 ]
  %2638 = sub i32 %2477, %2634
  %2639 = tail call i32 @llvm.smin.i32(i32 %2638, i32 0)
  %2640 = sub i32 %2638, %2639
  %2641 = zext i32 %2640 to i64
  %2642 = add nuw nsw i64 %2641, 1
  %2643 = add nsw i64 %2635, -1
  %2644 = icmp ult i32 %2640, 31
  br i1 %2644, label %2680, label %2645

2645:                                             ; preds = %2633
  %2646 = and i64 %2642, 8589934560
  %2647 = sub i64 %2636, %2646
  br label %2648

2648:                                             ; preds = %2648, %2645
  %2649 = phi i64 [ 0, %2645 ], [ %2672, %2648 ]
  %2650 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2645 ], [ %2668, %2648 ]
  %2651 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2645 ], [ %2669, %2648 ]
  %2652 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2645 ], [ %2670, %2648 ]
  %2653 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2645 ], [ %2671, %2648 ]
  %2654 = sub i64 %2636, %2649
  %2655 = getelementptr inbounds i32, ptr %11, i64 %2654
  %2656 = getelementptr inbounds i32, ptr %2655, i64 -7
  %2657 = load <8 x i32>, ptr %2656, align 4, !tbaa !5
  %2658 = shufflevector <8 x i32> %2657, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2659 = getelementptr inbounds i32, ptr %2655, i64 -15
  %2660 = load <8 x i32>, ptr %2659, align 4, !tbaa !5
  %2661 = shufflevector <8 x i32> %2660, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2662 = getelementptr inbounds i32, ptr %2655, i64 -23
  %2663 = load <8 x i32>, ptr %2662, align 4, !tbaa !5
  %2664 = shufflevector <8 x i32> %2663, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2665 = getelementptr inbounds i32, ptr %2655, i64 -31
  %2666 = load <8 x i32>, ptr %2665, align 4, !tbaa !5
  %2667 = shufflevector <8 x i32> %2666, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2668 = mul <8 x i32> %2658, %2650
  %2669 = mul <8 x i32> %2661, %2651
  %2670 = mul <8 x i32> %2664, %2652
  %2671 = mul <8 x i32> %2667, %2653
  %2672 = add nuw i64 %2649, 32
  %2673 = icmp eq i64 %2672, %2646
  br i1 %2673, label %2674, label %2648, !llvm.loop !1029

2674:                                             ; preds = %2648
  %2675 = mul <8 x i32> %2669, %2668
  %2676 = mul <8 x i32> %2670, %2675
  %2677 = mul <8 x i32> %2671, %2676
  %2678 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2677)
  %2679 = icmp eq i64 %2642, %2646
  br i1 %2679, label %2692, label %2680

2680:                                             ; preds = %2633, %2674
  %2681 = phi i64 [ %2636, %2633 ], [ %2647, %2674 ]
  %2682 = phi i32 [ 1, %2633 ], [ %2678, %2674 ]
  br label %2683

2683:                                             ; preds = %2680, %2683
  %2684 = phi i64 [ %2689, %2683 ], [ %2681, %2680 ]
  %2685 = phi i32 [ %2688, %2683 ], [ %2682, %2680 ]
  %2686 = getelementptr inbounds i32, ptr %11, i64 %2684
  %2687 = load i32, ptr %2686, align 4, !tbaa !5
  %2688 = mul nsw i32 %2687, %2685
  %2689 = add nsw i64 %2684, -1
  %2690 = trunc i64 %2684 to i32
  %2691 = icmp sgt i32 %2690, 0
  br i1 %2691, label %2683, label %2692, !llvm.loop !1030

2692:                                             ; preds = %2683, %2674
  %2693 = phi i32 [ %2678, %2674 ], [ %2688, %2683 ]
  %2694 = and i64 %2643, 4294967295
  %2695 = getelementptr inbounds i32, ptr %6, i64 %2694
  %2696 = load i32, ptr %2695, align 4, !tbaa !5
  %2697 = mul nsw i32 %2696, %2693
  %2698 = add nsw i32 %2697, %2637
  %2699 = icmp sgt i64 %2635, 2
  %2700 = add nsw i64 %2636, -1
  %2701 = add i32 %2634, 1
  br i1 %2699, label %2633, label %2702, !llvm.loop !1031

2702:                                             ; preds = %2692, %2630
  %2703 = phi i32 [ %2632, %2630 ], [ %2698, %2692 ]
  %2704 = icmp slt i32 %2703, %5
  br i1 %2704, label %2707, label %2705

2705:                                             ; preds = %2702
  %2706 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

2707:                                             ; preds = %2702
  %2708 = sext i32 %2703 to i64
  %2709 = getelementptr inbounds double, ptr %2459, i64 %2708
  %2710 = load double, ptr %2709, align 8, !tbaa !18
  %2711 = fptosi double %2710 to i32
  %2712 = load i32, ptr %2461, align 4, !tbaa !5
  %2713 = sitofp i32 %2712 to double
  %2714 = sitofp i32 %2711 to double
  %2715 = fmul fast double %2714, %2714
  %2716 = fadd fast double %2715, %2713
  %2717 = fptosi double %2716 to i32
  store i32 %2717, ptr %2461, align 4, !tbaa !5
  %2718 = add nuw nsw i32 %2631, 1
  br i1 %2476, label %2719, label %2769

2719:                                             ; preds = %2707
  %2720 = load i32, ptr %4, align 4, !tbaa !5
  %2721 = load i32, ptr %12, align 4, !tbaa !5
  %2722 = add nsw i32 %2721, -1
  %2723 = icmp slt i32 %2720, %2722
  br i1 %2723, label %2746, label %2724

2724:                                             ; preds = %2719
  %2725 = icmp eq i32 %2720, %2722
  br i1 %2725, label %2726, label %2762

2726:                                             ; preds = %2724
  store i32 0, ptr %4, align 4, !tbaa !5
  %2727 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2727, ptr %6, align 4, !tbaa !5
  br i1 %2481, label %2769, label %2728

2728:                                             ; preds = %2726, %2756
  %2729 = phi i64 [ %2760, %2756 ], [ 1, %2726 ]
  %2730 = getelementptr inbounds i32, ptr %4, i64 %2729
  %2731 = load i32, ptr %2730, align 4, !tbaa !5
  %2732 = getelementptr inbounds i32, ptr %12, i64 %2729
  %2733 = load i32, ptr %2732, align 4, !tbaa !5
  %2734 = add nsw i32 %2733, -1
  %2735 = icmp slt i32 %2731, %2734
  br i1 %2735, label %2736, label %2754

2736:                                             ; preds = %2728
  br i1 %2723, label %2746, label %2737

2737:                                             ; preds = %2736
  %2738 = shl i64 %2729, 32
  %2739 = add i64 %2738, -4294967296
  %2740 = ashr exact i64 %2739, 32
  %2741 = getelementptr inbounds i32, ptr %7, i64 %2740
  %2742 = load i32, ptr %2741, align 4, !tbaa !5
  %2743 = getelementptr inbounds i32, ptr %6, i64 %2729
  %2744 = load i32, ptr %2743, align 4, !tbaa !5
  %2745 = add nsw i32 %2744, %2742
  store i32 %2745, ptr %2743, align 4, !tbaa !5
  br label %2764

2746:                                             ; preds = %2719, %2736
  %2747 = phi i32 [ %2731, %2736 ], [ %2720, %2719 ]
  %2748 = phi ptr [ %2730, %2736 ], [ %4, %2719 ]
  %2749 = phi i64 [ %2729, %2736 ], [ 0, %2719 ]
  %2750 = add nsw i32 %2747, 1
  store i32 %2750, ptr %2748, align 4, !tbaa !5
  %2751 = getelementptr inbounds i32, ptr %7, i64 %2749
  %2752 = load i32, ptr %2751, align 4, !tbaa !5
  %2753 = getelementptr inbounds i32, ptr %6, i64 %2749
  br label %2764

2754:                                             ; preds = %2728
  %2755 = icmp eq i32 %2731, %2734
  br i1 %2755, label %2756, label %2762

2756:                                             ; preds = %2754
  store i32 0, ptr %2730, align 4, !tbaa !5
  %2757 = getelementptr inbounds i32, ptr %8, i64 %2729
  %2758 = load i32, ptr %2757, align 4, !tbaa !5
  %2759 = getelementptr inbounds i32, ptr %6, i64 %2729
  store i32 %2758, ptr %2759, align 4, !tbaa !5
  %2760 = add nuw nsw i64 %2729, 1
  %2761 = icmp eq i64 %2760, %2479
  br i1 %2761, label %2769, label %2728, !llvm.loop !1032

2762:                                             ; preds = %2724, %2754
  %2763 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

2764:                                             ; preds = %2737, %2746
  %2765 = phi ptr [ %2753, %2746 ], [ %2730, %2737 ]
  %2766 = phi i32 [ %2752, %2746 ], [ 1, %2737 ]
  %2767 = load i32, ptr %2765, align 4, !tbaa !5
  %2768 = add nsw i32 %2767, %2766
  store i32 %2768, ptr %2765, align 4, !tbaa !5
  br label %2769

2769:                                             ; preds = %2756, %2764, %2726, %2707
  %2770 = icmp eq i32 %2718, %5
  br i1 %2770, label %5491, label %2630, !llvm.loop !1033

2771:                                             ; preds = %2467
  %2772 = getelementptr inbounds i32, ptr %3, i64 %19
  %2773 = load i32, ptr %2772, align 4, !tbaa !5
  %2774 = icmp eq i32 %2773, 0
  %2775 = icmp sgt i32 %5, 0
  br i1 %2774, label %2785, label %2776

2776:                                             ; preds = %2771
  br i1 %2775, label %2777, label %5491

2777:                                             ; preds = %2776
  %2778 = icmp sgt i32 %13, 1
  %2779 = icmp sgt i32 %13, 0
  %2780 = add i32 %13, -2
  %2781 = zext i32 %2780 to i64
  %2782 = zext i32 %13 to i64
  %2783 = add nuw i32 %5, 1
  %2784 = icmp eq i32 %13, 1
  br label %2927

2785:                                             ; preds = %2771
  br i1 %2775, label %2786, label %5491

2786:                                             ; preds = %2785
  %2787 = icmp sgt i32 %13, 1
  %2788 = icmp sgt i32 %13, 0
  %2789 = add i32 %13, -2
  %2790 = zext i32 %2789 to i64
  %2791 = zext i32 %13 to i64
  %2792 = add nuw i32 %5, 1
  %2793 = icmp eq i32 %13, 1
  br label %2794

2794:                                             ; preds = %2786, %2925
  %2795 = phi i32 [ 0, %2786 ], [ %2877, %2925 ]
  %2796 = phi double [ 0.000000e+00, %2786 ], [ %2876, %2925 ]
  %2797 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2787, label %2798, label %2867

2798:                                             ; preds = %2794, %2857
  %2799 = phi i32 [ %2866, %2857 ], [ 0, %2794 ]
  %2800 = phi i64 [ %2808, %2857 ], [ %2791, %2794 ]
  %2801 = phi i64 [ %2865, %2857 ], [ %2790, %2794 ]
  %2802 = phi i32 [ %2863, %2857 ], [ %2797, %2794 ]
  %2803 = sub i32 %2789, %2799
  %2804 = tail call i32 @llvm.smin.i32(i32 %2803, i32 0)
  %2805 = sub i32 %2803, %2804
  %2806 = zext i32 %2805 to i64
  %2807 = add nuw nsw i64 %2806, 1
  %2808 = add nsw i64 %2800, -1
  %2809 = icmp ult i32 %2805, 31
  br i1 %2809, label %2845, label %2810

2810:                                             ; preds = %2798
  %2811 = and i64 %2807, 8589934560
  %2812 = sub i64 %2801, %2811
  br label %2813

2813:                                             ; preds = %2813, %2810
  %2814 = phi i64 [ 0, %2810 ], [ %2837, %2813 ]
  %2815 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2833, %2813 ]
  %2816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2834, %2813 ]
  %2817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2835, %2813 ]
  %2818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2836, %2813 ]
  %2819 = sub i64 %2801, %2814
  %2820 = getelementptr inbounds i32, ptr %9, i64 %2819
  %2821 = getelementptr inbounds i32, ptr %2820, i64 -7
  %2822 = load <8 x i32>, ptr %2821, align 4, !tbaa !5
  %2823 = shufflevector <8 x i32> %2822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2824 = getelementptr inbounds i32, ptr %2820, i64 -15
  %2825 = load <8 x i32>, ptr %2824, align 4, !tbaa !5
  %2826 = shufflevector <8 x i32> %2825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2827 = getelementptr inbounds i32, ptr %2820, i64 -23
  %2828 = load <8 x i32>, ptr %2827, align 4, !tbaa !5
  %2829 = shufflevector <8 x i32> %2828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2830 = getelementptr inbounds i32, ptr %2820, i64 -31
  %2831 = load <8 x i32>, ptr %2830, align 4, !tbaa !5
  %2832 = shufflevector <8 x i32> %2831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2833 = mul <8 x i32> %2823, %2815
  %2834 = mul <8 x i32> %2826, %2816
  %2835 = mul <8 x i32> %2829, %2817
  %2836 = mul <8 x i32> %2832, %2818
  %2837 = add nuw i64 %2814, 32
  %2838 = icmp eq i64 %2837, %2811
  br i1 %2838, label %2839, label %2813, !llvm.loop !1034

2839:                                             ; preds = %2813
  %2840 = mul <8 x i32> %2834, %2833
  %2841 = mul <8 x i32> %2835, %2840
  %2842 = mul <8 x i32> %2836, %2841
  %2843 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2842)
  %2844 = icmp eq i64 %2807, %2811
  br i1 %2844, label %2857, label %2845

2845:                                             ; preds = %2798, %2839
  %2846 = phi i64 [ %2801, %2798 ], [ %2812, %2839 ]
  %2847 = phi i32 [ 1, %2798 ], [ %2843, %2839 ]
  br label %2848

2848:                                             ; preds = %2845, %2848
  %2849 = phi i64 [ %2854, %2848 ], [ %2846, %2845 ]
  %2850 = phi i32 [ %2853, %2848 ], [ %2847, %2845 ]
  %2851 = getelementptr inbounds i32, ptr %9, i64 %2849
  %2852 = load i32, ptr %2851, align 4, !tbaa !5
  %2853 = mul nsw i32 %2852, %2850
  %2854 = add nsw i64 %2849, -1
  %2855 = trunc i64 %2849 to i32
  %2856 = icmp sgt i32 %2855, 0
  br i1 %2856, label %2848, label %2857, !llvm.loop !1035

2857:                                             ; preds = %2848, %2839
  %2858 = phi i32 [ %2843, %2839 ], [ %2853, %2848 ]
  %2859 = and i64 %2808, 4294967295
  %2860 = getelementptr inbounds i32, ptr %6, i64 %2859
  %2861 = load i32, ptr %2860, align 4, !tbaa !5
  %2862 = mul nsw i32 %2861, %2858
  %2863 = add nsw i32 %2862, %2802
  %2864 = icmp sgt i64 %2800, 2
  %2865 = add nsw i64 %2801, -1
  %2866 = add i32 %2799, 1
  br i1 %2864, label %2798, label %2867, !llvm.loop !1036

2867:                                             ; preds = %2857, %2794
  %2868 = phi i32 [ %2797, %2794 ], [ %2863, %2857 ]
  %2869 = sext i32 %2868 to i64
  %2870 = getelementptr inbounds double, ptr %2459, i64 %2869
  %2871 = load double, ptr %2870, align 8, !tbaa !18
  %2872 = fptosi double %2871 to i32
  %2873 = load i32, ptr %2461, align 4, !tbaa !5
  %2874 = mul nsw i32 %2872, %2872
  %2875 = add nsw i32 %2874, %2873
  store i32 %2875, ptr %2461, align 4, !tbaa !5
  %2876 = fadd fast double %2796, 1.000000e+00
  %2877 = add nuw nsw i32 %2795, 1
  br i1 %2788, label %2878, label %2925

2878:                                             ; preds = %2867
  %2879 = load i32, ptr %4, align 4, !tbaa !5
  %2880 = load i32, ptr %12, align 4, !tbaa !5
  %2881 = add nsw i32 %2880, -1
  %2882 = icmp slt i32 %2879, %2881
  br i1 %2882, label %2902, label %2883

2883:                                             ; preds = %2878
  %2884 = icmp eq i32 %2879, %2881
  br i1 %2884, label %2885, label %2918

2885:                                             ; preds = %2883
  store i32 0, ptr %4, align 4, !tbaa !5
  %2886 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2886, ptr %6, align 4, !tbaa !5
  br i1 %2793, label %2925, label %2887

2887:                                             ; preds = %2885, %2912
  %2888 = phi i64 [ %2916, %2912 ], [ 1, %2885 ]
  %2889 = getelementptr inbounds i32, ptr %4, i64 %2888
  %2890 = load i32, ptr %2889, align 4, !tbaa !5
  %2891 = getelementptr inbounds i32, ptr %12, i64 %2888
  %2892 = load i32, ptr %2891, align 4, !tbaa !5
  %2893 = add nsw i32 %2892, -1
  %2894 = icmp slt i32 %2890, %2893
  br i1 %2894, label %2895, label %2910

2895:                                             ; preds = %2887
  br i1 %2882, label %2902, label %2896

2896:                                             ; preds = %2895
  %2897 = getelementptr inbounds i32, ptr %7, i64 %2888
  %2898 = load i32, ptr %2897, align 4, !tbaa !5
  %2899 = getelementptr inbounds i32, ptr %6, i64 %2888
  %2900 = load i32, ptr %2899, align 4, !tbaa !5
  %2901 = add nsw i32 %2900, %2898
  store i32 %2901, ptr %2899, align 4, !tbaa !5
  br label %2920

2902:                                             ; preds = %2878, %2895
  %2903 = phi i32 [ %2890, %2895 ], [ %2879, %2878 ]
  %2904 = phi ptr [ %2889, %2895 ], [ %4, %2878 ]
  %2905 = phi i64 [ %2888, %2895 ], [ 0, %2878 ]
  %2906 = add nsw i32 %2903, 1
  store i32 %2906, ptr %2904, align 4, !tbaa !5
  %2907 = getelementptr inbounds i32, ptr %7, i64 %2905
  %2908 = load i32, ptr %2907, align 4, !tbaa !5
  %2909 = getelementptr inbounds i32, ptr %6, i64 %2905
  br label %2920

2910:                                             ; preds = %2887
  %2911 = icmp eq i32 %2890, %2893
  br i1 %2911, label %2912, label %2918

2912:                                             ; preds = %2910
  store i32 0, ptr %2889, align 4, !tbaa !5
  %2913 = getelementptr inbounds i32, ptr %8, i64 %2888
  %2914 = load i32, ptr %2913, align 4, !tbaa !5
  %2915 = getelementptr inbounds i32, ptr %6, i64 %2888
  store i32 %2914, ptr %2915, align 4, !tbaa !5
  %2916 = add nuw nsw i64 %2888, 1
  %2917 = icmp eq i64 %2916, %2791
  br i1 %2917, label %2925, label %2887, !llvm.loop !1037

2918:                                             ; preds = %2883, %2910
  %2919 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

2920:                                             ; preds = %2896, %2902
  %2921 = phi ptr [ %2909, %2902 ], [ %2889, %2896 ]
  %2922 = phi i32 [ %2908, %2902 ], [ 1, %2896 ]
  %2923 = load i32, ptr %2921, align 4, !tbaa !5
  %2924 = add nsw i32 %2923, %2922
  store i32 %2924, ptr %2921, align 4, !tbaa !5
  br label %2925

2925:                                             ; preds = %2912, %2920, %2885, %2867
  %2926 = icmp eq i32 %2877, %5
  br i1 %2926, label %5491, label %2794, !llvm.loop !1038

2927:                                             ; preds = %2777, %3063
  %2928 = phi i32 [ 0, %2777 ], [ %3012, %3063 ]
  %2929 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2778, label %2930, label %2999

2930:                                             ; preds = %2927, %2989
  %2931 = phi i32 [ %2998, %2989 ], [ 0, %2927 ]
  %2932 = phi i64 [ %2940, %2989 ], [ %2782, %2927 ]
  %2933 = phi i64 [ %2997, %2989 ], [ %2781, %2927 ]
  %2934 = phi i32 [ %2995, %2989 ], [ %2929, %2927 ]
  %2935 = sub i32 %2780, %2931
  %2936 = tail call i32 @llvm.smin.i32(i32 %2935, i32 0)
  %2937 = sub i32 %2935, %2936
  %2938 = zext i32 %2937 to i64
  %2939 = add nuw nsw i64 %2938, 1
  %2940 = add nsw i64 %2932, -1
  %2941 = icmp ult i32 %2937, 31
  br i1 %2941, label %2977, label %2942

2942:                                             ; preds = %2930
  %2943 = and i64 %2939, 8589934560
  %2944 = sub i64 %2933, %2943
  br label %2945

2945:                                             ; preds = %2945, %2942
  %2946 = phi i64 [ 0, %2942 ], [ %2969, %2945 ]
  %2947 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2965, %2945 ]
  %2948 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2966, %2945 ]
  %2949 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2967, %2945 ]
  %2950 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2968, %2945 ]
  %2951 = sub i64 %2933, %2946
  %2952 = getelementptr inbounds i32, ptr %11, i64 %2951
  %2953 = getelementptr inbounds i32, ptr %2952, i64 -7
  %2954 = load <8 x i32>, ptr %2953, align 4, !tbaa !5
  %2955 = shufflevector <8 x i32> %2954, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2956 = getelementptr inbounds i32, ptr %2952, i64 -15
  %2957 = load <8 x i32>, ptr %2956, align 4, !tbaa !5
  %2958 = shufflevector <8 x i32> %2957, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2959 = getelementptr inbounds i32, ptr %2952, i64 -23
  %2960 = load <8 x i32>, ptr %2959, align 4, !tbaa !5
  %2961 = shufflevector <8 x i32> %2960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2962 = getelementptr inbounds i32, ptr %2952, i64 -31
  %2963 = load <8 x i32>, ptr %2962, align 4, !tbaa !5
  %2964 = shufflevector <8 x i32> %2963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2965 = mul <8 x i32> %2955, %2947
  %2966 = mul <8 x i32> %2958, %2948
  %2967 = mul <8 x i32> %2961, %2949
  %2968 = mul <8 x i32> %2964, %2950
  %2969 = add nuw i64 %2946, 32
  %2970 = icmp eq i64 %2969, %2943
  br i1 %2970, label %2971, label %2945, !llvm.loop !1039

2971:                                             ; preds = %2945
  %2972 = mul <8 x i32> %2966, %2965
  %2973 = mul <8 x i32> %2967, %2972
  %2974 = mul <8 x i32> %2968, %2973
  %2975 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2974)
  %2976 = icmp eq i64 %2939, %2943
  br i1 %2976, label %2989, label %2977

2977:                                             ; preds = %2930, %2971
  %2978 = phi i64 [ %2933, %2930 ], [ %2944, %2971 ]
  %2979 = phi i32 [ 1, %2930 ], [ %2975, %2971 ]
  br label %2980

2980:                                             ; preds = %2977, %2980
  %2981 = phi i64 [ %2986, %2980 ], [ %2978, %2977 ]
  %2982 = phi i32 [ %2985, %2980 ], [ %2979, %2977 ]
  %2983 = getelementptr inbounds i32, ptr %11, i64 %2981
  %2984 = load i32, ptr %2983, align 4, !tbaa !5
  %2985 = mul nsw i32 %2984, %2982
  %2986 = add nsw i64 %2981, -1
  %2987 = trunc i64 %2981 to i32
  %2988 = icmp sgt i32 %2987, 0
  br i1 %2988, label %2980, label %2989, !llvm.loop !1040

2989:                                             ; preds = %2980, %2971
  %2990 = phi i32 [ %2975, %2971 ], [ %2985, %2980 ]
  %2991 = and i64 %2940, 4294967295
  %2992 = getelementptr inbounds i32, ptr %6, i64 %2991
  %2993 = load i32, ptr %2992, align 4, !tbaa !5
  %2994 = mul nsw i32 %2993, %2990
  %2995 = add nsw i32 %2994, %2934
  %2996 = icmp sgt i64 %2932, 2
  %2997 = add nsw i64 %2933, -1
  %2998 = add i32 %2931, 1
  br i1 %2996, label %2930, label %2999, !llvm.loop !1041

2999:                                             ; preds = %2989, %2927
  %3000 = phi i32 [ %2929, %2927 ], [ %2995, %2989 ]
  %3001 = icmp slt i32 %3000, %5
  br i1 %3001, label %3004, label %3002

3002:                                             ; preds = %2999
  %3003 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

3004:                                             ; preds = %2999
  %3005 = sext i32 %3000 to i64
  %3006 = getelementptr inbounds double, ptr %2459, i64 %3005
  %3007 = load double, ptr %3006, align 8, !tbaa !18
  %3008 = fptosi double %3007 to i32
  %3009 = load i32, ptr %2461, align 4, !tbaa !5
  %3010 = mul nsw i32 %3008, %3008
  %3011 = add nsw i32 %3010, %3009
  store i32 %3011, ptr %2461, align 4, !tbaa !5
  %3012 = add nuw nsw i32 %2928, 1
  br i1 %2779, label %3013, label %3063

3013:                                             ; preds = %3004
  %3014 = load i32, ptr %4, align 4, !tbaa !5
  %3015 = load i32, ptr %12, align 4, !tbaa !5
  %3016 = add nsw i32 %3015, -1
  %3017 = icmp slt i32 %3014, %3016
  br i1 %3017, label %3040, label %3018

3018:                                             ; preds = %3013
  %3019 = icmp eq i32 %3014, %3016
  br i1 %3019, label %3020, label %3056

3020:                                             ; preds = %3018
  store i32 0, ptr %4, align 4, !tbaa !5
  %3021 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3021, ptr %6, align 4, !tbaa !5
  br i1 %2784, label %3063, label %3022

3022:                                             ; preds = %3020, %3050
  %3023 = phi i64 [ %3054, %3050 ], [ 1, %3020 ]
  %3024 = getelementptr inbounds i32, ptr %4, i64 %3023
  %3025 = load i32, ptr %3024, align 4, !tbaa !5
  %3026 = getelementptr inbounds i32, ptr %12, i64 %3023
  %3027 = load i32, ptr %3026, align 4, !tbaa !5
  %3028 = add nsw i32 %3027, -1
  %3029 = icmp slt i32 %3025, %3028
  br i1 %3029, label %3030, label %3048

3030:                                             ; preds = %3022
  br i1 %3017, label %3040, label %3031

3031:                                             ; preds = %3030
  %3032 = shl i64 %3023, 32
  %3033 = add i64 %3032, -4294967296
  %3034 = ashr exact i64 %3033, 32
  %3035 = getelementptr inbounds i32, ptr %7, i64 %3034
  %3036 = load i32, ptr %3035, align 4, !tbaa !5
  %3037 = getelementptr inbounds i32, ptr %6, i64 %3023
  %3038 = load i32, ptr %3037, align 4, !tbaa !5
  %3039 = add nsw i32 %3038, %3036
  store i32 %3039, ptr %3037, align 4, !tbaa !5
  br label %3058

3040:                                             ; preds = %3013, %3030
  %3041 = phi i32 [ %3025, %3030 ], [ %3014, %3013 ]
  %3042 = phi ptr [ %3024, %3030 ], [ %4, %3013 ]
  %3043 = phi i64 [ %3023, %3030 ], [ 0, %3013 ]
  %3044 = add nsw i32 %3041, 1
  store i32 %3044, ptr %3042, align 4, !tbaa !5
  %3045 = getelementptr inbounds i32, ptr %7, i64 %3043
  %3046 = load i32, ptr %3045, align 4, !tbaa !5
  %3047 = getelementptr inbounds i32, ptr %6, i64 %3043
  br label %3058

3048:                                             ; preds = %3022
  %3049 = icmp eq i32 %3025, %3028
  br i1 %3049, label %3050, label %3056

3050:                                             ; preds = %3048
  store i32 0, ptr %3024, align 4, !tbaa !5
  %3051 = getelementptr inbounds i32, ptr %8, i64 %3023
  %3052 = load i32, ptr %3051, align 4, !tbaa !5
  %3053 = getelementptr inbounds i32, ptr %6, i64 %3023
  store i32 %3052, ptr %3053, align 4, !tbaa !5
  %3054 = add nuw nsw i64 %3023, 1
  %3055 = icmp eq i64 %3054, %2782
  br i1 %3055, label %3063, label %3022, !llvm.loop !1042

3056:                                             ; preds = %3018, %3048
  %3057 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

3058:                                             ; preds = %3031, %3040
  %3059 = phi ptr [ %3047, %3040 ], [ %3024, %3031 ]
  %3060 = phi i32 [ %3046, %3040 ], [ 1, %3031 ]
  %3061 = load i32, ptr %3059, align 4, !tbaa !5
  %3062 = add nsw i32 %3061, %3060
  store i32 %3062, ptr %3059, align 4, !tbaa !5
  br label %3063

3063:                                             ; preds = %3050, %3058, %3020, %3004
  %3064 = icmp eq i32 %3012, %5
  br i1 %3064, label %5491, label %2927, !llvm.loop !1043

3065:                                             ; preds = %2467
  %3066 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

3067:                                             ; preds = %18
  %3068 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3069 = load ptr, ptr %3068, align 8, !tbaa !9
  %3070 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3071 = load ptr, ptr %3070, align 8, !tbaa !9
  store i64 0, ptr %3071, align 8, !tbaa !120
  %3072 = icmp eq i32 %13, 0
  br i1 %3072, label %3073, label %3077

3073:                                             ; preds = %3067
  %3074 = load double, ptr %3069, align 8, !tbaa !18
  %3075 = fptosi double %3074 to i64
  %3076 = mul nsw i64 %3075, %3075
  store i64 %3076, ptr %3071, align 8, !tbaa !120
  br label %5491

3077:                                             ; preds = %3067
  switch i32 %1, label %3675 [
    i32 1, label %3078
    i32 0, label %3381
  ]

3078:                                             ; preds = %3077
  %3079 = getelementptr inbounds i32, ptr %3, i64 %19
  %3080 = load i32, ptr %3079, align 4, !tbaa !5
  %3081 = icmp eq i32 %3080, 0
  %3082 = icmp sgt i32 %5, 0
  br i1 %3081, label %3092, label %3083

3083:                                             ; preds = %3078
  br i1 %3082, label %3084, label %5491

3084:                                             ; preds = %3083
  %3085 = icmp sgt i32 %13, 1
  %3086 = icmp sgt i32 %13, 0
  %3087 = add i32 %13, -2
  %3088 = zext i32 %3087 to i64
  %3089 = zext i32 %13 to i64
  %3090 = add nuw i32 %5, 1
  %3091 = icmp eq i32 %13, 1
  br label %3240

3092:                                             ; preds = %3078
  br i1 %3082, label %3093, label %5491

3093:                                             ; preds = %3092
  %3094 = icmp sgt i32 %13, 1
  %3095 = icmp sgt i32 %13, 0
  %3096 = add i32 %13, -2
  %3097 = zext i32 %3096 to i64
  %3098 = zext i32 %13 to i64
  %3099 = add nuw i32 %5, 1
  %3100 = icmp eq i32 %13, 1
  br label %3101

3101:                                             ; preds = %3093, %3238
  %3102 = phi i64 [ 0, %3093 ], [ %3188, %3238 ]
  %3103 = phi i32 [ 0, %3093 ], [ %3190, %3238 ]
  %3104 = phi double [ 0.000000e+00, %3093 ], [ %3189, %3238 ]
  %3105 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3094, label %3106, label %3175

3106:                                             ; preds = %3101, %3165
  %3107 = phi i32 [ %3174, %3165 ], [ 0, %3101 ]
  %3108 = phi i64 [ %3116, %3165 ], [ %3098, %3101 ]
  %3109 = phi i64 [ %3173, %3165 ], [ %3097, %3101 ]
  %3110 = phi i32 [ %3171, %3165 ], [ %3105, %3101 ]
  %3111 = sub i32 %3096, %3107
  %3112 = tail call i32 @llvm.smin.i32(i32 %3111, i32 0)
  %3113 = sub i32 %3111, %3112
  %3114 = zext i32 %3113 to i64
  %3115 = add nuw nsw i64 %3114, 1
  %3116 = add nsw i64 %3108, -1
  %3117 = icmp ult i32 %3113, 31
  br i1 %3117, label %3153, label %3118

3118:                                             ; preds = %3106
  %3119 = and i64 %3115, 8589934560
  %3120 = sub i64 %3109, %3119
  br label %3121

3121:                                             ; preds = %3121, %3118
  %3122 = phi i64 [ 0, %3118 ], [ %3145, %3121 ]
  %3123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3141, %3121 ]
  %3124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3142, %3121 ]
  %3125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3143, %3121 ]
  %3126 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3144, %3121 ]
  %3127 = sub i64 %3109, %3122
  %3128 = getelementptr inbounds i32, ptr %9, i64 %3127
  %3129 = getelementptr inbounds i32, ptr %3128, i64 -7
  %3130 = load <8 x i32>, ptr %3129, align 4, !tbaa !5
  %3131 = shufflevector <8 x i32> %3130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3132 = getelementptr inbounds i32, ptr %3128, i64 -15
  %3133 = load <8 x i32>, ptr %3132, align 4, !tbaa !5
  %3134 = shufflevector <8 x i32> %3133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3135 = getelementptr inbounds i32, ptr %3128, i64 -23
  %3136 = load <8 x i32>, ptr %3135, align 4, !tbaa !5
  %3137 = shufflevector <8 x i32> %3136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3138 = getelementptr inbounds i32, ptr %3128, i64 -31
  %3139 = load <8 x i32>, ptr %3138, align 4, !tbaa !5
  %3140 = shufflevector <8 x i32> %3139, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3141 = mul <8 x i32> %3131, %3123
  %3142 = mul <8 x i32> %3134, %3124
  %3143 = mul <8 x i32> %3137, %3125
  %3144 = mul <8 x i32> %3140, %3126
  %3145 = add nuw i64 %3122, 32
  %3146 = icmp eq i64 %3145, %3119
  br i1 %3146, label %3147, label %3121, !llvm.loop !1044

3147:                                             ; preds = %3121
  %3148 = mul <8 x i32> %3142, %3141
  %3149 = mul <8 x i32> %3143, %3148
  %3150 = mul <8 x i32> %3144, %3149
  %3151 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3150)
  %3152 = icmp eq i64 %3115, %3119
  br i1 %3152, label %3165, label %3153

3153:                                             ; preds = %3106, %3147
  %3154 = phi i64 [ %3109, %3106 ], [ %3120, %3147 ]
  %3155 = phi i32 [ 1, %3106 ], [ %3151, %3147 ]
  br label %3156

3156:                                             ; preds = %3153, %3156
  %3157 = phi i64 [ %3162, %3156 ], [ %3154, %3153 ]
  %3158 = phi i32 [ %3161, %3156 ], [ %3155, %3153 ]
  %3159 = getelementptr inbounds i32, ptr %9, i64 %3157
  %3160 = load i32, ptr %3159, align 4, !tbaa !5
  %3161 = mul nsw i32 %3160, %3158
  %3162 = add nsw i64 %3157, -1
  %3163 = trunc i64 %3157 to i32
  %3164 = icmp sgt i32 %3163, 0
  br i1 %3164, label %3156, label %3165, !llvm.loop !1045

3165:                                             ; preds = %3156, %3147
  %3166 = phi i32 [ %3151, %3147 ], [ %3161, %3156 ]
  %3167 = and i64 %3116, 4294967295
  %3168 = getelementptr inbounds i32, ptr %6, i64 %3167
  %3169 = load i32, ptr %3168, align 4, !tbaa !5
  %3170 = mul nsw i32 %3169, %3166
  %3171 = add nsw i32 %3170, %3110
  %3172 = icmp sgt i64 %3108, 2
  %3173 = add nsw i64 %3109, -1
  %3174 = add i32 %3107, 1
  br i1 %3172, label %3106, label %3175, !llvm.loop !1046

3175:                                             ; preds = %3165, %3101
  %3176 = phi i32 [ %3105, %3101 ], [ %3171, %3165 ]
  %3177 = sext i32 %3176 to i64
  %3178 = getelementptr inbounds double, ptr %2, i64 %3177
  %3179 = load double, ptr %3178, align 8, !tbaa !18
  %3180 = getelementptr inbounds double, ptr %3069, i64 %3177
  %3181 = load double, ptr %3180, align 8, !tbaa !18
  %3182 = fptosi double %3181 to i64
  %3183 = sitofp i64 %3102 to double
  %3184 = sitofp i64 %3182 to double
  %3185 = fmul fast double %3179, %3184
  %3186 = fmul fast double %3185, %3185
  %3187 = fadd fast double %3186, %3183
  %3188 = fptosi double %3187 to i64
  %3189 = fadd fast double %3179, %3104
  %3190 = add nuw nsw i32 %3103, 1
  br i1 %3095, label %3191, label %3238

3191:                                             ; preds = %3175
  %3192 = load i32, ptr %4, align 4, !tbaa !5
  %3193 = load i32, ptr %12, align 4, !tbaa !5
  %3194 = add nsw i32 %3193, -1
  %3195 = icmp slt i32 %3192, %3194
  br i1 %3195, label %3215, label %3196

3196:                                             ; preds = %3191
  %3197 = icmp eq i32 %3192, %3194
  br i1 %3197, label %3198, label %3231

3198:                                             ; preds = %3196
  store i32 0, ptr %4, align 4, !tbaa !5
  %3199 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3199, ptr %6, align 4, !tbaa !5
  br i1 %3100, label %3238, label %3200

3200:                                             ; preds = %3198, %3225
  %3201 = phi i64 [ %3229, %3225 ], [ 1, %3198 ]
  %3202 = getelementptr inbounds i32, ptr %4, i64 %3201
  %3203 = load i32, ptr %3202, align 4, !tbaa !5
  %3204 = getelementptr inbounds i32, ptr %12, i64 %3201
  %3205 = load i32, ptr %3204, align 4, !tbaa !5
  %3206 = add nsw i32 %3205, -1
  %3207 = icmp slt i32 %3203, %3206
  br i1 %3207, label %3208, label %3223

3208:                                             ; preds = %3200
  br i1 %3195, label %3215, label %3209

3209:                                             ; preds = %3208
  %3210 = getelementptr inbounds i32, ptr %7, i64 %3201
  %3211 = load i32, ptr %3210, align 4, !tbaa !5
  %3212 = getelementptr inbounds i32, ptr %6, i64 %3201
  %3213 = load i32, ptr %3212, align 4, !tbaa !5
  %3214 = add nsw i32 %3213, %3211
  store i32 %3214, ptr %3212, align 4, !tbaa !5
  br label %3233

3215:                                             ; preds = %3191, %3208
  %3216 = phi i32 [ %3203, %3208 ], [ %3192, %3191 ]
  %3217 = phi ptr [ %3202, %3208 ], [ %4, %3191 ]
  %3218 = phi i64 [ %3201, %3208 ], [ 0, %3191 ]
  %3219 = add nsw i32 %3216, 1
  store i32 %3219, ptr %3217, align 4, !tbaa !5
  %3220 = getelementptr inbounds i32, ptr %7, i64 %3218
  %3221 = load i32, ptr %3220, align 4, !tbaa !5
  %3222 = getelementptr inbounds i32, ptr %6, i64 %3218
  br label %3233

3223:                                             ; preds = %3200
  %3224 = icmp eq i32 %3203, %3206
  br i1 %3224, label %3225, label %3231

3225:                                             ; preds = %3223
  store i32 0, ptr %3202, align 4, !tbaa !5
  %3226 = getelementptr inbounds i32, ptr %8, i64 %3201
  %3227 = load i32, ptr %3226, align 4, !tbaa !5
  %3228 = getelementptr inbounds i32, ptr %6, i64 %3201
  store i32 %3227, ptr %3228, align 4, !tbaa !5
  %3229 = add nuw nsw i64 %3201, 1
  %3230 = icmp eq i64 %3229, %3098
  br i1 %3230, label %3238, label %3200, !llvm.loop !1047

3231:                                             ; preds = %3196, %3223
  store i64 %3188, ptr %3071, align 8, !tbaa !120
  %3232 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

3233:                                             ; preds = %3209, %3215
  %3234 = phi ptr [ %3222, %3215 ], [ %3202, %3209 ]
  %3235 = phi i32 [ %3221, %3215 ], [ 1, %3209 ]
  %3236 = load i32, ptr %3234, align 4, !tbaa !5
  %3237 = add nsw i32 %3236, %3235
  store i32 %3237, ptr %3234, align 4, !tbaa !5
  br label %3238

3238:                                             ; preds = %3225, %3233, %3198, %3175
  %3239 = icmp eq i32 %3190, %5
  br i1 %3239, label %5487, label %3101, !llvm.loop !1048

3240:                                             ; preds = %3084, %3379
  %3241 = phi i64 [ 0, %3084 ], [ %3327, %3379 ]
  %3242 = phi i32 [ 0, %3084 ], [ %3328, %3379 ]
  %3243 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3085, label %3244, label %3313

3244:                                             ; preds = %3240, %3303
  %3245 = phi i32 [ %3312, %3303 ], [ 0, %3240 ]
  %3246 = phi i64 [ %3254, %3303 ], [ %3089, %3240 ]
  %3247 = phi i64 [ %3311, %3303 ], [ %3088, %3240 ]
  %3248 = phi i32 [ %3309, %3303 ], [ %3243, %3240 ]
  %3249 = sub i32 %3087, %3245
  %3250 = tail call i32 @llvm.smin.i32(i32 %3249, i32 0)
  %3251 = sub i32 %3249, %3250
  %3252 = zext i32 %3251 to i64
  %3253 = add nuw nsw i64 %3252, 1
  %3254 = add nsw i64 %3246, -1
  %3255 = icmp ult i32 %3251, 31
  br i1 %3255, label %3291, label %3256

3256:                                             ; preds = %3244
  %3257 = and i64 %3253, 8589934560
  %3258 = sub i64 %3247, %3257
  br label %3259

3259:                                             ; preds = %3259, %3256
  %3260 = phi i64 [ 0, %3256 ], [ %3283, %3259 ]
  %3261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3256 ], [ %3279, %3259 ]
  %3262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3256 ], [ %3280, %3259 ]
  %3263 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3256 ], [ %3281, %3259 ]
  %3264 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3256 ], [ %3282, %3259 ]
  %3265 = sub i64 %3247, %3260
  %3266 = getelementptr inbounds i32, ptr %11, i64 %3265
  %3267 = getelementptr inbounds i32, ptr %3266, i64 -7
  %3268 = load <8 x i32>, ptr %3267, align 4, !tbaa !5
  %3269 = shufflevector <8 x i32> %3268, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3270 = getelementptr inbounds i32, ptr %3266, i64 -15
  %3271 = load <8 x i32>, ptr %3270, align 4, !tbaa !5
  %3272 = shufflevector <8 x i32> %3271, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3273 = getelementptr inbounds i32, ptr %3266, i64 -23
  %3274 = load <8 x i32>, ptr %3273, align 4, !tbaa !5
  %3275 = shufflevector <8 x i32> %3274, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3276 = getelementptr inbounds i32, ptr %3266, i64 -31
  %3277 = load <8 x i32>, ptr %3276, align 4, !tbaa !5
  %3278 = shufflevector <8 x i32> %3277, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3279 = mul <8 x i32> %3269, %3261
  %3280 = mul <8 x i32> %3272, %3262
  %3281 = mul <8 x i32> %3275, %3263
  %3282 = mul <8 x i32> %3278, %3264
  %3283 = add nuw i64 %3260, 32
  %3284 = icmp eq i64 %3283, %3257
  br i1 %3284, label %3285, label %3259, !llvm.loop !1049

3285:                                             ; preds = %3259
  %3286 = mul <8 x i32> %3280, %3279
  %3287 = mul <8 x i32> %3281, %3286
  %3288 = mul <8 x i32> %3282, %3287
  %3289 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3288)
  %3290 = icmp eq i64 %3253, %3257
  br i1 %3290, label %3303, label %3291

3291:                                             ; preds = %3244, %3285
  %3292 = phi i64 [ %3247, %3244 ], [ %3258, %3285 ]
  %3293 = phi i32 [ 1, %3244 ], [ %3289, %3285 ]
  br label %3294

3294:                                             ; preds = %3291, %3294
  %3295 = phi i64 [ %3300, %3294 ], [ %3292, %3291 ]
  %3296 = phi i32 [ %3299, %3294 ], [ %3293, %3291 ]
  %3297 = getelementptr inbounds i32, ptr %11, i64 %3295
  %3298 = load i32, ptr %3297, align 4, !tbaa !5
  %3299 = mul nsw i32 %3298, %3296
  %3300 = add nsw i64 %3295, -1
  %3301 = trunc i64 %3295 to i32
  %3302 = icmp sgt i32 %3301, 0
  br i1 %3302, label %3294, label %3303, !llvm.loop !1050

3303:                                             ; preds = %3294, %3285
  %3304 = phi i32 [ %3289, %3285 ], [ %3299, %3294 ]
  %3305 = and i64 %3254, 4294967295
  %3306 = getelementptr inbounds i32, ptr %6, i64 %3305
  %3307 = load i32, ptr %3306, align 4, !tbaa !5
  %3308 = mul nsw i32 %3307, %3304
  %3309 = add nsw i32 %3308, %3248
  %3310 = icmp sgt i64 %3246, 2
  %3311 = add nsw i64 %3247, -1
  %3312 = add i32 %3245, 1
  br i1 %3310, label %3244, label %3313, !llvm.loop !1051

3313:                                             ; preds = %3303, %3240
  %3314 = phi i32 [ %3243, %3240 ], [ %3309, %3303 ]
  %3315 = icmp slt i32 %3314, %5
  br i1 %3315, label %3318, label %3316

3316:                                             ; preds = %3313
  %3317 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

3318:                                             ; preds = %3313
  %3319 = sext i32 %3314 to i64
  %3320 = getelementptr inbounds double, ptr %3069, i64 %3319
  %3321 = load double, ptr %3320, align 8, !tbaa !18
  %3322 = fptosi double %3321 to i64
  %3323 = sitofp i64 %3241 to double
  %3324 = sitofp i64 %3322 to double
  %3325 = fmul fast double %3324, %3324
  %3326 = fadd fast double %3325, %3323
  %3327 = fptosi double %3326 to i64
  store i64 %3327, ptr %3071, align 8, !tbaa !120
  %3328 = add nuw nsw i32 %3242, 1
  br i1 %3086, label %3329, label %3379

3329:                                             ; preds = %3318
  %3330 = load i32, ptr %4, align 4, !tbaa !5
  %3331 = load i32, ptr %12, align 4, !tbaa !5
  %3332 = add nsw i32 %3331, -1
  %3333 = icmp slt i32 %3330, %3332
  br i1 %3333, label %3356, label %3334

3334:                                             ; preds = %3329
  %3335 = icmp eq i32 %3330, %3332
  br i1 %3335, label %3336, label %3372

3336:                                             ; preds = %3334
  store i32 0, ptr %4, align 4, !tbaa !5
  %3337 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3337, ptr %6, align 4, !tbaa !5
  br i1 %3091, label %3379, label %3338

3338:                                             ; preds = %3336, %3366
  %3339 = phi i64 [ %3370, %3366 ], [ 1, %3336 ]
  %3340 = getelementptr inbounds i32, ptr %4, i64 %3339
  %3341 = load i32, ptr %3340, align 4, !tbaa !5
  %3342 = getelementptr inbounds i32, ptr %12, i64 %3339
  %3343 = load i32, ptr %3342, align 4, !tbaa !5
  %3344 = add nsw i32 %3343, -1
  %3345 = icmp slt i32 %3341, %3344
  br i1 %3345, label %3346, label %3364

3346:                                             ; preds = %3338
  br i1 %3333, label %3356, label %3347

3347:                                             ; preds = %3346
  %3348 = shl i64 %3339, 32
  %3349 = add i64 %3348, -4294967296
  %3350 = ashr exact i64 %3349, 32
  %3351 = getelementptr inbounds i32, ptr %7, i64 %3350
  %3352 = load i32, ptr %3351, align 4, !tbaa !5
  %3353 = getelementptr inbounds i32, ptr %6, i64 %3339
  %3354 = load i32, ptr %3353, align 4, !tbaa !5
  %3355 = add nsw i32 %3354, %3352
  store i32 %3355, ptr %3353, align 4, !tbaa !5
  br label %3374

3356:                                             ; preds = %3329, %3346
  %3357 = phi i32 [ %3341, %3346 ], [ %3330, %3329 ]
  %3358 = phi ptr [ %3340, %3346 ], [ %4, %3329 ]
  %3359 = phi i64 [ %3339, %3346 ], [ 0, %3329 ]
  %3360 = add nsw i32 %3357, 1
  store i32 %3360, ptr %3358, align 4, !tbaa !5
  %3361 = getelementptr inbounds i32, ptr %7, i64 %3359
  %3362 = load i32, ptr %3361, align 4, !tbaa !5
  %3363 = getelementptr inbounds i32, ptr %6, i64 %3359
  br label %3374

3364:                                             ; preds = %3338
  %3365 = icmp eq i32 %3341, %3344
  br i1 %3365, label %3366, label %3372

3366:                                             ; preds = %3364
  store i32 0, ptr %3340, align 4, !tbaa !5
  %3367 = getelementptr inbounds i32, ptr %8, i64 %3339
  %3368 = load i32, ptr %3367, align 4, !tbaa !5
  %3369 = getelementptr inbounds i32, ptr %6, i64 %3339
  store i32 %3368, ptr %3369, align 4, !tbaa !5
  %3370 = add nuw nsw i64 %3339, 1
  %3371 = icmp eq i64 %3370, %3089
  br i1 %3371, label %3379, label %3338, !llvm.loop !1052

3372:                                             ; preds = %3334, %3364
  %3373 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

3374:                                             ; preds = %3347, %3356
  %3375 = phi ptr [ %3363, %3356 ], [ %3340, %3347 ]
  %3376 = phi i32 [ %3362, %3356 ], [ 1, %3347 ]
  %3377 = load i32, ptr %3375, align 4, !tbaa !5
  %3378 = add nsw i32 %3377, %3376
  store i32 %3378, ptr %3375, align 4, !tbaa !5
  br label %3379

3379:                                             ; preds = %3366, %3374, %3336, %3318
  %3380 = icmp eq i32 %3328, %5
  br i1 %3380, label %5491, label %3240, !llvm.loop !1053

3381:                                             ; preds = %3077
  %3382 = getelementptr inbounds i32, ptr %3, i64 %19
  %3383 = load i32, ptr %3382, align 4, !tbaa !5
  %3384 = icmp eq i32 %3383, 0
  %3385 = icmp sgt i32 %5, 0
  br i1 %3384, label %3395, label %3386

3386:                                             ; preds = %3381
  br i1 %3385, label %3387, label %5491

3387:                                             ; preds = %3386
  %3388 = icmp sgt i32 %13, 1
  %3389 = icmp sgt i32 %13, 0
  %3390 = add i32 %13, -2
  %3391 = zext i32 %3390 to i64
  %3392 = zext i32 %13 to i64
  %3393 = add nuw i32 %5, 1
  %3394 = icmp eq i32 %13, 1
  br label %3537

3395:                                             ; preds = %3381
  br i1 %3385, label %3396, label %5491

3396:                                             ; preds = %3395
  %3397 = icmp sgt i32 %13, 1
  %3398 = icmp sgt i32 %13, 0
  %3399 = add i32 %13, -2
  %3400 = zext i32 %3399 to i64
  %3401 = zext i32 %13 to i64
  %3402 = add nuw i32 %5, 1
  %3403 = icmp eq i32 %13, 1
  br label %3404

3404:                                             ; preds = %3396, %3535
  %3405 = phi i64 [ 0, %3396 ], [ %3485, %3535 ]
  %3406 = phi i32 [ 0, %3396 ], [ %3487, %3535 ]
  %3407 = phi double [ 0.000000e+00, %3396 ], [ %3486, %3535 ]
  %3408 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3397, label %3409, label %3478

3409:                                             ; preds = %3404, %3468
  %3410 = phi i32 [ %3477, %3468 ], [ 0, %3404 ]
  %3411 = phi i64 [ %3419, %3468 ], [ %3401, %3404 ]
  %3412 = phi i64 [ %3476, %3468 ], [ %3400, %3404 ]
  %3413 = phi i32 [ %3474, %3468 ], [ %3408, %3404 ]
  %3414 = sub i32 %3399, %3410
  %3415 = tail call i32 @llvm.smin.i32(i32 %3414, i32 0)
  %3416 = sub i32 %3414, %3415
  %3417 = zext i32 %3416 to i64
  %3418 = add nuw nsw i64 %3417, 1
  %3419 = add nsw i64 %3411, -1
  %3420 = icmp ult i32 %3416, 31
  br i1 %3420, label %3456, label %3421

3421:                                             ; preds = %3409
  %3422 = and i64 %3418, 8589934560
  %3423 = sub i64 %3412, %3422
  br label %3424

3424:                                             ; preds = %3424, %3421
  %3425 = phi i64 [ 0, %3421 ], [ %3448, %3424 ]
  %3426 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3421 ], [ %3444, %3424 ]
  %3427 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3421 ], [ %3445, %3424 ]
  %3428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3421 ], [ %3446, %3424 ]
  %3429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3421 ], [ %3447, %3424 ]
  %3430 = sub i64 %3412, %3425
  %3431 = getelementptr inbounds i32, ptr %9, i64 %3430
  %3432 = getelementptr inbounds i32, ptr %3431, i64 -7
  %3433 = load <8 x i32>, ptr %3432, align 4, !tbaa !5
  %3434 = shufflevector <8 x i32> %3433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3435 = getelementptr inbounds i32, ptr %3431, i64 -15
  %3436 = load <8 x i32>, ptr %3435, align 4, !tbaa !5
  %3437 = shufflevector <8 x i32> %3436, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3438 = getelementptr inbounds i32, ptr %3431, i64 -23
  %3439 = load <8 x i32>, ptr %3438, align 4, !tbaa !5
  %3440 = shufflevector <8 x i32> %3439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3441 = getelementptr inbounds i32, ptr %3431, i64 -31
  %3442 = load <8 x i32>, ptr %3441, align 4, !tbaa !5
  %3443 = shufflevector <8 x i32> %3442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3444 = mul <8 x i32> %3434, %3426
  %3445 = mul <8 x i32> %3437, %3427
  %3446 = mul <8 x i32> %3440, %3428
  %3447 = mul <8 x i32> %3443, %3429
  %3448 = add nuw i64 %3425, 32
  %3449 = icmp eq i64 %3448, %3422
  br i1 %3449, label %3450, label %3424, !llvm.loop !1054

3450:                                             ; preds = %3424
  %3451 = mul <8 x i32> %3445, %3444
  %3452 = mul <8 x i32> %3446, %3451
  %3453 = mul <8 x i32> %3447, %3452
  %3454 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3453)
  %3455 = icmp eq i64 %3418, %3422
  br i1 %3455, label %3468, label %3456

3456:                                             ; preds = %3409, %3450
  %3457 = phi i64 [ %3412, %3409 ], [ %3423, %3450 ]
  %3458 = phi i32 [ 1, %3409 ], [ %3454, %3450 ]
  br label %3459

3459:                                             ; preds = %3456, %3459
  %3460 = phi i64 [ %3465, %3459 ], [ %3457, %3456 ]
  %3461 = phi i32 [ %3464, %3459 ], [ %3458, %3456 ]
  %3462 = getelementptr inbounds i32, ptr %9, i64 %3460
  %3463 = load i32, ptr %3462, align 4, !tbaa !5
  %3464 = mul nsw i32 %3463, %3461
  %3465 = add nsw i64 %3460, -1
  %3466 = trunc i64 %3460 to i32
  %3467 = icmp sgt i32 %3466, 0
  br i1 %3467, label %3459, label %3468, !llvm.loop !1055

3468:                                             ; preds = %3459, %3450
  %3469 = phi i32 [ %3454, %3450 ], [ %3464, %3459 ]
  %3470 = and i64 %3419, 4294967295
  %3471 = getelementptr inbounds i32, ptr %6, i64 %3470
  %3472 = load i32, ptr %3471, align 4, !tbaa !5
  %3473 = mul nsw i32 %3472, %3469
  %3474 = add nsw i32 %3473, %3413
  %3475 = icmp sgt i64 %3411, 2
  %3476 = add nsw i64 %3412, -1
  %3477 = add i32 %3410, 1
  br i1 %3475, label %3409, label %3478, !llvm.loop !1056

3478:                                             ; preds = %3468, %3404
  %3479 = phi i32 [ %3408, %3404 ], [ %3474, %3468 ]
  %3480 = sext i32 %3479 to i64
  %3481 = getelementptr inbounds double, ptr %3069, i64 %3480
  %3482 = load double, ptr %3481, align 8, !tbaa !18
  %3483 = fptosi double %3482 to i64
  %3484 = mul nsw i64 %3483, %3483
  %3485 = add nuw nsw i64 %3484, %3405
  %3486 = fadd fast double %3407, 1.000000e+00
  %3487 = add nuw nsw i32 %3406, 1
  br i1 %3398, label %3488, label %3535

3488:                                             ; preds = %3478
  %3489 = load i32, ptr %4, align 4, !tbaa !5
  %3490 = load i32, ptr %12, align 4, !tbaa !5
  %3491 = add nsw i32 %3490, -1
  %3492 = icmp slt i32 %3489, %3491
  br i1 %3492, label %3512, label %3493

3493:                                             ; preds = %3488
  %3494 = icmp eq i32 %3489, %3491
  br i1 %3494, label %3495, label %3528

3495:                                             ; preds = %3493
  store i32 0, ptr %4, align 4, !tbaa !5
  %3496 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3496, ptr %6, align 4, !tbaa !5
  br i1 %3403, label %3535, label %3497

3497:                                             ; preds = %3495, %3522
  %3498 = phi i64 [ %3526, %3522 ], [ 1, %3495 ]
  %3499 = getelementptr inbounds i32, ptr %4, i64 %3498
  %3500 = load i32, ptr %3499, align 4, !tbaa !5
  %3501 = getelementptr inbounds i32, ptr %12, i64 %3498
  %3502 = load i32, ptr %3501, align 4, !tbaa !5
  %3503 = add nsw i32 %3502, -1
  %3504 = icmp slt i32 %3500, %3503
  br i1 %3504, label %3505, label %3520

3505:                                             ; preds = %3497
  br i1 %3492, label %3512, label %3506

3506:                                             ; preds = %3505
  %3507 = getelementptr inbounds i32, ptr %7, i64 %3498
  %3508 = load i32, ptr %3507, align 4, !tbaa !5
  %3509 = getelementptr inbounds i32, ptr %6, i64 %3498
  %3510 = load i32, ptr %3509, align 4, !tbaa !5
  %3511 = add nsw i32 %3510, %3508
  store i32 %3511, ptr %3509, align 4, !tbaa !5
  br label %3530

3512:                                             ; preds = %3488, %3505
  %3513 = phi i32 [ %3500, %3505 ], [ %3489, %3488 ]
  %3514 = phi ptr [ %3499, %3505 ], [ %4, %3488 ]
  %3515 = phi i64 [ %3498, %3505 ], [ 0, %3488 ]
  %3516 = add nsw i32 %3513, 1
  store i32 %3516, ptr %3514, align 4, !tbaa !5
  %3517 = getelementptr inbounds i32, ptr %7, i64 %3515
  %3518 = load i32, ptr %3517, align 4, !tbaa !5
  %3519 = getelementptr inbounds i32, ptr %6, i64 %3515
  br label %3530

3520:                                             ; preds = %3497
  %3521 = icmp eq i32 %3500, %3503
  br i1 %3521, label %3522, label %3528

3522:                                             ; preds = %3520
  store i32 0, ptr %3499, align 4, !tbaa !5
  %3523 = getelementptr inbounds i32, ptr %8, i64 %3498
  %3524 = load i32, ptr %3523, align 4, !tbaa !5
  %3525 = getelementptr inbounds i32, ptr %6, i64 %3498
  store i32 %3524, ptr %3525, align 4, !tbaa !5
  %3526 = add nuw nsw i64 %3498, 1
  %3527 = icmp eq i64 %3526, %3401
  br i1 %3527, label %3535, label %3497, !llvm.loop !1057

3528:                                             ; preds = %3493, %3520
  store i64 %3485, ptr %3071, align 8, !tbaa !120
  %3529 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

3530:                                             ; preds = %3506, %3512
  %3531 = phi ptr [ %3519, %3512 ], [ %3499, %3506 ]
  %3532 = phi i32 [ %3518, %3512 ], [ 1, %3506 ]
  %3533 = load i32, ptr %3531, align 4, !tbaa !5
  %3534 = add nsw i32 %3533, %3532
  store i32 %3534, ptr %3531, align 4, !tbaa !5
  br label %3535

3535:                                             ; preds = %3522, %3530, %3495, %3478
  %3536 = icmp eq i32 %3487, %5
  br i1 %3536, label %5488, label %3404, !llvm.loop !1058

3537:                                             ; preds = %3387, %3673
  %3538 = phi i64 [ 0, %3387 ], [ %3621, %3673 ]
  %3539 = phi i32 [ 0, %3387 ], [ %3622, %3673 ]
  %3540 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3388, label %3541, label %3610

3541:                                             ; preds = %3537, %3600
  %3542 = phi i32 [ %3609, %3600 ], [ 0, %3537 ]
  %3543 = phi i64 [ %3551, %3600 ], [ %3392, %3537 ]
  %3544 = phi i64 [ %3608, %3600 ], [ %3391, %3537 ]
  %3545 = phi i32 [ %3606, %3600 ], [ %3540, %3537 ]
  %3546 = sub i32 %3390, %3542
  %3547 = tail call i32 @llvm.smin.i32(i32 %3546, i32 0)
  %3548 = sub i32 %3546, %3547
  %3549 = zext i32 %3548 to i64
  %3550 = add nuw nsw i64 %3549, 1
  %3551 = add nsw i64 %3543, -1
  %3552 = icmp ult i32 %3548, 31
  br i1 %3552, label %3588, label %3553

3553:                                             ; preds = %3541
  %3554 = and i64 %3550, 8589934560
  %3555 = sub i64 %3544, %3554
  br label %3556

3556:                                             ; preds = %3556, %3553
  %3557 = phi i64 [ 0, %3553 ], [ %3580, %3556 ]
  %3558 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3553 ], [ %3576, %3556 ]
  %3559 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3553 ], [ %3577, %3556 ]
  %3560 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3553 ], [ %3578, %3556 ]
  %3561 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3553 ], [ %3579, %3556 ]
  %3562 = sub i64 %3544, %3557
  %3563 = getelementptr inbounds i32, ptr %11, i64 %3562
  %3564 = getelementptr inbounds i32, ptr %3563, i64 -7
  %3565 = load <8 x i32>, ptr %3564, align 4, !tbaa !5
  %3566 = shufflevector <8 x i32> %3565, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3567 = getelementptr inbounds i32, ptr %3563, i64 -15
  %3568 = load <8 x i32>, ptr %3567, align 4, !tbaa !5
  %3569 = shufflevector <8 x i32> %3568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3570 = getelementptr inbounds i32, ptr %3563, i64 -23
  %3571 = load <8 x i32>, ptr %3570, align 4, !tbaa !5
  %3572 = shufflevector <8 x i32> %3571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3573 = getelementptr inbounds i32, ptr %3563, i64 -31
  %3574 = load <8 x i32>, ptr %3573, align 4, !tbaa !5
  %3575 = shufflevector <8 x i32> %3574, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3576 = mul <8 x i32> %3566, %3558
  %3577 = mul <8 x i32> %3569, %3559
  %3578 = mul <8 x i32> %3572, %3560
  %3579 = mul <8 x i32> %3575, %3561
  %3580 = add nuw i64 %3557, 32
  %3581 = icmp eq i64 %3580, %3554
  br i1 %3581, label %3582, label %3556, !llvm.loop !1059

3582:                                             ; preds = %3556
  %3583 = mul <8 x i32> %3577, %3576
  %3584 = mul <8 x i32> %3578, %3583
  %3585 = mul <8 x i32> %3579, %3584
  %3586 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3585)
  %3587 = icmp eq i64 %3550, %3554
  br i1 %3587, label %3600, label %3588

3588:                                             ; preds = %3541, %3582
  %3589 = phi i64 [ %3544, %3541 ], [ %3555, %3582 ]
  %3590 = phi i32 [ 1, %3541 ], [ %3586, %3582 ]
  br label %3591

3591:                                             ; preds = %3588, %3591
  %3592 = phi i64 [ %3597, %3591 ], [ %3589, %3588 ]
  %3593 = phi i32 [ %3596, %3591 ], [ %3590, %3588 ]
  %3594 = getelementptr inbounds i32, ptr %11, i64 %3592
  %3595 = load i32, ptr %3594, align 4, !tbaa !5
  %3596 = mul nsw i32 %3595, %3593
  %3597 = add nsw i64 %3592, -1
  %3598 = trunc i64 %3592 to i32
  %3599 = icmp sgt i32 %3598, 0
  br i1 %3599, label %3591, label %3600, !llvm.loop !1060

3600:                                             ; preds = %3591, %3582
  %3601 = phi i32 [ %3586, %3582 ], [ %3596, %3591 ]
  %3602 = and i64 %3551, 4294967295
  %3603 = getelementptr inbounds i32, ptr %6, i64 %3602
  %3604 = load i32, ptr %3603, align 4, !tbaa !5
  %3605 = mul nsw i32 %3604, %3601
  %3606 = add nsw i32 %3605, %3545
  %3607 = icmp sgt i64 %3543, 2
  %3608 = add nsw i64 %3544, -1
  %3609 = add i32 %3542, 1
  br i1 %3607, label %3541, label %3610, !llvm.loop !1061

3610:                                             ; preds = %3600, %3537
  %3611 = phi i32 [ %3540, %3537 ], [ %3606, %3600 ]
  %3612 = icmp slt i32 %3611, %5
  br i1 %3612, label %3615, label %3613

3613:                                             ; preds = %3610
  %3614 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

3615:                                             ; preds = %3610
  %3616 = sext i32 %3611 to i64
  %3617 = getelementptr inbounds double, ptr %3069, i64 %3616
  %3618 = load double, ptr %3617, align 8, !tbaa !18
  %3619 = fptosi double %3618 to i64
  %3620 = mul nsw i64 %3619, %3619
  %3621 = add nuw nsw i64 %3620, %3538
  store i64 %3621, ptr %3071, align 8, !tbaa !120
  %3622 = add nuw nsw i32 %3539, 1
  br i1 %3389, label %3623, label %3673

3623:                                             ; preds = %3615
  %3624 = load i32, ptr %4, align 4, !tbaa !5
  %3625 = load i32, ptr %12, align 4, !tbaa !5
  %3626 = add nsw i32 %3625, -1
  %3627 = icmp slt i32 %3624, %3626
  br i1 %3627, label %3650, label %3628

3628:                                             ; preds = %3623
  %3629 = icmp eq i32 %3624, %3626
  br i1 %3629, label %3630, label %3666

3630:                                             ; preds = %3628
  store i32 0, ptr %4, align 4, !tbaa !5
  %3631 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3631, ptr %6, align 4, !tbaa !5
  br i1 %3394, label %3673, label %3632

3632:                                             ; preds = %3630, %3660
  %3633 = phi i64 [ %3664, %3660 ], [ 1, %3630 ]
  %3634 = getelementptr inbounds i32, ptr %4, i64 %3633
  %3635 = load i32, ptr %3634, align 4, !tbaa !5
  %3636 = getelementptr inbounds i32, ptr %12, i64 %3633
  %3637 = load i32, ptr %3636, align 4, !tbaa !5
  %3638 = add nsw i32 %3637, -1
  %3639 = icmp slt i32 %3635, %3638
  br i1 %3639, label %3640, label %3658

3640:                                             ; preds = %3632
  br i1 %3627, label %3650, label %3641

3641:                                             ; preds = %3640
  %3642 = shl i64 %3633, 32
  %3643 = add i64 %3642, -4294967296
  %3644 = ashr exact i64 %3643, 32
  %3645 = getelementptr inbounds i32, ptr %7, i64 %3644
  %3646 = load i32, ptr %3645, align 4, !tbaa !5
  %3647 = getelementptr inbounds i32, ptr %6, i64 %3633
  %3648 = load i32, ptr %3647, align 4, !tbaa !5
  %3649 = add nsw i32 %3648, %3646
  store i32 %3649, ptr %3647, align 4, !tbaa !5
  br label %3668

3650:                                             ; preds = %3623, %3640
  %3651 = phi i32 [ %3635, %3640 ], [ %3624, %3623 ]
  %3652 = phi ptr [ %3634, %3640 ], [ %4, %3623 ]
  %3653 = phi i64 [ %3633, %3640 ], [ 0, %3623 ]
  %3654 = add nsw i32 %3651, 1
  store i32 %3654, ptr %3652, align 4, !tbaa !5
  %3655 = getelementptr inbounds i32, ptr %7, i64 %3653
  %3656 = load i32, ptr %3655, align 4, !tbaa !5
  %3657 = getelementptr inbounds i32, ptr %6, i64 %3653
  br label %3668

3658:                                             ; preds = %3632
  %3659 = icmp eq i32 %3635, %3638
  br i1 %3659, label %3660, label %3666

3660:                                             ; preds = %3658
  store i32 0, ptr %3634, align 4, !tbaa !5
  %3661 = getelementptr inbounds i32, ptr %8, i64 %3633
  %3662 = load i32, ptr %3661, align 4, !tbaa !5
  %3663 = getelementptr inbounds i32, ptr %6, i64 %3633
  store i32 %3662, ptr %3663, align 4, !tbaa !5
  %3664 = add nuw nsw i64 %3633, 1
  %3665 = icmp eq i64 %3664, %3392
  br i1 %3665, label %3673, label %3632, !llvm.loop !1062

3666:                                             ; preds = %3628, %3658
  %3667 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

3668:                                             ; preds = %3641, %3650
  %3669 = phi ptr [ %3657, %3650 ], [ %3634, %3641 ]
  %3670 = phi i32 [ %3656, %3650 ], [ 1, %3641 ]
  %3671 = load i32, ptr %3669, align 4, !tbaa !5
  %3672 = add nsw i32 %3671, %3670
  store i32 %3672, ptr %3669, align 4, !tbaa !5
  br label %3673

3673:                                             ; preds = %3660, %3668, %3630, %3615
  %3674 = icmp eq i32 %3622, %5
  br i1 %3674, label %5491, label %3537, !llvm.loop !1063

3675:                                             ; preds = %3077
  %3676 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

3677:                                             ; preds = %18
  %3678 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3679 = load ptr, ptr %3678, align 8, !tbaa !9
  %3680 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3681 = load ptr, ptr %3680, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3681, align 8, !tbaa !18
  %3682 = icmp eq i32 %13, 0
  br i1 %3682, label %3683, label %3686

3683:                                             ; preds = %3677
  %3684 = load double, ptr %3679, align 8, !tbaa !18
  %3685 = fmul fast double %3684, %3684
  store double %3685, ptr %3681, align 8, !tbaa !18
  br label %5491

3686:                                             ; preds = %3677
  switch i32 %1, label %4274 [
    i32 1, label %3687
    i32 0, label %3982
  ]

3687:                                             ; preds = %3686
  %3688 = getelementptr inbounds i32, ptr %3, i64 %19
  %3689 = load i32, ptr %3688, align 4, !tbaa !5
  %3690 = icmp eq i32 %3689, 0
  %3691 = icmp sgt i32 %5, 0
  br i1 %3690, label %3701, label %3692

3692:                                             ; preds = %3687
  br i1 %3691, label %3693, label %5491

3693:                                             ; preds = %3692
  %3694 = icmp sgt i32 %13, 1
  %3695 = icmp sgt i32 %13, 0
  %3696 = add i32 %13, -2
  %3697 = zext i32 %3696 to i64
  %3698 = zext i32 %13 to i64
  %3699 = add nuw i32 %5, 1
  %3700 = icmp eq i32 %13, 1
  br label %3845

3701:                                             ; preds = %3687
  br i1 %3691, label %3702, label %5491

3702:                                             ; preds = %3701
  %3703 = icmp sgt i32 %13, 1
  %3704 = icmp sgt i32 %13, 0
  %3705 = add i32 %13, -2
  %3706 = zext i32 %3705 to i64
  %3707 = zext i32 %13 to i64
  %3708 = add nuw i32 %5, 1
  %3709 = icmp eq i32 %13, 1
  br label %3710

3710:                                             ; preds = %3702, %3843
  %3711 = phi double [ 0.000000e+00, %3702 ], [ %3793, %3843 ]
  %3712 = phi i32 [ 0, %3702 ], [ %3795, %3843 ]
  %3713 = phi double [ 0.000000e+00, %3702 ], [ %3794, %3843 ]
  %3714 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3703, label %3715, label %3784

3715:                                             ; preds = %3710, %3774
  %3716 = phi i32 [ %3783, %3774 ], [ 0, %3710 ]
  %3717 = phi i64 [ %3725, %3774 ], [ %3707, %3710 ]
  %3718 = phi i64 [ %3782, %3774 ], [ %3706, %3710 ]
  %3719 = phi i32 [ %3780, %3774 ], [ %3714, %3710 ]
  %3720 = sub i32 %3705, %3716
  %3721 = tail call i32 @llvm.smin.i32(i32 %3720, i32 0)
  %3722 = sub i32 %3720, %3721
  %3723 = zext i32 %3722 to i64
  %3724 = add nuw nsw i64 %3723, 1
  %3725 = add nsw i64 %3717, -1
  %3726 = icmp ult i32 %3722, 31
  br i1 %3726, label %3762, label %3727

3727:                                             ; preds = %3715
  %3728 = and i64 %3724, 8589934560
  %3729 = sub i64 %3718, %3728
  br label %3730

3730:                                             ; preds = %3730, %3727
  %3731 = phi i64 [ 0, %3727 ], [ %3754, %3730 ]
  %3732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3727 ], [ %3750, %3730 ]
  %3733 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3727 ], [ %3751, %3730 ]
  %3734 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3727 ], [ %3752, %3730 ]
  %3735 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3727 ], [ %3753, %3730 ]
  %3736 = sub i64 %3718, %3731
  %3737 = getelementptr inbounds i32, ptr %9, i64 %3736
  %3738 = getelementptr inbounds i32, ptr %3737, i64 -7
  %3739 = load <8 x i32>, ptr %3738, align 4, !tbaa !5
  %3740 = shufflevector <8 x i32> %3739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3741 = getelementptr inbounds i32, ptr %3737, i64 -15
  %3742 = load <8 x i32>, ptr %3741, align 4, !tbaa !5
  %3743 = shufflevector <8 x i32> %3742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3744 = getelementptr inbounds i32, ptr %3737, i64 -23
  %3745 = load <8 x i32>, ptr %3744, align 4, !tbaa !5
  %3746 = shufflevector <8 x i32> %3745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3747 = getelementptr inbounds i32, ptr %3737, i64 -31
  %3748 = load <8 x i32>, ptr %3747, align 4, !tbaa !5
  %3749 = shufflevector <8 x i32> %3748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3750 = mul <8 x i32> %3740, %3732
  %3751 = mul <8 x i32> %3743, %3733
  %3752 = mul <8 x i32> %3746, %3734
  %3753 = mul <8 x i32> %3749, %3735
  %3754 = add nuw i64 %3731, 32
  %3755 = icmp eq i64 %3754, %3728
  br i1 %3755, label %3756, label %3730, !llvm.loop !1064

3756:                                             ; preds = %3730
  %3757 = mul <8 x i32> %3751, %3750
  %3758 = mul <8 x i32> %3752, %3757
  %3759 = mul <8 x i32> %3753, %3758
  %3760 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3759)
  %3761 = icmp eq i64 %3724, %3728
  br i1 %3761, label %3774, label %3762

3762:                                             ; preds = %3715, %3756
  %3763 = phi i64 [ %3718, %3715 ], [ %3729, %3756 ]
  %3764 = phi i32 [ 1, %3715 ], [ %3760, %3756 ]
  br label %3765

3765:                                             ; preds = %3762, %3765
  %3766 = phi i64 [ %3771, %3765 ], [ %3763, %3762 ]
  %3767 = phi i32 [ %3770, %3765 ], [ %3764, %3762 ]
  %3768 = getelementptr inbounds i32, ptr %9, i64 %3766
  %3769 = load i32, ptr %3768, align 4, !tbaa !5
  %3770 = mul nsw i32 %3769, %3767
  %3771 = add nsw i64 %3766, -1
  %3772 = trunc i64 %3766 to i32
  %3773 = icmp sgt i32 %3772, 0
  br i1 %3773, label %3765, label %3774, !llvm.loop !1065

3774:                                             ; preds = %3765, %3756
  %3775 = phi i32 [ %3760, %3756 ], [ %3770, %3765 ]
  %3776 = and i64 %3725, 4294967295
  %3777 = getelementptr inbounds i32, ptr %6, i64 %3776
  %3778 = load i32, ptr %3777, align 4, !tbaa !5
  %3779 = mul nsw i32 %3778, %3775
  %3780 = add nsw i32 %3779, %3719
  %3781 = icmp sgt i64 %3717, 2
  %3782 = add nsw i64 %3718, -1
  %3783 = add i32 %3716, 1
  br i1 %3781, label %3715, label %3784, !llvm.loop !1066

3784:                                             ; preds = %3774, %3710
  %3785 = phi i32 [ %3714, %3710 ], [ %3780, %3774 ]
  %3786 = sext i32 %3785 to i64
  %3787 = getelementptr inbounds double, ptr %2, i64 %3786
  %3788 = load double, ptr %3787, align 8, !tbaa !18
  %3789 = getelementptr inbounds double, ptr %3679, i64 %3786
  %3790 = load double, ptr %3789, align 8, !tbaa !18
  %3791 = fmul fast double %3790, %3788
  %3792 = fmul fast double %3791, %3791
  %3793 = fadd fast double %3792, %3711
  store double %3793, ptr %3681, align 8, !tbaa !18
  %3794 = fadd fast double %3788, %3713
  %3795 = add nuw nsw i32 %3712, 1
  br i1 %3704, label %3796, label %3843

3796:                                             ; preds = %3784
  %3797 = load i32, ptr %4, align 4, !tbaa !5
  %3798 = load i32, ptr %12, align 4, !tbaa !5
  %3799 = add nsw i32 %3798, -1
  %3800 = icmp slt i32 %3797, %3799
  br i1 %3800, label %3820, label %3801

3801:                                             ; preds = %3796
  %3802 = icmp eq i32 %3797, %3799
  br i1 %3802, label %3803, label %3836

3803:                                             ; preds = %3801
  store i32 0, ptr %4, align 4, !tbaa !5
  %3804 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3804, ptr %6, align 4, !tbaa !5
  br i1 %3709, label %3843, label %3805

3805:                                             ; preds = %3803, %3830
  %3806 = phi i64 [ %3834, %3830 ], [ 1, %3803 ]
  %3807 = getelementptr inbounds i32, ptr %4, i64 %3806
  %3808 = load i32, ptr %3807, align 4, !tbaa !5
  %3809 = getelementptr inbounds i32, ptr %12, i64 %3806
  %3810 = load i32, ptr %3809, align 4, !tbaa !5
  %3811 = add nsw i32 %3810, -1
  %3812 = icmp slt i32 %3808, %3811
  br i1 %3812, label %3813, label %3828

3813:                                             ; preds = %3805
  br i1 %3800, label %3820, label %3814

3814:                                             ; preds = %3813
  %3815 = getelementptr inbounds i32, ptr %7, i64 %3806
  %3816 = load i32, ptr %3815, align 4, !tbaa !5
  %3817 = getelementptr inbounds i32, ptr %6, i64 %3806
  %3818 = load i32, ptr %3817, align 4, !tbaa !5
  %3819 = add nsw i32 %3818, %3816
  store i32 %3819, ptr %3817, align 4, !tbaa !5
  br label %3838

3820:                                             ; preds = %3796, %3813
  %3821 = phi i32 [ %3808, %3813 ], [ %3797, %3796 ]
  %3822 = phi ptr [ %3807, %3813 ], [ %4, %3796 ]
  %3823 = phi i64 [ %3806, %3813 ], [ 0, %3796 ]
  %3824 = add nsw i32 %3821, 1
  store i32 %3824, ptr %3822, align 4, !tbaa !5
  %3825 = getelementptr inbounds i32, ptr %7, i64 %3823
  %3826 = load i32, ptr %3825, align 4, !tbaa !5
  %3827 = getelementptr inbounds i32, ptr %6, i64 %3823
  br label %3838

3828:                                             ; preds = %3805
  %3829 = icmp eq i32 %3808, %3811
  br i1 %3829, label %3830, label %3836

3830:                                             ; preds = %3828
  store i32 0, ptr %3807, align 4, !tbaa !5
  %3831 = getelementptr inbounds i32, ptr %8, i64 %3806
  %3832 = load i32, ptr %3831, align 4, !tbaa !5
  %3833 = getelementptr inbounds i32, ptr %6, i64 %3806
  store i32 %3832, ptr %3833, align 4, !tbaa !5
  %3834 = add nuw nsw i64 %3806, 1
  %3835 = icmp eq i64 %3834, %3707
  br i1 %3835, label %3843, label %3805, !llvm.loop !1067

3836:                                             ; preds = %3801, %3828
  %3837 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

3838:                                             ; preds = %3814, %3820
  %3839 = phi ptr [ %3827, %3820 ], [ %3807, %3814 ]
  %3840 = phi i32 [ %3826, %3820 ], [ 1, %3814 ]
  %3841 = load i32, ptr %3839, align 4, !tbaa !5
  %3842 = add nsw i32 %3841, %3840
  store i32 %3842, ptr %3839, align 4, !tbaa !5
  br label %3843

3843:                                             ; preds = %3830, %3838, %3803, %3784
  %3844 = icmp eq i32 %3795, %5
  br i1 %3844, label %5491, label %3710, !llvm.loop !1068

3845:                                             ; preds = %3693, %3980
  %3846 = phi double [ 0.000000e+00, %3693 ], [ %3928, %3980 ]
  %3847 = phi i32 [ 0, %3693 ], [ %3929, %3980 ]
  %3848 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3694, label %3849, label %3918

3849:                                             ; preds = %3845, %3908
  %3850 = phi i32 [ %3917, %3908 ], [ 0, %3845 ]
  %3851 = phi i64 [ %3859, %3908 ], [ %3698, %3845 ]
  %3852 = phi i64 [ %3916, %3908 ], [ %3697, %3845 ]
  %3853 = phi i32 [ %3914, %3908 ], [ %3848, %3845 ]
  %3854 = sub i32 %3696, %3850
  %3855 = tail call i32 @llvm.smin.i32(i32 %3854, i32 0)
  %3856 = sub i32 %3854, %3855
  %3857 = zext i32 %3856 to i64
  %3858 = add nuw nsw i64 %3857, 1
  %3859 = add nsw i64 %3851, -1
  %3860 = icmp ult i32 %3856, 31
  br i1 %3860, label %3896, label %3861

3861:                                             ; preds = %3849
  %3862 = and i64 %3858, 8589934560
  %3863 = sub i64 %3852, %3862
  br label %3864

3864:                                             ; preds = %3864, %3861
  %3865 = phi i64 [ 0, %3861 ], [ %3888, %3864 ]
  %3866 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3861 ], [ %3884, %3864 ]
  %3867 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3861 ], [ %3885, %3864 ]
  %3868 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3861 ], [ %3886, %3864 ]
  %3869 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3861 ], [ %3887, %3864 ]
  %3870 = sub i64 %3852, %3865
  %3871 = getelementptr inbounds i32, ptr %11, i64 %3870
  %3872 = getelementptr inbounds i32, ptr %3871, i64 -7
  %3873 = load <8 x i32>, ptr %3872, align 4, !tbaa !5
  %3874 = shufflevector <8 x i32> %3873, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3875 = getelementptr inbounds i32, ptr %3871, i64 -15
  %3876 = load <8 x i32>, ptr %3875, align 4, !tbaa !5
  %3877 = shufflevector <8 x i32> %3876, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3878 = getelementptr inbounds i32, ptr %3871, i64 -23
  %3879 = load <8 x i32>, ptr %3878, align 4, !tbaa !5
  %3880 = shufflevector <8 x i32> %3879, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3881 = getelementptr inbounds i32, ptr %3871, i64 -31
  %3882 = load <8 x i32>, ptr %3881, align 4, !tbaa !5
  %3883 = shufflevector <8 x i32> %3882, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3884 = mul <8 x i32> %3874, %3866
  %3885 = mul <8 x i32> %3877, %3867
  %3886 = mul <8 x i32> %3880, %3868
  %3887 = mul <8 x i32> %3883, %3869
  %3888 = add nuw i64 %3865, 32
  %3889 = icmp eq i64 %3888, %3862
  br i1 %3889, label %3890, label %3864, !llvm.loop !1069

3890:                                             ; preds = %3864
  %3891 = mul <8 x i32> %3885, %3884
  %3892 = mul <8 x i32> %3886, %3891
  %3893 = mul <8 x i32> %3887, %3892
  %3894 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3893)
  %3895 = icmp eq i64 %3858, %3862
  br i1 %3895, label %3908, label %3896

3896:                                             ; preds = %3849, %3890
  %3897 = phi i64 [ %3852, %3849 ], [ %3863, %3890 ]
  %3898 = phi i32 [ 1, %3849 ], [ %3894, %3890 ]
  br label %3899

3899:                                             ; preds = %3896, %3899
  %3900 = phi i64 [ %3905, %3899 ], [ %3897, %3896 ]
  %3901 = phi i32 [ %3904, %3899 ], [ %3898, %3896 ]
  %3902 = getelementptr inbounds i32, ptr %11, i64 %3900
  %3903 = load i32, ptr %3902, align 4, !tbaa !5
  %3904 = mul nsw i32 %3903, %3901
  %3905 = add nsw i64 %3900, -1
  %3906 = trunc i64 %3900 to i32
  %3907 = icmp sgt i32 %3906, 0
  br i1 %3907, label %3899, label %3908, !llvm.loop !1070

3908:                                             ; preds = %3899, %3890
  %3909 = phi i32 [ %3894, %3890 ], [ %3904, %3899 ]
  %3910 = and i64 %3859, 4294967295
  %3911 = getelementptr inbounds i32, ptr %6, i64 %3910
  %3912 = load i32, ptr %3911, align 4, !tbaa !5
  %3913 = mul nsw i32 %3912, %3909
  %3914 = add nsw i32 %3913, %3853
  %3915 = icmp sgt i64 %3851, 2
  %3916 = add nsw i64 %3852, -1
  %3917 = add i32 %3850, 1
  br i1 %3915, label %3849, label %3918, !llvm.loop !1071

3918:                                             ; preds = %3908, %3845
  %3919 = phi i32 [ %3848, %3845 ], [ %3914, %3908 ]
  %3920 = icmp slt i32 %3919, %5
  br i1 %3920, label %3923, label %3921

3921:                                             ; preds = %3918
  %3922 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

3923:                                             ; preds = %3918
  %3924 = sext i32 %3919 to i64
  %3925 = getelementptr inbounds double, ptr %3679, i64 %3924
  %3926 = load double, ptr %3925, align 8, !tbaa !18
  %3927 = fmul fast double %3926, %3926
  %3928 = fadd fast double %3846, %3927
  store double %3928, ptr %3681, align 8, !tbaa !18
  %3929 = add nuw nsw i32 %3847, 1
  br i1 %3695, label %3930, label %3980

3930:                                             ; preds = %3923
  %3931 = load i32, ptr %4, align 4, !tbaa !5
  %3932 = load i32, ptr %12, align 4, !tbaa !5
  %3933 = add nsw i32 %3932, -1
  %3934 = icmp slt i32 %3931, %3933
  br i1 %3934, label %3957, label %3935

3935:                                             ; preds = %3930
  %3936 = icmp eq i32 %3931, %3933
  br i1 %3936, label %3937, label %3973

3937:                                             ; preds = %3935
  store i32 0, ptr %4, align 4, !tbaa !5
  %3938 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3938, ptr %6, align 4, !tbaa !5
  br i1 %3700, label %3980, label %3939

3939:                                             ; preds = %3937, %3967
  %3940 = phi i64 [ %3971, %3967 ], [ 1, %3937 ]
  %3941 = getelementptr inbounds i32, ptr %4, i64 %3940
  %3942 = load i32, ptr %3941, align 4, !tbaa !5
  %3943 = getelementptr inbounds i32, ptr %12, i64 %3940
  %3944 = load i32, ptr %3943, align 4, !tbaa !5
  %3945 = add nsw i32 %3944, -1
  %3946 = icmp slt i32 %3942, %3945
  br i1 %3946, label %3947, label %3965

3947:                                             ; preds = %3939
  br i1 %3934, label %3957, label %3948

3948:                                             ; preds = %3947
  %3949 = shl i64 %3940, 32
  %3950 = add i64 %3949, -4294967296
  %3951 = ashr exact i64 %3950, 32
  %3952 = getelementptr inbounds i32, ptr %7, i64 %3951
  %3953 = load i32, ptr %3952, align 4, !tbaa !5
  %3954 = getelementptr inbounds i32, ptr %6, i64 %3940
  %3955 = load i32, ptr %3954, align 4, !tbaa !5
  %3956 = add nsw i32 %3955, %3953
  store i32 %3956, ptr %3954, align 4, !tbaa !5
  br label %3975

3957:                                             ; preds = %3930, %3947
  %3958 = phi i32 [ %3942, %3947 ], [ %3931, %3930 ]
  %3959 = phi ptr [ %3941, %3947 ], [ %4, %3930 ]
  %3960 = phi i64 [ %3940, %3947 ], [ 0, %3930 ]
  %3961 = add nsw i32 %3958, 1
  store i32 %3961, ptr %3959, align 4, !tbaa !5
  %3962 = getelementptr inbounds i32, ptr %7, i64 %3960
  %3963 = load i32, ptr %3962, align 4, !tbaa !5
  %3964 = getelementptr inbounds i32, ptr %6, i64 %3960
  br label %3975

3965:                                             ; preds = %3939
  %3966 = icmp eq i32 %3942, %3945
  br i1 %3966, label %3967, label %3973

3967:                                             ; preds = %3965
  store i32 0, ptr %3941, align 4, !tbaa !5
  %3968 = getelementptr inbounds i32, ptr %8, i64 %3940
  %3969 = load i32, ptr %3968, align 4, !tbaa !5
  %3970 = getelementptr inbounds i32, ptr %6, i64 %3940
  store i32 %3969, ptr %3970, align 4, !tbaa !5
  %3971 = add nuw nsw i64 %3940, 1
  %3972 = icmp eq i64 %3971, %3698
  br i1 %3972, label %3980, label %3939, !llvm.loop !1072

3973:                                             ; preds = %3935, %3965
  %3974 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

3975:                                             ; preds = %3948, %3957
  %3976 = phi ptr [ %3964, %3957 ], [ %3941, %3948 ]
  %3977 = phi i32 [ %3963, %3957 ], [ 1, %3948 ]
  %3978 = load i32, ptr %3976, align 4, !tbaa !5
  %3979 = add nsw i32 %3978, %3977
  store i32 %3979, ptr %3976, align 4, !tbaa !5
  br label %3980

3980:                                             ; preds = %3967, %3975, %3937, %3923
  %3981 = icmp eq i32 %3929, %5
  br i1 %3981, label %5491, label %3845, !llvm.loop !1073

3982:                                             ; preds = %3686
  %3983 = getelementptr inbounds i32, ptr %3, i64 %19
  %3984 = load i32, ptr %3983, align 4, !tbaa !5
  %3985 = icmp eq i32 %3984, 0
  %3986 = icmp sgt i32 %5, 0
  br i1 %3985, label %3996, label %3987

3987:                                             ; preds = %3982
  br i1 %3986, label %3988, label %5491

3988:                                             ; preds = %3987
  %3989 = icmp sgt i32 %13, 1
  %3990 = icmp sgt i32 %13, 0
  %3991 = add i32 %13, -2
  %3992 = zext i32 %3991 to i64
  %3993 = zext i32 %13 to i64
  %3994 = add nuw i32 %5, 1
  %3995 = icmp eq i32 %13, 1
  br label %4137

3996:                                             ; preds = %3982
  br i1 %3986, label %3997, label %5491

3997:                                             ; preds = %3996
  %3998 = icmp sgt i32 %13, 1
  %3999 = icmp sgt i32 %13, 0
  %4000 = add i32 %13, -2
  %4001 = zext i32 %4000 to i64
  %4002 = zext i32 %13 to i64
  %4003 = add nuw i32 %5, 1
  %4004 = icmp eq i32 %13, 1
  br label %4005

4005:                                             ; preds = %3997, %4135
  %4006 = phi double [ 0.000000e+00, %3997 ], [ %4085, %4135 ]
  %4007 = phi i32 [ 0, %3997 ], [ %4087, %4135 ]
  %4008 = phi double [ 0.000000e+00, %3997 ], [ %4086, %4135 ]
  %4009 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3998, label %4010, label %4079

4010:                                             ; preds = %4005, %4069
  %4011 = phi i32 [ %4078, %4069 ], [ 0, %4005 ]
  %4012 = phi i64 [ %4020, %4069 ], [ %4002, %4005 ]
  %4013 = phi i64 [ %4077, %4069 ], [ %4001, %4005 ]
  %4014 = phi i32 [ %4075, %4069 ], [ %4009, %4005 ]
  %4015 = sub i32 %4000, %4011
  %4016 = tail call i32 @llvm.smin.i32(i32 %4015, i32 0)
  %4017 = sub i32 %4015, %4016
  %4018 = zext i32 %4017 to i64
  %4019 = add nuw nsw i64 %4018, 1
  %4020 = add nsw i64 %4012, -1
  %4021 = icmp ult i32 %4017, 31
  br i1 %4021, label %4057, label %4022

4022:                                             ; preds = %4010
  %4023 = and i64 %4019, 8589934560
  %4024 = sub i64 %4013, %4023
  br label %4025

4025:                                             ; preds = %4025, %4022
  %4026 = phi i64 [ 0, %4022 ], [ %4049, %4025 ]
  %4027 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4045, %4025 ]
  %4028 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4046, %4025 ]
  %4029 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4047, %4025 ]
  %4030 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4048, %4025 ]
  %4031 = sub i64 %4013, %4026
  %4032 = getelementptr inbounds i32, ptr %9, i64 %4031
  %4033 = getelementptr inbounds i32, ptr %4032, i64 -7
  %4034 = load <8 x i32>, ptr %4033, align 4, !tbaa !5
  %4035 = shufflevector <8 x i32> %4034, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4036 = getelementptr inbounds i32, ptr %4032, i64 -15
  %4037 = load <8 x i32>, ptr %4036, align 4, !tbaa !5
  %4038 = shufflevector <8 x i32> %4037, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4039 = getelementptr inbounds i32, ptr %4032, i64 -23
  %4040 = load <8 x i32>, ptr %4039, align 4, !tbaa !5
  %4041 = shufflevector <8 x i32> %4040, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4042 = getelementptr inbounds i32, ptr %4032, i64 -31
  %4043 = load <8 x i32>, ptr %4042, align 4, !tbaa !5
  %4044 = shufflevector <8 x i32> %4043, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4045 = mul <8 x i32> %4035, %4027
  %4046 = mul <8 x i32> %4038, %4028
  %4047 = mul <8 x i32> %4041, %4029
  %4048 = mul <8 x i32> %4044, %4030
  %4049 = add nuw i64 %4026, 32
  %4050 = icmp eq i64 %4049, %4023
  br i1 %4050, label %4051, label %4025, !llvm.loop !1074

4051:                                             ; preds = %4025
  %4052 = mul <8 x i32> %4046, %4045
  %4053 = mul <8 x i32> %4047, %4052
  %4054 = mul <8 x i32> %4048, %4053
  %4055 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4054)
  %4056 = icmp eq i64 %4019, %4023
  br i1 %4056, label %4069, label %4057

4057:                                             ; preds = %4010, %4051
  %4058 = phi i64 [ %4013, %4010 ], [ %4024, %4051 ]
  %4059 = phi i32 [ 1, %4010 ], [ %4055, %4051 ]
  br label %4060

4060:                                             ; preds = %4057, %4060
  %4061 = phi i64 [ %4066, %4060 ], [ %4058, %4057 ]
  %4062 = phi i32 [ %4065, %4060 ], [ %4059, %4057 ]
  %4063 = getelementptr inbounds i32, ptr %9, i64 %4061
  %4064 = load i32, ptr %4063, align 4, !tbaa !5
  %4065 = mul nsw i32 %4064, %4062
  %4066 = add nsw i64 %4061, -1
  %4067 = trunc i64 %4061 to i32
  %4068 = icmp sgt i32 %4067, 0
  br i1 %4068, label %4060, label %4069, !llvm.loop !1075

4069:                                             ; preds = %4060, %4051
  %4070 = phi i32 [ %4055, %4051 ], [ %4065, %4060 ]
  %4071 = and i64 %4020, 4294967295
  %4072 = getelementptr inbounds i32, ptr %6, i64 %4071
  %4073 = load i32, ptr %4072, align 4, !tbaa !5
  %4074 = mul nsw i32 %4073, %4070
  %4075 = add nsw i32 %4074, %4014
  %4076 = icmp sgt i64 %4012, 2
  %4077 = add nsw i64 %4013, -1
  %4078 = add i32 %4011, 1
  br i1 %4076, label %4010, label %4079, !llvm.loop !1076

4079:                                             ; preds = %4069, %4005
  %4080 = phi i32 [ %4009, %4005 ], [ %4075, %4069 ]
  %4081 = sext i32 %4080 to i64
  %4082 = getelementptr inbounds double, ptr %3679, i64 %4081
  %4083 = load double, ptr %4082, align 8, !tbaa !18
  %4084 = fmul fast double %4083, %4083
  %4085 = fadd fast double %4006, %4084
  store double %4085, ptr %3681, align 8, !tbaa !18
  %4086 = fadd fast double %4008, 1.000000e+00
  %4087 = add nuw nsw i32 %4007, 1
  br i1 %3999, label %4088, label %4135

4088:                                             ; preds = %4079
  %4089 = load i32, ptr %4, align 4, !tbaa !5
  %4090 = load i32, ptr %12, align 4, !tbaa !5
  %4091 = add nsw i32 %4090, -1
  %4092 = icmp slt i32 %4089, %4091
  br i1 %4092, label %4112, label %4093

4093:                                             ; preds = %4088
  %4094 = icmp eq i32 %4089, %4091
  br i1 %4094, label %4095, label %4128

4095:                                             ; preds = %4093
  store i32 0, ptr %4, align 4, !tbaa !5
  %4096 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4096, ptr %6, align 4, !tbaa !5
  br i1 %4004, label %4135, label %4097

4097:                                             ; preds = %4095, %4122
  %4098 = phi i64 [ %4126, %4122 ], [ 1, %4095 ]
  %4099 = getelementptr inbounds i32, ptr %4, i64 %4098
  %4100 = load i32, ptr %4099, align 4, !tbaa !5
  %4101 = getelementptr inbounds i32, ptr %12, i64 %4098
  %4102 = load i32, ptr %4101, align 4, !tbaa !5
  %4103 = add nsw i32 %4102, -1
  %4104 = icmp slt i32 %4100, %4103
  br i1 %4104, label %4105, label %4120

4105:                                             ; preds = %4097
  br i1 %4092, label %4112, label %4106

4106:                                             ; preds = %4105
  %4107 = getelementptr inbounds i32, ptr %7, i64 %4098
  %4108 = load i32, ptr %4107, align 4, !tbaa !5
  %4109 = getelementptr inbounds i32, ptr %6, i64 %4098
  %4110 = load i32, ptr %4109, align 4, !tbaa !5
  %4111 = add nsw i32 %4110, %4108
  store i32 %4111, ptr %4109, align 4, !tbaa !5
  br label %4130

4112:                                             ; preds = %4088, %4105
  %4113 = phi i32 [ %4100, %4105 ], [ %4089, %4088 ]
  %4114 = phi ptr [ %4099, %4105 ], [ %4, %4088 ]
  %4115 = phi i64 [ %4098, %4105 ], [ 0, %4088 ]
  %4116 = add nsw i32 %4113, 1
  store i32 %4116, ptr %4114, align 4, !tbaa !5
  %4117 = getelementptr inbounds i32, ptr %7, i64 %4115
  %4118 = load i32, ptr %4117, align 4, !tbaa !5
  %4119 = getelementptr inbounds i32, ptr %6, i64 %4115
  br label %4130

4120:                                             ; preds = %4097
  %4121 = icmp eq i32 %4100, %4103
  br i1 %4121, label %4122, label %4128

4122:                                             ; preds = %4120
  store i32 0, ptr %4099, align 4, !tbaa !5
  %4123 = getelementptr inbounds i32, ptr %8, i64 %4098
  %4124 = load i32, ptr %4123, align 4, !tbaa !5
  %4125 = getelementptr inbounds i32, ptr %6, i64 %4098
  store i32 %4124, ptr %4125, align 4, !tbaa !5
  %4126 = add nuw nsw i64 %4098, 1
  %4127 = icmp eq i64 %4126, %4002
  br i1 %4127, label %4135, label %4097, !llvm.loop !1077

4128:                                             ; preds = %4093, %4120
  %4129 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

4130:                                             ; preds = %4106, %4112
  %4131 = phi ptr [ %4119, %4112 ], [ %4099, %4106 ]
  %4132 = phi i32 [ %4118, %4112 ], [ 1, %4106 ]
  %4133 = load i32, ptr %4131, align 4, !tbaa !5
  %4134 = add nsw i32 %4133, %4132
  store i32 %4134, ptr %4131, align 4, !tbaa !5
  br label %4135

4135:                                             ; preds = %4122, %4130, %4095, %4079
  %4136 = icmp eq i32 %4087, %5
  br i1 %4136, label %5491, label %4005, !llvm.loop !1078

4137:                                             ; preds = %3988, %4272
  %4138 = phi double [ 0.000000e+00, %3988 ], [ %4220, %4272 ]
  %4139 = phi i32 [ 0, %3988 ], [ %4221, %4272 ]
  %4140 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3989, label %4141, label %4210

4141:                                             ; preds = %4137, %4200
  %4142 = phi i32 [ %4209, %4200 ], [ 0, %4137 ]
  %4143 = phi i64 [ %4151, %4200 ], [ %3993, %4137 ]
  %4144 = phi i64 [ %4208, %4200 ], [ %3992, %4137 ]
  %4145 = phi i32 [ %4206, %4200 ], [ %4140, %4137 ]
  %4146 = sub i32 %3991, %4142
  %4147 = tail call i32 @llvm.smin.i32(i32 %4146, i32 0)
  %4148 = sub i32 %4146, %4147
  %4149 = zext i32 %4148 to i64
  %4150 = add nuw nsw i64 %4149, 1
  %4151 = add nsw i64 %4143, -1
  %4152 = icmp ult i32 %4148, 31
  br i1 %4152, label %4188, label %4153

4153:                                             ; preds = %4141
  %4154 = and i64 %4150, 8589934560
  %4155 = sub i64 %4144, %4154
  br label %4156

4156:                                             ; preds = %4156, %4153
  %4157 = phi i64 [ 0, %4153 ], [ %4180, %4156 ]
  %4158 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4153 ], [ %4176, %4156 ]
  %4159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4153 ], [ %4177, %4156 ]
  %4160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4153 ], [ %4178, %4156 ]
  %4161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4153 ], [ %4179, %4156 ]
  %4162 = sub i64 %4144, %4157
  %4163 = getelementptr inbounds i32, ptr %11, i64 %4162
  %4164 = getelementptr inbounds i32, ptr %4163, i64 -7
  %4165 = load <8 x i32>, ptr %4164, align 4, !tbaa !5
  %4166 = shufflevector <8 x i32> %4165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4167 = getelementptr inbounds i32, ptr %4163, i64 -15
  %4168 = load <8 x i32>, ptr %4167, align 4, !tbaa !5
  %4169 = shufflevector <8 x i32> %4168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4170 = getelementptr inbounds i32, ptr %4163, i64 -23
  %4171 = load <8 x i32>, ptr %4170, align 4, !tbaa !5
  %4172 = shufflevector <8 x i32> %4171, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4173 = getelementptr inbounds i32, ptr %4163, i64 -31
  %4174 = load <8 x i32>, ptr %4173, align 4, !tbaa !5
  %4175 = shufflevector <8 x i32> %4174, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4176 = mul <8 x i32> %4166, %4158
  %4177 = mul <8 x i32> %4169, %4159
  %4178 = mul <8 x i32> %4172, %4160
  %4179 = mul <8 x i32> %4175, %4161
  %4180 = add nuw i64 %4157, 32
  %4181 = icmp eq i64 %4180, %4154
  br i1 %4181, label %4182, label %4156, !llvm.loop !1079

4182:                                             ; preds = %4156
  %4183 = mul <8 x i32> %4177, %4176
  %4184 = mul <8 x i32> %4178, %4183
  %4185 = mul <8 x i32> %4179, %4184
  %4186 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4185)
  %4187 = icmp eq i64 %4150, %4154
  br i1 %4187, label %4200, label %4188

4188:                                             ; preds = %4141, %4182
  %4189 = phi i64 [ %4144, %4141 ], [ %4155, %4182 ]
  %4190 = phi i32 [ 1, %4141 ], [ %4186, %4182 ]
  br label %4191

4191:                                             ; preds = %4188, %4191
  %4192 = phi i64 [ %4197, %4191 ], [ %4189, %4188 ]
  %4193 = phi i32 [ %4196, %4191 ], [ %4190, %4188 ]
  %4194 = getelementptr inbounds i32, ptr %11, i64 %4192
  %4195 = load i32, ptr %4194, align 4, !tbaa !5
  %4196 = mul nsw i32 %4195, %4193
  %4197 = add nsw i64 %4192, -1
  %4198 = trunc i64 %4192 to i32
  %4199 = icmp sgt i32 %4198, 0
  br i1 %4199, label %4191, label %4200, !llvm.loop !1080

4200:                                             ; preds = %4191, %4182
  %4201 = phi i32 [ %4186, %4182 ], [ %4196, %4191 ]
  %4202 = and i64 %4151, 4294967295
  %4203 = getelementptr inbounds i32, ptr %6, i64 %4202
  %4204 = load i32, ptr %4203, align 4, !tbaa !5
  %4205 = mul nsw i32 %4204, %4201
  %4206 = add nsw i32 %4205, %4145
  %4207 = icmp sgt i64 %4143, 2
  %4208 = add nsw i64 %4144, -1
  %4209 = add i32 %4142, 1
  br i1 %4207, label %4141, label %4210, !llvm.loop !1081

4210:                                             ; preds = %4200, %4137
  %4211 = phi i32 [ %4140, %4137 ], [ %4206, %4200 ]
  %4212 = icmp slt i32 %4211, %5
  br i1 %4212, label %4215, label %4213

4213:                                             ; preds = %4210
  %4214 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

4215:                                             ; preds = %4210
  %4216 = sext i32 %4211 to i64
  %4217 = getelementptr inbounds double, ptr %3679, i64 %4216
  %4218 = load double, ptr %4217, align 8, !tbaa !18
  %4219 = fmul fast double %4218, %4218
  %4220 = fadd fast double %4138, %4219
  store double %4220, ptr %3681, align 8, !tbaa !18
  %4221 = add nuw nsw i32 %4139, 1
  br i1 %3990, label %4222, label %4272

4222:                                             ; preds = %4215
  %4223 = load i32, ptr %4, align 4, !tbaa !5
  %4224 = load i32, ptr %12, align 4, !tbaa !5
  %4225 = add nsw i32 %4224, -1
  %4226 = icmp slt i32 %4223, %4225
  br i1 %4226, label %4249, label %4227

4227:                                             ; preds = %4222
  %4228 = icmp eq i32 %4223, %4225
  br i1 %4228, label %4229, label %4265

4229:                                             ; preds = %4227
  store i32 0, ptr %4, align 4, !tbaa !5
  %4230 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4230, ptr %6, align 4, !tbaa !5
  br i1 %3995, label %4272, label %4231

4231:                                             ; preds = %4229, %4259
  %4232 = phi i64 [ %4263, %4259 ], [ 1, %4229 ]
  %4233 = getelementptr inbounds i32, ptr %4, i64 %4232
  %4234 = load i32, ptr %4233, align 4, !tbaa !5
  %4235 = getelementptr inbounds i32, ptr %12, i64 %4232
  %4236 = load i32, ptr %4235, align 4, !tbaa !5
  %4237 = add nsw i32 %4236, -1
  %4238 = icmp slt i32 %4234, %4237
  br i1 %4238, label %4239, label %4257

4239:                                             ; preds = %4231
  br i1 %4226, label %4249, label %4240

4240:                                             ; preds = %4239
  %4241 = shl i64 %4232, 32
  %4242 = add i64 %4241, -4294967296
  %4243 = ashr exact i64 %4242, 32
  %4244 = getelementptr inbounds i32, ptr %7, i64 %4243
  %4245 = load i32, ptr %4244, align 4, !tbaa !5
  %4246 = getelementptr inbounds i32, ptr %6, i64 %4232
  %4247 = load i32, ptr %4246, align 4, !tbaa !5
  %4248 = add nsw i32 %4247, %4245
  store i32 %4248, ptr %4246, align 4, !tbaa !5
  br label %4267

4249:                                             ; preds = %4222, %4239
  %4250 = phi i32 [ %4234, %4239 ], [ %4223, %4222 ]
  %4251 = phi ptr [ %4233, %4239 ], [ %4, %4222 ]
  %4252 = phi i64 [ %4232, %4239 ], [ 0, %4222 ]
  %4253 = add nsw i32 %4250, 1
  store i32 %4253, ptr %4251, align 4, !tbaa !5
  %4254 = getelementptr inbounds i32, ptr %7, i64 %4252
  %4255 = load i32, ptr %4254, align 4, !tbaa !5
  %4256 = getelementptr inbounds i32, ptr %6, i64 %4252
  br label %4267

4257:                                             ; preds = %4231
  %4258 = icmp eq i32 %4234, %4237
  br i1 %4258, label %4259, label %4265

4259:                                             ; preds = %4257
  store i32 0, ptr %4233, align 4, !tbaa !5
  %4260 = getelementptr inbounds i32, ptr %8, i64 %4232
  %4261 = load i32, ptr %4260, align 4, !tbaa !5
  %4262 = getelementptr inbounds i32, ptr %6, i64 %4232
  store i32 %4261, ptr %4262, align 4, !tbaa !5
  %4263 = add nuw nsw i64 %4232, 1
  %4264 = icmp eq i64 %4263, %3993
  br i1 %4264, label %4272, label %4231, !llvm.loop !1082

4265:                                             ; preds = %4227, %4257
  %4266 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

4267:                                             ; preds = %4240, %4249
  %4268 = phi ptr [ %4256, %4249 ], [ %4233, %4240 ]
  %4269 = phi i32 [ %4255, %4249 ], [ 1, %4240 ]
  %4270 = load i32, ptr %4268, align 4, !tbaa !5
  %4271 = add nsw i32 %4270, %4269
  store i32 %4271, ptr %4268, align 4, !tbaa !5
  br label %4272

4272:                                             ; preds = %4259, %4267, %4229, %4215
  %4273 = icmp eq i32 %4221, %5
  br i1 %4273, label %5491, label %4137, !llvm.loop !1083

4274:                                             ; preds = %3686
  %4275 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

4276:                                             ; preds = %18
  %4277 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4278 = load ptr, ptr %4277, align 8, !tbaa !9
  %4279 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4280 = load ptr, ptr %4279, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4280, align 4, !tbaa !162
  %4281 = icmp eq i32 %13, 0
  br i1 %4281, label %4282, label %4286

4282:                                             ; preds = %4276
  %4283 = load double, ptr %4278, align 8, !tbaa !18
  %4284 = fptrunc double %4283 to float
  %4285 = fmul fast float %4284, %4284
  store float %4285, ptr %4280, align 4, !tbaa !162
  br label %5491

4286:                                             ; preds = %4276
  switch i32 %1, label %4884 [
    i32 1, label %4287
    i32 0, label %4590
  ]

4287:                                             ; preds = %4286
  %4288 = getelementptr inbounds i32, ptr %3, i64 %19
  %4289 = load i32, ptr %4288, align 4, !tbaa !5
  %4290 = icmp eq i32 %4289, 0
  %4291 = icmp sgt i32 %5, 0
  br i1 %4290, label %4301, label %4292

4292:                                             ; preds = %4287
  br i1 %4291, label %4293, label %5491

4293:                                             ; preds = %4292
  %4294 = icmp sgt i32 %13, 1
  %4295 = icmp sgt i32 %13, 0
  %4296 = add i32 %13, -2
  %4297 = zext i32 %4296 to i64
  %4298 = zext i32 %13 to i64
  %4299 = add nuw i32 %5, 1
  %4300 = icmp eq i32 %13, 1
  br label %4449

4301:                                             ; preds = %4287
  br i1 %4291, label %4302, label %5491

4302:                                             ; preds = %4301
  %4303 = icmp sgt i32 %13, 1
  %4304 = icmp sgt i32 %13, 0
  %4305 = add i32 %13, -2
  %4306 = zext i32 %4305 to i64
  %4307 = zext i32 %13 to i64
  %4308 = add nuw i32 %5, 1
  %4309 = icmp eq i32 %13, 1
  br label %4310

4310:                                             ; preds = %4302, %4447
  %4311 = phi float [ 0.000000e+00, %4302 ], [ %4397, %4447 ]
  %4312 = phi i32 [ 0, %4302 ], [ %4399, %4447 ]
  %4313 = phi double [ 0.000000e+00, %4302 ], [ %4398, %4447 ]
  %4314 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4303, label %4315, label %4384

4315:                                             ; preds = %4310, %4374
  %4316 = phi i32 [ %4383, %4374 ], [ 0, %4310 ]
  %4317 = phi i64 [ %4325, %4374 ], [ %4307, %4310 ]
  %4318 = phi i64 [ %4382, %4374 ], [ %4306, %4310 ]
  %4319 = phi i32 [ %4380, %4374 ], [ %4314, %4310 ]
  %4320 = sub i32 %4305, %4316
  %4321 = tail call i32 @llvm.smin.i32(i32 %4320, i32 0)
  %4322 = sub i32 %4320, %4321
  %4323 = zext i32 %4322 to i64
  %4324 = add nuw nsw i64 %4323, 1
  %4325 = add nsw i64 %4317, -1
  %4326 = icmp ult i32 %4322, 31
  br i1 %4326, label %4362, label %4327

4327:                                             ; preds = %4315
  %4328 = and i64 %4324, 8589934560
  %4329 = sub i64 %4318, %4328
  br label %4330

4330:                                             ; preds = %4330, %4327
  %4331 = phi i64 [ 0, %4327 ], [ %4354, %4330 ]
  %4332 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4327 ], [ %4350, %4330 ]
  %4333 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4327 ], [ %4351, %4330 ]
  %4334 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4327 ], [ %4352, %4330 ]
  %4335 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4327 ], [ %4353, %4330 ]
  %4336 = sub i64 %4318, %4331
  %4337 = getelementptr inbounds i32, ptr %9, i64 %4336
  %4338 = getelementptr inbounds i32, ptr %4337, i64 -7
  %4339 = load <8 x i32>, ptr %4338, align 4, !tbaa !5
  %4340 = shufflevector <8 x i32> %4339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4341 = getelementptr inbounds i32, ptr %4337, i64 -15
  %4342 = load <8 x i32>, ptr %4341, align 4, !tbaa !5
  %4343 = shufflevector <8 x i32> %4342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4344 = getelementptr inbounds i32, ptr %4337, i64 -23
  %4345 = load <8 x i32>, ptr %4344, align 4, !tbaa !5
  %4346 = shufflevector <8 x i32> %4345, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4347 = getelementptr inbounds i32, ptr %4337, i64 -31
  %4348 = load <8 x i32>, ptr %4347, align 4, !tbaa !5
  %4349 = shufflevector <8 x i32> %4348, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4350 = mul <8 x i32> %4340, %4332
  %4351 = mul <8 x i32> %4343, %4333
  %4352 = mul <8 x i32> %4346, %4334
  %4353 = mul <8 x i32> %4349, %4335
  %4354 = add nuw i64 %4331, 32
  %4355 = icmp eq i64 %4354, %4328
  br i1 %4355, label %4356, label %4330, !llvm.loop !1084

4356:                                             ; preds = %4330
  %4357 = mul <8 x i32> %4351, %4350
  %4358 = mul <8 x i32> %4352, %4357
  %4359 = mul <8 x i32> %4353, %4358
  %4360 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4359)
  %4361 = icmp eq i64 %4324, %4328
  br i1 %4361, label %4374, label %4362

4362:                                             ; preds = %4315, %4356
  %4363 = phi i64 [ %4318, %4315 ], [ %4329, %4356 ]
  %4364 = phi i32 [ 1, %4315 ], [ %4360, %4356 ]
  br label %4365

4365:                                             ; preds = %4362, %4365
  %4366 = phi i64 [ %4371, %4365 ], [ %4363, %4362 ]
  %4367 = phi i32 [ %4370, %4365 ], [ %4364, %4362 ]
  %4368 = getelementptr inbounds i32, ptr %9, i64 %4366
  %4369 = load i32, ptr %4368, align 4, !tbaa !5
  %4370 = mul nsw i32 %4369, %4367
  %4371 = add nsw i64 %4366, -1
  %4372 = trunc i64 %4366 to i32
  %4373 = icmp sgt i32 %4372, 0
  br i1 %4373, label %4365, label %4374, !llvm.loop !1085

4374:                                             ; preds = %4365, %4356
  %4375 = phi i32 [ %4360, %4356 ], [ %4370, %4365 ]
  %4376 = and i64 %4325, 4294967295
  %4377 = getelementptr inbounds i32, ptr %6, i64 %4376
  %4378 = load i32, ptr %4377, align 4, !tbaa !5
  %4379 = mul nsw i32 %4378, %4375
  %4380 = add nsw i32 %4379, %4319
  %4381 = icmp sgt i64 %4317, 2
  %4382 = add nsw i64 %4318, -1
  %4383 = add i32 %4316, 1
  br i1 %4381, label %4315, label %4384, !llvm.loop !1086

4384:                                             ; preds = %4374, %4310
  %4385 = phi i32 [ %4314, %4310 ], [ %4380, %4374 ]
  %4386 = sext i32 %4385 to i64
  %4387 = getelementptr inbounds double, ptr %2, i64 %4386
  %4388 = load double, ptr %4387, align 8, !tbaa !18
  %4389 = getelementptr inbounds double, ptr %4278, i64 %4386
  %4390 = load double, ptr %4389, align 8, !tbaa !18
  %4391 = fptrunc double %4390 to float
  %4392 = fpext float %4311 to double
  %4393 = fpext float %4391 to double
  %4394 = fmul fast double %4388, %4393
  %4395 = fmul fast double %4394, %4394
  %4396 = fadd fast double %4395, %4392
  %4397 = fptrunc double %4396 to float
  %4398 = fadd fast double %4388, %4313
  %4399 = add nuw nsw i32 %4312, 1
  br i1 %4304, label %4400, label %4447

4400:                                             ; preds = %4384
  %4401 = load i32, ptr %4, align 4, !tbaa !5
  %4402 = load i32, ptr %12, align 4, !tbaa !5
  %4403 = add nsw i32 %4402, -1
  %4404 = icmp slt i32 %4401, %4403
  br i1 %4404, label %4424, label %4405

4405:                                             ; preds = %4400
  %4406 = icmp eq i32 %4401, %4403
  br i1 %4406, label %4407, label %4440

4407:                                             ; preds = %4405
  store i32 0, ptr %4, align 4, !tbaa !5
  %4408 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4408, ptr %6, align 4, !tbaa !5
  br i1 %4309, label %4447, label %4409

4409:                                             ; preds = %4407, %4434
  %4410 = phi i64 [ %4438, %4434 ], [ 1, %4407 ]
  %4411 = getelementptr inbounds i32, ptr %4, i64 %4410
  %4412 = load i32, ptr %4411, align 4, !tbaa !5
  %4413 = getelementptr inbounds i32, ptr %12, i64 %4410
  %4414 = load i32, ptr %4413, align 4, !tbaa !5
  %4415 = add nsw i32 %4414, -1
  %4416 = icmp slt i32 %4412, %4415
  br i1 %4416, label %4417, label %4432

4417:                                             ; preds = %4409
  br i1 %4404, label %4424, label %4418

4418:                                             ; preds = %4417
  %4419 = getelementptr inbounds i32, ptr %7, i64 %4410
  %4420 = load i32, ptr %4419, align 4, !tbaa !5
  %4421 = getelementptr inbounds i32, ptr %6, i64 %4410
  %4422 = load i32, ptr %4421, align 4, !tbaa !5
  %4423 = add nsw i32 %4422, %4420
  store i32 %4423, ptr %4421, align 4, !tbaa !5
  br label %4442

4424:                                             ; preds = %4400, %4417
  %4425 = phi i32 [ %4412, %4417 ], [ %4401, %4400 ]
  %4426 = phi ptr [ %4411, %4417 ], [ %4, %4400 ]
  %4427 = phi i64 [ %4410, %4417 ], [ 0, %4400 ]
  %4428 = add nsw i32 %4425, 1
  store i32 %4428, ptr %4426, align 4, !tbaa !5
  %4429 = getelementptr inbounds i32, ptr %7, i64 %4427
  %4430 = load i32, ptr %4429, align 4, !tbaa !5
  %4431 = getelementptr inbounds i32, ptr %6, i64 %4427
  br label %4442

4432:                                             ; preds = %4409
  %4433 = icmp eq i32 %4412, %4415
  br i1 %4433, label %4434, label %4440

4434:                                             ; preds = %4432
  store i32 0, ptr %4411, align 4, !tbaa !5
  %4435 = getelementptr inbounds i32, ptr %8, i64 %4410
  %4436 = load i32, ptr %4435, align 4, !tbaa !5
  %4437 = getelementptr inbounds i32, ptr %6, i64 %4410
  store i32 %4436, ptr %4437, align 4, !tbaa !5
  %4438 = add nuw nsw i64 %4410, 1
  %4439 = icmp eq i64 %4438, %4307
  br i1 %4439, label %4447, label %4409, !llvm.loop !1087

4440:                                             ; preds = %4405, %4432
  store float %4397, ptr %4280, align 4, !tbaa !162
  %4441 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

4442:                                             ; preds = %4418, %4424
  %4443 = phi ptr [ %4431, %4424 ], [ %4411, %4418 ]
  %4444 = phi i32 [ %4430, %4424 ], [ 1, %4418 ]
  %4445 = load i32, ptr %4443, align 4, !tbaa !5
  %4446 = add nsw i32 %4445, %4444
  store i32 %4446, ptr %4443, align 4, !tbaa !5
  br label %4447

4447:                                             ; preds = %4434, %4442, %4407, %4384
  %4448 = icmp eq i32 %4399, %5
  br i1 %4448, label %5489, label %4310, !llvm.loop !1088

4449:                                             ; preds = %4293, %4588
  %4450 = phi float [ 0.000000e+00, %4293 ], [ %4536, %4588 ]
  %4451 = phi i32 [ 0, %4293 ], [ %4537, %4588 ]
  %4452 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4294, label %4453, label %4522

4453:                                             ; preds = %4449, %4512
  %4454 = phi i32 [ %4521, %4512 ], [ 0, %4449 ]
  %4455 = phi i64 [ %4463, %4512 ], [ %4298, %4449 ]
  %4456 = phi i64 [ %4520, %4512 ], [ %4297, %4449 ]
  %4457 = phi i32 [ %4518, %4512 ], [ %4452, %4449 ]
  %4458 = sub i32 %4296, %4454
  %4459 = tail call i32 @llvm.smin.i32(i32 %4458, i32 0)
  %4460 = sub i32 %4458, %4459
  %4461 = zext i32 %4460 to i64
  %4462 = add nuw nsw i64 %4461, 1
  %4463 = add nsw i64 %4455, -1
  %4464 = icmp ult i32 %4460, 31
  br i1 %4464, label %4500, label %4465

4465:                                             ; preds = %4453
  %4466 = and i64 %4462, 8589934560
  %4467 = sub i64 %4456, %4466
  br label %4468

4468:                                             ; preds = %4468, %4465
  %4469 = phi i64 [ 0, %4465 ], [ %4492, %4468 ]
  %4470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4488, %4468 ]
  %4471 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4489, %4468 ]
  %4472 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4490, %4468 ]
  %4473 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4491, %4468 ]
  %4474 = sub i64 %4456, %4469
  %4475 = getelementptr inbounds i32, ptr %11, i64 %4474
  %4476 = getelementptr inbounds i32, ptr %4475, i64 -7
  %4477 = load <8 x i32>, ptr %4476, align 4, !tbaa !5
  %4478 = shufflevector <8 x i32> %4477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4479 = getelementptr inbounds i32, ptr %4475, i64 -15
  %4480 = load <8 x i32>, ptr %4479, align 4, !tbaa !5
  %4481 = shufflevector <8 x i32> %4480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4482 = getelementptr inbounds i32, ptr %4475, i64 -23
  %4483 = load <8 x i32>, ptr %4482, align 4, !tbaa !5
  %4484 = shufflevector <8 x i32> %4483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4485 = getelementptr inbounds i32, ptr %4475, i64 -31
  %4486 = load <8 x i32>, ptr %4485, align 4, !tbaa !5
  %4487 = shufflevector <8 x i32> %4486, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4488 = mul <8 x i32> %4478, %4470
  %4489 = mul <8 x i32> %4481, %4471
  %4490 = mul <8 x i32> %4484, %4472
  %4491 = mul <8 x i32> %4487, %4473
  %4492 = add nuw i64 %4469, 32
  %4493 = icmp eq i64 %4492, %4466
  br i1 %4493, label %4494, label %4468, !llvm.loop !1089

4494:                                             ; preds = %4468
  %4495 = mul <8 x i32> %4489, %4488
  %4496 = mul <8 x i32> %4490, %4495
  %4497 = mul <8 x i32> %4491, %4496
  %4498 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4497)
  %4499 = icmp eq i64 %4462, %4466
  br i1 %4499, label %4512, label %4500

4500:                                             ; preds = %4453, %4494
  %4501 = phi i64 [ %4456, %4453 ], [ %4467, %4494 ]
  %4502 = phi i32 [ 1, %4453 ], [ %4498, %4494 ]
  br label %4503

4503:                                             ; preds = %4500, %4503
  %4504 = phi i64 [ %4509, %4503 ], [ %4501, %4500 ]
  %4505 = phi i32 [ %4508, %4503 ], [ %4502, %4500 ]
  %4506 = getelementptr inbounds i32, ptr %11, i64 %4504
  %4507 = load i32, ptr %4506, align 4, !tbaa !5
  %4508 = mul nsw i32 %4507, %4505
  %4509 = add nsw i64 %4504, -1
  %4510 = trunc i64 %4504 to i32
  %4511 = icmp sgt i32 %4510, 0
  br i1 %4511, label %4503, label %4512, !llvm.loop !1090

4512:                                             ; preds = %4503, %4494
  %4513 = phi i32 [ %4498, %4494 ], [ %4508, %4503 ]
  %4514 = and i64 %4463, 4294967295
  %4515 = getelementptr inbounds i32, ptr %6, i64 %4514
  %4516 = load i32, ptr %4515, align 4, !tbaa !5
  %4517 = mul nsw i32 %4516, %4513
  %4518 = add nsw i32 %4517, %4457
  %4519 = icmp sgt i64 %4455, 2
  %4520 = add nsw i64 %4456, -1
  %4521 = add i32 %4454, 1
  br i1 %4519, label %4453, label %4522, !llvm.loop !1091

4522:                                             ; preds = %4512, %4449
  %4523 = phi i32 [ %4452, %4449 ], [ %4518, %4512 ]
  %4524 = icmp slt i32 %4523, %5
  br i1 %4524, label %4527, label %4525

4525:                                             ; preds = %4522
  %4526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

4527:                                             ; preds = %4522
  %4528 = sext i32 %4523 to i64
  %4529 = getelementptr inbounds double, ptr %4278, i64 %4528
  %4530 = load double, ptr %4529, align 8, !tbaa !18
  %4531 = fptrunc double %4530 to float
  %4532 = fpext float %4450 to double
  %4533 = fpext float %4531 to double
  %4534 = fmul fast double %4533, %4533
  %4535 = fadd fast double %4534, %4532
  %4536 = fptrunc double %4535 to float
  store float %4536, ptr %4280, align 4, !tbaa !162
  %4537 = add nuw nsw i32 %4451, 1
  br i1 %4295, label %4538, label %4588

4538:                                             ; preds = %4527
  %4539 = load i32, ptr %4, align 4, !tbaa !5
  %4540 = load i32, ptr %12, align 4, !tbaa !5
  %4541 = add nsw i32 %4540, -1
  %4542 = icmp slt i32 %4539, %4541
  br i1 %4542, label %4565, label %4543

4543:                                             ; preds = %4538
  %4544 = icmp eq i32 %4539, %4541
  br i1 %4544, label %4545, label %4581

4545:                                             ; preds = %4543
  store i32 0, ptr %4, align 4, !tbaa !5
  %4546 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4546, ptr %6, align 4, !tbaa !5
  br i1 %4300, label %4588, label %4547

4547:                                             ; preds = %4545, %4575
  %4548 = phi i64 [ %4579, %4575 ], [ 1, %4545 ]
  %4549 = getelementptr inbounds i32, ptr %4, i64 %4548
  %4550 = load i32, ptr %4549, align 4, !tbaa !5
  %4551 = getelementptr inbounds i32, ptr %12, i64 %4548
  %4552 = load i32, ptr %4551, align 4, !tbaa !5
  %4553 = add nsw i32 %4552, -1
  %4554 = icmp slt i32 %4550, %4553
  br i1 %4554, label %4555, label %4573

4555:                                             ; preds = %4547
  br i1 %4542, label %4565, label %4556

4556:                                             ; preds = %4555
  %4557 = shl i64 %4548, 32
  %4558 = add i64 %4557, -4294967296
  %4559 = ashr exact i64 %4558, 32
  %4560 = getelementptr inbounds i32, ptr %7, i64 %4559
  %4561 = load i32, ptr %4560, align 4, !tbaa !5
  %4562 = getelementptr inbounds i32, ptr %6, i64 %4548
  %4563 = load i32, ptr %4562, align 4, !tbaa !5
  %4564 = add nsw i32 %4563, %4561
  store i32 %4564, ptr %4562, align 4, !tbaa !5
  br label %4583

4565:                                             ; preds = %4538, %4555
  %4566 = phi i32 [ %4550, %4555 ], [ %4539, %4538 ]
  %4567 = phi ptr [ %4549, %4555 ], [ %4, %4538 ]
  %4568 = phi i64 [ %4548, %4555 ], [ 0, %4538 ]
  %4569 = add nsw i32 %4566, 1
  store i32 %4569, ptr %4567, align 4, !tbaa !5
  %4570 = getelementptr inbounds i32, ptr %7, i64 %4568
  %4571 = load i32, ptr %4570, align 4, !tbaa !5
  %4572 = getelementptr inbounds i32, ptr %6, i64 %4568
  br label %4583

4573:                                             ; preds = %4547
  %4574 = icmp eq i32 %4550, %4553
  br i1 %4574, label %4575, label %4581

4575:                                             ; preds = %4573
  store i32 0, ptr %4549, align 4, !tbaa !5
  %4576 = getelementptr inbounds i32, ptr %8, i64 %4548
  %4577 = load i32, ptr %4576, align 4, !tbaa !5
  %4578 = getelementptr inbounds i32, ptr %6, i64 %4548
  store i32 %4577, ptr %4578, align 4, !tbaa !5
  %4579 = add nuw nsw i64 %4548, 1
  %4580 = icmp eq i64 %4579, %4298
  br i1 %4580, label %4588, label %4547, !llvm.loop !1092

4581:                                             ; preds = %4543, %4573
  %4582 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

4583:                                             ; preds = %4556, %4565
  %4584 = phi ptr [ %4572, %4565 ], [ %4549, %4556 ]
  %4585 = phi i32 [ %4571, %4565 ], [ 1, %4556 ]
  %4586 = load i32, ptr %4584, align 4, !tbaa !5
  %4587 = add nsw i32 %4586, %4585
  store i32 %4587, ptr %4584, align 4, !tbaa !5
  br label %4588

4588:                                             ; preds = %4575, %4583, %4545, %4527
  %4589 = icmp eq i32 %4537, %5
  br i1 %4589, label %5491, label %4449, !llvm.loop !1093

4590:                                             ; preds = %4286
  %4591 = getelementptr inbounds i32, ptr %3, i64 %19
  %4592 = load i32, ptr %4591, align 4, !tbaa !5
  %4593 = icmp eq i32 %4592, 0
  %4594 = icmp sgt i32 %5, 0
  br i1 %4593, label %4604, label %4595

4595:                                             ; preds = %4590
  br i1 %4594, label %4596, label %5491

4596:                                             ; preds = %4595
  %4597 = icmp sgt i32 %13, 1
  %4598 = icmp sgt i32 %13, 0
  %4599 = add i32 %13, -2
  %4600 = zext i32 %4599 to i64
  %4601 = zext i32 %13 to i64
  %4602 = add nuw i32 %5, 1
  %4603 = icmp eq i32 %13, 1
  br label %4746

4604:                                             ; preds = %4590
  br i1 %4594, label %4605, label %5491

4605:                                             ; preds = %4604
  %4606 = icmp sgt i32 %13, 1
  %4607 = icmp sgt i32 %13, 0
  %4608 = add i32 %13, -2
  %4609 = zext i32 %4608 to i64
  %4610 = zext i32 %13 to i64
  %4611 = add nuw i32 %5, 1
  %4612 = icmp eq i32 %13, 1
  br label %4613

4613:                                             ; preds = %4605, %4744
  %4614 = phi float [ 0.000000e+00, %4605 ], [ %4694, %4744 ]
  %4615 = phi i32 [ 0, %4605 ], [ %4696, %4744 ]
  %4616 = phi double [ 0.000000e+00, %4605 ], [ %4695, %4744 ]
  %4617 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4606, label %4618, label %4687

4618:                                             ; preds = %4613, %4677
  %4619 = phi i32 [ %4686, %4677 ], [ 0, %4613 ]
  %4620 = phi i64 [ %4628, %4677 ], [ %4610, %4613 ]
  %4621 = phi i64 [ %4685, %4677 ], [ %4609, %4613 ]
  %4622 = phi i32 [ %4683, %4677 ], [ %4617, %4613 ]
  %4623 = sub i32 %4608, %4619
  %4624 = tail call i32 @llvm.smin.i32(i32 %4623, i32 0)
  %4625 = sub i32 %4623, %4624
  %4626 = zext i32 %4625 to i64
  %4627 = add nuw nsw i64 %4626, 1
  %4628 = add nsw i64 %4620, -1
  %4629 = icmp ult i32 %4625, 31
  br i1 %4629, label %4665, label %4630

4630:                                             ; preds = %4618
  %4631 = and i64 %4627, 8589934560
  %4632 = sub i64 %4621, %4631
  br label %4633

4633:                                             ; preds = %4633, %4630
  %4634 = phi i64 [ 0, %4630 ], [ %4657, %4633 ]
  %4635 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4630 ], [ %4653, %4633 ]
  %4636 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4630 ], [ %4654, %4633 ]
  %4637 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4630 ], [ %4655, %4633 ]
  %4638 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4630 ], [ %4656, %4633 ]
  %4639 = sub i64 %4621, %4634
  %4640 = getelementptr inbounds i32, ptr %9, i64 %4639
  %4641 = getelementptr inbounds i32, ptr %4640, i64 -7
  %4642 = load <8 x i32>, ptr %4641, align 4, !tbaa !5
  %4643 = shufflevector <8 x i32> %4642, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4644 = getelementptr inbounds i32, ptr %4640, i64 -15
  %4645 = load <8 x i32>, ptr %4644, align 4, !tbaa !5
  %4646 = shufflevector <8 x i32> %4645, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4647 = getelementptr inbounds i32, ptr %4640, i64 -23
  %4648 = load <8 x i32>, ptr %4647, align 4, !tbaa !5
  %4649 = shufflevector <8 x i32> %4648, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4650 = getelementptr inbounds i32, ptr %4640, i64 -31
  %4651 = load <8 x i32>, ptr %4650, align 4, !tbaa !5
  %4652 = shufflevector <8 x i32> %4651, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4653 = mul <8 x i32> %4643, %4635
  %4654 = mul <8 x i32> %4646, %4636
  %4655 = mul <8 x i32> %4649, %4637
  %4656 = mul <8 x i32> %4652, %4638
  %4657 = add nuw i64 %4634, 32
  %4658 = icmp eq i64 %4657, %4631
  br i1 %4658, label %4659, label %4633, !llvm.loop !1094

4659:                                             ; preds = %4633
  %4660 = mul <8 x i32> %4654, %4653
  %4661 = mul <8 x i32> %4655, %4660
  %4662 = mul <8 x i32> %4656, %4661
  %4663 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4662)
  %4664 = icmp eq i64 %4627, %4631
  br i1 %4664, label %4677, label %4665

4665:                                             ; preds = %4618, %4659
  %4666 = phi i64 [ %4621, %4618 ], [ %4632, %4659 ]
  %4667 = phi i32 [ 1, %4618 ], [ %4663, %4659 ]
  br label %4668

4668:                                             ; preds = %4665, %4668
  %4669 = phi i64 [ %4674, %4668 ], [ %4666, %4665 ]
  %4670 = phi i32 [ %4673, %4668 ], [ %4667, %4665 ]
  %4671 = getelementptr inbounds i32, ptr %9, i64 %4669
  %4672 = load i32, ptr %4671, align 4, !tbaa !5
  %4673 = mul nsw i32 %4672, %4670
  %4674 = add nsw i64 %4669, -1
  %4675 = trunc i64 %4669 to i32
  %4676 = icmp sgt i32 %4675, 0
  br i1 %4676, label %4668, label %4677, !llvm.loop !1095

4677:                                             ; preds = %4668, %4659
  %4678 = phi i32 [ %4663, %4659 ], [ %4673, %4668 ]
  %4679 = and i64 %4628, 4294967295
  %4680 = getelementptr inbounds i32, ptr %6, i64 %4679
  %4681 = load i32, ptr %4680, align 4, !tbaa !5
  %4682 = mul nsw i32 %4681, %4678
  %4683 = add nsw i32 %4682, %4622
  %4684 = icmp sgt i64 %4620, 2
  %4685 = add nsw i64 %4621, -1
  %4686 = add i32 %4619, 1
  br i1 %4684, label %4618, label %4687, !llvm.loop !1096

4687:                                             ; preds = %4677, %4613
  %4688 = phi i32 [ %4617, %4613 ], [ %4683, %4677 ]
  %4689 = sext i32 %4688 to i64
  %4690 = getelementptr inbounds double, ptr %4278, i64 %4689
  %4691 = load double, ptr %4690, align 8, !tbaa !18
  %4692 = fptrunc double %4691 to float
  %4693 = fmul fast float %4692, %4692
  %4694 = fadd fast float %4693, %4614
  %4695 = fadd fast double %4616, 1.000000e+00
  %4696 = add nuw nsw i32 %4615, 1
  br i1 %4607, label %4697, label %4744

4697:                                             ; preds = %4687
  %4698 = load i32, ptr %4, align 4, !tbaa !5
  %4699 = load i32, ptr %12, align 4, !tbaa !5
  %4700 = add nsw i32 %4699, -1
  %4701 = icmp slt i32 %4698, %4700
  br i1 %4701, label %4721, label %4702

4702:                                             ; preds = %4697
  %4703 = icmp eq i32 %4698, %4700
  br i1 %4703, label %4704, label %4737

4704:                                             ; preds = %4702
  store i32 0, ptr %4, align 4, !tbaa !5
  %4705 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4705, ptr %6, align 4, !tbaa !5
  br i1 %4612, label %4744, label %4706

4706:                                             ; preds = %4704, %4731
  %4707 = phi i64 [ %4735, %4731 ], [ 1, %4704 ]
  %4708 = getelementptr inbounds i32, ptr %4, i64 %4707
  %4709 = load i32, ptr %4708, align 4, !tbaa !5
  %4710 = getelementptr inbounds i32, ptr %12, i64 %4707
  %4711 = load i32, ptr %4710, align 4, !tbaa !5
  %4712 = add nsw i32 %4711, -1
  %4713 = icmp slt i32 %4709, %4712
  br i1 %4713, label %4714, label %4729

4714:                                             ; preds = %4706
  br i1 %4701, label %4721, label %4715

4715:                                             ; preds = %4714
  %4716 = getelementptr inbounds i32, ptr %7, i64 %4707
  %4717 = load i32, ptr %4716, align 4, !tbaa !5
  %4718 = getelementptr inbounds i32, ptr %6, i64 %4707
  %4719 = load i32, ptr %4718, align 4, !tbaa !5
  %4720 = add nsw i32 %4719, %4717
  store i32 %4720, ptr %4718, align 4, !tbaa !5
  br label %4739

4721:                                             ; preds = %4697, %4714
  %4722 = phi i32 [ %4709, %4714 ], [ %4698, %4697 ]
  %4723 = phi ptr [ %4708, %4714 ], [ %4, %4697 ]
  %4724 = phi i64 [ %4707, %4714 ], [ 0, %4697 ]
  %4725 = add nsw i32 %4722, 1
  store i32 %4725, ptr %4723, align 4, !tbaa !5
  %4726 = getelementptr inbounds i32, ptr %7, i64 %4724
  %4727 = load i32, ptr %4726, align 4, !tbaa !5
  %4728 = getelementptr inbounds i32, ptr %6, i64 %4724
  br label %4739

4729:                                             ; preds = %4706
  %4730 = icmp eq i32 %4709, %4712
  br i1 %4730, label %4731, label %4737

4731:                                             ; preds = %4729
  store i32 0, ptr %4708, align 4, !tbaa !5
  %4732 = getelementptr inbounds i32, ptr %8, i64 %4707
  %4733 = load i32, ptr %4732, align 4, !tbaa !5
  %4734 = getelementptr inbounds i32, ptr %6, i64 %4707
  store i32 %4733, ptr %4734, align 4, !tbaa !5
  %4735 = add nuw nsw i64 %4707, 1
  %4736 = icmp eq i64 %4735, %4610
  br i1 %4736, label %4744, label %4706, !llvm.loop !1097

4737:                                             ; preds = %4702, %4729
  store float %4694, ptr %4280, align 4, !tbaa !162
  %4738 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

4739:                                             ; preds = %4715, %4721
  %4740 = phi ptr [ %4728, %4721 ], [ %4708, %4715 ]
  %4741 = phi i32 [ %4727, %4721 ], [ 1, %4715 ]
  %4742 = load i32, ptr %4740, align 4, !tbaa !5
  %4743 = add nsw i32 %4742, %4741
  store i32 %4743, ptr %4740, align 4, !tbaa !5
  br label %4744

4744:                                             ; preds = %4731, %4739, %4704, %4687
  %4745 = icmp eq i32 %4696, %5
  br i1 %4745, label %5490, label %4613, !llvm.loop !1098

4746:                                             ; preds = %4596, %4882
  %4747 = phi float [ 0.000000e+00, %4596 ], [ %4830, %4882 ]
  %4748 = phi i32 [ 0, %4596 ], [ %4831, %4882 ]
  %4749 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4597, label %4750, label %4819

4750:                                             ; preds = %4746, %4809
  %4751 = phi i32 [ %4818, %4809 ], [ 0, %4746 ]
  %4752 = phi i64 [ %4760, %4809 ], [ %4601, %4746 ]
  %4753 = phi i64 [ %4817, %4809 ], [ %4600, %4746 ]
  %4754 = phi i32 [ %4815, %4809 ], [ %4749, %4746 ]
  %4755 = sub i32 %4599, %4751
  %4756 = tail call i32 @llvm.smin.i32(i32 %4755, i32 0)
  %4757 = sub i32 %4755, %4756
  %4758 = zext i32 %4757 to i64
  %4759 = add nuw nsw i64 %4758, 1
  %4760 = add nsw i64 %4752, -1
  %4761 = icmp ult i32 %4757, 31
  br i1 %4761, label %4797, label %4762

4762:                                             ; preds = %4750
  %4763 = and i64 %4759, 8589934560
  %4764 = sub i64 %4753, %4763
  br label %4765

4765:                                             ; preds = %4765, %4762
  %4766 = phi i64 [ 0, %4762 ], [ %4789, %4765 ]
  %4767 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4762 ], [ %4785, %4765 ]
  %4768 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4762 ], [ %4786, %4765 ]
  %4769 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4762 ], [ %4787, %4765 ]
  %4770 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4762 ], [ %4788, %4765 ]
  %4771 = sub i64 %4753, %4766
  %4772 = getelementptr inbounds i32, ptr %11, i64 %4771
  %4773 = getelementptr inbounds i32, ptr %4772, i64 -7
  %4774 = load <8 x i32>, ptr %4773, align 4, !tbaa !5
  %4775 = shufflevector <8 x i32> %4774, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4776 = getelementptr inbounds i32, ptr %4772, i64 -15
  %4777 = load <8 x i32>, ptr %4776, align 4, !tbaa !5
  %4778 = shufflevector <8 x i32> %4777, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4779 = getelementptr inbounds i32, ptr %4772, i64 -23
  %4780 = load <8 x i32>, ptr %4779, align 4, !tbaa !5
  %4781 = shufflevector <8 x i32> %4780, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4782 = getelementptr inbounds i32, ptr %4772, i64 -31
  %4783 = load <8 x i32>, ptr %4782, align 4, !tbaa !5
  %4784 = shufflevector <8 x i32> %4783, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4785 = mul <8 x i32> %4775, %4767
  %4786 = mul <8 x i32> %4778, %4768
  %4787 = mul <8 x i32> %4781, %4769
  %4788 = mul <8 x i32> %4784, %4770
  %4789 = add nuw i64 %4766, 32
  %4790 = icmp eq i64 %4789, %4763
  br i1 %4790, label %4791, label %4765, !llvm.loop !1099

4791:                                             ; preds = %4765
  %4792 = mul <8 x i32> %4786, %4785
  %4793 = mul <8 x i32> %4787, %4792
  %4794 = mul <8 x i32> %4788, %4793
  %4795 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4794)
  %4796 = icmp eq i64 %4759, %4763
  br i1 %4796, label %4809, label %4797

4797:                                             ; preds = %4750, %4791
  %4798 = phi i64 [ %4753, %4750 ], [ %4764, %4791 ]
  %4799 = phi i32 [ 1, %4750 ], [ %4795, %4791 ]
  br label %4800

4800:                                             ; preds = %4797, %4800
  %4801 = phi i64 [ %4806, %4800 ], [ %4798, %4797 ]
  %4802 = phi i32 [ %4805, %4800 ], [ %4799, %4797 ]
  %4803 = getelementptr inbounds i32, ptr %11, i64 %4801
  %4804 = load i32, ptr %4803, align 4, !tbaa !5
  %4805 = mul nsw i32 %4804, %4802
  %4806 = add nsw i64 %4801, -1
  %4807 = trunc i64 %4801 to i32
  %4808 = icmp sgt i32 %4807, 0
  br i1 %4808, label %4800, label %4809, !llvm.loop !1100

4809:                                             ; preds = %4800, %4791
  %4810 = phi i32 [ %4795, %4791 ], [ %4805, %4800 ]
  %4811 = and i64 %4760, 4294967295
  %4812 = getelementptr inbounds i32, ptr %6, i64 %4811
  %4813 = load i32, ptr %4812, align 4, !tbaa !5
  %4814 = mul nsw i32 %4813, %4810
  %4815 = add nsw i32 %4814, %4754
  %4816 = icmp sgt i64 %4752, 2
  %4817 = add nsw i64 %4753, -1
  %4818 = add i32 %4751, 1
  br i1 %4816, label %4750, label %4819, !llvm.loop !1101

4819:                                             ; preds = %4809, %4746
  %4820 = phi i32 [ %4749, %4746 ], [ %4815, %4809 ]
  %4821 = icmp slt i32 %4820, %5
  br i1 %4821, label %4824, label %4822

4822:                                             ; preds = %4819
  %4823 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

4824:                                             ; preds = %4819
  %4825 = sext i32 %4820 to i64
  %4826 = getelementptr inbounds double, ptr %4278, i64 %4825
  %4827 = load double, ptr %4826, align 8, !tbaa !18
  %4828 = fptrunc double %4827 to float
  %4829 = fmul fast float %4828, %4828
  %4830 = fadd fast float %4829, %4747
  store float %4830, ptr %4280, align 4, !tbaa !162
  %4831 = add nuw nsw i32 %4748, 1
  br i1 %4598, label %4832, label %4882

4832:                                             ; preds = %4824
  %4833 = load i32, ptr %4, align 4, !tbaa !5
  %4834 = load i32, ptr %12, align 4, !tbaa !5
  %4835 = add nsw i32 %4834, -1
  %4836 = icmp slt i32 %4833, %4835
  br i1 %4836, label %4859, label %4837

4837:                                             ; preds = %4832
  %4838 = icmp eq i32 %4833, %4835
  br i1 %4838, label %4839, label %4875

4839:                                             ; preds = %4837
  store i32 0, ptr %4, align 4, !tbaa !5
  %4840 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4840, ptr %6, align 4, !tbaa !5
  br i1 %4603, label %4882, label %4841

4841:                                             ; preds = %4839, %4869
  %4842 = phi i64 [ %4873, %4869 ], [ 1, %4839 ]
  %4843 = getelementptr inbounds i32, ptr %4, i64 %4842
  %4844 = load i32, ptr %4843, align 4, !tbaa !5
  %4845 = getelementptr inbounds i32, ptr %12, i64 %4842
  %4846 = load i32, ptr %4845, align 4, !tbaa !5
  %4847 = add nsw i32 %4846, -1
  %4848 = icmp slt i32 %4844, %4847
  br i1 %4848, label %4849, label %4867

4849:                                             ; preds = %4841
  br i1 %4836, label %4859, label %4850

4850:                                             ; preds = %4849
  %4851 = shl i64 %4842, 32
  %4852 = add i64 %4851, -4294967296
  %4853 = ashr exact i64 %4852, 32
  %4854 = getelementptr inbounds i32, ptr %7, i64 %4853
  %4855 = load i32, ptr %4854, align 4, !tbaa !5
  %4856 = getelementptr inbounds i32, ptr %6, i64 %4842
  %4857 = load i32, ptr %4856, align 4, !tbaa !5
  %4858 = add nsw i32 %4857, %4855
  store i32 %4858, ptr %4856, align 4, !tbaa !5
  br label %4877

4859:                                             ; preds = %4832, %4849
  %4860 = phi i32 [ %4844, %4849 ], [ %4833, %4832 ]
  %4861 = phi ptr [ %4843, %4849 ], [ %4, %4832 ]
  %4862 = phi i64 [ %4842, %4849 ], [ 0, %4832 ]
  %4863 = add nsw i32 %4860, 1
  store i32 %4863, ptr %4861, align 4, !tbaa !5
  %4864 = getelementptr inbounds i32, ptr %7, i64 %4862
  %4865 = load i32, ptr %4864, align 4, !tbaa !5
  %4866 = getelementptr inbounds i32, ptr %6, i64 %4862
  br label %4877

4867:                                             ; preds = %4841
  %4868 = icmp eq i32 %4844, %4847
  br i1 %4868, label %4869, label %4875

4869:                                             ; preds = %4867
  store i32 0, ptr %4843, align 4, !tbaa !5
  %4870 = getelementptr inbounds i32, ptr %8, i64 %4842
  %4871 = load i32, ptr %4870, align 4, !tbaa !5
  %4872 = getelementptr inbounds i32, ptr %6, i64 %4842
  store i32 %4871, ptr %4872, align 4, !tbaa !5
  %4873 = add nuw nsw i64 %4842, 1
  %4874 = icmp eq i64 %4873, %4601
  br i1 %4874, label %4882, label %4841, !llvm.loop !1102

4875:                                             ; preds = %4837, %4867
  %4876 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

4877:                                             ; preds = %4850, %4859
  %4878 = phi ptr [ %4866, %4859 ], [ %4843, %4850 ]
  %4879 = phi i32 [ %4865, %4859 ], [ 1, %4850 ]
  %4880 = load i32, ptr %4878, align 4, !tbaa !5
  %4881 = add nsw i32 %4880, %4879
  store i32 %4881, ptr %4878, align 4, !tbaa !5
  br label %4882

4882:                                             ; preds = %4869, %4877, %4839, %4824
  %4883 = icmp eq i32 %4831, %5
  br i1 %4883, label %5491, label %4746, !llvm.loop !1103

4884:                                             ; preds = %4286
  %4885 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

4886:                                             ; preds = %18
  %4887 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4888 = load ptr, ptr %4887, align 8, !tbaa !9
  %4889 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4890 = load ptr, ptr %4889, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4890, align 8, !tbaa !18
  %4891 = icmp eq i32 %13, 0
  br i1 %4891, label %4892, label %4895

4892:                                             ; preds = %4886
  %4893 = load double, ptr %4888, align 8, !tbaa !18
  %4894 = fmul fast double %4893, %4893
  store double %4894, ptr %4890, align 8, !tbaa !18
  br label %5491

4895:                                             ; preds = %4886
  switch i32 %1, label %5483 [
    i32 1, label %4896
    i32 0, label %5191
  ]

4896:                                             ; preds = %4895
  %4897 = getelementptr inbounds i32, ptr %3, i64 %19
  %4898 = load i32, ptr %4897, align 4, !tbaa !5
  %4899 = icmp eq i32 %4898, 0
  %4900 = icmp sgt i32 %5, 0
  br i1 %4899, label %4910, label %4901

4901:                                             ; preds = %4896
  br i1 %4900, label %4902, label %5491

4902:                                             ; preds = %4901
  %4903 = icmp sgt i32 %13, 1
  %4904 = icmp sgt i32 %13, 0
  %4905 = add i32 %13, -2
  %4906 = zext i32 %4905 to i64
  %4907 = zext i32 %13 to i64
  %4908 = add nuw i32 %5, 1
  %4909 = icmp eq i32 %13, 1
  br label %5054

4910:                                             ; preds = %4896
  br i1 %4900, label %4911, label %5491

4911:                                             ; preds = %4910
  %4912 = icmp sgt i32 %13, 1
  %4913 = icmp sgt i32 %13, 0
  %4914 = add i32 %13, -2
  %4915 = zext i32 %4914 to i64
  %4916 = zext i32 %13 to i64
  %4917 = add nuw i32 %5, 1
  %4918 = icmp eq i32 %13, 1
  br label %4919

4919:                                             ; preds = %4911, %5052
  %4920 = phi double [ 0.000000e+00, %4911 ], [ %5002, %5052 ]
  %4921 = phi i32 [ 0, %4911 ], [ %5004, %5052 ]
  %4922 = phi double [ 0.000000e+00, %4911 ], [ %5003, %5052 ]
  %4923 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4912, label %4924, label %4993

4924:                                             ; preds = %4919, %4983
  %4925 = phi i32 [ %4992, %4983 ], [ 0, %4919 ]
  %4926 = phi i64 [ %4934, %4983 ], [ %4916, %4919 ]
  %4927 = phi i64 [ %4991, %4983 ], [ %4915, %4919 ]
  %4928 = phi i32 [ %4989, %4983 ], [ %4923, %4919 ]
  %4929 = sub i32 %4914, %4925
  %4930 = tail call i32 @llvm.smin.i32(i32 %4929, i32 0)
  %4931 = sub i32 %4929, %4930
  %4932 = zext i32 %4931 to i64
  %4933 = add nuw nsw i64 %4932, 1
  %4934 = add nsw i64 %4926, -1
  %4935 = icmp ult i32 %4931, 31
  br i1 %4935, label %4971, label %4936

4936:                                             ; preds = %4924
  %4937 = and i64 %4933, 8589934560
  %4938 = sub i64 %4927, %4937
  br label %4939

4939:                                             ; preds = %4939, %4936
  %4940 = phi i64 [ 0, %4936 ], [ %4963, %4939 ]
  %4941 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4936 ], [ %4959, %4939 ]
  %4942 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4936 ], [ %4960, %4939 ]
  %4943 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4936 ], [ %4961, %4939 ]
  %4944 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4936 ], [ %4962, %4939 ]
  %4945 = sub i64 %4927, %4940
  %4946 = getelementptr inbounds i32, ptr %9, i64 %4945
  %4947 = getelementptr inbounds i32, ptr %4946, i64 -7
  %4948 = load <8 x i32>, ptr %4947, align 4, !tbaa !5
  %4949 = shufflevector <8 x i32> %4948, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4950 = getelementptr inbounds i32, ptr %4946, i64 -15
  %4951 = load <8 x i32>, ptr %4950, align 4, !tbaa !5
  %4952 = shufflevector <8 x i32> %4951, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4953 = getelementptr inbounds i32, ptr %4946, i64 -23
  %4954 = load <8 x i32>, ptr %4953, align 4, !tbaa !5
  %4955 = shufflevector <8 x i32> %4954, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4956 = getelementptr inbounds i32, ptr %4946, i64 -31
  %4957 = load <8 x i32>, ptr %4956, align 4, !tbaa !5
  %4958 = shufflevector <8 x i32> %4957, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4959 = mul <8 x i32> %4949, %4941
  %4960 = mul <8 x i32> %4952, %4942
  %4961 = mul <8 x i32> %4955, %4943
  %4962 = mul <8 x i32> %4958, %4944
  %4963 = add nuw i64 %4940, 32
  %4964 = icmp eq i64 %4963, %4937
  br i1 %4964, label %4965, label %4939, !llvm.loop !1104

4965:                                             ; preds = %4939
  %4966 = mul <8 x i32> %4960, %4959
  %4967 = mul <8 x i32> %4961, %4966
  %4968 = mul <8 x i32> %4962, %4967
  %4969 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4968)
  %4970 = icmp eq i64 %4933, %4937
  br i1 %4970, label %4983, label %4971

4971:                                             ; preds = %4924, %4965
  %4972 = phi i64 [ %4927, %4924 ], [ %4938, %4965 ]
  %4973 = phi i32 [ 1, %4924 ], [ %4969, %4965 ]
  br label %4974

4974:                                             ; preds = %4971, %4974
  %4975 = phi i64 [ %4980, %4974 ], [ %4972, %4971 ]
  %4976 = phi i32 [ %4979, %4974 ], [ %4973, %4971 ]
  %4977 = getelementptr inbounds i32, ptr %9, i64 %4975
  %4978 = load i32, ptr %4977, align 4, !tbaa !5
  %4979 = mul nsw i32 %4978, %4976
  %4980 = add nsw i64 %4975, -1
  %4981 = trunc i64 %4975 to i32
  %4982 = icmp sgt i32 %4981, 0
  br i1 %4982, label %4974, label %4983, !llvm.loop !1105

4983:                                             ; preds = %4974, %4965
  %4984 = phi i32 [ %4969, %4965 ], [ %4979, %4974 ]
  %4985 = and i64 %4934, 4294967295
  %4986 = getelementptr inbounds i32, ptr %6, i64 %4985
  %4987 = load i32, ptr %4986, align 4, !tbaa !5
  %4988 = mul nsw i32 %4987, %4984
  %4989 = add nsw i32 %4988, %4928
  %4990 = icmp sgt i64 %4926, 2
  %4991 = add nsw i64 %4927, -1
  %4992 = add i32 %4925, 1
  br i1 %4990, label %4924, label %4993, !llvm.loop !1106

4993:                                             ; preds = %4983, %4919
  %4994 = phi i32 [ %4923, %4919 ], [ %4989, %4983 ]
  %4995 = sext i32 %4994 to i64
  %4996 = getelementptr inbounds double, ptr %2, i64 %4995
  %4997 = load double, ptr %4996, align 8, !tbaa !18
  %4998 = getelementptr inbounds double, ptr %4888, i64 %4995
  %4999 = load double, ptr %4998, align 8, !tbaa !18
  %5000 = fmul fast double %4999, %4997
  %5001 = fmul fast double %5000, %5000
  %5002 = fadd fast double %5001, %4920
  store double %5002, ptr %4890, align 8, !tbaa !18
  %5003 = fadd fast double %4997, %4922
  %5004 = add nuw nsw i32 %4921, 1
  br i1 %4913, label %5005, label %5052

5005:                                             ; preds = %4993
  %5006 = load i32, ptr %4, align 4, !tbaa !5
  %5007 = load i32, ptr %12, align 4, !tbaa !5
  %5008 = add nsw i32 %5007, -1
  %5009 = icmp slt i32 %5006, %5008
  br i1 %5009, label %5029, label %5010

5010:                                             ; preds = %5005
  %5011 = icmp eq i32 %5006, %5008
  br i1 %5011, label %5012, label %5045

5012:                                             ; preds = %5010
  store i32 0, ptr %4, align 4, !tbaa !5
  %5013 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5013, ptr %6, align 4, !tbaa !5
  br i1 %4918, label %5052, label %5014

5014:                                             ; preds = %5012, %5039
  %5015 = phi i64 [ %5043, %5039 ], [ 1, %5012 ]
  %5016 = getelementptr inbounds i32, ptr %4, i64 %5015
  %5017 = load i32, ptr %5016, align 4, !tbaa !5
  %5018 = getelementptr inbounds i32, ptr %12, i64 %5015
  %5019 = load i32, ptr %5018, align 4, !tbaa !5
  %5020 = add nsw i32 %5019, -1
  %5021 = icmp slt i32 %5017, %5020
  br i1 %5021, label %5022, label %5037

5022:                                             ; preds = %5014
  br i1 %5009, label %5029, label %5023

5023:                                             ; preds = %5022
  %5024 = getelementptr inbounds i32, ptr %7, i64 %5015
  %5025 = load i32, ptr %5024, align 4, !tbaa !5
  %5026 = getelementptr inbounds i32, ptr %6, i64 %5015
  %5027 = load i32, ptr %5026, align 4, !tbaa !5
  %5028 = add nsw i32 %5027, %5025
  store i32 %5028, ptr %5026, align 4, !tbaa !5
  br label %5047

5029:                                             ; preds = %5005, %5022
  %5030 = phi i32 [ %5017, %5022 ], [ %5006, %5005 ]
  %5031 = phi ptr [ %5016, %5022 ], [ %4, %5005 ]
  %5032 = phi i64 [ %5015, %5022 ], [ 0, %5005 ]
  %5033 = add nsw i32 %5030, 1
  store i32 %5033, ptr %5031, align 4, !tbaa !5
  %5034 = getelementptr inbounds i32, ptr %7, i64 %5032
  %5035 = load i32, ptr %5034, align 4, !tbaa !5
  %5036 = getelementptr inbounds i32, ptr %6, i64 %5032
  br label %5047

5037:                                             ; preds = %5014
  %5038 = icmp eq i32 %5017, %5020
  br i1 %5038, label %5039, label %5045

5039:                                             ; preds = %5037
  store i32 0, ptr %5016, align 4, !tbaa !5
  %5040 = getelementptr inbounds i32, ptr %8, i64 %5015
  %5041 = load i32, ptr %5040, align 4, !tbaa !5
  %5042 = getelementptr inbounds i32, ptr %6, i64 %5015
  store i32 %5041, ptr %5042, align 4, !tbaa !5
  %5043 = add nuw nsw i64 %5015, 1
  %5044 = icmp eq i64 %5043, %4916
  br i1 %5044, label %5052, label %5014, !llvm.loop !1107

5045:                                             ; preds = %5010, %5037
  %5046 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

5047:                                             ; preds = %5023, %5029
  %5048 = phi ptr [ %5036, %5029 ], [ %5016, %5023 ]
  %5049 = phi i32 [ %5035, %5029 ], [ 1, %5023 ]
  %5050 = load i32, ptr %5048, align 4, !tbaa !5
  %5051 = add nsw i32 %5050, %5049
  store i32 %5051, ptr %5048, align 4, !tbaa !5
  br label %5052

5052:                                             ; preds = %5039, %5047, %5012, %4993
  %5053 = icmp eq i32 %5004, %5
  br i1 %5053, label %5491, label %4919, !llvm.loop !1108

5054:                                             ; preds = %4902, %5189
  %5055 = phi double [ 0.000000e+00, %4902 ], [ %5137, %5189 ]
  %5056 = phi i32 [ 0, %4902 ], [ %5138, %5189 ]
  %5057 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4903, label %5058, label %5127

5058:                                             ; preds = %5054, %5117
  %5059 = phi i32 [ %5126, %5117 ], [ 0, %5054 ]
  %5060 = phi i64 [ %5068, %5117 ], [ %4907, %5054 ]
  %5061 = phi i64 [ %5125, %5117 ], [ %4906, %5054 ]
  %5062 = phi i32 [ %5123, %5117 ], [ %5057, %5054 ]
  %5063 = sub i32 %4905, %5059
  %5064 = tail call i32 @llvm.smin.i32(i32 %5063, i32 0)
  %5065 = sub i32 %5063, %5064
  %5066 = zext i32 %5065 to i64
  %5067 = add nuw nsw i64 %5066, 1
  %5068 = add nsw i64 %5060, -1
  %5069 = icmp ult i32 %5065, 31
  br i1 %5069, label %5105, label %5070

5070:                                             ; preds = %5058
  %5071 = and i64 %5067, 8589934560
  %5072 = sub i64 %5061, %5071
  br label %5073

5073:                                             ; preds = %5073, %5070
  %5074 = phi i64 [ 0, %5070 ], [ %5097, %5073 ]
  %5075 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5070 ], [ %5093, %5073 ]
  %5076 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5070 ], [ %5094, %5073 ]
  %5077 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5070 ], [ %5095, %5073 ]
  %5078 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5070 ], [ %5096, %5073 ]
  %5079 = sub i64 %5061, %5074
  %5080 = getelementptr inbounds i32, ptr %11, i64 %5079
  %5081 = getelementptr inbounds i32, ptr %5080, i64 -7
  %5082 = load <8 x i32>, ptr %5081, align 4, !tbaa !5
  %5083 = shufflevector <8 x i32> %5082, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5084 = getelementptr inbounds i32, ptr %5080, i64 -15
  %5085 = load <8 x i32>, ptr %5084, align 4, !tbaa !5
  %5086 = shufflevector <8 x i32> %5085, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5087 = getelementptr inbounds i32, ptr %5080, i64 -23
  %5088 = load <8 x i32>, ptr %5087, align 4, !tbaa !5
  %5089 = shufflevector <8 x i32> %5088, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5090 = getelementptr inbounds i32, ptr %5080, i64 -31
  %5091 = load <8 x i32>, ptr %5090, align 4, !tbaa !5
  %5092 = shufflevector <8 x i32> %5091, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5093 = mul <8 x i32> %5083, %5075
  %5094 = mul <8 x i32> %5086, %5076
  %5095 = mul <8 x i32> %5089, %5077
  %5096 = mul <8 x i32> %5092, %5078
  %5097 = add nuw i64 %5074, 32
  %5098 = icmp eq i64 %5097, %5071
  br i1 %5098, label %5099, label %5073, !llvm.loop !1109

5099:                                             ; preds = %5073
  %5100 = mul <8 x i32> %5094, %5093
  %5101 = mul <8 x i32> %5095, %5100
  %5102 = mul <8 x i32> %5096, %5101
  %5103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5102)
  %5104 = icmp eq i64 %5067, %5071
  br i1 %5104, label %5117, label %5105

5105:                                             ; preds = %5058, %5099
  %5106 = phi i64 [ %5061, %5058 ], [ %5072, %5099 ]
  %5107 = phi i32 [ 1, %5058 ], [ %5103, %5099 ]
  br label %5108

5108:                                             ; preds = %5105, %5108
  %5109 = phi i64 [ %5114, %5108 ], [ %5106, %5105 ]
  %5110 = phi i32 [ %5113, %5108 ], [ %5107, %5105 ]
  %5111 = getelementptr inbounds i32, ptr %11, i64 %5109
  %5112 = load i32, ptr %5111, align 4, !tbaa !5
  %5113 = mul nsw i32 %5112, %5110
  %5114 = add nsw i64 %5109, -1
  %5115 = trunc i64 %5109 to i32
  %5116 = icmp sgt i32 %5115, 0
  br i1 %5116, label %5108, label %5117, !llvm.loop !1110

5117:                                             ; preds = %5108, %5099
  %5118 = phi i32 [ %5103, %5099 ], [ %5113, %5108 ]
  %5119 = and i64 %5068, 4294967295
  %5120 = getelementptr inbounds i32, ptr %6, i64 %5119
  %5121 = load i32, ptr %5120, align 4, !tbaa !5
  %5122 = mul nsw i32 %5121, %5118
  %5123 = add nsw i32 %5122, %5062
  %5124 = icmp sgt i64 %5060, 2
  %5125 = add nsw i64 %5061, -1
  %5126 = add i32 %5059, 1
  br i1 %5124, label %5058, label %5127, !llvm.loop !1111

5127:                                             ; preds = %5117, %5054
  %5128 = phi i32 [ %5057, %5054 ], [ %5123, %5117 ]
  %5129 = icmp slt i32 %5128, %5
  br i1 %5129, label %5132, label %5130

5130:                                             ; preds = %5127
  %5131 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

5132:                                             ; preds = %5127
  %5133 = sext i32 %5128 to i64
  %5134 = getelementptr inbounds double, ptr %4888, i64 %5133
  %5135 = load double, ptr %5134, align 8, !tbaa !18
  %5136 = fmul fast double %5135, %5135
  %5137 = fadd fast double %5055, %5136
  store double %5137, ptr %4890, align 8, !tbaa !18
  %5138 = add nuw nsw i32 %5056, 1
  br i1 %4904, label %5139, label %5189

5139:                                             ; preds = %5132
  %5140 = load i32, ptr %4, align 4, !tbaa !5
  %5141 = load i32, ptr %12, align 4, !tbaa !5
  %5142 = add nsw i32 %5141, -1
  %5143 = icmp slt i32 %5140, %5142
  br i1 %5143, label %5166, label %5144

5144:                                             ; preds = %5139
  %5145 = icmp eq i32 %5140, %5142
  br i1 %5145, label %5146, label %5182

5146:                                             ; preds = %5144
  store i32 0, ptr %4, align 4, !tbaa !5
  %5147 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5147, ptr %6, align 4, !tbaa !5
  br i1 %4909, label %5189, label %5148

5148:                                             ; preds = %5146, %5176
  %5149 = phi i64 [ %5180, %5176 ], [ 1, %5146 ]
  %5150 = getelementptr inbounds i32, ptr %4, i64 %5149
  %5151 = load i32, ptr %5150, align 4, !tbaa !5
  %5152 = getelementptr inbounds i32, ptr %12, i64 %5149
  %5153 = load i32, ptr %5152, align 4, !tbaa !5
  %5154 = add nsw i32 %5153, -1
  %5155 = icmp slt i32 %5151, %5154
  br i1 %5155, label %5156, label %5174

5156:                                             ; preds = %5148
  br i1 %5143, label %5166, label %5157

5157:                                             ; preds = %5156
  %5158 = shl i64 %5149, 32
  %5159 = add i64 %5158, -4294967296
  %5160 = ashr exact i64 %5159, 32
  %5161 = getelementptr inbounds i32, ptr %7, i64 %5160
  %5162 = load i32, ptr %5161, align 4, !tbaa !5
  %5163 = getelementptr inbounds i32, ptr %6, i64 %5149
  %5164 = load i32, ptr %5163, align 4, !tbaa !5
  %5165 = add nsw i32 %5164, %5162
  store i32 %5165, ptr %5163, align 4, !tbaa !5
  br label %5184

5166:                                             ; preds = %5139, %5156
  %5167 = phi i32 [ %5151, %5156 ], [ %5140, %5139 ]
  %5168 = phi ptr [ %5150, %5156 ], [ %4, %5139 ]
  %5169 = phi i64 [ %5149, %5156 ], [ 0, %5139 ]
  %5170 = add nsw i32 %5167, 1
  store i32 %5170, ptr %5168, align 4, !tbaa !5
  %5171 = getelementptr inbounds i32, ptr %7, i64 %5169
  %5172 = load i32, ptr %5171, align 4, !tbaa !5
  %5173 = getelementptr inbounds i32, ptr %6, i64 %5169
  br label %5184

5174:                                             ; preds = %5148
  %5175 = icmp eq i32 %5151, %5154
  br i1 %5175, label %5176, label %5182

5176:                                             ; preds = %5174
  store i32 0, ptr %5150, align 4, !tbaa !5
  %5177 = getelementptr inbounds i32, ptr %8, i64 %5149
  %5178 = load i32, ptr %5177, align 4, !tbaa !5
  %5179 = getelementptr inbounds i32, ptr %6, i64 %5149
  store i32 %5178, ptr %5179, align 4, !tbaa !5
  %5180 = add nuw nsw i64 %5149, 1
  %5181 = icmp eq i64 %5180, %4907
  br i1 %5181, label %5189, label %5148, !llvm.loop !1112

5182:                                             ; preds = %5144, %5174
  %5183 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

5184:                                             ; preds = %5157, %5166
  %5185 = phi ptr [ %5173, %5166 ], [ %5150, %5157 ]
  %5186 = phi i32 [ %5172, %5166 ], [ 1, %5157 ]
  %5187 = load i32, ptr %5185, align 4, !tbaa !5
  %5188 = add nsw i32 %5187, %5186
  store i32 %5188, ptr %5185, align 4, !tbaa !5
  br label %5189

5189:                                             ; preds = %5176, %5184, %5146, %5132
  %5190 = icmp eq i32 %5138, %5
  br i1 %5190, label %5491, label %5054, !llvm.loop !1113

5191:                                             ; preds = %4895
  %5192 = getelementptr inbounds i32, ptr %3, i64 %19
  %5193 = load i32, ptr %5192, align 4, !tbaa !5
  %5194 = icmp eq i32 %5193, 0
  %5195 = icmp sgt i32 %5, 0
  br i1 %5194, label %5205, label %5196

5196:                                             ; preds = %5191
  br i1 %5195, label %5197, label %5491

5197:                                             ; preds = %5196
  %5198 = icmp sgt i32 %13, 1
  %5199 = icmp sgt i32 %13, 0
  %5200 = add i32 %13, -2
  %5201 = zext i32 %5200 to i64
  %5202 = zext i32 %13 to i64
  %5203 = add nuw i32 %5, 1
  %5204 = icmp eq i32 %13, 1
  br label %5346

5205:                                             ; preds = %5191
  br i1 %5195, label %5206, label %5491

5206:                                             ; preds = %5205
  %5207 = icmp sgt i32 %13, 1
  %5208 = icmp sgt i32 %13, 0
  %5209 = add i32 %13, -2
  %5210 = zext i32 %5209 to i64
  %5211 = zext i32 %13 to i64
  %5212 = add nuw i32 %5, 1
  %5213 = icmp eq i32 %13, 1
  br label %5214

5214:                                             ; preds = %5206, %5344
  %5215 = phi double [ 0.000000e+00, %5206 ], [ %5294, %5344 ]
  %5216 = phi i32 [ 0, %5206 ], [ %5296, %5344 ]
  %5217 = phi double [ 0.000000e+00, %5206 ], [ %5295, %5344 ]
  %5218 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5207, label %5219, label %5288

5219:                                             ; preds = %5214, %5278
  %5220 = phi i32 [ %5287, %5278 ], [ 0, %5214 ]
  %5221 = phi i64 [ %5229, %5278 ], [ %5211, %5214 ]
  %5222 = phi i64 [ %5286, %5278 ], [ %5210, %5214 ]
  %5223 = phi i32 [ %5284, %5278 ], [ %5218, %5214 ]
  %5224 = sub i32 %5209, %5220
  %5225 = tail call i32 @llvm.smin.i32(i32 %5224, i32 0)
  %5226 = sub i32 %5224, %5225
  %5227 = zext i32 %5226 to i64
  %5228 = add nuw nsw i64 %5227, 1
  %5229 = add nsw i64 %5221, -1
  %5230 = icmp ult i32 %5226, 31
  br i1 %5230, label %5266, label %5231

5231:                                             ; preds = %5219
  %5232 = and i64 %5228, 8589934560
  %5233 = sub i64 %5222, %5232
  br label %5234

5234:                                             ; preds = %5234, %5231
  %5235 = phi i64 [ 0, %5231 ], [ %5258, %5234 ]
  %5236 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5231 ], [ %5254, %5234 ]
  %5237 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5231 ], [ %5255, %5234 ]
  %5238 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5231 ], [ %5256, %5234 ]
  %5239 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5231 ], [ %5257, %5234 ]
  %5240 = sub i64 %5222, %5235
  %5241 = getelementptr inbounds i32, ptr %9, i64 %5240
  %5242 = getelementptr inbounds i32, ptr %5241, i64 -7
  %5243 = load <8 x i32>, ptr %5242, align 4, !tbaa !5
  %5244 = shufflevector <8 x i32> %5243, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5245 = getelementptr inbounds i32, ptr %5241, i64 -15
  %5246 = load <8 x i32>, ptr %5245, align 4, !tbaa !5
  %5247 = shufflevector <8 x i32> %5246, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5248 = getelementptr inbounds i32, ptr %5241, i64 -23
  %5249 = load <8 x i32>, ptr %5248, align 4, !tbaa !5
  %5250 = shufflevector <8 x i32> %5249, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5251 = getelementptr inbounds i32, ptr %5241, i64 -31
  %5252 = load <8 x i32>, ptr %5251, align 4, !tbaa !5
  %5253 = shufflevector <8 x i32> %5252, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5254 = mul <8 x i32> %5244, %5236
  %5255 = mul <8 x i32> %5247, %5237
  %5256 = mul <8 x i32> %5250, %5238
  %5257 = mul <8 x i32> %5253, %5239
  %5258 = add nuw i64 %5235, 32
  %5259 = icmp eq i64 %5258, %5232
  br i1 %5259, label %5260, label %5234, !llvm.loop !1114

5260:                                             ; preds = %5234
  %5261 = mul <8 x i32> %5255, %5254
  %5262 = mul <8 x i32> %5256, %5261
  %5263 = mul <8 x i32> %5257, %5262
  %5264 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5263)
  %5265 = icmp eq i64 %5228, %5232
  br i1 %5265, label %5278, label %5266

5266:                                             ; preds = %5219, %5260
  %5267 = phi i64 [ %5222, %5219 ], [ %5233, %5260 ]
  %5268 = phi i32 [ 1, %5219 ], [ %5264, %5260 ]
  br label %5269

5269:                                             ; preds = %5266, %5269
  %5270 = phi i64 [ %5275, %5269 ], [ %5267, %5266 ]
  %5271 = phi i32 [ %5274, %5269 ], [ %5268, %5266 ]
  %5272 = getelementptr inbounds i32, ptr %9, i64 %5270
  %5273 = load i32, ptr %5272, align 4, !tbaa !5
  %5274 = mul nsw i32 %5273, %5271
  %5275 = add nsw i64 %5270, -1
  %5276 = trunc i64 %5270 to i32
  %5277 = icmp sgt i32 %5276, 0
  br i1 %5277, label %5269, label %5278, !llvm.loop !1115

5278:                                             ; preds = %5269, %5260
  %5279 = phi i32 [ %5264, %5260 ], [ %5274, %5269 ]
  %5280 = and i64 %5229, 4294967295
  %5281 = getelementptr inbounds i32, ptr %6, i64 %5280
  %5282 = load i32, ptr %5281, align 4, !tbaa !5
  %5283 = mul nsw i32 %5282, %5279
  %5284 = add nsw i32 %5283, %5223
  %5285 = icmp sgt i64 %5221, 2
  %5286 = add nsw i64 %5222, -1
  %5287 = add i32 %5220, 1
  br i1 %5285, label %5219, label %5288, !llvm.loop !1116

5288:                                             ; preds = %5278, %5214
  %5289 = phi i32 [ %5218, %5214 ], [ %5284, %5278 ]
  %5290 = sext i32 %5289 to i64
  %5291 = getelementptr inbounds double, ptr %4888, i64 %5290
  %5292 = load double, ptr %5291, align 8, !tbaa !18
  %5293 = fmul fast double %5292, %5292
  %5294 = fadd fast double %5215, %5293
  store double %5294, ptr %4890, align 8, !tbaa !18
  %5295 = fadd fast double %5217, 1.000000e+00
  %5296 = add nuw nsw i32 %5216, 1
  br i1 %5208, label %5297, label %5344

5297:                                             ; preds = %5288
  %5298 = load i32, ptr %4, align 4, !tbaa !5
  %5299 = load i32, ptr %12, align 4, !tbaa !5
  %5300 = add nsw i32 %5299, -1
  %5301 = icmp slt i32 %5298, %5300
  br i1 %5301, label %5321, label %5302

5302:                                             ; preds = %5297
  %5303 = icmp eq i32 %5298, %5300
  br i1 %5303, label %5304, label %5337

5304:                                             ; preds = %5302
  store i32 0, ptr %4, align 4, !tbaa !5
  %5305 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5305, ptr %6, align 4, !tbaa !5
  br i1 %5213, label %5344, label %5306

5306:                                             ; preds = %5304, %5331
  %5307 = phi i64 [ %5335, %5331 ], [ 1, %5304 ]
  %5308 = getelementptr inbounds i32, ptr %4, i64 %5307
  %5309 = load i32, ptr %5308, align 4, !tbaa !5
  %5310 = getelementptr inbounds i32, ptr %12, i64 %5307
  %5311 = load i32, ptr %5310, align 4, !tbaa !5
  %5312 = add nsw i32 %5311, -1
  %5313 = icmp slt i32 %5309, %5312
  br i1 %5313, label %5314, label %5329

5314:                                             ; preds = %5306
  br i1 %5301, label %5321, label %5315

5315:                                             ; preds = %5314
  %5316 = getelementptr inbounds i32, ptr %7, i64 %5307
  %5317 = load i32, ptr %5316, align 4, !tbaa !5
  %5318 = getelementptr inbounds i32, ptr %6, i64 %5307
  %5319 = load i32, ptr %5318, align 4, !tbaa !5
  %5320 = add nsw i32 %5319, %5317
  store i32 %5320, ptr %5318, align 4, !tbaa !5
  br label %5339

5321:                                             ; preds = %5297, %5314
  %5322 = phi i32 [ %5309, %5314 ], [ %5298, %5297 ]
  %5323 = phi ptr [ %5308, %5314 ], [ %4, %5297 ]
  %5324 = phi i64 [ %5307, %5314 ], [ 0, %5297 ]
  %5325 = add nsw i32 %5322, 1
  store i32 %5325, ptr %5323, align 4, !tbaa !5
  %5326 = getelementptr inbounds i32, ptr %7, i64 %5324
  %5327 = load i32, ptr %5326, align 4, !tbaa !5
  %5328 = getelementptr inbounds i32, ptr %6, i64 %5324
  br label %5339

5329:                                             ; preds = %5306
  %5330 = icmp eq i32 %5309, %5312
  br i1 %5330, label %5331, label %5337

5331:                                             ; preds = %5329
  store i32 0, ptr %5308, align 4, !tbaa !5
  %5332 = getelementptr inbounds i32, ptr %8, i64 %5307
  %5333 = load i32, ptr %5332, align 4, !tbaa !5
  %5334 = getelementptr inbounds i32, ptr %6, i64 %5307
  store i32 %5333, ptr %5334, align 4, !tbaa !5
  %5335 = add nuw nsw i64 %5307, 1
  %5336 = icmp eq i64 %5335, %5211
  br i1 %5336, label %5344, label %5306, !llvm.loop !1117

5337:                                             ; preds = %5302, %5329
  %5338 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

5339:                                             ; preds = %5315, %5321
  %5340 = phi ptr [ %5328, %5321 ], [ %5308, %5315 ]
  %5341 = phi i32 [ %5327, %5321 ], [ 1, %5315 ]
  %5342 = load i32, ptr %5340, align 4, !tbaa !5
  %5343 = add nsw i32 %5342, %5341
  store i32 %5343, ptr %5340, align 4, !tbaa !5
  br label %5344

5344:                                             ; preds = %5331, %5339, %5304, %5288
  %5345 = icmp eq i32 %5296, %5
  br i1 %5345, label %5491, label %5214, !llvm.loop !1118

5346:                                             ; preds = %5197, %5481
  %5347 = phi double [ 0.000000e+00, %5197 ], [ %5429, %5481 ]
  %5348 = phi i32 [ 0, %5197 ], [ %5430, %5481 ]
  %5349 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5198, label %5350, label %5419

5350:                                             ; preds = %5346, %5409
  %5351 = phi i32 [ %5418, %5409 ], [ 0, %5346 ]
  %5352 = phi i64 [ %5360, %5409 ], [ %5202, %5346 ]
  %5353 = phi i64 [ %5417, %5409 ], [ %5201, %5346 ]
  %5354 = phi i32 [ %5415, %5409 ], [ %5349, %5346 ]
  %5355 = sub i32 %5200, %5351
  %5356 = tail call i32 @llvm.smin.i32(i32 %5355, i32 0)
  %5357 = sub i32 %5355, %5356
  %5358 = zext i32 %5357 to i64
  %5359 = add nuw nsw i64 %5358, 1
  %5360 = add nsw i64 %5352, -1
  %5361 = icmp ult i32 %5357, 31
  br i1 %5361, label %5397, label %5362

5362:                                             ; preds = %5350
  %5363 = and i64 %5359, 8589934560
  %5364 = sub i64 %5353, %5363
  br label %5365

5365:                                             ; preds = %5365, %5362
  %5366 = phi i64 [ 0, %5362 ], [ %5389, %5365 ]
  %5367 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5362 ], [ %5385, %5365 ]
  %5368 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5362 ], [ %5386, %5365 ]
  %5369 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5362 ], [ %5387, %5365 ]
  %5370 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5362 ], [ %5388, %5365 ]
  %5371 = sub i64 %5353, %5366
  %5372 = getelementptr inbounds i32, ptr %11, i64 %5371
  %5373 = getelementptr inbounds i32, ptr %5372, i64 -7
  %5374 = load <8 x i32>, ptr %5373, align 4, !tbaa !5
  %5375 = shufflevector <8 x i32> %5374, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5376 = getelementptr inbounds i32, ptr %5372, i64 -15
  %5377 = load <8 x i32>, ptr %5376, align 4, !tbaa !5
  %5378 = shufflevector <8 x i32> %5377, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5379 = getelementptr inbounds i32, ptr %5372, i64 -23
  %5380 = load <8 x i32>, ptr %5379, align 4, !tbaa !5
  %5381 = shufflevector <8 x i32> %5380, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5382 = getelementptr inbounds i32, ptr %5372, i64 -31
  %5383 = load <8 x i32>, ptr %5382, align 4, !tbaa !5
  %5384 = shufflevector <8 x i32> %5383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5385 = mul <8 x i32> %5375, %5367
  %5386 = mul <8 x i32> %5378, %5368
  %5387 = mul <8 x i32> %5381, %5369
  %5388 = mul <8 x i32> %5384, %5370
  %5389 = add nuw i64 %5366, 32
  %5390 = icmp eq i64 %5389, %5363
  br i1 %5390, label %5391, label %5365, !llvm.loop !1119

5391:                                             ; preds = %5365
  %5392 = mul <8 x i32> %5386, %5385
  %5393 = mul <8 x i32> %5387, %5392
  %5394 = mul <8 x i32> %5388, %5393
  %5395 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5394)
  %5396 = icmp eq i64 %5359, %5363
  br i1 %5396, label %5409, label %5397

5397:                                             ; preds = %5350, %5391
  %5398 = phi i64 [ %5353, %5350 ], [ %5364, %5391 ]
  %5399 = phi i32 [ 1, %5350 ], [ %5395, %5391 ]
  br label %5400

5400:                                             ; preds = %5397, %5400
  %5401 = phi i64 [ %5406, %5400 ], [ %5398, %5397 ]
  %5402 = phi i32 [ %5405, %5400 ], [ %5399, %5397 ]
  %5403 = getelementptr inbounds i32, ptr %11, i64 %5401
  %5404 = load i32, ptr %5403, align 4, !tbaa !5
  %5405 = mul nsw i32 %5404, %5402
  %5406 = add nsw i64 %5401, -1
  %5407 = trunc i64 %5401 to i32
  %5408 = icmp sgt i32 %5407, 0
  br i1 %5408, label %5400, label %5409, !llvm.loop !1120

5409:                                             ; preds = %5400, %5391
  %5410 = phi i32 [ %5395, %5391 ], [ %5405, %5400 ]
  %5411 = and i64 %5360, 4294967295
  %5412 = getelementptr inbounds i32, ptr %6, i64 %5411
  %5413 = load i32, ptr %5412, align 4, !tbaa !5
  %5414 = mul nsw i32 %5413, %5410
  %5415 = add nsw i32 %5414, %5354
  %5416 = icmp sgt i64 %5352, 2
  %5417 = add nsw i64 %5353, -1
  %5418 = add i32 %5351, 1
  br i1 %5416, label %5350, label %5419, !llvm.loop !1121

5419:                                             ; preds = %5409, %5346
  %5420 = phi i32 [ %5349, %5346 ], [ %5415, %5409 ]
  %5421 = icmp slt i32 %5420, %5
  br i1 %5421, label %5424, label %5422

5422:                                             ; preds = %5419
  %5423 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

5424:                                             ; preds = %5419
  %5425 = sext i32 %5420 to i64
  %5426 = getelementptr inbounds double, ptr %4888, i64 %5425
  %5427 = load double, ptr %5426, align 8, !tbaa !18
  %5428 = fmul fast double %5427, %5427
  %5429 = fadd fast double %5347, %5428
  store double %5429, ptr %4890, align 8, !tbaa !18
  %5430 = add nuw nsw i32 %5348, 1
  br i1 %5199, label %5431, label %5481

5431:                                             ; preds = %5424
  %5432 = load i32, ptr %4, align 4, !tbaa !5
  %5433 = load i32, ptr %12, align 4, !tbaa !5
  %5434 = add nsw i32 %5433, -1
  %5435 = icmp slt i32 %5432, %5434
  br i1 %5435, label %5458, label %5436

5436:                                             ; preds = %5431
  %5437 = icmp eq i32 %5432, %5434
  br i1 %5437, label %5438, label %5474

5438:                                             ; preds = %5436
  store i32 0, ptr %4, align 4, !tbaa !5
  %5439 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5439, ptr %6, align 4, !tbaa !5
  br i1 %5204, label %5481, label %5440

5440:                                             ; preds = %5438, %5468
  %5441 = phi i64 [ %5472, %5468 ], [ 1, %5438 ]
  %5442 = getelementptr inbounds i32, ptr %4, i64 %5441
  %5443 = load i32, ptr %5442, align 4, !tbaa !5
  %5444 = getelementptr inbounds i32, ptr %12, i64 %5441
  %5445 = load i32, ptr %5444, align 4, !tbaa !5
  %5446 = add nsw i32 %5445, -1
  %5447 = icmp slt i32 %5443, %5446
  br i1 %5447, label %5448, label %5466

5448:                                             ; preds = %5440
  br i1 %5435, label %5458, label %5449

5449:                                             ; preds = %5448
  %5450 = shl i64 %5441, 32
  %5451 = add i64 %5450, -4294967296
  %5452 = ashr exact i64 %5451, 32
  %5453 = getelementptr inbounds i32, ptr %7, i64 %5452
  %5454 = load i32, ptr %5453, align 4, !tbaa !5
  %5455 = getelementptr inbounds i32, ptr %6, i64 %5441
  %5456 = load i32, ptr %5455, align 4, !tbaa !5
  %5457 = add nsw i32 %5456, %5454
  store i32 %5457, ptr %5455, align 4, !tbaa !5
  br label %5476

5458:                                             ; preds = %5431, %5448
  %5459 = phi i32 [ %5443, %5448 ], [ %5432, %5431 ]
  %5460 = phi ptr [ %5442, %5448 ], [ %4, %5431 ]
  %5461 = phi i64 [ %5441, %5448 ], [ 0, %5431 ]
  %5462 = add nsw i32 %5459, 1
  store i32 %5462, ptr %5460, align 4, !tbaa !5
  %5463 = getelementptr inbounds i32, ptr %7, i64 %5461
  %5464 = load i32, ptr %5463, align 4, !tbaa !5
  %5465 = getelementptr inbounds i32, ptr %6, i64 %5461
  br label %5476

5466:                                             ; preds = %5440
  %5467 = icmp eq i32 %5443, %5446
  br i1 %5467, label %5468, label %5474

5468:                                             ; preds = %5466
  store i32 0, ptr %5442, align 4, !tbaa !5
  %5469 = getelementptr inbounds i32, ptr %8, i64 %5441
  %5470 = load i32, ptr %5469, align 4, !tbaa !5
  %5471 = getelementptr inbounds i32, ptr %6, i64 %5441
  store i32 %5470, ptr %5471, align 4, !tbaa !5
  %5472 = add nuw nsw i64 %5441, 1
  %5473 = icmp eq i64 %5472, %5202
  br i1 %5473, label %5481, label %5440, !llvm.loop !1122

5474:                                             ; preds = %5436, %5466
  %5475 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

5476:                                             ; preds = %5449, %5458
  %5477 = phi ptr [ %5465, %5458 ], [ %5442, %5449 ]
  %5478 = phi i32 [ %5464, %5458 ], [ 1, %5449 ]
  %5479 = load i32, ptr %5477, align 4, !tbaa !5
  %5480 = add nsw i32 %5479, %5478
  store i32 %5480, ptr %5477, align 4, !tbaa !5
  br label %5481

5481:                                             ; preds = %5468, %5476, %5438, %5424
  %5482 = icmp eq i32 %5430, %5
  br i1 %5482, label %5491, label %5346, !llvm.loop !1123

5483:                                             ; preds = %4895
  %5484 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

5485:                                             ; preds = %2017
  store i16 %1967, ptr %1850, align 2, !tbaa !78
  br label %5491

5486:                                             ; preds = %2315
  store i16 %2265, ptr %1850, align 2, !tbaa !78
  br label %5491

5487:                                             ; preds = %3238
  store i64 %3188, ptr %3071, align 8, !tbaa !120
  br label %5491

5488:                                             ; preds = %3535
  store i64 %3485, ptr %3071, align 8, !tbaa !120
  br label %5491

5489:                                             ; preds = %4447
  store float %4397, ptr %4280, align 4, !tbaa !162
  br label %5491

5490:                                             ; preds = %4744
  store float %4694, ptr %4280, align 4, !tbaa !162
  br label %5491

5491:                                             ; preds = %5481, %5344, %5189, %5052, %4882, %4588, %4272, %4135, %3980, %3843, %3673, %3379, %3063, %2925, %2769, %2628, %2453, %2159, %1842, %1704, %1548, %1410, %1235, %1097, %941, %800, %625, %487, %331, %193, %5196, %5205, %4901, %4910, %4595, %4604, %5490, %4292, %4301, %5489, %3987, %3996, %3692, %3701, %3386, %3395, %5488, %3083, %3092, %5487, %2776, %2785, %2473, %2482, %2166, %2175, %5486, %1862, %1871, %5485, %1555, %1564, %1255, %1264, %948, %957, %645, %654, %338, %347, %38, %47, %4892, %5483, %4282, %4884, %3683, %4274, %3073, %3675, %2463, %3065, %1852, %2455, %1245, %1844, %635, %1237, %28, %627, %18
  %5492 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %627 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1237 ], [ 0.000000e+00, %635 ], [ 0.000000e+00, %1844 ], [ 0.000000e+00, %1245 ], [ 0.000000e+00, %2455 ], [ 0.000000e+00, %1852 ], [ 0.000000e+00, %3065 ], [ 0.000000e+00, %2463 ], [ 0.000000e+00, %3675 ], [ 0.000000e+00, %3073 ], [ 0.000000e+00, %4274 ], [ 0.000000e+00, %3683 ], [ 0.000000e+00, %4884 ], [ 0.000000e+00, %4282 ], [ 0.000000e+00, %5483 ], [ 0.000000e+00, %4892 ], [ 0.000000e+00, %47 ], [ 0.000000e+00, %38 ], [ 0.000000e+00, %347 ], [ 0.000000e+00, %338 ], [ 0.000000e+00, %654 ], [ 0.000000e+00, %645 ], [ 0.000000e+00, %957 ], [ 0.000000e+00, %948 ], [ 0.000000e+00, %1264 ], [ 0.000000e+00, %1255 ], [ 0.000000e+00, %1564 ], [ 0.000000e+00, %1555 ], [ %1968, %5485 ], [ 0.000000e+00, %1871 ], [ 0.000000e+00, %1862 ], [ %2266, %5486 ], [ 0.000000e+00, %2175 ], [ 0.000000e+00, %2166 ], [ 0.000000e+00, %2482 ], [ 0.000000e+00, %2473 ], [ 0.000000e+00, %2785 ], [ 0.000000e+00, %2776 ], [ %3189, %5487 ], [ 0.000000e+00, %3092 ], [ 0.000000e+00, %3083 ], [ %3486, %5488 ], [ 0.000000e+00, %3395 ], [ 0.000000e+00, %3386 ], [ 0.000000e+00, %3701 ], [ 0.000000e+00, %3692 ], [ 0.000000e+00, %3996 ], [ 0.000000e+00, %3987 ], [ %4398, %5489 ], [ 0.000000e+00, %4301 ], [ 0.000000e+00, %4292 ], [ %4695, %5490 ], [ 0.000000e+00, %4604 ], [ 0.000000e+00, %4595 ], [ 0.000000e+00, %4910 ], [ 0.000000e+00, %4901 ], [ 0.000000e+00, %5205 ], [ 0.000000e+00, %5196 ], [ %144, %193 ], [ 0.000000e+00, %331 ], [ %438, %487 ], [ 0.000000e+00, %625 ], [ %751, %800 ], [ 0.000000e+00, %941 ], [ %1048, %1097 ], [ 0.000000e+00, %1235 ], [ %1361, %1410 ], [ 0.000000e+00, %1548 ], [ %1655, %1704 ], [ 0.000000e+00, %1842 ], [ 0.000000e+00, %2159 ], [ 0.000000e+00, %2453 ], [ %2579, %2628 ], [ 0.000000e+00, %2769 ], [ %2876, %2925 ], [ 0.000000e+00, %3063 ], [ 0.000000e+00, %3379 ], [ 0.000000e+00, %3673 ], [ %3794, %3843 ], [ 0.000000e+00, %3980 ], [ %4086, %4135 ], [ 0.000000e+00, %4272 ], [ 0.000000e+00, %4588 ], [ 0.000000e+00, %4882 ], [ %5003, %5052 ], [ 0.000000e+00, %5189 ], [ %5295, %5344 ], [ 0.000000e+00, %5481 ]
  %5493 = phi i32 [ %10, %18 ], [ 1, %627 ], [ 1, %28 ], [ 1, %1237 ], [ 1, %635 ], [ 1, %1844 ], [ 1, %1245 ], [ 1, %2455 ], [ 1, %1852 ], [ 1, %3065 ], [ 1, %2463 ], [ 1, %3675 ], [ 1, %3073 ], [ 1, %4274 ], [ 1, %3683 ], [ 1, %4884 ], [ 1, %4282 ], [ 1, %5483 ], [ 1, %4892 ], [ 1, %47 ], [ 1, %38 ], [ 1, %347 ], [ 1, %338 ], [ 1, %654 ], [ 1, %645 ], [ 1, %957 ], [ 1, %948 ], [ 1, %1264 ], [ 1, %1255 ], [ 1, %1564 ], [ 1, %1555 ], [ %1878, %5485 ], [ 1, %1871 ], [ 1, %1862 ], [ %2182, %5486 ], [ 1, %2175 ], [ 1, %2166 ], [ 1, %2482 ], [ 1, %2473 ], [ 1, %2785 ], [ 1, %2776 ], [ %3099, %5487 ], [ 1, %3092 ], [ 1, %3083 ], [ %3402, %5488 ], [ 1, %3395 ], [ 1, %3386 ], [ 1, %3701 ], [ 1, %3692 ], [ 1, %3996 ], [ 1, %3987 ], [ %4308, %5489 ], [ 1, %4301 ], [ 1, %4292 ], [ %4611, %5490 ], [ 1, %4604 ], [ 1, %4595 ], [ 1, %4910 ], [ 1, %4901 ], [ 1, %5205 ], [ 1, %5196 ], [ %54, %193 ], [ %45, %331 ], [ %354, %487 ], [ %345, %625 ], [ %661, %800 ], [ %652, %941 ], [ %964, %1097 ], [ %955, %1235 ], [ %1271, %1410 ], [ %1262, %1548 ], [ %1571, %1704 ], [ %1562, %1842 ], [ %1869, %2159 ], [ %2173, %2453 ], [ %2489, %2628 ], [ %2480, %2769 ], [ %2792, %2925 ], [ %2783, %3063 ], [ %3090, %3379 ], [ %3393, %3673 ], [ %3708, %3843 ], [ %3699, %3980 ], [ %4003, %4135 ], [ %3994, %4272 ], [ %4299, %4588 ], [ %4602, %4882 ], [ %4917, %5052 ], [ %4908, %5189 ], [ %5212, %5344 ], [ %5203, %5481 ]
  %5494 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5493, ptr noundef nonnull @.str.5) #3
  %5495 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5492, ptr noundef nonnull @.str.6) #3
  br label %5496

5496:                                             ; preds = %5045, %5130, %5182, %5337, %5422, %5474, %4440, %4525, %4581, %4737, %4822, %4875, %3836, %3921, %3973, %4128, %4213, %4265, %3231, %3316, %3372, %3528, %3613, %3666, %2621, %2705, %2762, %2918, %3002, %3056, %2010, %2095, %2152, %2308, %2393, %2446, %1403, %1487, %1541, %1697, %1781, %1835, %793, %877, %934, %1090, %1174, %1228, %186, %270, %324, %480, %564, %618, %5491
  %5497 = phi i32 [ 0, %5491 ], [ -1, %618 ], [ -1, %564 ], [ -1, %480 ], [ -1, %324 ], [ -1, %270 ], [ -1, %186 ], [ -1, %1228 ], [ -1, %1174 ], [ -1, %1090 ], [ -1, %934 ], [ -1, %877 ], [ -1, %793 ], [ -1, %1835 ], [ -1, %1781 ], [ -1, %1697 ], [ -1, %1541 ], [ -1, %1487 ], [ -1, %1403 ], [ -1, %2446 ], [ -1, %2393 ], [ -1, %2308 ], [ -1, %2152 ], [ -1, %2095 ], [ -1, %2010 ], [ -1, %3056 ], [ -1, %3002 ], [ -1, %2918 ], [ -1, %2762 ], [ -1, %2705 ], [ -1, %2621 ], [ -1, %3666 ], [ -1, %3613 ], [ -1, %3528 ], [ -1, %3372 ], [ -1, %3316 ], [ -1, %3231 ], [ -1, %4265 ], [ -1, %4213 ], [ -1, %4128 ], [ -1, %3973 ], [ -1, %3921 ], [ -1, %3836 ], [ -1, %4875 ], [ -1, %4822 ], [ -1, %4737 ], [ -1, %4581 ], [ -1, %4525 ], [ -1, %4440 ], [ -1, %5474 ], [ -1, %5422 ], [ -1, %5337 ], [ -1, %5182 ], [ -1, %5130 ], [ -1, %5045 ]
  ret i32 %5497
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm2_REAL4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5496 [
    i32 101, label %22
    i32 102, label %629
    i32 103, label %1239
    i32 104, label %1846
    i32 105, label %2457
    i32 106, label %3067
    i32 107, label %3677
    i32 108, label %4281
    i32 109, label %4886
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = load float, ptr %24, align 4, !tbaa !162
  %30 = fptoui float %29 to i8
  %31 = mul i8 %30, %30
  store i8 %31, ptr %26, align 1, !tbaa !11
  br label %5496

32:                                               ; preds = %22
  switch i32 %1, label %627 [
    i32 1, label %33
    i32 0, label %333
  ]

33:                                               ; preds = %32
  %34 = getelementptr inbounds i32, ptr %3, i64 %19
  %35 = load i32, ptr %34, align 4, !tbaa !5
  %36 = icmp eq i32 %35, 0
  %37 = icmp sgt i32 %5, 0
  br i1 %36, label %47, label %38

38:                                               ; preds = %33
  br i1 %37, label %39, label %5496

39:                                               ; preds = %38
  %40 = icmp sgt i32 %13, 1
  %41 = icmp sgt i32 %13, 0
  %42 = add i32 %13, -2
  %43 = zext i32 %42 to i64
  %44 = zext i32 %13 to i64
  %45 = add nuw i32 %5, 1
  %46 = icmp eq i32 %13, 1
  br label %195

47:                                               ; preds = %33
  br i1 %37, label %48, label %5496

48:                                               ; preds = %47
  %49 = icmp sgt i32 %13, 1
  %50 = icmp sgt i32 %13, 0
  %51 = add i32 %13, -2
  %52 = zext i32 %51 to i64
  %53 = zext i32 %13 to i64
  %54 = add nuw i32 %5, 1
  %55 = icmp eq i32 %13, 1
  br label %56

56:                                               ; preds = %48, %193
  %57 = phi i32 [ 0, %48 ], [ %145, %193 ]
  %58 = phi double [ 0.000000e+00, %48 ], [ %144, %193 ]
  %59 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %49, label %60, label %129

60:                                               ; preds = %56, %119
  %61 = phi i32 [ %128, %119 ], [ 0, %56 ]
  %62 = phi i64 [ %70, %119 ], [ %53, %56 ]
  %63 = phi i64 [ %127, %119 ], [ %52, %56 ]
  %64 = phi i32 [ %125, %119 ], [ %59, %56 ]
  %65 = sub i32 %51, %61
  %66 = tail call i32 @llvm.smin.i32(i32 %65, i32 0)
  %67 = sub i32 %65, %66
  %68 = zext i32 %67 to i64
  %69 = add nuw nsw i64 %68, 1
  %70 = add nsw i64 %62, -1
  %71 = icmp ult i32 %67, 31
  br i1 %71, label %107, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 8589934560
  %74 = sub i64 %63, %73
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi i64 [ 0, %72 ], [ %99, %75 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %95, %75 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %96, %75 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %97, %75 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %98, %75 ]
  %81 = sub i64 %63, %76
  %82 = getelementptr inbounds i32, ptr %9, i64 %81
  %83 = getelementptr inbounds i32, ptr %82, i64 -7
  %84 = load <8 x i32>, ptr %83, align 4, !tbaa !5
  %85 = shufflevector <8 x i32> %84, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %86 = getelementptr inbounds i32, ptr %82, i64 -15
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !5
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %82, i64 -23
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !5
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %82, i64 -31
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !5
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = mul <8 x i32> %85, %77
  %96 = mul <8 x i32> %88, %78
  %97 = mul <8 x i32> %91, %79
  %98 = mul <8 x i32> %94, %80
  %99 = add nuw i64 %76, 32
  %100 = icmp eq i64 %99, %73
  br i1 %100, label %101, label %75, !llvm.loop !1124

101:                                              ; preds = %75
  %102 = mul <8 x i32> %96, %95
  %103 = mul <8 x i32> %97, %102
  %104 = mul <8 x i32> %98, %103
  %105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %104)
  %106 = icmp eq i64 %69, %73
  br i1 %106, label %119, label %107

107:                                              ; preds = %60, %101
  %108 = phi i64 [ %63, %60 ], [ %74, %101 ]
  %109 = phi i32 [ 1, %60 ], [ %105, %101 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, ptr %9, i64 %111
  %114 = load i32, ptr %113, align 4, !tbaa !5
  %115 = mul nsw i32 %114, %112
  %116 = add nsw i64 %111, -1
  %117 = trunc i64 %111 to i32
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %110, label %119, !llvm.loop !1125

119:                                              ; preds = %110, %101
  %120 = phi i32 [ %105, %101 ], [ %115, %110 ]
  %121 = and i64 %70, 4294967295
  %122 = getelementptr inbounds i32, ptr %6, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !5
  %124 = mul nsw i32 %123, %120
  %125 = add nsw i32 %124, %64
  %126 = icmp sgt i64 %62, 2
  %127 = add nsw i64 %63, -1
  %128 = add i32 %61, 1
  br i1 %126, label %60, label %129, !llvm.loop !1126

129:                                              ; preds = %119, %56
  %130 = phi i32 [ %59, %56 ], [ %125, %119 ]
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds double, ptr %2, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !18
  %134 = getelementptr inbounds float, ptr %24, i64 %131
  %135 = load float, ptr %134, align 4, !tbaa !162
  %136 = fptoui float %135 to i8
  %137 = load i8, ptr %26, align 1, !tbaa !11
  %138 = uitofp i8 %137 to double
  %139 = uitofp i8 %136 to double
  %140 = fmul fast double %133, %139
  %141 = fmul fast double %140, %140
  %142 = fadd fast double %141, %138
  %143 = fptoui double %142 to i8
  store i8 %143, ptr %26, align 1, !tbaa !11
  %144 = fadd fast double %133, %58
  %145 = add nuw nsw i32 %57, 1
  br i1 %50, label %146, label %193

146:                                              ; preds = %129
  %147 = load i32, ptr %4, align 4, !tbaa !5
  %148 = load i32, ptr %12, align 4, !tbaa !5
  %149 = add nsw i32 %148, -1
  %150 = icmp slt i32 %147, %149
  br i1 %150, label %170, label %151

151:                                              ; preds = %146
  %152 = icmp eq i32 %147, %149
  br i1 %152, label %153, label %186

153:                                              ; preds = %151
  store i32 0, ptr %4, align 4, !tbaa !5
  %154 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %154, ptr %6, align 4, !tbaa !5
  br i1 %55, label %193, label %155

155:                                              ; preds = %153, %180
  %156 = phi i64 [ %184, %180 ], [ 1, %153 ]
  %157 = getelementptr inbounds i32, ptr %4, i64 %156
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = getelementptr inbounds i32, ptr %12, i64 %156
  %160 = load i32, ptr %159, align 4, !tbaa !5
  %161 = add nsw i32 %160, -1
  %162 = icmp slt i32 %158, %161
  br i1 %162, label %163, label %178

163:                                              ; preds = %155
  br i1 %150, label %170, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds i32, ptr %7, i64 %156
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = getelementptr inbounds i32, ptr %6, i64 %156
  %168 = load i32, ptr %167, align 4, !tbaa !5
  %169 = add nsw i32 %168, %166
  store i32 %169, ptr %167, align 4, !tbaa !5
  br label %188

170:                                              ; preds = %146, %163
  %171 = phi i32 [ %158, %163 ], [ %147, %146 ]
  %172 = phi ptr [ %157, %163 ], [ %4, %146 ]
  %173 = phi i64 [ %156, %163 ], [ 0, %146 ]
  %174 = add nsw i32 %171, 1
  store i32 %174, ptr %172, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %7, i64 %173
  %176 = load i32, ptr %175, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %6, i64 %173
  br label %188

178:                                              ; preds = %155
  %179 = icmp eq i32 %158, %161
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  store i32 0, ptr %157, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %8, i64 %156
  %182 = load i32, ptr %181, align 4, !tbaa !5
  %183 = getelementptr inbounds i32, ptr %6, i64 %156
  store i32 %182, ptr %183, align 4, !tbaa !5
  %184 = add nuw nsw i64 %156, 1
  %185 = icmp eq i64 %184, %53
  br i1 %185, label %193, label %155, !llvm.loop !1127

186:                                              ; preds = %151, %178
  %187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

188:                                              ; preds = %164, %170
  %189 = phi ptr [ %177, %170 ], [ %157, %164 ]
  %190 = phi i32 [ %176, %170 ], [ 1, %164 ]
  %191 = load i32, ptr %189, align 4, !tbaa !5
  %192 = add nsw i32 %191, %190
  store i32 %192, ptr %189, align 4, !tbaa !5
  br label %193

193:                                              ; preds = %180, %188, %153, %129
  %194 = icmp eq i32 %145, %5
  br i1 %194, label %5496, label %56, !llvm.loop !1128

195:                                              ; preds = %39, %331
  %196 = phi i32 [ 0, %39 ], [ %280, %331 ]
  %197 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %40, label %198, label %267

198:                                              ; preds = %195, %257
  %199 = phi i32 [ %266, %257 ], [ 0, %195 ]
  %200 = phi i64 [ %208, %257 ], [ %44, %195 ]
  %201 = phi i64 [ %265, %257 ], [ %43, %195 ]
  %202 = phi i32 [ %263, %257 ], [ %197, %195 ]
  %203 = sub i32 %42, %199
  %204 = tail call i32 @llvm.smin.i32(i32 %203, i32 0)
  %205 = sub i32 %203, %204
  %206 = zext i32 %205 to i64
  %207 = add nuw nsw i64 %206, 1
  %208 = add nsw i64 %200, -1
  %209 = icmp ult i32 %205, 31
  br i1 %209, label %245, label %210

210:                                              ; preds = %198
  %211 = and i64 %207, 8589934560
  %212 = sub i64 %201, %211
  br label %213

213:                                              ; preds = %213, %210
  %214 = phi i64 [ 0, %210 ], [ %237, %213 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %233, %213 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %234, %213 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %235, %213 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %236, %213 ]
  %219 = sub i64 %201, %214
  %220 = getelementptr inbounds i32, ptr %11, i64 %219
  %221 = getelementptr inbounds i32, ptr %220, i64 -7
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %220, i64 -15
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %220, i64 -23
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %220, i64 -31
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = mul <8 x i32> %223, %215
  %234 = mul <8 x i32> %226, %216
  %235 = mul <8 x i32> %229, %217
  %236 = mul <8 x i32> %232, %218
  %237 = add nuw i64 %214, 32
  %238 = icmp eq i64 %237, %211
  br i1 %238, label %239, label %213, !llvm.loop !1129

239:                                              ; preds = %213
  %240 = mul <8 x i32> %234, %233
  %241 = mul <8 x i32> %235, %240
  %242 = mul <8 x i32> %236, %241
  %243 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %242)
  %244 = icmp eq i64 %207, %211
  br i1 %244, label %257, label %245

245:                                              ; preds = %198, %239
  %246 = phi i64 [ %201, %198 ], [ %212, %239 ]
  %247 = phi i32 [ 1, %198 ], [ %243, %239 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %254, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %253, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i32, ptr %11, i64 %249
  %252 = load i32, ptr %251, align 4, !tbaa !5
  %253 = mul nsw i32 %252, %250
  %254 = add nsw i64 %249, -1
  %255 = trunc i64 %249 to i32
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %248, label %257, !llvm.loop !1130

257:                                              ; preds = %248, %239
  %258 = phi i32 [ %243, %239 ], [ %253, %248 ]
  %259 = and i64 %208, 4294967295
  %260 = getelementptr inbounds i32, ptr %6, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !5
  %262 = mul nsw i32 %261, %258
  %263 = add nsw i32 %262, %202
  %264 = icmp sgt i64 %200, 2
  %265 = add nsw i64 %201, -1
  %266 = add i32 %199, 1
  br i1 %264, label %198, label %267, !llvm.loop !1131

267:                                              ; preds = %257, %195
  %268 = phi i32 [ %197, %195 ], [ %263, %257 ]
  %269 = icmp slt i32 %268, %5
  br i1 %269, label %272, label %270

270:                                              ; preds = %267
  %271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

272:                                              ; preds = %267
  %273 = sext i32 %268 to i64
  %274 = getelementptr inbounds float, ptr %24, i64 %273
  %275 = load float, ptr %274, align 4, !tbaa !162
  %276 = fptoui float %275 to i8
  %277 = load i8, ptr %26, align 1, !tbaa !11
  %278 = mul i8 %276, %276
  %279 = add i8 %278, %277
  store i8 %279, ptr %26, align 1, !tbaa !11
  %280 = add nuw nsw i32 %196, 1
  br i1 %41, label %281, label %331

281:                                              ; preds = %272
  %282 = load i32, ptr %4, align 4, !tbaa !5
  %283 = load i32, ptr %12, align 4, !tbaa !5
  %284 = add nsw i32 %283, -1
  %285 = icmp slt i32 %282, %284
  br i1 %285, label %308, label %286

286:                                              ; preds = %281
  %287 = icmp eq i32 %282, %284
  br i1 %287, label %288, label %324

288:                                              ; preds = %286
  store i32 0, ptr %4, align 4, !tbaa !5
  %289 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %289, ptr %6, align 4, !tbaa !5
  br i1 %46, label %331, label %290

290:                                              ; preds = %288, %318
  %291 = phi i64 [ %322, %318 ], [ 1, %288 ]
  %292 = getelementptr inbounds i32, ptr %4, i64 %291
  %293 = load i32, ptr %292, align 4, !tbaa !5
  %294 = getelementptr inbounds i32, ptr %12, i64 %291
  %295 = load i32, ptr %294, align 4, !tbaa !5
  %296 = add nsw i32 %295, -1
  %297 = icmp slt i32 %293, %296
  br i1 %297, label %298, label %316

298:                                              ; preds = %290
  br i1 %285, label %308, label %299

299:                                              ; preds = %298
  %300 = shl i64 %291, 32
  %301 = add i64 %300, -4294967296
  %302 = ashr exact i64 %301, 32
  %303 = getelementptr inbounds i32, ptr %7, i64 %302
  %304 = load i32, ptr %303, align 4, !tbaa !5
  %305 = getelementptr inbounds i32, ptr %6, i64 %291
  %306 = load i32, ptr %305, align 4, !tbaa !5
  %307 = add nsw i32 %306, %304
  store i32 %307, ptr %305, align 4, !tbaa !5
  br label %326

308:                                              ; preds = %281, %298
  %309 = phi i32 [ %293, %298 ], [ %282, %281 ]
  %310 = phi ptr [ %292, %298 ], [ %4, %281 ]
  %311 = phi i64 [ %291, %298 ], [ 0, %281 ]
  %312 = add nsw i32 %309, 1
  store i32 %312, ptr %310, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %7, i64 %311
  %314 = load i32, ptr %313, align 4, !tbaa !5
  %315 = getelementptr inbounds i32, ptr %6, i64 %311
  br label %326

316:                                              ; preds = %290
  %317 = icmp eq i32 %293, %296
  br i1 %317, label %318, label %324

318:                                              ; preds = %316
  store i32 0, ptr %292, align 4, !tbaa !5
  %319 = getelementptr inbounds i32, ptr %8, i64 %291
  %320 = load i32, ptr %319, align 4, !tbaa !5
  %321 = getelementptr inbounds i32, ptr %6, i64 %291
  store i32 %320, ptr %321, align 4, !tbaa !5
  %322 = add nuw nsw i64 %291, 1
  %323 = icmp eq i64 %322, %44
  br i1 %323, label %331, label %290, !llvm.loop !1132

324:                                              ; preds = %286, %316
  %325 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

326:                                              ; preds = %299, %308
  %327 = phi ptr [ %315, %308 ], [ %292, %299 ]
  %328 = phi i32 [ %314, %308 ], [ 1, %299 ]
  %329 = load i32, ptr %327, align 4, !tbaa !5
  %330 = add nsw i32 %329, %328
  store i32 %330, ptr %327, align 4, !tbaa !5
  br label %331

331:                                              ; preds = %318, %326, %288, %272
  %332 = icmp eq i32 %280, %5
  br i1 %332, label %5496, label %195, !llvm.loop !1133

333:                                              ; preds = %32
  %334 = getelementptr inbounds i32, ptr %3, i64 %19
  %335 = load i32, ptr %334, align 4, !tbaa !5
  %336 = icmp eq i32 %335, 0
  %337 = icmp sgt i32 %5, 0
  br i1 %336, label %347, label %338

338:                                              ; preds = %333
  br i1 %337, label %339, label %5496

339:                                              ; preds = %338
  %340 = icmp sgt i32 %13, 1
  %341 = icmp sgt i32 %13, 0
  %342 = add i32 %13, -2
  %343 = zext i32 %342 to i64
  %344 = zext i32 %13 to i64
  %345 = add nuw i32 %5, 1
  %346 = icmp eq i32 %13, 1
  br label %489

347:                                              ; preds = %333
  br i1 %337, label %348, label %5496

348:                                              ; preds = %347
  %349 = icmp sgt i32 %13, 1
  %350 = icmp sgt i32 %13, 0
  %351 = add i32 %13, -2
  %352 = zext i32 %351 to i64
  %353 = zext i32 %13 to i64
  %354 = add nuw i32 %5, 1
  %355 = icmp eq i32 %13, 1
  br label %356

356:                                              ; preds = %348, %487
  %357 = phi i32 [ 0, %348 ], [ %439, %487 ]
  %358 = phi double [ 0.000000e+00, %348 ], [ %438, %487 ]
  %359 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %349, label %360, label %429

360:                                              ; preds = %356, %419
  %361 = phi i32 [ %428, %419 ], [ 0, %356 ]
  %362 = phi i64 [ %370, %419 ], [ %353, %356 ]
  %363 = phi i64 [ %427, %419 ], [ %352, %356 ]
  %364 = phi i32 [ %425, %419 ], [ %359, %356 ]
  %365 = sub i32 %351, %361
  %366 = tail call i32 @llvm.smin.i32(i32 %365, i32 0)
  %367 = sub i32 %365, %366
  %368 = zext i32 %367 to i64
  %369 = add nuw nsw i64 %368, 1
  %370 = add nsw i64 %362, -1
  %371 = icmp ult i32 %367, 31
  br i1 %371, label %407, label %372

372:                                              ; preds = %360
  %373 = and i64 %369, 8589934560
  %374 = sub i64 %363, %373
  br label %375

375:                                              ; preds = %375, %372
  %376 = phi i64 [ 0, %372 ], [ %399, %375 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %395, %375 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %396, %375 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %397, %375 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %398, %375 ]
  %381 = sub i64 %363, %376
  %382 = getelementptr inbounds i32, ptr %9, i64 %381
  %383 = getelementptr inbounds i32, ptr %382, i64 -7
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %382, i64 -15
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %382, i64 -23
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %382, i64 -31
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !5
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = mul <8 x i32> %385, %377
  %396 = mul <8 x i32> %388, %378
  %397 = mul <8 x i32> %391, %379
  %398 = mul <8 x i32> %394, %380
  %399 = add nuw i64 %376, 32
  %400 = icmp eq i64 %399, %373
  br i1 %400, label %401, label %375, !llvm.loop !1134

401:                                              ; preds = %375
  %402 = mul <8 x i32> %396, %395
  %403 = mul <8 x i32> %397, %402
  %404 = mul <8 x i32> %398, %403
  %405 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %404)
  %406 = icmp eq i64 %369, %373
  br i1 %406, label %419, label %407

407:                                              ; preds = %360, %401
  %408 = phi i64 [ %363, %360 ], [ %374, %401 ]
  %409 = phi i32 [ 1, %360 ], [ %405, %401 ]
  br label %410

410:                                              ; preds = %407, %410
  %411 = phi i64 [ %416, %410 ], [ %408, %407 ]
  %412 = phi i32 [ %415, %410 ], [ %409, %407 ]
  %413 = getelementptr inbounds i32, ptr %9, i64 %411
  %414 = load i32, ptr %413, align 4, !tbaa !5
  %415 = mul nsw i32 %414, %412
  %416 = add nsw i64 %411, -1
  %417 = trunc i64 %411 to i32
  %418 = icmp sgt i32 %417, 0
  br i1 %418, label %410, label %419, !llvm.loop !1135

419:                                              ; preds = %410, %401
  %420 = phi i32 [ %405, %401 ], [ %415, %410 ]
  %421 = and i64 %370, 4294967295
  %422 = getelementptr inbounds i32, ptr %6, i64 %421
  %423 = load i32, ptr %422, align 4, !tbaa !5
  %424 = mul nsw i32 %423, %420
  %425 = add nsw i32 %424, %364
  %426 = icmp sgt i64 %362, 2
  %427 = add nsw i64 %363, -1
  %428 = add i32 %361, 1
  br i1 %426, label %360, label %429, !llvm.loop !1136

429:                                              ; preds = %419, %356
  %430 = phi i32 [ %359, %356 ], [ %425, %419 ]
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds float, ptr %24, i64 %431
  %433 = load float, ptr %432, align 4, !tbaa !162
  %434 = fptoui float %433 to i8
  %435 = load i8, ptr %26, align 1, !tbaa !11
  %436 = mul i8 %434, %434
  %437 = add i8 %436, %435
  store i8 %437, ptr %26, align 1, !tbaa !11
  %438 = fadd fast double %358, 1.000000e+00
  %439 = add nuw nsw i32 %357, 1
  br i1 %350, label %440, label %487

440:                                              ; preds = %429
  %441 = load i32, ptr %4, align 4, !tbaa !5
  %442 = load i32, ptr %12, align 4, !tbaa !5
  %443 = add nsw i32 %442, -1
  %444 = icmp slt i32 %441, %443
  br i1 %444, label %464, label %445

445:                                              ; preds = %440
  %446 = icmp eq i32 %441, %443
  br i1 %446, label %447, label %480

447:                                              ; preds = %445
  store i32 0, ptr %4, align 4, !tbaa !5
  %448 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %448, ptr %6, align 4, !tbaa !5
  br i1 %355, label %487, label %449

449:                                              ; preds = %447, %474
  %450 = phi i64 [ %478, %474 ], [ 1, %447 ]
  %451 = getelementptr inbounds i32, ptr %4, i64 %450
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %12, i64 %450
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, -1
  %456 = icmp slt i32 %452, %455
  br i1 %456, label %457, label %472

457:                                              ; preds = %449
  br i1 %444, label %464, label %458

458:                                              ; preds = %457
  %459 = getelementptr inbounds i32, ptr %7, i64 %450
  %460 = load i32, ptr %459, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %6, i64 %450
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = add nsw i32 %462, %460
  store i32 %463, ptr %461, align 4, !tbaa !5
  br label %482

464:                                              ; preds = %440, %457
  %465 = phi i32 [ %452, %457 ], [ %441, %440 ]
  %466 = phi ptr [ %451, %457 ], [ %4, %440 ]
  %467 = phi i64 [ %450, %457 ], [ 0, %440 ]
  %468 = add nsw i32 %465, 1
  store i32 %468, ptr %466, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %7, i64 %467
  %470 = load i32, ptr %469, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %6, i64 %467
  br label %482

472:                                              ; preds = %449
  %473 = icmp eq i32 %452, %455
  br i1 %473, label %474, label %480

474:                                              ; preds = %472
  store i32 0, ptr %451, align 4, !tbaa !5
  %475 = getelementptr inbounds i32, ptr %8, i64 %450
  %476 = load i32, ptr %475, align 4, !tbaa !5
  %477 = getelementptr inbounds i32, ptr %6, i64 %450
  store i32 %476, ptr %477, align 4, !tbaa !5
  %478 = add nuw nsw i64 %450, 1
  %479 = icmp eq i64 %478, %353
  br i1 %479, label %487, label %449, !llvm.loop !1137

480:                                              ; preds = %445, %472
  %481 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

482:                                              ; preds = %458, %464
  %483 = phi ptr [ %471, %464 ], [ %451, %458 ]
  %484 = phi i32 [ %470, %464 ], [ 1, %458 ]
  %485 = load i32, ptr %483, align 4, !tbaa !5
  %486 = add nsw i32 %485, %484
  store i32 %486, ptr %483, align 4, !tbaa !5
  br label %487

487:                                              ; preds = %474, %482, %447, %429
  %488 = icmp eq i32 %439, %5
  br i1 %488, label %5496, label %356, !llvm.loop !1138

489:                                              ; preds = %339, %625
  %490 = phi i32 [ 0, %339 ], [ %574, %625 ]
  %491 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %340, label %492, label %561

492:                                              ; preds = %489, %551
  %493 = phi i32 [ %560, %551 ], [ 0, %489 ]
  %494 = phi i64 [ %502, %551 ], [ %344, %489 ]
  %495 = phi i64 [ %559, %551 ], [ %343, %489 ]
  %496 = phi i32 [ %557, %551 ], [ %491, %489 ]
  %497 = sub i32 %342, %493
  %498 = tail call i32 @llvm.smin.i32(i32 %497, i32 0)
  %499 = sub i32 %497, %498
  %500 = zext i32 %499 to i64
  %501 = add nuw nsw i64 %500, 1
  %502 = add nsw i64 %494, -1
  %503 = icmp ult i32 %499, 31
  br i1 %503, label %539, label %504

504:                                              ; preds = %492
  %505 = and i64 %501, 8589934560
  %506 = sub i64 %495, %505
  br label %507

507:                                              ; preds = %507, %504
  %508 = phi i64 [ 0, %504 ], [ %531, %507 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %527, %507 ]
  %510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %528, %507 ]
  %511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %529, %507 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %530, %507 ]
  %513 = sub i64 %495, %508
  %514 = getelementptr inbounds i32, ptr %11, i64 %513
  %515 = getelementptr inbounds i32, ptr %514, i64 -7
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %514, i64 -15
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %514, i64 -23
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %514, i64 -31
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !5
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = mul <8 x i32> %517, %509
  %528 = mul <8 x i32> %520, %510
  %529 = mul <8 x i32> %523, %511
  %530 = mul <8 x i32> %526, %512
  %531 = add nuw i64 %508, 32
  %532 = icmp eq i64 %531, %505
  br i1 %532, label %533, label %507, !llvm.loop !1139

533:                                              ; preds = %507
  %534 = mul <8 x i32> %528, %527
  %535 = mul <8 x i32> %529, %534
  %536 = mul <8 x i32> %530, %535
  %537 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %536)
  %538 = icmp eq i64 %501, %505
  br i1 %538, label %551, label %539

539:                                              ; preds = %492, %533
  %540 = phi i64 [ %495, %492 ], [ %506, %533 ]
  %541 = phi i32 [ 1, %492 ], [ %537, %533 ]
  br label %542

542:                                              ; preds = %539, %542
  %543 = phi i64 [ %548, %542 ], [ %540, %539 ]
  %544 = phi i32 [ %547, %542 ], [ %541, %539 ]
  %545 = getelementptr inbounds i32, ptr %11, i64 %543
  %546 = load i32, ptr %545, align 4, !tbaa !5
  %547 = mul nsw i32 %546, %544
  %548 = add nsw i64 %543, -1
  %549 = trunc i64 %543 to i32
  %550 = icmp sgt i32 %549, 0
  br i1 %550, label %542, label %551, !llvm.loop !1140

551:                                              ; preds = %542, %533
  %552 = phi i32 [ %537, %533 ], [ %547, %542 ]
  %553 = and i64 %502, 4294967295
  %554 = getelementptr inbounds i32, ptr %6, i64 %553
  %555 = load i32, ptr %554, align 4, !tbaa !5
  %556 = mul nsw i32 %555, %552
  %557 = add nsw i32 %556, %496
  %558 = icmp sgt i64 %494, 2
  %559 = add nsw i64 %495, -1
  %560 = add i32 %493, 1
  br i1 %558, label %492, label %561, !llvm.loop !1141

561:                                              ; preds = %551, %489
  %562 = phi i32 [ %491, %489 ], [ %557, %551 ]
  %563 = icmp slt i32 %562, %5
  br i1 %563, label %566, label %564

564:                                              ; preds = %561
  %565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

566:                                              ; preds = %561
  %567 = sext i32 %562 to i64
  %568 = getelementptr inbounds float, ptr %24, i64 %567
  %569 = load float, ptr %568, align 4, !tbaa !162
  %570 = fptoui float %569 to i8
  %571 = load i8, ptr %26, align 1, !tbaa !11
  %572 = mul i8 %570, %570
  %573 = add i8 %572, %571
  store i8 %573, ptr %26, align 1, !tbaa !11
  %574 = add nuw nsw i32 %490, 1
  br i1 %341, label %575, label %625

575:                                              ; preds = %566
  %576 = load i32, ptr %4, align 4, !tbaa !5
  %577 = load i32, ptr %12, align 4, !tbaa !5
  %578 = add nsw i32 %577, -1
  %579 = icmp slt i32 %576, %578
  br i1 %579, label %602, label %580

580:                                              ; preds = %575
  %581 = icmp eq i32 %576, %578
  br i1 %581, label %582, label %618

582:                                              ; preds = %580
  store i32 0, ptr %4, align 4, !tbaa !5
  %583 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %583, ptr %6, align 4, !tbaa !5
  br i1 %346, label %625, label %584

584:                                              ; preds = %582, %612
  %585 = phi i64 [ %616, %612 ], [ 1, %582 ]
  %586 = getelementptr inbounds i32, ptr %4, i64 %585
  %587 = load i32, ptr %586, align 4, !tbaa !5
  %588 = getelementptr inbounds i32, ptr %12, i64 %585
  %589 = load i32, ptr %588, align 4, !tbaa !5
  %590 = add nsw i32 %589, -1
  %591 = icmp slt i32 %587, %590
  br i1 %591, label %592, label %610

592:                                              ; preds = %584
  br i1 %579, label %602, label %593

593:                                              ; preds = %592
  %594 = shl i64 %585, 32
  %595 = add i64 %594, -4294967296
  %596 = ashr exact i64 %595, 32
  %597 = getelementptr inbounds i32, ptr %7, i64 %596
  %598 = load i32, ptr %597, align 4, !tbaa !5
  %599 = getelementptr inbounds i32, ptr %6, i64 %585
  %600 = load i32, ptr %599, align 4, !tbaa !5
  %601 = add nsw i32 %600, %598
  store i32 %601, ptr %599, align 4, !tbaa !5
  br label %620

602:                                              ; preds = %575, %592
  %603 = phi i32 [ %587, %592 ], [ %576, %575 ]
  %604 = phi ptr [ %586, %592 ], [ %4, %575 ]
  %605 = phi i64 [ %585, %592 ], [ 0, %575 ]
  %606 = add nsw i32 %603, 1
  store i32 %606, ptr %604, align 4, !tbaa !5
  %607 = getelementptr inbounds i32, ptr %7, i64 %605
  %608 = load i32, ptr %607, align 4, !tbaa !5
  %609 = getelementptr inbounds i32, ptr %6, i64 %605
  br label %620

610:                                              ; preds = %584
  %611 = icmp eq i32 %587, %590
  br i1 %611, label %612, label %618

612:                                              ; preds = %610
  store i32 0, ptr %586, align 4, !tbaa !5
  %613 = getelementptr inbounds i32, ptr %8, i64 %585
  %614 = load i32, ptr %613, align 4, !tbaa !5
  %615 = getelementptr inbounds i32, ptr %6, i64 %585
  store i32 %614, ptr %615, align 4, !tbaa !5
  %616 = add nuw nsw i64 %585, 1
  %617 = icmp eq i64 %616, %344
  br i1 %617, label %625, label %584, !llvm.loop !1142

618:                                              ; preds = %580, %610
  %619 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

620:                                              ; preds = %593, %602
  %621 = phi ptr [ %609, %602 ], [ %586, %593 ]
  %622 = phi i32 [ %608, %602 ], [ 1, %593 ]
  %623 = load i32, ptr %621, align 4, !tbaa !5
  %624 = add nsw i32 %623, %622
  store i32 %624, ptr %621, align 4, !tbaa !5
  br label %625

625:                                              ; preds = %612, %620, %582, %566
  %626 = icmp eq i32 %574, %5
  br i1 %626, label %5496, label %489, !llvm.loop !1143

627:                                              ; preds = %32
  %628 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1997, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5496

629:                                              ; preds = %18
  %630 = getelementptr inbounds ptr, ptr %14, i64 %19
  %631 = load ptr, ptr %630, align 8, !tbaa !9
  %632 = getelementptr inbounds ptr, ptr %16, i64 %19
  %633 = load ptr, ptr %632, align 8, !tbaa !9
  store i32 0, ptr %633, align 4, !tbaa !5
  %634 = icmp eq i32 %13, 0
  br i1 %634, label %635, label %639

635:                                              ; preds = %629
  %636 = load float, ptr %631, align 4, !tbaa !162
  %637 = fptosi float %636 to i32
  %638 = mul nsw i32 %637, %637
  store i32 %638, ptr %633, align 4, !tbaa !5
  br label %5496

639:                                              ; preds = %629
  switch i32 %1, label %1237 [
    i32 1, label %640
    i32 0, label %943
  ]

640:                                              ; preds = %639
  %641 = getelementptr inbounds i32, ptr %3, i64 %19
  %642 = load i32, ptr %641, align 4, !tbaa !5
  %643 = icmp eq i32 %642, 0
  %644 = icmp sgt i32 %5, 0
  br i1 %643, label %654, label %645

645:                                              ; preds = %640
  br i1 %644, label %646, label %5496

646:                                              ; preds = %645
  %647 = icmp sgt i32 %13, 1
  %648 = icmp sgt i32 %13, 0
  %649 = add i32 %13, -2
  %650 = zext i32 %649 to i64
  %651 = zext i32 %13 to i64
  %652 = add nuw i32 %5, 1
  %653 = icmp eq i32 %13, 1
  br label %802

654:                                              ; preds = %640
  br i1 %644, label %655, label %5496

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %663

663:                                              ; preds = %655, %800
  %664 = phi i32 [ 0, %655 ], [ %752, %800 ]
  %665 = phi double [ 0.000000e+00, %655 ], [ %751, %800 ]
  %666 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %656, label %667, label %736

667:                                              ; preds = %663, %726
  %668 = phi i32 [ %735, %726 ], [ 0, %663 ]
  %669 = phi i64 [ %677, %726 ], [ %660, %663 ]
  %670 = phi i64 [ %734, %726 ], [ %659, %663 ]
  %671 = phi i32 [ %732, %726 ], [ %666, %663 ]
  %672 = sub i32 %658, %668
  %673 = tail call i32 @llvm.smin.i32(i32 %672, i32 0)
  %674 = sub i32 %672, %673
  %675 = zext i32 %674 to i64
  %676 = add nuw nsw i64 %675, 1
  %677 = add nsw i64 %669, -1
  %678 = icmp ult i32 %674, 31
  br i1 %678, label %714, label %679

679:                                              ; preds = %667
  %680 = and i64 %676, 8589934560
  %681 = sub i64 %670, %680
  br label %682

682:                                              ; preds = %682, %679
  %683 = phi i64 [ 0, %679 ], [ %706, %682 ]
  %684 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %702, %682 ]
  %685 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %703, %682 ]
  %686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %704, %682 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %705, %682 ]
  %688 = sub i64 %670, %683
  %689 = getelementptr inbounds i32, ptr %9, i64 %688
  %690 = getelementptr inbounds i32, ptr %689, i64 -7
  %691 = load <8 x i32>, ptr %690, align 4, !tbaa !5
  %692 = shufflevector <8 x i32> %691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %693 = getelementptr inbounds i32, ptr %689, i64 -15
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !5
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = getelementptr inbounds i32, ptr %689, i64 -23
  %697 = load <8 x i32>, ptr %696, align 4, !tbaa !5
  %698 = shufflevector <8 x i32> %697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %699 = getelementptr inbounds i32, ptr %689, i64 -31
  %700 = load <8 x i32>, ptr %699, align 4, !tbaa !5
  %701 = shufflevector <8 x i32> %700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %702 = mul <8 x i32> %692, %684
  %703 = mul <8 x i32> %695, %685
  %704 = mul <8 x i32> %698, %686
  %705 = mul <8 x i32> %701, %687
  %706 = add nuw i64 %683, 32
  %707 = icmp eq i64 %706, %680
  br i1 %707, label %708, label %682, !llvm.loop !1144

708:                                              ; preds = %682
  %709 = mul <8 x i32> %703, %702
  %710 = mul <8 x i32> %704, %709
  %711 = mul <8 x i32> %705, %710
  %712 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %711)
  %713 = icmp eq i64 %676, %680
  br i1 %713, label %726, label %714

714:                                              ; preds = %667, %708
  %715 = phi i64 [ %670, %667 ], [ %681, %708 ]
  %716 = phi i32 [ 1, %667 ], [ %712, %708 ]
  br label %717

717:                                              ; preds = %714, %717
  %718 = phi i64 [ %723, %717 ], [ %715, %714 ]
  %719 = phi i32 [ %722, %717 ], [ %716, %714 ]
  %720 = getelementptr inbounds i32, ptr %9, i64 %718
  %721 = load i32, ptr %720, align 4, !tbaa !5
  %722 = mul nsw i32 %721, %719
  %723 = add nsw i64 %718, -1
  %724 = trunc i64 %718 to i32
  %725 = icmp sgt i32 %724, 0
  br i1 %725, label %717, label %726, !llvm.loop !1145

726:                                              ; preds = %717, %708
  %727 = phi i32 [ %712, %708 ], [ %722, %717 ]
  %728 = and i64 %677, 4294967295
  %729 = getelementptr inbounds i32, ptr %6, i64 %728
  %730 = load i32, ptr %729, align 4, !tbaa !5
  %731 = mul nsw i32 %730, %727
  %732 = add nsw i32 %731, %671
  %733 = icmp sgt i64 %669, 2
  %734 = add nsw i64 %670, -1
  %735 = add i32 %668, 1
  br i1 %733, label %667, label %736, !llvm.loop !1146

736:                                              ; preds = %726, %663
  %737 = phi i32 [ %666, %663 ], [ %732, %726 ]
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds double, ptr %2, i64 %738
  %740 = load double, ptr %739, align 8, !tbaa !18
  %741 = getelementptr inbounds float, ptr %631, i64 %738
  %742 = load float, ptr %741, align 4, !tbaa !162
  %743 = fptosi float %742 to i32
  %744 = load i32, ptr %633, align 4, !tbaa !5
  %745 = sitofp i32 %744 to double
  %746 = sitofp i32 %743 to double
  %747 = fmul fast double %740, %746
  %748 = fmul fast double %747, %747
  %749 = fadd fast double %748, %745
  %750 = fptosi double %749 to i32
  store i32 %750, ptr %633, align 4, !tbaa !5
  %751 = fadd fast double %740, %665
  %752 = add nuw nsw i32 %664, 1
  br i1 %657, label %753, label %800

753:                                              ; preds = %736
  %754 = load i32, ptr %4, align 4, !tbaa !5
  %755 = load i32, ptr %12, align 4, !tbaa !5
  %756 = add nsw i32 %755, -1
  %757 = icmp slt i32 %754, %756
  br i1 %757, label %777, label %758

758:                                              ; preds = %753
  %759 = icmp eq i32 %754, %756
  br i1 %759, label %760, label %793

760:                                              ; preds = %758
  store i32 0, ptr %4, align 4, !tbaa !5
  %761 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %761, ptr %6, align 4, !tbaa !5
  br i1 %662, label %800, label %762

762:                                              ; preds = %760, %787
  %763 = phi i64 [ %791, %787 ], [ 1, %760 ]
  %764 = getelementptr inbounds i32, ptr %4, i64 %763
  %765 = load i32, ptr %764, align 4, !tbaa !5
  %766 = getelementptr inbounds i32, ptr %12, i64 %763
  %767 = load i32, ptr %766, align 4, !tbaa !5
  %768 = add nsw i32 %767, -1
  %769 = icmp slt i32 %765, %768
  br i1 %769, label %770, label %785

770:                                              ; preds = %762
  br i1 %757, label %777, label %771

771:                                              ; preds = %770
  %772 = getelementptr inbounds i32, ptr %7, i64 %763
  %773 = load i32, ptr %772, align 4, !tbaa !5
  %774 = getelementptr inbounds i32, ptr %6, i64 %763
  %775 = load i32, ptr %774, align 4, !tbaa !5
  %776 = add nsw i32 %775, %773
  store i32 %776, ptr %774, align 4, !tbaa !5
  br label %795

777:                                              ; preds = %753, %770
  %778 = phi i32 [ %765, %770 ], [ %754, %753 ]
  %779 = phi ptr [ %764, %770 ], [ %4, %753 ]
  %780 = phi i64 [ %763, %770 ], [ 0, %753 ]
  %781 = add nsw i32 %778, 1
  store i32 %781, ptr %779, align 4, !tbaa !5
  %782 = getelementptr inbounds i32, ptr %7, i64 %780
  %783 = load i32, ptr %782, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %6, i64 %780
  br label %795

785:                                              ; preds = %762
  %786 = icmp eq i32 %765, %768
  br i1 %786, label %787, label %793

787:                                              ; preds = %785
  store i32 0, ptr %764, align 4, !tbaa !5
  %788 = getelementptr inbounds i32, ptr %8, i64 %763
  %789 = load i32, ptr %788, align 4, !tbaa !5
  %790 = getelementptr inbounds i32, ptr %6, i64 %763
  store i32 %789, ptr %790, align 4, !tbaa !5
  %791 = add nuw nsw i64 %763, 1
  %792 = icmp eq i64 %791, %660
  br i1 %792, label %800, label %762, !llvm.loop !1147

793:                                              ; preds = %758, %785
  %794 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2000, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

795:                                              ; preds = %771, %777
  %796 = phi ptr [ %784, %777 ], [ %764, %771 ]
  %797 = phi i32 [ %783, %777 ], [ 1, %771 ]
  %798 = load i32, ptr %796, align 4, !tbaa !5
  %799 = add nsw i32 %798, %797
  store i32 %799, ptr %796, align 4, !tbaa !5
  br label %800

800:                                              ; preds = %787, %795, %760, %736
  %801 = icmp eq i32 %752, %5
  br i1 %801, label %5496, label %663, !llvm.loop !1148

802:                                              ; preds = %646, %941
  %803 = phi i32 [ 0, %646 ], [ %890, %941 ]
  %804 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %647, label %805, label %874

805:                                              ; preds = %802, %864
  %806 = phi i32 [ %873, %864 ], [ 0, %802 ]
  %807 = phi i64 [ %815, %864 ], [ %651, %802 ]
  %808 = phi i64 [ %872, %864 ], [ %650, %802 ]
  %809 = phi i32 [ %870, %864 ], [ %804, %802 ]
  %810 = sub i32 %649, %806
  %811 = tail call i32 @llvm.smin.i32(i32 %810, i32 0)
  %812 = sub i32 %810, %811
  %813 = zext i32 %812 to i64
  %814 = add nuw nsw i64 %813, 1
  %815 = add nsw i64 %807, -1
  %816 = icmp ult i32 %812, 31
  br i1 %816, label %852, label %817

817:                                              ; preds = %805
  %818 = and i64 %814, 8589934560
  %819 = sub i64 %808, %818
  br label %820

820:                                              ; preds = %820, %817
  %821 = phi i64 [ 0, %817 ], [ %844, %820 ]
  %822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %840, %820 ]
  %823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %841, %820 ]
  %824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %842, %820 ]
  %825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %843, %820 ]
  %826 = sub i64 %808, %821
  %827 = getelementptr inbounds i32, ptr %11, i64 %826
  %828 = getelementptr inbounds i32, ptr %827, i64 -7
  %829 = load <8 x i32>, ptr %828, align 4, !tbaa !5
  %830 = shufflevector <8 x i32> %829, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %831 = getelementptr inbounds i32, ptr %827, i64 -15
  %832 = load <8 x i32>, ptr %831, align 4, !tbaa !5
  %833 = shufflevector <8 x i32> %832, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %834 = getelementptr inbounds i32, ptr %827, i64 -23
  %835 = load <8 x i32>, ptr %834, align 4, !tbaa !5
  %836 = shufflevector <8 x i32> %835, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %837 = getelementptr inbounds i32, ptr %827, i64 -31
  %838 = load <8 x i32>, ptr %837, align 4, !tbaa !5
  %839 = shufflevector <8 x i32> %838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %840 = mul <8 x i32> %830, %822
  %841 = mul <8 x i32> %833, %823
  %842 = mul <8 x i32> %836, %824
  %843 = mul <8 x i32> %839, %825
  %844 = add nuw i64 %821, 32
  %845 = icmp eq i64 %844, %818
  br i1 %845, label %846, label %820, !llvm.loop !1149

846:                                              ; preds = %820
  %847 = mul <8 x i32> %841, %840
  %848 = mul <8 x i32> %842, %847
  %849 = mul <8 x i32> %843, %848
  %850 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %849)
  %851 = icmp eq i64 %814, %818
  br i1 %851, label %864, label %852

852:                                              ; preds = %805, %846
  %853 = phi i64 [ %808, %805 ], [ %819, %846 ]
  %854 = phi i32 [ 1, %805 ], [ %850, %846 ]
  br label %855

855:                                              ; preds = %852, %855
  %856 = phi i64 [ %861, %855 ], [ %853, %852 ]
  %857 = phi i32 [ %860, %855 ], [ %854, %852 ]
  %858 = getelementptr inbounds i32, ptr %11, i64 %856
  %859 = load i32, ptr %858, align 4, !tbaa !5
  %860 = mul nsw i32 %859, %857
  %861 = add nsw i64 %856, -1
  %862 = trunc i64 %856 to i32
  %863 = icmp sgt i32 %862, 0
  br i1 %863, label %855, label %864, !llvm.loop !1150

864:                                              ; preds = %855, %846
  %865 = phi i32 [ %850, %846 ], [ %860, %855 ]
  %866 = and i64 %815, 4294967295
  %867 = getelementptr inbounds i32, ptr %6, i64 %866
  %868 = load i32, ptr %867, align 4, !tbaa !5
  %869 = mul nsw i32 %868, %865
  %870 = add nsw i32 %869, %809
  %871 = icmp sgt i64 %807, 2
  %872 = add nsw i64 %808, -1
  %873 = add i32 %806, 1
  br i1 %871, label %805, label %874, !llvm.loop !1151

874:                                              ; preds = %864, %802
  %875 = phi i32 [ %804, %802 ], [ %870, %864 ]
  %876 = icmp slt i32 %875, %5
  br i1 %876, label %879, label %877

877:                                              ; preds = %874
  %878 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2000, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

879:                                              ; preds = %874
  %880 = sext i32 %875 to i64
  %881 = getelementptr inbounds float, ptr %631, i64 %880
  %882 = load float, ptr %881, align 4, !tbaa !162
  %883 = fptosi float %882 to i32
  %884 = load i32, ptr %633, align 4, !tbaa !5
  %885 = sitofp i32 %884 to double
  %886 = sitofp i32 %883 to double
  %887 = fmul fast double %886, %886
  %888 = fadd fast double %887, %885
  %889 = fptosi double %888 to i32
  store i32 %889, ptr %633, align 4, !tbaa !5
  %890 = add nuw nsw i32 %803, 1
  br i1 %648, label %891, label %941

891:                                              ; preds = %879
  %892 = load i32, ptr %4, align 4, !tbaa !5
  %893 = load i32, ptr %12, align 4, !tbaa !5
  %894 = add nsw i32 %893, -1
  %895 = icmp slt i32 %892, %894
  br i1 %895, label %918, label %896

896:                                              ; preds = %891
  %897 = icmp eq i32 %892, %894
  br i1 %897, label %898, label %934

898:                                              ; preds = %896
  store i32 0, ptr %4, align 4, !tbaa !5
  %899 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %899, ptr %6, align 4, !tbaa !5
  br i1 %653, label %941, label %900

900:                                              ; preds = %898, %928
  %901 = phi i64 [ %932, %928 ], [ 1, %898 ]
  %902 = getelementptr inbounds i32, ptr %4, i64 %901
  %903 = load i32, ptr %902, align 4, !tbaa !5
  %904 = getelementptr inbounds i32, ptr %12, i64 %901
  %905 = load i32, ptr %904, align 4, !tbaa !5
  %906 = add nsw i32 %905, -1
  %907 = icmp slt i32 %903, %906
  br i1 %907, label %908, label %926

908:                                              ; preds = %900
  br i1 %895, label %918, label %909

909:                                              ; preds = %908
  %910 = shl i64 %901, 32
  %911 = add i64 %910, -4294967296
  %912 = ashr exact i64 %911, 32
  %913 = getelementptr inbounds i32, ptr %7, i64 %912
  %914 = load i32, ptr %913, align 4, !tbaa !5
  %915 = getelementptr inbounds i32, ptr %6, i64 %901
  %916 = load i32, ptr %915, align 4, !tbaa !5
  %917 = add nsw i32 %916, %914
  store i32 %917, ptr %915, align 4, !tbaa !5
  br label %936

918:                                              ; preds = %891, %908
  %919 = phi i32 [ %903, %908 ], [ %892, %891 ]
  %920 = phi ptr [ %902, %908 ], [ %4, %891 ]
  %921 = phi i64 [ %901, %908 ], [ 0, %891 ]
  %922 = add nsw i32 %919, 1
  store i32 %922, ptr %920, align 4, !tbaa !5
  %923 = getelementptr inbounds i32, ptr %7, i64 %921
  %924 = load i32, ptr %923, align 4, !tbaa !5
  %925 = getelementptr inbounds i32, ptr %6, i64 %921
  br label %936

926:                                              ; preds = %900
  %927 = icmp eq i32 %903, %906
  br i1 %927, label %928, label %934

928:                                              ; preds = %926
  store i32 0, ptr %902, align 4, !tbaa !5
  %929 = getelementptr inbounds i32, ptr %8, i64 %901
  %930 = load i32, ptr %929, align 4, !tbaa !5
  %931 = getelementptr inbounds i32, ptr %6, i64 %901
  store i32 %930, ptr %931, align 4, !tbaa !5
  %932 = add nuw nsw i64 %901, 1
  %933 = icmp eq i64 %932, %651
  br i1 %933, label %941, label %900, !llvm.loop !1152

934:                                              ; preds = %896, %926
  %935 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2000, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

936:                                              ; preds = %909, %918
  %937 = phi ptr [ %925, %918 ], [ %902, %909 ]
  %938 = phi i32 [ %924, %918 ], [ 1, %909 ]
  %939 = load i32, ptr %937, align 4, !tbaa !5
  %940 = add nsw i32 %939, %938
  store i32 %940, ptr %937, align 4, !tbaa !5
  br label %941

941:                                              ; preds = %928, %936, %898, %879
  %942 = icmp eq i32 %890, %5
  br i1 %942, label %5496, label %802, !llvm.loop !1153

943:                                              ; preds = %639
  %944 = getelementptr inbounds i32, ptr %3, i64 %19
  %945 = load i32, ptr %944, align 4, !tbaa !5
  %946 = icmp eq i32 %945, 0
  %947 = icmp sgt i32 %5, 0
  br i1 %946, label %957, label %948

948:                                              ; preds = %943
  br i1 %947, label %949, label %5496

949:                                              ; preds = %948
  %950 = icmp sgt i32 %13, 1
  %951 = icmp sgt i32 %13, 0
  %952 = add i32 %13, -2
  %953 = zext i32 %952 to i64
  %954 = zext i32 %13 to i64
  %955 = add nuw i32 %5, 1
  %956 = icmp eq i32 %13, 1
  br label %1099

957:                                              ; preds = %943
  br i1 %947, label %958, label %5496

958:                                              ; preds = %957
  %959 = icmp sgt i32 %13, 1
  %960 = icmp sgt i32 %13, 0
  %961 = add i32 %13, -2
  %962 = zext i32 %961 to i64
  %963 = zext i32 %13 to i64
  %964 = add nuw i32 %5, 1
  %965 = icmp eq i32 %13, 1
  br label %966

966:                                              ; preds = %958, %1097
  %967 = phi i32 [ 0, %958 ], [ %1049, %1097 ]
  %968 = phi double [ 0.000000e+00, %958 ], [ %1048, %1097 ]
  %969 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %959, label %970, label %1039

970:                                              ; preds = %966, %1029
  %971 = phi i32 [ %1038, %1029 ], [ 0, %966 ]
  %972 = phi i64 [ %980, %1029 ], [ %963, %966 ]
  %973 = phi i64 [ %1037, %1029 ], [ %962, %966 ]
  %974 = phi i32 [ %1035, %1029 ], [ %969, %966 ]
  %975 = sub i32 %961, %971
  %976 = tail call i32 @llvm.smin.i32(i32 %975, i32 0)
  %977 = sub i32 %975, %976
  %978 = zext i32 %977 to i64
  %979 = add nuw nsw i64 %978, 1
  %980 = add nsw i64 %972, -1
  %981 = icmp ult i32 %977, 31
  br i1 %981, label %1017, label %982

982:                                              ; preds = %970
  %983 = and i64 %979, 8589934560
  %984 = sub i64 %973, %983
  br label %985

985:                                              ; preds = %985, %982
  %986 = phi i64 [ 0, %982 ], [ %1009, %985 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1005, %985 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1006, %985 ]
  %989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1007, %985 ]
  %990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1008, %985 ]
  %991 = sub i64 %973, %986
  %992 = getelementptr inbounds i32, ptr %9, i64 %991
  %993 = getelementptr inbounds i32, ptr %992, i64 -7
  %994 = load <8 x i32>, ptr %993, align 4, !tbaa !5
  %995 = shufflevector <8 x i32> %994, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %996 = getelementptr inbounds i32, ptr %992, i64 -15
  %997 = load <8 x i32>, ptr %996, align 4, !tbaa !5
  %998 = shufflevector <8 x i32> %997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %999 = getelementptr inbounds i32, ptr %992, i64 -23
  %1000 = load <8 x i32>, ptr %999, align 4, !tbaa !5
  %1001 = shufflevector <8 x i32> %1000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1002 = getelementptr inbounds i32, ptr %992, i64 -31
  %1003 = load <8 x i32>, ptr %1002, align 4, !tbaa !5
  %1004 = shufflevector <8 x i32> %1003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1005 = mul <8 x i32> %995, %987
  %1006 = mul <8 x i32> %998, %988
  %1007 = mul <8 x i32> %1001, %989
  %1008 = mul <8 x i32> %1004, %990
  %1009 = add nuw i64 %986, 32
  %1010 = icmp eq i64 %1009, %983
  br i1 %1010, label %1011, label %985, !llvm.loop !1154

1011:                                             ; preds = %985
  %1012 = mul <8 x i32> %1006, %1005
  %1013 = mul <8 x i32> %1007, %1012
  %1014 = mul <8 x i32> %1008, %1013
  %1015 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1014)
  %1016 = icmp eq i64 %979, %983
  br i1 %1016, label %1029, label %1017

1017:                                             ; preds = %970, %1011
  %1018 = phi i64 [ %973, %970 ], [ %984, %1011 ]
  %1019 = phi i32 [ 1, %970 ], [ %1015, %1011 ]
  br label %1020

1020:                                             ; preds = %1017, %1020
  %1021 = phi i64 [ %1026, %1020 ], [ %1018, %1017 ]
  %1022 = phi i32 [ %1025, %1020 ], [ %1019, %1017 ]
  %1023 = getelementptr inbounds i32, ptr %9, i64 %1021
  %1024 = load i32, ptr %1023, align 4, !tbaa !5
  %1025 = mul nsw i32 %1024, %1022
  %1026 = add nsw i64 %1021, -1
  %1027 = trunc i64 %1021 to i32
  %1028 = icmp sgt i32 %1027, 0
  br i1 %1028, label %1020, label %1029, !llvm.loop !1155

1029:                                             ; preds = %1020, %1011
  %1030 = phi i32 [ %1015, %1011 ], [ %1025, %1020 ]
  %1031 = and i64 %980, 4294967295
  %1032 = getelementptr inbounds i32, ptr %6, i64 %1031
  %1033 = load i32, ptr %1032, align 4, !tbaa !5
  %1034 = mul nsw i32 %1033, %1030
  %1035 = add nsw i32 %1034, %974
  %1036 = icmp sgt i64 %972, 2
  %1037 = add nsw i64 %973, -1
  %1038 = add i32 %971, 1
  br i1 %1036, label %970, label %1039, !llvm.loop !1156

1039:                                             ; preds = %1029, %966
  %1040 = phi i32 [ %969, %966 ], [ %1035, %1029 ]
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds float, ptr %631, i64 %1041
  %1043 = load float, ptr %1042, align 4, !tbaa !162
  %1044 = fptosi float %1043 to i32
  %1045 = load i32, ptr %633, align 4, !tbaa !5
  %1046 = mul nsw i32 %1044, %1044
  %1047 = add nsw i32 %1046, %1045
  store i32 %1047, ptr %633, align 4, !tbaa !5
  %1048 = fadd fast double %968, 1.000000e+00
  %1049 = add nuw nsw i32 %967, 1
  br i1 %960, label %1050, label %1097

1050:                                             ; preds = %1039
  %1051 = load i32, ptr %4, align 4, !tbaa !5
  %1052 = load i32, ptr %12, align 4, !tbaa !5
  %1053 = add nsw i32 %1052, -1
  %1054 = icmp slt i32 %1051, %1053
  br i1 %1054, label %1074, label %1055

1055:                                             ; preds = %1050
  %1056 = icmp eq i32 %1051, %1053
  br i1 %1056, label %1057, label %1090

1057:                                             ; preds = %1055
  store i32 0, ptr %4, align 4, !tbaa !5
  %1058 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1058, ptr %6, align 4, !tbaa !5
  br i1 %965, label %1097, label %1059

1059:                                             ; preds = %1057, %1084
  %1060 = phi i64 [ %1088, %1084 ], [ 1, %1057 ]
  %1061 = getelementptr inbounds i32, ptr %4, i64 %1060
  %1062 = load i32, ptr %1061, align 4, !tbaa !5
  %1063 = getelementptr inbounds i32, ptr %12, i64 %1060
  %1064 = load i32, ptr %1063, align 4, !tbaa !5
  %1065 = add nsw i32 %1064, -1
  %1066 = icmp slt i32 %1062, %1065
  br i1 %1066, label %1067, label %1082

1067:                                             ; preds = %1059
  br i1 %1054, label %1074, label %1068

1068:                                             ; preds = %1067
  %1069 = getelementptr inbounds i32, ptr %7, i64 %1060
  %1070 = load i32, ptr %1069, align 4, !tbaa !5
  %1071 = getelementptr inbounds i32, ptr %6, i64 %1060
  %1072 = load i32, ptr %1071, align 4, !tbaa !5
  %1073 = add nsw i32 %1072, %1070
  store i32 %1073, ptr %1071, align 4, !tbaa !5
  br label %1092

1074:                                             ; preds = %1050, %1067
  %1075 = phi i32 [ %1062, %1067 ], [ %1051, %1050 ]
  %1076 = phi ptr [ %1061, %1067 ], [ %4, %1050 ]
  %1077 = phi i64 [ %1060, %1067 ], [ 0, %1050 ]
  %1078 = add nsw i32 %1075, 1
  store i32 %1078, ptr %1076, align 4, !tbaa !5
  %1079 = getelementptr inbounds i32, ptr %7, i64 %1077
  %1080 = load i32, ptr %1079, align 4, !tbaa !5
  %1081 = getelementptr inbounds i32, ptr %6, i64 %1077
  br label %1092

1082:                                             ; preds = %1059
  %1083 = icmp eq i32 %1062, %1065
  br i1 %1083, label %1084, label %1090

1084:                                             ; preds = %1082
  store i32 0, ptr %1061, align 4, !tbaa !5
  %1085 = getelementptr inbounds i32, ptr %8, i64 %1060
  %1086 = load i32, ptr %1085, align 4, !tbaa !5
  %1087 = getelementptr inbounds i32, ptr %6, i64 %1060
  store i32 %1086, ptr %1087, align 4, !tbaa !5
  %1088 = add nuw nsw i64 %1060, 1
  %1089 = icmp eq i64 %1088, %963
  br i1 %1089, label %1097, label %1059, !llvm.loop !1157

1090:                                             ; preds = %1055, %1082
  %1091 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2000, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

1092:                                             ; preds = %1068, %1074
  %1093 = phi ptr [ %1081, %1074 ], [ %1061, %1068 ]
  %1094 = phi i32 [ %1080, %1074 ], [ 1, %1068 ]
  %1095 = load i32, ptr %1093, align 4, !tbaa !5
  %1096 = add nsw i32 %1095, %1094
  store i32 %1096, ptr %1093, align 4, !tbaa !5
  br label %1097

1097:                                             ; preds = %1084, %1092, %1057, %1039
  %1098 = icmp eq i32 %1049, %5
  br i1 %1098, label %5496, label %966, !llvm.loop !1158

1099:                                             ; preds = %949, %1235
  %1100 = phi i32 [ 0, %949 ], [ %1184, %1235 ]
  %1101 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %950, label %1102, label %1171

1102:                                             ; preds = %1099, %1161
  %1103 = phi i32 [ %1170, %1161 ], [ 0, %1099 ]
  %1104 = phi i64 [ %1112, %1161 ], [ %954, %1099 ]
  %1105 = phi i64 [ %1169, %1161 ], [ %953, %1099 ]
  %1106 = phi i32 [ %1167, %1161 ], [ %1101, %1099 ]
  %1107 = sub i32 %952, %1103
  %1108 = tail call i32 @llvm.smin.i32(i32 %1107, i32 0)
  %1109 = sub i32 %1107, %1108
  %1110 = zext i32 %1109 to i64
  %1111 = add nuw nsw i64 %1110, 1
  %1112 = add nsw i64 %1104, -1
  %1113 = icmp ult i32 %1109, 31
  br i1 %1113, label %1149, label %1114

1114:                                             ; preds = %1102
  %1115 = and i64 %1111, 8589934560
  %1116 = sub i64 %1105, %1115
  br label %1117

1117:                                             ; preds = %1117, %1114
  %1118 = phi i64 [ 0, %1114 ], [ %1141, %1117 ]
  %1119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1137, %1117 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1138, %1117 ]
  %1121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1139, %1117 ]
  %1122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1140, %1117 ]
  %1123 = sub i64 %1105, %1118
  %1124 = getelementptr inbounds i32, ptr %11, i64 %1123
  %1125 = getelementptr inbounds i32, ptr %1124, i64 -7
  %1126 = load <8 x i32>, ptr %1125, align 4, !tbaa !5
  %1127 = shufflevector <8 x i32> %1126, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1128 = getelementptr inbounds i32, ptr %1124, i64 -15
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !5
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = getelementptr inbounds i32, ptr %1124, i64 -23
  %1132 = load <8 x i32>, ptr %1131, align 4, !tbaa !5
  %1133 = shufflevector <8 x i32> %1132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1134 = getelementptr inbounds i32, ptr %1124, i64 -31
  %1135 = load <8 x i32>, ptr %1134, align 4, !tbaa !5
  %1136 = shufflevector <8 x i32> %1135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1137 = mul <8 x i32> %1127, %1119
  %1138 = mul <8 x i32> %1130, %1120
  %1139 = mul <8 x i32> %1133, %1121
  %1140 = mul <8 x i32> %1136, %1122
  %1141 = add nuw i64 %1118, 32
  %1142 = icmp eq i64 %1141, %1115
  br i1 %1142, label %1143, label %1117, !llvm.loop !1159

1143:                                             ; preds = %1117
  %1144 = mul <8 x i32> %1138, %1137
  %1145 = mul <8 x i32> %1139, %1144
  %1146 = mul <8 x i32> %1140, %1145
  %1147 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1146)
  %1148 = icmp eq i64 %1111, %1115
  br i1 %1148, label %1161, label %1149

1149:                                             ; preds = %1102, %1143
  %1150 = phi i64 [ %1105, %1102 ], [ %1116, %1143 ]
  %1151 = phi i32 [ 1, %1102 ], [ %1147, %1143 ]
  br label %1152

1152:                                             ; preds = %1149, %1152
  %1153 = phi i64 [ %1158, %1152 ], [ %1150, %1149 ]
  %1154 = phi i32 [ %1157, %1152 ], [ %1151, %1149 ]
  %1155 = getelementptr inbounds i32, ptr %11, i64 %1153
  %1156 = load i32, ptr %1155, align 4, !tbaa !5
  %1157 = mul nsw i32 %1156, %1154
  %1158 = add nsw i64 %1153, -1
  %1159 = trunc i64 %1153 to i32
  %1160 = icmp sgt i32 %1159, 0
  br i1 %1160, label %1152, label %1161, !llvm.loop !1160

1161:                                             ; preds = %1152, %1143
  %1162 = phi i32 [ %1147, %1143 ], [ %1157, %1152 ]
  %1163 = and i64 %1112, 4294967295
  %1164 = getelementptr inbounds i32, ptr %6, i64 %1163
  %1165 = load i32, ptr %1164, align 4, !tbaa !5
  %1166 = mul nsw i32 %1165, %1162
  %1167 = add nsw i32 %1166, %1106
  %1168 = icmp sgt i64 %1104, 2
  %1169 = add nsw i64 %1105, -1
  %1170 = add i32 %1103, 1
  br i1 %1168, label %1102, label %1171, !llvm.loop !1161

1171:                                             ; preds = %1161, %1099
  %1172 = phi i32 [ %1101, %1099 ], [ %1167, %1161 ]
  %1173 = icmp slt i32 %1172, %5
  br i1 %1173, label %1176, label %1174

1174:                                             ; preds = %1171
  %1175 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2000, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

1176:                                             ; preds = %1171
  %1177 = sext i32 %1172 to i64
  %1178 = getelementptr inbounds float, ptr %631, i64 %1177
  %1179 = load float, ptr %1178, align 4, !tbaa !162
  %1180 = fptosi float %1179 to i32
  %1181 = load i32, ptr %633, align 4, !tbaa !5
  %1182 = mul nsw i32 %1180, %1180
  %1183 = add nsw i32 %1182, %1181
  store i32 %1183, ptr %633, align 4, !tbaa !5
  %1184 = add nuw nsw i32 %1100, 1
  br i1 %951, label %1185, label %1235

1185:                                             ; preds = %1176
  %1186 = load i32, ptr %4, align 4, !tbaa !5
  %1187 = load i32, ptr %12, align 4, !tbaa !5
  %1188 = add nsw i32 %1187, -1
  %1189 = icmp slt i32 %1186, %1188
  br i1 %1189, label %1212, label %1190

1190:                                             ; preds = %1185
  %1191 = icmp eq i32 %1186, %1188
  br i1 %1191, label %1192, label %1228

1192:                                             ; preds = %1190
  store i32 0, ptr %4, align 4, !tbaa !5
  %1193 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1193, ptr %6, align 4, !tbaa !5
  br i1 %956, label %1235, label %1194

1194:                                             ; preds = %1192, %1222
  %1195 = phi i64 [ %1226, %1222 ], [ 1, %1192 ]
  %1196 = getelementptr inbounds i32, ptr %4, i64 %1195
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = getelementptr inbounds i32, ptr %12, i64 %1195
  %1199 = load i32, ptr %1198, align 4, !tbaa !5
  %1200 = add nsw i32 %1199, -1
  %1201 = icmp slt i32 %1197, %1200
  br i1 %1201, label %1202, label %1220

1202:                                             ; preds = %1194
  br i1 %1189, label %1212, label %1203

1203:                                             ; preds = %1202
  %1204 = shl i64 %1195, 32
  %1205 = add i64 %1204, -4294967296
  %1206 = ashr exact i64 %1205, 32
  %1207 = getelementptr inbounds i32, ptr %7, i64 %1206
  %1208 = load i32, ptr %1207, align 4, !tbaa !5
  %1209 = getelementptr inbounds i32, ptr %6, i64 %1195
  %1210 = load i32, ptr %1209, align 4, !tbaa !5
  %1211 = add nsw i32 %1210, %1208
  store i32 %1211, ptr %1209, align 4, !tbaa !5
  br label %1230

1212:                                             ; preds = %1185, %1202
  %1213 = phi i32 [ %1197, %1202 ], [ %1186, %1185 ]
  %1214 = phi ptr [ %1196, %1202 ], [ %4, %1185 ]
  %1215 = phi i64 [ %1195, %1202 ], [ 0, %1185 ]
  %1216 = add nsw i32 %1213, 1
  store i32 %1216, ptr %1214, align 4, !tbaa !5
  %1217 = getelementptr inbounds i32, ptr %7, i64 %1215
  %1218 = load i32, ptr %1217, align 4, !tbaa !5
  %1219 = getelementptr inbounds i32, ptr %6, i64 %1215
  br label %1230

1220:                                             ; preds = %1194
  %1221 = icmp eq i32 %1197, %1200
  br i1 %1221, label %1222, label %1228

1222:                                             ; preds = %1220
  store i32 0, ptr %1196, align 4, !tbaa !5
  %1223 = getelementptr inbounds i32, ptr %8, i64 %1195
  %1224 = load i32, ptr %1223, align 4, !tbaa !5
  %1225 = getelementptr inbounds i32, ptr %6, i64 %1195
  store i32 %1224, ptr %1225, align 4, !tbaa !5
  %1226 = add nuw nsw i64 %1195, 1
  %1227 = icmp eq i64 %1226, %954
  br i1 %1227, label %1235, label %1194, !llvm.loop !1162

1228:                                             ; preds = %1190, %1220
  %1229 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2000, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

1230:                                             ; preds = %1203, %1212
  %1231 = phi ptr [ %1219, %1212 ], [ %1196, %1203 ]
  %1232 = phi i32 [ %1218, %1212 ], [ 1, %1203 ]
  %1233 = load i32, ptr %1231, align 4, !tbaa !5
  %1234 = add nsw i32 %1233, %1232
  store i32 %1234, ptr %1231, align 4, !tbaa !5
  br label %1235

1235:                                             ; preds = %1222, %1230, %1192, %1176
  %1236 = icmp eq i32 %1184, %5
  br i1 %1236, label %5496, label %1099, !llvm.loop !1163

1237:                                             ; preds = %639
  %1238 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2000, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5496

1239:                                             ; preds = %18
  %1240 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1241 = load ptr, ptr %1240, align 8, !tbaa !9
  %1242 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1243 = load ptr, ptr %1242, align 8, !tbaa !9
  store i8 0, ptr %1243, align 1, !tbaa !11
  %1244 = icmp eq i32 %13, 0
  br i1 %1244, label %1245, label %1249

1245:                                             ; preds = %1239
  %1246 = load float, ptr %1241, align 4, !tbaa !162
  %1247 = fptosi float %1246 to i8
  %1248 = mul i8 %1247, %1247
  store i8 %1248, ptr %1243, align 1, !tbaa !11
  br label %5496

1249:                                             ; preds = %1239
  switch i32 %1, label %1844 [
    i32 1, label %1250
    i32 0, label %1550
  ]

1250:                                             ; preds = %1249
  %1251 = getelementptr inbounds i32, ptr %3, i64 %19
  %1252 = load i32, ptr %1251, align 4, !tbaa !5
  %1253 = icmp eq i32 %1252, 0
  %1254 = icmp sgt i32 %5, 0
  br i1 %1253, label %1264, label %1255

1255:                                             ; preds = %1250
  br i1 %1254, label %1256, label %5496

1256:                                             ; preds = %1255
  %1257 = icmp sgt i32 %13, 1
  %1258 = icmp sgt i32 %13, 0
  %1259 = add i32 %13, -2
  %1260 = zext i32 %1259 to i64
  %1261 = zext i32 %13 to i64
  %1262 = add nuw i32 %5, 1
  %1263 = icmp eq i32 %13, 1
  br label %1412

1264:                                             ; preds = %1250
  br i1 %1254, label %1265, label %5496

1265:                                             ; preds = %1264
  %1266 = icmp sgt i32 %13, 1
  %1267 = icmp sgt i32 %13, 0
  %1268 = add i32 %13, -2
  %1269 = zext i32 %1268 to i64
  %1270 = zext i32 %13 to i64
  %1271 = add nuw i32 %5, 1
  %1272 = icmp eq i32 %13, 1
  br label %1273

1273:                                             ; preds = %1265, %1410
  %1274 = phi i32 [ 0, %1265 ], [ %1362, %1410 ]
  %1275 = phi double [ 0.000000e+00, %1265 ], [ %1361, %1410 ]
  %1276 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1266, label %1277, label %1346

1277:                                             ; preds = %1273, %1336
  %1278 = phi i32 [ %1345, %1336 ], [ 0, %1273 ]
  %1279 = phi i64 [ %1287, %1336 ], [ %1270, %1273 ]
  %1280 = phi i64 [ %1344, %1336 ], [ %1269, %1273 ]
  %1281 = phi i32 [ %1342, %1336 ], [ %1276, %1273 ]
  %1282 = sub i32 %1268, %1278
  %1283 = tail call i32 @llvm.smin.i32(i32 %1282, i32 0)
  %1284 = sub i32 %1282, %1283
  %1285 = zext i32 %1284 to i64
  %1286 = add nuw nsw i64 %1285, 1
  %1287 = add nsw i64 %1279, -1
  %1288 = icmp ult i32 %1284, 31
  br i1 %1288, label %1324, label %1289

1289:                                             ; preds = %1277
  %1290 = and i64 %1286, 8589934560
  %1291 = sub i64 %1280, %1290
  br label %1292

1292:                                             ; preds = %1292, %1289
  %1293 = phi i64 [ 0, %1289 ], [ %1316, %1292 ]
  %1294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1289 ], [ %1312, %1292 ]
  %1295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1289 ], [ %1313, %1292 ]
  %1296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1289 ], [ %1314, %1292 ]
  %1297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1289 ], [ %1315, %1292 ]
  %1298 = sub i64 %1280, %1293
  %1299 = getelementptr inbounds i32, ptr %9, i64 %1298
  %1300 = getelementptr inbounds i32, ptr %1299, i64 -7
  %1301 = load <8 x i32>, ptr %1300, align 4, !tbaa !5
  %1302 = shufflevector <8 x i32> %1301, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1303 = getelementptr inbounds i32, ptr %1299, i64 -15
  %1304 = load <8 x i32>, ptr %1303, align 4, !tbaa !5
  %1305 = shufflevector <8 x i32> %1304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1306 = getelementptr inbounds i32, ptr %1299, i64 -23
  %1307 = load <8 x i32>, ptr %1306, align 4, !tbaa !5
  %1308 = shufflevector <8 x i32> %1307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1309 = getelementptr inbounds i32, ptr %1299, i64 -31
  %1310 = load <8 x i32>, ptr %1309, align 4, !tbaa !5
  %1311 = shufflevector <8 x i32> %1310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1312 = mul <8 x i32> %1302, %1294
  %1313 = mul <8 x i32> %1305, %1295
  %1314 = mul <8 x i32> %1308, %1296
  %1315 = mul <8 x i32> %1311, %1297
  %1316 = add nuw i64 %1293, 32
  %1317 = icmp eq i64 %1316, %1290
  br i1 %1317, label %1318, label %1292, !llvm.loop !1164

1318:                                             ; preds = %1292
  %1319 = mul <8 x i32> %1313, %1312
  %1320 = mul <8 x i32> %1314, %1319
  %1321 = mul <8 x i32> %1315, %1320
  %1322 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1321)
  %1323 = icmp eq i64 %1286, %1290
  br i1 %1323, label %1336, label %1324

1324:                                             ; preds = %1277, %1318
  %1325 = phi i64 [ %1280, %1277 ], [ %1291, %1318 ]
  %1326 = phi i32 [ 1, %1277 ], [ %1322, %1318 ]
  br label %1327

1327:                                             ; preds = %1324, %1327
  %1328 = phi i64 [ %1333, %1327 ], [ %1325, %1324 ]
  %1329 = phi i32 [ %1332, %1327 ], [ %1326, %1324 ]
  %1330 = getelementptr inbounds i32, ptr %9, i64 %1328
  %1331 = load i32, ptr %1330, align 4, !tbaa !5
  %1332 = mul nsw i32 %1331, %1329
  %1333 = add nsw i64 %1328, -1
  %1334 = trunc i64 %1328 to i32
  %1335 = icmp sgt i32 %1334, 0
  br i1 %1335, label %1327, label %1336, !llvm.loop !1165

1336:                                             ; preds = %1327, %1318
  %1337 = phi i32 [ %1322, %1318 ], [ %1332, %1327 ]
  %1338 = and i64 %1287, 4294967295
  %1339 = getelementptr inbounds i32, ptr %6, i64 %1338
  %1340 = load i32, ptr %1339, align 4, !tbaa !5
  %1341 = mul nsw i32 %1340, %1337
  %1342 = add nsw i32 %1341, %1281
  %1343 = icmp sgt i64 %1279, 2
  %1344 = add nsw i64 %1280, -1
  %1345 = add i32 %1278, 1
  br i1 %1343, label %1277, label %1346, !llvm.loop !1166

1346:                                             ; preds = %1336, %1273
  %1347 = phi i32 [ %1276, %1273 ], [ %1342, %1336 ]
  %1348 = sext i32 %1347 to i64
  %1349 = getelementptr inbounds double, ptr %2, i64 %1348
  %1350 = load double, ptr %1349, align 8, !tbaa !18
  %1351 = getelementptr inbounds float, ptr %1241, i64 %1348
  %1352 = load float, ptr %1351, align 4, !tbaa !162
  %1353 = fptosi float %1352 to i8
  %1354 = load i8, ptr %1243, align 1, !tbaa !11
  %1355 = sitofp i8 %1354 to double
  %1356 = sitofp i8 %1353 to double
  %1357 = fmul fast double %1350, %1356
  %1358 = fmul fast double %1357, %1357
  %1359 = fadd fast double %1358, %1355
  %1360 = fptosi double %1359 to i8
  store i8 %1360, ptr %1243, align 1, !tbaa !11
  %1361 = fadd fast double %1350, %1275
  %1362 = add nuw nsw i32 %1274, 1
  br i1 %1267, label %1363, label %1410

1363:                                             ; preds = %1346
  %1364 = load i32, ptr %4, align 4, !tbaa !5
  %1365 = load i32, ptr %12, align 4, !tbaa !5
  %1366 = add nsw i32 %1365, -1
  %1367 = icmp slt i32 %1364, %1366
  br i1 %1367, label %1387, label %1368

1368:                                             ; preds = %1363
  %1369 = icmp eq i32 %1364, %1366
  br i1 %1369, label %1370, label %1403

1370:                                             ; preds = %1368
  store i32 0, ptr %4, align 4, !tbaa !5
  %1371 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1371, ptr %6, align 4, !tbaa !5
  br i1 %1272, label %1410, label %1372

1372:                                             ; preds = %1370, %1397
  %1373 = phi i64 [ %1401, %1397 ], [ 1, %1370 ]
  %1374 = getelementptr inbounds i32, ptr %4, i64 %1373
  %1375 = load i32, ptr %1374, align 4, !tbaa !5
  %1376 = getelementptr inbounds i32, ptr %12, i64 %1373
  %1377 = load i32, ptr %1376, align 4, !tbaa !5
  %1378 = add nsw i32 %1377, -1
  %1379 = icmp slt i32 %1375, %1378
  br i1 %1379, label %1380, label %1395

1380:                                             ; preds = %1372
  br i1 %1367, label %1387, label %1381

1381:                                             ; preds = %1380
  %1382 = getelementptr inbounds i32, ptr %7, i64 %1373
  %1383 = load i32, ptr %1382, align 4, !tbaa !5
  %1384 = getelementptr inbounds i32, ptr %6, i64 %1373
  %1385 = load i32, ptr %1384, align 4, !tbaa !5
  %1386 = add nsw i32 %1385, %1383
  store i32 %1386, ptr %1384, align 4, !tbaa !5
  br label %1405

1387:                                             ; preds = %1363, %1380
  %1388 = phi i32 [ %1375, %1380 ], [ %1364, %1363 ]
  %1389 = phi ptr [ %1374, %1380 ], [ %4, %1363 ]
  %1390 = phi i64 [ %1373, %1380 ], [ 0, %1363 ]
  %1391 = add nsw i32 %1388, 1
  store i32 %1391, ptr %1389, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %7, i64 %1390
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = getelementptr inbounds i32, ptr %6, i64 %1390
  br label %1405

1395:                                             ; preds = %1372
  %1396 = icmp eq i32 %1375, %1378
  br i1 %1396, label %1397, label %1403

1397:                                             ; preds = %1395
  store i32 0, ptr %1374, align 4, !tbaa !5
  %1398 = getelementptr inbounds i32, ptr %8, i64 %1373
  %1399 = load i32, ptr %1398, align 4, !tbaa !5
  %1400 = getelementptr inbounds i32, ptr %6, i64 %1373
  store i32 %1399, ptr %1400, align 4, !tbaa !5
  %1401 = add nuw nsw i64 %1373, 1
  %1402 = icmp eq i64 %1401, %1270
  br i1 %1402, label %1410, label %1372, !llvm.loop !1167

1403:                                             ; preds = %1368, %1395
  %1404 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

1405:                                             ; preds = %1381, %1387
  %1406 = phi ptr [ %1394, %1387 ], [ %1374, %1381 ]
  %1407 = phi i32 [ %1393, %1387 ], [ 1, %1381 ]
  %1408 = load i32, ptr %1406, align 4, !tbaa !5
  %1409 = add nsw i32 %1408, %1407
  store i32 %1409, ptr %1406, align 4, !tbaa !5
  br label %1410

1410:                                             ; preds = %1397, %1405, %1370, %1346
  %1411 = icmp eq i32 %1362, %5
  br i1 %1411, label %5496, label %1273, !llvm.loop !1168

1412:                                             ; preds = %1256, %1548
  %1413 = phi i32 [ 0, %1256 ], [ %1497, %1548 ]
  %1414 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1257, label %1415, label %1484

1415:                                             ; preds = %1412, %1474
  %1416 = phi i32 [ %1483, %1474 ], [ 0, %1412 ]
  %1417 = phi i64 [ %1425, %1474 ], [ %1261, %1412 ]
  %1418 = phi i64 [ %1482, %1474 ], [ %1260, %1412 ]
  %1419 = phi i32 [ %1480, %1474 ], [ %1414, %1412 ]
  %1420 = sub i32 %1259, %1416
  %1421 = tail call i32 @llvm.smin.i32(i32 %1420, i32 0)
  %1422 = sub i32 %1420, %1421
  %1423 = zext i32 %1422 to i64
  %1424 = add nuw nsw i64 %1423, 1
  %1425 = add nsw i64 %1417, -1
  %1426 = icmp ult i32 %1422, 31
  br i1 %1426, label %1462, label %1427

1427:                                             ; preds = %1415
  %1428 = and i64 %1424, 8589934560
  %1429 = sub i64 %1418, %1428
  br label %1430

1430:                                             ; preds = %1430, %1427
  %1431 = phi i64 [ 0, %1427 ], [ %1454, %1430 ]
  %1432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1450, %1430 ]
  %1433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1451, %1430 ]
  %1434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1452, %1430 ]
  %1435 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1453, %1430 ]
  %1436 = sub i64 %1418, %1431
  %1437 = getelementptr inbounds i32, ptr %11, i64 %1436
  %1438 = getelementptr inbounds i32, ptr %1437, i64 -7
  %1439 = load <8 x i32>, ptr %1438, align 4, !tbaa !5
  %1440 = shufflevector <8 x i32> %1439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1441 = getelementptr inbounds i32, ptr %1437, i64 -15
  %1442 = load <8 x i32>, ptr %1441, align 4, !tbaa !5
  %1443 = shufflevector <8 x i32> %1442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1444 = getelementptr inbounds i32, ptr %1437, i64 -23
  %1445 = load <8 x i32>, ptr %1444, align 4, !tbaa !5
  %1446 = shufflevector <8 x i32> %1445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1447 = getelementptr inbounds i32, ptr %1437, i64 -31
  %1448 = load <8 x i32>, ptr %1447, align 4, !tbaa !5
  %1449 = shufflevector <8 x i32> %1448, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1450 = mul <8 x i32> %1440, %1432
  %1451 = mul <8 x i32> %1443, %1433
  %1452 = mul <8 x i32> %1446, %1434
  %1453 = mul <8 x i32> %1449, %1435
  %1454 = add nuw i64 %1431, 32
  %1455 = icmp eq i64 %1454, %1428
  br i1 %1455, label %1456, label %1430, !llvm.loop !1169

1456:                                             ; preds = %1430
  %1457 = mul <8 x i32> %1451, %1450
  %1458 = mul <8 x i32> %1452, %1457
  %1459 = mul <8 x i32> %1453, %1458
  %1460 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1459)
  %1461 = icmp eq i64 %1424, %1428
  br i1 %1461, label %1474, label %1462

1462:                                             ; preds = %1415, %1456
  %1463 = phi i64 [ %1418, %1415 ], [ %1429, %1456 ]
  %1464 = phi i32 [ 1, %1415 ], [ %1460, %1456 ]
  br label %1465

1465:                                             ; preds = %1462, %1465
  %1466 = phi i64 [ %1471, %1465 ], [ %1463, %1462 ]
  %1467 = phi i32 [ %1470, %1465 ], [ %1464, %1462 ]
  %1468 = getelementptr inbounds i32, ptr %11, i64 %1466
  %1469 = load i32, ptr %1468, align 4, !tbaa !5
  %1470 = mul nsw i32 %1469, %1467
  %1471 = add nsw i64 %1466, -1
  %1472 = trunc i64 %1466 to i32
  %1473 = icmp sgt i32 %1472, 0
  br i1 %1473, label %1465, label %1474, !llvm.loop !1170

1474:                                             ; preds = %1465, %1456
  %1475 = phi i32 [ %1460, %1456 ], [ %1470, %1465 ]
  %1476 = and i64 %1425, 4294967295
  %1477 = getelementptr inbounds i32, ptr %6, i64 %1476
  %1478 = load i32, ptr %1477, align 4, !tbaa !5
  %1479 = mul nsw i32 %1478, %1475
  %1480 = add nsw i32 %1479, %1419
  %1481 = icmp sgt i64 %1417, 2
  %1482 = add nsw i64 %1418, -1
  %1483 = add i32 %1416, 1
  br i1 %1481, label %1415, label %1484, !llvm.loop !1171

1484:                                             ; preds = %1474, %1412
  %1485 = phi i32 [ %1414, %1412 ], [ %1480, %1474 ]
  %1486 = icmp slt i32 %1485, %5
  br i1 %1486, label %1489, label %1487

1487:                                             ; preds = %1484
  %1488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

1489:                                             ; preds = %1484
  %1490 = sext i32 %1485 to i64
  %1491 = getelementptr inbounds float, ptr %1241, i64 %1490
  %1492 = load float, ptr %1491, align 4, !tbaa !162
  %1493 = fptosi float %1492 to i8
  %1494 = load i8, ptr %1243, align 1, !tbaa !11
  %1495 = mul i8 %1493, %1493
  %1496 = add i8 %1495, %1494
  store i8 %1496, ptr %1243, align 1, !tbaa !11
  %1497 = add nuw nsw i32 %1413, 1
  br i1 %1258, label %1498, label %1548

1498:                                             ; preds = %1489
  %1499 = load i32, ptr %4, align 4, !tbaa !5
  %1500 = load i32, ptr %12, align 4, !tbaa !5
  %1501 = add nsw i32 %1500, -1
  %1502 = icmp slt i32 %1499, %1501
  br i1 %1502, label %1525, label %1503

1503:                                             ; preds = %1498
  %1504 = icmp eq i32 %1499, %1501
  br i1 %1504, label %1505, label %1541

1505:                                             ; preds = %1503
  store i32 0, ptr %4, align 4, !tbaa !5
  %1506 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1506, ptr %6, align 4, !tbaa !5
  br i1 %1263, label %1548, label %1507

1507:                                             ; preds = %1505, %1535
  %1508 = phi i64 [ %1539, %1535 ], [ 1, %1505 ]
  %1509 = getelementptr inbounds i32, ptr %4, i64 %1508
  %1510 = load i32, ptr %1509, align 4, !tbaa !5
  %1511 = getelementptr inbounds i32, ptr %12, i64 %1508
  %1512 = load i32, ptr %1511, align 4, !tbaa !5
  %1513 = add nsw i32 %1512, -1
  %1514 = icmp slt i32 %1510, %1513
  br i1 %1514, label %1515, label %1533

1515:                                             ; preds = %1507
  br i1 %1502, label %1525, label %1516

1516:                                             ; preds = %1515
  %1517 = shl i64 %1508, 32
  %1518 = add i64 %1517, -4294967296
  %1519 = ashr exact i64 %1518, 32
  %1520 = getelementptr inbounds i32, ptr %7, i64 %1519
  %1521 = load i32, ptr %1520, align 4, !tbaa !5
  %1522 = getelementptr inbounds i32, ptr %6, i64 %1508
  %1523 = load i32, ptr %1522, align 4, !tbaa !5
  %1524 = add nsw i32 %1523, %1521
  store i32 %1524, ptr %1522, align 4, !tbaa !5
  br label %1543

1525:                                             ; preds = %1498, %1515
  %1526 = phi i32 [ %1510, %1515 ], [ %1499, %1498 ]
  %1527 = phi ptr [ %1509, %1515 ], [ %4, %1498 ]
  %1528 = phi i64 [ %1508, %1515 ], [ 0, %1498 ]
  %1529 = add nsw i32 %1526, 1
  store i32 %1529, ptr %1527, align 4, !tbaa !5
  %1530 = getelementptr inbounds i32, ptr %7, i64 %1528
  %1531 = load i32, ptr %1530, align 4, !tbaa !5
  %1532 = getelementptr inbounds i32, ptr %6, i64 %1528
  br label %1543

1533:                                             ; preds = %1507
  %1534 = icmp eq i32 %1510, %1513
  br i1 %1534, label %1535, label %1541

1535:                                             ; preds = %1533
  store i32 0, ptr %1509, align 4, !tbaa !5
  %1536 = getelementptr inbounds i32, ptr %8, i64 %1508
  %1537 = load i32, ptr %1536, align 4, !tbaa !5
  %1538 = getelementptr inbounds i32, ptr %6, i64 %1508
  store i32 %1537, ptr %1538, align 4, !tbaa !5
  %1539 = add nuw nsw i64 %1508, 1
  %1540 = icmp eq i64 %1539, %1261
  br i1 %1540, label %1548, label %1507, !llvm.loop !1172

1541:                                             ; preds = %1503, %1533
  %1542 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

1543:                                             ; preds = %1516, %1525
  %1544 = phi ptr [ %1532, %1525 ], [ %1509, %1516 ]
  %1545 = phi i32 [ %1531, %1525 ], [ 1, %1516 ]
  %1546 = load i32, ptr %1544, align 4, !tbaa !5
  %1547 = add nsw i32 %1546, %1545
  store i32 %1547, ptr %1544, align 4, !tbaa !5
  br label %1548

1548:                                             ; preds = %1535, %1543, %1505, %1489
  %1549 = icmp eq i32 %1497, %5
  br i1 %1549, label %5496, label %1412, !llvm.loop !1173

1550:                                             ; preds = %1249
  %1551 = getelementptr inbounds i32, ptr %3, i64 %19
  %1552 = load i32, ptr %1551, align 4, !tbaa !5
  %1553 = icmp eq i32 %1552, 0
  %1554 = icmp sgt i32 %5, 0
  br i1 %1553, label %1564, label %1555

1555:                                             ; preds = %1550
  br i1 %1554, label %1556, label %5496

1556:                                             ; preds = %1555
  %1557 = icmp sgt i32 %13, 1
  %1558 = icmp sgt i32 %13, 0
  %1559 = add i32 %13, -2
  %1560 = zext i32 %1559 to i64
  %1561 = zext i32 %13 to i64
  %1562 = add nuw i32 %5, 1
  %1563 = icmp eq i32 %13, 1
  br label %1706

1564:                                             ; preds = %1550
  br i1 %1554, label %1565, label %5496

1565:                                             ; preds = %1564
  %1566 = icmp sgt i32 %13, 1
  %1567 = icmp sgt i32 %13, 0
  %1568 = add i32 %13, -2
  %1569 = zext i32 %1568 to i64
  %1570 = zext i32 %13 to i64
  %1571 = add nuw i32 %5, 1
  %1572 = icmp eq i32 %13, 1
  br label %1573

1573:                                             ; preds = %1565, %1704
  %1574 = phi i32 [ 0, %1565 ], [ %1656, %1704 ]
  %1575 = phi double [ 0.000000e+00, %1565 ], [ %1655, %1704 ]
  %1576 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1566, label %1577, label %1646

1577:                                             ; preds = %1573, %1636
  %1578 = phi i32 [ %1645, %1636 ], [ 0, %1573 ]
  %1579 = phi i64 [ %1587, %1636 ], [ %1570, %1573 ]
  %1580 = phi i64 [ %1644, %1636 ], [ %1569, %1573 ]
  %1581 = phi i32 [ %1642, %1636 ], [ %1576, %1573 ]
  %1582 = sub i32 %1568, %1578
  %1583 = tail call i32 @llvm.smin.i32(i32 %1582, i32 0)
  %1584 = sub i32 %1582, %1583
  %1585 = zext i32 %1584 to i64
  %1586 = add nuw nsw i64 %1585, 1
  %1587 = add nsw i64 %1579, -1
  %1588 = icmp ult i32 %1584, 31
  br i1 %1588, label %1624, label %1589

1589:                                             ; preds = %1577
  %1590 = and i64 %1586, 8589934560
  %1591 = sub i64 %1580, %1590
  br label %1592

1592:                                             ; preds = %1592, %1589
  %1593 = phi i64 [ 0, %1589 ], [ %1616, %1592 ]
  %1594 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1612, %1592 ]
  %1595 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1613, %1592 ]
  %1596 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1614, %1592 ]
  %1597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1615, %1592 ]
  %1598 = sub i64 %1580, %1593
  %1599 = getelementptr inbounds i32, ptr %9, i64 %1598
  %1600 = getelementptr inbounds i32, ptr %1599, i64 -7
  %1601 = load <8 x i32>, ptr %1600, align 4, !tbaa !5
  %1602 = shufflevector <8 x i32> %1601, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1603 = getelementptr inbounds i32, ptr %1599, i64 -15
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = getelementptr inbounds i32, ptr %1599, i64 -23
  %1607 = load <8 x i32>, ptr %1606, align 4, !tbaa !5
  %1608 = shufflevector <8 x i32> %1607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1609 = getelementptr inbounds i32, ptr %1599, i64 -31
  %1610 = load <8 x i32>, ptr %1609, align 4, !tbaa !5
  %1611 = shufflevector <8 x i32> %1610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1612 = mul <8 x i32> %1602, %1594
  %1613 = mul <8 x i32> %1605, %1595
  %1614 = mul <8 x i32> %1608, %1596
  %1615 = mul <8 x i32> %1611, %1597
  %1616 = add nuw i64 %1593, 32
  %1617 = icmp eq i64 %1616, %1590
  br i1 %1617, label %1618, label %1592, !llvm.loop !1174

1618:                                             ; preds = %1592
  %1619 = mul <8 x i32> %1613, %1612
  %1620 = mul <8 x i32> %1614, %1619
  %1621 = mul <8 x i32> %1615, %1620
  %1622 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1621)
  %1623 = icmp eq i64 %1586, %1590
  br i1 %1623, label %1636, label %1624

1624:                                             ; preds = %1577, %1618
  %1625 = phi i64 [ %1580, %1577 ], [ %1591, %1618 ]
  %1626 = phi i32 [ 1, %1577 ], [ %1622, %1618 ]
  br label %1627

1627:                                             ; preds = %1624, %1627
  %1628 = phi i64 [ %1633, %1627 ], [ %1625, %1624 ]
  %1629 = phi i32 [ %1632, %1627 ], [ %1626, %1624 ]
  %1630 = getelementptr inbounds i32, ptr %9, i64 %1628
  %1631 = load i32, ptr %1630, align 4, !tbaa !5
  %1632 = mul nsw i32 %1631, %1629
  %1633 = add nsw i64 %1628, -1
  %1634 = trunc i64 %1628 to i32
  %1635 = icmp sgt i32 %1634, 0
  br i1 %1635, label %1627, label %1636, !llvm.loop !1175

1636:                                             ; preds = %1627, %1618
  %1637 = phi i32 [ %1622, %1618 ], [ %1632, %1627 ]
  %1638 = and i64 %1587, 4294967295
  %1639 = getelementptr inbounds i32, ptr %6, i64 %1638
  %1640 = load i32, ptr %1639, align 4, !tbaa !5
  %1641 = mul nsw i32 %1640, %1637
  %1642 = add nsw i32 %1641, %1581
  %1643 = icmp sgt i64 %1579, 2
  %1644 = add nsw i64 %1580, -1
  %1645 = add i32 %1578, 1
  br i1 %1643, label %1577, label %1646, !llvm.loop !1176

1646:                                             ; preds = %1636, %1573
  %1647 = phi i32 [ %1576, %1573 ], [ %1642, %1636 ]
  %1648 = sext i32 %1647 to i64
  %1649 = getelementptr inbounds float, ptr %1241, i64 %1648
  %1650 = load float, ptr %1649, align 4, !tbaa !162
  %1651 = fptosi float %1650 to i8
  %1652 = load i8, ptr %1243, align 1, !tbaa !11
  %1653 = mul i8 %1651, %1651
  %1654 = add i8 %1653, %1652
  store i8 %1654, ptr %1243, align 1, !tbaa !11
  %1655 = fadd fast double %1575, 1.000000e+00
  %1656 = add nuw nsw i32 %1574, 1
  br i1 %1567, label %1657, label %1704

1657:                                             ; preds = %1646
  %1658 = load i32, ptr %4, align 4, !tbaa !5
  %1659 = load i32, ptr %12, align 4, !tbaa !5
  %1660 = add nsw i32 %1659, -1
  %1661 = icmp slt i32 %1658, %1660
  br i1 %1661, label %1681, label %1662

1662:                                             ; preds = %1657
  %1663 = icmp eq i32 %1658, %1660
  br i1 %1663, label %1664, label %1697

1664:                                             ; preds = %1662
  store i32 0, ptr %4, align 4, !tbaa !5
  %1665 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1665, ptr %6, align 4, !tbaa !5
  br i1 %1572, label %1704, label %1666

1666:                                             ; preds = %1664, %1691
  %1667 = phi i64 [ %1695, %1691 ], [ 1, %1664 ]
  %1668 = getelementptr inbounds i32, ptr %4, i64 %1667
  %1669 = load i32, ptr %1668, align 4, !tbaa !5
  %1670 = getelementptr inbounds i32, ptr %12, i64 %1667
  %1671 = load i32, ptr %1670, align 4, !tbaa !5
  %1672 = add nsw i32 %1671, -1
  %1673 = icmp slt i32 %1669, %1672
  br i1 %1673, label %1674, label %1689

1674:                                             ; preds = %1666
  br i1 %1661, label %1681, label %1675

1675:                                             ; preds = %1674
  %1676 = getelementptr inbounds i32, ptr %7, i64 %1667
  %1677 = load i32, ptr %1676, align 4, !tbaa !5
  %1678 = getelementptr inbounds i32, ptr %6, i64 %1667
  %1679 = load i32, ptr %1678, align 4, !tbaa !5
  %1680 = add nsw i32 %1679, %1677
  store i32 %1680, ptr %1678, align 4, !tbaa !5
  br label %1699

1681:                                             ; preds = %1657, %1674
  %1682 = phi i32 [ %1669, %1674 ], [ %1658, %1657 ]
  %1683 = phi ptr [ %1668, %1674 ], [ %4, %1657 ]
  %1684 = phi i64 [ %1667, %1674 ], [ 0, %1657 ]
  %1685 = add nsw i32 %1682, 1
  store i32 %1685, ptr %1683, align 4, !tbaa !5
  %1686 = getelementptr inbounds i32, ptr %7, i64 %1684
  %1687 = load i32, ptr %1686, align 4, !tbaa !5
  %1688 = getelementptr inbounds i32, ptr %6, i64 %1684
  br label %1699

1689:                                             ; preds = %1666
  %1690 = icmp eq i32 %1669, %1672
  br i1 %1690, label %1691, label %1697

1691:                                             ; preds = %1689
  store i32 0, ptr %1668, align 4, !tbaa !5
  %1692 = getelementptr inbounds i32, ptr %8, i64 %1667
  %1693 = load i32, ptr %1692, align 4, !tbaa !5
  %1694 = getelementptr inbounds i32, ptr %6, i64 %1667
  store i32 %1693, ptr %1694, align 4, !tbaa !5
  %1695 = add nuw nsw i64 %1667, 1
  %1696 = icmp eq i64 %1695, %1570
  br i1 %1696, label %1704, label %1666, !llvm.loop !1177

1697:                                             ; preds = %1662, %1689
  %1698 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

1699:                                             ; preds = %1675, %1681
  %1700 = phi ptr [ %1688, %1681 ], [ %1668, %1675 ]
  %1701 = phi i32 [ %1687, %1681 ], [ 1, %1675 ]
  %1702 = load i32, ptr %1700, align 4, !tbaa !5
  %1703 = add nsw i32 %1702, %1701
  store i32 %1703, ptr %1700, align 4, !tbaa !5
  br label %1704

1704:                                             ; preds = %1691, %1699, %1664, %1646
  %1705 = icmp eq i32 %1656, %5
  br i1 %1705, label %5496, label %1573, !llvm.loop !1178

1706:                                             ; preds = %1556, %1842
  %1707 = phi i32 [ 0, %1556 ], [ %1791, %1842 ]
  %1708 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1557, label %1709, label %1778

1709:                                             ; preds = %1706, %1768
  %1710 = phi i32 [ %1777, %1768 ], [ 0, %1706 ]
  %1711 = phi i64 [ %1719, %1768 ], [ %1561, %1706 ]
  %1712 = phi i64 [ %1776, %1768 ], [ %1560, %1706 ]
  %1713 = phi i32 [ %1774, %1768 ], [ %1708, %1706 ]
  %1714 = sub i32 %1559, %1710
  %1715 = tail call i32 @llvm.smin.i32(i32 %1714, i32 0)
  %1716 = sub i32 %1714, %1715
  %1717 = zext i32 %1716 to i64
  %1718 = add nuw nsw i64 %1717, 1
  %1719 = add nsw i64 %1711, -1
  %1720 = icmp ult i32 %1716, 31
  br i1 %1720, label %1756, label %1721

1721:                                             ; preds = %1709
  %1722 = and i64 %1718, 8589934560
  %1723 = sub i64 %1712, %1722
  br label %1724

1724:                                             ; preds = %1724, %1721
  %1725 = phi i64 [ 0, %1721 ], [ %1748, %1724 ]
  %1726 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1744, %1724 ]
  %1727 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1745, %1724 ]
  %1728 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1746, %1724 ]
  %1729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1747, %1724 ]
  %1730 = sub i64 %1712, %1725
  %1731 = getelementptr inbounds i32, ptr %11, i64 %1730
  %1732 = getelementptr inbounds i32, ptr %1731, i64 -7
  %1733 = load <8 x i32>, ptr %1732, align 4, !tbaa !5
  %1734 = shufflevector <8 x i32> %1733, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1735 = getelementptr inbounds i32, ptr %1731, i64 -15
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = getelementptr inbounds i32, ptr %1731, i64 -23
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !5
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1731, i64 -31
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !5
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = mul <8 x i32> %1734, %1726
  %1745 = mul <8 x i32> %1737, %1727
  %1746 = mul <8 x i32> %1740, %1728
  %1747 = mul <8 x i32> %1743, %1729
  %1748 = add nuw i64 %1725, 32
  %1749 = icmp eq i64 %1748, %1722
  br i1 %1749, label %1750, label %1724, !llvm.loop !1179

1750:                                             ; preds = %1724
  %1751 = mul <8 x i32> %1745, %1744
  %1752 = mul <8 x i32> %1746, %1751
  %1753 = mul <8 x i32> %1747, %1752
  %1754 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1753)
  %1755 = icmp eq i64 %1718, %1722
  br i1 %1755, label %1768, label %1756

1756:                                             ; preds = %1709, %1750
  %1757 = phi i64 [ %1712, %1709 ], [ %1723, %1750 ]
  %1758 = phi i32 [ 1, %1709 ], [ %1754, %1750 ]
  br label %1759

1759:                                             ; preds = %1756, %1759
  %1760 = phi i64 [ %1765, %1759 ], [ %1757, %1756 ]
  %1761 = phi i32 [ %1764, %1759 ], [ %1758, %1756 ]
  %1762 = getelementptr inbounds i32, ptr %11, i64 %1760
  %1763 = load i32, ptr %1762, align 4, !tbaa !5
  %1764 = mul nsw i32 %1763, %1761
  %1765 = add nsw i64 %1760, -1
  %1766 = trunc i64 %1760 to i32
  %1767 = icmp sgt i32 %1766, 0
  br i1 %1767, label %1759, label %1768, !llvm.loop !1180

1768:                                             ; preds = %1759, %1750
  %1769 = phi i32 [ %1754, %1750 ], [ %1764, %1759 ]
  %1770 = and i64 %1719, 4294967295
  %1771 = getelementptr inbounds i32, ptr %6, i64 %1770
  %1772 = load i32, ptr %1771, align 4, !tbaa !5
  %1773 = mul nsw i32 %1772, %1769
  %1774 = add nsw i32 %1773, %1713
  %1775 = icmp sgt i64 %1711, 2
  %1776 = add nsw i64 %1712, -1
  %1777 = add i32 %1710, 1
  br i1 %1775, label %1709, label %1778, !llvm.loop !1181

1778:                                             ; preds = %1768, %1706
  %1779 = phi i32 [ %1708, %1706 ], [ %1774, %1768 ]
  %1780 = icmp slt i32 %1779, %5
  br i1 %1780, label %1783, label %1781

1781:                                             ; preds = %1778
  %1782 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

1783:                                             ; preds = %1778
  %1784 = sext i32 %1779 to i64
  %1785 = getelementptr inbounds float, ptr %1241, i64 %1784
  %1786 = load float, ptr %1785, align 4, !tbaa !162
  %1787 = fptosi float %1786 to i8
  %1788 = load i8, ptr %1243, align 1, !tbaa !11
  %1789 = mul i8 %1787, %1787
  %1790 = add i8 %1789, %1788
  store i8 %1790, ptr %1243, align 1, !tbaa !11
  %1791 = add nuw nsw i32 %1707, 1
  br i1 %1558, label %1792, label %1842

1792:                                             ; preds = %1783
  %1793 = load i32, ptr %4, align 4, !tbaa !5
  %1794 = load i32, ptr %12, align 4, !tbaa !5
  %1795 = add nsw i32 %1794, -1
  %1796 = icmp slt i32 %1793, %1795
  br i1 %1796, label %1819, label %1797

1797:                                             ; preds = %1792
  %1798 = icmp eq i32 %1793, %1795
  br i1 %1798, label %1799, label %1835

1799:                                             ; preds = %1797
  store i32 0, ptr %4, align 4, !tbaa !5
  %1800 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1800, ptr %6, align 4, !tbaa !5
  br i1 %1563, label %1842, label %1801

1801:                                             ; preds = %1799, %1829
  %1802 = phi i64 [ %1833, %1829 ], [ 1, %1799 ]
  %1803 = getelementptr inbounds i32, ptr %4, i64 %1802
  %1804 = load i32, ptr %1803, align 4, !tbaa !5
  %1805 = getelementptr inbounds i32, ptr %12, i64 %1802
  %1806 = load i32, ptr %1805, align 4, !tbaa !5
  %1807 = add nsw i32 %1806, -1
  %1808 = icmp slt i32 %1804, %1807
  br i1 %1808, label %1809, label %1827

1809:                                             ; preds = %1801
  br i1 %1796, label %1819, label %1810

1810:                                             ; preds = %1809
  %1811 = shl i64 %1802, 32
  %1812 = add i64 %1811, -4294967296
  %1813 = ashr exact i64 %1812, 32
  %1814 = getelementptr inbounds i32, ptr %7, i64 %1813
  %1815 = load i32, ptr %1814, align 4, !tbaa !5
  %1816 = getelementptr inbounds i32, ptr %6, i64 %1802
  %1817 = load i32, ptr %1816, align 4, !tbaa !5
  %1818 = add nsw i32 %1817, %1815
  store i32 %1818, ptr %1816, align 4, !tbaa !5
  br label %1837

1819:                                             ; preds = %1792, %1809
  %1820 = phi i32 [ %1804, %1809 ], [ %1793, %1792 ]
  %1821 = phi ptr [ %1803, %1809 ], [ %4, %1792 ]
  %1822 = phi i64 [ %1802, %1809 ], [ 0, %1792 ]
  %1823 = add nsw i32 %1820, 1
  store i32 %1823, ptr %1821, align 4, !tbaa !5
  %1824 = getelementptr inbounds i32, ptr %7, i64 %1822
  %1825 = load i32, ptr %1824, align 4, !tbaa !5
  %1826 = getelementptr inbounds i32, ptr %6, i64 %1822
  br label %1837

1827:                                             ; preds = %1801
  %1828 = icmp eq i32 %1804, %1807
  br i1 %1828, label %1829, label %1835

1829:                                             ; preds = %1827
  store i32 0, ptr %1803, align 4, !tbaa !5
  %1830 = getelementptr inbounds i32, ptr %8, i64 %1802
  %1831 = load i32, ptr %1830, align 4, !tbaa !5
  %1832 = getelementptr inbounds i32, ptr %6, i64 %1802
  store i32 %1831, ptr %1832, align 4, !tbaa !5
  %1833 = add nuw nsw i64 %1802, 1
  %1834 = icmp eq i64 %1833, %1561
  br i1 %1834, label %1842, label %1801, !llvm.loop !1182

1835:                                             ; preds = %1797, %1827
  %1836 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

1837:                                             ; preds = %1810, %1819
  %1838 = phi ptr [ %1826, %1819 ], [ %1803, %1810 ]
  %1839 = phi i32 [ %1825, %1819 ], [ 1, %1810 ]
  %1840 = load i32, ptr %1838, align 4, !tbaa !5
  %1841 = add nsw i32 %1840, %1839
  store i32 %1841, ptr %1838, align 4, !tbaa !5
  br label %1842

1842:                                             ; preds = %1829, %1837, %1799, %1783
  %1843 = icmp eq i32 %1791, %5
  br i1 %1843, label %5496, label %1706, !llvm.loop !1183

1844:                                             ; preds = %1249
  %1845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2004, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5496

1846:                                             ; preds = %18
  %1847 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1848 = load ptr, ptr %1847, align 8, !tbaa !9
  %1849 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1850 = load ptr, ptr %1849, align 8, !tbaa !9
  store i16 0, ptr %1850, align 2, !tbaa !78
  %1851 = icmp eq i32 %13, 0
  br i1 %1851, label %1852, label %1856

1852:                                             ; preds = %1846
  %1853 = load float, ptr %1848, align 4, !tbaa !162
  %1854 = fptosi float %1853 to i16
  %1855 = mul i16 %1854, %1854
  store i16 %1855, ptr %1850, align 2, !tbaa !78
  br label %5496

1856:                                             ; preds = %1846
  switch i32 %1, label %2455 [
    i32 1, label %1857
    i32 0, label %2161
  ]

1857:                                             ; preds = %1856
  %1858 = getelementptr inbounds i32, ptr %3, i64 %19
  %1859 = load i32, ptr %1858, align 4, !tbaa !5
  %1860 = icmp eq i32 %1859, 0
  %1861 = icmp sgt i32 %5, 0
  br i1 %1860, label %1871, label %1862

1862:                                             ; preds = %1857
  br i1 %1861, label %1863, label %5496

1863:                                             ; preds = %1862
  %1864 = icmp sgt i32 %13, 1
  %1865 = icmp sgt i32 %13, 0
  %1866 = add i32 %13, -2
  %1867 = zext i32 %1866 to i64
  %1868 = zext i32 %13 to i64
  %1869 = add nuw i32 %5, 1
  %1870 = icmp eq i32 %13, 1
  br label %2019

1871:                                             ; preds = %1857
  br i1 %1861, label %1872, label %5496

1872:                                             ; preds = %1871
  %1873 = icmp sgt i32 %13, 1
  %1874 = icmp sgt i32 %13, 0
  %1875 = add i32 %13, -2
  %1876 = zext i32 %1875 to i64
  %1877 = zext i32 %13 to i64
  %1878 = add nuw i32 %5, 1
  %1879 = icmp eq i32 %13, 1
  br label %1880

1880:                                             ; preds = %1872, %2017
  %1881 = phi i16 [ 0, %1872 ], [ %1967, %2017 ]
  %1882 = phi i32 [ 0, %1872 ], [ %1969, %2017 ]
  %1883 = phi double [ 0.000000e+00, %1872 ], [ %1968, %2017 ]
  %1884 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1873, label %1885, label %1954

1885:                                             ; preds = %1880, %1944
  %1886 = phi i32 [ %1953, %1944 ], [ 0, %1880 ]
  %1887 = phi i64 [ %1895, %1944 ], [ %1877, %1880 ]
  %1888 = phi i64 [ %1952, %1944 ], [ %1876, %1880 ]
  %1889 = phi i32 [ %1950, %1944 ], [ %1884, %1880 ]
  %1890 = sub i32 %1875, %1886
  %1891 = tail call i32 @llvm.smin.i32(i32 %1890, i32 0)
  %1892 = sub i32 %1890, %1891
  %1893 = zext i32 %1892 to i64
  %1894 = add nuw nsw i64 %1893, 1
  %1895 = add nsw i64 %1887, -1
  %1896 = icmp ult i32 %1892, 31
  br i1 %1896, label %1932, label %1897

1897:                                             ; preds = %1885
  %1898 = and i64 %1894, 8589934560
  %1899 = sub i64 %1888, %1898
  br label %1900

1900:                                             ; preds = %1900, %1897
  %1901 = phi i64 [ 0, %1897 ], [ %1924, %1900 ]
  %1902 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1920, %1900 ]
  %1903 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1921, %1900 ]
  %1904 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1922, %1900 ]
  %1905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1923, %1900 ]
  %1906 = sub i64 %1888, %1901
  %1907 = getelementptr inbounds i32, ptr %9, i64 %1906
  %1908 = getelementptr inbounds i32, ptr %1907, i64 -7
  %1909 = load <8 x i32>, ptr %1908, align 4, !tbaa !5
  %1910 = shufflevector <8 x i32> %1909, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1911 = getelementptr inbounds i32, ptr %1907, i64 -15
  %1912 = load <8 x i32>, ptr %1911, align 4, !tbaa !5
  %1913 = shufflevector <8 x i32> %1912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1914 = getelementptr inbounds i32, ptr %1907, i64 -23
  %1915 = load <8 x i32>, ptr %1914, align 4, !tbaa !5
  %1916 = shufflevector <8 x i32> %1915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1917 = getelementptr inbounds i32, ptr %1907, i64 -31
  %1918 = load <8 x i32>, ptr %1917, align 4, !tbaa !5
  %1919 = shufflevector <8 x i32> %1918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1920 = mul <8 x i32> %1910, %1902
  %1921 = mul <8 x i32> %1913, %1903
  %1922 = mul <8 x i32> %1916, %1904
  %1923 = mul <8 x i32> %1919, %1905
  %1924 = add nuw i64 %1901, 32
  %1925 = icmp eq i64 %1924, %1898
  br i1 %1925, label %1926, label %1900, !llvm.loop !1184

1926:                                             ; preds = %1900
  %1927 = mul <8 x i32> %1921, %1920
  %1928 = mul <8 x i32> %1922, %1927
  %1929 = mul <8 x i32> %1923, %1928
  %1930 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1929)
  %1931 = icmp eq i64 %1894, %1898
  br i1 %1931, label %1944, label %1932

1932:                                             ; preds = %1885, %1926
  %1933 = phi i64 [ %1888, %1885 ], [ %1899, %1926 ]
  %1934 = phi i32 [ 1, %1885 ], [ %1930, %1926 ]
  br label %1935

1935:                                             ; preds = %1932, %1935
  %1936 = phi i64 [ %1941, %1935 ], [ %1933, %1932 ]
  %1937 = phi i32 [ %1940, %1935 ], [ %1934, %1932 ]
  %1938 = getelementptr inbounds i32, ptr %9, i64 %1936
  %1939 = load i32, ptr %1938, align 4, !tbaa !5
  %1940 = mul nsw i32 %1939, %1937
  %1941 = add nsw i64 %1936, -1
  %1942 = trunc i64 %1936 to i32
  %1943 = icmp sgt i32 %1942, 0
  br i1 %1943, label %1935, label %1944, !llvm.loop !1185

1944:                                             ; preds = %1935, %1926
  %1945 = phi i32 [ %1930, %1926 ], [ %1940, %1935 ]
  %1946 = and i64 %1895, 4294967295
  %1947 = getelementptr inbounds i32, ptr %6, i64 %1946
  %1948 = load i32, ptr %1947, align 4, !tbaa !5
  %1949 = mul nsw i32 %1948, %1945
  %1950 = add nsw i32 %1949, %1889
  %1951 = icmp sgt i64 %1887, 2
  %1952 = add nsw i64 %1888, -1
  %1953 = add i32 %1886, 1
  br i1 %1951, label %1885, label %1954, !llvm.loop !1186

1954:                                             ; preds = %1944, %1880
  %1955 = phi i32 [ %1884, %1880 ], [ %1950, %1944 ]
  %1956 = sext i32 %1955 to i64
  %1957 = getelementptr inbounds double, ptr %2, i64 %1956
  %1958 = load double, ptr %1957, align 8, !tbaa !18
  %1959 = getelementptr inbounds float, ptr %1848, i64 %1956
  %1960 = load float, ptr %1959, align 4, !tbaa !162
  %1961 = fptosi float %1960 to i16
  %1962 = sitofp i16 %1881 to double
  %1963 = sitofp i16 %1961 to double
  %1964 = fmul fast double %1958, %1963
  %1965 = fmul fast double %1964, %1964
  %1966 = fadd fast double %1965, %1962
  %1967 = fptosi double %1966 to i16
  %1968 = fadd fast double %1958, %1883
  %1969 = add nuw nsw i32 %1882, 1
  br i1 %1874, label %1970, label %2017

1970:                                             ; preds = %1954
  %1971 = load i32, ptr %4, align 4, !tbaa !5
  %1972 = load i32, ptr %12, align 4, !tbaa !5
  %1973 = add nsw i32 %1972, -1
  %1974 = icmp slt i32 %1971, %1973
  br i1 %1974, label %1994, label %1975

1975:                                             ; preds = %1970
  %1976 = icmp eq i32 %1971, %1973
  br i1 %1976, label %1977, label %2010

1977:                                             ; preds = %1975
  store i32 0, ptr %4, align 4, !tbaa !5
  %1978 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1978, ptr %6, align 4, !tbaa !5
  br i1 %1879, label %2017, label %1979

1979:                                             ; preds = %1977, %2004
  %1980 = phi i64 [ %2008, %2004 ], [ 1, %1977 ]
  %1981 = getelementptr inbounds i32, ptr %4, i64 %1980
  %1982 = load i32, ptr %1981, align 4, !tbaa !5
  %1983 = getelementptr inbounds i32, ptr %12, i64 %1980
  %1984 = load i32, ptr %1983, align 4, !tbaa !5
  %1985 = add nsw i32 %1984, -1
  %1986 = icmp slt i32 %1982, %1985
  br i1 %1986, label %1987, label %2002

1987:                                             ; preds = %1979
  br i1 %1974, label %1994, label %1988

1988:                                             ; preds = %1987
  %1989 = getelementptr inbounds i32, ptr %7, i64 %1980
  %1990 = load i32, ptr %1989, align 4, !tbaa !5
  %1991 = getelementptr inbounds i32, ptr %6, i64 %1980
  %1992 = load i32, ptr %1991, align 4, !tbaa !5
  %1993 = add nsw i32 %1992, %1990
  store i32 %1993, ptr %1991, align 4, !tbaa !5
  br label %2012

1994:                                             ; preds = %1970, %1987
  %1995 = phi i32 [ %1982, %1987 ], [ %1971, %1970 ]
  %1996 = phi ptr [ %1981, %1987 ], [ %4, %1970 ]
  %1997 = phi i64 [ %1980, %1987 ], [ 0, %1970 ]
  %1998 = add nsw i32 %1995, 1
  store i32 %1998, ptr %1996, align 4, !tbaa !5
  %1999 = getelementptr inbounds i32, ptr %7, i64 %1997
  %2000 = load i32, ptr %1999, align 4, !tbaa !5
  %2001 = getelementptr inbounds i32, ptr %6, i64 %1997
  br label %2012

2002:                                             ; preds = %1979
  %2003 = icmp eq i32 %1982, %1985
  br i1 %2003, label %2004, label %2010

2004:                                             ; preds = %2002
  store i32 0, ptr %1981, align 4, !tbaa !5
  %2005 = getelementptr inbounds i32, ptr %8, i64 %1980
  %2006 = load i32, ptr %2005, align 4, !tbaa !5
  %2007 = getelementptr inbounds i32, ptr %6, i64 %1980
  store i32 %2006, ptr %2007, align 4, !tbaa !5
  %2008 = add nuw nsw i64 %1980, 1
  %2009 = icmp eq i64 %2008, %1877
  br i1 %2009, label %2017, label %1979, !llvm.loop !1187

2010:                                             ; preds = %1975, %2002
  store i16 %1967, ptr %1850, align 2, !tbaa !78
  %2011 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

2012:                                             ; preds = %1988, %1994
  %2013 = phi ptr [ %2001, %1994 ], [ %1981, %1988 ]
  %2014 = phi i32 [ %2000, %1994 ], [ 1, %1988 ]
  %2015 = load i32, ptr %2013, align 4, !tbaa !5
  %2016 = add nsw i32 %2015, %2014
  store i32 %2016, ptr %2013, align 4, !tbaa !5
  br label %2017

2017:                                             ; preds = %2004, %2012, %1977, %1954
  %2018 = icmp eq i32 %1969, %5
  br i1 %2018, label %5490, label %1880, !llvm.loop !1188

2019:                                             ; preds = %1863, %2159
  %2020 = phi i64 [ 0, %1863 ], [ %2106, %2159 ]
  %2021 = phi i32 [ 0, %1863 ], [ %2108, %2159 ]
  %2022 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1864, label %2023, label %2092

2023:                                             ; preds = %2019, %2082
  %2024 = phi i32 [ %2091, %2082 ], [ 0, %2019 ]
  %2025 = phi i64 [ %2033, %2082 ], [ %1868, %2019 ]
  %2026 = phi i64 [ %2090, %2082 ], [ %1867, %2019 ]
  %2027 = phi i32 [ %2088, %2082 ], [ %2022, %2019 ]
  %2028 = sub i32 %1866, %2024
  %2029 = tail call i32 @llvm.smin.i32(i32 %2028, i32 0)
  %2030 = sub i32 %2028, %2029
  %2031 = zext i32 %2030 to i64
  %2032 = add nuw nsw i64 %2031, 1
  %2033 = add nsw i64 %2025, -1
  %2034 = icmp ult i32 %2030, 31
  br i1 %2034, label %2070, label %2035

2035:                                             ; preds = %2023
  %2036 = and i64 %2032, 8589934560
  %2037 = sub i64 %2026, %2036
  br label %2038

2038:                                             ; preds = %2038, %2035
  %2039 = phi i64 [ 0, %2035 ], [ %2062, %2038 ]
  %2040 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2058, %2038 ]
  %2041 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2059, %2038 ]
  %2042 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2060, %2038 ]
  %2043 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2061, %2038 ]
  %2044 = sub i64 %2026, %2039
  %2045 = getelementptr inbounds i32, ptr %11, i64 %2044
  %2046 = getelementptr inbounds i32, ptr %2045, i64 -7
  %2047 = load <8 x i32>, ptr %2046, align 4, !tbaa !5
  %2048 = shufflevector <8 x i32> %2047, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2049 = getelementptr inbounds i32, ptr %2045, i64 -15
  %2050 = load <8 x i32>, ptr %2049, align 4, !tbaa !5
  %2051 = shufflevector <8 x i32> %2050, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2052 = getelementptr inbounds i32, ptr %2045, i64 -23
  %2053 = load <8 x i32>, ptr %2052, align 4, !tbaa !5
  %2054 = shufflevector <8 x i32> %2053, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2055 = getelementptr inbounds i32, ptr %2045, i64 -31
  %2056 = load <8 x i32>, ptr %2055, align 4, !tbaa !5
  %2057 = shufflevector <8 x i32> %2056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2058 = mul <8 x i32> %2048, %2040
  %2059 = mul <8 x i32> %2051, %2041
  %2060 = mul <8 x i32> %2054, %2042
  %2061 = mul <8 x i32> %2057, %2043
  %2062 = add nuw i64 %2039, 32
  %2063 = icmp eq i64 %2062, %2036
  br i1 %2063, label %2064, label %2038, !llvm.loop !1189

2064:                                             ; preds = %2038
  %2065 = mul <8 x i32> %2059, %2058
  %2066 = mul <8 x i32> %2060, %2065
  %2067 = mul <8 x i32> %2061, %2066
  %2068 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2067)
  %2069 = icmp eq i64 %2032, %2036
  br i1 %2069, label %2082, label %2070

2070:                                             ; preds = %2023, %2064
  %2071 = phi i64 [ %2026, %2023 ], [ %2037, %2064 ]
  %2072 = phi i32 [ 1, %2023 ], [ %2068, %2064 ]
  br label %2073

2073:                                             ; preds = %2070, %2073
  %2074 = phi i64 [ %2079, %2073 ], [ %2071, %2070 ]
  %2075 = phi i32 [ %2078, %2073 ], [ %2072, %2070 ]
  %2076 = getelementptr inbounds i32, ptr %11, i64 %2074
  %2077 = load i32, ptr %2076, align 4, !tbaa !5
  %2078 = mul nsw i32 %2077, %2075
  %2079 = add nsw i64 %2074, -1
  %2080 = trunc i64 %2074 to i32
  %2081 = icmp sgt i32 %2080, 0
  br i1 %2081, label %2073, label %2082, !llvm.loop !1190

2082:                                             ; preds = %2073, %2064
  %2083 = phi i32 [ %2068, %2064 ], [ %2078, %2073 ]
  %2084 = and i64 %2033, 4294967295
  %2085 = getelementptr inbounds i32, ptr %6, i64 %2084
  %2086 = load i32, ptr %2085, align 4, !tbaa !5
  %2087 = mul nsw i32 %2086, %2083
  %2088 = add nsw i32 %2087, %2027
  %2089 = icmp sgt i64 %2025, 2
  %2090 = add nsw i64 %2026, -1
  %2091 = add i32 %2024, 1
  br i1 %2089, label %2023, label %2092, !llvm.loop !1191

2092:                                             ; preds = %2082, %2019
  %2093 = phi i32 [ %2022, %2019 ], [ %2088, %2082 ]
  %2094 = icmp slt i32 %2093, %5
  br i1 %2094, label %2097, label %2095

2095:                                             ; preds = %2092
  %2096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

2097:                                             ; preds = %2092
  %2098 = sext i32 %2093 to i64
  %2099 = getelementptr inbounds float, ptr %1848, i64 %2098
  %2100 = load float, ptr %2099, align 4, !tbaa !162
  %2101 = fptosi float %2100 to i16
  %2102 = shl i64 %2020, 48
  %2103 = ashr exact i64 %2102, 48
  %2104 = sext i16 %2101 to i64
  %2105 = mul nsw i64 %2104, %2104
  %2106 = add nsw i64 %2105, %2103
  %2107 = trunc i64 %2106 to i16
  store i16 %2107, ptr %1850, align 2, !tbaa !78
  %2108 = add nuw nsw i32 %2021, 1
  br i1 %1865, label %2109, label %2159

2109:                                             ; preds = %2097
  %2110 = load i32, ptr %4, align 4, !tbaa !5
  %2111 = load i32, ptr %12, align 4, !tbaa !5
  %2112 = add nsw i32 %2111, -1
  %2113 = icmp slt i32 %2110, %2112
  br i1 %2113, label %2136, label %2114

2114:                                             ; preds = %2109
  %2115 = icmp eq i32 %2110, %2112
  br i1 %2115, label %2116, label %2152

2116:                                             ; preds = %2114
  store i32 0, ptr %4, align 4, !tbaa !5
  %2117 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2117, ptr %6, align 4, !tbaa !5
  br i1 %1870, label %2159, label %2118

2118:                                             ; preds = %2116, %2146
  %2119 = phi i64 [ %2150, %2146 ], [ 1, %2116 ]
  %2120 = getelementptr inbounds i32, ptr %4, i64 %2119
  %2121 = load i32, ptr %2120, align 4, !tbaa !5
  %2122 = getelementptr inbounds i32, ptr %12, i64 %2119
  %2123 = load i32, ptr %2122, align 4, !tbaa !5
  %2124 = add nsw i32 %2123, -1
  %2125 = icmp slt i32 %2121, %2124
  br i1 %2125, label %2126, label %2144

2126:                                             ; preds = %2118
  br i1 %2113, label %2136, label %2127

2127:                                             ; preds = %2126
  %2128 = shl i64 %2119, 32
  %2129 = add i64 %2128, -4294967296
  %2130 = ashr exact i64 %2129, 32
  %2131 = getelementptr inbounds i32, ptr %7, i64 %2130
  %2132 = load i32, ptr %2131, align 4, !tbaa !5
  %2133 = getelementptr inbounds i32, ptr %6, i64 %2119
  %2134 = load i32, ptr %2133, align 4, !tbaa !5
  %2135 = add nsw i32 %2134, %2132
  store i32 %2135, ptr %2133, align 4, !tbaa !5
  br label %2154

2136:                                             ; preds = %2109, %2126
  %2137 = phi i32 [ %2121, %2126 ], [ %2110, %2109 ]
  %2138 = phi ptr [ %2120, %2126 ], [ %4, %2109 ]
  %2139 = phi i64 [ %2119, %2126 ], [ 0, %2109 ]
  %2140 = add nsw i32 %2137, 1
  store i32 %2140, ptr %2138, align 4, !tbaa !5
  %2141 = getelementptr inbounds i32, ptr %7, i64 %2139
  %2142 = load i32, ptr %2141, align 4, !tbaa !5
  %2143 = getelementptr inbounds i32, ptr %6, i64 %2139
  br label %2154

2144:                                             ; preds = %2118
  %2145 = icmp eq i32 %2121, %2124
  br i1 %2145, label %2146, label %2152

2146:                                             ; preds = %2144
  store i32 0, ptr %2120, align 4, !tbaa !5
  %2147 = getelementptr inbounds i32, ptr %8, i64 %2119
  %2148 = load i32, ptr %2147, align 4, !tbaa !5
  %2149 = getelementptr inbounds i32, ptr %6, i64 %2119
  store i32 %2148, ptr %2149, align 4, !tbaa !5
  %2150 = add nuw nsw i64 %2119, 1
  %2151 = icmp eq i64 %2150, %1868
  br i1 %2151, label %2159, label %2118, !llvm.loop !1192

2152:                                             ; preds = %2114, %2144
  %2153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

2154:                                             ; preds = %2127, %2136
  %2155 = phi ptr [ %2143, %2136 ], [ %2120, %2127 ]
  %2156 = phi i32 [ %2142, %2136 ], [ 1, %2127 ]
  %2157 = load i32, ptr %2155, align 4, !tbaa !5
  %2158 = add nsw i32 %2157, %2156
  store i32 %2158, ptr %2155, align 4, !tbaa !5
  br label %2159

2159:                                             ; preds = %2146, %2154, %2116, %2097
  %2160 = icmp eq i32 %2108, %5
  br i1 %2160, label %5496, label %2019, !llvm.loop !1193

2161:                                             ; preds = %1856
  %2162 = getelementptr inbounds i32, ptr %3, i64 %19
  %2163 = load i32, ptr %2162, align 4, !tbaa !5
  %2164 = icmp eq i32 %2163, 0
  %2165 = icmp sgt i32 %5, 0
  br i1 %2164, label %2175, label %2166

2166:                                             ; preds = %2161
  br i1 %2165, label %2167, label %5496

2167:                                             ; preds = %2166
  %2168 = icmp sgt i32 %13, 1
  %2169 = icmp sgt i32 %13, 0
  %2170 = add i32 %13, -2
  %2171 = zext i32 %2170 to i64
  %2172 = zext i32 %13 to i64
  %2173 = add nuw i32 %5, 1
  %2174 = icmp eq i32 %13, 1
  br label %2317

2175:                                             ; preds = %2161
  br i1 %2165, label %2176, label %5496

2176:                                             ; preds = %2175
  %2177 = icmp sgt i32 %13, 1
  %2178 = icmp sgt i32 %13, 0
  %2179 = add i32 %13, -2
  %2180 = zext i32 %2179 to i64
  %2181 = zext i32 %13 to i64
  %2182 = add nuw i32 %5, 1
  %2183 = icmp eq i32 %13, 1
  br label %2184

2184:                                             ; preds = %2176, %2315
  %2185 = phi i16 [ 0, %2176 ], [ %2265, %2315 ]
  %2186 = phi i32 [ 0, %2176 ], [ %2267, %2315 ]
  %2187 = phi double [ 0.000000e+00, %2176 ], [ %2266, %2315 ]
  %2188 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2177, label %2189, label %2258

2189:                                             ; preds = %2184, %2248
  %2190 = phi i32 [ %2257, %2248 ], [ 0, %2184 ]
  %2191 = phi i64 [ %2199, %2248 ], [ %2181, %2184 ]
  %2192 = phi i64 [ %2256, %2248 ], [ %2180, %2184 ]
  %2193 = phi i32 [ %2254, %2248 ], [ %2188, %2184 ]
  %2194 = sub i32 %2179, %2190
  %2195 = tail call i32 @llvm.smin.i32(i32 %2194, i32 0)
  %2196 = sub i32 %2194, %2195
  %2197 = zext i32 %2196 to i64
  %2198 = add nuw nsw i64 %2197, 1
  %2199 = add nsw i64 %2191, -1
  %2200 = icmp ult i32 %2196, 31
  br i1 %2200, label %2236, label %2201

2201:                                             ; preds = %2189
  %2202 = and i64 %2198, 8589934560
  %2203 = sub i64 %2192, %2202
  br label %2204

2204:                                             ; preds = %2204, %2201
  %2205 = phi i64 [ 0, %2201 ], [ %2228, %2204 ]
  %2206 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2201 ], [ %2224, %2204 ]
  %2207 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2201 ], [ %2225, %2204 ]
  %2208 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2201 ], [ %2226, %2204 ]
  %2209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2201 ], [ %2227, %2204 ]
  %2210 = sub i64 %2192, %2205
  %2211 = getelementptr inbounds i32, ptr %9, i64 %2210
  %2212 = getelementptr inbounds i32, ptr %2211, i64 -7
  %2213 = load <8 x i32>, ptr %2212, align 4, !tbaa !5
  %2214 = shufflevector <8 x i32> %2213, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2215 = getelementptr inbounds i32, ptr %2211, i64 -15
  %2216 = load <8 x i32>, ptr %2215, align 4, !tbaa !5
  %2217 = shufflevector <8 x i32> %2216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2218 = getelementptr inbounds i32, ptr %2211, i64 -23
  %2219 = load <8 x i32>, ptr %2218, align 4, !tbaa !5
  %2220 = shufflevector <8 x i32> %2219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2221 = getelementptr inbounds i32, ptr %2211, i64 -31
  %2222 = load <8 x i32>, ptr %2221, align 4, !tbaa !5
  %2223 = shufflevector <8 x i32> %2222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2224 = mul <8 x i32> %2214, %2206
  %2225 = mul <8 x i32> %2217, %2207
  %2226 = mul <8 x i32> %2220, %2208
  %2227 = mul <8 x i32> %2223, %2209
  %2228 = add nuw i64 %2205, 32
  %2229 = icmp eq i64 %2228, %2202
  br i1 %2229, label %2230, label %2204, !llvm.loop !1194

2230:                                             ; preds = %2204
  %2231 = mul <8 x i32> %2225, %2224
  %2232 = mul <8 x i32> %2226, %2231
  %2233 = mul <8 x i32> %2227, %2232
  %2234 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2233)
  %2235 = icmp eq i64 %2198, %2202
  br i1 %2235, label %2248, label %2236

2236:                                             ; preds = %2189, %2230
  %2237 = phi i64 [ %2192, %2189 ], [ %2203, %2230 ]
  %2238 = phi i32 [ 1, %2189 ], [ %2234, %2230 ]
  br label %2239

2239:                                             ; preds = %2236, %2239
  %2240 = phi i64 [ %2245, %2239 ], [ %2237, %2236 ]
  %2241 = phi i32 [ %2244, %2239 ], [ %2238, %2236 ]
  %2242 = getelementptr inbounds i32, ptr %9, i64 %2240
  %2243 = load i32, ptr %2242, align 4, !tbaa !5
  %2244 = mul nsw i32 %2243, %2241
  %2245 = add nsw i64 %2240, -1
  %2246 = trunc i64 %2240 to i32
  %2247 = icmp sgt i32 %2246, 0
  br i1 %2247, label %2239, label %2248, !llvm.loop !1195

2248:                                             ; preds = %2239, %2230
  %2249 = phi i32 [ %2234, %2230 ], [ %2244, %2239 ]
  %2250 = and i64 %2199, 4294967295
  %2251 = getelementptr inbounds i32, ptr %6, i64 %2250
  %2252 = load i32, ptr %2251, align 4, !tbaa !5
  %2253 = mul nsw i32 %2252, %2249
  %2254 = add nsw i32 %2253, %2193
  %2255 = icmp sgt i64 %2191, 2
  %2256 = add nsw i64 %2192, -1
  %2257 = add i32 %2190, 1
  br i1 %2255, label %2189, label %2258, !llvm.loop !1196

2258:                                             ; preds = %2248, %2184
  %2259 = phi i32 [ %2188, %2184 ], [ %2254, %2248 ]
  %2260 = sext i32 %2259 to i64
  %2261 = getelementptr inbounds float, ptr %1848, i64 %2260
  %2262 = load float, ptr %2261, align 4, !tbaa !162
  %2263 = fptosi float %2262 to i16
  %2264 = mul i16 %2263, %2263
  %2265 = add i16 %2264, %2185
  %2266 = fadd fast double %2187, 1.000000e+00
  %2267 = add nuw nsw i32 %2186, 1
  br i1 %2178, label %2268, label %2315

2268:                                             ; preds = %2258
  %2269 = load i32, ptr %4, align 4, !tbaa !5
  %2270 = load i32, ptr %12, align 4, !tbaa !5
  %2271 = add nsw i32 %2270, -1
  %2272 = icmp slt i32 %2269, %2271
  br i1 %2272, label %2292, label %2273

2273:                                             ; preds = %2268
  %2274 = icmp eq i32 %2269, %2271
  br i1 %2274, label %2275, label %2308

2275:                                             ; preds = %2273
  store i32 0, ptr %4, align 4, !tbaa !5
  %2276 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2276, ptr %6, align 4, !tbaa !5
  br i1 %2183, label %2315, label %2277

2277:                                             ; preds = %2275, %2302
  %2278 = phi i64 [ %2306, %2302 ], [ 1, %2275 ]
  %2279 = getelementptr inbounds i32, ptr %4, i64 %2278
  %2280 = load i32, ptr %2279, align 4, !tbaa !5
  %2281 = getelementptr inbounds i32, ptr %12, i64 %2278
  %2282 = load i32, ptr %2281, align 4, !tbaa !5
  %2283 = add nsw i32 %2282, -1
  %2284 = icmp slt i32 %2280, %2283
  br i1 %2284, label %2285, label %2300

2285:                                             ; preds = %2277
  br i1 %2272, label %2292, label %2286

2286:                                             ; preds = %2285
  %2287 = getelementptr inbounds i32, ptr %7, i64 %2278
  %2288 = load i32, ptr %2287, align 4, !tbaa !5
  %2289 = getelementptr inbounds i32, ptr %6, i64 %2278
  %2290 = load i32, ptr %2289, align 4, !tbaa !5
  %2291 = add nsw i32 %2290, %2288
  store i32 %2291, ptr %2289, align 4, !tbaa !5
  br label %2310

2292:                                             ; preds = %2268, %2285
  %2293 = phi i32 [ %2280, %2285 ], [ %2269, %2268 ]
  %2294 = phi ptr [ %2279, %2285 ], [ %4, %2268 ]
  %2295 = phi i64 [ %2278, %2285 ], [ 0, %2268 ]
  %2296 = add nsw i32 %2293, 1
  store i32 %2296, ptr %2294, align 4, !tbaa !5
  %2297 = getelementptr inbounds i32, ptr %7, i64 %2295
  %2298 = load i32, ptr %2297, align 4, !tbaa !5
  %2299 = getelementptr inbounds i32, ptr %6, i64 %2295
  br label %2310

2300:                                             ; preds = %2277
  %2301 = icmp eq i32 %2280, %2283
  br i1 %2301, label %2302, label %2308

2302:                                             ; preds = %2300
  store i32 0, ptr %2279, align 4, !tbaa !5
  %2303 = getelementptr inbounds i32, ptr %8, i64 %2278
  %2304 = load i32, ptr %2303, align 4, !tbaa !5
  %2305 = getelementptr inbounds i32, ptr %6, i64 %2278
  store i32 %2304, ptr %2305, align 4, !tbaa !5
  %2306 = add nuw nsw i64 %2278, 1
  %2307 = icmp eq i64 %2306, %2181
  br i1 %2307, label %2315, label %2277, !llvm.loop !1197

2308:                                             ; preds = %2273, %2300
  store i16 %2265, ptr %1850, align 2, !tbaa !78
  %2309 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

2310:                                             ; preds = %2286, %2292
  %2311 = phi ptr [ %2299, %2292 ], [ %2279, %2286 ]
  %2312 = phi i32 [ %2298, %2292 ], [ 1, %2286 ]
  %2313 = load i32, ptr %2311, align 4, !tbaa !5
  %2314 = add nsw i32 %2313, %2312
  store i32 %2314, ptr %2311, align 4, !tbaa !5
  br label %2315

2315:                                             ; preds = %2302, %2310, %2275, %2258
  %2316 = icmp eq i32 %2267, %5
  br i1 %2316, label %5491, label %2184, !llvm.loop !1198

2317:                                             ; preds = %2167, %2453
  %2318 = phi i16 [ 0, %2167 ], [ %2401, %2453 ]
  %2319 = phi i32 [ 0, %2167 ], [ %2402, %2453 ]
  %2320 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2168, label %2321, label %2390

2321:                                             ; preds = %2317, %2380
  %2322 = phi i32 [ %2389, %2380 ], [ 0, %2317 ]
  %2323 = phi i64 [ %2331, %2380 ], [ %2172, %2317 ]
  %2324 = phi i64 [ %2388, %2380 ], [ %2171, %2317 ]
  %2325 = phi i32 [ %2386, %2380 ], [ %2320, %2317 ]
  %2326 = sub i32 %2170, %2322
  %2327 = tail call i32 @llvm.smin.i32(i32 %2326, i32 0)
  %2328 = sub i32 %2326, %2327
  %2329 = zext i32 %2328 to i64
  %2330 = add nuw nsw i64 %2329, 1
  %2331 = add nsw i64 %2323, -1
  %2332 = icmp ult i32 %2328, 31
  br i1 %2332, label %2368, label %2333

2333:                                             ; preds = %2321
  %2334 = and i64 %2330, 8589934560
  %2335 = sub i64 %2324, %2334
  br label %2336

2336:                                             ; preds = %2336, %2333
  %2337 = phi i64 [ 0, %2333 ], [ %2360, %2336 ]
  %2338 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2333 ], [ %2356, %2336 ]
  %2339 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2333 ], [ %2357, %2336 ]
  %2340 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2333 ], [ %2358, %2336 ]
  %2341 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2333 ], [ %2359, %2336 ]
  %2342 = sub i64 %2324, %2337
  %2343 = getelementptr inbounds i32, ptr %11, i64 %2342
  %2344 = getelementptr inbounds i32, ptr %2343, i64 -7
  %2345 = load <8 x i32>, ptr %2344, align 4, !tbaa !5
  %2346 = shufflevector <8 x i32> %2345, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2347 = getelementptr inbounds i32, ptr %2343, i64 -15
  %2348 = load <8 x i32>, ptr %2347, align 4, !tbaa !5
  %2349 = shufflevector <8 x i32> %2348, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2350 = getelementptr inbounds i32, ptr %2343, i64 -23
  %2351 = load <8 x i32>, ptr %2350, align 4, !tbaa !5
  %2352 = shufflevector <8 x i32> %2351, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2353 = getelementptr inbounds i32, ptr %2343, i64 -31
  %2354 = load <8 x i32>, ptr %2353, align 4, !tbaa !5
  %2355 = shufflevector <8 x i32> %2354, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2356 = mul <8 x i32> %2346, %2338
  %2357 = mul <8 x i32> %2349, %2339
  %2358 = mul <8 x i32> %2352, %2340
  %2359 = mul <8 x i32> %2355, %2341
  %2360 = add nuw i64 %2337, 32
  %2361 = icmp eq i64 %2360, %2334
  br i1 %2361, label %2362, label %2336, !llvm.loop !1199

2362:                                             ; preds = %2336
  %2363 = mul <8 x i32> %2357, %2356
  %2364 = mul <8 x i32> %2358, %2363
  %2365 = mul <8 x i32> %2359, %2364
  %2366 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2365)
  %2367 = icmp eq i64 %2330, %2334
  br i1 %2367, label %2380, label %2368

2368:                                             ; preds = %2321, %2362
  %2369 = phi i64 [ %2324, %2321 ], [ %2335, %2362 ]
  %2370 = phi i32 [ 1, %2321 ], [ %2366, %2362 ]
  br label %2371

2371:                                             ; preds = %2368, %2371
  %2372 = phi i64 [ %2377, %2371 ], [ %2369, %2368 ]
  %2373 = phi i32 [ %2376, %2371 ], [ %2370, %2368 ]
  %2374 = getelementptr inbounds i32, ptr %11, i64 %2372
  %2375 = load i32, ptr %2374, align 4, !tbaa !5
  %2376 = mul nsw i32 %2375, %2373
  %2377 = add nsw i64 %2372, -1
  %2378 = trunc i64 %2372 to i32
  %2379 = icmp sgt i32 %2378, 0
  br i1 %2379, label %2371, label %2380, !llvm.loop !1200

2380:                                             ; preds = %2371, %2362
  %2381 = phi i32 [ %2366, %2362 ], [ %2376, %2371 ]
  %2382 = and i64 %2331, 4294967295
  %2383 = getelementptr inbounds i32, ptr %6, i64 %2382
  %2384 = load i32, ptr %2383, align 4, !tbaa !5
  %2385 = mul nsw i32 %2384, %2381
  %2386 = add nsw i32 %2385, %2325
  %2387 = icmp sgt i64 %2323, 2
  %2388 = add nsw i64 %2324, -1
  %2389 = add i32 %2322, 1
  br i1 %2387, label %2321, label %2390, !llvm.loop !1201

2390:                                             ; preds = %2380, %2317
  %2391 = phi i32 [ %2320, %2317 ], [ %2386, %2380 ]
  %2392 = icmp slt i32 %2391, %5
  br i1 %2392, label %2395, label %2393

2393:                                             ; preds = %2390
  %2394 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

2395:                                             ; preds = %2390
  %2396 = sext i32 %2391 to i64
  %2397 = getelementptr inbounds float, ptr %1848, i64 %2396
  %2398 = load float, ptr %2397, align 4, !tbaa !162
  %2399 = fptosi float %2398 to i16
  %2400 = mul i16 %2399, %2399
  %2401 = add i16 %2400, %2318
  store i16 %2401, ptr %1850, align 2, !tbaa !78
  %2402 = add nuw nsw i32 %2319, 1
  br i1 %2169, label %2403, label %2453

2403:                                             ; preds = %2395
  %2404 = load i32, ptr %4, align 4, !tbaa !5
  %2405 = load i32, ptr %12, align 4, !tbaa !5
  %2406 = add nsw i32 %2405, -1
  %2407 = icmp slt i32 %2404, %2406
  br i1 %2407, label %2430, label %2408

2408:                                             ; preds = %2403
  %2409 = icmp eq i32 %2404, %2406
  br i1 %2409, label %2410, label %2446

2410:                                             ; preds = %2408
  store i32 0, ptr %4, align 4, !tbaa !5
  %2411 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2411, ptr %6, align 4, !tbaa !5
  br i1 %2174, label %2453, label %2412

2412:                                             ; preds = %2410, %2440
  %2413 = phi i64 [ %2444, %2440 ], [ 1, %2410 ]
  %2414 = getelementptr inbounds i32, ptr %4, i64 %2413
  %2415 = load i32, ptr %2414, align 4, !tbaa !5
  %2416 = getelementptr inbounds i32, ptr %12, i64 %2413
  %2417 = load i32, ptr %2416, align 4, !tbaa !5
  %2418 = add nsw i32 %2417, -1
  %2419 = icmp slt i32 %2415, %2418
  br i1 %2419, label %2420, label %2438

2420:                                             ; preds = %2412
  br i1 %2407, label %2430, label %2421

2421:                                             ; preds = %2420
  %2422 = shl i64 %2413, 32
  %2423 = add i64 %2422, -4294967296
  %2424 = ashr exact i64 %2423, 32
  %2425 = getelementptr inbounds i32, ptr %7, i64 %2424
  %2426 = load i32, ptr %2425, align 4, !tbaa !5
  %2427 = getelementptr inbounds i32, ptr %6, i64 %2413
  %2428 = load i32, ptr %2427, align 4, !tbaa !5
  %2429 = add nsw i32 %2428, %2426
  store i32 %2429, ptr %2427, align 4, !tbaa !5
  br label %2448

2430:                                             ; preds = %2403, %2420
  %2431 = phi i32 [ %2415, %2420 ], [ %2404, %2403 ]
  %2432 = phi ptr [ %2414, %2420 ], [ %4, %2403 ]
  %2433 = phi i64 [ %2413, %2420 ], [ 0, %2403 ]
  %2434 = add nsw i32 %2431, 1
  store i32 %2434, ptr %2432, align 4, !tbaa !5
  %2435 = getelementptr inbounds i32, ptr %7, i64 %2433
  %2436 = load i32, ptr %2435, align 4, !tbaa !5
  %2437 = getelementptr inbounds i32, ptr %6, i64 %2433
  br label %2448

2438:                                             ; preds = %2412
  %2439 = icmp eq i32 %2415, %2418
  br i1 %2439, label %2440, label %2446

2440:                                             ; preds = %2438
  store i32 0, ptr %2414, align 4, !tbaa !5
  %2441 = getelementptr inbounds i32, ptr %8, i64 %2413
  %2442 = load i32, ptr %2441, align 4, !tbaa !5
  %2443 = getelementptr inbounds i32, ptr %6, i64 %2413
  store i32 %2442, ptr %2443, align 4, !tbaa !5
  %2444 = add nuw nsw i64 %2413, 1
  %2445 = icmp eq i64 %2444, %2172
  br i1 %2445, label %2453, label %2412, !llvm.loop !1202

2446:                                             ; preds = %2408, %2438
  %2447 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

2448:                                             ; preds = %2421, %2430
  %2449 = phi ptr [ %2437, %2430 ], [ %2414, %2421 ]
  %2450 = phi i32 [ %2436, %2430 ], [ 1, %2421 ]
  %2451 = load i32, ptr %2449, align 4, !tbaa !5
  %2452 = add nsw i32 %2451, %2450
  store i32 %2452, ptr %2449, align 4, !tbaa !5
  br label %2453

2453:                                             ; preds = %2440, %2448, %2410, %2395
  %2454 = icmp eq i32 %2402, %5
  br i1 %2454, label %5496, label %2317, !llvm.loop !1203

2455:                                             ; preds = %1856
  %2456 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2009, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5496

2457:                                             ; preds = %18
  %2458 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2459 = load ptr, ptr %2458, align 8, !tbaa !9
  %2460 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2461 = load ptr, ptr %2460, align 8, !tbaa !9
  store i32 0, ptr %2461, align 4, !tbaa !5
  %2462 = icmp eq i32 %13, 0
  br i1 %2462, label %2463, label %2467

2463:                                             ; preds = %2457
  %2464 = load float, ptr %2459, align 4, !tbaa !162
  %2465 = fptosi float %2464 to i32
  %2466 = mul nsw i32 %2465, %2465
  store i32 %2466, ptr %2461, align 4, !tbaa !5
  br label %5496

2467:                                             ; preds = %2457
  switch i32 %1, label %3065 [
    i32 1, label %2468
    i32 0, label %2771
  ]

2468:                                             ; preds = %2467
  %2469 = getelementptr inbounds i32, ptr %3, i64 %19
  %2470 = load i32, ptr %2469, align 4, !tbaa !5
  %2471 = icmp eq i32 %2470, 0
  %2472 = icmp sgt i32 %5, 0
  br i1 %2471, label %2482, label %2473

2473:                                             ; preds = %2468
  br i1 %2472, label %2474, label %5496

2474:                                             ; preds = %2473
  %2475 = icmp sgt i32 %13, 1
  %2476 = icmp sgt i32 %13, 0
  %2477 = add i32 %13, -2
  %2478 = zext i32 %2477 to i64
  %2479 = zext i32 %13 to i64
  %2480 = add nuw i32 %5, 1
  %2481 = icmp eq i32 %13, 1
  br label %2630

2482:                                             ; preds = %2468
  br i1 %2472, label %2483, label %5496

2483:                                             ; preds = %2482
  %2484 = icmp sgt i32 %13, 1
  %2485 = icmp sgt i32 %13, 0
  %2486 = add i32 %13, -2
  %2487 = zext i32 %2486 to i64
  %2488 = zext i32 %13 to i64
  %2489 = add nuw i32 %5, 1
  %2490 = icmp eq i32 %13, 1
  br label %2491

2491:                                             ; preds = %2483, %2628
  %2492 = phi i32 [ 0, %2483 ], [ %2580, %2628 ]
  %2493 = phi double [ 0.000000e+00, %2483 ], [ %2579, %2628 ]
  %2494 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2484, label %2495, label %2564

2495:                                             ; preds = %2491, %2554
  %2496 = phi i32 [ %2563, %2554 ], [ 0, %2491 ]
  %2497 = phi i64 [ %2505, %2554 ], [ %2488, %2491 ]
  %2498 = phi i64 [ %2562, %2554 ], [ %2487, %2491 ]
  %2499 = phi i32 [ %2560, %2554 ], [ %2494, %2491 ]
  %2500 = sub i32 %2486, %2496
  %2501 = tail call i32 @llvm.smin.i32(i32 %2500, i32 0)
  %2502 = sub i32 %2500, %2501
  %2503 = zext i32 %2502 to i64
  %2504 = add nuw nsw i64 %2503, 1
  %2505 = add nsw i64 %2497, -1
  %2506 = icmp ult i32 %2502, 31
  br i1 %2506, label %2542, label %2507

2507:                                             ; preds = %2495
  %2508 = and i64 %2504, 8589934560
  %2509 = sub i64 %2498, %2508
  br label %2510

2510:                                             ; preds = %2510, %2507
  %2511 = phi i64 [ 0, %2507 ], [ %2534, %2510 ]
  %2512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2507 ], [ %2530, %2510 ]
  %2513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2507 ], [ %2531, %2510 ]
  %2514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2507 ], [ %2532, %2510 ]
  %2515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2507 ], [ %2533, %2510 ]
  %2516 = sub i64 %2498, %2511
  %2517 = getelementptr inbounds i32, ptr %9, i64 %2516
  %2518 = getelementptr inbounds i32, ptr %2517, i64 -7
  %2519 = load <8 x i32>, ptr %2518, align 4, !tbaa !5
  %2520 = shufflevector <8 x i32> %2519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2521 = getelementptr inbounds i32, ptr %2517, i64 -15
  %2522 = load <8 x i32>, ptr %2521, align 4, !tbaa !5
  %2523 = shufflevector <8 x i32> %2522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2524 = getelementptr inbounds i32, ptr %2517, i64 -23
  %2525 = load <8 x i32>, ptr %2524, align 4, !tbaa !5
  %2526 = shufflevector <8 x i32> %2525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2527 = getelementptr inbounds i32, ptr %2517, i64 -31
  %2528 = load <8 x i32>, ptr %2527, align 4, !tbaa !5
  %2529 = shufflevector <8 x i32> %2528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2530 = mul <8 x i32> %2520, %2512
  %2531 = mul <8 x i32> %2523, %2513
  %2532 = mul <8 x i32> %2526, %2514
  %2533 = mul <8 x i32> %2529, %2515
  %2534 = add nuw i64 %2511, 32
  %2535 = icmp eq i64 %2534, %2508
  br i1 %2535, label %2536, label %2510, !llvm.loop !1204

2536:                                             ; preds = %2510
  %2537 = mul <8 x i32> %2531, %2530
  %2538 = mul <8 x i32> %2532, %2537
  %2539 = mul <8 x i32> %2533, %2538
  %2540 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2539)
  %2541 = icmp eq i64 %2504, %2508
  br i1 %2541, label %2554, label %2542

2542:                                             ; preds = %2495, %2536
  %2543 = phi i64 [ %2498, %2495 ], [ %2509, %2536 ]
  %2544 = phi i32 [ 1, %2495 ], [ %2540, %2536 ]
  br label %2545

2545:                                             ; preds = %2542, %2545
  %2546 = phi i64 [ %2551, %2545 ], [ %2543, %2542 ]
  %2547 = phi i32 [ %2550, %2545 ], [ %2544, %2542 ]
  %2548 = getelementptr inbounds i32, ptr %9, i64 %2546
  %2549 = load i32, ptr %2548, align 4, !tbaa !5
  %2550 = mul nsw i32 %2549, %2547
  %2551 = add nsw i64 %2546, -1
  %2552 = trunc i64 %2546 to i32
  %2553 = icmp sgt i32 %2552, 0
  br i1 %2553, label %2545, label %2554, !llvm.loop !1205

2554:                                             ; preds = %2545, %2536
  %2555 = phi i32 [ %2540, %2536 ], [ %2550, %2545 ]
  %2556 = and i64 %2505, 4294967295
  %2557 = getelementptr inbounds i32, ptr %6, i64 %2556
  %2558 = load i32, ptr %2557, align 4, !tbaa !5
  %2559 = mul nsw i32 %2558, %2555
  %2560 = add nsw i32 %2559, %2499
  %2561 = icmp sgt i64 %2497, 2
  %2562 = add nsw i64 %2498, -1
  %2563 = add i32 %2496, 1
  br i1 %2561, label %2495, label %2564, !llvm.loop !1206

2564:                                             ; preds = %2554, %2491
  %2565 = phi i32 [ %2494, %2491 ], [ %2560, %2554 ]
  %2566 = sext i32 %2565 to i64
  %2567 = getelementptr inbounds double, ptr %2, i64 %2566
  %2568 = load double, ptr %2567, align 8, !tbaa !18
  %2569 = getelementptr inbounds float, ptr %2459, i64 %2566
  %2570 = load float, ptr %2569, align 4, !tbaa !162
  %2571 = fptosi float %2570 to i32
  %2572 = load i32, ptr %2461, align 4, !tbaa !5
  %2573 = sitofp i32 %2572 to double
  %2574 = sitofp i32 %2571 to double
  %2575 = fmul fast double %2568, %2574
  %2576 = fmul fast double %2575, %2575
  %2577 = fadd fast double %2576, %2573
  %2578 = fptosi double %2577 to i32
  store i32 %2578, ptr %2461, align 4, !tbaa !5
  %2579 = fadd fast double %2568, %2493
  %2580 = add nuw nsw i32 %2492, 1
  br i1 %2485, label %2581, label %2628

2581:                                             ; preds = %2564
  %2582 = load i32, ptr %4, align 4, !tbaa !5
  %2583 = load i32, ptr %12, align 4, !tbaa !5
  %2584 = add nsw i32 %2583, -1
  %2585 = icmp slt i32 %2582, %2584
  br i1 %2585, label %2605, label %2586

2586:                                             ; preds = %2581
  %2587 = icmp eq i32 %2582, %2584
  br i1 %2587, label %2588, label %2621

2588:                                             ; preds = %2586
  store i32 0, ptr %4, align 4, !tbaa !5
  %2589 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2589, ptr %6, align 4, !tbaa !5
  br i1 %2490, label %2628, label %2590

2590:                                             ; preds = %2588, %2615
  %2591 = phi i64 [ %2619, %2615 ], [ 1, %2588 ]
  %2592 = getelementptr inbounds i32, ptr %4, i64 %2591
  %2593 = load i32, ptr %2592, align 4, !tbaa !5
  %2594 = getelementptr inbounds i32, ptr %12, i64 %2591
  %2595 = load i32, ptr %2594, align 4, !tbaa !5
  %2596 = add nsw i32 %2595, -1
  %2597 = icmp slt i32 %2593, %2596
  br i1 %2597, label %2598, label %2613

2598:                                             ; preds = %2590
  br i1 %2585, label %2605, label %2599

2599:                                             ; preds = %2598
  %2600 = getelementptr inbounds i32, ptr %7, i64 %2591
  %2601 = load i32, ptr %2600, align 4, !tbaa !5
  %2602 = getelementptr inbounds i32, ptr %6, i64 %2591
  %2603 = load i32, ptr %2602, align 4, !tbaa !5
  %2604 = add nsw i32 %2603, %2601
  store i32 %2604, ptr %2602, align 4, !tbaa !5
  br label %2623

2605:                                             ; preds = %2581, %2598
  %2606 = phi i32 [ %2593, %2598 ], [ %2582, %2581 ]
  %2607 = phi ptr [ %2592, %2598 ], [ %4, %2581 ]
  %2608 = phi i64 [ %2591, %2598 ], [ 0, %2581 ]
  %2609 = add nsw i32 %2606, 1
  store i32 %2609, ptr %2607, align 4, !tbaa !5
  %2610 = getelementptr inbounds i32, ptr %7, i64 %2608
  %2611 = load i32, ptr %2610, align 4, !tbaa !5
  %2612 = getelementptr inbounds i32, ptr %6, i64 %2608
  br label %2623

2613:                                             ; preds = %2590
  %2614 = icmp eq i32 %2593, %2596
  br i1 %2614, label %2615, label %2621

2615:                                             ; preds = %2613
  store i32 0, ptr %2592, align 4, !tbaa !5
  %2616 = getelementptr inbounds i32, ptr %8, i64 %2591
  %2617 = load i32, ptr %2616, align 4, !tbaa !5
  %2618 = getelementptr inbounds i32, ptr %6, i64 %2591
  store i32 %2617, ptr %2618, align 4, !tbaa !5
  %2619 = add nuw nsw i64 %2591, 1
  %2620 = icmp eq i64 %2619, %2488
  br i1 %2620, label %2628, label %2590, !llvm.loop !1207

2621:                                             ; preds = %2586, %2613
  %2622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2014, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

2623:                                             ; preds = %2599, %2605
  %2624 = phi ptr [ %2612, %2605 ], [ %2592, %2599 ]
  %2625 = phi i32 [ %2611, %2605 ], [ 1, %2599 ]
  %2626 = load i32, ptr %2624, align 4, !tbaa !5
  %2627 = add nsw i32 %2626, %2625
  store i32 %2627, ptr %2624, align 4, !tbaa !5
  br label %2628

2628:                                             ; preds = %2615, %2623, %2588, %2564
  %2629 = icmp eq i32 %2580, %5
  br i1 %2629, label %5496, label %2491, !llvm.loop !1208

2630:                                             ; preds = %2474, %2769
  %2631 = phi i32 [ 0, %2474 ], [ %2718, %2769 ]
  %2632 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2475, label %2633, label %2702

2633:                                             ; preds = %2630, %2692
  %2634 = phi i32 [ %2701, %2692 ], [ 0, %2630 ]
  %2635 = phi i64 [ %2643, %2692 ], [ %2479, %2630 ]
  %2636 = phi i64 [ %2700, %2692 ], [ %2478, %2630 ]
  %2637 = phi i32 [ %2698, %2692 ], [ %2632, %2630 ]
  %2638 = sub i32 %2477, %2634
  %2639 = tail call i32 @llvm.smin.i32(i32 %2638, i32 0)
  %2640 = sub i32 %2638, %2639
  %2641 = zext i32 %2640 to i64
  %2642 = add nuw nsw i64 %2641, 1
  %2643 = add nsw i64 %2635, -1
  %2644 = icmp ult i32 %2640, 31
  br i1 %2644, label %2680, label %2645

2645:                                             ; preds = %2633
  %2646 = and i64 %2642, 8589934560
  %2647 = sub i64 %2636, %2646
  br label %2648

2648:                                             ; preds = %2648, %2645
  %2649 = phi i64 [ 0, %2645 ], [ %2672, %2648 ]
  %2650 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2645 ], [ %2668, %2648 ]
  %2651 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2645 ], [ %2669, %2648 ]
  %2652 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2645 ], [ %2670, %2648 ]
  %2653 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2645 ], [ %2671, %2648 ]
  %2654 = sub i64 %2636, %2649
  %2655 = getelementptr inbounds i32, ptr %11, i64 %2654
  %2656 = getelementptr inbounds i32, ptr %2655, i64 -7
  %2657 = load <8 x i32>, ptr %2656, align 4, !tbaa !5
  %2658 = shufflevector <8 x i32> %2657, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2659 = getelementptr inbounds i32, ptr %2655, i64 -15
  %2660 = load <8 x i32>, ptr %2659, align 4, !tbaa !5
  %2661 = shufflevector <8 x i32> %2660, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2662 = getelementptr inbounds i32, ptr %2655, i64 -23
  %2663 = load <8 x i32>, ptr %2662, align 4, !tbaa !5
  %2664 = shufflevector <8 x i32> %2663, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2665 = getelementptr inbounds i32, ptr %2655, i64 -31
  %2666 = load <8 x i32>, ptr %2665, align 4, !tbaa !5
  %2667 = shufflevector <8 x i32> %2666, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2668 = mul <8 x i32> %2658, %2650
  %2669 = mul <8 x i32> %2661, %2651
  %2670 = mul <8 x i32> %2664, %2652
  %2671 = mul <8 x i32> %2667, %2653
  %2672 = add nuw i64 %2649, 32
  %2673 = icmp eq i64 %2672, %2646
  br i1 %2673, label %2674, label %2648, !llvm.loop !1209

2674:                                             ; preds = %2648
  %2675 = mul <8 x i32> %2669, %2668
  %2676 = mul <8 x i32> %2670, %2675
  %2677 = mul <8 x i32> %2671, %2676
  %2678 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2677)
  %2679 = icmp eq i64 %2642, %2646
  br i1 %2679, label %2692, label %2680

2680:                                             ; preds = %2633, %2674
  %2681 = phi i64 [ %2636, %2633 ], [ %2647, %2674 ]
  %2682 = phi i32 [ 1, %2633 ], [ %2678, %2674 ]
  br label %2683

2683:                                             ; preds = %2680, %2683
  %2684 = phi i64 [ %2689, %2683 ], [ %2681, %2680 ]
  %2685 = phi i32 [ %2688, %2683 ], [ %2682, %2680 ]
  %2686 = getelementptr inbounds i32, ptr %11, i64 %2684
  %2687 = load i32, ptr %2686, align 4, !tbaa !5
  %2688 = mul nsw i32 %2687, %2685
  %2689 = add nsw i64 %2684, -1
  %2690 = trunc i64 %2684 to i32
  %2691 = icmp sgt i32 %2690, 0
  br i1 %2691, label %2683, label %2692, !llvm.loop !1210

2692:                                             ; preds = %2683, %2674
  %2693 = phi i32 [ %2678, %2674 ], [ %2688, %2683 ]
  %2694 = and i64 %2643, 4294967295
  %2695 = getelementptr inbounds i32, ptr %6, i64 %2694
  %2696 = load i32, ptr %2695, align 4, !tbaa !5
  %2697 = mul nsw i32 %2696, %2693
  %2698 = add nsw i32 %2697, %2637
  %2699 = icmp sgt i64 %2635, 2
  %2700 = add nsw i64 %2636, -1
  %2701 = add i32 %2634, 1
  br i1 %2699, label %2633, label %2702, !llvm.loop !1211

2702:                                             ; preds = %2692, %2630
  %2703 = phi i32 [ %2632, %2630 ], [ %2698, %2692 ]
  %2704 = icmp slt i32 %2703, %5
  br i1 %2704, label %2707, label %2705

2705:                                             ; preds = %2702
  %2706 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2014, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

2707:                                             ; preds = %2702
  %2708 = sext i32 %2703 to i64
  %2709 = getelementptr inbounds float, ptr %2459, i64 %2708
  %2710 = load float, ptr %2709, align 4, !tbaa !162
  %2711 = fptosi float %2710 to i32
  %2712 = load i32, ptr %2461, align 4, !tbaa !5
  %2713 = sitofp i32 %2712 to double
  %2714 = sitofp i32 %2711 to double
  %2715 = fmul fast double %2714, %2714
  %2716 = fadd fast double %2715, %2713
  %2717 = fptosi double %2716 to i32
  store i32 %2717, ptr %2461, align 4, !tbaa !5
  %2718 = add nuw nsw i32 %2631, 1
  br i1 %2476, label %2719, label %2769

2719:                                             ; preds = %2707
  %2720 = load i32, ptr %4, align 4, !tbaa !5
  %2721 = load i32, ptr %12, align 4, !tbaa !5
  %2722 = add nsw i32 %2721, -1
  %2723 = icmp slt i32 %2720, %2722
  br i1 %2723, label %2746, label %2724

2724:                                             ; preds = %2719
  %2725 = icmp eq i32 %2720, %2722
  br i1 %2725, label %2726, label %2762

2726:                                             ; preds = %2724
  store i32 0, ptr %4, align 4, !tbaa !5
  %2727 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2727, ptr %6, align 4, !tbaa !5
  br i1 %2481, label %2769, label %2728

2728:                                             ; preds = %2726, %2756
  %2729 = phi i64 [ %2760, %2756 ], [ 1, %2726 ]
  %2730 = getelementptr inbounds i32, ptr %4, i64 %2729
  %2731 = load i32, ptr %2730, align 4, !tbaa !5
  %2732 = getelementptr inbounds i32, ptr %12, i64 %2729
  %2733 = load i32, ptr %2732, align 4, !tbaa !5
  %2734 = add nsw i32 %2733, -1
  %2735 = icmp slt i32 %2731, %2734
  br i1 %2735, label %2736, label %2754

2736:                                             ; preds = %2728
  br i1 %2723, label %2746, label %2737

2737:                                             ; preds = %2736
  %2738 = shl i64 %2729, 32
  %2739 = add i64 %2738, -4294967296
  %2740 = ashr exact i64 %2739, 32
  %2741 = getelementptr inbounds i32, ptr %7, i64 %2740
  %2742 = load i32, ptr %2741, align 4, !tbaa !5
  %2743 = getelementptr inbounds i32, ptr %6, i64 %2729
  %2744 = load i32, ptr %2743, align 4, !tbaa !5
  %2745 = add nsw i32 %2744, %2742
  store i32 %2745, ptr %2743, align 4, !tbaa !5
  br label %2764

2746:                                             ; preds = %2719, %2736
  %2747 = phi i32 [ %2731, %2736 ], [ %2720, %2719 ]
  %2748 = phi ptr [ %2730, %2736 ], [ %4, %2719 ]
  %2749 = phi i64 [ %2729, %2736 ], [ 0, %2719 ]
  %2750 = add nsw i32 %2747, 1
  store i32 %2750, ptr %2748, align 4, !tbaa !5
  %2751 = getelementptr inbounds i32, ptr %7, i64 %2749
  %2752 = load i32, ptr %2751, align 4, !tbaa !5
  %2753 = getelementptr inbounds i32, ptr %6, i64 %2749
  br label %2764

2754:                                             ; preds = %2728
  %2755 = icmp eq i32 %2731, %2734
  br i1 %2755, label %2756, label %2762

2756:                                             ; preds = %2754
  store i32 0, ptr %2730, align 4, !tbaa !5
  %2757 = getelementptr inbounds i32, ptr %8, i64 %2729
  %2758 = load i32, ptr %2757, align 4, !tbaa !5
  %2759 = getelementptr inbounds i32, ptr %6, i64 %2729
  store i32 %2758, ptr %2759, align 4, !tbaa !5
  %2760 = add nuw nsw i64 %2729, 1
  %2761 = icmp eq i64 %2760, %2479
  br i1 %2761, label %2769, label %2728, !llvm.loop !1212

2762:                                             ; preds = %2724, %2754
  %2763 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2014, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

2764:                                             ; preds = %2737, %2746
  %2765 = phi ptr [ %2753, %2746 ], [ %2730, %2737 ]
  %2766 = phi i32 [ %2752, %2746 ], [ 1, %2737 ]
  %2767 = load i32, ptr %2765, align 4, !tbaa !5
  %2768 = add nsw i32 %2767, %2766
  store i32 %2768, ptr %2765, align 4, !tbaa !5
  br label %2769

2769:                                             ; preds = %2756, %2764, %2726, %2707
  %2770 = icmp eq i32 %2718, %5
  br i1 %2770, label %5496, label %2630, !llvm.loop !1213

2771:                                             ; preds = %2467
  %2772 = getelementptr inbounds i32, ptr %3, i64 %19
  %2773 = load i32, ptr %2772, align 4, !tbaa !5
  %2774 = icmp eq i32 %2773, 0
  %2775 = icmp sgt i32 %5, 0
  br i1 %2774, label %2785, label %2776

2776:                                             ; preds = %2771
  br i1 %2775, label %2777, label %5496

2777:                                             ; preds = %2776
  %2778 = icmp sgt i32 %13, 1
  %2779 = icmp sgt i32 %13, 0
  %2780 = add i32 %13, -2
  %2781 = zext i32 %2780 to i64
  %2782 = zext i32 %13 to i64
  %2783 = add nuw i32 %5, 1
  %2784 = icmp eq i32 %13, 1
  br label %2927

2785:                                             ; preds = %2771
  br i1 %2775, label %2786, label %5496

2786:                                             ; preds = %2785
  %2787 = icmp sgt i32 %13, 1
  %2788 = icmp sgt i32 %13, 0
  %2789 = add i32 %13, -2
  %2790 = zext i32 %2789 to i64
  %2791 = zext i32 %13 to i64
  %2792 = add nuw i32 %5, 1
  %2793 = icmp eq i32 %13, 1
  br label %2794

2794:                                             ; preds = %2786, %2925
  %2795 = phi i32 [ 0, %2786 ], [ %2877, %2925 ]
  %2796 = phi double [ 0.000000e+00, %2786 ], [ %2876, %2925 ]
  %2797 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2787, label %2798, label %2867

2798:                                             ; preds = %2794, %2857
  %2799 = phi i32 [ %2866, %2857 ], [ 0, %2794 ]
  %2800 = phi i64 [ %2808, %2857 ], [ %2791, %2794 ]
  %2801 = phi i64 [ %2865, %2857 ], [ %2790, %2794 ]
  %2802 = phi i32 [ %2863, %2857 ], [ %2797, %2794 ]
  %2803 = sub i32 %2789, %2799
  %2804 = tail call i32 @llvm.smin.i32(i32 %2803, i32 0)
  %2805 = sub i32 %2803, %2804
  %2806 = zext i32 %2805 to i64
  %2807 = add nuw nsw i64 %2806, 1
  %2808 = add nsw i64 %2800, -1
  %2809 = icmp ult i32 %2805, 31
  br i1 %2809, label %2845, label %2810

2810:                                             ; preds = %2798
  %2811 = and i64 %2807, 8589934560
  %2812 = sub i64 %2801, %2811
  br label %2813

2813:                                             ; preds = %2813, %2810
  %2814 = phi i64 [ 0, %2810 ], [ %2837, %2813 ]
  %2815 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2833, %2813 ]
  %2816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2834, %2813 ]
  %2817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2835, %2813 ]
  %2818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2836, %2813 ]
  %2819 = sub i64 %2801, %2814
  %2820 = getelementptr inbounds i32, ptr %9, i64 %2819
  %2821 = getelementptr inbounds i32, ptr %2820, i64 -7
  %2822 = load <8 x i32>, ptr %2821, align 4, !tbaa !5
  %2823 = shufflevector <8 x i32> %2822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2824 = getelementptr inbounds i32, ptr %2820, i64 -15
  %2825 = load <8 x i32>, ptr %2824, align 4, !tbaa !5
  %2826 = shufflevector <8 x i32> %2825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2827 = getelementptr inbounds i32, ptr %2820, i64 -23
  %2828 = load <8 x i32>, ptr %2827, align 4, !tbaa !5
  %2829 = shufflevector <8 x i32> %2828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2830 = getelementptr inbounds i32, ptr %2820, i64 -31
  %2831 = load <8 x i32>, ptr %2830, align 4, !tbaa !5
  %2832 = shufflevector <8 x i32> %2831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2833 = mul <8 x i32> %2823, %2815
  %2834 = mul <8 x i32> %2826, %2816
  %2835 = mul <8 x i32> %2829, %2817
  %2836 = mul <8 x i32> %2832, %2818
  %2837 = add nuw i64 %2814, 32
  %2838 = icmp eq i64 %2837, %2811
  br i1 %2838, label %2839, label %2813, !llvm.loop !1214

2839:                                             ; preds = %2813
  %2840 = mul <8 x i32> %2834, %2833
  %2841 = mul <8 x i32> %2835, %2840
  %2842 = mul <8 x i32> %2836, %2841
  %2843 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2842)
  %2844 = icmp eq i64 %2807, %2811
  br i1 %2844, label %2857, label %2845

2845:                                             ; preds = %2798, %2839
  %2846 = phi i64 [ %2801, %2798 ], [ %2812, %2839 ]
  %2847 = phi i32 [ 1, %2798 ], [ %2843, %2839 ]
  br label %2848

2848:                                             ; preds = %2845, %2848
  %2849 = phi i64 [ %2854, %2848 ], [ %2846, %2845 ]
  %2850 = phi i32 [ %2853, %2848 ], [ %2847, %2845 ]
  %2851 = getelementptr inbounds i32, ptr %9, i64 %2849
  %2852 = load i32, ptr %2851, align 4, !tbaa !5
  %2853 = mul nsw i32 %2852, %2850
  %2854 = add nsw i64 %2849, -1
  %2855 = trunc i64 %2849 to i32
  %2856 = icmp sgt i32 %2855, 0
  br i1 %2856, label %2848, label %2857, !llvm.loop !1215

2857:                                             ; preds = %2848, %2839
  %2858 = phi i32 [ %2843, %2839 ], [ %2853, %2848 ]
  %2859 = and i64 %2808, 4294967295
  %2860 = getelementptr inbounds i32, ptr %6, i64 %2859
  %2861 = load i32, ptr %2860, align 4, !tbaa !5
  %2862 = mul nsw i32 %2861, %2858
  %2863 = add nsw i32 %2862, %2802
  %2864 = icmp sgt i64 %2800, 2
  %2865 = add nsw i64 %2801, -1
  %2866 = add i32 %2799, 1
  br i1 %2864, label %2798, label %2867, !llvm.loop !1216

2867:                                             ; preds = %2857, %2794
  %2868 = phi i32 [ %2797, %2794 ], [ %2863, %2857 ]
  %2869 = sext i32 %2868 to i64
  %2870 = getelementptr inbounds float, ptr %2459, i64 %2869
  %2871 = load float, ptr %2870, align 4, !tbaa !162
  %2872 = fptosi float %2871 to i32
  %2873 = load i32, ptr %2461, align 4, !tbaa !5
  %2874 = mul nsw i32 %2872, %2872
  %2875 = add nsw i32 %2874, %2873
  store i32 %2875, ptr %2461, align 4, !tbaa !5
  %2876 = fadd fast double %2796, 1.000000e+00
  %2877 = add nuw nsw i32 %2795, 1
  br i1 %2788, label %2878, label %2925

2878:                                             ; preds = %2867
  %2879 = load i32, ptr %4, align 4, !tbaa !5
  %2880 = load i32, ptr %12, align 4, !tbaa !5
  %2881 = add nsw i32 %2880, -1
  %2882 = icmp slt i32 %2879, %2881
  br i1 %2882, label %2902, label %2883

2883:                                             ; preds = %2878
  %2884 = icmp eq i32 %2879, %2881
  br i1 %2884, label %2885, label %2918

2885:                                             ; preds = %2883
  store i32 0, ptr %4, align 4, !tbaa !5
  %2886 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2886, ptr %6, align 4, !tbaa !5
  br i1 %2793, label %2925, label %2887

2887:                                             ; preds = %2885, %2912
  %2888 = phi i64 [ %2916, %2912 ], [ 1, %2885 ]
  %2889 = getelementptr inbounds i32, ptr %4, i64 %2888
  %2890 = load i32, ptr %2889, align 4, !tbaa !5
  %2891 = getelementptr inbounds i32, ptr %12, i64 %2888
  %2892 = load i32, ptr %2891, align 4, !tbaa !5
  %2893 = add nsw i32 %2892, -1
  %2894 = icmp slt i32 %2890, %2893
  br i1 %2894, label %2895, label %2910

2895:                                             ; preds = %2887
  br i1 %2882, label %2902, label %2896

2896:                                             ; preds = %2895
  %2897 = getelementptr inbounds i32, ptr %7, i64 %2888
  %2898 = load i32, ptr %2897, align 4, !tbaa !5
  %2899 = getelementptr inbounds i32, ptr %6, i64 %2888
  %2900 = load i32, ptr %2899, align 4, !tbaa !5
  %2901 = add nsw i32 %2900, %2898
  store i32 %2901, ptr %2899, align 4, !tbaa !5
  br label %2920

2902:                                             ; preds = %2878, %2895
  %2903 = phi i32 [ %2890, %2895 ], [ %2879, %2878 ]
  %2904 = phi ptr [ %2889, %2895 ], [ %4, %2878 ]
  %2905 = phi i64 [ %2888, %2895 ], [ 0, %2878 ]
  %2906 = add nsw i32 %2903, 1
  store i32 %2906, ptr %2904, align 4, !tbaa !5
  %2907 = getelementptr inbounds i32, ptr %7, i64 %2905
  %2908 = load i32, ptr %2907, align 4, !tbaa !5
  %2909 = getelementptr inbounds i32, ptr %6, i64 %2905
  br label %2920

2910:                                             ; preds = %2887
  %2911 = icmp eq i32 %2890, %2893
  br i1 %2911, label %2912, label %2918

2912:                                             ; preds = %2910
  store i32 0, ptr %2889, align 4, !tbaa !5
  %2913 = getelementptr inbounds i32, ptr %8, i64 %2888
  %2914 = load i32, ptr %2913, align 4, !tbaa !5
  %2915 = getelementptr inbounds i32, ptr %6, i64 %2888
  store i32 %2914, ptr %2915, align 4, !tbaa !5
  %2916 = add nuw nsw i64 %2888, 1
  %2917 = icmp eq i64 %2916, %2791
  br i1 %2917, label %2925, label %2887, !llvm.loop !1217

2918:                                             ; preds = %2883, %2910
  %2919 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2014, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

2920:                                             ; preds = %2896, %2902
  %2921 = phi ptr [ %2909, %2902 ], [ %2889, %2896 ]
  %2922 = phi i32 [ %2908, %2902 ], [ 1, %2896 ]
  %2923 = load i32, ptr %2921, align 4, !tbaa !5
  %2924 = add nsw i32 %2923, %2922
  store i32 %2924, ptr %2921, align 4, !tbaa !5
  br label %2925

2925:                                             ; preds = %2912, %2920, %2885, %2867
  %2926 = icmp eq i32 %2877, %5
  br i1 %2926, label %5496, label %2794, !llvm.loop !1218

2927:                                             ; preds = %2777, %3063
  %2928 = phi i32 [ 0, %2777 ], [ %3012, %3063 ]
  %2929 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2778, label %2930, label %2999

2930:                                             ; preds = %2927, %2989
  %2931 = phi i32 [ %2998, %2989 ], [ 0, %2927 ]
  %2932 = phi i64 [ %2940, %2989 ], [ %2782, %2927 ]
  %2933 = phi i64 [ %2997, %2989 ], [ %2781, %2927 ]
  %2934 = phi i32 [ %2995, %2989 ], [ %2929, %2927 ]
  %2935 = sub i32 %2780, %2931
  %2936 = tail call i32 @llvm.smin.i32(i32 %2935, i32 0)
  %2937 = sub i32 %2935, %2936
  %2938 = zext i32 %2937 to i64
  %2939 = add nuw nsw i64 %2938, 1
  %2940 = add nsw i64 %2932, -1
  %2941 = icmp ult i32 %2937, 31
  br i1 %2941, label %2977, label %2942

2942:                                             ; preds = %2930
  %2943 = and i64 %2939, 8589934560
  %2944 = sub i64 %2933, %2943
  br label %2945

2945:                                             ; preds = %2945, %2942
  %2946 = phi i64 [ 0, %2942 ], [ %2969, %2945 ]
  %2947 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2965, %2945 ]
  %2948 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2966, %2945 ]
  %2949 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2967, %2945 ]
  %2950 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2968, %2945 ]
  %2951 = sub i64 %2933, %2946
  %2952 = getelementptr inbounds i32, ptr %11, i64 %2951
  %2953 = getelementptr inbounds i32, ptr %2952, i64 -7
  %2954 = load <8 x i32>, ptr %2953, align 4, !tbaa !5
  %2955 = shufflevector <8 x i32> %2954, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2956 = getelementptr inbounds i32, ptr %2952, i64 -15
  %2957 = load <8 x i32>, ptr %2956, align 4, !tbaa !5
  %2958 = shufflevector <8 x i32> %2957, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2959 = getelementptr inbounds i32, ptr %2952, i64 -23
  %2960 = load <8 x i32>, ptr %2959, align 4, !tbaa !5
  %2961 = shufflevector <8 x i32> %2960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2962 = getelementptr inbounds i32, ptr %2952, i64 -31
  %2963 = load <8 x i32>, ptr %2962, align 4, !tbaa !5
  %2964 = shufflevector <8 x i32> %2963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2965 = mul <8 x i32> %2955, %2947
  %2966 = mul <8 x i32> %2958, %2948
  %2967 = mul <8 x i32> %2961, %2949
  %2968 = mul <8 x i32> %2964, %2950
  %2969 = add nuw i64 %2946, 32
  %2970 = icmp eq i64 %2969, %2943
  br i1 %2970, label %2971, label %2945, !llvm.loop !1219

2971:                                             ; preds = %2945
  %2972 = mul <8 x i32> %2966, %2965
  %2973 = mul <8 x i32> %2967, %2972
  %2974 = mul <8 x i32> %2968, %2973
  %2975 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2974)
  %2976 = icmp eq i64 %2939, %2943
  br i1 %2976, label %2989, label %2977

2977:                                             ; preds = %2930, %2971
  %2978 = phi i64 [ %2933, %2930 ], [ %2944, %2971 ]
  %2979 = phi i32 [ 1, %2930 ], [ %2975, %2971 ]
  br label %2980

2980:                                             ; preds = %2977, %2980
  %2981 = phi i64 [ %2986, %2980 ], [ %2978, %2977 ]
  %2982 = phi i32 [ %2985, %2980 ], [ %2979, %2977 ]
  %2983 = getelementptr inbounds i32, ptr %11, i64 %2981
  %2984 = load i32, ptr %2983, align 4, !tbaa !5
  %2985 = mul nsw i32 %2984, %2982
  %2986 = add nsw i64 %2981, -1
  %2987 = trunc i64 %2981 to i32
  %2988 = icmp sgt i32 %2987, 0
  br i1 %2988, label %2980, label %2989, !llvm.loop !1220

2989:                                             ; preds = %2980, %2971
  %2990 = phi i32 [ %2975, %2971 ], [ %2985, %2980 ]
  %2991 = and i64 %2940, 4294967295
  %2992 = getelementptr inbounds i32, ptr %6, i64 %2991
  %2993 = load i32, ptr %2992, align 4, !tbaa !5
  %2994 = mul nsw i32 %2993, %2990
  %2995 = add nsw i32 %2994, %2934
  %2996 = icmp sgt i64 %2932, 2
  %2997 = add nsw i64 %2933, -1
  %2998 = add i32 %2931, 1
  br i1 %2996, label %2930, label %2999, !llvm.loop !1221

2999:                                             ; preds = %2989, %2927
  %3000 = phi i32 [ %2929, %2927 ], [ %2995, %2989 ]
  %3001 = icmp slt i32 %3000, %5
  br i1 %3001, label %3004, label %3002

3002:                                             ; preds = %2999
  %3003 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2014, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

3004:                                             ; preds = %2999
  %3005 = sext i32 %3000 to i64
  %3006 = getelementptr inbounds float, ptr %2459, i64 %3005
  %3007 = load float, ptr %3006, align 4, !tbaa !162
  %3008 = fptosi float %3007 to i32
  %3009 = load i32, ptr %2461, align 4, !tbaa !5
  %3010 = mul nsw i32 %3008, %3008
  %3011 = add nsw i32 %3010, %3009
  store i32 %3011, ptr %2461, align 4, !tbaa !5
  %3012 = add nuw nsw i32 %2928, 1
  br i1 %2779, label %3013, label %3063

3013:                                             ; preds = %3004
  %3014 = load i32, ptr %4, align 4, !tbaa !5
  %3015 = load i32, ptr %12, align 4, !tbaa !5
  %3016 = add nsw i32 %3015, -1
  %3017 = icmp slt i32 %3014, %3016
  br i1 %3017, label %3040, label %3018

3018:                                             ; preds = %3013
  %3019 = icmp eq i32 %3014, %3016
  br i1 %3019, label %3020, label %3056

3020:                                             ; preds = %3018
  store i32 0, ptr %4, align 4, !tbaa !5
  %3021 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3021, ptr %6, align 4, !tbaa !5
  br i1 %2784, label %3063, label %3022

3022:                                             ; preds = %3020, %3050
  %3023 = phi i64 [ %3054, %3050 ], [ 1, %3020 ]
  %3024 = getelementptr inbounds i32, ptr %4, i64 %3023
  %3025 = load i32, ptr %3024, align 4, !tbaa !5
  %3026 = getelementptr inbounds i32, ptr %12, i64 %3023
  %3027 = load i32, ptr %3026, align 4, !tbaa !5
  %3028 = add nsw i32 %3027, -1
  %3029 = icmp slt i32 %3025, %3028
  br i1 %3029, label %3030, label %3048

3030:                                             ; preds = %3022
  br i1 %3017, label %3040, label %3031

3031:                                             ; preds = %3030
  %3032 = shl i64 %3023, 32
  %3033 = add i64 %3032, -4294967296
  %3034 = ashr exact i64 %3033, 32
  %3035 = getelementptr inbounds i32, ptr %7, i64 %3034
  %3036 = load i32, ptr %3035, align 4, !tbaa !5
  %3037 = getelementptr inbounds i32, ptr %6, i64 %3023
  %3038 = load i32, ptr %3037, align 4, !tbaa !5
  %3039 = add nsw i32 %3038, %3036
  store i32 %3039, ptr %3037, align 4, !tbaa !5
  br label %3058

3040:                                             ; preds = %3013, %3030
  %3041 = phi i32 [ %3025, %3030 ], [ %3014, %3013 ]
  %3042 = phi ptr [ %3024, %3030 ], [ %4, %3013 ]
  %3043 = phi i64 [ %3023, %3030 ], [ 0, %3013 ]
  %3044 = add nsw i32 %3041, 1
  store i32 %3044, ptr %3042, align 4, !tbaa !5
  %3045 = getelementptr inbounds i32, ptr %7, i64 %3043
  %3046 = load i32, ptr %3045, align 4, !tbaa !5
  %3047 = getelementptr inbounds i32, ptr %6, i64 %3043
  br label %3058

3048:                                             ; preds = %3022
  %3049 = icmp eq i32 %3025, %3028
  br i1 %3049, label %3050, label %3056

3050:                                             ; preds = %3048
  store i32 0, ptr %3024, align 4, !tbaa !5
  %3051 = getelementptr inbounds i32, ptr %8, i64 %3023
  %3052 = load i32, ptr %3051, align 4, !tbaa !5
  %3053 = getelementptr inbounds i32, ptr %6, i64 %3023
  store i32 %3052, ptr %3053, align 4, !tbaa !5
  %3054 = add nuw nsw i64 %3023, 1
  %3055 = icmp eq i64 %3054, %2782
  br i1 %3055, label %3063, label %3022, !llvm.loop !1222

3056:                                             ; preds = %3018, %3048
  %3057 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2014, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

3058:                                             ; preds = %3031, %3040
  %3059 = phi ptr [ %3047, %3040 ], [ %3024, %3031 ]
  %3060 = phi i32 [ %3046, %3040 ], [ 1, %3031 ]
  %3061 = load i32, ptr %3059, align 4, !tbaa !5
  %3062 = add nsw i32 %3061, %3060
  store i32 %3062, ptr %3059, align 4, !tbaa !5
  br label %3063

3063:                                             ; preds = %3050, %3058, %3020, %3004
  %3064 = icmp eq i32 %3012, %5
  br i1 %3064, label %5496, label %2927, !llvm.loop !1223

3065:                                             ; preds = %2467
  %3066 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2014, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5496

3067:                                             ; preds = %18
  %3068 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3069 = load ptr, ptr %3068, align 8, !tbaa !9
  %3070 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3071 = load ptr, ptr %3070, align 8, !tbaa !9
  store i64 0, ptr %3071, align 8, !tbaa !120
  %3072 = icmp eq i32 %13, 0
  br i1 %3072, label %3073, label %3077

3073:                                             ; preds = %3067
  %3074 = load float, ptr %3069, align 4, !tbaa !162
  %3075 = fptosi float %3074 to i64
  %3076 = mul nsw i64 %3075, %3075
  store i64 %3076, ptr %3071, align 8, !tbaa !120
  br label %5496

3077:                                             ; preds = %3067
  switch i32 %1, label %3675 [
    i32 1, label %3078
    i32 0, label %3381
  ]

3078:                                             ; preds = %3077
  %3079 = getelementptr inbounds i32, ptr %3, i64 %19
  %3080 = load i32, ptr %3079, align 4, !tbaa !5
  %3081 = icmp eq i32 %3080, 0
  %3082 = icmp sgt i32 %5, 0
  br i1 %3081, label %3092, label %3083

3083:                                             ; preds = %3078
  br i1 %3082, label %3084, label %5496

3084:                                             ; preds = %3083
  %3085 = icmp sgt i32 %13, 1
  %3086 = icmp sgt i32 %13, 0
  %3087 = add i32 %13, -2
  %3088 = zext i32 %3087 to i64
  %3089 = zext i32 %13 to i64
  %3090 = add nuw i32 %5, 1
  %3091 = icmp eq i32 %13, 1
  br label %3240

3092:                                             ; preds = %3078
  br i1 %3082, label %3093, label %5496

3093:                                             ; preds = %3092
  %3094 = icmp sgt i32 %13, 1
  %3095 = icmp sgt i32 %13, 0
  %3096 = add i32 %13, -2
  %3097 = zext i32 %3096 to i64
  %3098 = zext i32 %13 to i64
  %3099 = add nuw i32 %5, 1
  %3100 = icmp eq i32 %13, 1
  br label %3101

3101:                                             ; preds = %3093, %3238
  %3102 = phi i64 [ 0, %3093 ], [ %3188, %3238 ]
  %3103 = phi i32 [ 0, %3093 ], [ %3190, %3238 ]
  %3104 = phi double [ 0.000000e+00, %3093 ], [ %3189, %3238 ]
  %3105 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3094, label %3106, label %3175

3106:                                             ; preds = %3101, %3165
  %3107 = phi i32 [ %3174, %3165 ], [ 0, %3101 ]
  %3108 = phi i64 [ %3116, %3165 ], [ %3098, %3101 ]
  %3109 = phi i64 [ %3173, %3165 ], [ %3097, %3101 ]
  %3110 = phi i32 [ %3171, %3165 ], [ %3105, %3101 ]
  %3111 = sub i32 %3096, %3107
  %3112 = tail call i32 @llvm.smin.i32(i32 %3111, i32 0)
  %3113 = sub i32 %3111, %3112
  %3114 = zext i32 %3113 to i64
  %3115 = add nuw nsw i64 %3114, 1
  %3116 = add nsw i64 %3108, -1
  %3117 = icmp ult i32 %3113, 31
  br i1 %3117, label %3153, label %3118

3118:                                             ; preds = %3106
  %3119 = and i64 %3115, 8589934560
  %3120 = sub i64 %3109, %3119
  br label %3121

3121:                                             ; preds = %3121, %3118
  %3122 = phi i64 [ 0, %3118 ], [ %3145, %3121 ]
  %3123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3141, %3121 ]
  %3124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3142, %3121 ]
  %3125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3143, %3121 ]
  %3126 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3144, %3121 ]
  %3127 = sub i64 %3109, %3122
  %3128 = getelementptr inbounds i32, ptr %9, i64 %3127
  %3129 = getelementptr inbounds i32, ptr %3128, i64 -7
  %3130 = load <8 x i32>, ptr %3129, align 4, !tbaa !5
  %3131 = shufflevector <8 x i32> %3130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3132 = getelementptr inbounds i32, ptr %3128, i64 -15
  %3133 = load <8 x i32>, ptr %3132, align 4, !tbaa !5
  %3134 = shufflevector <8 x i32> %3133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3135 = getelementptr inbounds i32, ptr %3128, i64 -23
  %3136 = load <8 x i32>, ptr %3135, align 4, !tbaa !5
  %3137 = shufflevector <8 x i32> %3136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3138 = getelementptr inbounds i32, ptr %3128, i64 -31
  %3139 = load <8 x i32>, ptr %3138, align 4, !tbaa !5
  %3140 = shufflevector <8 x i32> %3139, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3141 = mul <8 x i32> %3131, %3123
  %3142 = mul <8 x i32> %3134, %3124
  %3143 = mul <8 x i32> %3137, %3125
  %3144 = mul <8 x i32> %3140, %3126
  %3145 = add nuw i64 %3122, 32
  %3146 = icmp eq i64 %3145, %3119
  br i1 %3146, label %3147, label %3121, !llvm.loop !1224

3147:                                             ; preds = %3121
  %3148 = mul <8 x i32> %3142, %3141
  %3149 = mul <8 x i32> %3143, %3148
  %3150 = mul <8 x i32> %3144, %3149
  %3151 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3150)
  %3152 = icmp eq i64 %3115, %3119
  br i1 %3152, label %3165, label %3153

3153:                                             ; preds = %3106, %3147
  %3154 = phi i64 [ %3109, %3106 ], [ %3120, %3147 ]
  %3155 = phi i32 [ 1, %3106 ], [ %3151, %3147 ]
  br label %3156

3156:                                             ; preds = %3153, %3156
  %3157 = phi i64 [ %3162, %3156 ], [ %3154, %3153 ]
  %3158 = phi i32 [ %3161, %3156 ], [ %3155, %3153 ]
  %3159 = getelementptr inbounds i32, ptr %9, i64 %3157
  %3160 = load i32, ptr %3159, align 4, !tbaa !5
  %3161 = mul nsw i32 %3160, %3158
  %3162 = add nsw i64 %3157, -1
  %3163 = trunc i64 %3157 to i32
  %3164 = icmp sgt i32 %3163, 0
  br i1 %3164, label %3156, label %3165, !llvm.loop !1225

3165:                                             ; preds = %3156, %3147
  %3166 = phi i32 [ %3151, %3147 ], [ %3161, %3156 ]
  %3167 = and i64 %3116, 4294967295
  %3168 = getelementptr inbounds i32, ptr %6, i64 %3167
  %3169 = load i32, ptr %3168, align 4, !tbaa !5
  %3170 = mul nsw i32 %3169, %3166
  %3171 = add nsw i32 %3170, %3110
  %3172 = icmp sgt i64 %3108, 2
  %3173 = add nsw i64 %3109, -1
  %3174 = add i32 %3107, 1
  br i1 %3172, label %3106, label %3175, !llvm.loop !1226

3175:                                             ; preds = %3165, %3101
  %3176 = phi i32 [ %3105, %3101 ], [ %3171, %3165 ]
  %3177 = sext i32 %3176 to i64
  %3178 = getelementptr inbounds double, ptr %2, i64 %3177
  %3179 = load double, ptr %3178, align 8, !tbaa !18
  %3180 = getelementptr inbounds float, ptr %3069, i64 %3177
  %3181 = load float, ptr %3180, align 4, !tbaa !162
  %3182 = fptosi float %3181 to i64
  %3183 = sitofp i64 %3102 to double
  %3184 = sitofp i64 %3182 to double
  %3185 = fmul fast double %3179, %3184
  %3186 = fmul fast double %3185, %3185
  %3187 = fadd fast double %3186, %3183
  %3188 = fptosi double %3187 to i64
  %3189 = fadd fast double %3179, %3104
  %3190 = add nuw nsw i32 %3103, 1
  br i1 %3095, label %3191, label %3238

3191:                                             ; preds = %3175
  %3192 = load i32, ptr %4, align 4, !tbaa !5
  %3193 = load i32, ptr %12, align 4, !tbaa !5
  %3194 = add nsw i32 %3193, -1
  %3195 = icmp slt i32 %3192, %3194
  br i1 %3195, label %3215, label %3196

3196:                                             ; preds = %3191
  %3197 = icmp eq i32 %3192, %3194
  br i1 %3197, label %3198, label %3231

3198:                                             ; preds = %3196
  store i32 0, ptr %4, align 4, !tbaa !5
  %3199 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3199, ptr %6, align 4, !tbaa !5
  br i1 %3100, label %3238, label %3200

3200:                                             ; preds = %3198, %3225
  %3201 = phi i64 [ %3229, %3225 ], [ 1, %3198 ]
  %3202 = getelementptr inbounds i32, ptr %4, i64 %3201
  %3203 = load i32, ptr %3202, align 4, !tbaa !5
  %3204 = getelementptr inbounds i32, ptr %12, i64 %3201
  %3205 = load i32, ptr %3204, align 4, !tbaa !5
  %3206 = add nsw i32 %3205, -1
  %3207 = icmp slt i32 %3203, %3206
  br i1 %3207, label %3208, label %3223

3208:                                             ; preds = %3200
  br i1 %3195, label %3215, label %3209

3209:                                             ; preds = %3208
  %3210 = getelementptr inbounds i32, ptr %7, i64 %3201
  %3211 = load i32, ptr %3210, align 4, !tbaa !5
  %3212 = getelementptr inbounds i32, ptr %6, i64 %3201
  %3213 = load i32, ptr %3212, align 4, !tbaa !5
  %3214 = add nsw i32 %3213, %3211
  store i32 %3214, ptr %3212, align 4, !tbaa !5
  br label %3233

3215:                                             ; preds = %3191, %3208
  %3216 = phi i32 [ %3203, %3208 ], [ %3192, %3191 ]
  %3217 = phi ptr [ %3202, %3208 ], [ %4, %3191 ]
  %3218 = phi i64 [ %3201, %3208 ], [ 0, %3191 ]
  %3219 = add nsw i32 %3216, 1
  store i32 %3219, ptr %3217, align 4, !tbaa !5
  %3220 = getelementptr inbounds i32, ptr %7, i64 %3218
  %3221 = load i32, ptr %3220, align 4, !tbaa !5
  %3222 = getelementptr inbounds i32, ptr %6, i64 %3218
  br label %3233

3223:                                             ; preds = %3200
  %3224 = icmp eq i32 %3203, %3206
  br i1 %3224, label %3225, label %3231

3225:                                             ; preds = %3223
  store i32 0, ptr %3202, align 4, !tbaa !5
  %3226 = getelementptr inbounds i32, ptr %8, i64 %3201
  %3227 = load i32, ptr %3226, align 4, !tbaa !5
  %3228 = getelementptr inbounds i32, ptr %6, i64 %3201
  store i32 %3227, ptr %3228, align 4, !tbaa !5
  %3229 = add nuw nsw i64 %3201, 1
  %3230 = icmp eq i64 %3229, %3098
  br i1 %3230, label %3238, label %3200, !llvm.loop !1227

3231:                                             ; preds = %3196, %3223
  store i64 %3188, ptr %3071, align 8, !tbaa !120
  %3232 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2019, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

3233:                                             ; preds = %3209, %3215
  %3234 = phi ptr [ %3222, %3215 ], [ %3202, %3209 ]
  %3235 = phi i32 [ %3221, %3215 ], [ 1, %3209 ]
  %3236 = load i32, ptr %3234, align 4, !tbaa !5
  %3237 = add nsw i32 %3236, %3235
  store i32 %3237, ptr %3234, align 4, !tbaa !5
  br label %3238

3238:                                             ; preds = %3225, %3233, %3198, %3175
  %3239 = icmp eq i32 %3190, %5
  br i1 %3239, label %5492, label %3101, !llvm.loop !1228

3240:                                             ; preds = %3084, %3379
  %3241 = phi i64 [ 0, %3084 ], [ %3327, %3379 ]
  %3242 = phi i32 [ 0, %3084 ], [ %3328, %3379 ]
  %3243 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3085, label %3244, label %3313

3244:                                             ; preds = %3240, %3303
  %3245 = phi i32 [ %3312, %3303 ], [ 0, %3240 ]
  %3246 = phi i64 [ %3254, %3303 ], [ %3089, %3240 ]
  %3247 = phi i64 [ %3311, %3303 ], [ %3088, %3240 ]
  %3248 = phi i32 [ %3309, %3303 ], [ %3243, %3240 ]
  %3249 = sub i32 %3087, %3245
  %3250 = tail call i32 @llvm.smin.i32(i32 %3249, i32 0)
  %3251 = sub i32 %3249, %3250
  %3252 = zext i32 %3251 to i64
  %3253 = add nuw nsw i64 %3252, 1
  %3254 = add nsw i64 %3246, -1
  %3255 = icmp ult i32 %3251, 31
  br i1 %3255, label %3291, label %3256

3256:                                             ; preds = %3244
  %3257 = and i64 %3253, 8589934560
  %3258 = sub i64 %3247, %3257
  br label %3259

3259:                                             ; preds = %3259, %3256
  %3260 = phi i64 [ 0, %3256 ], [ %3283, %3259 ]
  %3261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3256 ], [ %3279, %3259 ]
  %3262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3256 ], [ %3280, %3259 ]
  %3263 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3256 ], [ %3281, %3259 ]
  %3264 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3256 ], [ %3282, %3259 ]
  %3265 = sub i64 %3247, %3260
  %3266 = getelementptr inbounds i32, ptr %11, i64 %3265
  %3267 = getelementptr inbounds i32, ptr %3266, i64 -7
  %3268 = load <8 x i32>, ptr %3267, align 4, !tbaa !5
  %3269 = shufflevector <8 x i32> %3268, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3270 = getelementptr inbounds i32, ptr %3266, i64 -15
  %3271 = load <8 x i32>, ptr %3270, align 4, !tbaa !5
  %3272 = shufflevector <8 x i32> %3271, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3273 = getelementptr inbounds i32, ptr %3266, i64 -23
  %3274 = load <8 x i32>, ptr %3273, align 4, !tbaa !5
  %3275 = shufflevector <8 x i32> %3274, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3276 = getelementptr inbounds i32, ptr %3266, i64 -31
  %3277 = load <8 x i32>, ptr %3276, align 4, !tbaa !5
  %3278 = shufflevector <8 x i32> %3277, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3279 = mul <8 x i32> %3269, %3261
  %3280 = mul <8 x i32> %3272, %3262
  %3281 = mul <8 x i32> %3275, %3263
  %3282 = mul <8 x i32> %3278, %3264
  %3283 = add nuw i64 %3260, 32
  %3284 = icmp eq i64 %3283, %3257
  br i1 %3284, label %3285, label %3259, !llvm.loop !1229

3285:                                             ; preds = %3259
  %3286 = mul <8 x i32> %3280, %3279
  %3287 = mul <8 x i32> %3281, %3286
  %3288 = mul <8 x i32> %3282, %3287
  %3289 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3288)
  %3290 = icmp eq i64 %3253, %3257
  br i1 %3290, label %3303, label %3291

3291:                                             ; preds = %3244, %3285
  %3292 = phi i64 [ %3247, %3244 ], [ %3258, %3285 ]
  %3293 = phi i32 [ 1, %3244 ], [ %3289, %3285 ]
  br label %3294

3294:                                             ; preds = %3291, %3294
  %3295 = phi i64 [ %3300, %3294 ], [ %3292, %3291 ]
  %3296 = phi i32 [ %3299, %3294 ], [ %3293, %3291 ]
  %3297 = getelementptr inbounds i32, ptr %11, i64 %3295
  %3298 = load i32, ptr %3297, align 4, !tbaa !5
  %3299 = mul nsw i32 %3298, %3296
  %3300 = add nsw i64 %3295, -1
  %3301 = trunc i64 %3295 to i32
  %3302 = icmp sgt i32 %3301, 0
  br i1 %3302, label %3294, label %3303, !llvm.loop !1230

3303:                                             ; preds = %3294, %3285
  %3304 = phi i32 [ %3289, %3285 ], [ %3299, %3294 ]
  %3305 = and i64 %3254, 4294967295
  %3306 = getelementptr inbounds i32, ptr %6, i64 %3305
  %3307 = load i32, ptr %3306, align 4, !tbaa !5
  %3308 = mul nsw i32 %3307, %3304
  %3309 = add nsw i32 %3308, %3248
  %3310 = icmp sgt i64 %3246, 2
  %3311 = add nsw i64 %3247, -1
  %3312 = add i32 %3245, 1
  br i1 %3310, label %3244, label %3313, !llvm.loop !1231

3313:                                             ; preds = %3303, %3240
  %3314 = phi i32 [ %3243, %3240 ], [ %3309, %3303 ]
  %3315 = icmp slt i32 %3314, %5
  br i1 %3315, label %3318, label %3316

3316:                                             ; preds = %3313
  %3317 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2019, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

3318:                                             ; preds = %3313
  %3319 = sext i32 %3314 to i64
  %3320 = getelementptr inbounds float, ptr %3069, i64 %3319
  %3321 = load float, ptr %3320, align 4, !tbaa !162
  %3322 = fptosi float %3321 to i64
  %3323 = sitofp i64 %3241 to double
  %3324 = sitofp i64 %3322 to double
  %3325 = fmul fast double %3324, %3324
  %3326 = fadd fast double %3325, %3323
  %3327 = fptosi double %3326 to i64
  store i64 %3327, ptr %3071, align 8, !tbaa !120
  %3328 = add nuw nsw i32 %3242, 1
  br i1 %3086, label %3329, label %3379

3329:                                             ; preds = %3318
  %3330 = load i32, ptr %4, align 4, !tbaa !5
  %3331 = load i32, ptr %12, align 4, !tbaa !5
  %3332 = add nsw i32 %3331, -1
  %3333 = icmp slt i32 %3330, %3332
  br i1 %3333, label %3356, label %3334

3334:                                             ; preds = %3329
  %3335 = icmp eq i32 %3330, %3332
  br i1 %3335, label %3336, label %3372

3336:                                             ; preds = %3334
  store i32 0, ptr %4, align 4, !tbaa !5
  %3337 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3337, ptr %6, align 4, !tbaa !5
  br i1 %3091, label %3379, label %3338

3338:                                             ; preds = %3336, %3366
  %3339 = phi i64 [ %3370, %3366 ], [ 1, %3336 ]
  %3340 = getelementptr inbounds i32, ptr %4, i64 %3339
  %3341 = load i32, ptr %3340, align 4, !tbaa !5
  %3342 = getelementptr inbounds i32, ptr %12, i64 %3339
  %3343 = load i32, ptr %3342, align 4, !tbaa !5
  %3344 = add nsw i32 %3343, -1
  %3345 = icmp slt i32 %3341, %3344
  br i1 %3345, label %3346, label %3364

3346:                                             ; preds = %3338
  br i1 %3333, label %3356, label %3347

3347:                                             ; preds = %3346
  %3348 = shl i64 %3339, 32
  %3349 = add i64 %3348, -4294967296
  %3350 = ashr exact i64 %3349, 32
  %3351 = getelementptr inbounds i32, ptr %7, i64 %3350
  %3352 = load i32, ptr %3351, align 4, !tbaa !5
  %3353 = getelementptr inbounds i32, ptr %6, i64 %3339
  %3354 = load i32, ptr %3353, align 4, !tbaa !5
  %3355 = add nsw i32 %3354, %3352
  store i32 %3355, ptr %3353, align 4, !tbaa !5
  br label %3374

3356:                                             ; preds = %3329, %3346
  %3357 = phi i32 [ %3341, %3346 ], [ %3330, %3329 ]
  %3358 = phi ptr [ %3340, %3346 ], [ %4, %3329 ]
  %3359 = phi i64 [ %3339, %3346 ], [ 0, %3329 ]
  %3360 = add nsw i32 %3357, 1
  store i32 %3360, ptr %3358, align 4, !tbaa !5
  %3361 = getelementptr inbounds i32, ptr %7, i64 %3359
  %3362 = load i32, ptr %3361, align 4, !tbaa !5
  %3363 = getelementptr inbounds i32, ptr %6, i64 %3359
  br label %3374

3364:                                             ; preds = %3338
  %3365 = icmp eq i32 %3341, %3344
  br i1 %3365, label %3366, label %3372

3366:                                             ; preds = %3364
  store i32 0, ptr %3340, align 4, !tbaa !5
  %3367 = getelementptr inbounds i32, ptr %8, i64 %3339
  %3368 = load i32, ptr %3367, align 4, !tbaa !5
  %3369 = getelementptr inbounds i32, ptr %6, i64 %3339
  store i32 %3368, ptr %3369, align 4, !tbaa !5
  %3370 = add nuw nsw i64 %3339, 1
  %3371 = icmp eq i64 %3370, %3089
  br i1 %3371, label %3379, label %3338, !llvm.loop !1232

3372:                                             ; preds = %3334, %3364
  %3373 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2019, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

3374:                                             ; preds = %3347, %3356
  %3375 = phi ptr [ %3363, %3356 ], [ %3340, %3347 ]
  %3376 = phi i32 [ %3362, %3356 ], [ 1, %3347 ]
  %3377 = load i32, ptr %3375, align 4, !tbaa !5
  %3378 = add nsw i32 %3377, %3376
  store i32 %3378, ptr %3375, align 4, !tbaa !5
  br label %3379

3379:                                             ; preds = %3366, %3374, %3336, %3318
  %3380 = icmp eq i32 %3328, %5
  br i1 %3380, label %5496, label %3240, !llvm.loop !1233

3381:                                             ; preds = %3077
  %3382 = getelementptr inbounds i32, ptr %3, i64 %19
  %3383 = load i32, ptr %3382, align 4, !tbaa !5
  %3384 = icmp eq i32 %3383, 0
  %3385 = icmp sgt i32 %5, 0
  br i1 %3384, label %3395, label %3386

3386:                                             ; preds = %3381
  br i1 %3385, label %3387, label %5496

3387:                                             ; preds = %3386
  %3388 = icmp sgt i32 %13, 1
  %3389 = icmp sgt i32 %13, 0
  %3390 = add i32 %13, -2
  %3391 = zext i32 %3390 to i64
  %3392 = zext i32 %13 to i64
  %3393 = add nuw i32 %5, 1
  %3394 = icmp eq i32 %13, 1
  br label %3537

3395:                                             ; preds = %3381
  br i1 %3385, label %3396, label %5496

3396:                                             ; preds = %3395
  %3397 = icmp sgt i32 %13, 1
  %3398 = icmp sgt i32 %13, 0
  %3399 = add i32 %13, -2
  %3400 = zext i32 %3399 to i64
  %3401 = zext i32 %13 to i64
  %3402 = add nuw i32 %5, 1
  %3403 = icmp eq i32 %13, 1
  br label %3404

3404:                                             ; preds = %3396, %3535
  %3405 = phi i64 [ 0, %3396 ], [ %3485, %3535 ]
  %3406 = phi i32 [ 0, %3396 ], [ %3487, %3535 ]
  %3407 = phi double [ 0.000000e+00, %3396 ], [ %3486, %3535 ]
  %3408 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3397, label %3409, label %3478

3409:                                             ; preds = %3404, %3468
  %3410 = phi i32 [ %3477, %3468 ], [ 0, %3404 ]
  %3411 = phi i64 [ %3419, %3468 ], [ %3401, %3404 ]
  %3412 = phi i64 [ %3476, %3468 ], [ %3400, %3404 ]
  %3413 = phi i32 [ %3474, %3468 ], [ %3408, %3404 ]
  %3414 = sub i32 %3399, %3410
  %3415 = tail call i32 @llvm.smin.i32(i32 %3414, i32 0)
  %3416 = sub i32 %3414, %3415
  %3417 = zext i32 %3416 to i64
  %3418 = add nuw nsw i64 %3417, 1
  %3419 = add nsw i64 %3411, -1
  %3420 = icmp ult i32 %3416, 31
  br i1 %3420, label %3456, label %3421

3421:                                             ; preds = %3409
  %3422 = and i64 %3418, 8589934560
  %3423 = sub i64 %3412, %3422
  br label %3424

3424:                                             ; preds = %3424, %3421
  %3425 = phi i64 [ 0, %3421 ], [ %3448, %3424 ]
  %3426 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3421 ], [ %3444, %3424 ]
  %3427 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3421 ], [ %3445, %3424 ]
  %3428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3421 ], [ %3446, %3424 ]
  %3429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3421 ], [ %3447, %3424 ]
  %3430 = sub i64 %3412, %3425
  %3431 = getelementptr inbounds i32, ptr %9, i64 %3430
  %3432 = getelementptr inbounds i32, ptr %3431, i64 -7
  %3433 = load <8 x i32>, ptr %3432, align 4, !tbaa !5
  %3434 = shufflevector <8 x i32> %3433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3435 = getelementptr inbounds i32, ptr %3431, i64 -15
  %3436 = load <8 x i32>, ptr %3435, align 4, !tbaa !5
  %3437 = shufflevector <8 x i32> %3436, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3438 = getelementptr inbounds i32, ptr %3431, i64 -23
  %3439 = load <8 x i32>, ptr %3438, align 4, !tbaa !5
  %3440 = shufflevector <8 x i32> %3439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3441 = getelementptr inbounds i32, ptr %3431, i64 -31
  %3442 = load <8 x i32>, ptr %3441, align 4, !tbaa !5
  %3443 = shufflevector <8 x i32> %3442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3444 = mul <8 x i32> %3434, %3426
  %3445 = mul <8 x i32> %3437, %3427
  %3446 = mul <8 x i32> %3440, %3428
  %3447 = mul <8 x i32> %3443, %3429
  %3448 = add nuw i64 %3425, 32
  %3449 = icmp eq i64 %3448, %3422
  br i1 %3449, label %3450, label %3424, !llvm.loop !1234

3450:                                             ; preds = %3424
  %3451 = mul <8 x i32> %3445, %3444
  %3452 = mul <8 x i32> %3446, %3451
  %3453 = mul <8 x i32> %3447, %3452
  %3454 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3453)
  %3455 = icmp eq i64 %3418, %3422
  br i1 %3455, label %3468, label %3456

3456:                                             ; preds = %3409, %3450
  %3457 = phi i64 [ %3412, %3409 ], [ %3423, %3450 ]
  %3458 = phi i32 [ 1, %3409 ], [ %3454, %3450 ]
  br label %3459

3459:                                             ; preds = %3456, %3459
  %3460 = phi i64 [ %3465, %3459 ], [ %3457, %3456 ]
  %3461 = phi i32 [ %3464, %3459 ], [ %3458, %3456 ]
  %3462 = getelementptr inbounds i32, ptr %9, i64 %3460
  %3463 = load i32, ptr %3462, align 4, !tbaa !5
  %3464 = mul nsw i32 %3463, %3461
  %3465 = add nsw i64 %3460, -1
  %3466 = trunc i64 %3460 to i32
  %3467 = icmp sgt i32 %3466, 0
  br i1 %3467, label %3459, label %3468, !llvm.loop !1235

3468:                                             ; preds = %3459, %3450
  %3469 = phi i32 [ %3454, %3450 ], [ %3464, %3459 ]
  %3470 = and i64 %3419, 4294967295
  %3471 = getelementptr inbounds i32, ptr %6, i64 %3470
  %3472 = load i32, ptr %3471, align 4, !tbaa !5
  %3473 = mul nsw i32 %3472, %3469
  %3474 = add nsw i32 %3473, %3413
  %3475 = icmp sgt i64 %3411, 2
  %3476 = add nsw i64 %3412, -1
  %3477 = add i32 %3410, 1
  br i1 %3475, label %3409, label %3478, !llvm.loop !1236

3478:                                             ; preds = %3468, %3404
  %3479 = phi i32 [ %3408, %3404 ], [ %3474, %3468 ]
  %3480 = sext i32 %3479 to i64
  %3481 = getelementptr inbounds float, ptr %3069, i64 %3480
  %3482 = load float, ptr %3481, align 4, !tbaa !162
  %3483 = fptosi float %3482 to i64
  %3484 = mul nsw i64 %3483, %3483
  %3485 = add nuw nsw i64 %3484, %3405
  %3486 = fadd fast double %3407, 1.000000e+00
  %3487 = add nuw nsw i32 %3406, 1
  br i1 %3398, label %3488, label %3535

3488:                                             ; preds = %3478
  %3489 = load i32, ptr %4, align 4, !tbaa !5
  %3490 = load i32, ptr %12, align 4, !tbaa !5
  %3491 = add nsw i32 %3490, -1
  %3492 = icmp slt i32 %3489, %3491
  br i1 %3492, label %3512, label %3493

3493:                                             ; preds = %3488
  %3494 = icmp eq i32 %3489, %3491
  br i1 %3494, label %3495, label %3528

3495:                                             ; preds = %3493
  store i32 0, ptr %4, align 4, !tbaa !5
  %3496 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3496, ptr %6, align 4, !tbaa !5
  br i1 %3403, label %3535, label %3497

3497:                                             ; preds = %3495, %3522
  %3498 = phi i64 [ %3526, %3522 ], [ 1, %3495 ]
  %3499 = getelementptr inbounds i32, ptr %4, i64 %3498
  %3500 = load i32, ptr %3499, align 4, !tbaa !5
  %3501 = getelementptr inbounds i32, ptr %12, i64 %3498
  %3502 = load i32, ptr %3501, align 4, !tbaa !5
  %3503 = add nsw i32 %3502, -1
  %3504 = icmp slt i32 %3500, %3503
  br i1 %3504, label %3505, label %3520

3505:                                             ; preds = %3497
  br i1 %3492, label %3512, label %3506

3506:                                             ; preds = %3505
  %3507 = getelementptr inbounds i32, ptr %7, i64 %3498
  %3508 = load i32, ptr %3507, align 4, !tbaa !5
  %3509 = getelementptr inbounds i32, ptr %6, i64 %3498
  %3510 = load i32, ptr %3509, align 4, !tbaa !5
  %3511 = add nsw i32 %3510, %3508
  store i32 %3511, ptr %3509, align 4, !tbaa !5
  br label %3530

3512:                                             ; preds = %3488, %3505
  %3513 = phi i32 [ %3500, %3505 ], [ %3489, %3488 ]
  %3514 = phi ptr [ %3499, %3505 ], [ %4, %3488 ]
  %3515 = phi i64 [ %3498, %3505 ], [ 0, %3488 ]
  %3516 = add nsw i32 %3513, 1
  store i32 %3516, ptr %3514, align 4, !tbaa !5
  %3517 = getelementptr inbounds i32, ptr %7, i64 %3515
  %3518 = load i32, ptr %3517, align 4, !tbaa !5
  %3519 = getelementptr inbounds i32, ptr %6, i64 %3515
  br label %3530

3520:                                             ; preds = %3497
  %3521 = icmp eq i32 %3500, %3503
  br i1 %3521, label %3522, label %3528

3522:                                             ; preds = %3520
  store i32 0, ptr %3499, align 4, !tbaa !5
  %3523 = getelementptr inbounds i32, ptr %8, i64 %3498
  %3524 = load i32, ptr %3523, align 4, !tbaa !5
  %3525 = getelementptr inbounds i32, ptr %6, i64 %3498
  store i32 %3524, ptr %3525, align 4, !tbaa !5
  %3526 = add nuw nsw i64 %3498, 1
  %3527 = icmp eq i64 %3526, %3401
  br i1 %3527, label %3535, label %3497, !llvm.loop !1237

3528:                                             ; preds = %3493, %3520
  store i64 %3485, ptr %3071, align 8, !tbaa !120
  %3529 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2019, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

3530:                                             ; preds = %3506, %3512
  %3531 = phi ptr [ %3519, %3512 ], [ %3499, %3506 ]
  %3532 = phi i32 [ %3518, %3512 ], [ 1, %3506 ]
  %3533 = load i32, ptr %3531, align 4, !tbaa !5
  %3534 = add nsw i32 %3533, %3532
  store i32 %3534, ptr %3531, align 4, !tbaa !5
  br label %3535

3535:                                             ; preds = %3522, %3530, %3495, %3478
  %3536 = icmp eq i32 %3487, %5
  br i1 %3536, label %5493, label %3404, !llvm.loop !1238

3537:                                             ; preds = %3387, %3673
  %3538 = phi i64 [ 0, %3387 ], [ %3621, %3673 ]
  %3539 = phi i32 [ 0, %3387 ], [ %3622, %3673 ]
  %3540 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3388, label %3541, label %3610

3541:                                             ; preds = %3537, %3600
  %3542 = phi i32 [ %3609, %3600 ], [ 0, %3537 ]
  %3543 = phi i64 [ %3551, %3600 ], [ %3392, %3537 ]
  %3544 = phi i64 [ %3608, %3600 ], [ %3391, %3537 ]
  %3545 = phi i32 [ %3606, %3600 ], [ %3540, %3537 ]
  %3546 = sub i32 %3390, %3542
  %3547 = tail call i32 @llvm.smin.i32(i32 %3546, i32 0)
  %3548 = sub i32 %3546, %3547
  %3549 = zext i32 %3548 to i64
  %3550 = add nuw nsw i64 %3549, 1
  %3551 = add nsw i64 %3543, -1
  %3552 = icmp ult i32 %3548, 31
  br i1 %3552, label %3588, label %3553

3553:                                             ; preds = %3541
  %3554 = and i64 %3550, 8589934560
  %3555 = sub i64 %3544, %3554
  br label %3556

3556:                                             ; preds = %3556, %3553
  %3557 = phi i64 [ 0, %3553 ], [ %3580, %3556 ]
  %3558 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3553 ], [ %3576, %3556 ]
  %3559 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3553 ], [ %3577, %3556 ]
  %3560 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3553 ], [ %3578, %3556 ]
  %3561 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3553 ], [ %3579, %3556 ]
  %3562 = sub i64 %3544, %3557
  %3563 = getelementptr inbounds i32, ptr %11, i64 %3562
  %3564 = getelementptr inbounds i32, ptr %3563, i64 -7
  %3565 = load <8 x i32>, ptr %3564, align 4, !tbaa !5
  %3566 = shufflevector <8 x i32> %3565, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3567 = getelementptr inbounds i32, ptr %3563, i64 -15
  %3568 = load <8 x i32>, ptr %3567, align 4, !tbaa !5
  %3569 = shufflevector <8 x i32> %3568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3570 = getelementptr inbounds i32, ptr %3563, i64 -23
  %3571 = load <8 x i32>, ptr %3570, align 4, !tbaa !5
  %3572 = shufflevector <8 x i32> %3571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3573 = getelementptr inbounds i32, ptr %3563, i64 -31
  %3574 = load <8 x i32>, ptr %3573, align 4, !tbaa !5
  %3575 = shufflevector <8 x i32> %3574, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3576 = mul <8 x i32> %3566, %3558
  %3577 = mul <8 x i32> %3569, %3559
  %3578 = mul <8 x i32> %3572, %3560
  %3579 = mul <8 x i32> %3575, %3561
  %3580 = add nuw i64 %3557, 32
  %3581 = icmp eq i64 %3580, %3554
  br i1 %3581, label %3582, label %3556, !llvm.loop !1239

3582:                                             ; preds = %3556
  %3583 = mul <8 x i32> %3577, %3576
  %3584 = mul <8 x i32> %3578, %3583
  %3585 = mul <8 x i32> %3579, %3584
  %3586 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3585)
  %3587 = icmp eq i64 %3550, %3554
  br i1 %3587, label %3600, label %3588

3588:                                             ; preds = %3541, %3582
  %3589 = phi i64 [ %3544, %3541 ], [ %3555, %3582 ]
  %3590 = phi i32 [ 1, %3541 ], [ %3586, %3582 ]
  br label %3591

3591:                                             ; preds = %3588, %3591
  %3592 = phi i64 [ %3597, %3591 ], [ %3589, %3588 ]
  %3593 = phi i32 [ %3596, %3591 ], [ %3590, %3588 ]
  %3594 = getelementptr inbounds i32, ptr %11, i64 %3592
  %3595 = load i32, ptr %3594, align 4, !tbaa !5
  %3596 = mul nsw i32 %3595, %3593
  %3597 = add nsw i64 %3592, -1
  %3598 = trunc i64 %3592 to i32
  %3599 = icmp sgt i32 %3598, 0
  br i1 %3599, label %3591, label %3600, !llvm.loop !1240

3600:                                             ; preds = %3591, %3582
  %3601 = phi i32 [ %3586, %3582 ], [ %3596, %3591 ]
  %3602 = and i64 %3551, 4294967295
  %3603 = getelementptr inbounds i32, ptr %6, i64 %3602
  %3604 = load i32, ptr %3603, align 4, !tbaa !5
  %3605 = mul nsw i32 %3604, %3601
  %3606 = add nsw i32 %3605, %3545
  %3607 = icmp sgt i64 %3543, 2
  %3608 = add nsw i64 %3544, -1
  %3609 = add i32 %3542, 1
  br i1 %3607, label %3541, label %3610, !llvm.loop !1241

3610:                                             ; preds = %3600, %3537
  %3611 = phi i32 [ %3540, %3537 ], [ %3606, %3600 ]
  %3612 = icmp slt i32 %3611, %5
  br i1 %3612, label %3615, label %3613

3613:                                             ; preds = %3610
  %3614 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2019, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

3615:                                             ; preds = %3610
  %3616 = sext i32 %3611 to i64
  %3617 = getelementptr inbounds float, ptr %3069, i64 %3616
  %3618 = load float, ptr %3617, align 4, !tbaa !162
  %3619 = fptosi float %3618 to i64
  %3620 = mul nsw i64 %3619, %3619
  %3621 = add nuw nsw i64 %3620, %3538
  store i64 %3621, ptr %3071, align 8, !tbaa !120
  %3622 = add nuw nsw i32 %3539, 1
  br i1 %3389, label %3623, label %3673

3623:                                             ; preds = %3615
  %3624 = load i32, ptr %4, align 4, !tbaa !5
  %3625 = load i32, ptr %12, align 4, !tbaa !5
  %3626 = add nsw i32 %3625, -1
  %3627 = icmp slt i32 %3624, %3626
  br i1 %3627, label %3650, label %3628

3628:                                             ; preds = %3623
  %3629 = icmp eq i32 %3624, %3626
  br i1 %3629, label %3630, label %3666

3630:                                             ; preds = %3628
  store i32 0, ptr %4, align 4, !tbaa !5
  %3631 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3631, ptr %6, align 4, !tbaa !5
  br i1 %3394, label %3673, label %3632

3632:                                             ; preds = %3630, %3660
  %3633 = phi i64 [ %3664, %3660 ], [ 1, %3630 ]
  %3634 = getelementptr inbounds i32, ptr %4, i64 %3633
  %3635 = load i32, ptr %3634, align 4, !tbaa !5
  %3636 = getelementptr inbounds i32, ptr %12, i64 %3633
  %3637 = load i32, ptr %3636, align 4, !tbaa !5
  %3638 = add nsw i32 %3637, -1
  %3639 = icmp slt i32 %3635, %3638
  br i1 %3639, label %3640, label %3658

3640:                                             ; preds = %3632
  br i1 %3627, label %3650, label %3641

3641:                                             ; preds = %3640
  %3642 = shl i64 %3633, 32
  %3643 = add i64 %3642, -4294967296
  %3644 = ashr exact i64 %3643, 32
  %3645 = getelementptr inbounds i32, ptr %7, i64 %3644
  %3646 = load i32, ptr %3645, align 4, !tbaa !5
  %3647 = getelementptr inbounds i32, ptr %6, i64 %3633
  %3648 = load i32, ptr %3647, align 4, !tbaa !5
  %3649 = add nsw i32 %3648, %3646
  store i32 %3649, ptr %3647, align 4, !tbaa !5
  br label %3668

3650:                                             ; preds = %3623, %3640
  %3651 = phi i32 [ %3635, %3640 ], [ %3624, %3623 ]
  %3652 = phi ptr [ %3634, %3640 ], [ %4, %3623 ]
  %3653 = phi i64 [ %3633, %3640 ], [ 0, %3623 ]
  %3654 = add nsw i32 %3651, 1
  store i32 %3654, ptr %3652, align 4, !tbaa !5
  %3655 = getelementptr inbounds i32, ptr %7, i64 %3653
  %3656 = load i32, ptr %3655, align 4, !tbaa !5
  %3657 = getelementptr inbounds i32, ptr %6, i64 %3653
  br label %3668

3658:                                             ; preds = %3632
  %3659 = icmp eq i32 %3635, %3638
  br i1 %3659, label %3660, label %3666

3660:                                             ; preds = %3658
  store i32 0, ptr %3634, align 4, !tbaa !5
  %3661 = getelementptr inbounds i32, ptr %8, i64 %3633
  %3662 = load i32, ptr %3661, align 4, !tbaa !5
  %3663 = getelementptr inbounds i32, ptr %6, i64 %3633
  store i32 %3662, ptr %3663, align 4, !tbaa !5
  %3664 = add nuw nsw i64 %3633, 1
  %3665 = icmp eq i64 %3664, %3392
  br i1 %3665, label %3673, label %3632, !llvm.loop !1242

3666:                                             ; preds = %3628, %3658
  %3667 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2019, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

3668:                                             ; preds = %3641, %3650
  %3669 = phi ptr [ %3657, %3650 ], [ %3634, %3641 ]
  %3670 = phi i32 [ %3656, %3650 ], [ 1, %3641 ]
  %3671 = load i32, ptr %3669, align 4, !tbaa !5
  %3672 = add nsw i32 %3671, %3670
  store i32 %3672, ptr %3669, align 4, !tbaa !5
  br label %3673

3673:                                             ; preds = %3660, %3668, %3630, %3615
  %3674 = icmp eq i32 %3622, %5
  br i1 %3674, label %5496, label %3537, !llvm.loop !1243

3675:                                             ; preds = %3077
  %3676 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2019, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5496

3677:                                             ; preds = %18
  %3678 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3679 = load ptr, ptr %3678, align 8, !tbaa !9
  %3680 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3681 = load ptr, ptr %3680, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3681, align 8, !tbaa !18
  %3682 = icmp eq i32 %13, 0
  br i1 %3682, label %3683, label %3687

3683:                                             ; preds = %3677
  %3684 = load float, ptr %3679, align 4, !tbaa !162
  %3685 = fpext float %3684 to double
  %3686 = fmul fast double %3685, %3685
  store double %3686, ptr %3681, align 8, !tbaa !18
  br label %5496

3687:                                             ; preds = %3677
  switch i32 %1, label %4279 [
    i32 1, label %3688
    i32 0, label %3985
  ]

3688:                                             ; preds = %3687
  %3689 = getelementptr inbounds i32, ptr %3, i64 %19
  %3690 = load i32, ptr %3689, align 4, !tbaa !5
  %3691 = icmp eq i32 %3690, 0
  %3692 = icmp sgt i32 %5, 0
  br i1 %3691, label %3702, label %3693

3693:                                             ; preds = %3688
  br i1 %3692, label %3694, label %5496

3694:                                             ; preds = %3693
  %3695 = icmp sgt i32 %13, 1
  %3696 = icmp sgt i32 %13, 0
  %3697 = add i32 %13, -2
  %3698 = zext i32 %3697 to i64
  %3699 = zext i32 %13 to i64
  %3700 = add nuw i32 %5, 1
  %3701 = icmp eq i32 %13, 1
  br label %3847

3702:                                             ; preds = %3688
  br i1 %3692, label %3703, label %5496

3703:                                             ; preds = %3702
  %3704 = icmp sgt i32 %13, 1
  %3705 = icmp sgt i32 %13, 0
  %3706 = add i32 %13, -2
  %3707 = zext i32 %3706 to i64
  %3708 = zext i32 %13 to i64
  %3709 = add nuw i32 %5, 1
  %3710 = icmp eq i32 %13, 1
  br label %3711

3711:                                             ; preds = %3703, %3845
  %3712 = phi double [ 0.000000e+00, %3703 ], [ %3795, %3845 ]
  %3713 = phi i32 [ 0, %3703 ], [ %3797, %3845 ]
  %3714 = phi double [ 0.000000e+00, %3703 ], [ %3796, %3845 ]
  %3715 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3704, label %3716, label %3785

3716:                                             ; preds = %3711, %3775
  %3717 = phi i32 [ %3784, %3775 ], [ 0, %3711 ]
  %3718 = phi i64 [ %3726, %3775 ], [ %3708, %3711 ]
  %3719 = phi i64 [ %3783, %3775 ], [ %3707, %3711 ]
  %3720 = phi i32 [ %3781, %3775 ], [ %3715, %3711 ]
  %3721 = sub i32 %3706, %3717
  %3722 = tail call i32 @llvm.smin.i32(i32 %3721, i32 0)
  %3723 = sub i32 %3721, %3722
  %3724 = zext i32 %3723 to i64
  %3725 = add nuw nsw i64 %3724, 1
  %3726 = add nsw i64 %3718, -1
  %3727 = icmp ult i32 %3723, 31
  br i1 %3727, label %3763, label %3728

3728:                                             ; preds = %3716
  %3729 = and i64 %3725, 8589934560
  %3730 = sub i64 %3719, %3729
  br label %3731

3731:                                             ; preds = %3731, %3728
  %3732 = phi i64 [ 0, %3728 ], [ %3755, %3731 ]
  %3733 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3728 ], [ %3751, %3731 ]
  %3734 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3728 ], [ %3752, %3731 ]
  %3735 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3728 ], [ %3753, %3731 ]
  %3736 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3728 ], [ %3754, %3731 ]
  %3737 = sub i64 %3719, %3732
  %3738 = getelementptr inbounds i32, ptr %9, i64 %3737
  %3739 = getelementptr inbounds i32, ptr %3738, i64 -7
  %3740 = load <8 x i32>, ptr %3739, align 4, !tbaa !5
  %3741 = shufflevector <8 x i32> %3740, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3742 = getelementptr inbounds i32, ptr %3738, i64 -15
  %3743 = load <8 x i32>, ptr %3742, align 4, !tbaa !5
  %3744 = shufflevector <8 x i32> %3743, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3745 = getelementptr inbounds i32, ptr %3738, i64 -23
  %3746 = load <8 x i32>, ptr %3745, align 4, !tbaa !5
  %3747 = shufflevector <8 x i32> %3746, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3748 = getelementptr inbounds i32, ptr %3738, i64 -31
  %3749 = load <8 x i32>, ptr %3748, align 4, !tbaa !5
  %3750 = shufflevector <8 x i32> %3749, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3751 = mul <8 x i32> %3741, %3733
  %3752 = mul <8 x i32> %3744, %3734
  %3753 = mul <8 x i32> %3747, %3735
  %3754 = mul <8 x i32> %3750, %3736
  %3755 = add nuw i64 %3732, 32
  %3756 = icmp eq i64 %3755, %3729
  br i1 %3756, label %3757, label %3731, !llvm.loop !1244

3757:                                             ; preds = %3731
  %3758 = mul <8 x i32> %3752, %3751
  %3759 = mul <8 x i32> %3753, %3758
  %3760 = mul <8 x i32> %3754, %3759
  %3761 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3760)
  %3762 = icmp eq i64 %3725, %3729
  br i1 %3762, label %3775, label %3763

3763:                                             ; preds = %3716, %3757
  %3764 = phi i64 [ %3719, %3716 ], [ %3730, %3757 ]
  %3765 = phi i32 [ 1, %3716 ], [ %3761, %3757 ]
  br label %3766

3766:                                             ; preds = %3763, %3766
  %3767 = phi i64 [ %3772, %3766 ], [ %3764, %3763 ]
  %3768 = phi i32 [ %3771, %3766 ], [ %3765, %3763 ]
  %3769 = getelementptr inbounds i32, ptr %9, i64 %3767
  %3770 = load i32, ptr %3769, align 4, !tbaa !5
  %3771 = mul nsw i32 %3770, %3768
  %3772 = add nsw i64 %3767, -1
  %3773 = trunc i64 %3767 to i32
  %3774 = icmp sgt i32 %3773, 0
  br i1 %3774, label %3766, label %3775, !llvm.loop !1245

3775:                                             ; preds = %3766, %3757
  %3776 = phi i32 [ %3761, %3757 ], [ %3771, %3766 ]
  %3777 = and i64 %3726, 4294967295
  %3778 = getelementptr inbounds i32, ptr %6, i64 %3777
  %3779 = load i32, ptr %3778, align 4, !tbaa !5
  %3780 = mul nsw i32 %3779, %3776
  %3781 = add nsw i32 %3780, %3720
  %3782 = icmp sgt i64 %3718, 2
  %3783 = add nsw i64 %3719, -1
  %3784 = add i32 %3717, 1
  br i1 %3782, label %3716, label %3785, !llvm.loop !1246

3785:                                             ; preds = %3775, %3711
  %3786 = phi i32 [ %3715, %3711 ], [ %3781, %3775 ]
  %3787 = sext i32 %3786 to i64
  %3788 = getelementptr inbounds double, ptr %2, i64 %3787
  %3789 = load double, ptr %3788, align 8, !tbaa !18
  %3790 = getelementptr inbounds float, ptr %3679, i64 %3787
  %3791 = load float, ptr %3790, align 4, !tbaa !162
  %3792 = fpext float %3791 to double
  %3793 = fmul fast double %3789, %3792
  %3794 = fmul fast double %3793, %3793
  %3795 = fadd fast double %3794, %3712
  store double %3795, ptr %3681, align 8, !tbaa !18
  %3796 = fadd fast double %3789, %3714
  %3797 = add nuw nsw i32 %3713, 1
  br i1 %3705, label %3798, label %3845

3798:                                             ; preds = %3785
  %3799 = load i32, ptr %4, align 4, !tbaa !5
  %3800 = load i32, ptr %12, align 4, !tbaa !5
  %3801 = add nsw i32 %3800, -1
  %3802 = icmp slt i32 %3799, %3801
  br i1 %3802, label %3822, label %3803

3803:                                             ; preds = %3798
  %3804 = icmp eq i32 %3799, %3801
  br i1 %3804, label %3805, label %3838

3805:                                             ; preds = %3803
  store i32 0, ptr %4, align 4, !tbaa !5
  %3806 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3806, ptr %6, align 4, !tbaa !5
  br i1 %3710, label %3845, label %3807

3807:                                             ; preds = %3805, %3832
  %3808 = phi i64 [ %3836, %3832 ], [ 1, %3805 ]
  %3809 = getelementptr inbounds i32, ptr %4, i64 %3808
  %3810 = load i32, ptr %3809, align 4, !tbaa !5
  %3811 = getelementptr inbounds i32, ptr %12, i64 %3808
  %3812 = load i32, ptr %3811, align 4, !tbaa !5
  %3813 = add nsw i32 %3812, -1
  %3814 = icmp slt i32 %3810, %3813
  br i1 %3814, label %3815, label %3830

3815:                                             ; preds = %3807
  br i1 %3802, label %3822, label %3816

3816:                                             ; preds = %3815
  %3817 = getelementptr inbounds i32, ptr %7, i64 %3808
  %3818 = load i32, ptr %3817, align 4, !tbaa !5
  %3819 = getelementptr inbounds i32, ptr %6, i64 %3808
  %3820 = load i32, ptr %3819, align 4, !tbaa !5
  %3821 = add nsw i32 %3820, %3818
  store i32 %3821, ptr %3819, align 4, !tbaa !5
  br label %3840

3822:                                             ; preds = %3798, %3815
  %3823 = phi i32 [ %3810, %3815 ], [ %3799, %3798 ]
  %3824 = phi ptr [ %3809, %3815 ], [ %4, %3798 ]
  %3825 = phi i64 [ %3808, %3815 ], [ 0, %3798 ]
  %3826 = add nsw i32 %3823, 1
  store i32 %3826, ptr %3824, align 4, !tbaa !5
  %3827 = getelementptr inbounds i32, ptr %7, i64 %3825
  %3828 = load i32, ptr %3827, align 4, !tbaa !5
  %3829 = getelementptr inbounds i32, ptr %6, i64 %3825
  br label %3840

3830:                                             ; preds = %3807
  %3831 = icmp eq i32 %3810, %3813
  br i1 %3831, label %3832, label %3838

3832:                                             ; preds = %3830
  store i32 0, ptr %3809, align 4, !tbaa !5
  %3833 = getelementptr inbounds i32, ptr %8, i64 %3808
  %3834 = load i32, ptr %3833, align 4, !tbaa !5
  %3835 = getelementptr inbounds i32, ptr %6, i64 %3808
  store i32 %3834, ptr %3835, align 4, !tbaa !5
  %3836 = add nuw nsw i64 %3808, 1
  %3837 = icmp eq i64 %3836, %3708
  br i1 %3837, label %3845, label %3807, !llvm.loop !1247

3838:                                             ; preds = %3803, %3830
  %3839 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

3840:                                             ; preds = %3816, %3822
  %3841 = phi ptr [ %3829, %3822 ], [ %3809, %3816 ]
  %3842 = phi i32 [ %3828, %3822 ], [ 1, %3816 ]
  %3843 = load i32, ptr %3841, align 4, !tbaa !5
  %3844 = add nsw i32 %3843, %3842
  store i32 %3844, ptr %3841, align 4, !tbaa !5
  br label %3845

3845:                                             ; preds = %3832, %3840, %3805, %3785
  %3846 = icmp eq i32 %3797, %5
  br i1 %3846, label %5496, label %3711, !llvm.loop !1248

3847:                                             ; preds = %3694, %3983
  %3848 = phi double [ 0.000000e+00, %3694 ], [ %3931, %3983 ]
  %3849 = phi i32 [ 0, %3694 ], [ %3932, %3983 ]
  %3850 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3695, label %3851, label %3920

3851:                                             ; preds = %3847, %3910
  %3852 = phi i32 [ %3919, %3910 ], [ 0, %3847 ]
  %3853 = phi i64 [ %3861, %3910 ], [ %3699, %3847 ]
  %3854 = phi i64 [ %3918, %3910 ], [ %3698, %3847 ]
  %3855 = phi i32 [ %3916, %3910 ], [ %3850, %3847 ]
  %3856 = sub i32 %3697, %3852
  %3857 = tail call i32 @llvm.smin.i32(i32 %3856, i32 0)
  %3858 = sub i32 %3856, %3857
  %3859 = zext i32 %3858 to i64
  %3860 = add nuw nsw i64 %3859, 1
  %3861 = add nsw i64 %3853, -1
  %3862 = icmp ult i32 %3858, 31
  br i1 %3862, label %3898, label %3863

3863:                                             ; preds = %3851
  %3864 = and i64 %3860, 8589934560
  %3865 = sub i64 %3854, %3864
  br label %3866

3866:                                             ; preds = %3866, %3863
  %3867 = phi i64 [ 0, %3863 ], [ %3890, %3866 ]
  %3868 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3863 ], [ %3886, %3866 ]
  %3869 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3863 ], [ %3887, %3866 ]
  %3870 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3863 ], [ %3888, %3866 ]
  %3871 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3863 ], [ %3889, %3866 ]
  %3872 = sub i64 %3854, %3867
  %3873 = getelementptr inbounds i32, ptr %11, i64 %3872
  %3874 = getelementptr inbounds i32, ptr %3873, i64 -7
  %3875 = load <8 x i32>, ptr %3874, align 4, !tbaa !5
  %3876 = shufflevector <8 x i32> %3875, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3877 = getelementptr inbounds i32, ptr %3873, i64 -15
  %3878 = load <8 x i32>, ptr %3877, align 4, !tbaa !5
  %3879 = shufflevector <8 x i32> %3878, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3880 = getelementptr inbounds i32, ptr %3873, i64 -23
  %3881 = load <8 x i32>, ptr %3880, align 4, !tbaa !5
  %3882 = shufflevector <8 x i32> %3881, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3883 = getelementptr inbounds i32, ptr %3873, i64 -31
  %3884 = load <8 x i32>, ptr %3883, align 4, !tbaa !5
  %3885 = shufflevector <8 x i32> %3884, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3886 = mul <8 x i32> %3876, %3868
  %3887 = mul <8 x i32> %3879, %3869
  %3888 = mul <8 x i32> %3882, %3870
  %3889 = mul <8 x i32> %3885, %3871
  %3890 = add nuw i64 %3867, 32
  %3891 = icmp eq i64 %3890, %3864
  br i1 %3891, label %3892, label %3866, !llvm.loop !1249

3892:                                             ; preds = %3866
  %3893 = mul <8 x i32> %3887, %3886
  %3894 = mul <8 x i32> %3888, %3893
  %3895 = mul <8 x i32> %3889, %3894
  %3896 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3895)
  %3897 = icmp eq i64 %3860, %3864
  br i1 %3897, label %3910, label %3898

3898:                                             ; preds = %3851, %3892
  %3899 = phi i64 [ %3854, %3851 ], [ %3865, %3892 ]
  %3900 = phi i32 [ 1, %3851 ], [ %3896, %3892 ]
  br label %3901

3901:                                             ; preds = %3898, %3901
  %3902 = phi i64 [ %3907, %3901 ], [ %3899, %3898 ]
  %3903 = phi i32 [ %3906, %3901 ], [ %3900, %3898 ]
  %3904 = getelementptr inbounds i32, ptr %11, i64 %3902
  %3905 = load i32, ptr %3904, align 4, !tbaa !5
  %3906 = mul nsw i32 %3905, %3903
  %3907 = add nsw i64 %3902, -1
  %3908 = trunc i64 %3902 to i32
  %3909 = icmp sgt i32 %3908, 0
  br i1 %3909, label %3901, label %3910, !llvm.loop !1250

3910:                                             ; preds = %3901, %3892
  %3911 = phi i32 [ %3896, %3892 ], [ %3906, %3901 ]
  %3912 = and i64 %3861, 4294967295
  %3913 = getelementptr inbounds i32, ptr %6, i64 %3912
  %3914 = load i32, ptr %3913, align 4, !tbaa !5
  %3915 = mul nsw i32 %3914, %3911
  %3916 = add nsw i32 %3915, %3855
  %3917 = icmp sgt i64 %3853, 2
  %3918 = add nsw i64 %3854, -1
  %3919 = add i32 %3852, 1
  br i1 %3917, label %3851, label %3920, !llvm.loop !1251

3920:                                             ; preds = %3910, %3847
  %3921 = phi i32 [ %3850, %3847 ], [ %3916, %3910 ]
  %3922 = icmp slt i32 %3921, %5
  br i1 %3922, label %3925, label %3923

3923:                                             ; preds = %3920
  %3924 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

3925:                                             ; preds = %3920
  %3926 = sext i32 %3921 to i64
  %3927 = getelementptr inbounds float, ptr %3679, i64 %3926
  %3928 = load float, ptr %3927, align 4, !tbaa !162
  %3929 = fpext float %3928 to double
  %3930 = fmul fast double %3929, %3929
  %3931 = fadd fast double %3930, %3848
  store double %3931, ptr %3681, align 8, !tbaa !18
  %3932 = add nuw nsw i32 %3849, 1
  br i1 %3696, label %3933, label %3983

3933:                                             ; preds = %3925
  %3934 = load i32, ptr %4, align 4, !tbaa !5
  %3935 = load i32, ptr %12, align 4, !tbaa !5
  %3936 = add nsw i32 %3935, -1
  %3937 = icmp slt i32 %3934, %3936
  br i1 %3937, label %3960, label %3938

3938:                                             ; preds = %3933
  %3939 = icmp eq i32 %3934, %3936
  br i1 %3939, label %3940, label %3976

3940:                                             ; preds = %3938
  store i32 0, ptr %4, align 4, !tbaa !5
  %3941 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3941, ptr %6, align 4, !tbaa !5
  br i1 %3701, label %3983, label %3942

3942:                                             ; preds = %3940, %3970
  %3943 = phi i64 [ %3974, %3970 ], [ 1, %3940 ]
  %3944 = getelementptr inbounds i32, ptr %4, i64 %3943
  %3945 = load i32, ptr %3944, align 4, !tbaa !5
  %3946 = getelementptr inbounds i32, ptr %12, i64 %3943
  %3947 = load i32, ptr %3946, align 4, !tbaa !5
  %3948 = add nsw i32 %3947, -1
  %3949 = icmp slt i32 %3945, %3948
  br i1 %3949, label %3950, label %3968

3950:                                             ; preds = %3942
  br i1 %3937, label %3960, label %3951

3951:                                             ; preds = %3950
  %3952 = shl i64 %3943, 32
  %3953 = add i64 %3952, -4294967296
  %3954 = ashr exact i64 %3953, 32
  %3955 = getelementptr inbounds i32, ptr %7, i64 %3954
  %3956 = load i32, ptr %3955, align 4, !tbaa !5
  %3957 = getelementptr inbounds i32, ptr %6, i64 %3943
  %3958 = load i32, ptr %3957, align 4, !tbaa !5
  %3959 = add nsw i32 %3958, %3956
  store i32 %3959, ptr %3957, align 4, !tbaa !5
  br label %3978

3960:                                             ; preds = %3933, %3950
  %3961 = phi i32 [ %3945, %3950 ], [ %3934, %3933 ]
  %3962 = phi ptr [ %3944, %3950 ], [ %4, %3933 ]
  %3963 = phi i64 [ %3943, %3950 ], [ 0, %3933 ]
  %3964 = add nsw i32 %3961, 1
  store i32 %3964, ptr %3962, align 4, !tbaa !5
  %3965 = getelementptr inbounds i32, ptr %7, i64 %3963
  %3966 = load i32, ptr %3965, align 4, !tbaa !5
  %3967 = getelementptr inbounds i32, ptr %6, i64 %3963
  br label %3978

3968:                                             ; preds = %3942
  %3969 = icmp eq i32 %3945, %3948
  br i1 %3969, label %3970, label %3976

3970:                                             ; preds = %3968
  store i32 0, ptr %3944, align 4, !tbaa !5
  %3971 = getelementptr inbounds i32, ptr %8, i64 %3943
  %3972 = load i32, ptr %3971, align 4, !tbaa !5
  %3973 = getelementptr inbounds i32, ptr %6, i64 %3943
  store i32 %3972, ptr %3973, align 4, !tbaa !5
  %3974 = add nuw nsw i64 %3943, 1
  %3975 = icmp eq i64 %3974, %3699
  br i1 %3975, label %3983, label %3942, !llvm.loop !1252

3976:                                             ; preds = %3938, %3968
  %3977 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

3978:                                             ; preds = %3951, %3960
  %3979 = phi ptr [ %3967, %3960 ], [ %3944, %3951 ]
  %3980 = phi i32 [ %3966, %3960 ], [ 1, %3951 ]
  %3981 = load i32, ptr %3979, align 4, !tbaa !5
  %3982 = add nsw i32 %3981, %3980
  store i32 %3982, ptr %3979, align 4, !tbaa !5
  br label %3983

3983:                                             ; preds = %3970, %3978, %3940, %3925
  %3984 = icmp eq i32 %3932, %5
  br i1 %3984, label %5496, label %3847, !llvm.loop !1253

3985:                                             ; preds = %3687
  %3986 = getelementptr inbounds i32, ptr %3, i64 %19
  %3987 = load i32, ptr %3986, align 4, !tbaa !5
  %3988 = icmp eq i32 %3987, 0
  %3989 = icmp sgt i32 %5, 0
  br i1 %3988, label %3999, label %3990

3990:                                             ; preds = %3985
  br i1 %3989, label %3991, label %5496

3991:                                             ; preds = %3990
  %3992 = icmp sgt i32 %13, 1
  %3993 = icmp sgt i32 %13, 0
  %3994 = add i32 %13, -2
  %3995 = zext i32 %3994 to i64
  %3996 = zext i32 %13 to i64
  %3997 = add nuw i32 %5, 1
  %3998 = icmp eq i32 %13, 1
  br label %4141

3999:                                             ; preds = %3985
  br i1 %3989, label %4000, label %5496

4000:                                             ; preds = %3999
  %4001 = icmp sgt i32 %13, 1
  %4002 = icmp sgt i32 %13, 0
  %4003 = add i32 %13, -2
  %4004 = zext i32 %4003 to i64
  %4005 = zext i32 %13 to i64
  %4006 = add nuw i32 %5, 1
  %4007 = icmp eq i32 %13, 1
  br label %4008

4008:                                             ; preds = %4000, %4139
  %4009 = phi double [ 0.000000e+00, %4000 ], [ %4089, %4139 ]
  %4010 = phi i32 [ 0, %4000 ], [ %4091, %4139 ]
  %4011 = phi double [ 0.000000e+00, %4000 ], [ %4090, %4139 ]
  %4012 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4001, label %4013, label %4082

4013:                                             ; preds = %4008, %4072
  %4014 = phi i32 [ %4081, %4072 ], [ 0, %4008 ]
  %4015 = phi i64 [ %4023, %4072 ], [ %4005, %4008 ]
  %4016 = phi i64 [ %4080, %4072 ], [ %4004, %4008 ]
  %4017 = phi i32 [ %4078, %4072 ], [ %4012, %4008 ]
  %4018 = sub i32 %4003, %4014
  %4019 = tail call i32 @llvm.smin.i32(i32 %4018, i32 0)
  %4020 = sub i32 %4018, %4019
  %4021 = zext i32 %4020 to i64
  %4022 = add nuw nsw i64 %4021, 1
  %4023 = add nsw i64 %4015, -1
  %4024 = icmp ult i32 %4020, 31
  br i1 %4024, label %4060, label %4025

4025:                                             ; preds = %4013
  %4026 = and i64 %4022, 8589934560
  %4027 = sub i64 %4016, %4026
  br label %4028

4028:                                             ; preds = %4028, %4025
  %4029 = phi i64 [ 0, %4025 ], [ %4052, %4028 ]
  %4030 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4025 ], [ %4048, %4028 ]
  %4031 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4025 ], [ %4049, %4028 ]
  %4032 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4025 ], [ %4050, %4028 ]
  %4033 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4025 ], [ %4051, %4028 ]
  %4034 = sub i64 %4016, %4029
  %4035 = getelementptr inbounds i32, ptr %9, i64 %4034
  %4036 = getelementptr inbounds i32, ptr %4035, i64 -7
  %4037 = load <8 x i32>, ptr %4036, align 4, !tbaa !5
  %4038 = shufflevector <8 x i32> %4037, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4039 = getelementptr inbounds i32, ptr %4035, i64 -15
  %4040 = load <8 x i32>, ptr %4039, align 4, !tbaa !5
  %4041 = shufflevector <8 x i32> %4040, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4042 = getelementptr inbounds i32, ptr %4035, i64 -23
  %4043 = load <8 x i32>, ptr %4042, align 4, !tbaa !5
  %4044 = shufflevector <8 x i32> %4043, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4045 = getelementptr inbounds i32, ptr %4035, i64 -31
  %4046 = load <8 x i32>, ptr %4045, align 4, !tbaa !5
  %4047 = shufflevector <8 x i32> %4046, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4048 = mul <8 x i32> %4038, %4030
  %4049 = mul <8 x i32> %4041, %4031
  %4050 = mul <8 x i32> %4044, %4032
  %4051 = mul <8 x i32> %4047, %4033
  %4052 = add nuw i64 %4029, 32
  %4053 = icmp eq i64 %4052, %4026
  br i1 %4053, label %4054, label %4028, !llvm.loop !1254

4054:                                             ; preds = %4028
  %4055 = mul <8 x i32> %4049, %4048
  %4056 = mul <8 x i32> %4050, %4055
  %4057 = mul <8 x i32> %4051, %4056
  %4058 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4057)
  %4059 = icmp eq i64 %4022, %4026
  br i1 %4059, label %4072, label %4060

4060:                                             ; preds = %4013, %4054
  %4061 = phi i64 [ %4016, %4013 ], [ %4027, %4054 ]
  %4062 = phi i32 [ 1, %4013 ], [ %4058, %4054 ]
  br label %4063

4063:                                             ; preds = %4060, %4063
  %4064 = phi i64 [ %4069, %4063 ], [ %4061, %4060 ]
  %4065 = phi i32 [ %4068, %4063 ], [ %4062, %4060 ]
  %4066 = getelementptr inbounds i32, ptr %9, i64 %4064
  %4067 = load i32, ptr %4066, align 4, !tbaa !5
  %4068 = mul nsw i32 %4067, %4065
  %4069 = add nsw i64 %4064, -1
  %4070 = trunc i64 %4064 to i32
  %4071 = icmp sgt i32 %4070, 0
  br i1 %4071, label %4063, label %4072, !llvm.loop !1255

4072:                                             ; preds = %4063, %4054
  %4073 = phi i32 [ %4058, %4054 ], [ %4068, %4063 ]
  %4074 = and i64 %4023, 4294967295
  %4075 = getelementptr inbounds i32, ptr %6, i64 %4074
  %4076 = load i32, ptr %4075, align 4, !tbaa !5
  %4077 = mul nsw i32 %4076, %4073
  %4078 = add nsw i32 %4077, %4017
  %4079 = icmp sgt i64 %4015, 2
  %4080 = add nsw i64 %4016, -1
  %4081 = add i32 %4014, 1
  br i1 %4079, label %4013, label %4082, !llvm.loop !1256

4082:                                             ; preds = %4072, %4008
  %4083 = phi i32 [ %4012, %4008 ], [ %4078, %4072 ]
  %4084 = sext i32 %4083 to i64
  %4085 = getelementptr inbounds float, ptr %3679, i64 %4084
  %4086 = load float, ptr %4085, align 4, !tbaa !162
  %4087 = fpext float %4086 to double
  %4088 = fmul fast double %4087, %4087
  %4089 = fadd fast double %4088, %4009
  %4090 = fadd fast double %4011, 1.000000e+00
  %4091 = add nuw nsw i32 %4010, 1
  br i1 %4002, label %4092, label %4139

4092:                                             ; preds = %4082
  %4093 = load i32, ptr %4, align 4, !tbaa !5
  %4094 = load i32, ptr %12, align 4, !tbaa !5
  %4095 = add nsw i32 %4094, -1
  %4096 = icmp slt i32 %4093, %4095
  br i1 %4096, label %4116, label %4097

4097:                                             ; preds = %4092
  %4098 = icmp eq i32 %4093, %4095
  br i1 %4098, label %4099, label %4132

4099:                                             ; preds = %4097
  store i32 0, ptr %4, align 4, !tbaa !5
  %4100 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4100, ptr %6, align 4, !tbaa !5
  br i1 %4007, label %4139, label %4101

4101:                                             ; preds = %4099, %4126
  %4102 = phi i64 [ %4130, %4126 ], [ 1, %4099 ]
  %4103 = getelementptr inbounds i32, ptr %4, i64 %4102
  %4104 = load i32, ptr %4103, align 4, !tbaa !5
  %4105 = getelementptr inbounds i32, ptr %12, i64 %4102
  %4106 = load i32, ptr %4105, align 4, !tbaa !5
  %4107 = add nsw i32 %4106, -1
  %4108 = icmp slt i32 %4104, %4107
  br i1 %4108, label %4109, label %4124

4109:                                             ; preds = %4101
  br i1 %4096, label %4116, label %4110

4110:                                             ; preds = %4109
  %4111 = getelementptr inbounds i32, ptr %7, i64 %4102
  %4112 = load i32, ptr %4111, align 4, !tbaa !5
  %4113 = getelementptr inbounds i32, ptr %6, i64 %4102
  %4114 = load i32, ptr %4113, align 4, !tbaa !5
  %4115 = add nsw i32 %4114, %4112
  store i32 %4115, ptr %4113, align 4, !tbaa !5
  br label %4134

4116:                                             ; preds = %4092, %4109
  %4117 = phi i32 [ %4104, %4109 ], [ %4093, %4092 ]
  %4118 = phi ptr [ %4103, %4109 ], [ %4, %4092 ]
  %4119 = phi i64 [ %4102, %4109 ], [ 0, %4092 ]
  %4120 = add nsw i32 %4117, 1
  store i32 %4120, ptr %4118, align 4, !tbaa !5
  %4121 = getelementptr inbounds i32, ptr %7, i64 %4119
  %4122 = load i32, ptr %4121, align 4, !tbaa !5
  %4123 = getelementptr inbounds i32, ptr %6, i64 %4119
  br label %4134

4124:                                             ; preds = %4101
  %4125 = icmp eq i32 %4104, %4107
  br i1 %4125, label %4126, label %4132

4126:                                             ; preds = %4124
  store i32 0, ptr %4103, align 4, !tbaa !5
  %4127 = getelementptr inbounds i32, ptr %8, i64 %4102
  %4128 = load i32, ptr %4127, align 4, !tbaa !5
  %4129 = getelementptr inbounds i32, ptr %6, i64 %4102
  store i32 %4128, ptr %4129, align 4, !tbaa !5
  %4130 = add nuw nsw i64 %4102, 1
  %4131 = icmp eq i64 %4130, %4005
  br i1 %4131, label %4139, label %4101, !llvm.loop !1257

4132:                                             ; preds = %4097, %4124
  store double %4089, ptr %3681, align 8, !tbaa !18
  %4133 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

4134:                                             ; preds = %4110, %4116
  %4135 = phi ptr [ %4123, %4116 ], [ %4103, %4110 ]
  %4136 = phi i32 [ %4122, %4116 ], [ 1, %4110 ]
  %4137 = load i32, ptr %4135, align 4, !tbaa !5
  %4138 = add nsw i32 %4137, %4136
  store i32 %4138, ptr %4135, align 4, !tbaa !5
  br label %4139

4139:                                             ; preds = %4126, %4134, %4099, %4082
  %4140 = icmp eq i32 %4091, %5
  br i1 %4140, label %5494, label %4008, !llvm.loop !1258

4141:                                             ; preds = %3991, %4277
  %4142 = phi double [ 0.000000e+00, %3991 ], [ %4225, %4277 ]
  %4143 = phi i32 [ 0, %3991 ], [ %4226, %4277 ]
  %4144 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3992, label %4145, label %4214

4145:                                             ; preds = %4141, %4204
  %4146 = phi i32 [ %4213, %4204 ], [ 0, %4141 ]
  %4147 = phi i64 [ %4155, %4204 ], [ %3996, %4141 ]
  %4148 = phi i64 [ %4212, %4204 ], [ %3995, %4141 ]
  %4149 = phi i32 [ %4210, %4204 ], [ %4144, %4141 ]
  %4150 = sub i32 %3994, %4146
  %4151 = tail call i32 @llvm.smin.i32(i32 %4150, i32 0)
  %4152 = sub i32 %4150, %4151
  %4153 = zext i32 %4152 to i64
  %4154 = add nuw nsw i64 %4153, 1
  %4155 = add nsw i64 %4147, -1
  %4156 = icmp ult i32 %4152, 31
  br i1 %4156, label %4192, label %4157

4157:                                             ; preds = %4145
  %4158 = and i64 %4154, 8589934560
  %4159 = sub i64 %4148, %4158
  br label %4160

4160:                                             ; preds = %4160, %4157
  %4161 = phi i64 [ 0, %4157 ], [ %4184, %4160 ]
  %4162 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4157 ], [ %4180, %4160 ]
  %4163 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4157 ], [ %4181, %4160 ]
  %4164 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4157 ], [ %4182, %4160 ]
  %4165 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4157 ], [ %4183, %4160 ]
  %4166 = sub i64 %4148, %4161
  %4167 = getelementptr inbounds i32, ptr %11, i64 %4166
  %4168 = getelementptr inbounds i32, ptr %4167, i64 -7
  %4169 = load <8 x i32>, ptr %4168, align 4, !tbaa !5
  %4170 = shufflevector <8 x i32> %4169, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4171 = getelementptr inbounds i32, ptr %4167, i64 -15
  %4172 = load <8 x i32>, ptr %4171, align 4, !tbaa !5
  %4173 = shufflevector <8 x i32> %4172, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4174 = getelementptr inbounds i32, ptr %4167, i64 -23
  %4175 = load <8 x i32>, ptr %4174, align 4, !tbaa !5
  %4176 = shufflevector <8 x i32> %4175, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4177 = getelementptr inbounds i32, ptr %4167, i64 -31
  %4178 = load <8 x i32>, ptr %4177, align 4, !tbaa !5
  %4179 = shufflevector <8 x i32> %4178, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4180 = mul <8 x i32> %4170, %4162
  %4181 = mul <8 x i32> %4173, %4163
  %4182 = mul <8 x i32> %4176, %4164
  %4183 = mul <8 x i32> %4179, %4165
  %4184 = add nuw i64 %4161, 32
  %4185 = icmp eq i64 %4184, %4158
  br i1 %4185, label %4186, label %4160, !llvm.loop !1259

4186:                                             ; preds = %4160
  %4187 = mul <8 x i32> %4181, %4180
  %4188 = mul <8 x i32> %4182, %4187
  %4189 = mul <8 x i32> %4183, %4188
  %4190 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4189)
  %4191 = icmp eq i64 %4154, %4158
  br i1 %4191, label %4204, label %4192

4192:                                             ; preds = %4145, %4186
  %4193 = phi i64 [ %4148, %4145 ], [ %4159, %4186 ]
  %4194 = phi i32 [ 1, %4145 ], [ %4190, %4186 ]
  br label %4195

4195:                                             ; preds = %4192, %4195
  %4196 = phi i64 [ %4201, %4195 ], [ %4193, %4192 ]
  %4197 = phi i32 [ %4200, %4195 ], [ %4194, %4192 ]
  %4198 = getelementptr inbounds i32, ptr %11, i64 %4196
  %4199 = load i32, ptr %4198, align 4, !tbaa !5
  %4200 = mul nsw i32 %4199, %4197
  %4201 = add nsw i64 %4196, -1
  %4202 = trunc i64 %4196 to i32
  %4203 = icmp sgt i32 %4202, 0
  br i1 %4203, label %4195, label %4204, !llvm.loop !1260

4204:                                             ; preds = %4195, %4186
  %4205 = phi i32 [ %4190, %4186 ], [ %4200, %4195 ]
  %4206 = and i64 %4155, 4294967295
  %4207 = getelementptr inbounds i32, ptr %6, i64 %4206
  %4208 = load i32, ptr %4207, align 4, !tbaa !5
  %4209 = mul nsw i32 %4208, %4205
  %4210 = add nsw i32 %4209, %4149
  %4211 = icmp sgt i64 %4147, 2
  %4212 = add nsw i64 %4148, -1
  %4213 = add i32 %4146, 1
  br i1 %4211, label %4145, label %4214, !llvm.loop !1261

4214:                                             ; preds = %4204, %4141
  %4215 = phi i32 [ %4144, %4141 ], [ %4210, %4204 ]
  %4216 = icmp slt i32 %4215, %5
  br i1 %4216, label %4219, label %4217

4217:                                             ; preds = %4214
  %4218 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

4219:                                             ; preds = %4214
  %4220 = sext i32 %4215 to i64
  %4221 = getelementptr inbounds float, ptr %3679, i64 %4220
  %4222 = load float, ptr %4221, align 4, !tbaa !162
  %4223 = fpext float %4222 to double
  %4224 = fmul fast double %4223, %4223
  %4225 = fadd fast double %4224, %4142
  store double %4225, ptr %3681, align 8, !tbaa !18
  %4226 = add nuw nsw i32 %4143, 1
  br i1 %3993, label %4227, label %4277

4227:                                             ; preds = %4219
  %4228 = load i32, ptr %4, align 4, !tbaa !5
  %4229 = load i32, ptr %12, align 4, !tbaa !5
  %4230 = add nsw i32 %4229, -1
  %4231 = icmp slt i32 %4228, %4230
  br i1 %4231, label %4254, label %4232

4232:                                             ; preds = %4227
  %4233 = icmp eq i32 %4228, %4230
  br i1 %4233, label %4234, label %4270

4234:                                             ; preds = %4232
  store i32 0, ptr %4, align 4, !tbaa !5
  %4235 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4235, ptr %6, align 4, !tbaa !5
  br i1 %3998, label %4277, label %4236

4236:                                             ; preds = %4234, %4264
  %4237 = phi i64 [ %4268, %4264 ], [ 1, %4234 ]
  %4238 = getelementptr inbounds i32, ptr %4, i64 %4237
  %4239 = load i32, ptr %4238, align 4, !tbaa !5
  %4240 = getelementptr inbounds i32, ptr %12, i64 %4237
  %4241 = load i32, ptr %4240, align 4, !tbaa !5
  %4242 = add nsw i32 %4241, -1
  %4243 = icmp slt i32 %4239, %4242
  br i1 %4243, label %4244, label %4262

4244:                                             ; preds = %4236
  br i1 %4231, label %4254, label %4245

4245:                                             ; preds = %4244
  %4246 = shl i64 %4237, 32
  %4247 = add i64 %4246, -4294967296
  %4248 = ashr exact i64 %4247, 32
  %4249 = getelementptr inbounds i32, ptr %7, i64 %4248
  %4250 = load i32, ptr %4249, align 4, !tbaa !5
  %4251 = getelementptr inbounds i32, ptr %6, i64 %4237
  %4252 = load i32, ptr %4251, align 4, !tbaa !5
  %4253 = add nsw i32 %4252, %4250
  store i32 %4253, ptr %4251, align 4, !tbaa !5
  br label %4272

4254:                                             ; preds = %4227, %4244
  %4255 = phi i32 [ %4239, %4244 ], [ %4228, %4227 ]
  %4256 = phi ptr [ %4238, %4244 ], [ %4, %4227 ]
  %4257 = phi i64 [ %4237, %4244 ], [ 0, %4227 ]
  %4258 = add nsw i32 %4255, 1
  store i32 %4258, ptr %4256, align 4, !tbaa !5
  %4259 = getelementptr inbounds i32, ptr %7, i64 %4257
  %4260 = load i32, ptr %4259, align 4, !tbaa !5
  %4261 = getelementptr inbounds i32, ptr %6, i64 %4257
  br label %4272

4262:                                             ; preds = %4236
  %4263 = icmp eq i32 %4239, %4242
  br i1 %4263, label %4264, label %4270

4264:                                             ; preds = %4262
  store i32 0, ptr %4238, align 4, !tbaa !5
  %4265 = getelementptr inbounds i32, ptr %8, i64 %4237
  %4266 = load i32, ptr %4265, align 4, !tbaa !5
  %4267 = getelementptr inbounds i32, ptr %6, i64 %4237
  store i32 %4266, ptr %4267, align 4, !tbaa !5
  %4268 = add nuw nsw i64 %4237, 1
  %4269 = icmp eq i64 %4268, %3996
  br i1 %4269, label %4277, label %4236, !llvm.loop !1262

4270:                                             ; preds = %4232, %4262
  %4271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

4272:                                             ; preds = %4245, %4254
  %4273 = phi ptr [ %4261, %4254 ], [ %4238, %4245 ]
  %4274 = phi i32 [ %4260, %4254 ], [ 1, %4245 ]
  %4275 = load i32, ptr %4273, align 4, !tbaa !5
  %4276 = add nsw i32 %4275, %4274
  store i32 %4276, ptr %4273, align 4, !tbaa !5
  br label %4277

4277:                                             ; preds = %4264, %4272, %4234, %4219
  %4278 = icmp eq i32 %4226, %5
  br i1 %4278, label %5496, label %4141, !llvm.loop !1263

4279:                                             ; preds = %3687
  %4280 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2023, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5496

4281:                                             ; preds = %18
  %4282 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4283 = load ptr, ptr %4282, align 8, !tbaa !9
  %4284 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4285 = load ptr, ptr %4284, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4285, align 4, !tbaa !162
  %4286 = icmp eq i32 %13, 0
  br i1 %4286, label %4287, label %4290

4287:                                             ; preds = %4281
  %4288 = load float, ptr %4283, align 4, !tbaa !162
  %4289 = fmul fast float %4288, %4288
  store float %4289, ptr %4285, align 4, !tbaa !162
  br label %5496

4290:                                             ; preds = %4281
  switch i32 %1, label %4884 [
    i32 1, label %4291
    i32 0, label %4592
  ]

4291:                                             ; preds = %4290
  %4292 = getelementptr inbounds i32, ptr %3, i64 %19
  %4293 = load i32, ptr %4292, align 4, !tbaa !5
  %4294 = icmp eq i32 %4293, 0
  %4295 = icmp sgt i32 %5, 0
  br i1 %4294, label %4305, label %4296

4296:                                             ; preds = %4291
  br i1 %4295, label %4297, label %5496

4297:                                             ; preds = %4296
  %4298 = icmp sgt i32 %13, 1
  %4299 = icmp sgt i32 %13, 0
  %4300 = add i32 %13, -2
  %4301 = zext i32 %4300 to i64
  %4302 = zext i32 %13 to i64
  %4303 = add nuw i32 %5, 1
  %4304 = icmp eq i32 %13, 1
  br label %4452

4305:                                             ; preds = %4291
  br i1 %4295, label %4306, label %5496

4306:                                             ; preds = %4305
  %4307 = icmp sgt i32 %13, 1
  %4308 = icmp sgt i32 %13, 0
  %4309 = add i32 %13, -2
  %4310 = zext i32 %4309 to i64
  %4311 = zext i32 %13 to i64
  %4312 = add nuw i32 %5, 1
  %4313 = icmp eq i32 %13, 1
  br label %4314

4314:                                             ; preds = %4306, %4450
  %4315 = phi float [ 0.000000e+00, %4306 ], [ %4400, %4450 ]
  %4316 = phi i32 [ 0, %4306 ], [ %4402, %4450 ]
  %4317 = phi double [ 0.000000e+00, %4306 ], [ %4401, %4450 ]
  %4318 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4307, label %4319, label %4388

4319:                                             ; preds = %4314, %4378
  %4320 = phi i32 [ %4387, %4378 ], [ 0, %4314 ]
  %4321 = phi i64 [ %4329, %4378 ], [ %4311, %4314 ]
  %4322 = phi i64 [ %4386, %4378 ], [ %4310, %4314 ]
  %4323 = phi i32 [ %4384, %4378 ], [ %4318, %4314 ]
  %4324 = sub i32 %4309, %4320
  %4325 = tail call i32 @llvm.smin.i32(i32 %4324, i32 0)
  %4326 = sub i32 %4324, %4325
  %4327 = zext i32 %4326 to i64
  %4328 = add nuw nsw i64 %4327, 1
  %4329 = add nsw i64 %4321, -1
  %4330 = icmp ult i32 %4326, 31
  br i1 %4330, label %4366, label %4331

4331:                                             ; preds = %4319
  %4332 = and i64 %4328, 8589934560
  %4333 = sub i64 %4322, %4332
  br label %4334

4334:                                             ; preds = %4334, %4331
  %4335 = phi i64 [ 0, %4331 ], [ %4358, %4334 ]
  %4336 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4331 ], [ %4354, %4334 ]
  %4337 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4331 ], [ %4355, %4334 ]
  %4338 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4331 ], [ %4356, %4334 ]
  %4339 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4331 ], [ %4357, %4334 ]
  %4340 = sub i64 %4322, %4335
  %4341 = getelementptr inbounds i32, ptr %9, i64 %4340
  %4342 = getelementptr inbounds i32, ptr %4341, i64 -7
  %4343 = load <8 x i32>, ptr %4342, align 4, !tbaa !5
  %4344 = shufflevector <8 x i32> %4343, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4345 = getelementptr inbounds i32, ptr %4341, i64 -15
  %4346 = load <8 x i32>, ptr %4345, align 4, !tbaa !5
  %4347 = shufflevector <8 x i32> %4346, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4348 = getelementptr inbounds i32, ptr %4341, i64 -23
  %4349 = load <8 x i32>, ptr %4348, align 4, !tbaa !5
  %4350 = shufflevector <8 x i32> %4349, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4351 = getelementptr inbounds i32, ptr %4341, i64 -31
  %4352 = load <8 x i32>, ptr %4351, align 4, !tbaa !5
  %4353 = shufflevector <8 x i32> %4352, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4354 = mul <8 x i32> %4344, %4336
  %4355 = mul <8 x i32> %4347, %4337
  %4356 = mul <8 x i32> %4350, %4338
  %4357 = mul <8 x i32> %4353, %4339
  %4358 = add nuw i64 %4335, 32
  %4359 = icmp eq i64 %4358, %4332
  br i1 %4359, label %4360, label %4334, !llvm.loop !1264

4360:                                             ; preds = %4334
  %4361 = mul <8 x i32> %4355, %4354
  %4362 = mul <8 x i32> %4356, %4361
  %4363 = mul <8 x i32> %4357, %4362
  %4364 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4363)
  %4365 = icmp eq i64 %4328, %4332
  br i1 %4365, label %4378, label %4366

4366:                                             ; preds = %4319, %4360
  %4367 = phi i64 [ %4322, %4319 ], [ %4333, %4360 ]
  %4368 = phi i32 [ 1, %4319 ], [ %4364, %4360 ]
  br label %4369

4369:                                             ; preds = %4366, %4369
  %4370 = phi i64 [ %4375, %4369 ], [ %4367, %4366 ]
  %4371 = phi i32 [ %4374, %4369 ], [ %4368, %4366 ]
  %4372 = getelementptr inbounds i32, ptr %9, i64 %4370
  %4373 = load i32, ptr %4372, align 4, !tbaa !5
  %4374 = mul nsw i32 %4373, %4371
  %4375 = add nsw i64 %4370, -1
  %4376 = trunc i64 %4370 to i32
  %4377 = icmp sgt i32 %4376, 0
  br i1 %4377, label %4369, label %4378, !llvm.loop !1265

4378:                                             ; preds = %4369, %4360
  %4379 = phi i32 [ %4364, %4360 ], [ %4374, %4369 ]
  %4380 = and i64 %4329, 4294967295
  %4381 = getelementptr inbounds i32, ptr %6, i64 %4380
  %4382 = load i32, ptr %4381, align 4, !tbaa !5
  %4383 = mul nsw i32 %4382, %4379
  %4384 = add nsw i32 %4383, %4323
  %4385 = icmp sgt i64 %4321, 2
  %4386 = add nsw i64 %4322, -1
  %4387 = add i32 %4320, 1
  br i1 %4385, label %4319, label %4388, !llvm.loop !1266

4388:                                             ; preds = %4378, %4314
  %4389 = phi i32 [ %4318, %4314 ], [ %4384, %4378 ]
  %4390 = sext i32 %4389 to i64
  %4391 = getelementptr inbounds double, ptr %2, i64 %4390
  %4392 = load double, ptr %4391, align 8, !tbaa !18
  %4393 = getelementptr inbounds float, ptr %4283, i64 %4390
  %4394 = load float, ptr %4393, align 4, !tbaa !162
  %4395 = fpext float %4315 to double
  %4396 = fpext float %4394 to double
  %4397 = fmul fast double %4392, %4396
  %4398 = fmul fast double %4397, %4397
  %4399 = fadd fast double %4398, %4395
  %4400 = fptrunc double %4399 to float
  store float %4400, ptr %4285, align 4, !tbaa !162
  %4401 = fadd fast double %4392, %4317
  %4402 = add nuw nsw i32 %4316, 1
  br i1 %4308, label %4403, label %4450

4403:                                             ; preds = %4388
  %4404 = load i32, ptr %4, align 4, !tbaa !5
  %4405 = load i32, ptr %12, align 4, !tbaa !5
  %4406 = add nsw i32 %4405, -1
  %4407 = icmp slt i32 %4404, %4406
  br i1 %4407, label %4427, label %4408

4408:                                             ; preds = %4403
  %4409 = icmp eq i32 %4404, %4406
  br i1 %4409, label %4410, label %4443

4410:                                             ; preds = %4408
  store i32 0, ptr %4, align 4, !tbaa !5
  %4411 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4411, ptr %6, align 4, !tbaa !5
  br i1 %4313, label %4450, label %4412

4412:                                             ; preds = %4410, %4437
  %4413 = phi i64 [ %4441, %4437 ], [ 1, %4410 ]
  %4414 = getelementptr inbounds i32, ptr %4, i64 %4413
  %4415 = load i32, ptr %4414, align 4, !tbaa !5
  %4416 = getelementptr inbounds i32, ptr %12, i64 %4413
  %4417 = load i32, ptr %4416, align 4, !tbaa !5
  %4418 = add nsw i32 %4417, -1
  %4419 = icmp slt i32 %4415, %4418
  br i1 %4419, label %4420, label %4435

4420:                                             ; preds = %4412
  br i1 %4407, label %4427, label %4421

4421:                                             ; preds = %4420
  %4422 = getelementptr inbounds i32, ptr %7, i64 %4413
  %4423 = load i32, ptr %4422, align 4, !tbaa !5
  %4424 = getelementptr inbounds i32, ptr %6, i64 %4413
  %4425 = load i32, ptr %4424, align 4, !tbaa !5
  %4426 = add nsw i32 %4425, %4423
  store i32 %4426, ptr %4424, align 4, !tbaa !5
  br label %4445

4427:                                             ; preds = %4403, %4420
  %4428 = phi i32 [ %4415, %4420 ], [ %4404, %4403 ]
  %4429 = phi ptr [ %4414, %4420 ], [ %4, %4403 ]
  %4430 = phi i64 [ %4413, %4420 ], [ 0, %4403 ]
  %4431 = add nsw i32 %4428, 1
  store i32 %4431, ptr %4429, align 4, !tbaa !5
  %4432 = getelementptr inbounds i32, ptr %7, i64 %4430
  %4433 = load i32, ptr %4432, align 4, !tbaa !5
  %4434 = getelementptr inbounds i32, ptr %6, i64 %4430
  br label %4445

4435:                                             ; preds = %4412
  %4436 = icmp eq i32 %4415, %4418
  br i1 %4436, label %4437, label %4443

4437:                                             ; preds = %4435
  store i32 0, ptr %4414, align 4, !tbaa !5
  %4438 = getelementptr inbounds i32, ptr %8, i64 %4413
  %4439 = load i32, ptr %4438, align 4, !tbaa !5
  %4440 = getelementptr inbounds i32, ptr %6, i64 %4413
  store i32 %4439, ptr %4440, align 4, !tbaa !5
  %4441 = add nuw nsw i64 %4413, 1
  %4442 = icmp eq i64 %4441, %4311
  br i1 %4442, label %4450, label %4412, !llvm.loop !1267

4443:                                             ; preds = %4408, %4435
  %4444 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

4445:                                             ; preds = %4421, %4427
  %4446 = phi ptr [ %4434, %4427 ], [ %4414, %4421 ]
  %4447 = phi i32 [ %4433, %4427 ], [ 1, %4421 ]
  %4448 = load i32, ptr %4446, align 4, !tbaa !5
  %4449 = add nsw i32 %4448, %4447
  store i32 %4449, ptr %4446, align 4, !tbaa !5
  br label %4450

4450:                                             ; preds = %4437, %4445, %4410, %4388
  %4451 = icmp eq i32 %4402, %5
  br i1 %4451, label %5496, label %4314, !llvm.loop !1268

4452:                                             ; preds = %4297, %4590
  %4453 = phi float [ 0.000000e+00, %4297 ], [ %4538, %4590 ]
  %4454 = phi i32 [ 0, %4297 ], [ %4539, %4590 ]
  %4455 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4298, label %4456, label %4525

4456:                                             ; preds = %4452, %4515
  %4457 = phi i32 [ %4524, %4515 ], [ 0, %4452 ]
  %4458 = phi i64 [ %4466, %4515 ], [ %4302, %4452 ]
  %4459 = phi i64 [ %4523, %4515 ], [ %4301, %4452 ]
  %4460 = phi i32 [ %4521, %4515 ], [ %4455, %4452 ]
  %4461 = sub i32 %4300, %4457
  %4462 = tail call i32 @llvm.smin.i32(i32 %4461, i32 0)
  %4463 = sub i32 %4461, %4462
  %4464 = zext i32 %4463 to i64
  %4465 = add nuw nsw i64 %4464, 1
  %4466 = add nsw i64 %4458, -1
  %4467 = icmp ult i32 %4463, 31
  br i1 %4467, label %4503, label %4468

4468:                                             ; preds = %4456
  %4469 = and i64 %4465, 8589934560
  %4470 = sub i64 %4459, %4469
  br label %4471

4471:                                             ; preds = %4471, %4468
  %4472 = phi i64 [ 0, %4468 ], [ %4495, %4471 ]
  %4473 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4468 ], [ %4491, %4471 ]
  %4474 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4468 ], [ %4492, %4471 ]
  %4475 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4468 ], [ %4493, %4471 ]
  %4476 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4468 ], [ %4494, %4471 ]
  %4477 = sub i64 %4459, %4472
  %4478 = getelementptr inbounds i32, ptr %11, i64 %4477
  %4479 = getelementptr inbounds i32, ptr %4478, i64 -7
  %4480 = load <8 x i32>, ptr %4479, align 4, !tbaa !5
  %4481 = shufflevector <8 x i32> %4480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4482 = getelementptr inbounds i32, ptr %4478, i64 -15
  %4483 = load <8 x i32>, ptr %4482, align 4, !tbaa !5
  %4484 = shufflevector <8 x i32> %4483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4485 = getelementptr inbounds i32, ptr %4478, i64 -23
  %4486 = load <8 x i32>, ptr %4485, align 4, !tbaa !5
  %4487 = shufflevector <8 x i32> %4486, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4488 = getelementptr inbounds i32, ptr %4478, i64 -31
  %4489 = load <8 x i32>, ptr %4488, align 4, !tbaa !5
  %4490 = shufflevector <8 x i32> %4489, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4491 = mul <8 x i32> %4481, %4473
  %4492 = mul <8 x i32> %4484, %4474
  %4493 = mul <8 x i32> %4487, %4475
  %4494 = mul <8 x i32> %4490, %4476
  %4495 = add nuw i64 %4472, 32
  %4496 = icmp eq i64 %4495, %4469
  br i1 %4496, label %4497, label %4471, !llvm.loop !1269

4497:                                             ; preds = %4471
  %4498 = mul <8 x i32> %4492, %4491
  %4499 = mul <8 x i32> %4493, %4498
  %4500 = mul <8 x i32> %4494, %4499
  %4501 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4500)
  %4502 = icmp eq i64 %4465, %4469
  br i1 %4502, label %4515, label %4503

4503:                                             ; preds = %4456, %4497
  %4504 = phi i64 [ %4459, %4456 ], [ %4470, %4497 ]
  %4505 = phi i32 [ 1, %4456 ], [ %4501, %4497 ]
  br label %4506

4506:                                             ; preds = %4503, %4506
  %4507 = phi i64 [ %4512, %4506 ], [ %4504, %4503 ]
  %4508 = phi i32 [ %4511, %4506 ], [ %4505, %4503 ]
  %4509 = getelementptr inbounds i32, ptr %11, i64 %4507
  %4510 = load i32, ptr %4509, align 4, !tbaa !5
  %4511 = mul nsw i32 %4510, %4508
  %4512 = add nsw i64 %4507, -1
  %4513 = trunc i64 %4507 to i32
  %4514 = icmp sgt i32 %4513, 0
  br i1 %4514, label %4506, label %4515, !llvm.loop !1270

4515:                                             ; preds = %4506, %4497
  %4516 = phi i32 [ %4501, %4497 ], [ %4511, %4506 ]
  %4517 = and i64 %4466, 4294967295
  %4518 = getelementptr inbounds i32, ptr %6, i64 %4517
  %4519 = load i32, ptr %4518, align 4, !tbaa !5
  %4520 = mul nsw i32 %4519, %4516
  %4521 = add nsw i32 %4520, %4460
  %4522 = icmp sgt i64 %4458, 2
  %4523 = add nsw i64 %4459, -1
  %4524 = add i32 %4457, 1
  br i1 %4522, label %4456, label %4525, !llvm.loop !1271

4525:                                             ; preds = %4515, %4452
  %4526 = phi i32 [ %4455, %4452 ], [ %4521, %4515 ]
  %4527 = icmp slt i32 %4526, %5
  br i1 %4527, label %4530, label %4528

4528:                                             ; preds = %4525
  %4529 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

4530:                                             ; preds = %4525
  %4531 = sext i32 %4526 to i64
  %4532 = getelementptr inbounds float, ptr %4283, i64 %4531
  %4533 = load float, ptr %4532, align 4, !tbaa !162
  %4534 = fpext float %4453 to double
  %4535 = fpext float %4533 to double
  %4536 = fmul fast double %4535, %4535
  %4537 = fadd fast double %4536, %4534
  %4538 = fptrunc double %4537 to float
  store float %4538, ptr %4285, align 4, !tbaa !162
  %4539 = add nuw nsw i32 %4454, 1
  br i1 %4299, label %4540, label %4590

4540:                                             ; preds = %4530
  %4541 = load i32, ptr %4, align 4, !tbaa !5
  %4542 = load i32, ptr %12, align 4, !tbaa !5
  %4543 = add nsw i32 %4542, -1
  %4544 = icmp slt i32 %4541, %4543
  br i1 %4544, label %4567, label %4545

4545:                                             ; preds = %4540
  %4546 = icmp eq i32 %4541, %4543
  br i1 %4546, label %4547, label %4583

4547:                                             ; preds = %4545
  store i32 0, ptr %4, align 4, !tbaa !5
  %4548 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4548, ptr %6, align 4, !tbaa !5
  br i1 %4304, label %4590, label %4549

4549:                                             ; preds = %4547, %4577
  %4550 = phi i64 [ %4581, %4577 ], [ 1, %4547 ]
  %4551 = getelementptr inbounds i32, ptr %4, i64 %4550
  %4552 = load i32, ptr %4551, align 4, !tbaa !5
  %4553 = getelementptr inbounds i32, ptr %12, i64 %4550
  %4554 = load i32, ptr %4553, align 4, !tbaa !5
  %4555 = add nsw i32 %4554, -1
  %4556 = icmp slt i32 %4552, %4555
  br i1 %4556, label %4557, label %4575

4557:                                             ; preds = %4549
  br i1 %4544, label %4567, label %4558

4558:                                             ; preds = %4557
  %4559 = shl i64 %4550, 32
  %4560 = add i64 %4559, -4294967296
  %4561 = ashr exact i64 %4560, 32
  %4562 = getelementptr inbounds i32, ptr %7, i64 %4561
  %4563 = load i32, ptr %4562, align 4, !tbaa !5
  %4564 = getelementptr inbounds i32, ptr %6, i64 %4550
  %4565 = load i32, ptr %4564, align 4, !tbaa !5
  %4566 = add nsw i32 %4565, %4563
  store i32 %4566, ptr %4564, align 4, !tbaa !5
  br label %4585

4567:                                             ; preds = %4540, %4557
  %4568 = phi i32 [ %4552, %4557 ], [ %4541, %4540 ]
  %4569 = phi ptr [ %4551, %4557 ], [ %4, %4540 ]
  %4570 = phi i64 [ %4550, %4557 ], [ 0, %4540 ]
  %4571 = add nsw i32 %4568, 1
  store i32 %4571, ptr %4569, align 4, !tbaa !5
  %4572 = getelementptr inbounds i32, ptr %7, i64 %4570
  %4573 = load i32, ptr %4572, align 4, !tbaa !5
  %4574 = getelementptr inbounds i32, ptr %6, i64 %4570
  br label %4585

4575:                                             ; preds = %4549
  %4576 = icmp eq i32 %4552, %4555
  br i1 %4576, label %4577, label %4583

4577:                                             ; preds = %4575
  store i32 0, ptr %4551, align 4, !tbaa !5
  %4578 = getelementptr inbounds i32, ptr %8, i64 %4550
  %4579 = load i32, ptr %4578, align 4, !tbaa !5
  %4580 = getelementptr inbounds i32, ptr %6, i64 %4550
  store i32 %4579, ptr %4580, align 4, !tbaa !5
  %4581 = add nuw nsw i64 %4550, 1
  %4582 = icmp eq i64 %4581, %4302
  br i1 %4582, label %4590, label %4549, !llvm.loop !1272

4583:                                             ; preds = %4545, %4575
  %4584 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

4585:                                             ; preds = %4558, %4567
  %4586 = phi ptr [ %4574, %4567 ], [ %4551, %4558 ]
  %4587 = phi i32 [ %4573, %4567 ], [ 1, %4558 ]
  %4588 = load i32, ptr %4586, align 4, !tbaa !5
  %4589 = add nsw i32 %4588, %4587
  store i32 %4589, ptr %4586, align 4, !tbaa !5
  br label %4590

4590:                                             ; preds = %4577, %4585, %4547, %4530
  %4591 = icmp eq i32 %4539, %5
  br i1 %4591, label %5496, label %4452, !llvm.loop !1273

4592:                                             ; preds = %4290
  %4593 = getelementptr inbounds i32, ptr %3, i64 %19
  %4594 = load i32, ptr %4593, align 4, !tbaa !5
  %4595 = icmp eq i32 %4594, 0
  %4596 = icmp sgt i32 %5, 0
  br i1 %4595, label %4606, label %4597

4597:                                             ; preds = %4592
  br i1 %4596, label %4598, label %5496

4598:                                             ; preds = %4597
  %4599 = icmp sgt i32 %13, 1
  %4600 = icmp sgt i32 %13, 0
  %4601 = add i32 %13, -2
  %4602 = zext i32 %4601 to i64
  %4603 = zext i32 %13 to i64
  %4604 = add nuw i32 %5, 1
  %4605 = icmp eq i32 %13, 1
  br label %4747

4606:                                             ; preds = %4592
  br i1 %4596, label %4607, label %5496

4607:                                             ; preds = %4606
  %4608 = icmp sgt i32 %13, 1
  %4609 = icmp sgt i32 %13, 0
  %4610 = add i32 %13, -2
  %4611 = zext i32 %4610 to i64
  %4612 = zext i32 %13 to i64
  %4613 = add nuw i32 %5, 1
  %4614 = icmp eq i32 %13, 1
  br label %4615

4615:                                             ; preds = %4607, %4745
  %4616 = phi float [ 0.000000e+00, %4607 ], [ %4695, %4745 ]
  %4617 = phi i32 [ 0, %4607 ], [ %4697, %4745 ]
  %4618 = phi double [ 0.000000e+00, %4607 ], [ %4696, %4745 ]
  %4619 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4608, label %4620, label %4689

4620:                                             ; preds = %4615, %4679
  %4621 = phi i32 [ %4688, %4679 ], [ 0, %4615 ]
  %4622 = phi i64 [ %4630, %4679 ], [ %4612, %4615 ]
  %4623 = phi i64 [ %4687, %4679 ], [ %4611, %4615 ]
  %4624 = phi i32 [ %4685, %4679 ], [ %4619, %4615 ]
  %4625 = sub i32 %4610, %4621
  %4626 = tail call i32 @llvm.smin.i32(i32 %4625, i32 0)
  %4627 = sub i32 %4625, %4626
  %4628 = zext i32 %4627 to i64
  %4629 = add nuw nsw i64 %4628, 1
  %4630 = add nsw i64 %4622, -1
  %4631 = icmp ult i32 %4627, 31
  br i1 %4631, label %4667, label %4632

4632:                                             ; preds = %4620
  %4633 = and i64 %4629, 8589934560
  %4634 = sub i64 %4623, %4633
  br label %4635

4635:                                             ; preds = %4635, %4632
  %4636 = phi i64 [ 0, %4632 ], [ %4659, %4635 ]
  %4637 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4632 ], [ %4655, %4635 ]
  %4638 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4632 ], [ %4656, %4635 ]
  %4639 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4632 ], [ %4657, %4635 ]
  %4640 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4632 ], [ %4658, %4635 ]
  %4641 = sub i64 %4623, %4636
  %4642 = getelementptr inbounds i32, ptr %9, i64 %4641
  %4643 = getelementptr inbounds i32, ptr %4642, i64 -7
  %4644 = load <8 x i32>, ptr %4643, align 4, !tbaa !5
  %4645 = shufflevector <8 x i32> %4644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4646 = getelementptr inbounds i32, ptr %4642, i64 -15
  %4647 = load <8 x i32>, ptr %4646, align 4, !tbaa !5
  %4648 = shufflevector <8 x i32> %4647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4649 = getelementptr inbounds i32, ptr %4642, i64 -23
  %4650 = load <8 x i32>, ptr %4649, align 4, !tbaa !5
  %4651 = shufflevector <8 x i32> %4650, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4652 = getelementptr inbounds i32, ptr %4642, i64 -31
  %4653 = load <8 x i32>, ptr %4652, align 4, !tbaa !5
  %4654 = shufflevector <8 x i32> %4653, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4655 = mul <8 x i32> %4645, %4637
  %4656 = mul <8 x i32> %4648, %4638
  %4657 = mul <8 x i32> %4651, %4639
  %4658 = mul <8 x i32> %4654, %4640
  %4659 = add nuw i64 %4636, 32
  %4660 = icmp eq i64 %4659, %4633
  br i1 %4660, label %4661, label %4635, !llvm.loop !1274

4661:                                             ; preds = %4635
  %4662 = mul <8 x i32> %4656, %4655
  %4663 = mul <8 x i32> %4657, %4662
  %4664 = mul <8 x i32> %4658, %4663
  %4665 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4664)
  %4666 = icmp eq i64 %4629, %4633
  br i1 %4666, label %4679, label %4667

4667:                                             ; preds = %4620, %4661
  %4668 = phi i64 [ %4623, %4620 ], [ %4634, %4661 ]
  %4669 = phi i32 [ 1, %4620 ], [ %4665, %4661 ]
  br label %4670

4670:                                             ; preds = %4667, %4670
  %4671 = phi i64 [ %4676, %4670 ], [ %4668, %4667 ]
  %4672 = phi i32 [ %4675, %4670 ], [ %4669, %4667 ]
  %4673 = getelementptr inbounds i32, ptr %9, i64 %4671
  %4674 = load i32, ptr %4673, align 4, !tbaa !5
  %4675 = mul nsw i32 %4674, %4672
  %4676 = add nsw i64 %4671, -1
  %4677 = trunc i64 %4671 to i32
  %4678 = icmp sgt i32 %4677, 0
  br i1 %4678, label %4670, label %4679, !llvm.loop !1275

4679:                                             ; preds = %4670, %4661
  %4680 = phi i32 [ %4665, %4661 ], [ %4675, %4670 ]
  %4681 = and i64 %4630, 4294967295
  %4682 = getelementptr inbounds i32, ptr %6, i64 %4681
  %4683 = load i32, ptr %4682, align 4, !tbaa !5
  %4684 = mul nsw i32 %4683, %4680
  %4685 = add nsw i32 %4684, %4624
  %4686 = icmp sgt i64 %4622, 2
  %4687 = add nsw i64 %4623, -1
  %4688 = add i32 %4621, 1
  br i1 %4686, label %4620, label %4689, !llvm.loop !1276

4689:                                             ; preds = %4679, %4615
  %4690 = phi i32 [ %4619, %4615 ], [ %4685, %4679 ]
  %4691 = sext i32 %4690 to i64
  %4692 = getelementptr inbounds float, ptr %4283, i64 %4691
  %4693 = load float, ptr %4692, align 4, !tbaa !162
  %4694 = fmul fast float %4693, %4693
  %4695 = fadd fast float %4616, %4694
  store float %4695, ptr %4285, align 4, !tbaa !162
  %4696 = fadd fast double %4618, 1.000000e+00
  %4697 = add nuw nsw i32 %4617, 1
  br i1 %4609, label %4698, label %4745

4698:                                             ; preds = %4689
  %4699 = load i32, ptr %4, align 4, !tbaa !5
  %4700 = load i32, ptr %12, align 4, !tbaa !5
  %4701 = add nsw i32 %4700, -1
  %4702 = icmp slt i32 %4699, %4701
  br i1 %4702, label %4722, label %4703

4703:                                             ; preds = %4698
  %4704 = icmp eq i32 %4699, %4701
  br i1 %4704, label %4705, label %4738

4705:                                             ; preds = %4703
  store i32 0, ptr %4, align 4, !tbaa !5
  %4706 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4706, ptr %6, align 4, !tbaa !5
  br i1 %4614, label %4745, label %4707

4707:                                             ; preds = %4705, %4732
  %4708 = phi i64 [ %4736, %4732 ], [ 1, %4705 ]
  %4709 = getelementptr inbounds i32, ptr %4, i64 %4708
  %4710 = load i32, ptr %4709, align 4, !tbaa !5
  %4711 = getelementptr inbounds i32, ptr %12, i64 %4708
  %4712 = load i32, ptr %4711, align 4, !tbaa !5
  %4713 = add nsw i32 %4712, -1
  %4714 = icmp slt i32 %4710, %4713
  br i1 %4714, label %4715, label %4730

4715:                                             ; preds = %4707
  br i1 %4702, label %4722, label %4716

4716:                                             ; preds = %4715
  %4717 = getelementptr inbounds i32, ptr %7, i64 %4708
  %4718 = load i32, ptr %4717, align 4, !tbaa !5
  %4719 = getelementptr inbounds i32, ptr %6, i64 %4708
  %4720 = load i32, ptr %4719, align 4, !tbaa !5
  %4721 = add nsw i32 %4720, %4718
  store i32 %4721, ptr %4719, align 4, !tbaa !5
  br label %4740

4722:                                             ; preds = %4698, %4715
  %4723 = phi i32 [ %4710, %4715 ], [ %4699, %4698 ]
  %4724 = phi ptr [ %4709, %4715 ], [ %4, %4698 ]
  %4725 = phi i64 [ %4708, %4715 ], [ 0, %4698 ]
  %4726 = add nsw i32 %4723, 1
  store i32 %4726, ptr %4724, align 4, !tbaa !5
  %4727 = getelementptr inbounds i32, ptr %7, i64 %4725
  %4728 = load i32, ptr %4727, align 4, !tbaa !5
  %4729 = getelementptr inbounds i32, ptr %6, i64 %4725
  br label %4740

4730:                                             ; preds = %4707
  %4731 = icmp eq i32 %4710, %4713
  br i1 %4731, label %4732, label %4738

4732:                                             ; preds = %4730
  store i32 0, ptr %4709, align 4, !tbaa !5
  %4733 = getelementptr inbounds i32, ptr %8, i64 %4708
  %4734 = load i32, ptr %4733, align 4, !tbaa !5
  %4735 = getelementptr inbounds i32, ptr %6, i64 %4708
  store i32 %4734, ptr %4735, align 4, !tbaa !5
  %4736 = add nuw nsw i64 %4708, 1
  %4737 = icmp eq i64 %4736, %4612
  br i1 %4737, label %4745, label %4707, !llvm.loop !1277

4738:                                             ; preds = %4703, %4730
  %4739 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

4740:                                             ; preds = %4716, %4722
  %4741 = phi ptr [ %4729, %4722 ], [ %4709, %4716 ]
  %4742 = phi i32 [ %4728, %4722 ], [ 1, %4716 ]
  %4743 = load i32, ptr %4741, align 4, !tbaa !5
  %4744 = add nsw i32 %4743, %4742
  store i32 %4744, ptr %4741, align 4, !tbaa !5
  br label %4745

4745:                                             ; preds = %4732, %4740, %4705, %4689
  %4746 = icmp eq i32 %4697, %5
  br i1 %4746, label %5496, label %4615, !llvm.loop !1278

4747:                                             ; preds = %4598, %4882
  %4748 = phi float [ 0.000000e+00, %4598 ], [ %4830, %4882 ]
  %4749 = phi i32 [ 0, %4598 ], [ %4831, %4882 ]
  %4750 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4599, label %4751, label %4820

4751:                                             ; preds = %4747, %4810
  %4752 = phi i32 [ %4819, %4810 ], [ 0, %4747 ]
  %4753 = phi i64 [ %4761, %4810 ], [ %4603, %4747 ]
  %4754 = phi i64 [ %4818, %4810 ], [ %4602, %4747 ]
  %4755 = phi i32 [ %4816, %4810 ], [ %4750, %4747 ]
  %4756 = sub i32 %4601, %4752
  %4757 = tail call i32 @llvm.smin.i32(i32 %4756, i32 0)
  %4758 = sub i32 %4756, %4757
  %4759 = zext i32 %4758 to i64
  %4760 = add nuw nsw i64 %4759, 1
  %4761 = add nsw i64 %4753, -1
  %4762 = icmp ult i32 %4758, 31
  br i1 %4762, label %4798, label %4763

4763:                                             ; preds = %4751
  %4764 = and i64 %4760, 8589934560
  %4765 = sub i64 %4754, %4764
  br label %4766

4766:                                             ; preds = %4766, %4763
  %4767 = phi i64 [ 0, %4763 ], [ %4790, %4766 ]
  %4768 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4763 ], [ %4786, %4766 ]
  %4769 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4763 ], [ %4787, %4766 ]
  %4770 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4763 ], [ %4788, %4766 ]
  %4771 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4763 ], [ %4789, %4766 ]
  %4772 = sub i64 %4754, %4767
  %4773 = getelementptr inbounds i32, ptr %11, i64 %4772
  %4774 = getelementptr inbounds i32, ptr %4773, i64 -7
  %4775 = load <8 x i32>, ptr %4774, align 4, !tbaa !5
  %4776 = shufflevector <8 x i32> %4775, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4777 = getelementptr inbounds i32, ptr %4773, i64 -15
  %4778 = load <8 x i32>, ptr %4777, align 4, !tbaa !5
  %4779 = shufflevector <8 x i32> %4778, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4780 = getelementptr inbounds i32, ptr %4773, i64 -23
  %4781 = load <8 x i32>, ptr %4780, align 4, !tbaa !5
  %4782 = shufflevector <8 x i32> %4781, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4783 = getelementptr inbounds i32, ptr %4773, i64 -31
  %4784 = load <8 x i32>, ptr %4783, align 4, !tbaa !5
  %4785 = shufflevector <8 x i32> %4784, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4786 = mul <8 x i32> %4776, %4768
  %4787 = mul <8 x i32> %4779, %4769
  %4788 = mul <8 x i32> %4782, %4770
  %4789 = mul <8 x i32> %4785, %4771
  %4790 = add nuw i64 %4767, 32
  %4791 = icmp eq i64 %4790, %4764
  br i1 %4791, label %4792, label %4766, !llvm.loop !1279

4792:                                             ; preds = %4766
  %4793 = mul <8 x i32> %4787, %4786
  %4794 = mul <8 x i32> %4788, %4793
  %4795 = mul <8 x i32> %4789, %4794
  %4796 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4795)
  %4797 = icmp eq i64 %4760, %4764
  br i1 %4797, label %4810, label %4798

4798:                                             ; preds = %4751, %4792
  %4799 = phi i64 [ %4754, %4751 ], [ %4765, %4792 ]
  %4800 = phi i32 [ 1, %4751 ], [ %4796, %4792 ]
  br label %4801

4801:                                             ; preds = %4798, %4801
  %4802 = phi i64 [ %4807, %4801 ], [ %4799, %4798 ]
  %4803 = phi i32 [ %4806, %4801 ], [ %4800, %4798 ]
  %4804 = getelementptr inbounds i32, ptr %11, i64 %4802
  %4805 = load i32, ptr %4804, align 4, !tbaa !5
  %4806 = mul nsw i32 %4805, %4803
  %4807 = add nsw i64 %4802, -1
  %4808 = trunc i64 %4802 to i32
  %4809 = icmp sgt i32 %4808, 0
  br i1 %4809, label %4801, label %4810, !llvm.loop !1280

4810:                                             ; preds = %4801, %4792
  %4811 = phi i32 [ %4796, %4792 ], [ %4806, %4801 ]
  %4812 = and i64 %4761, 4294967295
  %4813 = getelementptr inbounds i32, ptr %6, i64 %4812
  %4814 = load i32, ptr %4813, align 4, !tbaa !5
  %4815 = mul nsw i32 %4814, %4811
  %4816 = add nsw i32 %4815, %4755
  %4817 = icmp sgt i64 %4753, 2
  %4818 = add nsw i64 %4754, -1
  %4819 = add i32 %4752, 1
  br i1 %4817, label %4751, label %4820, !llvm.loop !1281

4820:                                             ; preds = %4810, %4747
  %4821 = phi i32 [ %4750, %4747 ], [ %4816, %4810 ]
  %4822 = icmp slt i32 %4821, %5
  br i1 %4822, label %4825, label %4823

4823:                                             ; preds = %4820
  %4824 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

4825:                                             ; preds = %4820
  %4826 = sext i32 %4821 to i64
  %4827 = getelementptr inbounds float, ptr %4283, i64 %4826
  %4828 = load float, ptr %4827, align 4, !tbaa !162
  %4829 = fmul fast float %4828, %4828
  %4830 = fadd fast float %4748, %4829
  store float %4830, ptr %4285, align 4, !tbaa !162
  %4831 = add nuw nsw i32 %4749, 1
  br i1 %4600, label %4832, label %4882

4832:                                             ; preds = %4825
  %4833 = load i32, ptr %4, align 4, !tbaa !5
  %4834 = load i32, ptr %12, align 4, !tbaa !5
  %4835 = add nsw i32 %4834, -1
  %4836 = icmp slt i32 %4833, %4835
  br i1 %4836, label %4859, label %4837

4837:                                             ; preds = %4832
  %4838 = icmp eq i32 %4833, %4835
  br i1 %4838, label %4839, label %4875

4839:                                             ; preds = %4837
  store i32 0, ptr %4, align 4, !tbaa !5
  %4840 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4840, ptr %6, align 4, !tbaa !5
  br i1 %4605, label %4882, label %4841

4841:                                             ; preds = %4839, %4869
  %4842 = phi i64 [ %4873, %4869 ], [ 1, %4839 ]
  %4843 = getelementptr inbounds i32, ptr %4, i64 %4842
  %4844 = load i32, ptr %4843, align 4, !tbaa !5
  %4845 = getelementptr inbounds i32, ptr %12, i64 %4842
  %4846 = load i32, ptr %4845, align 4, !tbaa !5
  %4847 = add nsw i32 %4846, -1
  %4848 = icmp slt i32 %4844, %4847
  br i1 %4848, label %4849, label %4867

4849:                                             ; preds = %4841
  br i1 %4836, label %4859, label %4850

4850:                                             ; preds = %4849
  %4851 = shl i64 %4842, 32
  %4852 = add i64 %4851, -4294967296
  %4853 = ashr exact i64 %4852, 32
  %4854 = getelementptr inbounds i32, ptr %7, i64 %4853
  %4855 = load i32, ptr %4854, align 4, !tbaa !5
  %4856 = getelementptr inbounds i32, ptr %6, i64 %4842
  %4857 = load i32, ptr %4856, align 4, !tbaa !5
  %4858 = add nsw i32 %4857, %4855
  store i32 %4858, ptr %4856, align 4, !tbaa !5
  br label %4877

4859:                                             ; preds = %4832, %4849
  %4860 = phi i32 [ %4844, %4849 ], [ %4833, %4832 ]
  %4861 = phi ptr [ %4843, %4849 ], [ %4, %4832 ]
  %4862 = phi i64 [ %4842, %4849 ], [ 0, %4832 ]
  %4863 = add nsw i32 %4860, 1
  store i32 %4863, ptr %4861, align 4, !tbaa !5
  %4864 = getelementptr inbounds i32, ptr %7, i64 %4862
  %4865 = load i32, ptr %4864, align 4, !tbaa !5
  %4866 = getelementptr inbounds i32, ptr %6, i64 %4862
  br label %4877

4867:                                             ; preds = %4841
  %4868 = icmp eq i32 %4844, %4847
  br i1 %4868, label %4869, label %4875

4869:                                             ; preds = %4867
  store i32 0, ptr %4843, align 4, !tbaa !5
  %4870 = getelementptr inbounds i32, ptr %8, i64 %4842
  %4871 = load i32, ptr %4870, align 4, !tbaa !5
  %4872 = getelementptr inbounds i32, ptr %6, i64 %4842
  store i32 %4871, ptr %4872, align 4, !tbaa !5
  %4873 = add nuw nsw i64 %4842, 1
  %4874 = icmp eq i64 %4873, %4603
  br i1 %4874, label %4882, label %4841, !llvm.loop !1282

4875:                                             ; preds = %4837, %4867
  %4876 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

4877:                                             ; preds = %4850, %4859
  %4878 = phi ptr [ %4866, %4859 ], [ %4843, %4850 ]
  %4879 = phi i32 [ %4865, %4859 ], [ 1, %4850 ]
  %4880 = load i32, ptr %4878, align 4, !tbaa !5
  %4881 = add nsw i32 %4880, %4879
  store i32 %4881, ptr %4878, align 4, !tbaa !5
  br label %4882

4882:                                             ; preds = %4869, %4877, %4839, %4825
  %4883 = icmp eq i32 %4831, %5
  br i1 %4883, label %5496, label %4747, !llvm.loop !1283

4884:                                             ; preds = %4290
  %4885 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5496

4886:                                             ; preds = %18
  %4887 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4888 = load ptr, ptr %4887, align 8, !tbaa !9
  %4889 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4890 = load ptr, ptr %4889, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4890, align 8, !tbaa !18
  %4891 = icmp eq i32 %13, 0
  br i1 %4891, label %4892, label %4896

4892:                                             ; preds = %4886
  %4893 = load float, ptr %4888, align 4, !tbaa !162
  %4894 = fpext float %4893 to double
  %4895 = fmul fast double %4894, %4894
  store double %4895, ptr %4890, align 8, !tbaa !18
  br label %5496

4896:                                             ; preds = %4886
  switch i32 %1, label %5488 [
    i32 1, label %4897
    i32 0, label %5194
  ]

4897:                                             ; preds = %4896
  %4898 = getelementptr inbounds i32, ptr %3, i64 %19
  %4899 = load i32, ptr %4898, align 4, !tbaa !5
  %4900 = icmp eq i32 %4899, 0
  %4901 = icmp sgt i32 %5, 0
  br i1 %4900, label %4911, label %4902

4902:                                             ; preds = %4897
  br i1 %4901, label %4903, label %5496

4903:                                             ; preds = %4902
  %4904 = icmp sgt i32 %13, 1
  %4905 = icmp sgt i32 %13, 0
  %4906 = add i32 %13, -2
  %4907 = zext i32 %4906 to i64
  %4908 = zext i32 %13 to i64
  %4909 = add nuw i32 %5, 1
  %4910 = icmp eq i32 %13, 1
  br label %5056

4911:                                             ; preds = %4897
  br i1 %4901, label %4912, label %5496

4912:                                             ; preds = %4911
  %4913 = icmp sgt i32 %13, 1
  %4914 = icmp sgt i32 %13, 0
  %4915 = add i32 %13, -2
  %4916 = zext i32 %4915 to i64
  %4917 = zext i32 %13 to i64
  %4918 = add nuw i32 %5, 1
  %4919 = icmp eq i32 %13, 1
  br label %4920

4920:                                             ; preds = %4912, %5054
  %4921 = phi double [ 0.000000e+00, %4912 ], [ %5004, %5054 ]
  %4922 = phi i32 [ 0, %4912 ], [ %5006, %5054 ]
  %4923 = phi double [ 0.000000e+00, %4912 ], [ %5005, %5054 ]
  %4924 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4913, label %4925, label %4994

4925:                                             ; preds = %4920, %4984
  %4926 = phi i32 [ %4993, %4984 ], [ 0, %4920 ]
  %4927 = phi i64 [ %4935, %4984 ], [ %4917, %4920 ]
  %4928 = phi i64 [ %4992, %4984 ], [ %4916, %4920 ]
  %4929 = phi i32 [ %4990, %4984 ], [ %4924, %4920 ]
  %4930 = sub i32 %4915, %4926
  %4931 = tail call i32 @llvm.smin.i32(i32 %4930, i32 0)
  %4932 = sub i32 %4930, %4931
  %4933 = zext i32 %4932 to i64
  %4934 = add nuw nsw i64 %4933, 1
  %4935 = add nsw i64 %4927, -1
  %4936 = icmp ult i32 %4932, 31
  br i1 %4936, label %4972, label %4937

4937:                                             ; preds = %4925
  %4938 = and i64 %4934, 8589934560
  %4939 = sub i64 %4928, %4938
  br label %4940

4940:                                             ; preds = %4940, %4937
  %4941 = phi i64 [ 0, %4937 ], [ %4964, %4940 ]
  %4942 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4937 ], [ %4960, %4940 ]
  %4943 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4937 ], [ %4961, %4940 ]
  %4944 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4937 ], [ %4962, %4940 ]
  %4945 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4937 ], [ %4963, %4940 ]
  %4946 = sub i64 %4928, %4941
  %4947 = getelementptr inbounds i32, ptr %9, i64 %4946
  %4948 = getelementptr inbounds i32, ptr %4947, i64 -7
  %4949 = load <8 x i32>, ptr %4948, align 4, !tbaa !5
  %4950 = shufflevector <8 x i32> %4949, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4951 = getelementptr inbounds i32, ptr %4947, i64 -15
  %4952 = load <8 x i32>, ptr %4951, align 4, !tbaa !5
  %4953 = shufflevector <8 x i32> %4952, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4954 = getelementptr inbounds i32, ptr %4947, i64 -23
  %4955 = load <8 x i32>, ptr %4954, align 4, !tbaa !5
  %4956 = shufflevector <8 x i32> %4955, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4957 = getelementptr inbounds i32, ptr %4947, i64 -31
  %4958 = load <8 x i32>, ptr %4957, align 4, !tbaa !5
  %4959 = shufflevector <8 x i32> %4958, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4960 = mul <8 x i32> %4950, %4942
  %4961 = mul <8 x i32> %4953, %4943
  %4962 = mul <8 x i32> %4956, %4944
  %4963 = mul <8 x i32> %4959, %4945
  %4964 = add nuw i64 %4941, 32
  %4965 = icmp eq i64 %4964, %4938
  br i1 %4965, label %4966, label %4940, !llvm.loop !1284

4966:                                             ; preds = %4940
  %4967 = mul <8 x i32> %4961, %4960
  %4968 = mul <8 x i32> %4962, %4967
  %4969 = mul <8 x i32> %4963, %4968
  %4970 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4969)
  %4971 = icmp eq i64 %4934, %4938
  br i1 %4971, label %4984, label %4972

4972:                                             ; preds = %4925, %4966
  %4973 = phi i64 [ %4928, %4925 ], [ %4939, %4966 ]
  %4974 = phi i32 [ 1, %4925 ], [ %4970, %4966 ]
  br label %4975

4975:                                             ; preds = %4972, %4975
  %4976 = phi i64 [ %4981, %4975 ], [ %4973, %4972 ]
  %4977 = phi i32 [ %4980, %4975 ], [ %4974, %4972 ]
  %4978 = getelementptr inbounds i32, ptr %9, i64 %4976
  %4979 = load i32, ptr %4978, align 4, !tbaa !5
  %4980 = mul nsw i32 %4979, %4977
  %4981 = add nsw i64 %4976, -1
  %4982 = trunc i64 %4976 to i32
  %4983 = icmp sgt i32 %4982, 0
  br i1 %4983, label %4975, label %4984, !llvm.loop !1285

4984:                                             ; preds = %4975, %4966
  %4985 = phi i32 [ %4970, %4966 ], [ %4980, %4975 ]
  %4986 = and i64 %4935, 4294967295
  %4987 = getelementptr inbounds i32, ptr %6, i64 %4986
  %4988 = load i32, ptr %4987, align 4, !tbaa !5
  %4989 = mul nsw i32 %4988, %4985
  %4990 = add nsw i32 %4989, %4929
  %4991 = icmp sgt i64 %4927, 2
  %4992 = add nsw i64 %4928, -1
  %4993 = add i32 %4926, 1
  br i1 %4991, label %4925, label %4994, !llvm.loop !1286

4994:                                             ; preds = %4984, %4920
  %4995 = phi i32 [ %4924, %4920 ], [ %4990, %4984 ]
  %4996 = sext i32 %4995 to i64
  %4997 = getelementptr inbounds double, ptr %2, i64 %4996
  %4998 = load double, ptr %4997, align 8, !tbaa !18
  %4999 = getelementptr inbounds float, ptr %4888, i64 %4996
  %5000 = load float, ptr %4999, align 4, !tbaa !162
  %5001 = fpext float %5000 to double
  %5002 = fmul fast double %4998, %5001
  %5003 = fmul fast double %5002, %5002
  %5004 = fadd fast double %5003, %4921
  store double %5004, ptr %4890, align 8, !tbaa !18
  %5005 = fadd fast double %4998, %4923
  %5006 = add nuw nsw i32 %4922, 1
  br i1 %4914, label %5007, label %5054

5007:                                             ; preds = %4994
  %5008 = load i32, ptr %4, align 4, !tbaa !5
  %5009 = load i32, ptr %12, align 4, !tbaa !5
  %5010 = add nsw i32 %5009, -1
  %5011 = icmp slt i32 %5008, %5010
  br i1 %5011, label %5031, label %5012

5012:                                             ; preds = %5007
  %5013 = icmp eq i32 %5008, %5010
  br i1 %5013, label %5014, label %5047

5014:                                             ; preds = %5012
  store i32 0, ptr %4, align 4, !tbaa !5
  %5015 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5015, ptr %6, align 4, !tbaa !5
  br i1 %4919, label %5054, label %5016

5016:                                             ; preds = %5014, %5041
  %5017 = phi i64 [ %5045, %5041 ], [ 1, %5014 ]
  %5018 = getelementptr inbounds i32, ptr %4, i64 %5017
  %5019 = load i32, ptr %5018, align 4, !tbaa !5
  %5020 = getelementptr inbounds i32, ptr %12, i64 %5017
  %5021 = load i32, ptr %5020, align 4, !tbaa !5
  %5022 = add nsw i32 %5021, -1
  %5023 = icmp slt i32 %5019, %5022
  br i1 %5023, label %5024, label %5039

5024:                                             ; preds = %5016
  br i1 %5011, label %5031, label %5025

5025:                                             ; preds = %5024
  %5026 = getelementptr inbounds i32, ptr %7, i64 %5017
  %5027 = load i32, ptr %5026, align 4, !tbaa !5
  %5028 = getelementptr inbounds i32, ptr %6, i64 %5017
  %5029 = load i32, ptr %5028, align 4, !tbaa !5
  %5030 = add nsw i32 %5029, %5027
  store i32 %5030, ptr %5028, align 4, !tbaa !5
  br label %5049

5031:                                             ; preds = %5007, %5024
  %5032 = phi i32 [ %5019, %5024 ], [ %5008, %5007 ]
  %5033 = phi ptr [ %5018, %5024 ], [ %4, %5007 ]
  %5034 = phi i64 [ %5017, %5024 ], [ 0, %5007 ]
  %5035 = add nsw i32 %5032, 1
  store i32 %5035, ptr %5033, align 4, !tbaa !5
  %5036 = getelementptr inbounds i32, ptr %7, i64 %5034
  %5037 = load i32, ptr %5036, align 4, !tbaa !5
  %5038 = getelementptr inbounds i32, ptr %6, i64 %5034
  br label %5049

5039:                                             ; preds = %5016
  %5040 = icmp eq i32 %5019, %5022
  br i1 %5040, label %5041, label %5047

5041:                                             ; preds = %5039
  store i32 0, ptr %5018, align 4, !tbaa !5
  %5042 = getelementptr inbounds i32, ptr %8, i64 %5017
  %5043 = load i32, ptr %5042, align 4, !tbaa !5
  %5044 = getelementptr inbounds i32, ptr %6, i64 %5017
  store i32 %5043, ptr %5044, align 4, !tbaa !5
  %5045 = add nuw nsw i64 %5017, 1
  %5046 = icmp eq i64 %5045, %4917
  br i1 %5046, label %5054, label %5016, !llvm.loop !1287

5047:                                             ; preds = %5012, %5039
  %5048 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

5049:                                             ; preds = %5025, %5031
  %5050 = phi ptr [ %5038, %5031 ], [ %5018, %5025 ]
  %5051 = phi i32 [ %5037, %5031 ], [ 1, %5025 ]
  %5052 = load i32, ptr %5050, align 4, !tbaa !5
  %5053 = add nsw i32 %5052, %5051
  store i32 %5053, ptr %5050, align 4, !tbaa !5
  br label %5054

5054:                                             ; preds = %5041, %5049, %5014, %4994
  %5055 = icmp eq i32 %5006, %5
  br i1 %5055, label %5496, label %4920, !llvm.loop !1288

5056:                                             ; preds = %4903, %5192
  %5057 = phi double [ 0.000000e+00, %4903 ], [ %5140, %5192 ]
  %5058 = phi i32 [ 0, %4903 ], [ %5141, %5192 ]
  %5059 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4904, label %5060, label %5129

5060:                                             ; preds = %5056, %5119
  %5061 = phi i32 [ %5128, %5119 ], [ 0, %5056 ]
  %5062 = phi i64 [ %5070, %5119 ], [ %4908, %5056 ]
  %5063 = phi i64 [ %5127, %5119 ], [ %4907, %5056 ]
  %5064 = phi i32 [ %5125, %5119 ], [ %5059, %5056 ]
  %5065 = sub i32 %4906, %5061
  %5066 = tail call i32 @llvm.smin.i32(i32 %5065, i32 0)
  %5067 = sub i32 %5065, %5066
  %5068 = zext i32 %5067 to i64
  %5069 = add nuw nsw i64 %5068, 1
  %5070 = add nsw i64 %5062, -1
  %5071 = icmp ult i32 %5067, 31
  br i1 %5071, label %5107, label %5072

5072:                                             ; preds = %5060
  %5073 = and i64 %5069, 8589934560
  %5074 = sub i64 %5063, %5073
  br label %5075

5075:                                             ; preds = %5075, %5072
  %5076 = phi i64 [ 0, %5072 ], [ %5099, %5075 ]
  %5077 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5072 ], [ %5095, %5075 ]
  %5078 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5072 ], [ %5096, %5075 ]
  %5079 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5072 ], [ %5097, %5075 ]
  %5080 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5072 ], [ %5098, %5075 ]
  %5081 = sub i64 %5063, %5076
  %5082 = getelementptr inbounds i32, ptr %11, i64 %5081
  %5083 = getelementptr inbounds i32, ptr %5082, i64 -7
  %5084 = load <8 x i32>, ptr %5083, align 4, !tbaa !5
  %5085 = shufflevector <8 x i32> %5084, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5086 = getelementptr inbounds i32, ptr %5082, i64 -15
  %5087 = load <8 x i32>, ptr %5086, align 4, !tbaa !5
  %5088 = shufflevector <8 x i32> %5087, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5089 = getelementptr inbounds i32, ptr %5082, i64 -23
  %5090 = load <8 x i32>, ptr %5089, align 4, !tbaa !5
  %5091 = shufflevector <8 x i32> %5090, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5092 = getelementptr inbounds i32, ptr %5082, i64 -31
  %5093 = load <8 x i32>, ptr %5092, align 4, !tbaa !5
  %5094 = shufflevector <8 x i32> %5093, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5095 = mul <8 x i32> %5085, %5077
  %5096 = mul <8 x i32> %5088, %5078
  %5097 = mul <8 x i32> %5091, %5079
  %5098 = mul <8 x i32> %5094, %5080
  %5099 = add nuw i64 %5076, 32
  %5100 = icmp eq i64 %5099, %5073
  br i1 %5100, label %5101, label %5075, !llvm.loop !1289

5101:                                             ; preds = %5075
  %5102 = mul <8 x i32> %5096, %5095
  %5103 = mul <8 x i32> %5097, %5102
  %5104 = mul <8 x i32> %5098, %5103
  %5105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5104)
  %5106 = icmp eq i64 %5069, %5073
  br i1 %5106, label %5119, label %5107

5107:                                             ; preds = %5060, %5101
  %5108 = phi i64 [ %5063, %5060 ], [ %5074, %5101 ]
  %5109 = phi i32 [ 1, %5060 ], [ %5105, %5101 ]
  br label %5110

5110:                                             ; preds = %5107, %5110
  %5111 = phi i64 [ %5116, %5110 ], [ %5108, %5107 ]
  %5112 = phi i32 [ %5115, %5110 ], [ %5109, %5107 ]
  %5113 = getelementptr inbounds i32, ptr %11, i64 %5111
  %5114 = load i32, ptr %5113, align 4, !tbaa !5
  %5115 = mul nsw i32 %5114, %5112
  %5116 = add nsw i64 %5111, -1
  %5117 = trunc i64 %5111 to i32
  %5118 = icmp sgt i32 %5117, 0
  br i1 %5118, label %5110, label %5119, !llvm.loop !1290

5119:                                             ; preds = %5110, %5101
  %5120 = phi i32 [ %5105, %5101 ], [ %5115, %5110 ]
  %5121 = and i64 %5070, 4294967295
  %5122 = getelementptr inbounds i32, ptr %6, i64 %5121
  %5123 = load i32, ptr %5122, align 4, !tbaa !5
  %5124 = mul nsw i32 %5123, %5120
  %5125 = add nsw i32 %5124, %5064
  %5126 = icmp sgt i64 %5062, 2
  %5127 = add nsw i64 %5063, -1
  %5128 = add i32 %5061, 1
  br i1 %5126, label %5060, label %5129, !llvm.loop !1291

5129:                                             ; preds = %5119, %5056
  %5130 = phi i32 [ %5059, %5056 ], [ %5125, %5119 ]
  %5131 = icmp slt i32 %5130, %5
  br i1 %5131, label %5134, label %5132

5132:                                             ; preds = %5129
  %5133 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

5134:                                             ; preds = %5129
  %5135 = sext i32 %5130 to i64
  %5136 = getelementptr inbounds float, ptr %4888, i64 %5135
  %5137 = load float, ptr %5136, align 4, !tbaa !162
  %5138 = fpext float %5137 to double
  %5139 = fmul fast double %5138, %5138
  %5140 = fadd fast double %5139, %5057
  store double %5140, ptr %4890, align 8, !tbaa !18
  %5141 = add nuw nsw i32 %5058, 1
  br i1 %4905, label %5142, label %5192

5142:                                             ; preds = %5134
  %5143 = load i32, ptr %4, align 4, !tbaa !5
  %5144 = load i32, ptr %12, align 4, !tbaa !5
  %5145 = add nsw i32 %5144, -1
  %5146 = icmp slt i32 %5143, %5145
  br i1 %5146, label %5169, label %5147

5147:                                             ; preds = %5142
  %5148 = icmp eq i32 %5143, %5145
  br i1 %5148, label %5149, label %5185

5149:                                             ; preds = %5147
  store i32 0, ptr %4, align 4, !tbaa !5
  %5150 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5150, ptr %6, align 4, !tbaa !5
  br i1 %4910, label %5192, label %5151

5151:                                             ; preds = %5149, %5179
  %5152 = phi i64 [ %5183, %5179 ], [ 1, %5149 ]
  %5153 = getelementptr inbounds i32, ptr %4, i64 %5152
  %5154 = load i32, ptr %5153, align 4, !tbaa !5
  %5155 = getelementptr inbounds i32, ptr %12, i64 %5152
  %5156 = load i32, ptr %5155, align 4, !tbaa !5
  %5157 = add nsw i32 %5156, -1
  %5158 = icmp slt i32 %5154, %5157
  br i1 %5158, label %5159, label %5177

5159:                                             ; preds = %5151
  br i1 %5146, label %5169, label %5160

5160:                                             ; preds = %5159
  %5161 = shl i64 %5152, 32
  %5162 = add i64 %5161, -4294967296
  %5163 = ashr exact i64 %5162, 32
  %5164 = getelementptr inbounds i32, ptr %7, i64 %5163
  %5165 = load i32, ptr %5164, align 4, !tbaa !5
  %5166 = getelementptr inbounds i32, ptr %6, i64 %5152
  %5167 = load i32, ptr %5166, align 4, !tbaa !5
  %5168 = add nsw i32 %5167, %5165
  store i32 %5168, ptr %5166, align 4, !tbaa !5
  br label %5187

5169:                                             ; preds = %5142, %5159
  %5170 = phi i32 [ %5154, %5159 ], [ %5143, %5142 ]
  %5171 = phi ptr [ %5153, %5159 ], [ %4, %5142 ]
  %5172 = phi i64 [ %5152, %5159 ], [ 0, %5142 ]
  %5173 = add nsw i32 %5170, 1
  store i32 %5173, ptr %5171, align 4, !tbaa !5
  %5174 = getelementptr inbounds i32, ptr %7, i64 %5172
  %5175 = load i32, ptr %5174, align 4, !tbaa !5
  %5176 = getelementptr inbounds i32, ptr %6, i64 %5172
  br label %5187

5177:                                             ; preds = %5151
  %5178 = icmp eq i32 %5154, %5157
  br i1 %5178, label %5179, label %5185

5179:                                             ; preds = %5177
  store i32 0, ptr %5153, align 4, !tbaa !5
  %5180 = getelementptr inbounds i32, ptr %8, i64 %5152
  %5181 = load i32, ptr %5180, align 4, !tbaa !5
  %5182 = getelementptr inbounds i32, ptr %6, i64 %5152
  store i32 %5181, ptr %5182, align 4, !tbaa !5
  %5183 = add nuw nsw i64 %5152, 1
  %5184 = icmp eq i64 %5183, %4908
  br i1 %5184, label %5192, label %5151, !llvm.loop !1292

5185:                                             ; preds = %5147, %5177
  %5186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

5187:                                             ; preds = %5160, %5169
  %5188 = phi ptr [ %5176, %5169 ], [ %5153, %5160 ]
  %5189 = phi i32 [ %5175, %5169 ], [ 1, %5160 ]
  %5190 = load i32, ptr %5188, align 4, !tbaa !5
  %5191 = add nsw i32 %5190, %5189
  store i32 %5191, ptr %5188, align 4, !tbaa !5
  br label %5192

5192:                                             ; preds = %5179, %5187, %5149, %5134
  %5193 = icmp eq i32 %5141, %5
  br i1 %5193, label %5496, label %5056, !llvm.loop !1293

5194:                                             ; preds = %4896
  %5195 = getelementptr inbounds i32, ptr %3, i64 %19
  %5196 = load i32, ptr %5195, align 4, !tbaa !5
  %5197 = icmp eq i32 %5196, 0
  %5198 = icmp sgt i32 %5, 0
  br i1 %5197, label %5208, label %5199

5199:                                             ; preds = %5194
  br i1 %5198, label %5200, label %5496

5200:                                             ; preds = %5199
  %5201 = icmp sgt i32 %13, 1
  %5202 = icmp sgt i32 %13, 0
  %5203 = add i32 %13, -2
  %5204 = zext i32 %5203 to i64
  %5205 = zext i32 %13 to i64
  %5206 = add nuw i32 %5, 1
  %5207 = icmp eq i32 %13, 1
  br label %5350

5208:                                             ; preds = %5194
  br i1 %5198, label %5209, label %5496

5209:                                             ; preds = %5208
  %5210 = icmp sgt i32 %13, 1
  %5211 = icmp sgt i32 %13, 0
  %5212 = add i32 %13, -2
  %5213 = zext i32 %5212 to i64
  %5214 = zext i32 %13 to i64
  %5215 = add nuw i32 %5, 1
  %5216 = icmp eq i32 %13, 1
  br label %5217

5217:                                             ; preds = %5209, %5348
  %5218 = phi double [ 0.000000e+00, %5209 ], [ %5298, %5348 ]
  %5219 = phi i32 [ 0, %5209 ], [ %5300, %5348 ]
  %5220 = phi double [ 0.000000e+00, %5209 ], [ %5299, %5348 ]
  %5221 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5210, label %5222, label %5291

5222:                                             ; preds = %5217, %5281
  %5223 = phi i32 [ %5290, %5281 ], [ 0, %5217 ]
  %5224 = phi i64 [ %5232, %5281 ], [ %5214, %5217 ]
  %5225 = phi i64 [ %5289, %5281 ], [ %5213, %5217 ]
  %5226 = phi i32 [ %5287, %5281 ], [ %5221, %5217 ]
  %5227 = sub i32 %5212, %5223
  %5228 = tail call i32 @llvm.smin.i32(i32 %5227, i32 0)
  %5229 = sub i32 %5227, %5228
  %5230 = zext i32 %5229 to i64
  %5231 = add nuw nsw i64 %5230, 1
  %5232 = add nsw i64 %5224, -1
  %5233 = icmp ult i32 %5229, 31
  br i1 %5233, label %5269, label %5234

5234:                                             ; preds = %5222
  %5235 = and i64 %5231, 8589934560
  %5236 = sub i64 %5225, %5235
  br label %5237

5237:                                             ; preds = %5237, %5234
  %5238 = phi i64 [ 0, %5234 ], [ %5261, %5237 ]
  %5239 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5234 ], [ %5257, %5237 ]
  %5240 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5234 ], [ %5258, %5237 ]
  %5241 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5234 ], [ %5259, %5237 ]
  %5242 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5234 ], [ %5260, %5237 ]
  %5243 = sub i64 %5225, %5238
  %5244 = getelementptr inbounds i32, ptr %9, i64 %5243
  %5245 = getelementptr inbounds i32, ptr %5244, i64 -7
  %5246 = load <8 x i32>, ptr %5245, align 4, !tbaa !5
  %5247 = shufflevector <8 x i32> %5246, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5248 = getelementptr inbounds i32, ptr %5244, i64 -15
  %5249 = load <8 x i32>, ptr %5248, align 4, !tbaa !5
  %5250 = shufflevector <8 x i32> %5249, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5251 = getelementptr inbounds i32, ptr %5244, i64 -23
  %5252 = load <8 x i32>, ptr %5251, align 4, !tbaa !5
  %5253 = shufflevector <8 x i32> %5252, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5254 = getelementptr inbounds i32, ptr %5244, i64 -31
  %5255 = load <8 x i32>, ptr %5254, align 4, !tbaa !5
  %5256 = shufflevector <8 x i32> %5255, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5257 = mul <8 x i32> %5247, %5239
  %5258 = mul <8 x i32> %5250, %5240
  %5259 = mul <8 x i32> %5253, %5241
  %5260 = mul <8 x i32> %5256, %5242
  %5261 = add nuw i64 %5238, 32
  %5262 = icmp eq i64 %5261, %5235
  br i1 %5262, label %5263, label %5237, !llvm.loop !1294

5263:                                             ; preds = %5237
  %5264 = mul <8 x i32> %5258, %5257
  %5265 = mul <8 x i32> %5259, %5264
  %5266 = mul <8 x i32> %5260, %5265
  %5267 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5266)
  %5268 = icmp eq i64 %5231, %5235
  br i1 %5268, label %5281, label %5269

5269:                                             ; preds = %5222, %5263
  %5270 = phi i64 [ %5225, %5222 ], [ %5236, %5263 ]
  %5271 = phi i32 [ 1, %5222 ], [ %5267, %5263 ]
  br label %5272

5272:                                             ; preds = %5269, %5272
  %5273 = phi i64 [ %5278, %5272 ], [ %5270, %5269 ]
  %5274 = phi i32 [ %5277, %5272 ], [ %5271, %5269 ]
  %5275 = getelementptr inbounds i32, ptr %9, i64 %5273
  %5276 = load i32, ptr %5275, align 4, !tbaa !5
  %5277 = mul nsw i32 %5276, %5274
  %5278 = add nsw i64 %5273, -1
  %5279 = trunc i64 %5273 to i32
  %5280 = icmp sgt i32 %5279, 0
  br i1 %5280, label %5272, label %5281, !llvm.loop !1295

5281:                                             ; preds = %5272, %5263
  %5282 = phi i32 [ %5267, %5263 ], [ %5277, %5272 ]
  %5283 = and i64 %5232, 4294967295
  %5284 = getelementptr inbounds i32, ptr %6, i64 %5283
  %5285 = load i32, ptr %5284, align 4, !tbaa !5
  %5286 = mul nsw i32 %5285, %5282
  %5287 = add nsw i32 %5286, %5226
  %5288 = icmp sgt i64 %5224, 2
  %5289 = add nsw i64 %5225, -1
  %5290 = add i32 %5223, 1
  br i1 %5288, label %5222, label %5291, !llvm.loop !1296

5291:                                             ; preds = %5281, %5217
  %5292 = phi i32 [ %5221, %5217 ], [ %5287, %5281 ]
  %5293 = sext i32 %5292 to i64
  %5294 = getelementptr inbounds float, ptr %4888, i64 %5293
  %5295 = load float, ptr %5294, align 4, !tbaa !162
  %5296 = fpext float %5295 to double
  %5297 = fmul fast double %5296, %5296
  %5298 = fadd fast double %5297, %5218
  %5299 = fadd fast double %5220, 1.000000e+00
  %5300 = add nuw nsw i32 %5219, 1
  br i1 %5211, label %5301, label %5348

5301:                                             ; preds = %5291
  %5302 = load i32, ptr %4, align 4, !tbaa !5
  %5303 = load i32, ptr %12, align 4, !tbaa !5
  %5304 = add nsw i32 %5303, -1
  %5305 = icmp slt i32 %5302, %5304
  br i1 %5305, label %5325, label %5306

5306:                                             ; preds = %5301
  %5307 = icmp eq i32 %5302, %5304
  br i1 %5307, label %5308, label %5341

5308:                                             ; preds = %5306
  store i32 0, ptr %4, align 4, !tbaa !5
  %5309 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5309, ptr %6, align 4, !tbaa !5
  br i1 %5216, label %5348, label %5310

5310:                                             ; preds = %5308, %5335
  %5311 = phi i64 [ %5339, %5335 ], [ 1, %5308 ]
  %5312 = getelementptr inbounds i32, ptr %4, i64 %5311
  %5313 = load i32, ptr %5312, align 4, !tbaa !5
  %5314 = getelementptr inbounds i32, ptr %12, i64 %5311
  %5315 = load i32, ptr %5314, align 4, !tbaa !5
  %5316 = add nsw i32 %5315, -1
  %5317 = icmp slt i32 %5313, %5316
  br i1 %5317, label %5318, label %5333

5318:                                             ; preds = %5310
  br i1 %5305, label %5325, label %5319

5319:                                             ; preds = %5318
  %5320 = getelementptr inbounds i32, ptr %7, i64 %5311
  %5321 = load i32, ptr %5320, align 4, !tbaa !5
  %5322 = getelementptr inbounds i32, ptr %6, i64 %5311
  %5323 = load i32, ptr %5322, align 4, !tbaa !5
  %5324 = add nsw i32 %5323, %5321
  store i32 %5324, ptr %5322, align 4, !tbaa !5
  br label %5343

5325:                                             ; preds = %5301, %5318
  %5326 = phi i32 [ %5313, %5318 ], [ %5302, %5301 ]
  %5327 = phi ptr [ %5312, %5318 ], [ %4, %5301 ]
  %5328 = phi i64 [ %5311, %5318 ], [ 0, %5301 ]
  %5329 = add nsw i32 %5326, 1
  store i32 %5329, ptr %5327, align 4, !tbaa !5
  %5330 = getelementptr inbounds i32, ptr %7, i64 %5328
  %5331 = load i32, ptr %5330, align 4, !tbaa !5
  %5332 = getelementptr inbounds i32, ptr %6, i64 %5328
  br label %5343

5333:                                             ; preds = %5310
  %5334 = icmp eq i32 %5313, %5316
  br i1 %5334, label %5335, label %5341

5335:                                             ; preds = %5333
  store i32 0, ptr %5312, align 4, !tbaa !5
  %5336 = getelementptr inbounds i32, ptr %8, i64 %5311
  %5337 = load i32, ptr %5336, align 4, !tbaa !5
  %5338 = getelementptr inbounds i32, ptr %6, i64 %5311
  store i32 %5337, ptr %5338, align 4, !tbaa !5
  %5339 = add nuw nsw i64 %5311, 1
  %5340 = icmp eq i64 %5339, %5214
  br i1 %5340, label %5348, label %5310, !llvm.loop !1297

5341:                                             ; preds = %5306, %5333
  store double %5298, ptr %4890, align 8, !tbaa !18
  %5342 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

5343:                                             ; preds = %5319, %5325
  %5344 = phi ptr [ %5332, %5325 ], [ %5312, %5319 ]
  %5345 = phi i32 [ %5331, %5325 ], [ 1, %5319 ]
  %5346 = load i32, ptr %5344, align 4, !tbaa !5
  %5347 = add nsw i32 %5346, %5345
  store i32 %5347, ptr %5344, align 4, !tbaa !5
  br label %5348

5348:                                             ; preds = %5335, %5343, %5308, %5291
  %5349 = icmp eq i32 %5300, %5
  br i1 %5349, label %5495, label %5217, !llvm.loop !1298

5350:                                             ; preds = %5200, %5486
  %5351 = phi double [ 0.000000e+00, %5200 ], [ %5434, %5486 ]
  %5352 = phi i32 [ 0, %5200 ], [ %5435, %5486 ]
  %5353 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5201, label %5354, label %5423

5354:                                             ; preds = %5350, %5413
  %5355 = phi i32 [ %5422, %5413 ], [ 0, %5350 ]
  %5356 = phi i64 [ %5364, %5413 ], [ %5205, %5350 ]
  %5357 = phi i64 [ %5421, %5413 ], [ %5204, %5350 ]
  %5358 = phi i32 [ %5419, %5413 ], [ %5353, %5350 ]
  %5359 = sub i32 %5203, %5355
  %5360 = tail call i32 @llvm.smin.i32(i32 %5359, i32 0)
  %5361 = sub i32 %5359, %5360
  %5362 = zext i32 %5361 to i64
  %5363 = add nuw nsw i64 %5362, 1
  %5364 = add nsw i64 %5356, -1
  %5365 = icmp ult i32 %5361, 31
  br i1 %5365, label %5401, label %5366

5366:                                             ; preds = %5354
  %5367 = and i64 %5363, 8589934560
  %5368 = sub i64 %5357, %5367
  br label %5369

5369:                                             ; preds = %5369, %5366
  %5370 = phi i64 [ 0, %5366 ], [ %5393, %5369 ]
  %5371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5366 ], [ %5389, %5369 ]
  %5372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5366 ], [ %5390, %5369 ]
  %5373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5366 ], [ %5391, %5369 ]
  %5374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5366 ], [ %5392, %5369 ]
  %5375 = sub i64 %5357, %5370
  %5376 = getelementptr inbounds i32, ptr %11, i64 %5375
  %5377 = getelementptr inbounds i32, ptr %5376, i64 -7
  %5378 = load <8 x i32>, ptr %5377, align 4, !tbaa !5
  %5379 = shufflevector <8 x i32> %5378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5380 = getelementptr inbounds i32, ptr %5376, i64 -15
  %5381 = load <8 x i32>, ptr %5380, align 4, !tbaa !5
  %5382 = shufflevector <8 x i32> %5381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5383 = getelementptr inbounds i32, ptr %5376, i64 -23
  %5384 = load <8 x i32>, ptr %5383, align 4, !tbaa !5
  %5385 = shufflevector <8 x i32> %5384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5386 = getelementptr inbounds i32, ptr %5376, i64 -31
  %5387 = load <8 x i32>, ptr %5386, align 4, !tbaa !5
  %5388 = shufflevector <8 x i32> %5387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5389 = mul <8 x i32> %5379, %5371
  %5390 = mul <8 x i32> %5382, %5372
  %5391 = mul <8 x i32> %5385, %5373
  %5392 = mul <8 x i32> %5388, %5374
  %5393 = add nuw i64 %5370, 32
  %5394 = icmp eq i64 %5393, %5367
  br i1 %5394, label %5395, label %5369, !llvm.loop !1299

5395:                                             ; preds = %5369
  %5396 = mul <8 x i32> %5390, %5389
  %5397 = mul <8 x i32> %5391, %5396
  %5398 = mul <8 x i32> %5392, %5397
  %5399 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5398)
  %5400 = icmp eq i64 %5363, %5367
  br i1 %5400, label %5413, label %5401

5401:                                             ; preds = %5354, %5395
  %5402 = phi i64 [ %5357, %5354 ], [ %5368, %5395 ]
  %5403 = phi i32 [ 1, %5354 ], [ %5399, %5395 ]
  br label %5404

5404:                                             ; preds = %5401, %5404
  %5405 = phi i64 [ %5410, %5404 ], [ %5402, %5401 ]
  %5406 = phi i32 [ %5409, %5404 ], [ %5403, %5401 ]
  %5407 = getelementptr inbounds i32, ptr %11, i64 %5405
  %5408 = load i32, ptr %5407, align 4, !tbaa !5
  %5409 = mul nsw i32 %5408, %5406
  %5410 = add nsw i64 %5405, -1
  %5411 = trunc i64 %5405 to i32
  %5412 = icmp sgt i32 %5411, 0
  br i1 %5412, label %5404, label %5413, !llvm.loop !1300

5413:                                             ; preds = %5404, %5395
  %5414 = phi i32 [ %5399, %5395 ], [ %5409, %5404 ]
  %5415 = and i64 %5364, 4294967295
  %5416 = getelementptr inbounds i32, ptr %6, i64 %5415
  %5417 = load i32, ptr %5416, align 4, !tbaa !5
  %5418 = mul nsw i32 %5417, %5414
  %5419 = add nsw i32 %5418, %5358
  %5420 = icmp sgt i64 %5356, 2
  %5421 = add nsw i64 %5357, -1
  %5422 = add i32 %5355, 1
  br i1 %5420, label %5354, label %5423, !llvm.loop !1301

5423:                                             ; preds = %5413, %5350
  %5424 = phi i32 [ %5353, %5350 ], [ %5419, %5413 ]
  %5425 = icmp slt i32 %5424, %5
  br i1 %5425, label %5428, label %5426

5426:                                             ; preds = %5423
  %5427 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5501

5428:                                             ; preds = %5423
  %5429 = sext i32 %5424 to i64
  %5430 = getelementptr inbounds float, ptr %4888, i64 %5429
  %5431 = load float, ptr %5430, align 4, !tbaa !162
  %5432 = fpext float %5431 to double
  %5433 = fmul fast double %5432, %5432
  %5434 = fadd fast double %5433, %5351
  store double %5434, ptr %4890, align 8, !tbaa !18
  %5435 = add nuw nsw i32 %5352, 1
  br i1 %5202, label %5436, label %5486

5436:                                             ; preds = %5428
  %5437 = load i32, ptr %4, align 4, !tbaa !5
  %5438 = load i32, ptr %12, align 4, !tbaa !5
  %5439 = add nsw i32 %5438, -1
  %5440 = icmp slt i32 %5437, %5439
  br i1 %5440, label %5463, label %5441

5441:                                             ; preds = %5436
  %5442 = icmp eq i32 %5437, %5439
  br i1 %5442, label %5443, label %5479

5443:                                             ; preds = %5441
  store i32 0, ptr %4, align 4, !tbaa !5
  %5444 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5444, ptr %6, align 4, !tbaa !5
  br i1 %5207, label %5486, label %5445

5445:                                             ; preds = %5443, %5473
  %5446 = phi i64 [ %5477, %5473 ], [ 1, %5443 ]
  %5447 = getelementptr inbounds i32, ptr %4, i64 %5446
  %5448 = load i32, ptr %5447, align 4, !tbaa !5
  %5449 = getelementptr inbounds i32, ptr %12, i64 %5446
  %5450 = load i32, ptr %5449, align 4, !tbaa !5
  %5451 = add nsw i32 %5450, -1
  %5452 = icmp slt i32 %5448, %5451
  br i1 %5452, label %5453, label %5471

5453:                                             ; preds = %5445
  br i1 %5440, label %5463, label %5454

5454:                                             ; preds = %5453
  %5455 = shl i64 %5446, 32
  %5456 = add i64 %5455, -4294967296
  %5457 = ashr exact i64 %5456, 32
  %5458 = getelementptr inbounds i32, ptr %7, i64 %5457
  %5459 = load i32, ptr %5458, align 4, !tbaa !5
  %5460 = getelementptr inbounds i32, ptr %6, i64 %5446
  %5461 = load i32, ptr %5460, align 4, !tbaa !5
  %5462 = add nsw i32 %5461, %5459
  store i32 %5462, ptr %5460, align 4, !tbaa !5
  br label %5481

5463:                                             ; preds = %5436, %5453
  %5464 = phi i32 [ %5448, %5453 ], [ %5437, %5436 ]
  %5465 = phi ptr [ %5447, %5453 ], [ %4, %5436 ]
  %5466 = phi i64 [ %5446, %5453 ], [ 0, %5436 ]
  %5467 = add nsw i32 %5464, 1
  store i32 %5467, ptr %5465, align 4, !tbaa !5
  %5468 = getelementptr inbounds i32, ptr %7, i64 %5466
  %5469 = load i32, ptr %5468, align 4, !tbaa !5
  %5470 = getelementptr inbounds i32, ptr %6, i64 %5466
  br label %5481

5471:                                             ; preds = %5445
  %5472 = icmp eq i32 %5448, %5451
  br i1 %5472, label %5473, label %5479

5473:                                             ; preds = %5471
  store i32 0, ptr %5447, align 4, !tbaa !5
  %5474 = getelementptr inbounds i32, ptr %8, i64 %5446
  %5475 = load i32, ptr %5474, align 4, !tbaa !5
  %5476 = getelementptr inbounds i32, ptr %6, i64 %5446
  store i32 %5475, ptr %5476, align 4, !tbaa !5
  %5477 = add nuw nsw i64 %5446, 1
  %5478 = icmp eq i64 %5477, %5205
  br i1 %5478, label %5486, label %5445, !llvm.loop !1302

5479:                                             ; preds = %5441, %5471
  %5480 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5501

5481:                                             ; preds = %5454, %5463
  %5482 = phi ptr [ %5470, %5463 ], [ %5447, %5454 ]
  %5483 = phi i32 [ %5469, %5463 ], [ 1, %5454 ]
  %5484 = load i32, ptr %5482, align 4, !tbaa !5
  %5485 = add nsw i32 %5484, %5483
  store i32 %5485, ptr %5482, align 4, !tbaa !5
  br label %5486

5486:                                             ; preds = %5473, %5481, %5443, %5428
  %5487 = icmp eq i32 %5435, %5
  br i1 %5487, label %5496, label %5350, !llvm.loop !1303

5488:                                             ; preds = %4896
  %5489 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5496

5490:                                             ; preds = %2017
  store i16 %1967, ptr %1850, align 2, !tbaa !78
  br label %5496

5491:                                             ; preds = %2315
  store i16 %2265, ptr %1850, align 2, !tbaa !78
  br label %5496

5492:                                             ; preds = %3238
  store i64 %3188, ptr %3071, align 8, !tbaa !120
  br label %5496

5493:                                             ; preds = %3535
  store i64 %3485, ptr %3071, align 8, !tbaa !120
  br label %5496

5494:                                             ; preds = %4139
  store double %4089, ptr %3681, align 8, !tbaa !18
  br label %5496

5495:                                             ; preds = %5348
  store double %5298, ptr %4890, align 8, !tbaa !18
  br label %5496

5496:                                             ; preds = %5486, %5192, %5054, %4882, %4745, %4590, %4450, %4277, %3983, %3845, %3673, %3379, %3063, %2925, %2769, %2628, %2453, %2159, %1842, %1704, %1548, %1410, %1235, %1097, %941, %800, %625, %487, %331, %193, %5199, %5208, %5495, %4902, %4911, %4597, %4606, %4296, %4305, %3990, %3999, %5494, %3693, %3702, %3386, %3395, %5493, %3083, %3092, %5492, %2776, %2785, %2473, %2482, %2166, %2175, %5491, %1862, %1871, %5490, %1555, %1564, %1255, %1264, %948, %957, %645, %654, %338, %347, %38, %47, %4892, %5488, %4287, %4884, %3683, %4279, %3073, %3675, %2463, %3065, %1852, %2455, %1245, %1844, %635, %1237, %28, %627, %18
  %5497 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %627 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1237 ], [ 0.000000e+00, %635 ], [ 0.000000e+00, %1844 ], [ 0.000000e+00, %1245 ], [ 0.000000e+00, %2455 ], [ 0.000000e+00, %1852 ], [ 0.000000e+00, %3065 ], [ 0.000000e+00, %2463 ], [ 0.000000e+00, %3675 ], [ 0.000000e+00, %3073 ], [ 0.000000e+00, %4279 ], [ 0.000000e+00, %3683 ], [ 0.000000e+00, %4884 ], [ 0.000000e+00, %4287 ], [ 0.000000e+00, %5488 ], [ 0.000000e+00, %4892 ], [ 0.000000e+00, %47 ], [ 0.000000e+00, %38 ], [ 0.000000e+00, %347 ], [ 0.000000e+00, %338 ], [ 0.000000e+00, %654 ], [ 0.000000e+00, %645 ], [ 0.000000e+00, %957 ], [ 0.000000e+00, %948 ], [ 0.000000e+00, %1264 ], [ 0.000000e+00, %1255 ], [ 0.000000e+00, %1564 ], [ 0.000000e+00, %1555 ], [ %1968, %5490 ], [ 0.000000e+00, %1871 ], [ 0.000000e+00, %1862 ], [ %2266, %5491 ], [ 0.000000e+00, %2175 ], [ 0.000000e+00, %2166 ], [ 0.000000e+00, %2482 ], [ 0.000000e+00, %2473 ], [ 0.000000e+00, %2785 ], [ 0.000000e+00, %2776 ], [ %3189, %5492 ], [ 0.000000e+00, %3092 ], [ 0.000000e+00, %3083 ], [ %3486, %5493 ], [ 0.000000e+00, %3395 ], [ 0.000000e+00, %3386 ], [ 0.000000e+00, %3702 ], [ 0.000000e+00, %3693 ], [ %4090, %5494 ], [ 0.000000e+00, %3999 ], [ 0.000000e+00, %3990 ], [ 0.000000e+00, %4305 ], [ 0.000000e+00, %4296 ], [ 0.000000e+00, %4606 ], [ 0.000000e+00, %4597 ], [ 0.000000e+00, %4911 ], [ 0.000000e+00, %4902 ], [ %5299, %5495 ], [ 0.000000e+00, %5208 ], [ 0.000000e+00, %5199 ], [ %144, %193 ], [ 0.000000e+00, %331 ], [ %438, %487 ], [ 0.000000e+00, %625 ], [ %751, %800 ], [ 0.000000e+00, %941 ], [ %1048, %1097 ], [ 0.000000e+00, %1235 ], [ %1361, %1410 ], [ 0.000000e+00, %1548 ], [ %1655, %1704 ], [ 0.000000e+00, %1842 ], [ 0.000000e+00, %2159 ], [ 0.000000e+00, %2453 ], [ %2579, %2628 ], [ 0.000000e+00, %2769 ], [ %2876, %2925 ], [ 0.000000e+00, %3063 ], [ 0.000000e+00, %3379 ], [ 0.000000e+00, %3673 ], [ %3796, %3845 ], [ 0.000000e+00, %3983 ], [ 0.000000e+00, %4277 ], [ %4401, %4450 ], [ 0.000000e+00, %4590 ], [ %4696, %4745 ], [ 0.000000e+00, %4882 ], [ %5005, %5054 ], [ 0.000000e+00, %5192 ], [ 0.000000e+00, %5486 ]
  %5498 = phi i32 [ %10, %18 ], [ 1, %627 ], [ 1, %28 ], [ 1, %1237 ], [ 1, %635 ], [ 1, %1844 ], [ 1, %1245 ], [ 1, %2455 ], [ 1, %1852 ], [ 1, %3065 ], [ 1, %2463 ], [ 1, %3675 ], [ 1, %3073 ], [ 1, %4279 ], [ 1, %3683 ], [ 1, %4884 ], [ 1, %4287 ], [ 1, %5488 ], [ 1, %4892 ], [ 1, %47 ], [ 1, %38 ], [ 1, %347 ], [ 1, %338 ], [ 1, %654 ], [ 1, %645 ], [ 1, %957 ], [ 1, %948 ], [ 1, %1264 ], [ 1, %1255 ], [ 1, %1564 ], [ 1, %1555 ], [ %1878, %5490 ], [ 1, %1871 ], [ 1, %1862 ], [ %2182, %5491 ], [ 1, %2175 ], [ 1, %2166 ], [ 1, %2482 ], [ 1, %2473 ], [ 1, %2785 ], [ 1, %2776 ], [ %3099, %5492 ], [ 1, %3092 ], [ 1, %3083 ], [ %3402, %5493 ], [ 1, %3395 ], [ 1, %3386 ], [ 1, %3702 ], [ 1, %3693 ], [ %4006, %5494 ], [ 1, %3999 ], [ 1, %3990 ], [ 1, %4305 ], [ 1, %4296 ], [ 1, %4606 ], [ 1, %4597 ], [ 1, %4911 ], [ 1, %4902 ], [ %5215, %5495 ], [ 1, %5208 ], [ 1, %5199 ], [ %54, %193 ], [ %45, %331 ], [ %354, %487 ], [ %345, %625 ], [ %661, %800 ], [ %652, %941 ], [ %964, %1097 ], [ %955, %1235 ], [ %1271, %1410 ], [ %1262, %1548 ], [ %1571, %1704 ], [ %1562, %1842 ], [ %1869, %2159 ], [ %2173, %2453 ], [ %2489, %2628 ], [ %2480, %2769 ], [ %2792, %2925 ], [ %2783, %3063 ], [ %3090, %3379 ], [ %3393, %3673 ], [ %3709, %3845 ], [ %3700, %3983 ], [ %3997, %4277 ], [ %4312, %4450 ], [ %4303, %4590 ], [ %4613, %4745 ], [ %4604, %4882 ], [ %4918, %5054 ], [ %4909, %5192 ], [ %5206, %5486 ]
  %5499 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5498, ptr noundef nonnull @.str.5) #3
  %5500 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5497, ptr noundef nonnull @.str.6) #3
  br label %5501

5501:                                             ; preds = %5047, %5132, %5185, %5341, %5426, %5479, %4443, %4528, %4583, %4738, %4823, %4875, %3838, %3923, %3976, %4132, %4217, %4270, %3231, %3316, %3372, %3528, %3613, %3666, %2621, %2705, %2762, %2918, %3002, %3056, %2010, %2095, %2152, %2308, %2393, %2446, %1403, %1487, %1541, %1697, %1781, %1835, %793, %877, %934, %1090, %1174, %1228, %186, %270, %324, %480, %564, %618, %5496
  %5502 = phi i32 [ 0, %5496 ], [ -1, %618 ], [ -1, %564 ], [ -1, %480 ], [ -1, %324 ], [ -1, %270 ], [ -1, %186 ], [ -1, %1228 ], [ -1, %1174 ], [ -1, %1090 ], [ -1, %934 ], [ -1, %877 ], [ -1, %793 ], [ -1, %1835 ], [ -1, %1781 ], [ -1, %1697 ], [ -1, %1541 ], [ -1, %1487 ], [ -1, %1403 ], [ -1, %2446 ], [ -1, %2393 ], [ -1, %2308 ], [ -1, %2152 ], [ -1, %2095 ], [ -1, %2010 ], [ -1, %3056 ], [ -1, %3002 ], [ -1, %2918 ], [ -1, %2762 ], [ -1, %2705 ], [ -1, %2621 ], [ -1, %3666 ], [ -1, %3613 ], [ -1, %3528 ], [ -1, %3372 ], [ -1, %3316 ], [ -1, %3231 ], [ -1, %4270 ], [ -1, %4217 ], [ -1, %4132 ], [ -1, %3976 ], [ -1, %3923 ], [ -1, %3838 ], [ -1, %4875 ], [ -1, %4823 ], [ -1, %4738 ], [ -1, %4583 ], [ -1, %4528 ], [ -1, %4443 ], [ -1, %5479 ], [ -1, %5426 ], [ -1, %5341 ], [ -1, %5185 ], [ -1, %5132 ], [ -1, %5047 ]
  ret i32 %5502
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Norm2_REAL8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5491 [
    i32 101, label %22
    i32 102, label %629
    i32 103, label %1239
    i32 104, label %1846
    i32 105, label %2457
    i32 106, label %3067
    i32 107, label %3677
    i32 108, label %4276
    i32 109, label %4886
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = load double, ptr %24, align 8, !tbaa !18
  %30 = fptoui double %29 to i8
  %31 = mul i8 %30, %30
  store i8 %31, ptr %26, align 1, !tbaa !11
  br label %5491

32:                                               ; preds = %22
  switch i32 %1, label %627 [
    i32 1, label %33
    i32 0, label %333
  ]

33:                                               ; preds = %32
  %34 = getelementptr inbounds i32, ptr %3, i64 %19
  %35 = load i32, ptr %34, align 4, !tbaa !5
  %36 = icmp eq i32 %35, 0
  %37 = icmp sgt i32 %5, 0
  br i1 %36, label %47, label %38

38:                                               ; preds = %33
  br i1 %37, label %39, label %5491

39:                                               ; preds = %38
  %40 = icmp sgt i32 %13, 1
  %41 = icmp sgt i32 %13, 0
  %42 = add i32 %13, -2
  %43 = zext i32 %42 to i64
  %44 = zext i32 %13 to i64
  %45 = add nuw i32 %5, 1
  %46 = icmp eq i32 %13, 1
  br label %195

47:                                               ; preds = %33
  br i1 %37, label %48, label %5491

48:                                               ; preds = %47
  %49 = icmp sgt i32 %13, 1
  %50 = icmp sgt i32 %13, 0
  %51 = add i32 %13, -2
  %52 = zext i32 %51 to i64
  %53 = zext i32 %13 to i64
  %54 = add nuw i32 %5, 1
  %55 = icmp eq i32 %13, 1
  br label %56

56:                                               ; preds = %48, %193
  %57 = phi i32 [ 0, %48 ], [ %145, %193 ]
  %58 = phi double [ 0.000000e+00, %48 ], [ %144, %193 ]
  %59 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %49, label %60, label %129

60:                                               ; preds = %56, %119
  %61 = phi i32 [ %128, %119 ], [ 0, %56 ]
  %62 = phi i64 [ %70, %119 ], [ %53, %56 ]
  %63 = phi i64 [ %127, %119 ], [ %52, %56 ]
  %64 = phi i32 [ %125, %119 ], [ %59, %56 ]
  %65 = sub i32 %51, %61
  %66 = tail call i32 @llvm.smin.i32(i32 %65, i32 0)
  %67 = sub i32 %65, %66
  %68 = zext i32 %67 to i64
  %69 = add nuw nsw i64 %68, 1
  %70 = add nsw i64 %62, -1
  %71 = icmp ult i32 %67, 31
  br i1 %71, label %107, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 8589934560
  %74 = sub i64 %63, %73
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi i64 [ 0, %72 ], [ %99, %75 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %95, %75 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %96, %75 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %97, %75 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %72 ], [ %98, %75 ]
  %81 = sub i64 %63, %76
  %82 = getelementptr inbounds i32, ptr %9, i64 %81
  %83 = getelementptr inbounds i32, ptr %82, i64 -7
  %84 = load <8 x i32>, ptr %83, align 4, !tbaa !5
  %85 = shufflevector <8 x i32> %84, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %86 = getelementptr inbounds i32, ptr %82, i64 -15
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !5
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %82, i64 -23
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !5
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %82, i64 -31
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !5
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = mul <8 x i32> %85, %77
  %96 = mul <8 x i32> %88, %78
  %97 = mul <8 x i32> %91, %79
  %98 = mul <8 x i32> %94, %80
  %99 = add nuw i64 %76, 32
  %100 = icmp eq i64 %99, %73
  br i1 %100, label %101, label %75, !llvm.loop !1304

101:                                              ; preds = %75
  %102 = mul <8 x i32> %96, %95
  %103 = mul <8 x i32> %97, %102
  %104 = mul <8 x i32> %98, %103
  %105 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %104)
  %106 = icmp eq i64 %69, %73
  br i1 %106, label %119, label %107

107:                                              ; preds = %60, %101
  %108 = phi i64 [ %63, %60 ], [ %74, %101 ]
  %109 = phi i32 [ 1, %60 ], [ %105, %101 ]
  br label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %116, %110 ], [ %108, %107 ]
  %112 = phi i32 [ %115, %110 ], [ %109, %107 ]
  %113 = getelementptr inbounds i32, ptr %9, i64 %111
  %114 = load i32, ptr %113, align 4, !tbaa !5
  %115 = mul nsw i32 %114, %112
  %116 = add nsw i64 %111, -1
  %117 = trunc i64 %111 to i32
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %110, label %119, !llvm.loop !1305

119:                                              ; preds = %110, %101
  %120 = phi i32 [ %105, %101 ], [ %115, %110 ]
  %121 = and i64 %70, 4294967295
  %122 = getelementptr inbounds i32, ptr %6, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !5
  %124 = mul nsw i32 %123, %120
  %125 = add nsw i32 %124, %64
  %126 = icmp sgt i64 %62, 2
  %127 = add nsw i64 %63, -1
  %128 = add i32 %61, 1
  br i1 %126, label %60, label %129, !llvm.loop !1306

129:                                              ; preds = %119, %56
  %130 = phi i32 [ %59, %56 ], [ %125, %119 ]
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds double, ptr %2, i64 %131
  %133 = load double, ptr %132, align 8, !tbaa !18
  %134 = getelementptr inbounds double, ptr %24, i64 %131
  %135 = load double, ptr %134, align 8, !tbaa !18
  %136 = fptoui double %135 to i8
  %137 = load i8, ptr %26, align 1, !tbaa !11
  %138 = uitofp i8 %137 to double
  %139 = uitofp i8 %136 to double
  %140 = fmul fast double %133, %139
  %141 = fmul fast double %140, %140
  %142 = fadd fast double %141, %138
  %143 = fptoui double %142 to i8
  store i8 %143, ptr %26, align 1, !tbaa !11
  %144 = fadd fast double %133, %58
  %145 = add nuw nsw i32 %57, 1
  br i1 %50, label %146, label %193

146:                                              ; preds = %129
  %147 = load i32, ptr %4, align 4, !tbaa !5
  %148 = load i32, ptr %12, align 4, !tbaa !5
  %149 = add nsw i32 %148, -1
  %150 = icmp slt i32 %147, %149
  br i1 %150, label %170, label %151

151:                                              ; preds = %146
  %152 = icmp eq i32 %147, %149
  br i1 %152, label %153, label %186

153:                                              ; preds = %151
  store i32 0, ptr %4, align 4, !tbaa !5
  %154 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %154, ptr %6, align 4, !tbaa !5
  br i1 %55, label %193, label %155

155:                                              ; preds = %153, %180
  %156 = phi i64 [ %184, %180 ], [ 1, %153 ]
  %157 = getelementptr inbounds i32, ptr %4, i64 %156
  %158 = load i32, ptr %157, align 4, !tbaa !5
  %159 = getelementptr inbounds i32, ptr %12, i64 %156
  %160 = load i32, ptr %159, align 4, !tbaa !5
  %161 = add nsw i32 %160, -1
  %162 = icmp slt i32 %158, %161
  br i1 %162, label %163, label %178

163:                                              ; preds = %155
  br i1 %150, label %170, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds i32, ptr %7, i64 %156
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = getelementptr inbounds i32, ptr %6, i64 %156
  %168 = load i32, ptr %167, align 4, !tbaa !5
  %169 = add nsw i32 %168, %166
  store i32 %169, ptr %167, align 4, !tbaa !5
  br label %188

170:                                              ; preds = %146, %163
  %171 = phi i32 [ %158, %163 ], [ %147, %146 ]
  %172 = phi ptr [ %157, %163 ], [ %4, %146 ]
  %173 = phi i64 [ %156, %163 ], [ 0, %146 ]
  %174 = add nsw i32 %171, 1
  store i32 %174, ptr %172, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %7, i64 %173
  %176 = load i32, ptr %175, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %6, i64 %173
  br label %188

178:                                              ; preds = %155
  %179 = icmp eq i32 %158, %161
  br i1 %179, label %180, label %186

180:                                              ; preds = %178
  store i32 0, ptr %157, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %8, i64 %156
  %182 = load i32, ptr %181, align 4, !tbaa !5
  %183 = getelementptr inbounds i32, ptr %6, i64 %156
  store i32 %182, ptr %183, align 4, !tbaa !5
  %184 = add nuw nsw i64 %156, 1
  %185 = icmp eq i64 %184, %53
  br i1 %185, label %193, label %155, !llvm.loop !1307

186:                                              ; preds = %151, %178
  %187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

188:                                              ; preds = %164, %170
  %189 = phi ptr [ %177, %170 ], [ %157, %164 ]
  %190 = phi i32 [ %176, %170 ], [ 1, %164 ]
  %191 = load i32, ptr %189, align 4, !tbaa !5
  %192 = add nsw i32 %191, %190
  store i32 %192, ptr %189, align 4, !tbaa !5
  br label %193

193:                                              ; preds = %180, %188, %153, %129
  %194 = icmp eq i32 %145, %5
  br i1 %194, label %5491, label %56, !llvm.loop !1308

195:                                              ; preds = %39, %331
  %196 = phi i32 [ 0, %39 ], [ %280, %331 ]
  %197 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %40, label %198, label %267

198:                                              ; preds = %195, %257
  %199 = phi i32 [ %266, %257 ], [ 0, %195 ]
  %200 = phi i64 [ %208, %257 ], [ %44, %195 ]
  %201 = phi i64 [ %265, %257 ], [ %43, %195 ]
  %202 = phi i32 [ %263, %257 ], [ %197, %195 ]
  %203 = sub i32 %42, %199
  %204 = tail call i32 @llvm.smin.i32(i32 %203, i32 0)
  %205 = sub i32 %203, %204
  %206 = zext i32 %205 to i64
  %207 = add nuw nsw i64 %206, 1
  %208 = add nsw i64 %200, -1
  %209 = icmp ult i32 %205, 31
  br i1 %209, label %245, label %210

210:                                              ; preds = %198
  %211 = and i64 %207, 8589934560
  %212 = sub i64 %201, %211
  br label %213

213:                                              ; preds = %213, %210
  %214 = phi i64 [ 0, %210 ], [ %237, %213 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %233, %213 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %234, %213 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %235, %213 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %210 ], [ %236, %213 ]
  %219 = sub i64 %201, %214
  %220 = getelementptr inbounds i32, ptr %11, i64 %219
  %221 = getelementptr inbounds i32, ptr %220, i64 -7
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %220, i64 -15
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %220, i64 -23
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %220, i64 -31
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = mul <8 x i32> %223, %215
  %234 = mul <8 x i32> %226, %216
  %235 = mul <8 x i32> %229, %217
  %236 = mul <8 x i32> %232, %218
  %237 = add nuw i64 %214, 32
  %238 = icmp eq i64 %237, %211
  br i1 %238, label %239, label %213, !llvm.loop !1309

239:                                              ; preds = %213
  %240 = mul <8 x i32> %234, %233
  %241 = mul <8 x i32> %235, %240
  %242 = mul <8 x i32> %236, %241
  %243 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %242)
  %244 = icmp eq i64 %207, %211
  br i1 %244, label %257, label %245

245:                                              ; preds = %198, %239
  %246 = phi i64 [ %201, %198 ], [ %212, %239 ]
  %247 = phi i32 [ 1, %198 ], [ %243, %239 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %254, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %253, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i32, ptr %11, i64 %249
  %252 = load i32, ptr %251, align 4, !tbaa !5
  %253 = mul nsw i32 %252, %250
  %254 = add nsw i64 %249, -1
  %255 = trunc i64 %249 to i32
  %256 = icmp sgt i32 %255, 0
  br i1 %256, label %248, label %257, !llvm.loop !1310

257:                                              ; preds = %248, %239
  %258 = phi i32 [ %243, %239 ], [ %253, %248 ]
  %259 = and i64 %208, 4294967295
  %260 = getelementptr inbounds i32, ptr %6, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !5
  %262 = mul nsw i32 %261, %258
  %263 = add nsw i32 %262, %202
  %264 = icmp sgt i64 %200, 2
  %265 = add nsw i64 %201, -1
  %266 = add i32 %199, 1
  br i1 %264, label %198, label %267, !llvm.loop !1311

267:                                              ; preds = %257, %195
  %268 = phi i32 [ %197, %195 ], [ %263, %257 ]
  %269 = icmp slt i32 %268, %5
  br i1 %269, label %272, label %270

270:                                              ; preds = %267
  %271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

272:                                              ; preds = %267
  %273 = sext i32 %268 to i64
  %274 = getelementptr inbounds double, ptr %24, i64 %273
  %275 = load double, ptr %274, align 8, !tbaa !18
  %276 = fptoui double %275 to i8
  %277 = load i8, ptr %26, align 1, !tbaa !11
  %278 = mul i8 %276, %276
  %279 = add i8 %278, %277
  store i8 %279, ptr %26, align 1, !tbaa !11
  %280 = add nuw nsw i32 %196, 1
  br i1 %41, label %281, label %331

281:                                              ; preds = %272
  %282 = load i32, ptr %4, align 4, !tbaa !5
  %283 = load i32, ptr %12, align 4, !tbaa !5
  %284 = add nsw i32 %283, -1
  %285 = icmp slt i32 %282, %284
  br i1 %285, label %308, label %286

286:                                              ; preds = %281
  %287 = icmp eq i32 %282, %284
  br i1 %287, label %288, label %324

288:                                              ; preds = %286
  store i32 0, ptr %4, align 4, !tbaa !5
  %289 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %289, ptr %6, align 4, !tbaa !5
  br i1 %46, label %331, label %290

290:                                              ; preds = %288, %318
  %291 = phi i64 [ %322, %318 ], [ 1, %288 ]
  %292 = getelementptr inbounds i32, ptr %4, i64 %291
  %293 = load i32, ptr %292, align 4, !tbaa !5
  %294 = getelementptr inbounds i32, ptr %12, i64 %291
  %295 = load i32, ptr %294, align 4, !tbaa !5
  %296 = add nsw i32 %295, -1
  %297 = icmp slt i32 %293, %296
  br i1 %297, label %298, label %316

298:                                              ; preds = %290
  br i1 %285, label %308, label %299

299:                                              ; preds = %298
  %300 = shl i64 %291, 32
  %301 = add i64 %300, -4294967296
  %302 = ashr exact i64 %301, 32
  %303 = getelementptr inbounds i32, ptr %7, i64 %302
  %304 = load i32, ptr %303, align 4, !tbaa !5
  %305 = getelementptr inbounds i32, ptr %6, i64 %291
  %306 = load i32, ptr %305, align 4, !tbaa !5
  %307 = add nsw i32 %306, %304
  store i32 %307, ptr %305, align 4, !tbaa !5
  br label %326

308:                                              ; preds = %281, %298
  %309 = phi i32 [ %293, %298 ], [ %282, %281 ]
  %310 = phi ptr [ %292, %298 ], [ %4, %281 ]
  %311 = phi i64 [ %291, %298 ], [ 0, %281 ]
  %312 = add nsw i32 %309, 1
  store i32 %312, ptr %310, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %7, i64 %311
  %314 = load i32, ptr %313, align 4, !tbaa !5
  %315 = getelementptr inbounds i32, ptr %6, i64 %311
  br label %326

316:                                              ; preds = %290
  %317 = icmp eq i32 %293, %296
  br i1 %317, label %318, label %324

318:                                              ; preds = %316
  store i32 0, ptr %292, align 4, !tbaa !5
  %319 = getelementptr inbounds i32, ptr %8, i64 %291
  %320 = load i32, ptr %319, align 4, !tbaa !5
  %321 = getelementptr inbounds i32, ptr %6, i64 %291
  store i32 %320, ptr %321, align 4, !tbaa !5
  %322 = add nuw nsw i64 %291, 1
  %323 = icmp eq i64 %322, %44
  br i1 %323, label %331, label %290, !llvm.loop !1312

324:                                              ; preds = %286, %316
  %325 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

326:                                              ; preds = %299, %308
  %327 = phi ptr [ %315, %308 ], [ %292, %299 ]
  %328 = phi i32 [ %314, %308 ], [ 1, %299 ]
  %329 = load i32, ptr %327, align 4, !tbaa !5
  %330 = add nsw i32 %329, %328
  store i32 %330, ptr %327, align 4, !tbaa !5
  br label %331

331:                                              ; preds = %318, %326, %288, %272
  %332 = icmp eq i32 %280, %5
  br i1 %332, label %5491, label %195, !llvm.loop !1313

333:                                              ; preds = %32
  %334 = getelementptr inbounds i32, ptr %3, i64 %19
  %335 = load i32, ptr %334, align 4, !tbaa !5
  %336 = icmp eq i32 %335, 0
  %337 = icmp sgt i32 %5, 0
  br i1 %336, label %347, label %338

338:                                              ; preds = %333
  br i1 %337, label %339, label %5491

339:                                              ; preds = %338
  %340 = icmp sgt i32 %13, 1
  %341 = icmp sgt i32 %13, 0
  %342 = add i32 %13, -2
  %343 = zext i32 %342 to i64
  %344 = zext i32 %13 to i64
  %345 = add nuw i32 %5, 1
  %346 = icmp eq i32 %13, 1
  br label %489

347:                                              ; preds = %333
  br i1 %337, label %348, label %5491

348:                                              ; preds = %347
  %349 = icmp sgt i32 %13, 1
  %350 = icmp sgt i32 %13, 0
  %351 = add i32 %13, -2
  %352 = zext i32 %351 to i64
  %353 = zext i32 %13 to i64
  %354 = add nuw i32 %5, 1
  %355 = icmp eq i32 %13, 1
  br label %356

356:                                              ; preds = %348, %487
  %357 = phi i32 [ 0, %348 ], [ %439, %487 ]
  %358 = phi double [ 0.000000e+00, %348 ], [ %438, %487 ]
  %359 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %349, label %360, label %429

360:                                              ; preds = %356, %419
  %361 = phi i32 [ %428, %419 ], [ 0, %356 ]
  %362 = phi i64 [ %370, %419 ], [ %353, %356 ]
  %363 = phi i64 [ %427, %419 ], [ %352, %356 ]
  %364 = phi i32 [ %425, %419 ], [ %359, %356 ]
  %365 = sub i32 %351, %361
  %366 = tail call i32 @llvm.smin.i32(i32 %365, i32 0)
  %367 = sub i32 %365, %366
  %368 = zext i32 %367 to i64
  %369 = add nuw nsw i64 %368, 1
  %370 = add nsw i64 %362, -1
  %371 = icmp ult i32 %367, 31
  br i1 %371, label %407, label %372

372:                                              ; preds = %360
  %373 = and i64 %369, 8589934560
  %374 = sub i64 %363, %373
  br label %375

375:                                              ; preds = %375, %372
  %376 = phi i64 [ 0, %372 ], [ %399, %375 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %395, %375 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %396, %375 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %397, %375 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %372 ], [ %398, %375 ]
  %381 = sub i64 %363, %376
  %382 = getelementptr inbounds i32, ptr %9, i64 %381
  %383 = getelementptr inbounds i32, ptr %382, i64 -7
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %382, i64 -15
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %382, i64 -23
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !5
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %382, i64 -31
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !5
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = mul <8 x i32> %385, %377
  %396 = mul <8 x i32> %388, %378
  %397 = mul <8 x i32> %391, %379
  %398 = mul <8 x i32> %394, %380
  %399 = add nuw i64 %376, 32
  %400 = icmp eq i64 %399, %373
  br i1 %400, label %401, label %375, !llvm.loop !1314

401:                                              ; preds = %375
  %402 = mul <8 x i32> %396, %395
  %403 = mul <8 x i32> %397, %402
  %404 = mul <8 x i32> %398, %403
  %405 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %404)
  %406 = icmp eq i64 %369, %373
  br i1 %406, label %419, label %407

407:                                              ; preds = %360, %401
  %408 = phi i64 [ %363, %360 ], [ %374, %401 ]
  %409 = phi i32 [ 1, %360 ], [ %405, %401 ]
  br label %410

410:                                              ; preds = %407, %410
  %411 = phi i64 [ %416, %410 ], [ %408, %407 ]
  %412 = phi i32 [ %415, %410 ], [ %409, %407 ]
  %413 = getelementptr inbounds i32, ptr %9, i64 %411
  %414 = load i32, ptr %413, align 4, !tbaa !5
  %415 = mul nsw i32 %414, %412
  %416 = add nsw i64 %411, -1
  %417 = trunc i64 %411 to i32
  %418 = icmp sgt i32 %417, 0
  br i1 %418, label %410, label %419, !llvm.loop !1315

419:                                              ; preds = %410, %401
  %420 = phi i32 [ %405, %401 ], [ %415, %410 ]
  %421 = and i64 %370, 4294967295
  %422 = getelementptr inbounds i32, ptr %6, i64 %421
  %423 = load i32, ptr %422, align 4, !tbaa !5
  %424 = mul nsw i32 %423, %420
  %425 = add nsw i32 %424, %364
  %426 = icmp sgt i64 %362, 2
  %427 = add nsw i64 %363, -1
  %428 = add i32 %361, 1
  br i1 %426, label %360, label %429, !llvm.loop !1316

429:                                              ; preds = %419, %356
  %430 = phi i32 [ %359, %356 ], [ %425, %419 ]
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds double, ptr %24, i64 %431
  %433 = load double, ptr %432, align 8, !tbaa !18
  %434 = fptoui double %433 to i8
  %435 = load i8, ptr %26, align 1, !tbaa !11
  %436 = mul i8 %434, %434
  %437 = add i8 %436, %435
  store i8 %437, ptr %26, align 1, !tbaa !11
  %438 = fadd fast double %358, 1.000000e+00
  %439 = add nuw nsw i32 %357, 1
  br i1 %350, label %440, label %487

440:                                              ; preds = %429
  %441 = load i32, ptr %4, align 4, !tbaa !5
  %442 = load i32, ptr %12, align 4, !tbaa !5
  %443 = add nsw i32 %442, -1
  %444 = icmp slt i32 %441, %443
  br i1 %444, label %464, label %445

445:                                              ; preds = %440
  %446 = icmp eq i32 %441, %443
  br i1 %446, label %447, label %480

447:                                              ; preds = %445
  store i32 0, ptr %4, align 4, !tbaa !5
  %448 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %448, ptr %6, align 4, !tbaa !5
  br i1 %355, label %487, label %449

449:                                              ; preds = %447, %474
  %450 = phi i64 [ %478, %474 ], [ 1, %447 ]
  %451 = getelementptr inbounds i32, ptr %4, i64 %450
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %12, i64 %450
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, -1
  %456 = icmp slt i32 %452, %455
  br i1 %456, label %457, label %472

457:                                              ; preds = %449
  br i1 %444, label %464, label %458

458:                                              ; preds = %457
  %459 = getelementptr inbounds i32, ptr %7, i64 %450
  %460 = load i32, ptr %459, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %6, i64 %450
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = add nsw i32 %462, %460
  store i32 %463, ptr %461, align 4, !tbaa !5
  br label %482

464:                                              ; preds = %440, %457
  %465 = phi i32 [ %452, %457 ], [ %441, %440 ]
  %466 = phi ptr [ %451, %457 ], [ %4, %440 ]
  %467 = phi i64 [ %450, %457 ], [ 0, %440 ]
  %468 = add nsw i32 %465, 1
  store i32 %468, ptr %466, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %7, i64 %467
  %470 = load i32, ptr %469, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %6, i64 %467
  br label %482

472:                                              ; preds = %449
  %473 = icmp eq i32 %452, %455
  br i1 %473, label %474, label %480

474:                                              ; preds = %472
  store i32 0, ptr %451, align 4, !tbaa !5
  %475 = getelementptr inbounds i32, ptr %8, i64 %450
  %476 = load i32, ptr %475, align 4, !tbaa !5
  %477 = getelementptr inbounds i32, ptr %6, i64 %450
  store i32 %476, ptr %477, align 4, !tbaa !5
  %478 = add nuw nsw i64 %450, 1
  %479 = icmp eq i64 %478, %353
  br i1 %479, label %487, label %449, !llvm.loop !1317

480:                                              ; preds = %445, %472
  %481 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

482:                                              ; preds = %458, %464
  %483 = phi ptr [ %471, %464 ], [ %451, %458 ]
  %484 = phi i32 [ %470, %464 ], [ 1, %458 ]
  %485 = load i32, ptr %483, align 4, !tbaa !5
  %486 = add nsw i32 %485, %484
  store i32 %486, ptr %483, align 4, !tbaa !5
  br label %487

487:                                              ; preds = %474, %482, %447, %429
  %488 = icmp eq i32 %439, %5
  br i1 %488, label %5491, label %356, !llvm.loop !1318

489:                                              ; preds = %339, %625
  %490 = phi i32 [ 0, %339 ], [ %574, %625 ]
  %491 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %340, label %492, label %561

492:                                              ; preds = %489, %551
  %493 = phi i32 [ %560, %551 ], [ 0, %489 ]
  %494 = phi i64 [ %502, %551 ], [ %344, %489 ]
  %495 = phi i64 [ %559, %551 ], [ %343, %489 ]
  %496 = phi i32 [ %557, %551 ], [ %491, %489 ]
  %497 = sub i32 %342, %493
  %498 = tail call i32 @llvm.smin.i32(i32 %497, i32 0)
  %499 = sub i32 %497, %498
  %500 = zext i32 %499 to i64
  %501 = add nuw nsw i64 %500, 1
  %502 = add nsw i64 %494, -1
  %503 = icmp ult i32 %499, 31
  br i1 %503, label %539, label %504

504:                                              ; preds = %492
  %505 = and i64 %501, 8589934560
  %506 = sub i64 %495, %505
  br label %507

507:                                              ; preds = %507, %504
  %508 = phi i64 [ 0, %504 ], [ %531, %507 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %527, %507 ]
  %510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %528, %507 ]
  %511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %529, %507 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %530, %507 ]
  %513 = sub i64 %495, %508
  %514 = getelementptr inbounds i32, ptr %11, i64 %513
  %515 = getelementptr inbounds i32, ptr %514, i64 -7
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %514, i64 -15
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %514, i64 -23
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %514, i64 -31
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !5
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = mul <8 x i32> %517, %509
  %528 = mul <8 x i32> %520, %510
  %529 = mul <8 x i32> %523, %511
  %530 = mul <8 x i32> %526, %512
  %531 = add nuw i64 %508, 32
  %532 = icmp eq i64 %531, %505
  br i1 %532, label %533, label %507, !llvm.loop !1319

533:                                              ; preds = %507
  %534 = mul <8 x i32> %528, %527
  %535 = mul <8 x i32> %529, %534
  %536 = mul <8 x i32> %530, %535
  %537 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %536)
  %538 = icmp eq i64 %501, %505
  br i1 %538, label %551, label %539

539:                                              ; preds = %492, %533
  %540 = phi i64 [ %495, %492 ], [ %506, %533 ]
  %541 = phi i32 [ 1, %492 ], [ %537, %533 ]
  br label %542

542:                                              ; preds = %539, %542
  %543 = phi i64 [ %548, %542 ], [ %540, %539 ]
  %544 = phi i32 [ %547, %542 ], [ %541, %539 ]
  %545 = getelementptr inbounds i32, ptr %11, i64 %543
  %546 = load i32, ptr %545, align 4, !tbaa !5
  %547 = mul nsw i32 %546, %544
  %548 = add nsw i64 %543, -1
  %549 = trunc i64 %543 to i32
  %550 = icmp sgt i32 %549, 0
  br i1 %550, label %542, label %551, !llvm.loop !1320

551:                                              ; preds = %542, %533
  %552 = phi i32 [ %537, %533 ], [ %547, %542 ]
  %553 = and i64 %502, 4294967295
  %554 = getelementptr inbounds i32, ptr %6, i64 %553
  %555 = load i32, ptr %554, align 4, !tbaa !5
  %556 = mul nsw i32 %555, %552
  %557 = add nsw i32 %556, %496
  %558 = icmp sgt i64 %494, 2
  %559 = add nsw i64 %495, -1
  %560 = add i32 %493, 1
  br i1 %558, label %492, label %561, !llvm.loop !1321

561:                                              ; preds = %551, %489
  %562 = phi i32 [ %491, %489 ], [ %557, %551 ]
  %563 = icmp slt i32 %562, %5
  br i1 %563, label %566, label %564

564:                                              ; preds = %561
  %565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

566:                                              ; preds = %561
  %567 = sext i32 %562 to i64
  %568 = getelementptr inbounds double, ptr %24, i64 %567
  %569 = load double, ptr %568, align 8, !tbaa !18
  %570 = fptoui double %569 to i8
  %571 = load i8, ptr %26, align 1, !tbaa !11
  %572 = mul i8 %570, %570
  %573 = add i8 %572, %571
  store i8 %573, ptr %26, align 1, !tbaa !11
  %574 = add nuw nsw i32 %490, 1
  br i1 %341, label %575, label %625

575:                                              ; preds = %566
  %576 = load i32, ptr %4, align 4, !tbaa !5
  %577 = load i32, ptr %12, align 4, !tbaa !5
  %578 = add nsw i32 %577, -1
  %579 = icmp slt i32 %576, %578
  br i1 %579, label %602, label %580

580:                                              ; preds = %575
  %581 = icmp eq i32 %576, %578
  br i1 %581, label %582, label %618

582:                                              ; preds = %580
  store i32 0, ptr %4, align 4, !tbaa !5
  %583 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %583, ptr %6, align 4, !tbaa !5
  br i1 %346, label %625, label %584

584:                                              ; preds = %582, %612
  %585 = phi i64 [ %616, %612 ], [ 1, %582 ]
  %586 = getelementptr inbounds i32, ptr %4, i64 %585
  %587 = load i32, ptr %586, align 4, !tbaa !5
  %588 = getelementptr inbounds i32, ptr %12, i64 %585
  %589 = load i32, ptr %588, align 4, !tbaa !5
  %590 = add nsw i32 %589, -1
  %591 = icmp slt i32 %587, %590
  br i1 %591, label %592, label %610

592:                                              ; preds = %584
  br i1 %579, label %602, label %593

593:                                              ; preds = %592
  %594 = shl i64 %585, 32
  %595 = add i64 %594, -4294967296
  %596 = ashr exact i64 %595, 32
  %597 = getelementptr inbounds i32, ptr %7, i64 %596
  %598 = load i32, ptr %597, align 4, !tbaa !5
  %599 = getelementptr inbounds i32, ptr %6, i64 %585
  %600 = load i32, ptr %599, align 4, !tbaa !5
  %601 = add nsw i32 %600, %598
  store i32 %601, ptr %599, align 4, !tbaa !5
  br label %620

602:                                              ; preds = %575, %592
  %603 = phi i32 [ %587, %592 ], [ %576, %575 ]
  %604 = phi ptr [ %586, %592 ], [ %4, %575 ]
  %605 = phi i64 [ %585, %592 ], [ 0, %575 ]
  %606 = add nsw i32 %603, 1
  store i32 %606, ptr %604, align 4, !tbaa !5
  %607 = getelementptr inbounds i32, ptr %7, i64 %605
  %608 = load i32, ptr %607, align 4, !tbaa !5
  %609 = getelementptr inbounds i32, ptr %6, i64 %605
  br label %620

610:                                              ; preds = %584
  %611 = icmp eq i32 %587, %590
  br i1 %611, label %612, label %618

612:                                              ; preds = %610
  store i32 0, ptr %586, align 4, !tbaa !5
  %613 = getelementptr inbounds i32, ptr %8, i64 %585
  %614 = load i32, ptr %613, align 4, !tbaa !5
  %615 = getelementptr inbounds i32, ptr %6, i64 %585
  store i32 %614, ptr %615, align 4, !tbaa !5
  %616 = add nuw nsw i64 %585, 1
  %617 = icmp eq i64 %616, %344
  br i1 %617, label %625, label %584, !llvm.loop !1322

618:                                              ; preds = %580, %610
  %619 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

620:                                              ; preds = %593, %602
  %621 = phi ptr [ %609, %602 ], [ %586, %593 ]
  %622 = phi i32 [ %608, %602 ], [ 1, %593 ]
  %623 = load i32, ptr %621, align 4, !tbaa !5
  %624 = add nsw i32 %623, %622
  store i32 %624, ptr %621, align 4, !tbaa !5
  br label %625

625:                                              ; preds = %612, %620, %582, %566
  %626 = icmp eq i32 %574, %5
  br i1 %626, label %5491, label %489, !llvm.loop !1323

627:                                              ; preds = %32
  %628 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2275, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

629:                                              ; preds = %18
  %630 = getelementptr inbounds ptr, ptr %14, i64 %19
  %631 = load ptr, ptr %630, align 8, !tbaa !9
  %632 = getelementptr inbounds ptr, ptr %16, i64 %19
  %633 = load ptr, ptr %632, align 8, !tbaa !9
  store i32 0, ptr %633, align 4, !tbaa !5
  %634 = icmp eq i32 %13, 0
  br i1 %634, label %635, label %639

635:                                              ; preds = %629
  %636 = load double, ptr %631, align 8, !tbaa !18
  %637 = fptosi double %636 to i32
  %638 = mul nsw i32 %637, %637
  store i32 %638, ptr %633, align 4, !tbaa !5
  br label %5491

639:                                              ; preds = %629
  switch i32 %1, label %1237 [
    i32 1, label %640
    i32 0, label %943
  ]

640:                                              ; preds = %639
  %641 = getelementptr inbounds i32, ptr %3, i64 %19
  %642 = load i32, ptr %641, align 4, !tbaa !5
  %643 = icmp eq i32 %642, 0
  %644 = icmp sgt i32 %5, 0
  br i1 %643, label %654, label %645

645:                                              ; preds = %640
  br i1 %644, label %646, label %5491

646:                                              ; preds = %645
  %647 = icmp sgt i32 %13, 1
  %648 = icmp sgt i32 %13, 0
  %649 = add i32 %13, -2
  %650 = zext i32 %649 to i64
  %651 = zext i32 %13 to i64
  %652 = add nuw i32 %5, 1
  %653 = icmp eq i32 %13, 1
  br label %802

654:                                              ; preds = %640
  br i1 %644, label %655, label %5491

655:                                              ; preds = %654
  %656 = icmp sgt i32 %13, 1
  %657 = icmp sgt i32 %13, 0
  %658 = add i32 %13, -2
  %659 = zext i32 %658 to i64
  %660 = zext i32 %13 to i64
  %661 = add nuw i32 %5, 1
  %662 = icmp eq i32 %13, 1
  br label %663

663:                                              ; preds = %655, %800
  %664 = phi i32 [ 0, %655 ], [ %752, %800 ]
  %665 = phi double [ 0.000000e+00, %655 ], [ %751, %800 ]
  %666 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %656, label %667, label %736

667:                                              ; preds = %663, %726
  %668 = phi i32 [ %735, %726 ], [ 0, %663 ]
  %669 = phi i64 [ %677, %726 ], [ %660, %663 ]
  %670 = phi i64 [ %734, %726 ], [ %659, %663 ]
  %671 = phi i32 [ %732, %726 ], [ %666, %663 ]
  %672 = sub i32 %658, %668
  %673 = tail call i32 @llvm.smin.i32(i32 %672, i32 0)
  %674 = sub i32 %672, %673
  %675 = zext i32 %674 to i64
  %676 = add nuw nsw i64 %675, 1
  %677 = add nsw i64 %669, -1
  %678 = icmp ult i32 %674, 31
  br i1 %678, label %714, label %679

679:                                              ; preds = %667
  %680 = and i64 %676, 8589934560
  %681 = sub i64 %670, %680
  br label %682

682:                                              ; preds = %682, %679
  %683 = phi i64 [ 0, %679 ], [ %706, %682 ]
  %684 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %702, %682 ]
  %685 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %703, %682 ]
  %686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %704, %682 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %679 ], [ %705, %682 ]
  %688 = sub i64 %670, %683
  %689 = getelementptr inbounds i32, ptr %9, i64 %688
  %690 = getelementptr inbounds i32, ptr %689, i64 -7
  %691 = load <8 x i32>, ptr %690, align 4, !tbaa !5
  %692 = shufflevector <8 x i32> %691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %693 = getelementptr inbounds i32, ptr %689, i64 -15
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !5
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = getelementptr inbounds i32, ptr %689, i64 -23
  %697 = load <8 x i32>, ptr %696, align 4, !tbaa !5
  %698 = shufflevector <8 x i32> %697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %699 = getelementptr inbounds i32, ptr %689, i64 -31
  %700 = load <8 x i32>, ptr %699, align 4, !tbaa !5
  %701 = shufflevector <8 x i32> %700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %702 = mul <8 x i32> %692, %684
  %703 = mul <8 x i32> %695, %685
  %704 = mul <8 x i32> %698, %686
  %705 = mul <8 x i32> %701, %687
  %706 = add nuw i64 %683, 32
  %707 = icmp eq i64 %706, %680
  br i1 %707, label %708, label %682, !llvm.loop !1324

708:                                              ; preds = %682
  %709 = mul <8 x i32> %703, %702
  %710 = mul <8 x i32> %704, %709
  %711 = mul <8 x i32> %705, %710
  %712 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %711)
  %713 = icmp eq i64 %676, %680
  br i1 %713, label %726, label %714

714:                                              ; preds = %667, %708
  %715 = phi i64 [ %670, %667 ], [ %681, %708 ]
  %716 = phi i32 [ 1, %667 ], [ %712, %708 ]
  br label %717

717:                                              ; preds = %714, %717
  %718 = phi i64 [ %723, %717 ], [ %715, %714 ]
  %719 = phi i32 [ %722, %717 ], [ %716, %714 ]
  %720 = getelementptr inbounds i32, ptr %9, i64 %718
  %721 = load i32, ptr %720, align 4, !tbaa !5
  %722 = mul nsw i32 %721, %719
  %723 = add nsw i64 %718, -1
  %724 = trunc i64 %718 to i32
  %725 = icmp sgt i32 %724, 0
  br i1 %725, label %717, label %726, !llvm.loop !1325

726:                                              ; preds = %717, %708
  %727 = phi i32 [ %712, %708 ], [ %722, %717 ]
  %728 = and i64 %677, 4294967295
  %729 = getelementptr inbounds i32, ptr %6, i64 %728
  %730 = load i32, ptr %729, align 4, !tbaa !5
  %731 = mul nsw i32 %730, %727
  %732 = add nsw i32 %731, %671
  %733 = icmp sgt i64 %669, 2
  %734 = add nsw i64 %670, -1
  %735 = add i32 %668, 1
  br i1 %733, label %667, label %736, !llvm.loop !1326

736:                                              ; preds = %726, %663
  %737 = phi i32 [ %666, %663 ], [ %732, %726 ]
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds double, ptr %2, i64 %738
  %740 = load double, ptr %739, align 8, !tbaa !18
  %741 = getelementptr inbounds double, ptr %631, i64 %738
  %742 = load double, ptr %741, align 8, !tbaa !18
  %743 = fptosi double %742 to i32
  %744 = load i32, ptr %633, align 4, !tbaa !5
  %745 = sitofp i32 %744 to double
  %746 = sitofp i32 %743 to double
  %747 = fmul fast double %740, %746
  %748 = fmul fast double %747, %747
  %749 = fadd fast double %748, %745
  %750 = fptosi double %749 to i32
  store i32 %750, ptr %633, align 4, !tbaa !5
  %751 = fadd fast double %740, %665
  %752 = add nuw nsw i32 %664, 1
  br i1 %657, label %753, label %800

753:                                              ; preds = %736
  %754 = load i32, ptr %4, align 4, !tbaa !5
  %755 = load i32, ptr %12, align 4, !tbaa !5
  %756 = add nsw i32 %755, -1
  %757 = icmp slt i32 %754, %756
  br i1 %757, label %777, label %758

758:                                              ; preds = %753
  %759 = icmp eq i32 %754, %756
  br i1 %759, label %760, label %793

760:                                              ; preds = %758
  store i32 0, ptr %4, align 4, !tbaa !5
  %761 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %761, ptr %6, align 4, !tbaa !5
  br i1 %662, label %800, label %762

762:                                              ; preds = %760, %787
  %763 = phi i64 [ %791, %787 ], [ 1, %760 ]
  %764 = getelementptr inbounds i32, ptr %4, i64 %763
  %765 = load i32, ptr %764, align 4, !tbaa !5
  %766 = getelementptr inbounds i32, ptr %12, i64 %763
  %767 = load i32, ptr %766, align 4, !tbaa !5
  %768 = add nsw i32 %767, -1
  %769 = icmp slt i32 %765, %768
  br i1 %769, label %770, label %785

770:                                              ; preds = %762
  br i1 %757, label %777, label %771

771:                                              ; preds = %770
  %772 = getelementptr inbounds i32, ptr %7, i64 %763
  %773 = load i32, ptr %772, align 4, !tbaa !5
  %774 = getelementptr inbounds i32, ptr %6, i64 %763
  %775 = load i32, ptr %774, align 4, !tbaa !5
  %776 = add nsw i32 %775, %773
  store i32 %776, ptr %774, align 4, !tbaa !5
  br label %795

777:                                              ; preds = %753, %770
  %778 = phi i32 [ %765, %770 ], [ %754, %753 ]
  %779 = phi ptr [ %764, %770 ], [ %4, %753 ]
  %780 = phi i64 [ %763, %770 ], [ 0, %753 ]
  %781 = add nsw i32 %778, 1
  store i32 %781, ptr %779, align 4, !tbaa !5
  %782 = getelementptr inbounds i32, ptr %7, i64 %780
  %783 = load i32, ptr %782, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %6, i64 %780
  br label %795

785:                                              ; preds = %762
  %786 = icmp eq i32 %765, %768
  br i1 %786, label %787, label %793

787:                                              ; preds = %785
  store i32 0, ptr %764, align 4, !tbaa !5
  %788 = getelementptr inbounds i32, ptr %8, i64 %763
  %789 = load i32, ptr %788, align 4, !tbaa !5
  %790 = getelementptr inbounds i32, ptr %6, i64 %763
  store i32 %789, ptr %790, align 4, !tbaa !5
  %791 = add nuw nsw i64 %763, 1
  %792 = icmp eq i64 %791, %660
  br i1 %792, label %800, label %762, !llvm.loop !1327

793:                                              ; preds = %758, %785
  %794 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

795:                                              ; preds = %771, %777
  %796 = phi ptr [ %784, %777 ], [ %764, %771 ]
  %797 = phi i32 [ %783, %777 ], [ 1, %771 ]
  %798 = load i32, ptr %796, align 4, !tbaa !5
  %799 = add nsw i32 %798, %797
  store i32 %799, ptr %796, align 4, !tbaa !5
  br label %800

800:                                              ; preds = %787, %795, %760, %736
  %801 = icmp eq i32 %752, %5
  br i1 %801, label %5491, label %663, !llvm.loop !1328

802:                                              ; preds = %646, %941
  %803 = phi i32 [ 0, %646 ], [ %890, %941 ]
  %804 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %647, label %805, label %874

805:                                              ; preds = %802, %864
  %806 = phi i32 [ %873, %864 ], [ 0, %802 ]
  %807 = phi i64 [ %815, %864 ], [ %651, %802 ]
  %808 = phi i64 [ %872, %864 ], [ %650, %802 ]
  %809 = phi i32 [ %870, %864 ], [ %804, %802 ]
  %810 = sub i32 %649, %806
  %811 = tail call i32 @llvm.smin.i32(i32 %810, i32 0)
  %812 = sub i32 %810, %811
  %813 = zext i32 %812 to i64
  %814 = add nuw nsw i64 %813, 1
  %815 = add nsw i64 %807, -1
  %816 = icmp ult i32 %812, 31
  br i1 %816, label %852, label %817

817:                                              ; preds = %805
  %818 = and i64 %814, 8589934560
  %819 = sub i64 %808, %818
  br label %820

820:                                              ; preds = %820, %817
  %821 = phi i64 [ 0, %817 ], [ %844, %820 ]
  %822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %840, %820 ]
  %823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %841, %820 ]
  %824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %842, %820 ]
  %825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %843, %820 ]
  %826 = sub i64 %808, %821
  %827 = getelementptr inbounds i32, ptr %11, i64 %826
  %828 = getelementptr inbounds i32, ptr %827, i64 -7
  %829 = load <8 x i32>, ptr %828, align 4, !tbaa !5
  %830 = shufflevector <8 x i32> %829, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %831 = getelementptr inbounds i32, ptr %827, i64 -15
  %832 = load <8 x i32>, ptr %831, align 4, !tbaa !5
  %833 = shufflevector <8 x i32> %832, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %834 = getelementptr inbounds i32, ptr %827, i64 -23
  %835 = load <8 x i32>, ptr %834, align 4, !tbaa !5
  %836 = shufflevector <8 x i32> %835, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %837 = getelementptr inbounds i32, ptr %827, i64 -31
  %838 = load <8 x i32>, ptr %837, align 4, !tbaa !5
  %839 = shufflevector <8 x i32> %838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %840 = mul <8 x i32> %830, %822
  %841 = mul <8 x i32> %833, %823
  %842 = mul <8 x i32> %836, %824
  %843 = mul <8 x i32> %839, %825
  %844 = add nuw i64 %821, 32
  %845 = icmp eq i64 %844, %818
  br i1 %845, label %846, label %820, !llvm.loop !1329

846:                                              ; preds = %820
  %847 = mul <8 x i32> %841, %840
  %848 = mul <8 x i32> %842, %847
  %849 = mul <8 x i32> %843, %848
  %850 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %849)
  %851 = icmp eq i64 %814, %818
  br i1 %851, label %864, label %852

852:                                              ; preds = %805, %846
  %853 = phi i64 [ %808, %805 ], [ %819, %846 ]
  %854 = phi i32 [ 1, %805 ], [ %850, %846 ]
  br label %855

855:                                              ; preds = %852, %855
  %856 = phi i64 [ %861, %855 ], [ %853, %852 ]
  %857 = phi i32 [ %860, %855 ], [ %854, %852 ]
  %858 = getelementptr inbounds i32, ptr %11, i64 %856
  %859 = load i32, ptr %858, align 4, !tbaa !5
  %860 = mul nsw i32 %859, %857
  %861 = add nsw i64 %856, -1
  %862 = trunc i64 %856 to i32
  %863 = icmp sgt i32 %862, 0
  br i1 %863, label %855, label %864, !llvm.loop !1330

864:                                              ; preds = %855, %846
  %865 = phi i32 [ %850, %846 ], [ %860, %855 ]
  %866 = and i64 %815, 4294967295
  %867 = getelementptr inbounds i32, ptr %6, i64 %866
  %868 = load i32, ptr %867, align 4, !tbaa !5
  %869 = mul nsw i32 %868, %865
  %870 = add nsw i32 %869, %809
  %871 = icmp sgt i64 %807, 2
  %872 = add nsw i64 %808, -1
  %873 = add i32 %806, 1
  br i1 %871, label %805, label %874, !llvm.loop !1331

874:                                              ; preds = %864, %802
  %875 = phi i32 [ %804, %802 ], [ %870, %864 ]
  %876 = icmp slt i32 %875, %5
  br i1 %876, label %879, label %877

877:                                              ; preds = %874
  %878 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

879:                                              ; preds = %874
  %880 = sext i32 %875 to i64
  %881 = getelementptr inbounds double, ptr %631, i64 %880
  %882 = load double, ptr %881, align 8, !tbaa !18
  %883 = fptosi double %882 to i32
  %884 = load i32, ptr %633, align 4, !tbaa !5
  %885 = sitofp i32 %884 to double
  %886 = sitofp i32 %883 to double
  %887 = fmul fast double %886, %886
  %888 = fadd fast double %887, %885
  %889 = fptosi double %888 to i32
  store i32 %889, ptr %633, align 4, !tbaa !5
  %890 = add nuw nsw i32 %803, 1
  br i1 %648, label %891, label %941

891:                                              ; preds = %879
  %892 = load i32, ptr %4, align 4, !tbaa !5
  %893 = load i32, ptr %12, align 4, !tbaa !5
  %894 = add nsw i32 %893, -1
  %895 = icmp slt i32 %892, %894
  br i1 %895, label %918, label %896

896:                                              ; preds = %891
  %897 = icmp eq i32 %892, %894
  br i1 %897, label %898, label %934

898:                                              ; preds = %896
  store i32 0, ptr %4, align 4, !tbaa !5
  %899 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %899, ptr %6, align 4, !tbaa !5
  br i1 %653, label %941, label %900

900:                                              ; preds = %898, %928
  %901 = phi i64 [ %932, %928 ], [ 1, %898 ]
  %902 = getelementptr inbounds i32, ptr %4, i64 %901
  %903 = load i32, ptr %902, align 4, !tbaa !5
  %904 = getelementptr inbounds i32, ptr %12, i64 %901
  %905 = load i32, ptr %904, align 4, !tbaa !5
  %906 = add nsw i32 %905, -1
  %907 = icmp slt i32 %903, %906
  br i1 %907, label %908, label %926

908:                                              ; preds = %900
  br i1 %895, label %918, label %909

909:                                              ; preds = %908
  %910 = shl i64 %901, 32
  %911 = add i64 %910, -4294967296
  %912 = ashr exact i64 %911, 32
  %913 = getelementptr inbounds i32, ptr %7, i64 %912
  %914 = load i32, ptr %913, align 4, !tbaa !5
  %915 = getelementptr inbounds i32, ptr %6, i64 %901
  %916 = load i32, ptr %915, align 4, !tbaa !5
  %917 = add nsw i32 %916, %914
  store i32 %917, ptr %915, align 4, !tbaa !5
  br label %936

918:                                              ; preds = %891, %908
  %919 = phi i32 [ %903, %908 ], [ %892, %891 ]
  %920 = phi ptr [ %902, %908 ], [ %4, %891 ]
  %921 = phi i64 [ %901, %908 ], [ 0, %891 ]
  %922 = add nsw i32 %919, 1
  store i32 %922, ptr %920, align 4, !tbaa !5
  %923 = getelementptr inbounds i32, ptr %7, i64 %921
  %924 = load i32, ptr %923, align 4, !tbaa !5
  %925 = getelementptr inbounds i32, ptr %6, i64 %921
  br label %936

926:                                              ; preds = %900
  %927 = icmp eq i32 %903, %906
  br i1 %927, label %928, label %934

928:                                              ; preds = %926
  store i32 0, ptr %902, align 4, !tbaa !5
  %929 = getelementptr inbounds i32, ptr %8, i64 %901
  %930 = load i32, ptr %929, align 4, !tbaa !5
  %931 = getelementptr inbounds i32, ptr %6, i64 %901
  store i32 %930, ptr %931, align 4, !tbaa !5
  %932 = add nuw nsw i64 %901, 1
  %933 = icmp eq i64 %932, %651
  br i1 %933, label %941, label %900, !llvm.loop !1332

934:                                              ; preds = %896, %926
  %935 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

936:                                              ; preds = %909, %918
  %937 = phi ptr [ %925, %918 ], [ %902, %909 ]
  %938 = phi i32 [ %924, %918 ], [ 1, %909 ]
  %939 = load i32, ptr %937, align 4, !tbaa !5
  %940 = add nsw i32 %939, %938
  store i32 %940, ptr %937, align 4, !tbaa !5
  br label %941

941:                                              ; preds = %928, %936, %898, %879
  %942 = icmp eq i32 %890, %5
  br i1 %942, label %5491, label %802, !llvm.loop !1333

943:                                              ; preds = %639
  %944 = getelementptr inbounds i32, ptr %3, i64 %19
  %945 = load i32, ptr %944, align 4, !tbaa !5
  %946 = icmp eq i32 %945, 0
  %947 = icmp sgt i32 %5, 0
  br i1 %946, label %957, label %948

948:                                              ; preds = %943
  br i1 %947, label %949, label %5491

949:                                              ; preds = %948
  %950 = icmp sgt i32 %13, 1
  %951 = icmp sgt i32 %13, 0
  %952 = add i32 %13, -2
  %953 = zext i32 %952 to i64
  %954 = zext i32 %13 to i64
  %955 = add nuw i32 %5, 1
  %956 = icmp eq i32 %13, 1
  br label %1099

957:                                              ; preds = %943
  br i1 %947, label %958, label %5491

958:                                              ; preds = %957
  %959 = icmp sgt i32 %13, 1
  %960 = icmp sgt i32 %13, 0
  %961 = add i32 %13, -2
  %962 = zext i32 %961 to i64
  %963 = zext i32 %13 to i64
  %964 = add nuw i32 %5, 1
  %965 = icmp eq i32 %13, 1
  br label %966

966:                                              ; preds = %958, %1097
  %967 = phi i32 [ 0, %958 ], [ %1049, %1097 ]
  %968 = phi double [ 0.000000e+00, %958 ], [ %1048, %1097 ]
  %969 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %959, label %970, label %1039

970:                                              ; preds = %966, %1029
  %971 = phi i32 [ %1038, %1029 ], [ 0, %966 ]
  %972 = phi i64 [ %980, %1029 ], [ %963, %966 ]
  %973 = phi i64 [ %1037, %1029 ], [ %962, %966 ]
  %974 = phi i32 [ %1035, %1029 ], [ %969, %966 ]
  %975 = sub i32 %961, %971
  %976 = tail call i32 @llvm.smin.i32(i32 %975, i32 0)
  %977 = sub i32 %975, %976
  %978 = zext i32 %977 to i64
  %979 = add nuw nsw i64 %978, 1
  %980 = add nsw i64 %972, -1
  %981 = icmp ult i32 %977, 31
  br i1 %981, label %1017, label %982

982:                                              ; preds = %970
  %983 = and i64 %979, 8589934560
  %984 = sub i64 %973, %983
  br label %985

985:                                              ; preds = %985, %982
  %986 = phi i64 [ 0, %982 ], [ %1009, %985 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1005, %985 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1006, %985 ]
  %989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1007, %985 ]
  %990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1008, %985 ]
  %991 = sub i64 %973, %986
  %992 = getelementptr inbounds i32, ptr %9, i64 %991
  %993 = getelementptr inbounds i32, ptr %992, i64 -7
  %994 = load <8 x i32>, ptr %993, align 4, !tbaa !5
  %995 = shufflevector <8 x i32> %994, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %996 = getelementptr inbounds i32, ptr %992, i64 -15
  %997 = load <8 x i32>, ptr %996, align 4, !tbaa !5
  %998 = shufflevector <8 x i32> %997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %999 = getelementptr inbounds i32, ptr %992, i64 -23
  %1000 = load <8 x i32>, ptr %999, align 4, !tbaa !5
  %1001 = shufflevector <8 x i32> %1000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1002 = getelementptr inbounds i32, ptr %992, i64 -31
  %1003 = load <8 x i32>, ptr %1002, align 4, !tbaa !5
  %1004 = shufflevector <8 x i32> %1003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1005 = mul <8 x i32> %995, %987
  %1006 = mul <8 x i32> %998, %988
  %1007 = mul <8 x i32> %1001, %989
  %1008 = mul <8 x i32> %1004, %990
  %1009 = add nuw i64 %986, 32
  %1010 = icmp eq i64 %1009, %983
  br i1 %1010, label %1011, label %985, !llvm.loop !1334

1011:                                             ; preds = %985
  %1012 = mul <8 x i32> %1006, %1005
  %1013 = mul <8 x i32> %1007, %1012
  %1014 = mul <8 x i32> %1008, %1013
  %1015 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1014)
  %1016 = icmp eq i64 %979, %983
  br i1 %1016, label %1029, label %1017

1017:                                             ; preds = %970, %1011
  %1018 = phi i64 [ %973, %970 ], [ %984, %1011 ]
  %1019 = phi i32 [ 1, %970 ], [ %1015, %1011 ]
  br label %1020

1020:                                             ; preds = %1017, %1020
  %1021 = phi i64 [ %1026, %1020 ], [ %1018, %1017 ]
  %1022 = phi i32 [ %1025, %1020 ], [ %1019, %1017 ]
  %1023 = getelementptr inbounds i32, ptr %9, i64 %1021
  %1024 = load i32, ptr %1023, align 4, !tbaa !5
  %1025 = mul nsw i32 %1024, %1022
  %1026 = add nsw i64 %1021, -1
  %1027 = trunc i64 %1021 to i32
  %1028 = icmp sgt i32 %1027, 0
  br i1 %1028, label %1020, label %1029, !llvm.loop !1335

1029:                                             ; preds = %1020, %1011
  %1030 = phi i32 [ %1015, %1011 ], [ %1025, %1020 ]
  %1031 = and i64 %980, 4294967295
  %1032 = getelementptr inbounds i32, ptr %6, i64 %1031
  %1033 = load i32, ptr %1032, align 4, !tbaa !5
  %1034 = mul nsw i32 %1033, %1030
  %1035 = add nsw i32 %1034, %974
  %1036 = icmp sgt i64 %972, 2
  %1037 = add nsw i64 %973, -1
  %1038 = add i32 %971, 1
  br i1 %1036, label %970, label %1039, !llvm.loop !1336

1039:                                             ; preds = %1029, %966
  %1040 = phi i32 [ %969, %966 ], [ %1035, %1029 ]
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds double, ptr %631, i64 %1041
  %1043 = load double, ptr %1042, align 8, !tbaa !18
  %1044 = fptosi double %1043 to i32
  %1045 = load i32, ptr %633, align 4, !tbaa !5
  %1046 = mul nsw i32 %1044, %1044
  %1047 = add nsw i32 %1046, %1045
  store i32 %1047, ptr %633, align 4, !tbaa !5
  %1048 = fadd fast double %968, 1.000000e+00
  %1049 = add nuw nsw i32 %967, 1
  br i1 %960, label %1050, label %1097

1050:                                             ; preds = %1039
  %1051 = load i32, ptr %4, align 4, !tbaa !5
  %1052 = load i32, ptr %12, align 4, !tbaa !5
  %1053 = add nsw i32 %1052, -1
  %1054 = icmp slt i32 %1051, %1053
  br i1 %1054, label %1074, label %1055

1055:                                             ; preds = %1050
  %1056 = icmp eq i32 %1051, %1053
  br i1 %1056, label %1057, label %1090

1057:                                             ; preds = %1055
  store i32 0, ptr %4, align 4, !tbaa !5
  %1058 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1058, ptr %6, align 4, !tbaa !5
  br i1 %965, label %1097, label %1059

1059:                                             ; preds = %1057, %1084
  %1060 = phi i64 [ %1088, %1084 ], [ 1, %1057 ]
  %1061 = getelementptr inbounds i32, ptr %4, i64 %1060
  %1062 = load i32, ptr %1061, align 4, !tbaa !5
  %1063 = getelementptr inbounds i32, ptr %12, i64 %1060
  %1064 = load i32, ptr %1063, align 4, !tbaa !5
  %1065 = add nsw i32 %1064, -1
  %1066 = icmp slt i32 %1062, %1065
  br i1 %1066, label %1067, label %1082

1067:                                             ; preds = %1059
  br i1 %1054, label %1074, label %1068

1068:                                             ; preds = %1067
  %1069 = getelementptr inbounds i32, ptr %7, i64 %1060
  %1070 = load i32, ptr %1069, align 4, !tbaa !5
  %1071 = getelementptr inbounds i32, ptr %6, i64 %1060
  %1072 = load i32, ptr %1071, align 4, !tbaa !5
  %1073 = add nsw i32 %1072, %1070
  store i32 %1073, ptr %1071, align 4, !tbaa !5
  br label %1092

1074:                                             ; preds = %1050, %1067
  %1075 = phi i32 [ %1062, %1067 ], [ %1051, %1050 ]
  %1076 = phi ptr [ %1061, %1067 ], [ %4, %1050 ]
  %1077 = phi i64 [ %1060, %1067 ], [ 0, %1050 ]
  %1078 = add nsw i32 %1075, 1
  store i32 %1078, ptr %1076, align 4, !tbaa !5
  %1079 = getelementptr inbounds i32, ptr %7, i64 %1077
  %1080 = load i32, ptr %1079, align 4, !tbaa !5
  %1081 = getelementptr inbounds i32, ptr %6, i64 %1077
  br label %1092

1082:                                             ; preds = %1059
  %1083 = icmp eq i32 %1062, %1065
  br i1 %1083, label %1084, label %1090

1084:                                             ; preds = %1082
  store i32 0, ptr %1061, align 4, !tbaa !5
  %1085 = getelementptr inbounds i32, ptr %8, i64 %1060
  %1086 = load i32, ptr %1085, align 4, !tbaa !5
  %1087 = getelementptr inbounds i32, ptr %6, i64 %1060
  store i32 %1086, ptr %1087, align 4, !tbaa !5
  %1088 = add nuw nsw i64 %1060, 1
  %1089 = icmp eq i64 %1088, %963
  br i1 %1089, label %1097, label %1059, !llvm.loop !1337

1090:                                             ; preds = %1055, %1082
  %1091 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

1092:                                             ; preds = %1068, %1074
  %1093 = phi ptr [ %1081, %1074 ], [ %1061, %1068 ]
  %1094 = phi i32 [ %1080, %1074 ], [ 1, %1068 ]
  %1095 = load i32, ptr %1093, align 4, !tbaa !5
  %1096 = add nsw i32 %1095, %1094
  store i32 %1096, ptr %1093, align 4, !tbaa !5
  br label %1097

1097:                                             ; preds = %1084, %1092, %1057, %1039
  %1098 = icmp eq i32 %1049, %5
  br i1 %1098, label %5491, label %966, !llvm.loop !1338

1099:                                             ; preds = %949, %1235
  %1100 = phi i32 [ 0, %949 ], [ %1184, %1235 ]
  %1101 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %950, label %1102, label %1171

1102:                                             ; preds = %1099, %1161
  %1103 = phi i32 [ %1170, %1161 ], [ 0, %1099 ]
  %1104 = phi i64 [ %1112, %1161 ], [ %954, %1099 ]
  %1105 = phi i64 [ %1169, %1161 ], [ %953, %1099 ]
  %1106 = phi i32 [ %1167, %1161 ], [ %1101, %1099 ]
  %1107 = sub i32 %952, %1103
  %1108 = tail call i32 @llvm.smin.i32(i32 %1107, i32 0)
  %1109 = sub i32 %1107, %1108
  %1110 = zext i32 %1109 to i64
  %1111 = add nuw nsw i64 %1110, 1
  %1112 = add nsw i64 %1104, -1
  %1113 = icmp ult i32 %1109, 31
  br i1 %1113, label %1149, label %1114

1114:                                             ; preds = %1102
  %1115 = and i64 %1111, 8589934560
  %1116 = sub i64 %1105, %1115
  br label %1117

1117:                                             ; preds = %1117, %1114
  %1118 = phi i64 [ 0, %1114 ], [ %1141, %1117 ]
  %1119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1137, %1117 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1138, %1117 ]
  %1121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1139, %1117 ]
  %1122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1140, %1117 ]
  %1123 = sub i64 %1105, %1118
  %1124 = getelementptr inbounds i32, ptr %11, i64 %1123
  %1125 = getelementptr inbounds i32, ptr %1124, i64 -7
  %1126 = load <8 x i32>, ptr %1125, align 4, !tbaa !5
  %1127 = shufflevector <8 x i32> %1126, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1128 = getelementptr inbounds i32, ptr %1124, i64 -15
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !5
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = getelementptr inbounds i32, ptr %1124, i64 -23
  %1132 = load <8 x i32>, ptr %1131, align 4, !tbaa !5
  %1133 = shufflevector <8 x i32> %1132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1134 = getelementptr inbounds i32, ptr %1124, i64 -31
  %1135 = load <8 x i32>, ptr %1134, align 4, !tbaa !5
  %1136 = shufflevector <8 x i32> %1135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1137 = mul <8 x i32> %1127, %1119
  %1138 = mul <8 x i32> %1130, %1120
  %1139 = mul <8 x i32> %1133, %1121
  %1140 = mul <8 x i32> %1136, %1122
  %1141 = add nuw i64 %1118, 32
  %1142 = icmp eq i64 %1141, %1115
  br i1 %1142, label %1143, label %1117, !llvm.loop !1339

1143:                                             ; preds = %1117
  %1144 = mul <8 x i32> %1138, %1137
  %1145 = mul <8 x i32> %1139, %1144
  %1146 = mul <8 x i32> %1140, %1145
  %1147 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1146)
  %1148 = icmp eq i64 %1111, %1115
  br i1 %1148, label %1161, label %1149

1149:                                             ; preds = %1102, %1143
  %1150 = phi i64 [ %1105, %1102 ], [ %1116, %1143 ]
  %1151 = phi i32 [ 1, %1102 ], [ %1147, %1143 ]
  br label %1152

1152:                                             ; preds = %1149, %1152
  %1153 = phi i64 [ %1158, %1152 ], [ %1150, %1149 ]
  %1154 = phi i32 [ %1157, %1152 ], [ %1151, %1149 ]
  %1155 = getelementptr inbounds i32, ptr %11, i64 %1153
  %1156 = load i32, ptr %1155, align 4, !tbaa !5
  %1157 = mul nsw i32 %1156, %1154
  %1158 = add nsw i64 %1153, -1
  %1159 = trunc i64 %1153 to i32
  %1160 = icmp sgt i32 %1159, 0
  br i1 %1160, label %1152, label %1161, !llvm.loop !1340

1161:                                             ; preds = %1152, %1143
  %1162 = phi i32 [ %1147, %1143 ], [ %1157, %1152 ]
  %1163 = and i64 %1112, 4294967295
  %1164 = getelementptr inbounds i32, ptr %6, i64 %1163
  %1165 = load i32, ptr %1164, align 4, !tbaa !5
  %1166 = mul nsw i32 %1165, %1162
  %1167 = add nsw i32 %1166, %1106
  %1168 = icmp sgt i64 %1104, 2
  %1169 = add nsw i64 %1105, -1
  %1170 = add i32 %1103, 1
  br i1 %1168, label %1102, label %1171, !llvm.loop !1341

1171:                                             ; preds = %1161, %1099
  %1172 = phi i32 [ %1101, %1099 ], [ %1167, %1161 ]
  %1173 = icmp slt i32 %1172, %5
  br i1 %1173, label %1176, label %1174

1174:                                             ; preds = %1171
  %1175 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

1176:                                             ; preds = %1171
  %1177 = sext i32 %1172 to i64
  %1178 = getelementptr inbounds double, ptr %631, i64 %1177
  %1179 = load double, ptr %1178, align 8, !tbaa !18
  %1180 = fptosi double %1179 to i32
  %1181 = load i32, ptr %633, align 4, !tbaa !5
  %1182 = mul nsw i32 %1180, %1180
  %1183 = add nsw i32 %1182, %1181
  store i32 %1183, ptr %633, align 4, !tbaa !5
  %1184 = add nuw nsw i32 %1100, 1
  br i1 %951, label %1185, label %1235

1185:                                             ; preds = %1176
  %1186 = load i32, ptr %4, align 4, !tbaa !5
  %1187 = load i32, ptr %12, align 4, !tbaa !5
  %1188 = add nsw i32 %1187, -1
  %1189 = icmp slt i32 %1186, %1188
  br i1 %1189, label %1212, label %1190

1190:                                             ; preds = %1185
  %1191 = icmp eq i32 %1186, %1188
  br i1 %1191, label %1192, label %1228

1192:                                             ; preds = %1190
  store i32 0, ptr %4, align 4, !tbaa !5
  %1193 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1193, ptr %6, align 4, !tbaa !5
  br i1 %956, label %1235, label %1194

1194:                                             ; preds = %1192, %1222
  %1195 = phi i64 [ %1226, %1222 ], [ 1, %1192 ]
  %1196 = getelementptr inbounds i32, ptr %4, i64 %1195
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = getelementptr inbounds i32, ptr %12, i64 %1195
  %1199 = load i32, ptr %1198, align 4, !tbaa !5
  %1200 = add nsw i32 %1199, -1
  %1201 = icmp slt i32 %1197, %1200
  br i1 %1201, label %1202, label %1220

1202:                                             ; preds = %1194
  br i1 %1189, label %1212, label %1203

1203:                                             ; preds = %1202
  %1204 = shl i64 %1195, 32
  %1205 = add i64 %1204, -4294967296
  %1206 = ashr exact i64 %1205, 32
  %1207 = getelementptr inbounds i32, ptr %7, i64 %1206
  %1208 = load i32, ptr %1207, align 4, !tbaa !5
  %1209 = getelementptr inbounds i32, ptr %6, i64 %1195
  %1210 = load i32, ptr %1209, align 4, !tbaa !5
  %1211 = add nsw i32 %1210, %1208
  store i32 %1211, ptr %1209, align 4, !tbaa !5
  br label %1230

1212:                                             ; preds = %1185, %1202
  %1213 = phi i32 [ %1197, %1202 ], [ %1186, %1185 ]
  %1214 = phi ptr [ %1196, %1202 ], [ %4, %1185 ]
  %1215 = phi i64 [ %1195, %1202 ], [ 0, %1185 ]
  %1216 = add nsw i32 %1213, 1
  store i32 %1216, ptr %1214, align 4, !tbaa !5
  %1217 = getelementptr inbounds i32, ptr %7, i64 %1215
  %1218 = load i32, ptr %1217, align 4, !tbaa !5
  %1219 = getelementptr inbounds i32, ptr %6, i64 %1215
  br label %1230

1220:                                             ; preds = %1194
  %1221 = icmp eq i32 %1197, %1200
  br i1 %1221, label %1222, label %1228

1222:                                             ; preds = %1220
  store i32 0, ptr %1196, align 4, !tbaa !5
  %1223 = getelementptr inbounds i32, ptr %8, i64 %1195
  %1224 = load i32, ptr %1223, align 4, !tbaa !5
  %1225 = getelementptr inbounds i32, ptr %6, i64 %1195
  store i32 %1224, ptr %1225, align 4, !tbaa !5
  %1226 = add nuw nsw i64 %1195, 1
  %1227 = icmp eq i64 %1226, %954
  br i1 %1227, label %1235, label %1194, !llvm.loop !1342

1228:                                             ; preds = %1190, %1220
  %1229 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

1230:                                             ; preds = %1203, %1212
  %1231 = phi ptr [ %1219, %1212 ], [ %1196, %1203 ]
  %1232 = phi i32 [ %1218, %1212 ], [ 1, %1203 ]
  %1233 = load i32, ptr %1231, align 4, !tbaa !5
  %1234 = add nsw i32 %1233, %1232
  store i32 %1234, ptr %1231, align 4, !tbaa !5
  br label %1235

1235:                                             ; preds = %1222, %1230, %1192, %1176
  %1236 = icmp eq i32 %1184, %5
  br i1 %1236, label %5491, label %1099, !llvm.loop !1343

1237:                                             ; preds = %639
  %1238 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

1239:                                             ; preds = %18
  %1240 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1241 = load ptr, ptr %1240, align 8, !tbaa !9
  %1242 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1243 = load ptr, ptr %1242, align 8, !tbaa !9
  store i8 0, ptr %1243, align 1, !tbaa !11
  %1244 = icmp eq i32 %13, 0
  br i1 %1244, label %1245, label %1249

1245:                                             ; preds = %1239
  %1246 = load double, ptr %1241, align 8, !tbaa !18
  %1247 = fptosi double %1246 to i8
  %1248 = mul i8 %1247, %1247
  store i8 %1248, ptr %1243, align 1, !tbaa !11
  br label %5491

1249:                                             ; preds = %1239
  switch i32 %1, label %1844 [
    i32 1, label %1250
    i32 0, label %1550
  ]

1250:                                             ; preds = %1249
  %1251 = getelementptr inbounds i32, ptr %3, i64 %19
  %1252 = load i32, ptr %1251, align 4, !tbaa !5
  %1253 = icmp eq i32 %1252, 0
  %1254 = icmp sgt i32 %5, 0
  br i1 %1253, label %1264, label %1255

1255:                                             ; preds = %1250
  br i1 %1254, label %1256, label %5491

1256:                                             ; preds = %1255
  %1257 = icmp sgt i32 %13, 1
  %1258 = icmp sgt i32 %13, 0
  %1259 = add i32 %13, -2
  %1260 = zext i32 %1259 to i64
  %1261 = zext i32 %13 to i64
  %1262 = add nuw i32 %5, 1
  %1263 = icmp eq i32 %13, 1
  br label %1412

1264:                                             ; preds = %1250
  br i1 %1254, label %1265, label %5491

1265:                                             ; preds = %1264
  %1266 = icmp sgt i32 %13, 1
  %1267 = icmp sgt i32 %13, 0
  %1268 = add i32 %13, -2
  %1269 = zext i32 %1268 to i64
  %1270 = zext i32 %13 to i64
  %1271 = add nuw i32 %5, 1
  %1272 = icmp eq i32 %13, 1
  br label %1273

1273:                                             ; preds = %1265, %1410
  %1274 = phi i32 [ 0, %1265 ], [ %1362, %1410 ]
  %1275 = phi double [ 0.000000e+00, %1265 ], [ %1361, %1410 ]
  %1276 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1266, label %1277, label %1346

1277:                                             ; preds = %1273, %1336
  %1278 = phi i32 [ %1345, %1336 ], [ 0, %1273 ]
  %1279 = phi i64 [ %1287, %1336 ], [ %1270, %1273 ]
  %1280 = phi i64 [ %1344, %1336 ], [ %1269, %1273 ]
  %1281 = phi i32 [ %1342, %1336 ], [ %1276, %1273 ]
  %1282 = sub i32 %1268, %1278
  %1283 = tail call i32 @llvm.smin.i32(i32 %1282, i32 0)
  %1284 = sub i32 %1282, %1283
  %1285 = zext i32 %1284 to i64
  %1286 = add nuw nsw i64 %1285, 1
  %1287 = add nsw i64 %1279, -1
  %1288 = icmp ult i32 %1284, 31
  br i1 %1288, label %1324, label %1289

1289:                                             ; preds = %1277
  %1290 = and i64 %1286, 8589934560
  %1291 = sub i64 %1280, %1290
  br label %1292

1292:                                             ; preds = %1292, %1289
  %1293 = phi i64 [ 0, %1289 ], [ %1316, %1292 ]
  %1294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1289 ], [ %1312, %1292 ]
  %1295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1289 ], [ %1313, %1292 ]
  %1296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1289 ], [ %1314, %1292 ]
  %1297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1289 ], [ %1315, %1292 ]
  %1298 = sub i64 %1280, %1293
  %1299 = getelementptr inbounds i32, ptr %9, i64 %1298
  %1300 = getelementptr inbounds i32, ptr %1299, i64 -7
  %1301 = load <8 x i32>, ptr %1300, align 4, !tbaa !5
  %1302 = shufflevector <8 x i32> %1301, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1303 = getelementptr inbounds i32, ptr %1299, i64 -15
  %1304 = load <8 x i32>, ptr %1303, align 4, !tbaa !5
  %1305 = shufflevector <8 x i32> %1304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1306 = getelementptr inbounds i32, ptr %1299, i64 -23
  %1307 = load <8 x i32>, ptr %1306, align 4, !tbaa !5
  %1308 = shufflevector <8 x i32> %1307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1309 = getelementptr inbounds i32, ptr %1299, i64 -31
  %1310 = load <8 x i32>, ptr %1309, align 4, !tbaa !5
  %1311 = shufflevector <8 x i32> %1310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1312 = mul <8 x i32> %1302, %1294
  %1313 = mul <8 x i32> %1305, %1295
  %1314 = mul <8 x i32> %1308, %1296
  %1315 = mul <8 x i32> %1311, %1297
  %1316 = add nuw i64 %1293, 32
  %1317 = icmp eq i64 %1316, %1290
  br i1 %1317, label %1318, label %1292, !llvm.loop !1344

1318:                                             ; preds = %1292
  %1319 = mul <8 x i32> %1313, %1312
  %1320 = mul <8 x i32> %1314, %1319
  %1321 = mul <8 x i32> %1315, %1320
  %1322 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1321)
  %1323 = icmp eq i64 %1286, %1290
  br i1 %1323, label %1336, label %1324

1324:                                             ; preds = %1277, %1318
  %1325 = phi i64 [ %1280, %1277 ], [ %1291, %1318 ]
  %1326 = phi i32 [ 1, %1277 ], [ %1322, %1318 ]
  br label %1327

1327:                                             ; preds = %1324, %1327
  %1328 = phi i64 [ %1333, %1327 ], [ %1325, %1324 ]
  %1329 = phi i32 [ %1332, %1327 ], [ %1326, %1324 ]
  %1330 = getelementptr inbounds i32, ptr %9, i64 %1328
  %1331 = load i32, ptr %1330, align 4, !tbaa !5
  %1332 = mul nsw i32 %1331, %1329
  %1333 = add nsw i64 %1328, -1
  %1334 = trunc i64 %1328 to i32
  %1335 = icmp sgt i32 %1334, 0
  br i1 %1335, label %1327, label %1336, !llvm.loop !1345

1336:                                             ; preds = %1327, %1318
  %1337 = phi i32 [ %1322, %1318 ], [ %1332, %1327 ]
  %1338 = and i64 %1287, 4294967295
  %1339 = getelementptr inbounds i32, ptr %6, i64 %1338
  %1340 = load i32, ptr %1339, align 4, !tbaa !5
  %1341 = mul nsw i32 %1340, %1337
  %1342 = add nsw i32 %1341, %1281
  %1343 = icmp sgt i64 %1279, 2
  %1344 = add nsw i64 %1280, -1
  %1345 = add i32 %1278, 1
  br i1 %1343, label %1277, label %1346, !llvm.loop !1346

1346:                                             ; preds = %1336, %1273
  %1347 = phi i32 [ %1276, %1273 ], [ %1342, %1336 ]
  %1348 = sext i32 %1347 to i64
  %1349 = getelementptr inbounds double, ptr %2, i64 %1348
  %1350 = load double, ptr %1349, align 8, !tbaa !18
  %1351 = getelementptr inbounds double, ptr %1241, i64 %1348
  %1352 = load double, ptr %1351, align 8, !tbaa !18
  %1353 = fptosi double %1352 to i8
  %1354 = load i8, ptr %1243, align 1, !tbaa !11
  %1355 = sitofp i8 %1354 to double
  %1356 = sitofp i8 %1353 to double
  %1357 = fmul fast double %1350, %1356
  %1358 = fmul fast double %1357, %1357
  %1359 = fadd fast double %1358, %1355
  %1360 = fptosi double %1359 to i8
  store i8 %1360, ptr %1243, align 1, !tbaa !11
  %1361 = fadd fast double %1350, %1275
  %1362 = add nuw nsw i32 %1274, 1
  br i1 %1267, label %1363, label %1410

1363:                                             ; preds = %1346
  %1364 = load i32, ptr %4, align 4, !tbaa !5
  %1365 = load i32, ptr %12, align 4, !tbaa !5
  %1366 = add nsw i32 %1365, -1
  %1367 = icmp slt i32 %1364, %1366
  br i1 %1367, label %1387, label %1368

1368:                                             ; preds = %1363
  %1369 = icmp eq i32 %1364, %1366
  br i1 %1369, label %1370, label %1403

1370:                                             ; preds = %1368
  store i32 0, ptr %4, align 4, !tbaa !5
  %1371 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1371, ptr %6, align 4, !tbaa !5
  br i1 %1272, label %1410, label %1372

1372:                                             ; preds = %1370, %1397
  %1373 = phi i64 [ %1401, %1397 ], [ 1, %1370 ]
  %1374 = getelementptr inbounds i32, ptr %4, i64 %1373
  %1375 = load i32, ptr %1374, align 4, !tbaa !5
  %1376 = getelementptr inbounds i32, ptr %12, i64 %1373
  %1377 = load i32, ptr %1376, align 4, !tbaa !5
  %1378 = add nsw i32 %1377, -1
  %1379 = icmp slt i32 %1375, %1378
  br i1 %1379, label %1380, label %1395

1380:                                             ; preds = %1372
  br i1 %1367, label %1387, label %1381

1381:                                             ; preds = %1380
  %1382 = getelementptr inbounds i32, ptr %7, i64 %1373
  %1383 = load i32, ptr %1382, align 4, !tbaa !5
  %1384 = getelementptr inbounds i32, ptr %6, i64 %1373
  %1385 = load i32, ptr %1384, align 4, !tbaa !5
  %1386 = add nsw i32 %1385, %1383
  store i32 %1386, ptr %1384, align 4, !tbaa !5
  br label %1405

1387:                                             ; preds = %1363, %1380
  %1388 = phi i32 [ %1375, %1380 ], [ %1364, %1363 ]
  %1389 = phi ptr [ %1374, %1380 ], [ %4, %1363 ]
  %1390 = phi i64 [ %1373, %1380 ], [ 0, %1363 ]
  %1391 = add nsw i32 %1388, 1
  store i32 %1391, ptr %1389, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %7, i64 %1390
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = getelementptr inbounds i32, ptr %6, i64 %1390
  br label %1405

1395:                                             ; preds = %1372
  %1396 = icmp eq i32 %1375, %1378
  br i1 %1396, label %1397, label %1403

1397:                                             ; preds = %1395
  store i32 0, ptr %1374, align 4, !tbaa !5
  %1398 = getelementptr inbounds i32, ptr %8, i64 %1373
  %1399 = load i32, ptr %1398, align 4, !tbaa !5
  %1400 = getelementptr inbounds i32, ptr %6, i64 %1373
  store i32 %1399, ptr %1400, align 4, !tbaa !5
  %1401 = add nuw nsw i64 %1373, 1
  %1402 = icmp eq i64 %1401, %1270
  br i1 %1402, label %1410, label %1372, !llvm.loop !1347

1403:                                             ; preds = %1368, %1395
  %1404 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

1405:                                             ; preds = %1381, %1387
  %1406 = phi ptr [ %1394, %1387 ], [ %1374, %1381 ]
  %1407 = phi i32 [ %1393, %1387 ], [ 1, %1381 ]
  %1408 = load i32, ptr %1406, align 4, !tbaa !5
  %1409 = add nsw i32 %1408, %1407
  store i32 %1409, ptr %1406, align 4, !tbaa !5
  br label %1410

1410:                                             ; preds = %1397, %1405, %1370, %1346
  %1411 = icmp eq i32 %1362, %5
  br i1 %1411, label %5491, label %1273, !llvm.loop !1348

1412:                                             ; preds = %1256, %1548
  %1413 = phi i32 [ 0, %1256 ], [ %1497, %1548 ]
  %1414 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1257, label %1415, label %1484

1415:                                             ; preds = %1412, %1474
  %1416 = phi i32 [ %1483, %1474 ], [ 0, %1412 ]
  %1417 = phi i64 [ %1425, %1474 ], [ %1261, %1412 ]
  %1418 = phi i64 [ %1482, %1474 ], [ %1260, %1412 ]
  %1419 = phi i32 [ %1480, %1474 ], [ %1414, %1412 ]
  %1420 = sub i32 %1259, %1416
  %1421 = tail call i32 @llvm.smin.i32(i32 %1420, i32 0)
  %1422 = sub i32 %1420, %1421
  %1423 = zext i32 %1422 to i64
  %1424 = add nuw nsw i64 %1423, 1
  %1425 = add nsw i64 %1417, -1
  %1426 = icmp ult i32 %1422, 31
  br i1 %1426, label %1462, label %1427

1427:                                             ; preds = %1415
  %1428 = and i64 %1424, 8589934560
  %1429 = sub i64 %1418, %1428
  br label %1430

1430:                                             ; preds = %1430, %1427
  %1431 = phi i64 [ 0, %1427 ], [ %1454, %1430 ]
  %1432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1450, %1430 ]
  %1433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1451, %1430 ]
  %1434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1452, %1430 ]
  %1435 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1453, %1430 ]
  %1436 = sub i64 %1418, %1431
  %1437 = getelementptr inbounds i32, ptr %11, i64 %1436
  %1438 = getelementptr inbounds i32, ptr %1437, i64 -7
  %1439 = load <8 x i32>, ptr %1438, align 4, !tbaa !5
  %1440 = shufflevector <8 x i32> %1439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1441 = getelementptr inbounds i32, ptr %1437, i64 -15
  %1442 = load <8 x i32>, ptr %1441, align 4, !tbaa !5
  %1443 = shufflevector <8 x i32> %1442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1444 = getelementptr inbounds i32, ptr %1437, i64 -23
  %1445 = load <8 x i32>, ptr %1444, align 4, !tbaa !5
  %1446 = shufflevector <8 x i32> %1445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1447 = getelementptr inbounds i32, ptr %1437, i64 -31
  %1448 = load <8 x i32>, ptr %1447, align 4, !tbaa !5
  %1449 = shufflevector <8 x i32> %1448, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1450 = mul <8 x i32> %1440, %1432
  %1451 = mul <8 x i32> %1443, %1433
  %1452 = mul <8 x i32> %1446, %1434
  %1453 = mul <8 x i32> %1449, %1435
  %1454 = add nuw i64 %1431, 32
  %1455 = icmp eq i64 %1454, %1428
  br i1 %1455, label %1456, label %1430, !llvm.loop !1349

1456:                                             ; preds = %1430
  %1457 = mul <8 x i32> %1451, %1450
  %1458 = mul <8 x i32> %1452, %1457
  %1459 = mul <8 x i32> %1453, %1458
  %1460 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1459)
  %1461 = icmp eq i64 %1424, %1428
  br i1 %1461, label %1474, label %1462

1462:                                             ; preds = %1415, %1456
  %1463 = phi i64 [ %1418, %1415 ], [ %1429, %1456 ]
  %1464 = phi i32 [ 1, %1415 ], [ %1460, %1456 ]
  br label %1465

1465:                                             ; preds = %1462, %1465
  %1466 = phi i64 [ %1471, %1465 ], [ %1463, %1462 ]
  %1467 = phi i32 [ %1470, %1465 ], [ %1464, %1462 ]
  %1468 = getelementptr inbounds i32, ptr %11, i64 %1466
  %1469 = load i32, ptr %1468, align 4, !tbaa !5
  %1470 = mul nsw i32 %1469, %1467
  %1471 = add nsw i64 %1466, -1
  %1472 = trunc i64 %1466 to i32
  %1473 = icmp sgt i32 %1472, 0
  br i1 %1473, label %1465, label %1474, !llvm.loop !1350

1474:                                             ; preds = %1465, %1456
  %1475 = phi i32 [ %1460, %1456 ], [ %1470, %1465 ]
  %1476 = and i64 %1425, 4294967295
  %1477 = getelementptr inbounds i32, ptr %6, i64 %1476
  %1478 = load i32, ptr %1477, align 4, !tbaa !5
  %1479 = mul nsw i32 %1478, %1475
  %1480 = add nsw i32 %1479, %1419
  %1481 = icmp sgt i64 %1417, 2
  %1482 = add nsw i64 %1418, -1
  %1483 = add i32 %1416, 1
  br i1 %1481, label %1415, label %1484, !llvm.loop !1351

1484:                                             ; preds = %1474, %1412
  %1485 = phi i32 [ %1414, %1412 ], [ %1480, %1474 ]
  %1486 = icmp slt i32 %1485, %5
  br i1 %1486, label %1489, label %1487

1487:                                             ; preds = %1484
  %1488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

1489:                                             ; preds = %1484
  %1490 = sext i32 %1485 to i64
  %1491 = getelementptr inbounds double, ptr %1241, i64 %1490
  %1492 = load double, ptr %1491, align 8, !tbaa !18
  %1493 = fptosi double %1492 to i8
  %1494 = load i8, ptr %1243, align 1, !tbaa !11
  %1495 = mul i8 %1493, %1493
  %1496 = add i8 %1495, %1494
  store i8 %1496, ptr %1243, align 1, !tbaa !11
  %1497 = add nuw nsw i32 %1413, 1
  br i1 %1258, label %1498, label %1548

1498:                                             ; preds = %1489
  %1499 = load i32, ptr %4, align 4, !tbaa !5
  %1500 = load i32, ptr %12, align 4, !tbaa !5
  %1501 = add nsw i32 %1500, -1
  %1502 = icmp slt i32 %1499, %1501
  br i1 %1502, label %1525, label %1503

1503:                                             ; preds = %1498
  %1504 = icmp eq i32 %1499, %1501
  br i1 %1504, label %1505, label %1541

1505:                                             ; preds = %1503
  store i32 0, ptr %4, align 4, !tbaa !5
  %1506 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1506, ptr %6, align 4, !tbaa !5
  br i1 %1263, label %1548, label %1507

1507:                                             ; preds = %1505, %1535
  %1508 = phi i64 [ %1539, %1535 ], [ 1, %1505 ]
  %1509 = getelementptr inbounds i32, ptr %4, i64 %1508
  %1510 = load i32, ptr %1509, align 4, !tbaa !5
  %1511 = getelementptr inbounds i32, ptr %12, i64 %1508
  %1512 = load i32, ptr %1511, align 4, !tbaa !5
  %1513 = add nsw i32 %1512, -1
  %1514 = icmp slt i32 %1510, %1513
  br i1 %1514, label %1515, label %1533

1515:                                             ; preds = %1507
  br i1 %1502, label %1525, label %1516

1516:                                             ; preds = %1515
  %1517 = shl i64 %1508, 32
  %1518 = add i64 %1517, -4294967296
  %1519 = ashr exact i64 %1518, 32
  %1520 = getelementptr inbounds i32, ptr %7, i64 %1519
  %1521 = load i32, ptr %1520, align 4, !tbaa !5
  %1522 = getelementptr inbounds i32, ptr %6, i64 %1508
  %1523 = load i32, ptr %1522, align 4, !tbaa !5
  %1524 = add nsw i32 %1523, %1521
  store i32 %1524, ptr %1522, align 4, !tbaa !5
  br label %1543

1525:                                             ; preds = %1498, %1515
  %1526 = phi i32 [ %1510, %1515 ], [ %1499, %1498 ]
  %1527 = phi ptr [ %1509, %1515 ], [ %4, %1498 ]
  %1528 = phi i64 [ %1508, %1515 ], [ 0, %1498 ]
  %1529 = add nsw i32 %1526, 1
  store i32 %1529, ptr %1527, align 4, !tbaa !5
  %1530 = getelementptr inbounds i32, ptr %7, i64 %1528
  %1531 = load i32, ptr %1530, align 4, !tbaa !5
  %1532 = getelementptr inbounds i32, ptr %6, i64 %1528
  br label %1543

1533:                                             ; preds = %1507
  %1534 = icmp eq i32 %1510, %1513
  br i1 %1534, label %1535, label %1541

1535:                                             ; preds = %1533
  store i32 0, ptr %1509, align 4, !tbaa !5
  %1536 = getelementptr inbounds i32, ptr %8, i64 %1508
  %1537 = load i32, ptr %1536, align 4, !tbaa !5
  %1538 = getelementptr inbounds i32, ptr %6, i64 %1508
  store i32 %1537, ptr %1538, align 4, !tbaa !5
  %1539 = add nuw nsw i64 %1508, 1
  %1540 = icmp eq i64 %1539, %1261
  br i1 %1540, label %1548, label %1507, !llvm.loop !1352

1541:                                             ; preds = %1503, %1533
  %1542 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

1543:                                             ; preds = %1516, %1525
  %1544 = phi ptr [ %1532, %1525 ], [ %1509, %1516 ]
  %1545 = phi i32 [ %1531, %1525 ], [ 1, %1516 ]
  %1546 = load i32, ptr %1544, align 4, !tbaa !5
  %1547 = add nsw i32 %1546, %1545
  store i32 %1547, ptr %1544, align 4, !tbaa !5
  br label %1548

1548:                                             ; preds = %1535, %1543, %1505, %1489
  %1549 = icmp eq i32 %1497, %5
  br i1 %1549, label %5491, label %1412, !llvm.loop !1353

1550:                                             ; preds = %1249
  %1551 = getelementptr inbounds i32, ptr %3, i64 %19
  %1552 = load i32, ptr %1551, align 4, !tbaa !5
  %1553 = icmp eq i32 %1552, 0
  %1554 = icmp sgt i32 %5, 0
  br i1 %1553, label %1564, label %1555

1555:                                             ; preds = %1550
  br i1 %1554, label %1556, label %5491

1556:                                             ; preds = %1555
  %1557 = icmp sgt i32 %13, 1
  %1558 = icmp sgt i32 %13, 0
  %1559 = add i32 %13, -2
  %1560 = zext i32 %1559 to i64
  %1561 = zext i32 %13 to i64
  %1562 = add nuw i32 %5, 1
  %1563 = icmp eq i32 %13, 1
  br label %1706

1564:                                             ; preds = %1550
  br i1 %1554, label %1565, label %5491

1565:                                             ; preds = %1564
  %1566 = icmp sgt i32 %13, 1
  %1567 = icmp sgt i32 %13, 0
  %1568 = add i32 %13, -2
  %1569 = zext i32 %1568 to i64
  %1570 = zext i32 %13 to i64
  %1571 = add nuw i32 %5, 1
  %1572 = icmp eq i32 %13, 1
  br label %1573

1573:                                             ; preds = %1565, %1704
  %1574 = phi i32 [ 0, %1565 ], [ %1656, %1704 ]
  %1575 = phi double [ 0.000000e+00, %1565 ], [ %1655, %1704 ]
  %1576 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1566, label %1577, label %1646

1577:                                             ; preds = %1573, %1636
  %1578 = phi i32 [ %1645, %1636 ], [ 0, %1573 ]
  %1579 = phi i64 [ %1587, %1636 ], [ %1570, %1573 ]
  %1580 = phi i64 [ %1644, %1636 ], [ %1569, %1573 ]
  %1581 = phi i32 [ %1642, %1636 ], [ %1576, %1573 ]
  %1582 = sub i32 %1568, %1578
  %1583 = tail call i32 @llvm.smin.i32(i32 %1582, i32 0)
  %1584 = sub i32 %1582, %1583
  %1585 = zext i32 %1584 to i64
  %1586 = add nuw nsw i64 %1585, 1
  %1587 = add nsw i64 %1579, -1
  %1588 = icmp ult i32 %1584, 31
  br i1 %1588, label %1624, label %1589

1589:                                             ; preds = %1577
  %1590 = and i64 %1586, 8589934560
  %1591 = sub i64 %1580, %1590
  br label %1592

1592:                                             ; preds = %1592, %1589
  %1593 = phi i64 [ 0, %1589 ], [ %1616, %1592 ]
  %1594 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1612, %1592 ]
  %1595 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1613, %1592 ]
  %1596 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1614, %1592 ]
  %1597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1615, %1592 ]
  %1598 = sub i64 %1580, %1593
  %1599 = getelementptr inbounds i32, ptr %9, i64 %1598
  %1600 = getelementptr inbounds i32, ptr %1599, i64 -7
  %1601 = load <8 x i32>, ptr %1600, align 4, !tbaa !5
  %1602 = shufflevector <8 x i32> %1601, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1603 = getelementptr inbounds i32, ptr %1599, i64 -15
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = getelementptr inbounds i32, ptr %1599, i64 -23
  %1607 = load <8 x i32>, ptr %1606, align 4, !tbaa !5
  %1608 = shufflevector <8 x i32> %1607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1609 = getelementptr inbounds i32, ptr %1599, i64 -31
  %1610 = load <8 x i32>, ptr %1609, align 4, !tbaa !5
  %1611 = shufflevector <8 x i32> %1610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1612 = mul <8 x i32> %1602, %1594
  %1613 = mul <8 x i32> %1605, %1595
  %1614 = mul <8 x i32> %1608, %1596
  %1615 = mul <8 x i32> %1611, %1597
  %1616 = add nuw i64 %1593, 32
  %1617 = icmp eq i64 %1616, %1590
  br i1 %1617, label %1618, label %1592, !llvm.loop !1354

1618:                                             ; preds = %1592
  %1619 = mul <8 x i32> %1613, %1612
  %1620 = mul <8 x i32> %1614, %1619
  %1621 = mul <8 x i32> %1615, %1620
  %1622 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1621)
  %1623 = icmp eq i64 %1586, %1590
  br i1 %1623, label %1636, label %1624

1624:                                             ; preds = %1577, %1618
  %1625 = phi i64 [ %1580, %1577 ], [ %1591, %1618 ]
  %1626 = phi i32 [ 1, %1577 ], [ %1622, %1618 ]
  br label %1627

1627:                                             ; preds = %1624, %1627
  %1628 = phi i64 [ %1633, %1627 ], [ %1625, %1624 ]
  %1629 = phi i32 [ %1632, %1627 ], [ %1626, %1624 ]
  %1630 = getelementptr inbounds i32, ptr %9, i64 %1628
  %1631 = load i32, ptr %1630, align 4, !tbaa !5
  %1632 = mul nsw i32 %1631, %1629
  %1633 = add nsw i64 %1628, -1
  %1634 = trunc i64 %1628 to i32
  %1635 = icmp sgt i32 %1634, 0
  br i1 %1635, label %1627, label %1636, !llvm.loop !1355

1636:                                             ; preds = %1627, %1618
  %1637 = phi i32 [ %1622, %1618 ], [ %1632, %1627 ]
  %1638 = and i64 %1587, 4294967295
  %1639 = getelementptr inbounds i32, ptr %6, i64 %1638
  %1640 = load i32, ptr %1639, align 4, !tbaa !5
  %1641 = mul nsw i32 %1640, %1637
  %1642 = add nsw i32 %1641, %1581
  %1643 = icmp sgt i64 %1579, 2
  %1644 = add nsw i64 %1580, -1
  %1645 = add i32 %1578, 1
  br i1 %1643, label %1577, label %1646, !llvm.loop !1356

1646:                                             ; preds = %1636, %1573
  %1647 = phi i32 [ %1576, %1573 ], [ %1642, %1636 ]
  %1648 = sext i32 %1647 to i64
  %1649 = getelementptr inbounds double, ptr %1241, i64 %1648
  %1650 = load double, ptr %1649, align 8, !tbaa !18
  %1651 = fptosi double %1650 to i8
  %1652 = load i8, ptr %1243, align 1, !tbaa !11
  %1653 = mul i8 %1651, %1651
  %1654 = add i8 %1653, %1652
  store i8 %1654, ptr %1243, align 1, !tbaa !11
  %1655 = fadd fast double %1575, 1.000000e+00
  %1656 = add nuw nsw i32 %1574, 1
  br i1 %1567, label %1657, label %1704

1657:                                             ; preds = %1646
  %1658 = load i32, ptr %4, align 4, !tbaa !5
  %1659 = load i32, ptr %12, align 4, !tbaa !5
  %1660 = add nsw i32 %1659, -1
  %1661 = icmp slt i32 %1658, %1660
  br i1 %1661, label %1681, label %1662

1662:                                             ; preds = %1657
  %1663 = icmp eq i32 %1658, %1660
  br i1 %1663, label %1664, label %1697

1664:                                             ; preds = %1662
  store i32 0, ptr %4, align 4, !tbaa !5
  %1665 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1665, ptr %6, align 4, !tbaa !5
  br i1 %1572, label %1704, label %1666

1666:                                             ; preds = %1664, %1691
  %1667 = phi i64 [ %1695, %1691 ], [ 1, %1664 ]
  %1668 = getelementptr inbounds i32, ptr %4, i64 %1667
  %1669 = load i32, ptr %1668, align 4, !tbaa !5
  %1670 = getelementptr inbounds i32, ptr %12, i64 %1667
  %1671 = load i32, ptr %1670, align 4, !tbaa !5
  %1672 = add nsw i32 %1671, -1
  %1673 = icmp slt i32 %1669, %1672
  br i1 %1673, label %1674, label %1689

1674:                                             ; preds = %1666
  br i1 %1661, label %1681, label %1675

1675:                                             ; preds = %1674
  %1676 = getelementptr inbounds i32, ptr %7, i64 %1667
  %1677 = load i32, ptr %1676, align 4, !tbaa !5
  %1678 = getelementptr inbounds i32, ptr %6, i64 %1667
  %1679 = load i32, ptr %1678, align 4, !tbaa !5
  %1680 = add nsw i32 %1679, %1677
  store i32 %1680, ptr %1678, align 4, !tbaa !5
  br label %1699

1681:                                             ; preds = %1657, %1674
  %1682 = phi i32 [ %1669, %1674 ], [ %1658, %1657 ]
  %1683 = phi ptr [ %1668, %1674 ], [ %4, %1657 ]
  %1684 = phi i64 [ %1667, %1674 ], [ 0, %1657 ]
  %1685 = add nsw i32 %1682, 1
  store i32 %1685, ptr %1683, align 4, !tbaa !5
  %1686 = getelementptr inbounds i32, ptr %7, i64 %1684
  %1687 = load i32, ptr %1686, align 4, !tbaa !5
  %1688 = getelementptr inbounds i32, ptr %6, i64 %1684
  br label %1699

1689:                                             ; preds = %1666
  %1690 = icmp eq i32 %1669, %1672
  br i1 %1690, label %1691, label %1697

1691:                                             ; preds = %1689
  store i32 0, ptr %1668, align 4, !tbaa !5
  %1692 = getelementptr inbounds i32, ptr %8, i64 %1667
  %1693 = load i32, ptr %1692, align 4, !tbaa !5
  %1694 = getelementptr inbounds i32, ptr %6, i64 %1667
  store i32 %1693, ptr %1694, align 4, !tbaa !5
  %1695 = add nuw nsw i64 %1667, 1
  %1696 = icmp eq i64 %1695, %1570
  br i1 %1696, label %1704, label %1666, !llvm.loop !1357

1697:                                             ; preds = %1662, %1689
  %1698 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

1699:                                             ; preds = %1675, %1681
  %1700 = phi ptr [ %1688, %1681 ], [ %1668, %1675 ]
  %1701 = phi i32 [ %1687, %1681 ], [ 1, %1675 ]
  %1702 = load i32, ptr %1700, align 4, !tbaa !5
  %1703 = add nsw i32 %1702, %1701
  store i32 %1703, ptr %1700, align 4, !tbaa !5
  br label %1704

1704:                                             ; preds = %1691, %1699, %1664, %1646
  %1705 = icmp eq i32 %1656, %5
  br i1 %1705, label %5491, label %1573, !llvm.loop !1358

1706:                                             ; preds = %1556, %1842
  %1707 = phi i32 [ 0, %1556 ], [ %1791, %1842 ]
  %1708 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1557, label %1709, label %1778

1709:                                             ; preds = %1706, %1768
  %1710 = phi i32 [ %1777, %1768 ], [ 0, %1706 ]
  %1711 = phi i64 [ %1719, %1768 ], [ %1561, %1706 ]
  %1712 = phi i64 [ %1776, %1768 ], [ %1560, %1706 ]
  %1713 = phi i32 [ %1774, %1768 ], [ %1708, %1706 ]
  %1714 = sub i32 %1559, %1710
  %1715 = tail call i32 @llvm.smin.i32(i32 %1714, i32 0)
  %1716 = sub i32 %1714, %1715
  %1717 = zext i32 %1716 to i64
  %1718 = add nuw nsw i64 %1717, 1
  %1719 = add nsw i64 %1711, -1
  %1720 = icmp ult i32 %1716, 31
  br i1 %1720, label %1756, label %1721

1721:                                             ; preds = %1709
  %1722 = and i64 %1718, 8589934560
  %1723 = sub i64 %1712, %1722
  br label %1724

1724:                                             ; preds = %1724, %1721
  %1725 = phi i64 [ 0, %1721 ], [ %1748, %1724 ]
  %1726 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1744, %1724 ]
  %1727 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1745, %1724 ]
  %1728 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1746, %1724 ]
  %1729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1747, %1724 ]
  %1730 = sub i64 %1712, %1725
  %1731 = getelementptr inbounds i32, ptr %11, i64 %1730
  %1732 = getelementptr inbounds i32, ptr %1731, i64 -7
  %1733 = load <8 x i32>, ptr %1732, align 4, !tbaa !5
  %1734 = shufflevector <8 x i32> %1733, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1735 = getelementptr inbounds i32, ptr %1731, i64 -15
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !5
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = getelementptr inbounds i32, ptr %1731, i64 -23
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !5
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1731, i64 -31
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !5
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = mul <8 x i32> %1734, %1726
  %1745 = mul <8 x i32> %1737, %1727
  %1746 = mul <8 x i32> %1740, %1728
  %1747 = mul <8 x i32> %1743, %1729
  %1748 = add nuw i64 %1725, 32
  %1749 = icmp eq i64 %1748, %1722
  br i1 %1749, label %1750, label %1724, !llvm.loop !1359

1750:                                             ; preds = %1724
  %1751 = mul <8 x i32> %1745, %1744
  %1752 = mul <8 x i32> %1746, %1751
  %1753 = mul <8 x i32> %1747, %1752
  %1754 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1753)
  %1755 = icmp eq i64 %1718, %1722
  br i1 %1755, label %1768, label %1756

1756:                                             ; preds = %1709, %1750
  %1757 = phi i64 [ %1712, %1709 ], [ %1723, %1750 ]
  %1758 = phi i32 [ 1, %1709 ], [ %1754, %1750 ]
  br label %1759

1759:                                             ; preds = %1756, %1759
  %1760 = phi i64 [ %1765, %1759 ], [ %1757, %1756 ]
  %1761 = phi i32 [ %1764, %1759 ], [ %1758, %1756 ]
  %1762 = getelementptr inbounds i32, ptr %11, i64 %1760
  %1763 = load i32, ptr %1762, align 4, !tbaa !5
  %1764 = mul nsw i32 %1763, %1761
  %1765 = add nsw i64 %1760, -1
  %1766 = trunc i64 %1760 to i32
  %1767 = icmp sgt i32 %1766, 0
  br i1 %1767, label %1759, label %1768, !llvm.loop !1360

1768:                                             ; preds = %1759, %1750
  %1769 = phi i32 [ %1754, %1750 ], [ %1764, %1759 ]
  %1770 = and i64 %1719, 4294967295
  %1771 = getelementptr inbounds i32, ptr %6, i64 %1770
  %1772 = load i32, ptr %1771, align 4, !tbaa !5
  %1773 = mul nsw i32 %1772, %1769
  %1774 = add nsw i32 %1773, %1713
  %1775 = icmp sgt i64 %1711, 2
  %1776 = add nsw i64 %1712, -1
  %1777 = add i32 %1710, 1
  br i1 %1775, label %1709, label %1778, !llvm.loop !1361

1778:                                             ; preds = %1768, %1706
  %1779 = phi i32 [ %1708, %1706 ], [ %1774, %1768 ]
  %1780 = icmp slt i32 %1779, %5
  br i1 %1780, label %1783, label %1781

1781:                                             ; preds = %1778
  %1782 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

1783:                                             ; preds = %1778
  %1784 = sext i32 %1779 to i64
  %1785 = getelementptr inbounds double, ptr %1241, i64 %1784
  %1786 = load double, ptr %1785, align 8, !tbaa !18
  %1787 = fptosi double %1786 to i8
  %1788 = load i8, ptr %1243, align 1, !tbaa !11
  %1789 = mul i8 %1787, %1787
  %1790 = add i8 %1789, %1788
  store i8 %1790, ptr %1243, align 1, !tbaa !11
  %1791 = add nuw nsw i32 %1707, 1
  br i1 %1558, label %1792, label %1842

1792:                                             ; preds = %1783
  %1793 = load i32, ptr %4, align 4, !tbaa !5
  %1794 = load i32, ptr %12, align 4, !tbaa !5
  %1795 = add nsw i32 %1794, -1
  %1796 = icmp slt i32 %1793, %1795
  br i1 %1796, label %1819, label %1797

1797:                                             ; preds = %1792
  %1798 = icmp eq i32 %1793, %1795
  br i1 %1798, label %1799, label %1835

1799:                                             ; preds = %1797
  store i32 0, ptr %4, align 4, !tbaa !5
  %1800 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1800, ptr %6, align 4, !tbaa !5
  br i1 %1563, label %1842, label %1801

1801:                                             ; preds = %1799, %1829
  %1802 = phi i64 [ %1833, %1829 ], [ 1, %1799 ]
  %1803 = getelementptr inbounds i32, ptr %4, i64 %1802
  %1804 = load i32, ptr %1803, align 4, !tbaa !5
  %1805 = getelementptr inbounds i32, ptr %12, i64 %1802
  %1806 = load i32, ptr %1805, align 4, !tbaa !5
  %1807 = add nsw i32 %1806, -1
  %1808 = icmp slt i32 %1804, %1807
  br i1 %1808, label %1809, label %1827

1809:                                             ; preds = %1801
  br i1 %1796, label %1819, label %1810

1810:                                             ; preds = %1809
  %1811 = shl i64 %1802, 32
  %1812 = add i64 %1811, -4294967296
  %1813 = ashr exact i64 %1812, 32
  %1814 = getelementptr inbounds i32, ptr %7, i64 %1813
  %1815 = load i32, ptr %1814, align 4, !tbaa !5
  %1816 = getelementptr inbounds i32, ptr %6, i64 %1802
  %1817 = load i32, ptr %1816, align 4, !tbaa !5
  %1818 = add nsw i32 %1817, %1815
  store i32 %1818, ptr %1816, align 4, !tbaa !5
  br label %1837

1819:                                             ; preds = %1792, %1809
  %1820 = phi i32 [ %1804, %1809 ], [ %1793, %1792 ]
  %1821 = phi ptr [ %1803, %1809 ], [ %4, %1792 ]
  %1822 = phi i64 [ %1802, %1809 ], [ 0, %1792 ]
  %1823 = add nsw i32 %1820, 1
  store i32 %1823, ptr %1821, align 4, !tbaa !5
  %1824 = getelementptr inbounds i32, ptr %7, i64 %1822
  %1825 = load i32, ptr %1824, align 4, !tbaa !5
  %1826 = getelementptr inbounds i32, ptr %6, i64 %1822
  br label %1837

1827:                                             ; preds = %1801
  %1828 = icmp eq i32 %1804, %1807
  br i1 %1828, label %1829, label %1835

1829:                                             ; preds = %1827
  store i32 0, ptr %1803, align 4, !tbaa !5
  %1830 = getelementptr inbounds i32, ptr %8, i64 %1802
  %1831 = load i32, ptr %1830, align 4, !tbaa !5
  %1832 = getelementptr inbounds i32, ptr %6, i64 %1802
  store i32 %1831, ptr %1832, align 4, !tbaa !5
  %1833 = add nuw nsw i64 %1802, 1
  %1834 = icmp eq i64 %1833, %1561
  br i1 %1834, label %1842, label %1801, !llvm.loop !1362

1835:                                             ; preds = %1797, %1827
  %1836 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

1837:                                             ; preds = %1810, %1819
  %1838 = phi ptr [ %1826, %1819 ], [ %1803, %1810 ]
  %1839 = phi i32 [ %1825, %1819 ], [ 1, %1810 ]
  %1840 = load i32, ptr %1838, align 4, !tbaa !5
  %1841 = add nsw i32 %1840, %1839
  store i32 %1841, ptr %1838, align 4, !tbaa !5
  br label %1842

1842:                                             ; preds = %1829, %1837, %1799, %1783
  %1843 = icmp eq i32 %1791, %5
  br i1 %1843, label %5491, label %1706, !llvm.loop !1363

1844:                                             ; preds = %1249
  %1845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

1846:                                             ; preds = %18
  %1847 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1848 = load ptr, ptr %1847, align 8, !tbaa !9
  %1849 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1850 = load ptr, ptr %1849, align 8, !tbaa !9
  store i16 0, ptr %1850, align 2, !tbaa !78
  %1851 = icmp eq i32 %13, 0
  br i1 %1851, label %1852, label %1856

1852:                                             ; preds = %1846
  %1853 = load double, ptr %1848, align 8, !tbaa !18
  %1854 = fptosi double %1853 to i16
  %1855 = mul i16 %1854, %1854
  store i16 %1855, ptr %1850, align 2, !tbaa !78
  br label %5491

1856:                                             ; preds = %1846
  switch i32 %1, label %2455 [
    i32 1, label %1857
    i32 0, label %2161
  ]

1857:                                             ; preds = %1856
  %1858 = getelementptr inbounds i32, ptr %3, i64 %19
  %1859 = load i32, ptr %1858, align 4, !tbaa !5
  %1860 = icmp eq i32 %1859, 0
  %1861 = icmp sgt i32 %5, 0
  br i1 %1860, label %1871, label %1862

1862:                                             ; preds = %1857
  br i1 %1861, label %1863, label %5491

1863:                                             ; preds = %1862
  %1864 = icmp sgt i32 %13, 1
  %1865 = icmp sgt i32 %13, 0
  %1866 = add i32 %13, -2
  %1867 = zext i32 %1866 to i64
  %1868 = zext i32 %13 to i64
  %1869 = add nuw i32 %5, 1
  %1870 = icmp eq i32 %13, 1
  br label %2019

1871:                                             ; preds = %1857
  br i1 %1861, label %1872, label %5491

1872:                                             ; preds = %1871
  %1873 = icmp sgt i32 %13, 1
  %1874 = icmp sgt i32 %13, 0
  %1875 = add i32 %13, -2
  %1876 = zext i32 %1875 to i64
  %1877 = zext i32 %13 to i64
  %1878 = add nuw i32 %5, 1
  %1879 = icmp eq i32 %13, 1
  br label %1880

1880:                                             ; preds = %1872, %2017
  %1881 = phi i16 [ 0, %1872 ], [ %1967, %2017 ]
  %1882 = phi i32 [ 0, %1872 ], [ %1969, %2017 ]
  %1883 = phi double [ 0.000000e+00, %1872 ], [ %1968, %2017 ]
  %1884 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1873, label %1885, label %1954

1885:                                             ; preds = %1880, %1944
  %1886 = phi i32 [ %1953, %1944 ], [ 0, %1880 ]
  %1887 = phi i64 [ %1895, %1944 ], [ %1877, %1880 ]
  %1888 = phi i64 [ %1952, %1944 ], [ %1876, %1880 ]
  %1889 = phi i32 [ %1950, %1944 ], [ %1884, %1880 ]
  %1890 = sub i32 %1875, %1886
  %1891 = tail call i32 @llvm.smin.i32(i32 %1890, i32 0)
  %1892 = sub i32 %1890, %1891
  %1893 = zext i32 %1892 to i64
  %1894 = add nuw nsw i64 %1893, 1
  %1895 = add nsw i64 %1887, -1
  %1896 = icmp ult i32 %1892, 31
  br i1 %1896, label %1932, label %1897

1897:                                             ; preds = %1885
  %1898 = and i64 %1894, 8589934560
  %1899 = sub i64 %1888, %1898
  br label %1900

1900:                                             ; preds = %1900, %1897
  %1901 = phi i64 [ 0, %1897 ], [ %1924, %1900 ]
  %1902 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1920, %1900 ]
  %1903 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1921, %1900 ]
  %1904 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1922, %1900 ]
  %1905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1897 ], [ %1923, %1900 ]
  %1906 = sub i64 %1888, %1901
  %1907 = getelementptr inbounds i32, ptr %9, i64 %1906
  %1908 = getelementptr inbounds i32, ptr %1907, i64 -7
  %1909 = load <8 x i32>, ptr %1908, align 4, !tbaa !5
  %1910 = shufflevector <8 x i32> %1909, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1911 = getelementptr inbounds i32, ptr %1907, i64 -15
  %1912 = load <8 x i32>, ptr %1911, align 4, !tbaa !5
  %1913 = shufflevector <8 x i32> %1912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1914 = getelementptr inbounds i32, ptr %1907, i64 -23
  %1915 = load <8 x i32>, ptr %1914, align 4, !tbaa !5
  %1916 = shufflevector <8 x i32> %1915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1917 = getelementptr inbounds i32, ptr %1907, i64 -31
  %1918 = load <8 x i32>, ptr %1917, align 4, !tbaa !5
  %1919 = shufflevector <8 x i32> %1918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1920 = mul <8 x i32> %1910, %1902
  %1921 = mul <8 x i32> %1913, %1903
  %1922 = mul <8 x i32> %1916, %1904
  %1923 = mul <8 x i32> %1919, %1905
  %1924 = add nuw i64 %1901, 32
  %1925 = icmp eq i64 %1924, %1898
  br i1 %1925, label %1926, label %1900, !llvm.loop !1364

1926:                                             ; preds = %1900
  %1927 = mul <8 x i32> %1921, %1920
  %1928 = mul <8 x i32> %1922, %1927
  %1929 = mul <8 x i32> %1923, %1928
  %1930 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1929)
  %1931 = icmp eq i64 %1894, %1898
  br i1 %1931, label %1944, label %1932

1932:                                             ; preds = %1885, %1926
  %1933 = phi i64 [ %1888, %1885 ], [ %1899, %1926 ]
  %1934 = phi i32 [ 1, %1885 ], [ %1930, %1926 ]
  br label %1935

1935:                                             ; preds = %1932, %1935
  %1936 = phi i64 [ %1941, %1935 ], [ %1933, %1932 ]
  %1937 = phi i32 [ %1940, %1935 ], [ %1934, %1932 ]
  %1938 = getelementptr inbounds i32, ptr %9, i64 %1936
  %1939 = load i32, ptr %1938, align 4, !tbaa !5
  %1940 = mul nsw i32 %1939, %1937
  %1941 = add nsw i64 %1936, -1
  %1942 = trunc i64 %1936 to i32
  %1943 = icmp sgt i32 %1942, 0
  br i1 %1943, label %1935, label %1944, !llvm.loop !1365

1944:                                             ; preds = %1935, %1926
  %1945 = phi i32 [ %1930, %1926 ], [ %1940, %1935 ]
  %1946 = and i64 %1895, 4294967295
  %1947 = getelementptr inbounds i32, ptr %6, i64 %1946
  %1948 = load i32, ptr %1947, align 4, !tbaa !5
  %1949 = mul nsw i32 %1948, %1945
  %1950 = add nsw i32 %1949, %1889
  %1951 = icmp sgt i64 %1887, 2
  %1952 = add nsw i64 %1888, -1
  %1953 = add i32 %1886, 1
  br i1 %1951, label %1885, label %1954, !llvm.loop !1366

1954:                                             ; preds = %1944, %1880
  %1955 = phi i32 [ %1884, %1880 ], [ %1950, %1944 ]
  %1956 = sext i32 %1955 to i64
  %1957 = getelementptr inbounds double, ptr %2, i64 %1956
  %1958 = load double, ptr %1957, align 8, !tbaa !18
  %1959 = getelementptr inbounds double, ptr %1848, i64 %1956
  %1960 = load double, ptr %1959, align 8, !tbaa !18
  %1961 = fptosi double %1960 to i16
  %1962 = sitofp i16 %1881 to double
  %1963 = sitofp i16 %1961 to double
  %1964 = fmul fast double %1958, %1963
  %1965 = fmul fast double %1964, %1964
  %1966 = fadd fast double %1965, %1962
  %1967 = fptosi double %1966 to i16
  %1968 = fadd fast double %1958, %1883
  %1969 = add nuw nsw i32 %1882, 1
  br i1 %1874, label %1970, label %2017

1970:                                             ; preds = %1954
  %1971 = load i32, ptr %4, align 4, !tbaa !5
  %1972 = load i32, ptr %12, align 4, !tbaa !5
  %1973 = add nsw i32 %1972, -1
  %1974 = icmp slt i32 %1971, %1973
  br i1 %1974, label %1994, label %1975

1975:                                             ; preds = %1970
  %1976 = icmp eq i32 %1971, %1973
  br i1 %1976, label %1977, label %2010

1977:                                             ; preds = %1975
  store i32 0, ptr %4, align 4, !tbaa !5
  %1978 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1978, ptr %6, align 4, !tbaa !5
  br i1 %1879, label %2017, label %1979

1979:                                             ; preds = %1977, %2004
  %1980 = phi i64 [ %2008, %2004 ], [ 1, %1977 ]
  %1981 = getelementptr inbounds i32, ptr %4, i64 %1980
  %1982 = load i32, ptr %1981, align 4, !tbaa !5
  %1983 = getelementptr inbounds i32, ptr %12, i64 %1980
  %1984 = load i32, ptr %1983, align 4, !tbaa !5
  %1985 = add nsw i32 %1984, -1
  %1986 = icmp slt i32 %1982, %1985
  br i1 %1986, label %1987, label %2002

1987:                                             ; preds = %1979
  br i1 %1974, label %1994, label %1988

1988:                                             ; preds = %1987
  %1989 = getelementptr inbounds i32, ptr %7, i64 %1980
  %1990 = load i32, ptr %1989, align 4, !tbaa !5
  %1991 = getelementptr inbounds i32, ptr %6, i64 %1980
  %1992 = load i32, ptr %1991, align 4, !tbaa !5
  %1993 = add nsw i32 %1992, %1990
  store i32 %1993, ptr %1991, align 4, !tbaa !5
  br label %2012

1994:                                             ; preds = %1970, %1987
  %1995 = phi i32 [ %1982, %1987 ], [ %1971, %1970 ]
  %1996 = phi ptr [ %1981, %1987 ], [ %4, %1970 ]
  %1997 = phi i64 [ %1980, %1987 ], [ 0, %1970 ]
  %1998 = add nsw i32 %1995, 1
  store i32 %1998, ptr %1996, align 4, !tbaa !5
  %1999 = getelementptr inbounds i32, ptr %7, i64 %1997
  %2000 = load i32, ptr %1999, align 4, !tbaa !5
  %2001 = getelementptr inbounds i32, ptr %6, i64 %1997
  br label %2012

2002:                                             ; preds = %1979
  %2003 = icmp eq i32 %1982, %1985
  br i1 %2003, label %2004, label %2010

2004:                                             ; preds = %2002
  store i32 0, ptr %1981, align 4, !tbaa !5
  %2005 = getelementptr inbounds i32, ptr %8, i64 %1980
  %2006 = load i32, ptr %2005, align 4, !tbaa !5
  %2007 = getelementptr inbounds i32, ptr %6, i64 %1980
  store i32 %2006, ptr %2007, align 4, !tbaa !5
  %2008 = add nuw nsw i64 %1980, 1
  %2009 = icmp eq i64 %2008, %1877
  br i1 %2009, label %2017, label %1979, !llvm.loop !1367

2010:                                             ; preds = %1975, %2002
  store i16 %1967, ptr %1850, align 2, !tbaa !78
  %2011 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2287, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

2012:                                             ; preds = %1988, %1994
  %2013 = phi ptr [ %2001, %1994 ], [ %1981, %1988 ]
  %2014 = phi i32 [ %2000, %1994 ], [ 1, %1988 ]
  %2015 = load i32, ptr %2013, align 4, !tbaa !5
  %2016 = add nsw i32 %2015, %2014
  store i32 %2016, ptr %2013, align 4, !tbaa !5
  br label %2017

2017:                                             ; preds = %2004, %2012, %1977, %1954
  %2018 = icmp eq i32 %1969, %5
  br i1 %2018, label %5485, label %1880, !llvm.loop !1368

2019:                                             ; preds = %1863, %2159
  %2020 = phi i64 [ 0, %1863 ], [ %2106, %2159 ]
  %2021 = phi i32 [ 0, %1863 ], [ %2108, %2159 ]
  %2022 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1864, label %2023, label %2092

2023:                                             ; preds = %2019, %2082
  %2024 = phi i32 [ %2091, %2082 ], [ 0, %2019 ]
  %2025 = phi i64 [ %2033, %2082 ], [ %1868, %2019 ]
  %2026 = phi i64 [ %2090, %2082 ], [ %1867, %2019 ]
  %2027 = phi i32 [ %2088, %2082 ], [ %2022, %2019 ]
  %2028 = sub i32 %1866, %2024
  %2029 = tail call i32 @llvm.smin.i32(i32 %2028, i32 0)
  %2030 = sub i32 %2028, %2029
  %2031 = zext i32 %2030 to i64
  %2032 = add nuw nsw i64 %2031, 1
  %2033 = add nsw i64 %2025, -1
  %2034 = icmp ult i32 %2030, 31
  br i1 %2034, label %2070, label %2035

2035:                                             ; preds = %2023
  %2036 = and i64 %2032, 8589934560
  %2037 = sub i64 %2026, %2036
  br label %2038

2038:                                             ; preds = %2038, %2035
  %2039 = phi i64 [ 0, %2035 ], [ %2062, %2038 ]
  %2040 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2058, %2038 ]
  %2041 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2059, %2038 ]
  %2042 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2060, %2038 ]
  %2043 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2035 ], [ %2061, %2038 ]
  %2044 = sub i64 %2026, %2039
  %2045 = getelementptr inbounds i32, ptr %11, i64 %2044
  %2046 = getelementptr inbounds i32, ptr %2045, i64 -7
  %2047 = load <8 x i32>, ptr %2046, align 4, !tbaa !5
  %2048 = shufflevector <8 x i32> %2047, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2049 = getelementptr inbounds i32, ptr %2045, i64 -15
  %2050 = load <8 x i32>, ptr %2049, align 4, !tbaa !5
  %2051 = shufflevector <8 x i32> %2050, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2052 = getelementptr inbounds i32, ptr %2045, i64 -23
  %2053 = load <8 x i32>, ptr %2052, align 4, !tbaa !5
  %2054 = shufflevector <8 x i32> %2053, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2055 = getelementptr inbounds i32, ptr %2045, i64 -31
  %2056 = load <8 x i32>, ptr %2055, align 4, !tbaa !5
  %2057 = shufflevector <8 x i32> %2056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2058 = mul <8 x i32> %2048, %2040
  %2059 = mul <8 x i32> %2051, %2041
  %2060 = mul <8 x i32> %2054, %2042
  %2061 = mul <8 x i32> %2057, %2043
  %2062 = add nuw i64 %2039, 32
  %2063 = icmp eq i64 %2062, %2036
  br i1 %2063, label %2064, label %2038, !llvm.loop !1369

2064:                                             ; preds = %2038
  %2065 = mul <8 x i32> %2059, %2058
  %2066 = mul <8 x i32> %2060, %2065
  %2067 = mul <8 x i32> %2061, %2066
  %2068 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2067)
  %2069 = icmp eq i64 %2032, %2036
  br i1 %2069, label %2082, label %2070

2070:                                             ; preds = %2023, %2064
  %2071 = phi i64 [ %2026, %2023 ], [ %2037, %2064 ]
  %2072 = phi i32 [ 1, %2023 ], [ %2068, %2064 ]
  br label %2073

2073:                                             ; preds = %2070, %2073
  %2074 = phi i64 [ %2079, %2073 ], [ %2071, %2070 ]
  %2075 = phi i32 [ %2078, %2073 ], [ %2072, %2070 ]
  %2076 = getelementptr inbounds i32, ptr %11, i64 %2074
  %2077 = load i32, ptr %2076, align 4, !tbaa !5
  %2078 = mul nsw i32 %2077, %2075
  %2079 = add nsw i64 %2074, -1
  %2080 = trunc i64 %2074 to i32
  %2081 = icmp sgt i32 %2080, 0
  br i1 %2081, label %2073, label %2082, !llvm.loop !1370

2082:                                             ; preds = %2073, %2064
  %2083 = phi i32 [ %2068, %2064 ], [ %2078, %2073 ]
  %2084 = and i64 %2033, 4294967295
  %2085 = getelementptr inbounds i32, ptr %6, i64 %2084
  %2086 = load i32, ptr %2085, align 4, !tbaa !5
  %2087 = mul nsw i32 %2086, %2083
  %2088 = add nsw i32 %2087, %2027
  %2089 = icmp sgt i64 %2025, 2
  %2090 = add nsw i64 %2026, -1
  %2091 = add i32 %2024, 1
  br i1 %2089, label %2023, label %2092, !llvm.loop !1371

2092:                                             ; preds = %2082, %2019
  %2093 = phi i32 [ %2022, %2019 ], [ %2088, %2082 ]
  %2094 = icmp slt i32 %2093, %5
  br i1 %2094, label %2097, label %2095

2095:                                             ; preds = %2092
  %2096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2287, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

2097:                                             ; preds = %2092
  %2098 = sext i32 %2093 to i64
  %2099 = getelementptr inbounds double, ptr %1848, i64 %2098
  %2100 = load double, ptr %2099, align 8, !tbaa !18
  %2101 = fptosi double %2100 to i16
  %2102 = shl i64 %2020, 48
  %2103 = ashr exact i64 %2102, 48
  %2104 = sext i16 %2101 to i64
  %2105 = mul nsw i64 %2104, %2104
  %2106 = add nsw i64 %2105, %2103
  %2107 = trunc i64 %2106 to i16
  store i16 %2107, ptr %1850, align 2, !tbaa !78
  %2108 = add nuw nsw i32 %2021, 1
  br i1 %1865, label %2109, label %2159

2109:                                             ; preds = %2097
  %2110 = load i32, ptr %4, align 4, !tbaa !5
  %2111 = load i32, ptr %12, align 4, !tbaa !5
  %2112 = add nsw i32 %2111, -1
  %2113 = icmp slt i32 %2110, %2112
  br i1 %2113, label %2136, label %2114

2114:                                             ; preds = %2109
  %2115 = icmp eq i32 %2110, %2112
  br i1 %2115, label %2116, label %2152

2116:                                             ; preds = %2114
  store i32 0, ptr %4, align 4, !tbaa !5
  %2117 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2117, ptr %6, align 4, !tbaa !5
  br i1 %1870, label %2159, label %2118

2118:                                             ; preds = %2116, %2146
  %2119 = phi i64 [ %2150, %2146 ], [ 1, %2116 ]
  %2120 = getelementptr inbounds i32, ptr %4, i64 %2119
  %2121 = load i32, ptr %2120, align 4, !tbaa !5
  %2122 = getelementptr inbounds i32, ptr %12, i64 %2119
  %2123 = load i32, ptr %2122, align 4, !tbaa !5
  %2124 = add nsw i32 %2123, -1
  %2125 = icmp slt i32 %2121, %2124
  br i1 %2125, label %2126, label %2144

2126:                                             ; preds = %2118
  br i1 %2113, label %2136, label %2127

2127:                                             ; preds = %2126
  %2128 = shl i64 %2119, 32
  %2129 = add i64 %2128, -4294967296
  %2130 = ashr exact i64 %2129, 32
  %2131 = getelementptr inbounds i32, ptr %7, i64 %2130
  %2132 = load i32, ptr %2131, align 4, !tbaa !5
  %2133 = getelementptr inbounds i32, ptr %6, i64 %2119
  %2134 = load i32, ptr %2133, align 4, !tbaa !5
  %2135 = add nsw i32 %2134, %2132
  store i32 %2135, ptr %2133, align 4, !tbaa !5
  br label %2154

2136:                                             ; preds = %2109, %2126
  %2137 = phi i32 [ %2121, %2126 ], [ %2110, %2109 ]
  %2138 = phi ptr [ %2120, %2126 ], [ %4, %2109 ]
  %2139 = phi i64 [ %2119, %2126 ], [ 0, %2109 ]
  %2140 = add nsw i32 %2137, 1
  store i32 %2140, ptr %2138, align 4, !tbaa !5
  %2141 = getelementptr inbounds i32, ptr %7, i64 %2139
  %2142 = load i32, ptr %2141, align 4, !tbaa !5
  %2143 = getelementptr inbounds i32, ptr %6, i64 %2139
  br label %2154

2144:                                             ; preds = %2118
  %2145 = icmp eq i32 %2121, %2124
  br i1 %2145, label %2146, label %2152

2146:                                             ; preds = %2144
  store i32 0, ptr %2120, align 4, !tbaa !5
  %2147 = getelementptr inbounds i32, ptr %8, i64 %2119
  %2148 = load i32, ptr %2147, align 4, !tbaa !5
  %2149 = getelementptr inbounds i32, ptr %6, i64 %2119
  store i32 %2148, ptr %2149, align 4, !tbaa !5
  %2150 = add nuw nsw i64 %2119, 1
  %2151 = icmp eq i64 %2150, %1868
  br i1 %2151, label %2159, label %2118, !llvm.loop !1372

2152:                                             ; preds = %2114, %2144
  %2153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2287, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

2154:                                             ; preds = %2127, %2136
  %2155 = phi ptr [ %2143, %2136 ], [ %2120, %2127 ]
  %2156 = phi i32 [ %2142, %2136 ], [ 1, %2127 ]
  %2157 = load i32, ptr %2155, align 4, !tbaa !5
  %2158 = add nsw i32 %2157, %2156
  store i32 %2158, ptr %2155, align 4, !tbaa !5
  br label %2159

2159:                                             ; preds = %2146, %2154, %2116, %2097
  %2160 = icmp eq i32 %2108, %5
  br i1 %2160, label %5491, label %2019, !llvm.loop !1373

2161:                                             ; preds = %1856
  %2162 = getelementptr inbounds i32, ptr %3, i64 %19
  %2163 = load i32, ptr %2162, align 4, !tbaa !5
  %2164 = icmp eq i32 %2163, 0
  %2165 = icmp sgt i32 %5, 0
  br i1 %2164, label %2175, label %2166

2166:                                             ; preds = %2161
  br i1 %2165, label %2167, label %5491

2167:                                             ; preds = %2166
  %2168 = icmp sgt i32 %13, 1
  %2169 = icmp sgt i32 %13, 0
  %2170 = add i32 %13, -2
  %2171 = zext i32 %2170 to i64
  %2172 = zext i32 %13 to i64
  %2173 = add nuw i32 %5, 1
  %2174 = icmp eq i32 %13, 1
  br label %2317

2175:                                             ; preds = %2161
  br i1 %2165, label %2176, label %5491

2176:                                             ; preds = %2175
  %2177 = icmp sgt i32 %13, 1
  %2178 = icmp sgt i32 %13, 0
  %2179 = add i32 %13, -2
  %2180 = zext i32 %2179 to i64
  %2181 = zext i32 %13 to i64
  %2182 = add nuw i32 %5, 1
  %2183 = icmp eq i32 %13, 1
  br label %2184

2184:                                             ; preds = %2176, %2315
  %2185 = phi i16 [ 0, %2176 ], [ %2265, %2315 ]
  %2186 = phi i32 [ 0, %2176 ], [ %2267, %2315 ]
  %2187 = phi double [ 0.000000e+00, %2176 ], [ %2266, %2315 ]
  %2188 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2177, label %2189, label %2258

2189:                                             ; preds = %2184, %2248
  %2190 = phi i32 [ %2257, %2248 ], [ 0, %2184 ]
  %2191 = phi i64 [ %2199, %2248 ], [ %2181, %2184 ]
  %2192 = phi i64 [ %2256, %2248 ], [ %2180, %2184 ]
  %2193 = phi i32 [ %2254, %2248 ], [ %2188, %2184 ]
  %2194 = sub i32 %2179, %2190
  %2195 = tail call i32 @llvm.smin.i32(i32 %2194, i32 0)
  %2196 = sub i32 %2194, %2195
  %2197 = zext i32 %2196 to i64
  %2198 = add nuw nsw i64 %2197, 1
  %2199 = add nsw i64 %2191, -1
  %2200 = icmp ult i32 %2196, 31
  br i1 %2200, label %2236, label %2201

2201:                                             ; preds = %2189
  %2202 = and i64 %2198, 8589934560
  %2203 = sub i64 %2192, %2202
  br label %2204

2204:                                             ; preds = %2204, %2201
  %2205 = phi i64 [ 0, %2201 ], [ %2228, %2204 ]
  %2206 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2201 ], [ %2224, %2204 ]
  %2207 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2201 ], [ %2225, %2204 ]
  %2208 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2201 ], [ %2226, %2204 ]
  %2209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2201 ], [ %2227, %2204 ]
  %2210 = sub i64 %2192, %2205
  %2211 = getelementptr inbounds i32, ptr %9, i64 %2210
  %2212 = getelementptr inbounds i32, ptr %2211, i64 -7
  %2213 = load <8 x i32>, ptr %2212, align 4, !tbaa !5
  %2214 = shufflevector <8 x i32> %2213, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2215 = getelementptr inbounds i32, ptr %2211, i64 -15
  %2216 = load <8 x i32>, ptr %2215, align 4, !tbaa !5
  %2217 = shufflevector <8 x i32> %2216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2218 = getelementptr inbounds i32, ptr %2211, i64 -23
  %2219 = load <8 x i32>, ptr %2218, align 4, !tbaa !5
  %2220 = shufflevector <8 x i32> %2219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2221 = getelementptr inbounds i32, ptr %2211, i64 -31
  %2222 = load <8 x i32>, ptr %2221, align 4, !tbaa !5
  %2223 = shufflevector <8 x i32> %2222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2224 = mul <8 x i32> %2214, %2206
  %2225 = mul <8 x i32> %2217, %2207
  %2226 = mul <8 x i32> %2220, %2208
  %2227 = mul <8 x i32> %2223, %2209
  %2228 = add nuw i64 %2205, 32
  %2229 = icmp eq i64 %2228, %2202
  br i1 %2229, label %2230, label %2204, !llvm.loop !1374

2230:                                             ; preds = %2204
  %2231 = mul <8 x i32> %2225, %2224
  %2232 = mul <8 x i32> %2226, %2231
  %2233 = mul <8 x i32> %2227, %2232
  %2234 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2233)
  %2235 = icmp eq i64 %2198, %2202
  br i1 %2235, label %2248, label %2236

2236:                                             ; preds = %2189, %2230
  %2237 = phi i64 [ %2192, %2189 ], [ %2203, %2230 ]
  %2238 = phi i32 [ 1, %2189 ], [ %2234, %2230 ]
  br label %2239

2239:                                             ; preds = %2236, %2239
  %2240 = phi i64 [ %2245, %2239 ], [ %2237, %2236 ]
  %2241 = phi i32 [ %2244, %2239 ], [ %2238, %2236 ]
  %2242 = getelementptr inbounds i32, ptr %9, i64 %2240
  %2243 = load i32, ptr %2242, align 4, !tbaa !5
  %2244 = mul nsw i32 %2243, %2241
  %2245 = add nsw i64 %2240, -1
  %2246 = trunc i64 %2240 to i32
  %2247 = icmp sgt i32 %2246, 0
  br i1 %2247, label %2239, label %2248, !llvm.loop !1375

2248:                                             ; preds = %2239, %2230
  %2249 = phi i32 [ %2234, %2230 ], [ %2244, %2239 ]
  %2250 = and i64 %2199, 4294967295
  %2251 = getelementptr inbounds i32, ptr %6, i64 %2250
  %2252 = load i32, ptr %2251, align 4, !tbaa !5
  %2253 = mul nsw i32 %2252, %2249
  %2254 = add nsw i32 %2253, %2193
  %2255 = icmp sgt i64 %2191, 2
  %2256 = add nsw i64 %2192, -1
  %2257 = add i32 %2190, 1
  br i1 %2255, label %2189, label %2258, !llvm.loop !1376

2258:                                             ; preds = %2248, %2184
  %2259 = phi i32 [ %2188, %2184 ], [ %2254, %2248 ]
  %2260 = sext i32 %2259 to i64
  %2261 = getelementptr inbounds double, ptr %1848, i64 %2260
  %2262 = load double, ptr %2261, align 8, !tbaa !18
  %2263 = fptosi double %2262 to i16
  %2264 = mul i16 %2263, %2263
  %2265 = add i16 %2264, %2185
  %2266 = fadd fast double %2187, 1.000000e+00
  %2267 = add nuw nsw i32 %2186, 1
  br i1 %2178, label %2268, label %2315

2268:                                             ; preds = %2258
  %2269 = load i32, ptr %4, align 4, !tbaa !5
  %2270 = load i32, ptr %12, align 4, !tbaa !5
  %2271 = add nsw i32 %2270, -1
  %2272 = icmp slt i32 %2269, %2271
  br i1 %2272, label %2292, label %2273

2273:                                             ; preds = %2268
  %2274 = icmp eq i32 %2269, %2271
  br i1 %2274, label %2275, label %2308

2275:                                             ; preds = %2273
  store i32 0, ptr %4, align 4, !tbaa !5
  %2276 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2276, ptr %6, align 4, !tbaa !5
  br i1 %2183, label %2315, label %2277

2277:                                             ; preds = %2275, %2302
  %2278 = phi i64 [ %2306, %2302 ], [ 1, %2275 ]
  %2279 = getelementptr inbounds i32, ptr %4, i64 %2278
  %2280 = load i32, ptr %2279, align 4, !tbaa !5
  %2281 = getelementptr inbounds i32, ptr %12, i64 %2278
  %2282 = load i32, ptr %2281, align 4, !tbaa !5
  %2283 = add nsw i32 %2282, -1
  %2284 = icmp slt i32 %2280, %2283
  br i1 %2284, label %2285, label %2300

2285:                                             ; preds = %2277
  br i1 %2272, label %2292, label %2286

2286:                                             ; preds = %2285
  %2287 = getelementptr inbounds i32, ptr %7, i64 %2278
  %2288 = load i32, ptr %2287, align 4, !tbaa !5
  %2289 = getelementptr inbounds i32, ptr %6, i64 %2278
  %2290 = load i32, ptr %2289, align 4, !tbaa !5
  %2291 = add nsw i32 %2290, %2288
  store i32 %2291, ptr %2289, align 4, !tbaa !5
  br label %2310

2292:                                             ; preds = %2268, %2285
  %2293 = phi i32 [ %2280, %2285 ], [ %2269, %2268 ]
  %2294 = phi ptr [ %2279, %2285 ], [ %4, %2268 ]
  %2295 = phi i64 [ %2278, %2285 ], [ 0, %2268 ]
  %2296 = add nsw i32 %2293, 1
  store i32 %2296, ptr %2294, align 4, !tbaa !5
  %2297 = getelementptr inbounds i32, ptr %7, i64 %2295
  %2298 = load i32, ptr %2297, align 4, !tbaa !5
  %2299 = getelementptr inbounds i32, ptr %6, i64 %2295
  br label %2310

2300:                                             ; preds = %2277
  %2301 = icmp eq i32 %2280, %2283
  br i1 %2301, label %2302, label %2308

2302:                                             ; preds = %2300
  store i32 0, ptr %2279, align 4, !tbaa !5
  %2303 = getelementptr inbounds i32, ptr %8, i64 %2278
  %2304 = load i32, ptr %2303, align 4, !tbaa !5
  %2305 = getelementptr inbounds i32, ptr %6, i64 %2278
  store i32 %2304, ptr %2305, align 4, !tbaa !5
  %2306 = add nuw nsw i64 %2278, 1
  %2307 = icmp eq i64 %2306, %2181
  br i1 %2307, label %2315, label %2277, !llvm.loop !1377

2308:                                             ; preds = %2273, %2300
  store i16 %2265, ptr %1850, align 2, !tbaa !78
  %2309 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2287, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

2310:                                             ; preds = %2286, %2292
  %2311 = phi ptr [ %2299, %2292 ], [ %2279, %2286 ]
  %2312 = phi i32 [ %2298, %2292 ], [ 1, %2286 ]
  %2313 = load i32, ptr %2311, align 4, !tbaa !5
  %2314 = add nsw i32 %2313, %2312
  store i32 %2314, ptr %2311, align 4, !tbaa !5
  br label %2315

2315:                                             ; preds = %2302, %2310, %2275, %2258
  %2316 = icmp eq i32 %2267, %5
  br i1 %2316, label %5486, label %2184, !llvm.loop !1378

2317:                                             ; preds = %2167, %2453
  %2318 = phi i16 [ 0, %2167 ], [ %2401, %2453 ]
  %2319 = phi i32 [ 0, %2167 ], [ %2402, %2453 ]
  %2320 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2168, label %2321, label %2390

2321:                                             ; preds = %2317, %2380
  %2322 = phi i32 [ %2389, %2380 ], [ 0, %2317 ]
  %2323 = phi i64 [ %2331, %2380 ], [ %2172, %2317 ]
  %2324 = phi i64 [ %2388, %2380 ], [ %2171, %2317 ]
  %2325 = phi i32 [ %2386, %2380 ], [ %2320, %2317 ]
  %2326 = sub i32 %2170, %2322
  %2327 = tail call i32 @llvm.smin.i32(i32 %2326, i32 0)
  %2328 = sub i32 %2326, %2327
  %2329 = zext i32 %2328 to i64
  %2330 = add nuw nsw i64 %2329, 1
  %2331 = add nsw i64 %2323, -1
  %2332 = icmp ult i32 %2328, 31
  br i1 %2332, label %2368, label %2333

2333:                                             ; preds = %2321
  %2334 = and i64 %2330, 8589934560
  %2335 = sub i64 %2324, %2334
  br label %2336

2336:                                             ; preds = %2336, %2333
  %2337 = phi i64 [ 0, %2333 ], [ %2360, %2336 ]
  %2338 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2333 ], [ %2356, %2336 ]
  %2339 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2333 ], [ %2357, %2336 ]
  %2340 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2333 ], [ %2358, %2336 ]
  %2341 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2333 ], [ %2359, %2336 ]
  %2342 = sub i64 %2324, %2337
  %2343 = getelementptr inbounds i32, ptr %11, i64 %2342
  %2344 = getelementptr inbounds i32, ptr %2343, i64 -7
  %2345 = load <8 x i32>, ptr %2344, align 4, !tbaa !5
  %2346 = shufflevector <8 x i32> %2345, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2347 = getelementptr inbounds i32, ptr %2343, i64 -15
  %2348 = load <8 x i32>, ptr %2347, align 4, !tbaa !5
  %2349 = shufflevector <8 x i32> %2348, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2350 = getelementptr inbounds i32, ptr %2343, i64 -23
  %2351 = load <8 x i32>, ptr %2350, align 4, !tbaa !5
  %2352 = shufflevector <8 x i32> %2351, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2353 = getelementptr inbounds i32, ptr %2343, i64 -31
  %2354 = load <8 x i32>, ptr %2353, align 4, !tbaa !5
  %2355 = shufflevector <8 x i32> %2354, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2356 = mul <8 x i32> %2346, %2338
  %2357 = mul <8 x i32> %2349, %2339
  %2358 = mul <8 x i32> %2352, %2340
  %2359 = mul <8 x i32> %2355, %2341
  %2360 = add nuw i64 %2337, 32
  %2361 = icmp eq i64 %2360, %2334
  br i1 %2361, label %2362, label %2336, !llvm.loop !1379

2362:                                             ; preds = %2336
  %2363 = mul <8 x i32> %2357, %2356
  %2364 = mul <8 x i32> %2358, %2363
  %2365 = mul <8 x i32> %2359, %2364
  %2366 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2365)
  %2367 = icmp eq i64 %2330, %2334
  br i1 %2367, label %2380, label %2368

2368:                                             ; preds = %2321, %2362
  %2369 = phi i64 [ %2324, %2321 ], [ %2335, %2362 ]
  %2370 = phi i32 [ 1, %2321 ], [ %2366, %2362 ]
  br label %2371

2371:                                             ; preds = %2368, %2371
  %2372 = phi i64 [ %2377, %2371 ], [ %2369, %2368 ]
  %2373 = phi i32 [ %2376, %2371 ], [ %2370, %2368 ]
  %2374 = getelementptr inbounds i32, ptr %11, i64 %2372
  %2375 = load i32, ptr %2374, align 4, !tbaa !5
  %2376 = mul nsw i32 %2375, %2373
  %2377 = add nsw i64 %2372, -1
  %2378 = trunc i64 %2372 to i32
  %2379 = icmp sgt i32 %2378, 0
  br i1 %2379, label %2371, label %2380, !llvm.loop !1380

2380:                                             ; preds = %2371, %2362
  %2381 = phi i32 [ %2366, %2362 ], [ %2376, %2371 ]
  %2382 = and i64 %2331, 4294967295
  %2383 = getelementptr inbounds i32, ptr %6, i64 %2382
  %2384 = load i32, ptr %2383, align 4, !tbaa !5
  %2385 = mul nsw i32 %2384, %2381
  %2386 = add nsw i32 %2385, %2325
  %2387 = icmp sgt i64 %2323, 2
  %2388 = add nsw i64 %2324, -1
  %2389 = add i32 %2322, 1
  br i1 %2387, label %2321, label %2390, !llvm.loop !1381

2390:                                             ; preds = %2380, %2317
  %2391 = phi i32 [ %2320, %2317 ], [ %2386, %2380 ]
  %2392 = icmp slt i32 %2391, %5
  br i1 %2392, label %2395, label %2393

2393:                                             ; preds = %2390
  %2394 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2287, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

2395:                                             ; preds = %2390
  %2396 = sext i32 %2391 to i64
  %2397 = getelementptr inbounds double, ptr %1848, i64 %2396
  %2398 = load double, ptr %2397, align 8, !tbaa !18
  %2399 = fptosi double %2398 to i16
  %2400 = mul i16 %2399, %2399
  %2401 = add i16 %2400, %2318
  store i16 %2401, ptr %1850, align 2, !tbaa !78
  %2402 = add nuw nsw i32 %2319, 1
  br i1 %2169, label %2403, label %2453

2403:                                             ; preds = %2395
  %2404 = load i32, ptr %4, align 4, !tbaa !5
  %2405 = load i32, ptr %12, align 4, !tbaa !5
  %2406 = add nsw i32 %2405, -1
  %2407 = icmp slt i32 %2404, %2406
  br i1 %2407, label %2430, label %2408

2408:                                             ; preds = %2403
  %2409 = icmp eq i32 %2404, %2406
  br i1 %2409, label %2410, label %2446

2410:                                             ; preds = %2408
  store i32 0, ptr %4, align 4, !tbaa !5
  %2411 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2411, ptr %6, align 4, !tbaa !5
  br i1 %2174, label %2453, label %2412

2412:                                             ; preds = %2410, %2440
  %2413 = phi i64 [ %2444, %2440 ], [ 1, %2410 ]
  %2414 = getelementptr inbounds i32, ptr %4, i64 %2413
  %2415 = load i32, ptr %2414, align 4, !tbaa !5
  %2416 = getelementptr inbounds i32, ptr %12, i64 %2413
  %2417 = load i32, ptr %2416, align 4, !tbaa !5
  %2418 = add nsw i32 %2417, -1
  %2419 = icmp slt i32 %2415, %2418
  br i1 %2419, label %2420, label %2438

2420:                                             ; preds = %2412
  br i1 %2407, label %2430, label %2421

2421:                                             ; preds = %2420
  %2422 = shl i64 %2413, 32
  %2423 = add i64 %2422, -4294967296
  %2424 = ashr exact i64 %2423, 32
  %2425 = getelementptr inbounds i32, ptr %7, i64 %2424
  %2426 = load i32, ptr %2425, align 4, !tbaa !5
  %2427 = getelementptr inbounds i32, ptr %6, i64 %2413
  %2428 = load i32, ptr %2427, align 4, !tbaa !5
  %2429 = add nsw i32 %2428, %2426
  store i32 %2429, ptr %2427, align 4, !tbaa !5
  br label %2448

2430:                                             ; preds = %2403, %2420
  %2431 = phi i32 [ %2415, %2420 ], [ %2404, %2403 ]
  %2432 = phi ptr [ %2414, %2420 ], [ %4, %2403 ]
  %2433 = phi i64 [ %2413, %2420 ], [ 0, %2403 ]
  %2434 = add nsw i32 %2431, 1
  store i32 %2434, ptr %2432, align 4, !tbaa !5
  %2435 = getelementptr inbounds i32, ptr %7, i64 %2433
  %2436 = load i32, ptr %2435, align 4, !tbaa !5
  %2437 = getelementptr inbounds i32, ptr %6, i64 %2433
  br label %2448

2438:                                             ; preds = %2412
  %2439 = icmp eq i32 %2415, %2418
  br i1 %2439, label %2440, label %2446

2440:                                             ; preds = %2438
  store i32 0, ptr %2414, align 4, !tbaa !5
  %2441 = getelementptr inbounds i32, ptr %8, i64 %2413
  %2442 = load i32, ptr %2441, align 4, !tbaa !5
  %2443 = getelementptr inbounds i32, ptr %6, i64 %2413
  store i32 %2442, ptr %2443, align 4, !tbaa !5
  %2444 = add nuw nsw i64 %2413, 1
  %2445 = icmp eq i64 %2444, %2172
  br i1 %2445, label %2453, label %2412, !llvm.loop !1382

2446:                                             ; preds = %2408, %2438
  %2447 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2287, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

2448:                                             ; preds = %2421, %2430
  %2449 = phi ptr [ %2437, %2430 ], [ %2414, %2421 ]
  %2450 = phi i32 [ %2436, %2430 ], [ 1, %2421 ]
  %2451 = load i32, ptr %2449, align 4, !tbaa !5
  %2452 = add nsw i32 %2451, %2450
  store i32 %2452, ptr %2449, align 4, !tbaa !5
  br label %2453

2453:                                             ; preds = %2440, %2448, %2410, %2395
  %2454 = icmp eq i32 %2402, %5
  br i1 %2454, label %5491, label %2317, !llvm.loop !1383

2455:                                             ; preds = %1856
  %2456 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2287, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

2457:                                             ; preds = %18
  %2458 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2459 = load ptr, ptr %2458, align 8, !tbaa !9
  %2460 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2461 = load ptr, ptr %2460, align 8, !tbaa !9
  store i32 0, ptr %2461, align 4, !tbaa !5
  %2462 = icmp eq i32 %13, 0
  br i1 %2462, label %2463, label %2467

2463:                                             ; preds = %2457
  %2464 = load double, ptr %2459, align 8, !tbaa !18
  %2465 = fptosi double %2464 to i32
  %2466 = mul nsw i32 %2465, %2465
  store i32 %2466, ptr %2461, align 4, !tbaa !5
  br label %5491

2467:                                             ; preds = %2457
  switch i32 %1, label %3065 [
    i32 1, label %2468
    i32 0, label %2771
  ]

2468:                                             ; preds = %2467
  %2469 = getelementptr inbounds i32, ptr %3, i64 %19
  %2470 = load i32, ptr %2469, align 4, !tbaa !5
  %2471 = icmp eq i32 %2470, 0
  %2472 = icmp sgt i32 %5, 0
  br i1 %2471, label %2482, label %2473

2473:                                             ; preds = %2468
  br i1 %2472, label %2474, label %5491

2474:                                             ; preds = %2473
  %2475 = icmp sgt i32 %13, 1
  %2476 = icmp sgt i32 %13, 0
  %2477 = add i32 %13, -2
  %2478 = zext i32 %2477 to i64
  %2479 = zext i32 %13 to i64
  %2480 = add nuw i32 %5, 1
  %2481 = icmp eq i32 %13, 1
  br label %2630

2482:                                             ; preds = %2468
  br i1 %2472, label %2483, label %5491

2483:                                             ; preds = %2482
  %2484 = icmp sgt i32 %13, 1
  %2485 = icmp sgt i32 %13, 0
  %2486 = add i32 %13, -2
  %2487 = zext i32 %2486 to i64
  %2488 = zext i32 %13 to i64
  %2489 = add nuw i32 %5, 1
  %2490 = icmp eq i32 %13, 1
  br label %2491

2491:                                             ; preds = %2483, %2628
  %2492 = phi i32 [ 0, %2483 ], [ %2580, %2628 ]
  %2493 = phi double [ 0.000000e+00, %2483 ], [ %2579, %2628 ]
  %2494 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2484, label %2495, label %2564

2495:                                             ; preds = %2491, %2554
  %2496 = phi i32 [ %2563, %2554 ], [ 0, %2491 ]
  %2497 = phi i64 [ %2505, %2554 ], [ %2488, %2491 ]
  %2498 = phi i64 [ %2562, %2554 ], [ %2487, %2491 ]
  %2499 = phi i32 [ %2560, %2554 ], [ %2494, %2491 ]
  %2500 = sub i32 %2486, %2496
  %2501 = tail call i32 @llvm.smin.i32(i32 %2500, i32 0)
  %2502 = sub i32 %2500, %2501
  %2503 = zext i32 %2502 to i64
  %2504 = add nuw nsw i64 %2503, 1
  %2505 = add nsw i64 %2497, -1
  %2506 = icmp ult i32 %2502, 31
  br i1 %2506, label %2542, label %2507

2507:                                             ; preds = %2495
  %2508 = and i64 %2504, 8589934560
  %2509 = sub i64 %2498, %2508
  br label %2510

2510:                                             ; preds = %2510, %2507
  %2511 = phi i64 [ 0, %2507 ], [ %2534, %2510 ]
  %2512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2507 ], [ %2530, %2510 ]
  %2513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2507 ], [ %2531, %2510 ]
  %2514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2507 ], [ %2532, %2510 ]
  %2515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2507 ], [ %2533, %2510 ]
  %2516 = sub i64 %2498, %2511
  %2517 = getelementptr inbounds i32, ptr %9, i64 %2516
  %2518 = getelementptr inbounds i32, ptr %2517, i64 -7
  %2519 = load <8 x i32>, ptr %2518, align 4, !tbaa !5
  %2520 = shufflevector <8 x i32> %2519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2521 = getelementptr inbounds i32, ptr %2517, i64 -15
  %2522 = load <8 x i32>, ptr %2521, align 4, !tbaa !5
  %2523 = shufflevector <8 x i32> %2522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2524 = getelementptr inbounds i32, ptr %2517, i64 -23
  %2525 = load <8 x i32>, ptr %2524, align 4, !tbaa !5
  %2526 = shufflevector <8 x i32> %2525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2527 = getelementptr inbounds i32, ptr %2517, i64 -31
  %2528 = load <8 x i32>, ptr %2527, align 4, !tbaa !5
  %2529 = shufflevector <8 x i32> %2528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2530 = mul <8 x i32> %2520, %2512
  %2531 = mul <8 x i32> %2523, %2513
  %2532 = mul <8 x i32> %2526, %2514
  %2533 = mul <8 x i32> %2529, %2515
  %2534 = add nuw i64 %2511, 32
  %2535 = icmp eq i64 %2534, %2508
  br i1 %2535, label %2536, label %2510, !llvm.loop !1384

2536:                                             ; preds = %2510
  %2537 = mul <8 x i32> %2531, %2530
  %2538 = mul <8 x i32> %2532, %2537
  %2539 = mul <8 x i32> %2533, %2538
  %2540 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2539)
  %2541 = icmp eq i64 %2504, %2508
  br i1 %2541, label %2554, label %2542

2542:                                             ; preds = %2495, %2536
  %2543 = phi i64 [ %2498, %2495 ], [ %2509, %2536 ]
  %2544 = phi i32 [ 1, %2495 ], [ %2540, %2536 ]
  br label %2545

2545:                                             ; preds = %2542, %2545
  %2546 = phi i64 [ %2551, %2545 ], [ %2543, %2542 ]
  %2547 = phi i32 [ %2550, %2545 ], [ %2544, %2542 ]
  %2548 = getelementptr inbounds i32, ptr %9, i64 %2546
  %2549 = load i32, ptr %2548, align 4, !tbaa !5
  %2550 = mul nsw i32 %2549, %2547
  %2551 = add nsw i64 %2546, -1
  %2552 = trunc i64 %2546 to i32
  %2553 = icmp sgt i32 %2552, 0
  br i1 %2553, label %2545, label %2554, !llvm.loop !1385

2554:                                             ; preds = %2545, %2536
  %2555 = phi i32 [ %2540, %2536 ], [ %2550, %2545 ]
  %2556 = and i64 %2505, 4294967295
  %2557 = getelementptr inbounds i32, ptr %6, i64 %2556
  %2558 = load i32, ptr %2557, align 4, !tbaa !5
  %2559 = mul nsw i32 %2558, %2555
  %2560 = add nsw i32 %2559, %2499
  %2561 = icmp sgt i64 %2497, 2
  %2562 = add nsw i64 %2498, -1
  %2563 = add i32 %2496, 1
  br i1 %2561, label %2495, label %2564, !llvm.loop !1386

2564:                                             ; preds = %2554, %2491
  %2565 = phi i32 [ %2494, %2491 ], [ %2560, %2554 ]
  %2566 = sext i32 %2565 to i64
  %2567 = getelementptr inbounds double, ptr %2, i64 %2566
  %2568 = load double, ptr %2567, align 8, !tbaa !18
  %2569 = getelementptr inbounds double, ptr %2459, i64 %2566
  %2570 = load double, ptr %2569, align 8, !tbaa !18
  %2571 = fptosi double %2570 to i32
  %2572 = load i32, ptr %2461, align 4, !tbaa !5
  %2573 = sitofp i32 %2572 to double
  %2574 = sitofp i32 %2571 to double
  %2575 = fmul fast double %2568, %2574
  %2576 = fmul fast double %2575, %2575
  %2577 = fadd fast double %2576, %2573
  %2578 = fptosi double %2577 to i32
  store i32 %2578, ptr %2461, align 4, !tbaa !5
  %2579 = fadd fast double %2568, %2493
  %2580 = add nuw nsw i32 %2492, 1
  br i1 %2485, label %2581, label %2628

2581:                                             ; preds = %2564
  %2582 = load i32, ptr %4, align 4, !tbaa !5
  %2583 = load i32, ptr %12, align 4, !tbaa !5
  %2584 = add nsw i32 %2583, -1
  %2585 = icmp slt i32 %2582, %2584
  br i1 %2585, label %2605, label %2586

2586:                                             ; preds = %2581
  %2587 = icmp eq i32 %2582, %2584
  br i1 %2587, label %2588, label %2621

2588:                                             ; preds = %2586
  store i32 0, ptr %4, align 4, !tbaa !5
  %2589 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2589, ptr %6, align 4, !tbaa !5
  br i1 %2490, label %2628, label %2590

2590:                                             ; preds = %2588, %2615
  %2591 = phi i64 [ %2619, %2615 ], [ 1, %2588 ]
  %2592 = getelementptr inbounds i32, ptr %4, i64 %2591
  %2593 = load i32, ptr %2592, align 4, !tbaa !5
  %2594 = getelementptr inbounds i32, ptr %12, i64 %2591
  %2595 = load i32, ptr %2594, align 4, !tbaa !5
  %2596 = add nsw i32 %2595, -1
  %2597 = icmp slt i32 %2593, %2596
  br i1 %2597, label %2598, label %2613

2598:                                             ; preds = %2590
  br i1 %2585, label %2605, label %2599

2599:                                             ; preds = %2598
  %2600 = getelementptr inbounds i32, ptr %7, i64 %2591
  %2601 = load i32, ptr %2600, align 4, !tbaa !5
  %2602 = getelementptr inbounds i32, ptr %6, i64 %2591
  %2603 = load i32, ptr %2602, align 4, !tbaa !5
  %2604 = add nsw i32 %2603, %2601
  store i32 %2604, ptr %2602, align 4, !tbaa !5
  br label %2623

2605:                                             ; preds = %2581, %2598
  %2606 = phi i32 [ %2593, %2598 ], [ %2582, %2581 ]
  %2607 = phi ptr [ %2592, %2598 ], [ %4, %2581 ]
  %2608 = phi i64 [ %2591, %2598 ], [ 0, %2581 ]
  %2609 = add nsw i32 %2606, 1
  store i32 %2609, ptr %2607, align 4, !tbaa !5
  %2610 = getelementptr inbounds i32, ptr %7, i64 %2608
  %2611 = load i32, ptr %2610, align 4, !tbaa !5
  %2612 = getelementptr inbounds i32, ptr %6, i64 %2608
  br label %2623

2613:                                             ; preds = %2590
  %2614 = icmp eq i32 %2593, %2596
  br i1 %2614, label %2615, label %2621

2615:                                             ; preds = %2613
  store i32 0, ptr %2592, align 4, !tbaa !5
  %2616 = getelementptr inbounds i32, ptr %8, i64 %2591
  %2617 = load i32, ptr %2616, align 4, !tbaa !5
  %2618 = getelementptr inbounds i32, ptr %6, i64 %2591
  store i32 %2617, ptr %2618, align 4, !tbaa !5
  %2619 = add nuw nsw i64 %2591, 1
  %2620 = icmp eq i64 %2619, %2488
  br i1 %2620, label %2628, label %2590, !llvm.loop !1387

2621:                                             ; preds = %2586, %2613
  %2622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

2623:                                             ; preds = %2599, %2605
  %2624 = phi ptr [ %2612, %2605 ], [ %2592, %2599 ]
  %2625 = phi i32 [ %2611, %2605 ], [ 1, %2599 ]
  %2626 = load i32, ptr %2624, align 4, !tbaa !5
  %2627 = add nsw i32 %2626, %2625
  store i32 %2627, ptr %2624, align 4, !tbaa !5
  br label %2628

2628:                                             ; preds = %2615, %2623, %2588, %2564
  %2629 = icmp eq i32 %2580, %5
  br i1 %2629, label %5491, label %2491, !llvm.loop !1388

2630:                                             ; preds = %2474, %2769
  %2631 = phi i32 [ 0, %2474 ], [ %2718, %2769 ]
  %2632 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2475, label %2633, label %2702

2633:                                             ; preds = %2630, %2692
  %2634 = phi i32 [ %2701, %2692 ], [ 0, %2630 ]
  %2635 = phi i64 [ %2643, %2692 ], [ %2479, %2630 ]
  %2636 = phi i64 [ %2700, %2692 ], [ %2478, %2630 ]
  %2637 = phi i32 [ %2698, %2692 ], [ %2632, %2630 ]
  %2638 = sub i32 %2477, %2634
  %2639 = tail call i32 @llvm.smin.i32(i32 %2638, i32 0)
  %2640 = sub i32 %2638, %2639
  %2641 = zext i32 %2640 to i64
  %2642 = add nuw nsw i64 %2641, 1
  %2643 = add nsw i64 %2635, -1
  %2644 = icmp ult i32 %2640, 31
  br i1 %2644, label %2680, label %2645

2645:                                             ; preds = %2633
  %2646 = and i64 %2642, 8589934560
  %2647 = sub i64 %2636, %2646
  br label %2648

2648:                                             ; preds = %2648, %2645
  %2649 = phi i64 [ 0, %2645 ], [ %2672, %2648 ]
  %2650 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2645 ], [ %2668, %2648 ]
  %2651 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2645 ], [ %2669, %2648 ]
  %2652 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2645 ], [ %2670, %2648 ]
  %2653 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2645 ], [ %2671, %2648 ]
  %2654 = sub i64 %2636, %2649
  %2655 = getelementptr inbounds i32, ptr %11, i64 %2654
  %2656 = getelementptr inbounds i32, ptr %2655, i64 -7
  %2657 = load <8 x i32>, ptr %2656, align 4, !tbaa !5
  %2658 = shufflevector <8 x i32> %2657, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2659 = getelementptr inbounds i32, ptr %2655, i64 -15
  %2660 = load <8 x i32>, ptr %2659, align 4, !tbaa !5
  %2661 = shufflevector <8 x i32> %2660, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2662 = getelementptr inbounds i32, ptr %2655, i64 -23
  %2663 = load <8 x i32>, ptr %2662, align 4, !tbaa !5
  %2664 = shufflevector <8 x i32> %2663, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2665 = getelementptr inbounds i32, ptr %2655, i64 -31
  %2666 = load <8 x i32>, ptr %2665, align 4, !tbaa !5
  %2667 = shufflevector <8 x i32> %2666, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2668 = mul <8 x i32> %2658, %2650
  %2669 = mul <8 x i32> %2661, %2651
  %2670 = mul <8 x i32> %2664, %2652
  %2671 = mul <8 x i32> %2667, %2653
  %2672 = add nuw i64 %2649, 32
  %2673 = icmp eq i64 %2672, %2646
  br i1 %2673, label %2674, label %2648, !llvm.loop !1389

2674:                                             ; preds = %2648
  %2675 = mul <8 x i32> %2669, %2668
  %2676 = mul <8 x i32> %2670, %2675
  %2677 = mul <8 x i32> %2671, %2676
  %2678 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2677)
  %2679 = icmp eq i64 %2642, %2646
  br i1 %2679, label %2692, label %2680

2680:                                             ; preds = %2633, %2674
  %2681 = phi i64 [ %2636, %2633 ], [ %2647, %2674 ]
  %2682 = phi i32 [ 1, %2633 ], [ %2678, %2674 ]
  br label %2683

2683:                                             ; preds = %2680, %2683
  %2684 = phi i64 [ %2689, %2683 ], [ %2681, %2680 ]
  %2685 = phi i32 [ %2688, %2683 ], [ %2682, %2680 ]
  %2686 = getelementptr inbounds i32, ptr %11, i64 %2684
  %2687 = load i32, ptr %2686, align 4, !tbaa !5
  %2688 = mul nsw i32 %2687, %2685
  %2689 = add nsw i64 %2684, -1
  %2690 = trunc i64 %2684 to i32
  %2691 = icmp sgt i32 %2690, 0
  br i1 %2691, label %2683, label %2692, !llvm.loop !1390

2692:                                             ; preds = %2683, %2674
  %2693 = phi i32 [ %2678, %2674 ], [ %2688, %2683 ]
  %2694 = and i64 %2643, 4294967295
  %2695 = getelementptr inbounds i32, ptr %6, i64 %2694
  %2696 = load i32, ptr %2695, align 4, !tbaa !5
  %2697 = mul nsw i32 %2696, %2693
  %2698 = add nsw i32 %2697, %2637
  %2699 = icmp sgt i64 %2635, 2
  %2700 = add nsw i64 %2636, -1
  %2701 = add i32 %2634, 1
  br i1 %2699, label %2633, label %2702, !llvm.loop !1391

2702:                                             ; preds = %2692, %2630
  %2703 = phi i32 [ %2632, %2630 ], [ %2698, %2692 ]
  %2704 = icmp slt i32 %2703, %5
  br i1 %2704, label %2707, label %2705

2705:                                             ; preds = %2702
  %2706 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

2707:                                             ; preds = %2702
  %2708 = sext i32 %2703 to i64
  %2709 = getelementptr inbounds double, ptr %2459, i64 %2708
  %2710 = load double, ptr %2709, align 8, !tbaa !18
  %2711 = fptosi double %2710 to i32
  %2712 = load i32, ptr %2461, align 4, !tbaa !5
  %2713 = sitofp i32 %2712 to double
  %2714 = sitofp i32 %2711 to double
  %2715 = fmul fast double %2714, %2714
  %2716 = fadd fast double %2715, %2713
  %2717 = fptosi double %2716 to i32
  store i32 %2717, ptr %2461, align 4, !tbaa !5
  %2718 = add nuw nsw i32 %2631, 1
  br i1 %2476, label %2719, label %2769

2719:                                             ; preds = %2707
  %2720 = load i32, ptr %4, align 4, !tbaa !5
  %2721 = load i32, ptr %12, align 4, !tbaa !5
  %2722 = add nsw i32 %2721, -1
  %2723 = icmp slt i32 %2720, %2722
  br i1 %2723, label %2746, label %2724

2724:                                             ; preds = %2719
  %2725 = icmp eq i32 %2720, %2722
  br i1 %2725, label %2726, label %2762

2726:                                             ; preds = %2724
  store i32 0, ptr %4, align 4, !tbaa !5
  %2727 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2727, ptr %6, align 4, !tbaa !5
  br i1 %2481, label %2769, label %2728

2728:                                             ; preds = %2726, %2756
  %2729 = phi i64 [ %2760, %2756 ], [ 1, %2726 ]
  %2730 = getelementptr inbounds i32, ptr %4, i64 %2729
  %2731 = load i32, ptr %2730, align 4, !tbaa !5
  %2732 = getelementptr inbounds i32, ptr %12, i64 %2729
  %2733 = load i32, ptr %2732, align 4, !tbaa !5
  %2734 = add nsw i32 %2733, -1
  %2735 = icmp slt i32 %2731, %2734
  br i1 %2735, label %2736, label %2754

2736:                                             ; preds = %2728
  br i1 %2723, label %2746, label %2737

2737:                                             ; preds = %2736
  %2738 = shl i64 %2729, 32
  %2739 = add i64 %2738, -4294967296
  %2740 = ashr exact i64 %2739, 32
  %2741 = getelementptr inbounds i32, ptr %7, i64 %2740
  %2742 = load i32, ptr %2741, align 4, !tbaa !5
  %2743 = getelementptr inbounds i32, ptr %6, i64 %2729
  %2744 = load i32, ptr %2743, align 4, !tbaa !5
  %2745 = add nsw i32 %2744, %2742
  store i32 %2745, ptr %2743, align 4, !tbaa !5
  br label %2764

2746:                                             ; preds = %2719, %2736
  %2747 = phi i32 [ %2731, %2736 ], [ %2720, %2719 ]
  %2748 = phi ptr [ %2730, %2736 ], [ %4, %2719 ]
  %2749 = phi i64 [ %2729, %2736 ], [ 0, %2719 ]
  %2750 = add nsw i32 %2747, 1
  store i32 %2750, ptr %2748, align 4, !tbaa !5
  %2751 = getelementptr inbounds i32, ptr %7, i64 %2749
  %2752 = load i32, ptr %2751, align 4, !tbaa !5
  %2753 = getelementptr inbounds i32, ptr %6, i64 %2749
  br label %2764

2754:                                             ; preds = %2728
  %2755 = icmp eq i32 %2731, %2734
  br i1 %2755, label %2756, label %2762

2756:                                             ; preds = %2754
  store i32 0, ptr %2730, align 4, !tbaa !5
  %2757 = getelementptr inbounds i32, ptr %8, i64 %2729
  %2758 = load i32, ptr %2757, align 4, !tbaa !5
  %2759 = getelementptr inbounds i32, ptr %6, i64 %2729
  store i32 %2758, ptr %2759, align 4, !tbaa !5
  %2760 = add nuw nsw i64 %2729, 1
  %2761 = icmp eq i64 %2760, %2479
  br i1 %2761, label %2769, label %2728, !llvm.loop !1392

2762:                                             ; preds = %2724, %2754
  %2763 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

2764:                                             ; preds = %2737, %2746
  %2765 = phi ptr [ %2753, %2746 ], [ %2730, %2737 ]
  %2766 = phi i32 [ %2752, %2746 ], [ 1, %2737 ]
  %2767 = load i32, ptr %2765, align 4, !tbaa !5
  %2768 = add nsw i32 %2767, %2766
  store i32 %2768, ptr %2765, align 4, !tbaa !5
  br label %2769

2769:                                             ; preds = %2756, %2764, %2726, %2707
  %2770 = icmp eq i32 %2718, %5
  br i1 %2770, label %5491, label %2630, !llvm.loop !1393

2771:                                             ; preds = %2467
  %2772 = getelementptr inbounds i32, ptr %3, i64 %19
  %2773 = load i32, ptr %2772, align 4, !tbaa !5
  %2774 = icmp eq i32 %2773, 0
  %2775 = icmp sgt i32 %5, 0
  br i1 %2774, label %2785, label %2776

2776:                                             ; preds = %2771
  br i1 %2775, label %2777, label %5491

2777:                                             ; preds = %2776
  %2778 = icmp sgt i32 %13, 1
  %2779 = icmp sgt i32 %13, 0
  %2780 = add i32 %13, -2
  %2781 = zext i32 %2780 to i64
  %2782 = zext i32 %13 to i64
  %2783 = add nuw i32 %5, 1
  %2784 = icmp eq i32 %13, 1
  br label %2927

2785:                                             ; preds = %2771
  br i1 %2775, label %2786, label %5491

2786:                                             ; preds = %2785
  %2787 = icmp sgt i32 %13, 1
  %2788 = icmp sgt i32 %13, 0
  %2789 = add i32 %13, -2
  %2790 = zext i32 %2789 to i64
  %2791 = zext i32 %13 to i64
  %2792 = add nuw i32 %5, 1
  %2793 = icmp eq i32 %13, 1
  br label %2794

2794:                                             ; preds = %2786, %2925
  %2795 = phi i32 [ 0, %2786 ], [ %2877, %2925 ]
  %2796 = phi double [ 0.000000e+00, %2786 ], [ %2876, %2925 ]
  %2797 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2787, label %2798, label %2867

2798:                                             ; preds = %2794, %2857
  %2799 = phi i32 [ %2866, %2857 ], [ 0, %2794 ]
  %2800 = phi i64 [ %2808, %2857 ], [ %2791, %2794 ]
  %2801 = phi i64 [ %2865, %2857 ], [ %2790, %2794 ]
  %2802 = phi i32 [ %2863, %2857 ], [ %2797, %2794 ]
  %2803 = sub i32 %2789, %2799
  %2804 = tail call i32 @llvm.smin.i32(i32 %2803, i32 0)
  %2805 = sub i32 %2803, %2804
  %2806 = zext i32 %2805 to i64
  %2807 = add nuw nsw i64 %2806, 1
  %2808 = add nsw i64 %2800, -1
  %2809 = icmp ult i32 %2805, 31
  br i1 %2809, label %2845, label %2810

2810:                                             ; preds = %2798
  %2811 = and i64 %2807, 8589934560
  %2812 = sub i64 %2801, %2811
  br label %2813

2813:                                             ; preds = %2813, %2810
  %2814 = phi i64 [ 0, %2810 ], [ %2837, %2813 ]
  %2815 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2833, %2813 ]
  %2816 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2834, %2813 ]
  %2817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2835, %2813 ]
  %2818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2810 ], [ %2836, %2813 ]
  %2819 = sub i64 %2801, %2814
  %2820 = getelementptr inbounds i32, ptr %9, i64 %2819
  %2821 = getelementptr inbounds i32, ptr %2820, i64 -7
  %2822 = load <8 x i32>, ptr %2821, align 4, !tbaa !5
  %2823 = shufflevector <8 x i32> %2822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2824 = getelementptr inbounds i32, ptr %2820, i64 -15
  %2825 = load <8 x i32>, ptr %2824, align 4, !tbaa !5
  %2826 = shufflevector <8 x i32> %2825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2827 = getelementptr inbounds i32, ptr %2820, i64 -23
  %2828 = load <8 x i32>, ptr %2827, align 4, !tbaa !5
  %2829 = shufflevector <8 x i32> %2828, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2830 = getelementptr inbounds i32, ptr %2820, i64 -31
  %2831 = load <8 x i32>, ptr %2830, align 4, !tbaa !5
  %2832 = shufflevector <8 x i32> %2831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2833 = mul <8 x i32> %2823, %2815
  %2834 = mul <8 x i32> %2826, %2816
  %2835 = mul <8 x i32> %2829, %2817
  %2836 = mul <8 x i32> %2832, %2818
  %2837 = add nuw i64 %2814, 32
  %2838 = icmp eq i64 %2837, %2811
  br i1 %2838, label %2839, label %2813, !llvm.loop !1394

2839:                                             ; preds = %2813
  %2840 = mul <8 x i32> %2834, %2833
  %2841 = mul <8 x i32> %2835, %2840
  %2842 = mul <8 x i32> %2836, %2841
  %2843 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2842)
  %2844 = icmp eq i64 %2807, %2811
  br i1 %2844, label %2857, label %2845

2845:                                             ; preds = %2798, %2839
  %2846 = phi i64 [ %2801, %2798 ], [ %2812, %2839 ]
  %2847 = phi i32 [ 1, %2798 ], [ %2843, %2839 ]
  br label %2848

2848:                                             ; preds = %2845, %2848
  %2849 = phi i64 [ %2854, %2848 ], [ %2846, %2845 ]
  %2850 = phi i32 [ %2853, %2848 ], [ %2847, %2845 ]
  %2851 = getelementptr inbounds i32, ptr %9, i64 %2849
  %2852 = load i32, ptr %2851, align 4, !tbaa !5
  %2853 = mul nsw i32 %2852, %2850
  %2854 = add nsw i64 %2849, -1
  %2855 = trunc i64 %2849 to i32
  %2856 = icmp sgt i32 %2855, 0
  br i1 %2856, label %2848, label %2857, !llvm.loop !1395

2857:                                             ; preds = %2848, %2839
  %2858 = phi i32 [ %2843, %2839 ], [ %2853, %2848 ]
  %2859 = and i64 %2808, 4294967295
  %2860 = getelementptr inbounds i32, ptr %6, i64 %2859
  %2861 = load i32, ptr %2860, align 4, !tbaa !5
  %2862 = mul nsw i32 %2861, %2858
  %2863 = add nsw i32 %2862, %2802
  %2864 = icmp sgt i64 %2800, 2
  %2865 = add nsw i64 %2801, -1
  %2866 = add i32 %2799, 1
  br i1 %2864, label %2798, label %2867, !llvm.loop !1396

2867:                                             ; preds = %2857, %2794
  %2868 = phi i32 [ %2797, %2794 ], [ %2863, %2857 ]
  %2869 = sext i32 %2868 to i64
  %2870 = getelementptr inbounds double, ptr %2459, i64 %2869
  %2871 = load double, ptr %2870, align 8, !tbaa !18
  %2872 = fptosi double %2871 to i32
  %2873 = load i32, ptr %2461, align 4, !tbaa !5
  %2874 = mul nsw i32 %2872, %2872
  %2875 = add nsw i32 %2874, %2873
  store i32 %2875, ptr %2461, align 4, !tbaa !5
  %2876 = fadd fast double %2796, 1.000000e+00
  %2877 = add nuw nsw i32 %2795, 1
  br i1 %2788, label %2878, label %2925

2878:                                             ; preds = %2867
  %2879 = load i32, ptr %4, align 4, !tbaa !5
  %2880 = load i32, ptr %12, align 4, !tbaa !5
  %2881 = add nsw i32 %2880, -1
  %2882 = icmp slt i32 %2879, %2881
  br i1 %2882, label %2902, label %2883

2883:                                             ; preds = %2878
  %2884 = icmp eq i32 %2879, %2881
  br i1 %2884, label %2885, label %2918

2885:                                             ; preds = %2883
  store i32 0, ptr %4, align 4, !tbaa !5
  %2886 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2886, ptr %6, align 4, !tbaa !5
  br i1 %2793, label %2925, label %2887

2887:                                             ; preds = %2885, %2912
  %2888 = phi i64 [ %2916, %2912 ], [ 1, %2885 ]
  %2889 = getelementptr inbounds i32, ptr %4, i64 %2888
  %2890 = load i32, ptr %2889, align 4, !tbaa !5
  %2891 = getelementptr inbounds i32, ptr %12, i64 %2888
  %2892 = load i32, ptr %2891, align 4, !tbaa !5
  %2893 = add nsw i32 %2892, -1
  %2894 = icmp slt i32 %2890, %2893
  br i1 %2894, label %2895, label %2910

2895:                                             ; preds = %2887
  br i1 %2882, label %2902, label %2896

2896:                                             ; preds = %2895
  %2897 = getelementptr inbounds i32, ptr %7, i64 %2888
  %2898 = load i32, ptr %2897, align 4, !tbaa !5
  %2899 = getelementptr inbounds i32, ptr %6, i64 %2888
  %2900 = load i32, ptr %2899, align 4, !tbaa !5
  %2901 = add nsw i32 %2900, %2898
  store i32 %2901, ptr %2899, align 4, !tbaa !5
  br label %2920

2902:                                             ; preds = %2878, %2895
  %2903 = phi i32 [ %2890, %2895 ], [ %2879, %2878 ]
  %2904 = phi ptr [ %2889, %2895 ], [ %4, %2878 ]
  %2905 = phi i64 [ %2888, %2895 ], [ 0, %2878 ]
  %2906 = add nsw i32 %2903, 1
  store i32 %2906, ptr %2904, align 4, !tbaa !5
  %2907 = getelementptr inbounds i32, ptr %7, i64 %2905
  %2908 = load i32, ptr %2907, align 4, !tbaa !5
  %2909 = getelementptr inbounds i32, ptr %6, i64 %2905
  br label %2920

2910:                                             ; preds = %2887
  %2911 = icmp eq i32 %2890, %2893
  br i1 %2911, label %2912, label %2918

2912:                                             ; preds = %2910
  store i32 0, ptr %2889, align 4, !tbaa !5
  %2913 = getelementptr inbounds i32, ptr %8, i64 %2888
  %2914 = load i32, ptr %2913, align 4, !tbaa !5
  %2915 = getelementptr inbounds i32, ptr %6, i64 %2888
  store i32 %2914, ptr %2915, align 4, !tbaa !5
  %2916 = add nuw nsw i64 %2888, 1
  %2917 = icmp eq i64 %2916, %2791
  br i1 %2917, label %2925, label %2887, !llvm.loop !1397

2918:                                             ; preds = %2883, %2910
  %2919 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

2920:                                             ; preds = %2896, %2902
  %2921 = phi ptr [ %2909, %2902 ], [ %2889, %2896 ]
  %2922 = phi i32 [ %2908, %2902 ], [ 1, %2896 ]
  %2923 = load i32, ptr %2921, align 4, !tbaa !5
  %2924 = add nsw i32 %2923, %2922
  store i32 %2924, ptr %2921, align 4, !tbaa !5
  br label %2925

2925:                                             ; preds = %2912, %2920, %2885, %2867
  %2926 = icmp eq i32 %2877, %5
  br i1 %2926, label %5491, label %2794, !llvm.loop !1398

2927:                                             ; preds = %2777, %3063
  %2928 = phi i32 [ 0, %2777 ], [ %3012, %3063 ]
  %2929 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2778, label %2930, label %2999

2930:                                             ; preds = %2927, %2989
  %2931 = phi i32 [ %2998, %2989 ], [ 0, %2927 ]
  %2932 = phi i64 [ %2940, %2989 ], [ %2782, %2927 ]
  %2933 = phi i64 [ %2997, %2989 ], [ %2781, %2927 ]
  %2934 = phi i32 [ %2995, %2989 ], [ %2929, %2927 ]
  %2935 = sub i32 %2780, %2931
  %2936 = tail call i32 @llvm.smin.i32(i32 %2935, i32 0)
  %2937 = sub i32 %2935, %2936
  %2938 = zext i32 %2937 to i64
  %2939 = add nuw nsw i64 %2938, 1
  %2940 = add nsw i64 %2932, -1
  %2941 = icmp ult i32 %2937, 31
  br i1 %2941, label %2977, label %2942

2942:                                             ; preds = %2930
  %2943 = and i64 %2939, 8589934560
  %2944 = sub i64 %2933, %2943
  br label %2945

2945:                                             ; preds = %2945, %2942
  %2946 = phi i64 [ 0, %2942 ], [ %2969, %2945 ]
  %2947 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2965, %2945 ]
  %2948 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2966, %2945 ]
  %2949 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2967, %2945 ]
  %2950 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2942 ], [ %2968, %2945 ]
  %2951 = sub i64 %2933, %2946
  %2952 = getelementptr inbounds i32, ptr %11, i64 %2951
  %2953 = getelementptr inbounds i32, ptr %2952, i64 -7
  %2954 = load <8 x i32>, ptr %2953, align 4, !tbaa !5
  %2955 = shufflevector <8 x i32> %2954, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2956 = getelementptr inbounds i32, ptr %2952, i64 -15
  %2957 = load <8 x i32>, ptr %2956, align 4, !tbaa !5
  %2958 = shufflevector <8 x i32> %2957, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2959 = getelementptr inbounds i32, ptr %2952, i64 -23
  %2960 = load <8 x i32>, ptr %2959, align 4, !tbaa !5
  %2961 = shufflevector <8 x i32> %2960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2962 = getelementptr inbounds i32, ptr %2952, i64 -31
  %2963 = load <8 x i32>, ptr %2962, align 4, !tbaa !5
  %2964 = shufflevector <8 x i32> %2963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2965 = mul <8 x i32> %2955, %2947
  %2966 = mul <8 x i32> %2958, %2948
  %2967 = mul <8 x i32> %2961, %2949
  %2968 = mul <8 x i32> %2964, %2950
  %2969 = add nuw i64 %2946, 32
  %2970 = icmp eq i64 %2969, %2943
  br i1 %2970, label %2971, label %2945, !llvm.loop !1399

2971:                                             ; preds = %2945
  %2972 = mul <8 x i32> %2966, %2965
  %2973 = mul <8 x i32> %2967, %2972
  %2974 = mul <8 x i32> %2968, %2973
  %2975 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2974)
  %2976 = icmp eq i64 %2939, %2943
  br i1 %2976, label %2989, label %2977

2977:                                             ; preds = %2930, %2971
  %2978 = phi i64 [ %2933, %2930 ], [ %2944, %2971 ]
  %2979 = phi i32 [ 1, %2930 ], [ %2975, %2971 ]
  br label %2980

2980:                                             ; preds = %2977, %2980
  %2981 = phi i64 [ %2986, %2980 ], [ %2978, %2977 ]
  %2982 = phi i32 [ %2985, %2980 ], [ %2979, %2977 ]
  %2983 = getelementptr inbounds i32, ptr %11, i64 %2981
  %2984 = load i32, ptr %2983, align 4, !tbaa !5
  %2985 = mul nsw i32 %2984, %2982
  %2986 = add nsw i64 %2981, -1
  %2987 = trunc i64 %2981 to i32
  %2988 = icmp sgt i32 %2987, 0
  br i1 %2988, label %2980, label %2989, !llvm.loop !1400

2989:                                             ; preds = %2980, %2971
  %2990 = phi i32 [ %2975, %2971 ], [ %2985, %2980 ]
  %2991 = and i64 %2940, 4294967295
  %2992 = getelementptr inbounds i32, ptr %6, i64 %2991
  %2993 = load i32, ptr %2992, align 4, !tbaa !5
  %2994 = mul nsw i32 %2993, %2990
  %2995 = add nsw i32 %2994, %2934
  %2996 = icmp sgt i64 %2932, 2
  %2997 = add nsw i64 %2933, -1
  %2998 = add i32 %2931, 1
  br i1 %2996, label %2930, label %2999, !llvm.loop !1401

2999:                                             ; preds = %2989, %2927
  %3000 = phi i32 [ %2929, %2927 ], [ %2995, %2989 ]
  %3001 = icmp slt i32 %3000, %5
  br i1 %3001, label %3004, label %3002

3002:                                             ; preds = %2999
  %3003 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

3004:                                             ; preds = %2999
  %3005 = sext i32 %3000 to i64
  %3006 = getelementptr inbounds double, ptr %2459, i64 %3005
  %3007 = load double, ptr %3006, align 8, !tbaa !18
  %3008 = fptosi double %3007 to i32
  %3009 = load i32, ptr %2461, align 4, !tbaa !5
  %3010 = mul nsw i32 %3008, %3008
  %3011 = add nsw i32 %3010, %3009
  store i32 %3011, ptr %2461, align 4, !tbaa !5
  %3012 = add nuw nsw i32 %2928, 1
  br i1 %2779, label %3013, label %3063

3013:                                             ; preds = %3004
  %3014 = load i32, ptr %4, align 4, !tbaa !5
  %3015 = load i32, ptr %12, align 4, !tbaa !5
  %3016 = add nsw i32 %3015, -1
  %3017 = icmp slt i32 %3014, %3016
  br i1 %3017, label %3040, label %3018

3018:                                             ; preds = %3013
  %3019 = icmp eq i32 %3014, %3016
  br i1 %3019, label %3020, label %3056

3020:                                             ; preds = %3018
  store i32 0, ptr %4, align 4, !tbaa !5
  %3021 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3021, ptr %6, align 4, !tbaa !5
  br i1 %2784, label %3063, label %3022

3022:                                             ; preds = %3020, %3050
  %3023 = phi i64 [ %3054, %3050 ], [ 1, %3020 ]
  %3024 = getelementptr inbounds i32, ptr %4, i64 %3023
  %3025 = load i32, ptr %3024, align 4, !tbaa !5
  %3026 = getelementptr inbounds i32, ptr %12, i64 %3023
  %3027 = load i32, ptr %3026, align 4, !tbaa !5
  %3028 = add nsw i32 %3027, -1
  %3029 = icmp slt i32 %3025, %3028
  br i1 %3029, label %3030, label %3048

3030:                                             ; preds = %3022
  br i1 %3017, label %3040, label %3031

3031:                                             ; preds = %3030
  %3032 = shl i64 %3023, 32
  %3033 = add i64 %3032, -4294967296
  %3034 = ashr exact i64 %3033, 32
  %3035 = getelementptr inbounds i32, ptr %7, i64 %3034
  %3036 = load i32, ptr %3035, align 4, !tbaa !5
  %3037 = getelementptr inbounds i32, ptr %6, i64 %3023
  %3038 = load i32, ptr %3037, align 4, !tbaa !5
  %3039 = add nsw i32 %3038, %3036
  store i32 %3039, ptr %3037, align 4, !tbaa !5
  br label %3058

3040:                                             ; preds = %3013, %3030
  %3041 = phi i32 [ %3025, %3030 ], [ %3014, %3013 ]
  %3042 = phi ptr [ %3024, %3030 ], [ %4, %3013 ]
  %3043 = phi i64 [ %3023, %3030 ], [ 0, %3013 ]
  %3044 = add nsw i32 %3041, 1
  store i32 %3044, ptr %3042, align 4, !tbaa !5
  %3045 = getelementptr inbounds i32, ptr %7, i64 %3043
  %3046 = load i32, ptr %3045, align 4, !tbaa !5
  %3047 = getelementptr inbounds i32, ptr %6, i64 %3043
  br label %3058

3048:                                             ; preds = %3022
  %3049 = icmp eq i32 %3025, %3028
  br i1 %3049, label %3050, label %3056

3050:                                             ; preds = %3048
  store i32 0, ptr %3024, align 4, !tbaa !5
  %3051 = getelementptr inbounds i32, ptr %8, i64 %3023
  %3052 = load i32, ptr %3051, align 4, !tbaa !5
  %3053 = getelementptr inbounds i32, ptr %6, i64 %3023
  store i32 %3052, ptr %3053, align 4, !tbaa !5
  %3054 = add nuw nsw i64 %3023, 1
  %3055 = icmp eq i64 %3054, %2782
  br i1 %3055, label %3063, label %3022, !llvm.loop !1402

3056:                                             ; preds = %3018, %3048
  %3057 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

3058:                                             ; preds = %3031, %3040
  %3059 = phi ptr [ %3047, %3040 ], [ %3024, %3031 ]
  %3060 = phi i32 [ %3046, %3040 ], [ 1, %3031 ]
  %3061 = load i32, ptr %3059, align 4, !tbaa !5
  %3062 = add nsw i32 %3061, %3060
  store i32 %3062, ptr %3059, align 4, !tbaa !5
  br label %3063

3063:                                             ; preds = %3050, %3058, %3020, %3004
  %3064 = icmp eq i32 %3012, %5
  br i1 %3064, label %5491, label %2927, !llvm.loop !1403

3065:                                             ; preds = %2467
  %3066 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2292, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

3067:                                             ; preds = %18
  %3068 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3069 = load ptr, ptr %3068, align 8, !tbaa !9
  %3070 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3071 = load ptr, ptr %3070, align 8, !tbaa !9
  store i64 0, ptr %3071, align 8, !tbaa !120
  %3072 = icmp eq i32 %13, 0
  br i1 %3072, label %3073, label %3077

3073:                                             ; preds = %3067
  %3074 = load double, ptr %3069, align 8, !tbaa !18
  %3075 = fptosi double %3074 to i64
  %3076 = mul nsw i64 %3075, %3075
  store i64 %3076, ptr %3071, align 8, !tbaa !120
  br label %5491

3077:                                             ; preds = %3067
  switch i32 %1, label %3675 [
    i32 1, label %3078
    i32 0, label %3381
  ]

3078:                                             ; preds = %3077
  %3079 = getelementptr inbounds i32, ptr %3, i64 %19
  %3080 = load i32, ptr %3079, align 4, !tbaa !5
  %3081 = icmp eq i32 %3080, 0
  %3082 = icmp sgt i32 %5, 0
  br i1 %3081, label %3092, label %3083

3083:                                             ; preds = %3078
  br i1 %3082, label %3084, label %5491

3084:                                             ; preds = %3083
  %3085 = icmp sgt i32 %13, 1
  %3086 = icmp sgt i32 %13, 0
  %3087 = add i32 %13, -2
  %3088 = zext i32 %3087 to i64
  %3089 = zext i32 %13 to i64
  %3090 = add nuw i32 %5, 1
  %3091 = icmp eq i32 %13, 1
  br label %3240

3092:                                             ; preds = %3078
  br i1 %3082, label %3093, label %5491

3093:                                             ; preds = %3092
  %3094 = icmp sgt i32 %13, 1
  %3095 = icmp sgt i32 %13, 0
  %3096 = add i32 %13, -2
  %3097 = zext i32 %3096 to i64
  %3098 = zext i32 %13 to i64
  %3099 = add nuw i32 %5, 1
  %3100 = icmp eq i32 %13, 1
  br label %3101

3101:                                             ; preds = %3093, %3238
  %3102 = phi i64 [ 0, %3093 ], [ %3188, %3238 ]
  %3103 = phi i32 [ 0, %3093 ], [ %3190, %3238 ]
  %3104 = phi double [ 0.000000e+00, %3093 ], [ %3189, %3238 ]
  %3105 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3094, label %3106, label %3175

3106:                                             ; preds = %3101, %3165
  %3107 = phi i32 [ %3174, %3165 ], [ 0, %3101 ]
  %3108 = phi i64 [ %3116, %3165 ], [ %3098, %3101 ]
  %3109 = phi i64 [ %3173, %3165 ], [ %3097, %3101 ]
  %3110 = phi i32 [ %3171, %3165 ], [ %3105, %3101 ]
  %3111 = sub i32 %3096, %3107
  %3112 = tail call i32 @llvm.smin.i32(i32 %3111, i32 0)
  %3113 = sub i32 %3111, %3112
  %3114 = zext i32 %3113 to i64
  %3115 = add nuw nsw i64 %3114, 1
  %3116 = add nsw i64 %3108, -1
  %3117 = icmp ult i32 %3113, 31
  br i1 %3117, label %3153, label %3118

3118:                                             ; preds = %3106
  %3119 = and i64 %3115, 8589934560
  %3120 = sub i64 %3109, %3119
  br label %3121

3121:                                             ; preds = %3121, %3118
  %3122 = phi i64 [ 0, %3118 ], [ %3145, %3121 ]
  %3123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3141, %3121 ]
  %3124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3142, %3121 ]
  %3125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3143, %3121 ]
  %3126 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3118 ], [ %3144, %3121 ]
  %3127 = sub i64 %3109, %3122
  %3128 = getelementptr inbounds i32, ptr %9, i64 %3127
  %3129 = getelementptr inbounds i32, ptr %3128, i64 -7
  %3130 = load <8 x i32>, ptr %3129, align 4, !tbaa !5
  %3131 = shufflevector <8 x i32> %3130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3132 = getelementptr inbounds i32, ptr %3128, i64 -15
  %3133 = load <8 x i32>, ptr %3132, align 4, !tbaa !5
  %3134 = shufflevector <8 x i32> %3133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3135 = getelementptr inbounds i32, ptr %3128, i64 -23
  %3136 = load <8 x i32>, ptr %3135, align 4, !tbaa !5
  %3137 = shufflevector <8 x i32> %3136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3138 = getelementptr inbounds i32, ptr %3128, i64 -31
  %3139 = load <8 x i32>, ptr %3138, align 4, !tbaa !5
  %3140 = shufflevector <8 x i32> %3139, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3141 = mul <8 x i32> %3131, %3123
  %3142 = mul <8 x i32> %3134, %3124
  %3143 = mul <8 x i32> %3137, %3125
  %3144 = mul <8 x i32> %3140, %3126
  %3145 = add nuw i64 %3122, 32
  %3146 = icmp eq i64 %3145, %3119
  br i1 %3146, label %3147, label %3121, !llvm.loop !1404

3147:                                             ; preds = %3121
  %3148 = mul <8 x i32> %3142, %3141
  %3149 = mul <8 x i32> %3143, %3148
  %3150 = mul <8 x i32> %3144, %3149
  %3151 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3150)
  %3152 = icmp eq i64 %3115, %3119
  br i1 %3152, label %3165, label %3153

3153:                                             ; preds = %3106, %3147
  %3154 = phi i64 [ %3109, %3106 ], [ %3120, %3147 ]
  %3155 = phi i32 [ 1, %3106 ], [ %3151, %3147 ]
  br label %3156

3156:                                             ; preds = %3153, %3156
  %3157 = phi i64 [ %3162, %3156 ], [ %3154, %3153 ]
  %3158 = phi i32 [ %3161, %3156 ], [ %3155, %3153 ]
  %3159 = getelementptr inbounds i32, ptr %9, i64 %3157
  %3160 = load i32, ptr %3159, align 4, !tbaa !5
  %3161 = mul nsw i32 %3160, %3158
  %3162 = add nsw i64 %3157, -1
  %3163 = trunc i64 %3157 to i32
  %3164 = icmp sgt i32 %3163, 0
  br i1 %3164, label %3156, label %3165, !llvm.loop !1405

3165:                                             ; preds = %3156, %3147
  %3166 = phi i32 [ %3151, %3147 ], [ %3161, %3156 ]
  %3167 = and i64 %3116, 4294967295
  %3168 = getelementptr inbounds i32, ptr %6, i64 %3167
  %3169 = load i32, ptr %3168, align 4, !tbaa !5
  %3170 = mul nsw i32 %3169, %3166
  %3171 = add nsw i32 %3170, %3110
  %3172 = icmp sgt i64 %3108, 2
  %3173 = add nsw i64 %3109, -1
  %3174 = add i32 %3107, 1
  br i1 %3172, label %3106, label %3175, !llvm.loop !1406

3175:                                             ; preds = %3165, %3101
  %3176 = phi i32 [ %3105, %3101 ], [ %3171, %3165 ]
  %3177 = sext i32 %3176 to i64
  %3178 = getelementptr inbounds double, ptr %2, i64 %3177
  %3179 = load double, ptr %3178, align 8, !tbaa !18
  %3180 = getelementptr inbounds double, ptr %3069, i64 %3177
  %3181 = load double, ptr %3180, align 8, !tbaa !18
  %3182 = fptosi double %3181 to i64
  %3183 = sitofp i64 %3102 to double
  %3184 = sitofp i64 %3182 to double
  %3185 = fmul fast double %3179, %3184
  %3186 = fmul fast double %3185, %3185
  %3187 = fadd fast double %3186, %3183
  %3188 = fptosi double %3187 to i64
  %3189 = fadd fast double %3179, %3104
  %3190 = add nuw nsw i32 %3103, 1
  br i1 %3095, label %3191, label %3238

3191:                                             ; preds = %3175
  %3192 = load i32, ptr %4, align 4, !tbaa !5
  %3193 = load i32, ptr %12, align 4, !tbaa !5
  %3194 = add nsw i32 %3193, -1
  %3195 = icmp slt i32 %3192, %3194
  br i1 %3195, label %3215, label %3196

3196:                                             ; preds = %3191
  %3197 = icmp eq i32 %3192, %3194
  br i1 %3197, label %3198, label %3231

3198:                                             ; preds = %3196
  store i32 0, ptr %4, align 4, !tbaa !5
  %3199 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3199, ptr %6, align 4, !tbaa !5
  br i1 %3100, label %3238, label %3200

3200:                                             ; preds = %3198, %3225
  %3201 = phi i64 [ %3229, %3225 ], [ 1, %3198 ]
  %3202 = getelementptr inbounds i32, ptr %4, i64 %3201
  %3203 = load i32, ptr %3202, align 4, !tbaa !5
  %3204 = getelementptr inbounds i32, ptr %12, i64 %3201
  %3205 = load i32, ptr %3204, align 4, !tbaa !5
  %3206 = add nsw i32 %3205, -1
  %3207 = icmp slt i32 %3203, %3206
  br i1 %3207, label %3208, label %3223

3208:                                             ; preds = %3200
  br i1 %3195, label %3215, label %3209

3209:                                             ; preds = %3208
  %3210 = getelementptr inbounds i32, ptr %7, i64 %3201
  %3211 = load i32, ptr %3210, align 4, !tbaa !5
  %3212 = getelementptr inbounds i32, ptr %6, i64 %3201
  %3213 = load i32, ptr %3212, align 4, !tbaa !5
  %3214 = add nsw i32 %3213, %3211
  store i32 %3214, ptr %3212, align 4, !tbaa !5
  br label %3233

3215:                                             ; preds = %3191, %3208
  %3216 = phi i32 [ %3203, %3208 ], [ %3192, %3191 ]
  %3217 = phi ptr [ %3202, %3208 ], [ %4, %3191 ]
  %3218 = phi i64 [ %3201, %3208 ], [ 0, %3191 ]
  %3219 = add nsw i32 %3216, 1
  store i32 %3219, ptr %3217, align 4, !tbaa !5
  %3220 = getelementptr inbounds i32, ptr %7, i64 %3218
  %3221 = load i32, ptr %3220, align 4, !tbaa !5
  %3222 = getelementptr inbounds i32, ptr %6, i64 %3218
  br label %3233

3223:                                             ; preds = %3200
  %3224 = icmp eq i32 %3203, %3206
  br i1 %3224, label %3225, label %3231

3225:                                             ; preds = %3223
  store i32 0, ptr %3202, align 4, !tbaa !5
  %3226 = getelementptr inbounds i32, ptr %8, i64 %3201
  %3227 = load i32, ptr %3226, align 4, !tbaa !5
  %3228 = getelementptr inbounds i32, ptr %6, i64 %3201
  store i32 %3227, ptr %3228, align 4, !tbaa !5
  %3229 = add nuw nsw i64 %3201, 1
  %3230 = icmp eq i64 %3229, %3098
  br i1 %3230, label %3238, label %3200, !llvm.loop !1407

3231:                                             ; preds = %3196, %3223
  store i64 %3188, ptr %3071, align 8, !tbaa !120
  %3232 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

3233:                                             ; preds = %3209, %3215
  %3234 = phi ptr [ %3222, %3215 ], [ %3202, %3209 ]
  %3235 = phi i32 [ %3221, %3215 ], [ 1, %3209 ]
  %3236 = load i32, ptr %3234, align 4, !tbaa !5
  %3237 = add nsw i32 %3236, %3235
  store i32 %3237, ptr %3234, align 4, !tbaa !5
  br label %3238

3238:                                             ; preds = %3225, %3233, %3198, %3175
  %3239 = icmp eq i32 %3190, %5
  br i1 %3239, label %5487, label %3101, !llvm.loop !1408

3240:                                             ; preds = %3084, %3379
  %3241 = phi i64 [ 0, %3084 ], [ %3327, %3379 ]
  %3242 = phi i32 [ 0, %3084 ], [ %3328, %3379 ]
  %3243 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3085, label %3244, label %3313

3244:                                             ; preds = %3240, %3303
  %3245 = phi i32 [ %3312, %3303 ], [ 0, %3240 ]
  %3246 = phi i64 [ %3254, %3303 ], [ %3089, %3240 ]
  %3247 = phi i64 [ %3311, %3303 ], [ %3088, %3240 ]
  %3248 = phi i32 [ %3309, %3303 ], [ %3243, %3240 ]
  %3249 = sub i32 %3087, %3245
  %3250 = tail call i32 @llvm.smin.i32(i32 %3249, i32 0)
  %3251 = sub i32 %3249, %3250
  %3252 = zext i32 %3251 to i64
  %3253 = add nuw nsw i64 %3252, 1
  %3254 = add nsw i64 %3246, -1
  %3255 = icmp ult i32 %3251, 31
  br i1 %3255, label %3291, label %3256

3256:                                             ; preds = %3244
  %3257 = and i64 %3253, 8589934560
  %3258 = sub i64 %3247, %3257
  br label %3259

3259:                                             ; preds = %3259, %3256
  %3260 = phi i64 [ 0, %3256 ], [ %3283, %3259 ]
  %3261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3256 ], [ %3279, %3259 ]
  %3262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3256 ], [ %3280, %3259 ]
  %3263 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3256 ], [ %3281, %3259 ]
  %3264 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3256 ], [ %3282, %3259 ]
  %3265 = sub i64 %3247, %3260
  %3266 = getelementptr inbounds i32, ptr %11, i64 %3265
  %3267 = getelementptr inbounds i32, ptr %3266, i64 -7
  %3268 = load <8 x i32>, ptr %3267, align 4, !tbaa !5
  %3269 = shufflevector <8 x i32> %3268, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3270 = getelementptr inbounds i32, ptr %3266, i64 -15
  %3271 = load <8 x i32>, ptr %3270, align 4, !tbaa !5
  %3272 = shufflevector <8 x i32> %3271, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3273 = getelementptr inbounds i32, ptr %3266, i64 -23
  %3274 = load <8 x i32>, ptr %3273, align 4, !tbaa !5
  %3275 = shufflevector <8 x i32> %3274, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3276 = getelementptr inbounds i32, ptr %3266, i64 -31
  %3277 = load <8 x i32>, ptr %3276, align 4, !tbaa !5
  %3278 = shufflevector <8 x i32> %3277, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3279 = mul <8 x i32> %3269, %3261
  %3280 = mul <8 x i32> %3272, %3262
  %3281 = mul <8 x i32> %3275, %3263
  %3282 = mul <8 x i32> %3278, %3264
  %3283 = add nuw i64 %3260, 32
  %3284 = icmp eq i64 %3283, %3257
  br i1 %3284, label %3285, label %3259, !llvm.loop !1409

3285:                                             ; preds = %3259
  %3286 = mul <8 x i32> %3280, %3279
  %3287 = mul <8 x i32> %3281, %3286
  %3288 = mul <8 x i32> %3282, %3287
  %3289 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3288)
  %3290 = icmp eq i64 %3253, %3257
  br i1 %3290, label %3303, label %3291

3291:                                             ; preds = %3244, %3285
  %3292 = phi i64 [ %3247, %3244 ], [ %3258, %3285 ]
  %3293 = phi i32 [ 1, %3244 ], [ %3289, %3285 ]
  br label %3294

3294:                                             ; preds = %3291, %3294
  %3295 = phi i64 [ %3300, %3294 ], [ %3292, %3291 ]
  %3296 = phi i32 [ %3299, %3294 ], [ %3293, %3291 ]
  %3297 = getelementptr inbounds i32, ptr %11, i64 %3295
  %3298 = load i32, ptr %3297, align 4, !tbaa !5
  %3299 = mul nsw i32 %3298, %3296
  %3300 = add nsw i64 %3295, -1
  %3301 = trunc i64 %3295 to i32
  %3302 = icmp sgt i32 %3301, 0
  br i1 %3302, label %3294, label %3303, !llvm.loop !1410

3303:                                             ; preds = %3294, %3285
  %3304 = phi i32 [ %3289, %3285 ], [ %3299, %3294 ]
  %3305 = and i64 %3254, 4294967295
  %3306 = getelementptr inbounds i32, ptr %6, i64 %3305
  %3307 = load i32, ptr %3306, align 4, !tbaa !5
  %3308 = mul nsw i32 %3307, %3304
  %3309 = add nsw i32 %3308, %3248
  %3310 = icmp sgt i64 %3246, 2
  %3311 = add nsw i64 %3247, -1
  %3312 = add i32 %3245, 1
  br i1 %3310, label %3244, label %3313, !llvm.loop !1411

3313:                                             ; preds = %3303, %3240
  %3314 = phi i32 [ %3243, %3240 ], [ %3309, %3303 ]
  %3315 = icmp slt i32 %3314, %5
  br i1 %3315, label %3318, label %3316

3316:                                             ; preds = %3313
  %3317 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

3318:                                             ; preds = %3313
  %3319 = sext i32 %3314 to i64
  %3320 = getelementptr inbounds double, ptr %3069, i64 %3319
  %3321 = load double, ptr %3320, align 8, !tbaa !18
  %3322 = fptosi double %3321 to i64
  %3323 = sitofp i64 %3241 to double
  %3324 = sitofp i64 %3322 to double
  %3325 = fmul fast double %3324, %3324
  %3326 = fadd fast double %3325, %3323
  %3327 = fptosi double %3326 to i64
  store i64 %3327, ptr %3071, align 8, !tbaa !120
  %3328 = add nuw nsw i32 %3242, 1
  br i1 %3086, label %3329, label %3379

3329:                                             ; preds = %3318
  %3330 = load i32, ptr %4, align 4, !tbaa !5
  %3331 = load i32, ptr %12, align 4, !tbaa !5
  %3332 = add nsw i32 %3331, -1
  %3333 = icmp slt i32 %3330, %3332
  br i1 %3333, label %3356, label %3334

3334:                                             ; preds = %3329
  %3335 = icmp eq i32 %3330, %3332
  br i1 %3335, label %3336, label %3372

3336:                                             ; preds = %3334
  store i32 0, ptr %4, align 4, !tbaa !5
  %3337 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3337, ptr %6, align 4, !tbaa !5
  br i1 %3091, label %3379, label %3338

3338:                                             ; preds = %3336, %3366
  %3339 = phi i64 [ %3370, %3366 ], [ 1, %3336 ]
  %3340 = getelementptr inbounds i32, ptr %4, i64 %3339
  %3341 = load i32, ptr %3340, align 4, !tbaa !5
  %3342 = getelementptr inbounds i32, ptr %12, i64 %3339
  %3343 = load i32, ptr %3342, align 4, !tbaa !5
  %3344 = add nsw i32 %3343, -1
  %3345 = icmp slt i32 %3341, %3344
  br i1 %3345, label %3346, label %3364

3346:                                             ; preds = %3338
  br i1 %3333, label %3356, label %3347

3347:                                             ; preds = %3346
  %3348 = shl i64 %3339, 32
  %3349 = add i64 %3348, -4294967296
  %3350 = ashr exact i64 %3349, 32
  %3351 = getelementptr inbounds i32, ptr %7, i64 %3350
  %3352 = load i32, ptr %3351, align 4, !tbaa !5
  %3353 = getelementptr inbounds i32, ptr %6, i64 %3339
  %3354 = load i32, ptr %3353, align 4, !tbaa !5
  %3355 = add nsw i32 %3354, %3352
  store i32 %3355, ptr %3353, align 4, !tbaa !5
  br label %3374

3356:                                             ; preds = %3329, %3346
  %3357 = phi i32 [ %3341, %3346 ], [ %3330, %3329 ]
  %3358 = phi ptr [ %3340, %3346 ], [ %4, %3329 ]
  %3359 = phi i64 [ %3339, %3346 ], [ 0, %3329 ]
  %3360 = add nsw i32 %3357, 1
  store i32 %3360, ptr %3358, align 4, !tbaa !5
  %3361 = getelementptr inbounds i32, ptr %7, i64 %3359
  %3362 = load i32, ptr %3361, align 4, !tbaa !5
  %3363 = getelementptr inbounds i32, ptr %6, i64 %3359
  br label %3374

3364:                                             ; preds = %3338
  %3365 = icmp eq i32 %3341, %3344
  br i1 %3365, label %3366, label %3372

3366:                                             ; preds = %3364
  store i32 0, ptr %3340, align 4, !tbaa !5
  %3367 = getelementptr inbounds i32, ptr %8, i64 %3339
  %3368 = load i32, ptr %3367, align 4, !tbaa !5
  %3369 = getelementptr inbounds i32, ptr %6, i64 %3339
  store i32 %3368, ptr %3369, align 4, !tbaa !5
  %3370 = add nuw nsw i64 %3339, 1
  %3371 = icmp eq i64 %3370, %3089
  br i1 %3371, label %3379, label %3338, !llvm.loop !1412

3372:                                             ; preds = %3334, %3364
  %3373 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

3374:                                             ; preds = %3347, %3356
  %3375 = phi ptr [ %3363, %3356 ], [ %3340, %3347 ]
  %3376 = phi i32 [ %3362, %3356 ], [ 1, %3347 ]
  %3377 = load i32, ptr %3375, align 4, !tbaa !5
  %3378 = add nsw i32 %3377, %3376
  store i32 %3378, ptr %3375, align 4, !tbaa !5
  br label %3379

3379:                                             ; preds = %3366, %3374, %3336, %3318
  %3380 = icmp eq i32 %3328, %5
  br i1 %3380, label %5491, label %3240, !llvm.loop !1413

3381:                                             ; preds = %3077
  %3382 = getelementptr inbounds i32, ptr %3, i64 %19
  %3383 = load i32, ptr %3382, align 4, !tbaa !5
  %3384 = icmp eq i32 %3383, 0
  %3385 = icmp sgt i32 %5, 0
  br i1 %3384, label %3395, label %3386

3386:                                             ; preds = %3381
  br i1 %3385, label %3387, label %5491

3387:                                             ; preds = %3386
  %3388 = icmp sgt i32 %13, 1
  %3389 = icmp sgt i32 %13, 0
  %3390 = add i32 %13, -2
  %3391 = zext i32 %3390 to i64
  %3392 = zext i32 %13 to i64
  %3393 = add nuw i32 %5, 1
  %3394 = icmp eq i32 %13, 1
  br label %3537

3395:                                             ; preds = %3381
  br i1 %3385, label %3396, label %5491

3396:                                             ; preds = %3395
  %3397 = icmp sgt i32 %13, 1
  %3398 = icmp sgt i32 %13, 0
  %3399 = add i32 %13, -2
  %3400 = zext i32 %3399 to i64
  %3401 = zext i32 %13 to i64
  %3402 = add nuw i32 %5, 1
  %3403 = icmp eq i32 %13, 1
  br label %3404

3404:                                             ; preds = %3396, %3535
  %3405 = phi i64 [ 0, %3396 ], [ %3485, %3535 ]
  %3406 = phi i32 [ 0, %3396 ], [ %3487, %3535 ]
  %3407 = phi double [ 0.000000e+00, %3396 ], [ %3486, %3535 ]
  %3408 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3397, label %3409, label %3478

3409:                                             ; preds = %3404, %3468
  %3410 = phi i32 [ %3477, %3468 ], [ 0, %3404 ]
  %3411 = phi i64 [ %3419, %3468 ], [ %3401, %3404 ]
  %3412 = phi i64 [ %3476, %3468 ], [ %3400, %3404 ]
  %3413 = phi i32 [ %3474, %3468 ], [ %3408, %3404 ]
  %3414 = sub i32 %3399, %3410
  %3415 = tail call i32 @llvm.smin.i32(i32 %3414, i32 0)
  %3416 = sub i32 %3414, %3415
  %3417 = zext i32 %3416 to i64
  %3418 = add nuw nsw i64 %3417, 1
  %3419 = add nsw i64 %3411, -1
  %3420 = icmp ult i32 %3416, 31
  br i1 %3420, label %3456, label %3421

3421:                                             ; preds = %3409
  %3422 = and i64 %3418, 8589934560
  %3423 = sub i64 %3412, %3422
  br label %3424

3424:                                             ; preds = %3424, %3421
  %3425 = phi i64 [ 0, %3421 ], [ %3448, %3424 ]
  %3426 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3421 ], [ %3444, %3424 ]
  %3427 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3421 ], [ %3445, %3424 ]
  %3428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3421 ], [ %3446, %3424 ]
  %3429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3421 ], [ %3447, %3424 ]
  %3430 = sub i64 %3412, %3425
  %3431 = getelementptr inbounds i32, ptr %9, i64 %3430
  %3432 = getelementptr inbounds i32, ptr %3431, i64 -7
  %3433 = load <8 x i32>, ptr %3432, align 4, !tbaa !5
  %3434 = shufflevector <8 x i32> %3433, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3435 = getelementptr inbounds i32, ptr %3431, i64 -15
  %3436 = load <8 x i32>, ptr %3435, align 4, !tbaa !5
  %3437 = shufflevector <8 x i32> %3436, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3438 = getelementptr inbounds i32, ptr %3431, i64 -23
  %3439 = load <8 x i32>, ptr %3438, align 4, !tbaa !5
  %3440 = shufflevector <8 x i32> %3439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3441 = getelementptr inbounds i32, ptr %3431, i64 -31
  %3442 = load <8 x i32>, ptr %3441, align 4, !tbaa !5
  %3443 = shufflevector <8 x i32> %3442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3444 = mul <8 x i32> %3434, %3426
  %3445 = mul <8 x i32> %3437, %3427
  %3446 = mul <8 x i32> %3440, %3428
  %3447 = mul <8 x i32> %3443, %3429
  %3448 = add nuw i64 %3425, 32
  %3449 = icmp eq i64 %3448, %3422
  br i1 %3449, label %3450, label %3424, !llvm.loop !1414

3450:                                             ; preds = %3424
  %3451 = mul <8 x i32> %3445, %3444
  %3452 = mul <8 x i32> %3446, %3451
  %3453 = mul <8 x i32> %3447, %3452
  %3454 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3453)
  %3455 = icmp eq i64 %3418, %3422
  br i1 %3455, label %3468, label %3456

3456:                                             ; preds = %3409, %3450
  %3457 = phi i64 [ %3412, %3409 ], [ %3423, %3450 ]
  %3458 = phi i32 [ 1, %3409 ], [ %3454, %3450 ]
  br label %3459

3459:                                             ; preds = %3456, %3459
  %3460 = phi i64 [ %3465, %3459 ], [ %3457, %3456 ]
  %3461 = phi i32 [ %3464, %3459 ], [ %3458, %3456 ]
  %3462 = getelementptr inbounds i32, ptr %9, i64 %3460
  %3463 = load i32, ptr %3462, align 4, !tbaa !5
  %3464 = mul nsw i32 %3463, %3461
  %3465 = add nsw i64 %3460, -1
  %3466 = trunc i64 %3460 to i32
  %3467 = icmp sgt i32 %3466, 0
  br i1 %3467, label %3459, label %3468, !llvm.loop !1415

3468:                                             ; preds = %3459, %3450
  %3469 = phi i32 [ %3454, %3450 ], [ %3464, %3459 ]
  %3470 = and i64 %3419, 4294967295
  %3471 = getelementptr inbounds i32, ptr %6, i64 %3470
  %3472 = load i32, ptr %3471, align 4, !tbaa !5
  %3473 = mul nsw i32 %3472, %3469
  %3474 = add nsw i32 %3473, %3413
  %3475 = icmp sgt i64 %3411, 2
  %3476 = add nsw i64 %3412, -1
  %3477 = add i32 %3410, 1
  br i1 %3475, label %3409, label %3478, !llvm.loop !1416

3478:                                             ; preds = %3468, %3404
  %3479 = phi i32 [ %3408, %3404 ], [ %3474, %3468 ]
  %3480 = sext i32 %3479 to i64
  %3481 = getelementptr inbounds double, ptr %3069, i64 %3480
  %3482 = load double, ptr %3481, align 8, !tbaa !18
  %3483 = fptosi double %3482 to i64
  %3484 = mul nsw i64 %3483, %3483
  %3485 = add nuw nsw i64 %3484, %3405
  %3486 = fadd fast double %3407, 1.000000e+00
  %3487 = add nuw nsw i32 %3406, 1
  br i1 %3398, label %3488, label %3535

3488:                                             ; preds = %3478
  %3489 = load i32, ptr %4, align 4, !tbaa !5
  %3490 = load i32, ptr %12, align 4, !tbaa !5
  %3491 = add nsw i32 %3490, -1
  %3492 = icmp slt i32 %3489, %3491
  br i1 %3492, label %3512, label %3493

3493:                                             ; preds = %3488
  %3494 = icmp eq i32 %3489, %3491
  br i1 %3494, label %3495, label %3528

3495:                                             ; preds = %3493
  store i32 0, ptr %4, align 4, !tbaa !5
  %3496 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3496, ptr %6, align 4, !tbaa !5
  br i1 %3403, label %3535, label %3497

3497:                                             ; preds = %3495, %3522
  %3498 = phi i64 [ %3526, %3522 ], [ 1, %3495 ]
  %3499 = getelementptr inbounds i32, ptr %4, i64 %3498
  %3500 = load i32, ptr %3499, align 4, !tbaa !5
  %3501 = getelementptr inbounds i32, ptr %12, i64 %3498
  %3502 = load i32, ptr %3501, align 4, !tbaa !5
  %3503 = add nsw i32 %3502, -1
  %3504 = icmp slt i32 %3500, %3503
  br i1 %3504, label %3505, label %3520

3505:                                             ; preds = %3497
  br i1 %3492, label %3512, label %3506

3506:                                             ; preds = %3505
  %3507 = getelementptr inbounds i32, ptr %7, i64 %3498
  %3508 = load i32, ptr %3507, align 4, !tbaa !5
  %3509 = getelementptr inbounds i32, ptr %6, i64 %3498
  %3510 = load i32, ptr %3509, align 4, !tbaa !5
  %3511 = add nsw i32 %3510, %3508
  store i32 %3511, ptr %3509, align 4, !tbaa !5
  br label %3530

3512:                                             ; preds = %3488, %3505
  %3513 = phi i32 [ %3500, %3505 ], [ %3489, %3488 ]
  %3514 = phi ptr [ %3499, %3505 ], [ %4, %3488 ]
  %3515 = phi i64 [ %3498, %3505 ], [ 0, %3488 ]
  %3516 = add nsw i32 %3513, 1
  store i32 %3516, ptr %3514, align 4, !tbaa !5
  %3517 = getelementptr inbounds i32, ptr %7, i64 %3515
  %3518 = load i32, ptr %3517, align 4, !tbaa !5
  %3519 = getelementptr inbounds i32, ptr %6, i64 %3515
  br label %3530

3520:                                             ; preds = %3497
  %3521 = icmp eq i32 %3500, %3503
  br i1 %3521, label %3522, label %3528

3522:                                             ; preds = %3520
  store i32 0, ptr %3499, align 4, !tbaa !5
  %3523 = getelementptr inbounds i32, ptr %8, i64 %3498
  %3524 = load i32, ptr %3523, align 4, !tbaa !5
  %3525 = getelementptr inbounds i32, ptr %6, i64 %3498
  store i32 %3524, ptr %3525, align 4, !tbaa !5
  %3526 = add nuw nsw i64 %3498, 1
  %3527 = icmp eq i64 %3526, %3401
  br i1 %3527, label %3535, label %3497, !llvm.loop !1417

3528:                                             ; preds = %3493, %3520
  store i64 %3485, ptr %3071, align 8, !tbaa !120
  %3529 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

3530:                                             ; preds = %3506, %3512
  %3531 = phi ptr [ %3519, %3512 ], [ %3499, %3506 ]
  %3532 = phi i32 [ %3518, %3512 ], [ 1, %3506 ]
  %3533 = load i32, ptr %3531, align 4, !tbaa !5
  %3534 = add nsw i32 %3533, %3532
  store i32 %3534, ptr %3531, align 4, !tbaa !5
  br label %3535

3535:                                             ; preds = %3522, %3530, %3495, %3478
  %3536 = icmp eq i32 %3487, %5
  br i1 %3536, label %5488, label %3404, !llvm.loop !1418

3537:                                             ; preds = %3387, %3673
  %3538 = phi i64 [ 0, %3387 ], [ %3621, %3673 ]
  %3539 = phi i32 [ 0, %3387 ], [ %3622, %3673 ]
  %3540 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3388, label %3541, label %3610

3541:                                             ; preds = %3537, %3600
  %3542 = phi i32 [ %3609, %3600 ], [ 0, %3537 ]
  %3543 = phi i64 [ %3551, %3600 ], [ %3392, %3537 ]
  %3544 = phi i64 [ %3608, %3600 ], [ %3391, %3537 ]
  %3545 = phi i32 [ %3606, %3600 ], [ %3540, %3537 ]
  %3546 = sub i32 %3390, %3542
  %3547 = tail call i32 @llvm.smin.i32(i32 %3546, i32 0)
  %3548 = sub i32 %3546, %3547
  %3549 = zext i32 %3548 to i64
  %3550 = add nuw nsw i64 %3549, 1
  %3551 = add nsw i64 %3543, -1
  %3552 = icmp ult i32 %3548, 31
  br i1 %3552, label %3588, label %3553

3553:                                             ; preds = %3541
  %3554 = and i64 %3550, 8589934560
  %3555 = sub i64 %3544, %3554
  br label %3556

3556:                                             ; preds = %3556, %3553
  %3557 = phi i64 [ 0, %3553 ], [ %3580, %3556 ]
  %3558 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3553 ], [ %3576, %3556 ]
  %3559 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3553 ], [ %3577, %3556 ]
  %3560 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3553 ], [ %3578, %3556 ]
  %3561 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3553 ], [ %3579, %3556 ]
  %3562 = sub i64 %3544, %3557
  %3563 = getelementptr inbounds i32, ptr %11, i64 %3562
  %3564 = getelementptr inbounds i32, ptr %3563, i64 -7
  %3565 = load <8 x i32>, ptr %3564, align 4, !tbaa !5
  %3566 = shufflevector <8 x i32> %3565, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3567 = getelementptr inbounds i32, ptr %3563, i64 -15
  %3568 = load <8 x i32>, ptr %3567, align 4, !tbaa !5
  %3569 = shufflevector <8 x i32> %3568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3570 = getelementptr inbounds i32, ptr %3563, i64 -23
  %3571 = load <8 x i32>, ptr %3570, align 4, !tbaa !5
  %3572 = shufflevector <8 x i32> %3571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3573 = getelementptr inbounds i32, ptr %3563, i64 -31
  %3574 = load <8 x i32>, ptr %3573, align 4, !tbaa !5
  %3575 = shufflevector <8 x i32> %3574, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3576 = mul <8 x i32> %3566, %3558
  %3577 = mul <8 x i32> %3569, %3559
  %3578 = mul <8 x i32> %3572, %3560
  %3579 = mul <8 x i32> %3575, %3561
  %3580 = add nuw i64 %3557, 32
  %3581 = icmp eq i64 %3580, %3554
  br i1 %3581, label %3582, label %3556, !llvm.loop !1419

3582:                                             ; preds = %3556
  %3583 = mul <8 x i32> %3577, %3576
  %3584 = mul <8 x i32> %3578, %3583
  %3585 = mul <8 x i32> %3579, %3584
  %3586 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3585)
  %3587 = icmp eq i64 %3550, %3554
  br i1 %3587, label %3600, label %3588

3588:                                             ; preds = %3541, %3582
  %3589 = phi i64 [ %3544, %3541 ], [ %3555, %3582 ]
  %3590 = phi i32 [ 1, %3541 ], [ %3586, %3582 ]
  br label %3591

3591:                                             ; preds = %3588, %3591
  %3592 = phi i64 [ %3597, %3591 ], [ %3589, %3588 ]
  %3593 = phi i32 [ %3596, %3591 ], [ %3590, %3588 ]
  %3594 = getelementptr inbounds i32, ptr %11, i64 %3592
  %3595 = load i32, ptr %3594, align 4, !tbaa !5
  %3596 = mul nsw i32 %3595, %3593
  %3597 = add nsw i64 %3592, -1
  %3598 = trunc i64 %3592 to i32
  %3599 = icmp sgt i32 %3598, 0
  br i1 %3599, label %3591, label %3600, !llvm.loop !1420

3600:                                             ; preds = %3591, %3582
  %3601 = phi i32 [ %3586, %3582 ], [ %3596, %3591 ]
  %3602 = and i64 %3551, 4294967295
  %3603 = getelementptr inbounds i32, ptr %6, i64 %3602
  %3604 = load i32, ptr %3603, align 4, !tbaa !5
  %3605 = mul nsw i32 %3604, %3601
  %3606 = add nsw i32 %3605, %3545
  %3607 = icmp sgt i64 %3543, 2
  %3608 = add nsw i64 %3544, -1
  %3609 = add i32 %3542, 1
  br i1 %3607, label %3541, label %3610, !llvm.loop !1421

3610:                                             ; preds = %3600, %3537
  %3611 = phi i32 [ %3540, %3537 ], [ %3606, %3600 ]
  %3612 = icmp slt i32 %3611, %5
  br i1 %3612, label %3615, label %3613

3613:                                             ; preds = %3610
  %3614 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

3615:                                             ; preds = %3610
  %3616 = sext i32 %3611 to i64
  %3617 = getelementptr inbounds double, ptr %3069, i64 %3616
  %3618 = load double, ptr %3617, align 8, !tbaa !18
  %3619 = fptosi double %3618 to i64
  %3620 = mul nsw i64 %3619, %3619
  %3621 = add nuw nsw i64 %3620, %3538
  store i64 %3621, ptr %3071, align 8, !tbaa !120
  %3622 = add nuw nsw i32 %3539, 1
  br i1 %3389, label %3623, label %3673

3623:                                             ; preds = %3615
  %3624 = load i32, ptr %4, align 4, !tbaa !5
  %3625 = load i32, ptr %12, align 4, !tbaa !5
  %3626 = add nsw i32 %3625, -1
  %3627 = icmp slt i32 %3624, %3626
  br i1 %3627, label %3650, label %3628

3628:                                             ; preds = %3623
  %3629 = icmp eq i32 %3624, %3626
  br i1 %3629, label %3630, label %3666

3630:                                             ; preds = %3628
  store i32 0, ptr %4, align 4, !tbaa !5
  %3631 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3631, ptr %6, align 4, !tbaa !5
  br i1 %3394, label %3673, label %3632

3632:                                             ; preds = %3630, %3660
  %3633 = phi i64 [ %3664, %3660 ], [ 1, %3630 ]
  %3634 = getelementptr inbounds i32, ptr %4, i64 %3633
  %3635 = load i32, ptr %3634, align 4, !tbaa !5
  %3636 = getelementptr inbounds i32, ptr %12, i64 %3633
  %3637 = load i32, ptr %3636, align 4, !tbaa !5
  %3638 = add nsw i32 %3637, -1
  %3639 = icmp slt i32 %3635, %3638
  br i1 %3639, label %3640, label %3658

3640:                                             ; preds = %3632
  br i1 %3627, label %3650, label %3641

3641:                                             ; preds = %3640
  %3642 = shl i64 %3633, 32
  %3643 = add i64 %3642, -4294967296
  %3644 = ashr exact i64 %3643, 32
  %3645 = getelementptr inbounds i32, ptr %7, i64 %3644
  %3646 = load i32, ptr %3645, align 4, !tbaa !5
  %3647 = getelementptr inbounds i32, ptr %6, i64 %3633
  %3648 = load i32, ptr %3647, align 4, !tbaa !5
  %3649 = add nsw i32 %3648, %3646
  store i32 %3649, ptr %3647, align 4, !tbaa !5
  br label %3668

3650:                                             ; preds = %3623, %3640
  %3651 = phi i32 [ %3635, %3640 ], [ %3624, %3623 ]
  %3652 = phi ptr [ %3634, %3640 ], [ %4, %3623 ]
  %3653 = phi i64 [ %3633, %3640 ], [ 0, %3623 ]
  %3654 = add nsw i32 %3651, 1
  store i32 %3654, ptr %3652, align 4, !tbaa !5
  %3655 = getelementptr inbounds i32, ptr %7, i64 %3653
  %3656 = load i32, ptr %3655, align 4, !tbaa !5
  %3657 = getelementptr inbounds i32, ptr %6, i64 %3653
  br label %3668

3658:                                             ; preds = %3632
  %3659 = icmp eq i32 %3635, %3638
  br i1 %3659, label %3660, label %3666

3660:                                             ; preds = %3658
  store i32 0, ptr %3634, align 4, !tbaa !5
  %3661 = getelementptr inbounds i32, ptr %8, i64 %3633
  %3662 = load i32, ptr %3661, align 4, !tbaa !5
  %3663 = getelementptr inbounds i32, ptr %6, i64 %3633
  store i32 %3662, ptr %3663, align 4, !tbaa !5
  %3664 = add nuw nsw i64 %3633, 1
  %3665 = icmp eq i64 %3664, %3392
  br i1 %3665, label %3673, label %3632, !llvm.loop !1422

3666:                                             ; preds = %3628, %3658
  %3667 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

3668:                                             ; preds = %3641, %3650
  %3669 = phi ptr [ %3657, %3650 ], [ %3634, %3641 ]
  %3670 = phi i32 [ %3656, %3650 ], [ 1, %3641 ]
  %3671 = load i32, ptr %3669, align 4, !tbaa !5
  %3672 = add nsw i32 %3671, %3670
  store i32 %3672, ptr %3669, align 4, !tbaa !5
  br label %3673

3673:                                             ; preds = %3660, %3668, %3630, %3615
  %3674 = icmp eq i32 %3622, %5
  br i1 %3674, label %5491, label %3537, !llvm.loop !1423

3675:                                             ; preds = %3077
  %3676 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2297, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

3677:                                             ; preds = %18
  %3678 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3679 = load ptr, ptr %3678, align 8, !tbaa !9
  %3680 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3681 = load ptr, ptr %3680, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3681, align 8, !tbaa !18
  %3682 = icmp eq i32 %13, 0
  br i1 %3682, label %3683, label %3686

3683:                                             ; preds = %3677
  %3684 = load double, ptr %3679, align 8, !tbaa !18
  %3685 = fmul fast double %3684, %3684
  store double %3685, ptr %3681, align 8, !tbaa !18
  br label %5491

3686:                                             ; preds = %3677
  switch i32 %1, label %4274 [
    i32 1, label %3687
    i32 0, label %3982
  ]

3687:                                             ; preds = %3686
  %3688 = getelementptr inbounds i32, ptr %3, i64 %19
  %3689 = load i32, ptr %3688, align 4, !tbaa !5
  %3690 = icmp eq i32 %3689, 0
  %3691 = icmp sgt i32 %5, 0
  br i1 %3690, label %3701, label %3692

3692:                                             ; preds = %3687
  br i1 %3691, label %3693, label %5491

3693:                                             ; preds = %3692
  %3694 = icmp sgt i32 %13, 1
  %3695 = icmp sgt i32 %13, 0
  %3696 = add i32 %13, -2
  %3697 = zext i32 %3696 to i64
  %3698 = zext i32 %13 to i64
  %3699 = add nuw i32 %5, 1
  %3700 = icmp eq i32 %13, 1
  br label %3845

3701:                                             ; preds = %3687
  br i1 %3691, label %3702, label %5491

3702:                                             ; preds = %3701
  %3703 = icmp sgt i32 %13, 1
  %3704 = icmp sgt i32 %13, 0
  %3705 = add i32 %13, -2
  %3706 = zext i32 %3705 to i64
  %3707 = zext i32 %13 to i64
  %3708 = add nuw i32 %5, 1
  %3709 = icmp eq i32 %13, 1
  br label %3710

3710:                                             ; preds = %3702, %3843
  %3711 = phi double [ 0.000000e+00, %3702 ], [ %3793, %3843 ]
  %3712 = phi i32 [ 0, %3702 ], [ %3795, %3843 ]
  %3713 = phi double [ 0.000000e+00, %3702 ], [ %3794, %3843 ]
  %3714 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3703, label %3715, label %3784

3715:                                             ; preds = %3710, %3774
  %3716 = phi i32 [ %3783, %3774 ], [ 0, %3710 ]
  %3717 = phi i64 [ %3725, %3774 ], [ %3707, %3710 ]
  %3718 = phi i64 [ %3782, %3774 ], [ %3706, %3710 ]
  %3719 = phi i32 [ %3780, %3774 ], [ %3714, %3710 ]
  %3720 = sub i32 %3705, %3716
  %3721 = tail call i32 @llvm.smin.i32(i32 %3720, i32 0)
  %3722 = sub i32 %3720, %3721
  %3723 = zext i32 %3722 to i64
  %3724 = add nuw nsw i64 %3723, 1
  %3725 = add nsw i64 %3717, -1
  %3726 = icmp ult i32 %3722, 31
  br i1 %3726, label %3762, label %3727

3727:                                             ; preds = %3715
  %3728 = and i64 %3724, 8589934560
  %3729 = sub i64 %3718, %3728
  br label %3730

3730:                                             ; preds = %3730, %3727
  %3731 = phi i64 [ 0, %3727 ], [ %3754, %3730 ]
  %3732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3727 ], [ %3750, %3730 ]
  %3733 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3727 ], [ %3751, %3730 ]
  %3734 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3727 ], [ %3752, %3730 ]
  %3735 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3727 ], [ %3753, %3730 ]
  %3736 = sub i64 %3718, %3731
  %3737 = getelementptr inbounds i32, ptr %9, i64 %3736
  %3738 = getelementptr inbounds i32, ptr %3737, i64 -7
  %3739 = load <8 x i32>, ptr %3738, align 4, !tbaa !5
  %3740 = shufflevector <8 x i32> %3739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3741 = getelementptr inbounds i32, ptr %3737, i64 -15
  %3742 = load <8 x i32>, ptr %3741, align 4, !tbaa !5
  %3743 = shufflevector <8 x i32> %3742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3744 = getelementptr inbounds i32, ptr %3737, i64 -23
  %3745 = load <8 x i32>, ptr %3744, align 4, !tbaa !5
  %3746 = shufflevector <8 x i32> %3745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3747 = getelementptr inbounds i32, ptr %3737, i64 -31
  %3748 = load <8 x i32>, ptr %3747, align 4, !tbaa !5
  %3749 = shufflevector <8 x i32> %3748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3750 = mul <8 x i32> %3740, %3732
  %3751 = mul <8 x i32> %3743, %3733
  %3752 = mul <8 x i32> %3746, %3734
  %3753 = mul <8 x i32> %3749, %3735
  %3754 = add nuw i64 %3731, 32
  %3755 = icmp eq i64 %3754, %3728
  br i1 %3755, label %3756, label %3730, !llvm.loop !1424

3756:                                             ; preds = %3730
  %3757 = mul <8 x i32> %3751, %3750
  %3758 = mul <8 x i32> %3752, %3757
  %3759 = mul <8 x i32> %3753, %3758
  %3760 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3759)
  %3761 = icmp eq i64 %3724, %3728
  br i1 %3761, label %3774, label %3762

3762:                                             ; preds = %3715, %3756
  %3763 = phi i64 [ %3718, %3715 ], [ %3729, %3756 ]
  %3764 = phi i32 [ 1, %3715 ], [ %3760, %3756 ]
  br label %3765

3765:                                             ; preds = %3762, %3765
  %3766 = phi i64 [ %3771, %3765 ], [ %3763, %3762 ]
  %3767 = phi i32 [ %3770, %3765 ], [ %3764, %3762 ]
  %3768 = getelementptr inbounds i32, ptr %9, i64 %3766
  %3769 = load i32, ptr %3768, align 4, !tbaa !5
  %3770 = mul nsw i32 %3769, %3767
  %3771 = add nsw i64 %3766, -1
  %3772 = trunc i64 %3766 to i32
  %3773 = icmp sgt i32 %3772, 0
  br i1 %3773, label %3765, label %3774, !llvm.loop !1425

3774:                                             ; preds = %3765, %3756
  %3775 = phi i32 [ %3760, %3756 ], [ %3770, %3765 ]
  %3776 = and i64 %3725, 4294967295
  %3777 = getelementptr inbounds i32, ptr %6, i64 %3776
  %3778 = load i32, ptr %3777, align 4, !tbaa !5
  %3779 = mul nsw i32 %3778, %3775
  %3780 = add nsw i32 %3779, %3719
  %3781 = icmp sgt i64 %3717, 2
  %3782 = add nsw i64 %3718, -1
  %3783 = add i32 %3716, 1
  br i1 %3781, label %3715, label %3784, !llvm.loop !1426

3784:                                             ; preds = %3774, %3710
  %3785 = phi i32 [ %3714, %3710 ], [ %3780, %3774 ]
  %3786 = sext i32 %3785 to i64
  %3787 = getelementptr inbounds double, ptr %2, i64 %3786
  %3788 = load double, ptr %3787, align 8, !tbaa !18
  %3789 = getelementptr inbounds double, ptr %3679, i64 %3786
  %3790 = load double, ptr %3789, align 8, !tbaa !18
  %3791 = fmul fast double %3790, %3788
  %3792 = fmul fast double %3791, %3791
  %3793 = fadd fast double %3792, %3711
  store double %3793, ptr %3681, align 8, !tbaa !18
  %3794 = fadd fast double %3788, %3713
  %3795 = add nuw nsw i32 %3712, 1
  br i1 %3704, label %3796, label %3843

3796:                                             ; preds = %3784
  %3797 = load i32, ptr %4, align 4, !tbaa !5
  %3798 = load i32, ptr %12, align 4, !tbaa !5
  %3799 = add nsw i32 %3798, -1
  %3800 = icmp slt i32 %3797, %3799
  br i1 %3800, label %3820, label %3801

3801:                                             ; preds = %3796
  %3802 = icmp eq i32 %3797, %3799
  br i1 %3802, label %3803, label %3836

3803:                                             ; preds = %3801
  store i32 0, ptr %4, align 4, !tbaa !5
  %3804 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3804, ptr %6, align 4, !tbaa !5
  br i1 %3709, label %3843, label %3805

3805:                                             ; preds = %3803, %3830
  %3806 = phi i64 [ %3834, %3830 ], [ 1, %3803 ]
  %3807 = getelementptr inbounds i32, ptr %4, i64 %3806
  %3808 = load i32, ptr %3807, align 4, !tbaa !5
  %3809 = getelementptr inbounds i32, ptr %12, i64 %3806
  %3810 = load i32, ptr %3809, align 4, !tbaa !5
  %3811 = add nsw i32 %3810, -1
  %3812 = icmp slt i32 %3808, %3811
  br i1 %3812, label %3813, label %3828

3813:                                             ; preds = %3805
  br i1 %3800, label %3820, label %3814

3814:                                             ; preds = %3813
  %3815 = getelementptr inbounds i32, ptr %7, i64 %3806
  %3816 = load i32, ptr %3815, align 4, !tbaa !5
  %3817 = getelementptr inbounds i32, ptr %6, i64 %3806
  %3818 = load i32, ptr %3817, align 4, !tbaa !5
  %3819 = add nsw i32 %3818, %3816
  store i32 %3819, ptr %3817, align 4, !tbaa !5
  br label %3838

3820:                                             ; preds = %3796, %3813
  %3821 = phi i32 [ %3808, %3813 ], [ %3797, %3796 ]
  %3822 = phi ptr [ %3807, %3813 ], [ %4, %3796 ]
  %3823 = phi i64 [ %3806, %3813 ], [ 0, %3796 ]
  %3824 = add nsw i32 %3821, 1
  store i32 %3824, ptr %3822, align 4, !tbaa !5
  %3825 = getelementptr inbounds i32, ptr %7, i64 %3823
  %3826 = load i32, ptr %3825, align 4, !tbaa !5
  %3827 = getelementptr inbounds i32, ptr %6, i64 %3823
  br label %3838

3828:                                             ; preds = %3805
  %3829 = icmp eq i32 %3808, %3811
  br i1 %3829, label %3830, label %3836

3830:                                             ; preds = %3828
  store i32 0, ptr %3807, align 4, !tbaa !5
  %3831 = getelementptr inbounds i32, ptr %8, i64 %3806
  %3832 = load i32, ptr %3831, align 4, !tbaa !5
  %3833 = getelementptr inbounds i32, ptr %6, i64 %3806
  store i32 %3832, ptr %3833, align 4, !tbaa !5
  %3834 = add nuw nsw i64 %3806, 1
  %3835 = icmp eq i64 %3834, %3707
  br i1 %3835, label %3843, label %3805, !llvm.loop !1427

3836:                                             ; preds = %3801, %3828
  %3837 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2301, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

3838:                                             ; preds = %3814, %3820
  %3839 = phi ptr [ %3827, %3820 ], [ %3807, %3814 ]
  %3840 = phi i32 [ %3826, %3820 ], [ 1, %3814 ]
  %3841 = load i32, ptr %3839, align 4, !tbaa !5
  %3842 = add nsw i32 %3841, %3840
  store i32 %3842, ptr %3839, align 4, !tbaa !5
  br label %3843

3843:                                             ; preds = %3830, %3838, %3803, %3784
  %3844 = icmp eq i32 %3795, %5
  br i1 %3844, label %5491, label %3710, !llvm.loop !1428

3845:                                             ; preds = %3693, %3980
  %3846 = phi double [ 0.000000e+00, %3693 ], [ %3928, %3980 ]
  %3847 = phi i32 [ 0, %3693 ], [ %3929, %3980 ]
  %3848 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3694, label %3849, label %3918

3849:                                             ; preds = %3845, %3908
  %3850 = phi i32 [ %3917, %3908 ], [ 0, %3845 ]
  %3851 = phi i64 [ %3859, %3908 ], [ %3698, %3845 ]
  %3852 = phi i64 [ %3916, %3908 ], [ %3697, %3845 ]
  %3853 = phi i32 [ %3914, %3908 ], [ %3848, %3845 ]
  %3854 = sub i32 %3696, %3850
  %3855 = tail call i32 @llvm.smin.i32(i32 %3854, i32 0)
  %3856 = sub i32 %3854, %3855
  %3857 = zext i32 %3856 to i64
  %3858 = add nuw nsw i64 %3857, 1
  %3859 = add nsw i64 %3851, -1
  %3860 = icmp ult i32 %3856, 31
  br i1 %3860, label %3896, label %3861

3861:                                             ; preds = %3849
  %3862 = and i64 %3858, 8589934560
  %3863 = sub i64 %3852, %3862
  br label %3864

3864:                                             ; preds = %3864, %3861
  %3865 = phi i64 [ 0, %3861 ], [ %3888, %3864 ]
  %3866 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3861 ], [ %3884, %3864 ]
  %3867 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3861 ], [ %3885, %3864 ]
  %3868 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3861 ], [ %3886, %3864 ]
  %3869 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3861 ], [ %3887, %3864 ]
  %3870 = sub i64 %3852, %3865
  %3871 = getelementptr inbounds i32, ptr %11, i64 %3870
  %3872 = getelementptr inbounds i32, ptr %3871, i64 -7
  %3873 = load <8 x i32>, ptr %3872, align 4, !tbaa !5
  %3874 = shufflevector <8 x i32> %3873, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3875 = getelementptr inbounds i32, ptr %3871, i64 -15
  %3876 = load <8 x i32>, ptr %3875, align 4, !tbaa !5
  %3877 = shufflevector <8 x i32> %3876, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3878 = getelementptr inbounds i32, ptr %3871, i64 -23
  %3879 = load <8 x i32>, ptr %3878, align 4, !tbaa !5
  %3880 = shufflevector <8 x i32> %3879, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3881 = getelementptr inbounds i32, ptr %3871, i64 -31
  %3882 = load <8 x i32>, ptr %3881, align 4, !tbaa !5
  %3883 = shufflevector <8 x i32> %3882, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3884 = mul <8 x i32> %3874, %3866
  %3885 = mul <8 x i32> %3877, %3867
  %3886 = mul <8 x i32> %3880, %3868
  %3887 = mul <8 x i32> %3883, %3869
  %3888 = add nuw i64 %3865, 32
  %3889 = icmp eq i64 %3888, %3862
  br i1 %3889, label %3890, label %3864, !llvm.loop !1429

3890:                                             ; preds = %3864
  %3891 = mul <8 x i32> %3885, %3884
  %3892 = mul <8 x i32> %3886, %3891
  %3893 = mul <8 x i32> %3887, %3892
  %3894 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3893)
  %3895 = icmp eq i64 %3858, %3862
  br i1 %3895, label %3908, label %3896

3896:                                             ; preds = %3849, %3890
  %3897 = phi i64 [ %3852, %3849 ], [ %3863, %3890 ]
  %3898 = phi i32 [ 1, %3849 ], [ %3894, %3890 ]
  br label %3899

3899:                                             ; preds = %3896, %3899
  %3900 = phi i64 [ %3905, %3899 ], [ %3897, %3896 ]
  %3901 = phi i32 [ %3904, %3899 ], [ %3898, %3896 ]
  %3902 = getelementptr inbounds i32, ptr %11, i64 %3900
  %3903 = load i32, ptr %3902, align 4, !tbaa !5
  %3904 = mul nsw i32 %3903, %3901
  %3905 = add nsw i64 %3900, -1
  %3906 = trunc i64 %3900 to i32
  %3907 = icmp sgt i32 %3906, 0
  br i1 %3907, label %3899, label %3908, !llvm.loop !1430

3908:                                             ; preds = %3899, %3890
  %3909 = phi i32 [ %3894, %3890 ], [ %3904, %3899 ]
  %3910 = and i64 %3859, 4294967295
  %3911 = getelementptr inbounds i32, ptr %6, i64 %3910
  %3912 = load i32, ptr %3911, align 4, !tbaa !5
  %3913 = mul nsw i32 %3912, %3909
  %3914 = add nsw i32 %3913, %3853
  %3915 = icmp sgt i64 %3851, 2
  %3916 = add nsw i64 %3852, -1
  %3917 = add i32 %3850, 1
  br i1 %3915, label %3849, label %3918, !llvm.loop !1431

3918:                                             ; preds = %3908, %3845
  %3919 = phi i32 [ %3848, %3845 ], [ %3914, %3908 ]
  %3920 = icmp slt i32 %3919, %5
  br i1 %3920, label %3923, label %3921

3921:                                             ; preds = %3918
  %3922 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2301, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

3923:                                             ; preds = %3918
  %3924 = sext i32 %3919 to i64
  %3925 = getelementptr inbounds double, ptr %3679, i64 %3924
  %3926 = load double, ptr %3925, align 8, !tbaa !18
  %3927 = fmul fast double %3926, %3926
  %3928 = fadd fast double %3846, %3927
  store double %3928, ptr %3681, align 8, !tbaa !18
  %3929 = add nuw nsw i32 %3847, 1
  br i1 %3695, label %3930, label %3980

3930:                                             ; preds = %3923
  %3931 = load i32, ptr %4, align 4, !tbaa !5
  %3932 = load i32, ptr %12, align 4, !tbaa !5
  %3933 = add nsw i32 %3932, -1
  %3934 = icmp slt i32 %3931, %3933
  br i1 %3934, label %3957, label %3935

3935:                                             ; preds = %3930
  %3936 = icmp eq i32 %3931, %3933
  br i1 %3936, label %3937, label %3973

3937:                                             ; preds = %3935
  store i32 0, ptr %4, align 4, !tbaa !5
  %3938 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3938, ptr %6, align 4, !tbaa !5
  br i1 %3700, label %3980, label %3939

3939:                                             ; preds = %3937, %3967
  %3940 = phi i64 [ %3971, %3967 ], [ 1, %3937 ]
  %3941 = getelementptr inbounds i32, ptr %4, i64 %3940
  %3942 = load i32, ptr %3941, align 4, !tbaa !5
  %3943 = getelementptr inbounds i32, ptr %12, i64 %3940
  %3944 = load i32, ptr %3943, align 4, !tbaa !5
  %3945 = add nsw i32 %3944, -1
  %3946 = icmp slt i32 %3942, %3945
  br i1 %3946, label %3947, label %3965

3947:                                             ; preds = %3939
  br i1 %3934, label %3957, label %3948

3948:                                             ; preds = %3947
  %3949 = shl i64 %3940, 32
  %3950 = add i64 %3949, -4294967296
  %3951 = ashr exact i64 %3950, 32
  %3952 = getelementptr inbounds i32, ptr %7, i64 %3951
  %3953 = load i32, ptr %3952, align 4, !tbaa !5
  %3954 = getelementptr inbounds i32, ptr %6, i64 %3940
  %3955 = load i32, ptr %3954, align 4, !tbaa !5
  %3956 = add nsw i32 %3955, %3953
  store i32 %3956, ptr %3954, align 4, !tbaa !5
  br label %3975

3957:                                             ; preds = %3930, %3947
  %3958 = phi i32 [ %3942, %3947 ], [ %3931, %3930 ]
  %3959 = phi ptr [ %3941, %3947 ], [ %4, %3930 ]
  %3960 = phi i64 [ %3940, %3947 ], [ 0, %3930 ]
  %3961 = add nsw i32 %3958, 1
  store i32 %3961, ptr %3959, align 4, !tbaa !5
  %3962 = getelementptr inbounds i32, ptr %7, i64 %3960
  %3963 = load i32, ptr %3962, align 4, !tbaa !5
  %3964 = getelementptr inbounds i32, ptr %6, i64 %3960
  br label %3975

3965:                                             ; preds = %3939
  %3966 = icmp eq i32 %3942, %3945
  br i1 %3966, label %3967, label %3973

3967:                                             ; preds = %3965
  store i32 0, ptr %3941, align 4, !tbaa !5
  %3968 = getelementptr inbounds i32, ptr %8, i64 %3940
  %3969 = load i32, ptr %3968, align 4, !tbaa !5
  %3970 = getelementptr inbounds i32, ptr %6, i64 %3940
  store i32 %3969, ptr %3970, align 4, !tbaa !5
  %3971 = add nuw nsw i64 %3940, 1
  %3972 = icmp eq i64 %3971, %3698
  br i1 %3972, label %3980, label %3939, !llvm.loop !1432

3973:                                             ; preds = %3935, %3965
  %3974 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2301, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

3975:                                             ; preds = %3948, %3957
  %3976 = phi ptr [ %3964, %3957 ], [ %3941, %3948 ]
  %3977 = phi i32 [ %3963, %3957 ], [ 1, %3948 ]
  %3978 = load i32, ptr %3976, align 4, !tbaa !5
  %3979 = add nsw i32 %3978, %3977
  store i32 %3979, ptr %3976, align 4, !tbaa !5
  br label %3980

3980:                                             ; preds = %3967, %3975, %3937, %3923
  %3981 = icmp eq i32 %3929, %5
  br i1 %3981, label %5491, label %3845, !llvm.loop !1433

3982:                                             ; preds = %3686
  %3983 = getelementptr inbounds i32, ptr %3, i64 %19
  %3984 = load i32, ptr %3983, align 4, !tbaa !5
  %3985 = icmp eq i32 %3984, 0
  %3986 = icmp sgt i32 %5, 0
  br i1 %3985, label %3996, label %3987

3987:                                             ; preds = %3982
  br i1 %3986, label %3988, label %5491

3988:                                             ; preds = %3987
  %3989 = icmp sgt i32 %13, 1
  %3990 = icmp sgt i32 %13, 0
  %3991 = add i32 %13, -2
  %3992 = zext i32 %3991 to i64
  %3993 = zext i32 %13 to i64
  %3994 = add nuw i32 %5, 1
  %3995 = icmp eq i32 %13, 1
  br label %4137

3996:                                             ; preds = %3982
  br i1 %3986, label %3997, label %5491

3997:                                             ; preds = %3996
  %3998 = icmp sgt i32 %13, 1
  %3999 = icmp sgt i32 %13, 0
  %4000 = add i32 %13, -2
  %4001 = zext i32 %4000 to i64
  %4002 = zext i32 %13 to i64
  %4003 = add nuw i32 %5, 1
  %4004 = icmp eq i32 %13, 1
  br label %4005

4005:                                             ; preds = %3997, %4135
  %4006 = phi double [ 0.000000e+00, %3997 ], [ %4085, %4135 ]
  %4007 = phi i32 [ 0, %3997 ], [ %4087, %4135 ]
  %4008 = phi double [ 0.000000e+00, %3997 ], [ %4086, %4135 ]
  %4009 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3998, label %4010, label %4079

4010:                                             ; preds = %4005, %4069
  %4011 = phi i32 [ %4078, %4069 ], [ 0, %4005 ]
  %4012 = phi i64 [ %4020, %4069 ], [ %4002, %4005 ]
  %4013 = phi i64 [ %4077, %4069 ], [ %4001, %4005 ]
  %4014 = phi i32 [ %4075, %4069 ], [ %4009, %4005 ]
  %4015 = sub i32 %4000, %4011
  %4016 = tail call i32 @llvm.smin.i32(i32 %4015, i32 0)
  %4017 = sub i32 %4015, %4016
  %4018 = zext i32 %4017 to i64
  %4019 = add nuw nsw i64 %4018, 1
  %4020 = add nsw i64 %4012, -1
  %4021 = icmp ult i32 %4017, 31
  br i1 %4021, label %4057, label %4022

4022:                                             ; preds = %4010
  %4023 = and i64 %4019, 8589934560
  %4024 = sub i64 %4013, %4023
  br label %4025

4025:                                             ; preds = %4025, %4022
  %4026 = phi i64 [ 0, %4022 ], [ %4049, %4025 ]
  %4027 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4045, %4025 ]
  %4028 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4046, %4025 ]
  %4029 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4047, %4025 ]
  %4030 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4022 ], [ %4048, %4025 ]
  %4031 = sub i64 %4013, %4026
  %4032 = getelementptr inbounds i32, ptr %9, i64 %4031
  %4033 = getelementptr inbounds i32, ptr %4032, i64 -7
  %4034 = load <8 x i32>, ptr %4033, align 4, !tbaa !5
  %4035 = shufflevector <8 x i32> %4034, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4036 = getelementptr inbounds i32, ptr %4032, i64 -15
  %4037 = load <8 x i32>, ptr %4036, align 4, !tbaa !5
  %4038 = shufflevector <8 x i32> %4037, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4039 = getelementptr inbounds i32, ptr %4032, i64 -23
  %4040 = load <8 x i32>, ptr %4039, align 4, !tbaa !5
  %4041 = shufflevector <8 x i32> %4040, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4042 = getelementptr inbounds i32, ptr %4032, i64 -31
  %4043 = load <8 x i32>, ptr %4042, align 4, !tbaa !5
  %4044 = shufflevector <8 x i32> %4043, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4045 = mul <8 x i32> %4035, %4027
  %4046 = mul <8 x i32> %4038, %4028
  %4047 = mul <8 x i32> %4041, %4029
  %4048 = mul <8 x i32> %4044, %4030
  %4049 = add nuw i64 %4026, 32
  %4050 = icmp eq i64 %4049, %4023
  br i1 %4050, label %4051, label %4025, !llvm.loop !1434

4051:                                             ; preds = %4025
  %4052 = mul <8 x i32> %4046, %4045
  %4053 = mul <8 x i32> %4047, %4052
  %4054 = mul <8 x i32> %4048, %4053
  %4055 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4054)
  %4056 = icmp eq i64 %4019, %4023
  br i1 %4056, label %4069, label %4057

4057:                                             ; preds = %4010, %4051
  %4058 = phi i64 [ %4013, %4010 ], [ %4024, %4051 ]
  %4059 = phi i32 [ 1, %4010 ], [ %4055, %4051 ]
  br label %4060

4060:                                             ; preds = %4057, %4060
  %4061 = phi i64 [ %4066, %4060 ], [ %4058, %4057 ]
  %4062 = phi i32 [ %4065, %4060 ], [ %4059, %4057 ]
  %4063 = getelementptr inbounds i32, ptr %9, i64 %4061
  %4064 = load i32, ptr %4063, align 4, !tbaa !5
  %4065 = mul nsw i32 %4064, %4062
  %4066 = add nsw i64 %4061, -1
  %4067 = trunc i64 %4061 to i32
  %4068 = icmp sgt i32 %4067, 0
  br i1 %4068, label %4060, label %4069, !llvm.loop !1435

4069:                                             ; preds = %4060, %4051
  %4070 = phi i32 [ %4055, %4051 ], [ %4065, %4060 ]
  %4071 = and i64 %4020, 4294967295
  %4072 = getelementptr inbounds i32, ptr %6, i64 %4071
  %4073 = load i32, ptr %4072, align 4, !tbaa !5
  %4074 = mul nsw i32 %4073, %4070
  %4075 = add nsw i32 %4074, %4014
  %4076 = icmp sgt i64 %4012, 2
  %4077 = add nsw i64 %4013, -1
  %4078 = add i32 %4011, 1
  br i1 %4076, label %4010, label %4079, !llvm.loop !1436

4079:                                             ; preds = %4069, %4005
  %4080 = phi i32 [ %4009, %4005 ], [ %4075, %4069 ]
  %4081 = sext i32 %4080 to i64
  %4082 = getelementptr inbounds double, ptr %3679, i64 %4081
  %4083 = load double, ptr %4082, align 8, !tbaa !18
  %4084 = fmul fast double %4083, %4083
  %4085 = fadd fast double %4006, %4084
  store double %4085, ptr %3681, align 8, !tbaa !18
  %4086 = fadd fast double %4008, 1.000000e+00
  %4087 = add nuw nsw i32 %4007, 1
  br i1 %3999, label %4088, label %4135

4088:                                             ; preds = %4079
  %4089 = load i32, ptr %4, align 4, !tbaa !5
  %4090 = load i32, ptr %12, align 4, !tbaa !5
  %4091 = add nsw i32 %4090, -1
  %4092 = icmp slt i32 %4089, %4091
  br i1 %4092, label %4112, label %4093

4093:                                             ; preds = %4088
  %4094 = icmp eq i32 %4089, %4091
  br i1 %4094, label %4095, label %4128

4095:                                             ; preds = %4093
  store i32 0, ptr %4, align 4, !tbaa !5
  %4096 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4096, ptr %6, align 4, !tbaa !5
  br i1 %4004, label %4135, label %4097

4097:                                             ; preds = %4095, %4122
  %4098 = phi i64 [ %4126, %4122 ], [ 1, %4095 ]
  %4099 = getelementptr inbounds i32, ptr %4, i64 %4098
  %4100 = load i32, ptr %4099, align 4, !tbaa !5
  %4101 = getelementptr inbounds i32, ptr %12, i64 %4098
  %4102 = load i32, ptr %4101, align 4, !tbaa !5
  %4103 = add nsw i32 %4102, -1
  %4104 = icmp slt i32 %4100, %4103
  br i1 %4104, label %4105, label %4120

4105:                                             ; preds = %4097
  br i1 %4092, label %4112, label %4106

4106:                                             ; preds = %4105
  %4107 = getelementptr inbounds i32, ptr %7, i64 %4098
  %4108 = load i32, ptr %4107, align 4, !tbaa !5
  %4109 = getelementptr inbounds i32, ptr %6, i64 %4098
  %4110 = load i32, ptr %4109, align 4, !tbaa !5
  %4111 = add nsw i32 %4110, %4108
  store i32 %4111, ptr %4109, align 4, !tbaa !5
  br label %4130

4112:                                             ; preds = %4088, %4105
  %4113 = phi i32 [ %4100, %4105 ], [ %4089, %4088 ]
  %4114 = phi ptr [ %4099, %4105 ], [ %4, %4088 ]
  %4115 = phi i64 [ %4098, %4105 ], [ 0, %4088 ]
  %4116 = add nsw i32 %4113, 1
  store i32 %4116, ptr %4114, align 4, !tbaa !5
  %4117 = getelementptr inbounds i32, ptr %7, i64 %4115
  %4118 = load i32, ptr %4117, align 4, !tbaa !5
  %4119 = getelementptr inbounds i32, ptr %6, i64 %4115
  br label %4130

4120:                                             ; preds = %4097
  %4121 = icmp eq i32 %4100, %4103
  br i1 %4121, label %4122, label %4128

4122:                                             ; preds = %4120
  store i32 0, ptr %4099, align 4, !tbaa !5
  %4123 = getelementptr inbounds i32, ptr %8, i64 %4098
  %4124 = load i32, ptr %4123, align 4, !tbaa !5
  %4125 = getelementptr inbounds i32, ptr %6, i64 %4098
  store i32 %4124, ptr %4125, align 4, !tbaa !5
  %4126 = add nuw nsw i64 %4098, 1
  %4127 = icmp eq i64 %4126, %4002
  br i1 %4127, label %4135, label %4097, !llvm.loop !1437

4128:                                             ; preds = %4093, %4120
  %4129 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2301, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

4130:                                             ; preds = %4106, %4112
  %4131 = phi ptr [ %4119, %4112 ], [ %4099, %4106 ]
  %4132 = phi i32 [ %4118, %4112 ], [ 1, %4106 ]
  %4133 = load i32, ptr %4131, align 4, !tbaa !5
  %4134 = add nsw i32 %4133, %4132
  store i32 %4134, ptr %4131, align 4, !tbaa !5
  br label %4135

4135:                                             ; preds = %4122, %4130, %4095, %4079
  %4136 = icmp eq i32 %4087, %5
  br i1 %4136, label %5491, label %4005, !llvm.loop !1438

4137:                                             ; preds = %3988, %4272
  %4138 = phi double [ 0.000000e+00, %3988 ], [ %4220, %4272 ]
  %4139 = phi i32 [ 0, %3988 ], [ %4221, %4272 ]
  %4140 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3989, label %4141, label %4210

4141:                                             ; preds = %4137, %4200
  %4142 = phi i32 [ %4209, %4200 ], [ 0, %4137 ]
  %4143 = phi i64 [ %4151, %4200 ], [ %3993, %4137 ]
  %4144 = phi i64 [ %4208, %4200 ], [ %3992, %4137 ]
  %4145 = phi i32 [ %4206, %4200 ], [ %4140, %4137 ]
  %4146 = sub i32 %3991, %4142
  %4147 = tail call i32 @llvm.smin.i32(i32 %4146, i32 0)
  %4148 = sub i32 %4146, %4147
  %4149 = zext i32 %4148 to i64
  %4150 = add nuw nsw i64 %4149, 1
  %4151 = add nsw i64 %4143, -1
  %4152 = icmp ult i32 %4148, 31
  br i1 %4152, label %4188, label %4153

4153:                                             ; preds = %4141
  %4154 = and i64 %4150, 8589934560
  %4155 = sub i64 %4144, %4154
  br label %4156

4156:                                             ; preds = %4156, %4153
  %4157 = phi i64 [ 0, %4153 ], [ %4180, %4156 ]
  %4158 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4153 ], [ %4176, %4156 ]
  %4159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4153 ], [ %4177, %4156 ]
  %4160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4153 ], [ %4178, %4156 ]
  %4161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4153 ], [ %4179, %4156 ]
  %4162 = sub i64 %4144, %4157
  %4163 = getelementptr inbounds i32, ptr %11, i64 %4162
  %4164 = getelementptr inbounds i32, ptr %4163, i64 -7
  %4165 = load <8 x i32>, ptr %4164, align 4, !tbaa !5
  %4166 = shufflevector <8 x i32> %4165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4167 = getelementptr inbounds i32, ptr %4163, i64 -15
  %4168 = load <8 x i32>, ptr %4167, align 4, !tbaa !5
  %4169 = shufflevector <8 x i32> %4168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4170 = getelementptr inbounds i32, ptr %4163, i64 -23
  %4171 = load <8 x i32>, ptr %4170, align 4, !tbaa !5
  %4172 = shufflevector <8 x i32> %4171, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4173 = getelementptr inbounds i32, ptr %4163, i64 -31
  %4174 = load <8 x i32>, ptr %4173, align 4, !tbaa !5
  %4175 = shufflevector <8 x i32> %4174, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4176 = mul <8 x i32> %4166, %4158
  %4177 = mul <8 x i32> %4169, %4159
  %4178 = mul <8 x i32> %4172, %4160
  %4179 = mul <8 x i32> %4175, %4161
  %4180 = add nuw i64 %4157, 32
  %4181 = icmp eq i64 %4180, %4154
  br i1 %4181, label %4182, label %4156, !llvm.loop !1439

4182:                                             ; preds = %4156
  %4183 = mul <8 x i32> %4177, %4176
  %4184 = mul <8 x i32> %4178, %4183
  %4185 = mul <8 x i32> %4179, %4184
  %4186 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4185)
  %4187 = icmp eq i64 %4150, %4154
  br i1 %4187, label %4200, label %4188

4188:                                             ; preds = %4141, %4182
  %4189 = phi i64 [ %4144, %4141 ], [ %4155, %4182 ]
  %4190 = phi i32 [ 1, %4141 ], [ %4186, %4182 ]
  br label %4191

4191:                                             ; preds = %4188, %4191
  %4192 = phi i64 [ %4197, %4191 ], [ %4189, %4188 ]
  %4193 = phi i32 [ %4196, %4191 ], [ %4190, %4188 ]
  %4194 = getelementptr inbounds i32, ptr %11, i64 %4192
  %4195 = load i32, ptr %4194, align 4, !tbaa !5
  %4196 = mul nsw i32 %4195, %4193
  %4197 = add nsw i64 %4192, -1
  %4198 = trunc i64 %4192 to i32
  %4199 = icmp sgt i32 %4198, 0
  br i1 %4199, label %4191, label %4200, !llvm.loop !1440

4200:                                             ; preds = %4191, %4182
  %4201 = phi i32 [ %4186, %4182 ], [ %4196, %4191 ]
  %4202 = and i64 %4151, 4294967295
  %4203 = getelementptr inbounds i32, ptr %6, i64 %4202
  %4204 = load i32, ptr %4203, align 4, !tbaa !5
  %4205 = mul nsw i32 %4204, %4201
  %4206 = add nsw i32 %4205, %4145
  %4207 = icmp sgt i64 %4143, 2
  %4208 = add nsw i64 %4144, -1
  %4209 = add i32 %4142, 1
  br i1 %4207, label %4141, label %4210, !llvm.loop !1441

4210:                                             ; preds = %4200, %4137
  %4211 = phi i32 [ %4140, %4137 ], [ %4206, %4200 ]
  %4212 = icmp slt i32 %4211, %5
  br i1 %4212, label %4215, label %4213

4213:                                             ; preds = %4210
  %4214 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2301, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

4215:                                             ; preds = %4210
  %4216 = sext i32 %4211 to i64
  %4217 = getelementptr inbounds double, ptr %3679, i64 %4216
  %4218 = load double, ptr %4217, align 8, !tbaa !18
  %4219 = fmul fast double %4218, %4218
  %4220 = fadd fast double %4138, %4219
  store double %4220, ptr %3681, align 8, !tbaa !18
  %4221 = add nuw nsw i32 %4139, 1
  br i1 %3990, label %4222, label %4272

4222:                                             ; preds = %4215
  %4223 = load i32, ptr %4, align 4, !tbaa !5
  %4224 = load i32, ptr %12, align 4, !tbaa !5
  %4225 = add nsw i32 %4224, -1
  %4226 = icmp slt i32 %4223, %4225
  br i1 %4226, label %4249, label %4227

4227:                                             ; preds = %4222
  %4228 = icmp eq i32 %4223, %4225
  br i1 %4228, label %4229, label %4265

4229:                                             ; preds = %4227
  store i32 0, ptr %4, align 4, !tbaa !5
  %4230 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4230, ptr %6, align 4, !tbaa !5
  br i1 %3995, label %4272, label %4231

4231:                                             ; preds = %4229, %4259
  %4232 = phi i64 [ %4263, %4259 ], [ 1, %4229 ]
  %4233 = getelementptr inbounds i32, ptr %4, i64 %4232
  %4234 = load i32, ptr %4233, align 4, !tbaa !5
  %4235 = getelementptr inbounds i32, ptr %12, i64 %4232
  %4236 = load i32, ptr %4235, align 4, !tbaa !5
  %4237 = add nsw i32 %4236, -1
  %4238 = icmp slt i32 %4234, %4237
  br i1 %4238, label %4239, label %4257

4239:                                             ; preds = %4231
  br i1 %4226, label %4249, label %4240

4240:                                             ; preds = %4239
  %4241 = shl i64 %4232, 32
  %4242 = add i64 %4241, -4294967296
  %4243 = ashr exact i64 %4242, 32
  %4244 = getelementptr inbounds i32, ptr %7, i64 %4243
  %4245 = load i32, ptr %4244, align 4, !tbaa !5
  %4246 = getelementptr inbounds i32, ptr %6, i64 %4232
  %4247 = load i32, ptr %4246, align 4, !tbaa !5
  %4248 = add nsw i32 %4247, %4245
  store i32 %4248, ptr %4246, align 4, !tbaa !5
  br label %4267

4249:                                             ; preds = %4222, %4239
  %4250 = phi i32 [ %4234, %4239 ], [ %4223, %4222 ]
  %4251 = phi ptr [ %4233, %4239 ], [ %4, %4222 ]
  %4252 = phi i64 [ %4232, %4239 ], [ 0, %4222 ]
  %4253 = add nsw i32 %4250, 1
  store i32 %4253, ptr %4251, align 4, !tbaa !5
  %4254 = getelementptr inbounds i32, ptr %7, i64 %4252
  %4255 = load i32, ptr %4254, align 4, !tbaa !5
  %4256 = getelementptr inbounds i32, ptr %6, i64 %4252
  br label %4267

4257:                                             ; preds = %4231
  %4258 = icmp eq i32 %4234, %4237
  br i1 %4258, label %4259, label %4265

4259:                                             ; preds = %4257
  store i32 0, ptr %4233, align 4, !tbaa !5
  %4260 = getelementptr inbounds i32, ptr %8, i64 %4232
  %4261 = load i32, ptr %4260, align 4, !tbaa !5
  %4262 = getelementptr inbounds i32, ptr %6, i64 %4232
  store i32 %4261, ptr %4262, align 4, !tbaa !5
  %4263 = add nuw nsw i64 %4232, 1
  %4264 = icmp eq i64 %4263, %3993
  br i1 %4264, label %4272, label %4231, !llvm.loop !1442

4265:                                             ; preds = %4227, %4257
  %4266 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2301, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

4267:                                             ; preds = %4240, %4249
  %4268 = phi ptr [ %4256, %4249 ], [ %4233, %4240 ]
  %4269 = phi i32 [ %4255, %4249 ], [ 1, %4240 ]
  %4270 = load i32, ptr %4268, align 4, !tbaa !5
  %4271 = add nsw i32 %4270, %4269
  store i32 %4271, ptr %4268, align 4, !tbaa !5
  br label %4272

4272:                                             ; preds = %4259, %4267, %4229, %4215
  %4273 = icmp eq i32 %4221, %5
  br i1 %4273, label %5491, label %4137, !llvm.loop !1443

4274:                                             ; preds = %3686
  %4275 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2301, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

4276:                                             ; preds = %18
  %4277 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4278 = load ptr, ptr %4277, align 8, !tbaa !9
  %4279 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4280 = load ptr, ptr %4279, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4280, align 4, !tbaa !162
  %4281 = icmp eq i32 %13, 0
  br i1 %4281, label %4282, label %4286

4282:                                             ; preds = %4276
  %4283 = load double, ptr %4278, align 8, !tbaa !18
  %4284 = fptrunc double %4283 to float
  %4285 = fmul fast float %4284, %4284
  store float %4285, ptr %4280, align 4, !tbaa !162
  br label %5491

4286:                                             ; preds = %4276
  switch i32 %1, label %4884 [
    i32 1, label %4287
    i32 0, label %4590
  ]

4287:                                             ; preds = %4286
  %4288 = getelementptr inbounds i32, ptr %3, i64 %19
  %4289 = load i32, ptr %4288, align 4, !tbaa !5
  %4290 = icmp eq i32 %4289, 0
  %4291 = icmp sgt i32 %5, 0
  br i1 %4290, label %4301, label %4292

4292:                                             ; preds = %4287
  br i1 %4291, label %4293, label %5491

4293:                                             ; preds = %4292
  %4294 = icmp sgt i32 %13, 1
  %4295 = icmp sgt i32 %13, 0
  %4296 = add i32 %13, -2
  %4297 = zext i32 %4296 to i64
  %4298 = zext i32 %13 to i64
  %4299 = add nuw i32 %5, 1
  %4300 = icmp eq i32 %13, 1
  br label %4449

4301:                                             ; preds = %4287
  br i1 %4291, label %4302, label %5491

4302:                                             ; preds = %4301
  %4303 = icmp sgt i32 %13, 1
  %4304 = icmp sgt i32 %13, 0
  %4305 = add i32 %13, -2
  %4306 = zext i32 %4305 to i64
  %4307 = zext i32 %13 to i64
  %4308 = add nuw i32 %5, 1
  %4309 = icmp eq i32 %13, 1
  br label %4310

4310:                                             ; preds = %4302, %4447
  %4311 = phi float [ 0.000000e+00, %4302 ], [ %4397, %4447 ]
  %4312 = phi i32 [ 0, %4302 ], [ %4399, %4447 ]
  %4313 = phi double [ 0.000000e+00, %4302 ], [ %4398, %4447 ]
  %4314 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4303, label %4315, label %4384

4315:                                             ; preds = %4310, %4374
  %4316 = phi i32 [ %4383, %4374 ], [ 0, %4310 ]
  %4317 = phi i64 [ %4325, %4374 ], [ %4307, %4310 ]
  %4318 = phi i64 [ %4382, %4374 ], [ %4306, %4310 ]
  %4319 = phi i32 [ %4380, %4374 ], [ %4314, %4310 ]
  %4320 = sub i32 %4305, %4316
  %4321 = tail call i32 @llvm.smin.i32(i32 %4320, i32 0)
  %4322 = sub i32 %4320, %4321
  %4323 = zext i32 %4322 to i64
  %4324 = add nuw nsw i64 %4323, 1
  %4325 = add nsw i64 %4317, -1
  %4326 = icmp ult i32 %4322, 31
  br i1 %4326, label %4362, label %4327

4327:                                             ; preds = %4315
  %4328 = and i64 %4324, 8589934560
  %4329 = sub i64 %4318, %4328
  br label %4330

4330:                                             ; preds = %4330, %4327
  %4331 = phi i64 [ 0, %4327 ], [ %4354, %4330 ]
  %4332 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4327 ], [ %4350, %4330 ]
  %4333 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4327 ], [ %4351, %4330 ]
  %4334 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4327 ], [ %4352, %4330 ]
  %4335 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4327 ], [ %4353, %4330 ]
  %4336 = sub i64 %4318, %4331
  %4337 = getelementptr inbounds i32, ptr %9, i64 %4336
  %4338 = getelementptr inbounds i32, ptr %4337, i64 -7
  %4339 = load <8 x i32>, ptr %4338, align 4, !tbaa !5
  %4340 = shufflevector <8 x i32> %4339, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4341 = getelementptr inbounds i32, ptr %4337, i64 -15
  %4342 = load <8 x i32>, ptr %4341, align 4, !tbaa !5
  %4343 = shufflevector <8 x i32> %4342, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4344 = getelementptr inbounds i32, ptr %4337, i64 -23
  %4345 = load <8 x i32>, ptr %4344, align 4, !tbaa !5
  %4346 = shufflevector <8 x i32> %4345, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4347 = getelementptr inbounds i32, ptr %4337, i64 -31
  %4348 = load <8 x i32>, ptr %4347, align 4, !tbaa !5
  %4349 = shufflevector <8 x i32> %4348, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4350 = mul <8 x i32> %4340, %4332
  %4351 = mul <8 x i32> %4343, %4333
  %4352 = mul <8 x i32> %4346, %4334
  %4353 = mul <8 x i32> %4349, %4335
  %4354 = add nuw i64 %4331, 32
  %4355 = icmp eq i64 %4354, %4328
  br i1 %4355, label %4356, label %4330, !llvm.loop !1444

4356:                                             ; preds = %4330
  %4357 = mul <8 x i32> %4351, %4350
  %4358 = mul <8 x i32> %4352, %4357
  %4359 = mul <8 x i32> %4353, %4358
  %4360 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4359)
  %4361 = icmp eq i64 %4324, %4328
  br i1 %4361, label %4374, label %4362

4362:                                             ; preds = %4315, %4356
  %4363 = phi i64 [ %4318, %4315 ], [ %4329, %4356 ]
  %4364 = phi i32 [ 1, %4315 ], [ %4360, %4356 ]
  br label %4365

4365:                                             ; preds = %4362, %4365
  %4366 = phi i64 [ %4371, %4365 ], [ %4363, %4362 ]
  %4367 = phi i32 [ %4370, %4365 ], [ %4364, %4362 ]
  %4368 = getelementptr inbounds i32, ptr %9, i64 %4366
  %4369 = load i32, ptr %4368, align 4, !tbaa !5
  %4370 = mul nsw i32 %4369, %4367
  %4371 = add nsw i64 %4366, -1
  %4372 = trunc i64 %4366 to i32
  %4373 = icmp sgt i32 %4372, 0
  br i1 %4373, label %4365, label %4374, !llvm.loop !1445

4374:                                             ; preds = %4365, %4356
  %4375 = phi i32 [ %4360, %4356 ], [ %4370, %4365 ]
  %4376 = and i64 %4325, 4294967295
  %4377 = getelementptr inbounds i32, ptr %6, i64 %4376
  %4378 = load i32, ptr %4377, align 4, !tbaa !5
  %4379 = mul nsw i32 %4378, %4375
  %4380 = add nsw i32 %4379, %4319
  %4381 = icmp sgt i64 %4317, 2
  %4382 = add nsw i64 %4318, -1
  %4383 = add i32 %4316, 1
  br i1 %4381, label %4315, label %4384, !llvm.loop !1446

4384:                                             ; preds = %4374, %4310
  %4385 = phi i32 [ %4314, %4310 ], [ %4380, %4374 ]
  %4386 = sext i32 %4385 to i64
  %4387 = getelementptr inbounds double, ptr %2, i64 %4386
  %4388 = load double, ptr %4387, align 8, !tbaa !18
  %4389 = getelementptr inbounds double, ptr %4278, i64 %4386
  %4390 = load double, ptr %4389, align 8, !tbaa !18
  %4391 = fptrunc double %4390 to float
  %4392 = fpext float %4311 to double
  %4393 = fpext float %4391 to double
  %4394 = fmul fast double %4388, %4393
  %4395 = fmul fast double %4394, %4394
  %4396 = fadd fast double %4395, %4392
  %4397 = fptrunc double %4396 to float
  %4398 = fadd fast double %4388, %4313
  %4399 = add nuw nsw i32 %4312, 1
  br i1 %4304, label %4400, label %4447

4400:                                             ; preds = %4384
  %4401 = load i32, ptr %4, align 4, !tbaa !5
  %4402 = load i32, ptr %12, align 4, !tbaa !5
  %4403 = add nsw i32 %4402, -1
  %4404 = icmp slt i32 %4401, %4403
  br i1 %4404, label %4424, label %4405

4405:                                             ; preds = %4400
  %4406 = icmp eq i32 %4401, %4403
  br i1 %4406, label %4407, label %4440

4407:                                             ; preds = %4405
  store i32 0, ptr %4, align 4, !tbaa !5
  %4408 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4408, ptr %6, align 4, !tbaa !5
  br i1 %4309, label %4447, label %4409

4409:                                             ; preds = %4407, %4434
  %4410 = phi i64 [ %4438, %4434 ], [ 1, %4407 ]
  %4411 = getelementptr inbounds i32, ptr %4, i64 %4410
  %4412 = load i32, ptr %4411, align 4, !tbaa !5
  %4413 = getelementptr inbounds i32, ptr %12, i64 %4410
  %4414 = load i32, ptr %4413, align 4, !tbaa !5
  %4415 = add nsw i32 %4414, -1
  %4416 = icmp slt i32 %4412, %4415
  br i1 %4416, label %4417, label %4432

4417:                                             ; preds = %4409
  br i1 %4404, label %4424, label %4418

4418:                                             ; preds = %4417
  %4419 = getelementptr inbounds i32, ptr %7, i64 %4410
  %4420 = load i32, ptr %4419, align 4, !tbaa !5
  %4421 = getelementptr inbounds i32, ptr %6, i64 %4410
  %4422 = load i32, ptr %4421, align 4, !tbaa !5
  %4423 = add nsw i32 %4422, %4420
  store i32 %4423, ptr %4421, align 4, !tbaa !5
  br label %4442

4424:                                             ; preds = %4400, %4417
  %4425 = phi i32 [ %4412, %4417 ], [ %4401, %4400 ]
  %4426 = phi ptr [ %4411, %4417 ], [ %4, %4400 ]
  %4427 = phi i64 [ %4410, %4417 ], [ 0, %4400 ]
  %4428 = add nsw i32 %4425, 1
  store i32 %4428, ptr %4426, align 4, !tbaa !5
  %4429 = getelementptr inbounds i32, ptr %7, i64 %4427
  %4430 = load i32, ptr %4429, align 4, !tbaa !5
  %4431 = getelementptr inbounds i32, ptr %6, i64 %4427
  br label %4442

4432:                                             ; preds = %4409
  %4433 = icmp eq i32 %4412, %4415
  br i1 %4433, label %4434, label %4440

4434:                                             ; preds = %4432
  store i32 0, ptr %4411, align 4, !tbaa !5
  %4435 = getelementptr inbounds i32, ptr %8, i64 %4410
  %4436 = load i32, ptr %4435, align 4, !tbaa !5
  %4437 = getelementptr inbounds i32, ptr %6, i64 %4410
  store i32 %4436, ptr %4437, align 4, !tbaa !5
  %4438 = add nuw nsw i64 %4410, 1
  %4439 = icmp eq i64 %4438, %4307
  br i1 %4439, label %4447, label %4409, !llvm.loop !1447

4440:                                             ; preds = %4405, %4432
  store float %4397, ptr %4280, align 4, !tbaa !162
  %4441 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2305, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

4442:                                             ; preds = %4418, %4424
  %4443 = phi ptr [ %4431, %4424 ], [ %4411, %4418 ]
  %4444 = phi i32 [ %4430, %4424 ], [ 1, %4418 ]
  %4445 = load i32, ptr %4443, align 4, !tbaa !5
  %4446 = add nsw i32 %4445, %4444
  store i32 %4446, ptr %4443, align 4, !tbaa !5
  br label %4447

4447:                                             ; preds = %4434, %4442, %4407, %4384
  %4448 = icmp eq i32 %4399, %5
  br i1 %4448, label %5489, label %4310, !llvm.loop !1448

4449:                                             ; preds = %4293, %4588
  %4450 = phi float [ 0.000000e+00, %4293 ], [ %4536, %4588 ]
  %4451 = phi i32 [ 0, %4293 ], [ %4537, %4588 ]
  %4452 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4294, label %4453, label %4522

4453:                                             ; preds = %4449, %4512
  %4454 = phi i32 [ %4521, %4512 ], [ 0, %4449 ]
  %4455 = phi i64 [ %4463, %4512 ], [ %4298, %4449 ]
  %4456 = phi i64 [ %4520, %4512 ], [ %4297, %4449 ]
  %4457 = phi i32 [ %4518, %4512 ], [ %4452, %4449 ]
  %4458 = sub i32 %4296, %4454
  %4459 = tail call i32 @llvm.smin.i32(i32 %4458, i32 0)
  %4460 = sub i32 %4458, %4459
  %4461 = zext i32 %4460 to i64
  %4462 = add nuw nsw i64 %4461, 1
  %4463 = add nsw i64 %4455, -1
  %4464 = icmp ult i32 %4460, 31
  br i1 %4464, label %4500, label %4465

4465:                                             ; preds = %4453
  %4466 = and i64 %4462, 8589934560
  %4467 = sub i64 %4456, %4466
  br label %4468

4468:                                             ; preds = %4468, %4465
  %4469 = phi i64 [ 0, %4465 ], [ %4492, %4468 ]
  %4470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4488, %4468 ]
  %4471 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4489, %4468 ]
  %4472 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4490, %4468 ]
  %4473 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4465 ], [ %4491, %4468 ]
  %4474 = sub i64 %4456, %4469
  %4475 = getelementptr inbounds i32, ptr %11, i64 %4474
  %4476 = getelementptr inbounds i32, ptr %4475, i64 -7
  %4477 = load <8 x i32>, ptr %4476, align 4, !tbaa !5
  %4478 = shufflevector <8 x i32> %4477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4479 = getelementptr inbounds i32, ptr %4475, i64 -15
  %4480 = load <8 x i32>, ptr %4479, align 4, !tbaa !5
  %4481 = shufflevector <8 x i32> %4480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4482 = getelementptr inbounds i32, ptr %4475, i64 -23
  %4483 = load <8 x i32>, ptr %4482, align 4, !tbaa !5
  %4484 = shufflevector <8 x i32> %4483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4485 = getelementptr inbounds i32, ptr %4475, i64 -31
  %4486 = load <8 x i32>, ptr %4485, align 4, !tbaa !5
  %4487 = shufflevector <8 x i32> %4486, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4488 = mul <8 x i32> %4478, %4470
  %4489 = mul <8 x i32> %4481, %4471
  %4490 = mul <8 x i32> %4484, %4472
  %4491 = mul <8 x i32> %4487, %4473
  %4492 = add nuw i64 %4469, 32
  %4493 = icmp eq i64 %4492, %4466
  br i1 %4493, label %4494, label %4468, !llvm.loop !1449

4494:                                             ; preds = %4468
  %4495 = mul <8 x i32> %4489, %4488
  %4496 = mul <8 x i32> %4490, %4495
  %4497 = mul <8 x i32> %4491, %4496
  %4498 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4497)
  %4499 = icmp eq i64 %4462, %4466
  br i1 %4499, label %4512, label %4500

4500:                                             ; preds = %4453, %4494
  %4501 = phi i64 [ %4456, %4453 ], [ %4467, %4494 ]
  %4502 = phi i32 [ 1, %4453 ], [ %4498, %4494 ]
  br label %4503

4503:                                             ; preds = %4500, %4503
  %4504 = phi i64 [ %4509, %4503 ], [ %4501, %4500 ]
  %4505 = phi i32 [ %4508, %4503 ], [ %4502, %4500 ]
  %4506 = getelementptr inbounds i32, ptr %11, i64 %4504
  %4507 = load i32, ptr %4506, align 4, !tbaa !5
  %4508 = mul nsw i32 %4507, %4505
  %4509 = add nsw i64 %4504, -1
  %4510 = trunc i64 %4504 to i32
  %4511 = icmp sgt i32 %4510, 0
  br i1 %4511, label %4503, label %4512, !llvm.loop !1450

4512:                                             ; preds = %4503, %4494
  %4513 = phi i32 [ %4498, %4494 ], [ %4508, %4503 ]
  %4514 = and i64 %4463, 4294967295
  %4515 = getelementptr inbounds i32, ptr %6, i64 %4514
  %4516 = load i32, ptr %4515, align 4, !tbaa !5
  %4517 = mul nsw i32 %4516, %4513
  %4518 = add nsw i32 %4517, %4457
  %4519 = icmp sgt i64 %4455, 2
  %4520 = add nsw i64 %4456, -1
  %4521 = add i32 %4454, 1
  br i1 %4519, label %4453, label %4522, !llvm.loop !1451

4522:                                             ; preds = %4512, %4449
  %4523 = phi i32 [ %4452, %4449 ], [ %4518, %4512 ]
  %4524 = icmp slt i32 %4523, %5
  br i1 %4524, label %4527, label %4525

4525:                                             ; preds = %4522
  %4526 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2305, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

4527:                                             ; preds = %4522
  %4528 = sext i32 %4523 to i64
  %4529 = getelementptr inbounds double, ptr %4278, i64 %4528
  %4530 = load double, ptr %4529, align 8, !tbaa !18
  %4531 = fptrunc double %4530 to float
  %4532 = fpext float %4450 to double
  %4533 = fpext float %4531 to double
  %4534 = fmul fast double %4533, %4533
  %4535 = fadd fast double %4534, %4532
  %4536 = fptrunc double %4535 to float
  store float %4536, ptr %4280, align 4, !tbaa !162
  %4537 = add nuw nsw i32 %4451, 1
  br i1 %4295, label %4538, label %4588

4538:                                             ; preds = %4527
  %4539 = load i32, ptr %4, align 4, !tbaa !5
  %4540 = load i32, ptr %12, align 4, !tbaa !5
  %4541 = add nsw i32 %4540, -1
  %4542 = icmp slt i32 %4539, %4541
  br i1 %4542, label %4565, label %4543

4543:                                             ; preds = %4538
  %4544 = icmp eq i32 %4539, %4541
  br i1 %4544, label %4545, label %4581

4545:                                             ; preds = %4543
  store i32 0, ptr %4, align 4, !tbaa !5
  %4546 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4546, ptr %6, align 4, !tbaa !5
  br i1 %4300, label %4588, label %4547

4547:                                             ; preds = %4545, %4575
  %4548 = phi i64 [ %4579, %4575 ], [ 1, %4545 ]
  %4549 = getelementptr inbounds i32, ptr %4, i64 %4548
  %4550 = load i32, ptr %4549, align 4, !tbaa !5
  %4551 = getelementptr inbounds i32, ptr %12, i64 %4548
  %4552 = load i32, ptr %4551, align 4, !tbaa !5
  %4553 = add nsw i32 %4552, -1
  %4554 = icmp slt i32 %4550, %4553
  br i1 %4554, label %4555, label %4573

4555:                                             ; preds = %4547
  br i1 %4542, label %4565, label %4556

4556:                                             ; preds = %4555
  %4557 = shl i64 %4548, 32
  %4558 = add i64 %4557, -4294967296
  %4559 = ashr exact i64 %4558, 32
  %4560 = getelementptr inbounds i32, ptr %7, i64 %4559
  %4561 = load i32, ptr %4560, align 4, !tbaa !5
  %4562 = getelementptr inbounds i32, ptr %6, i64 %4548
  %4563 = load i32, ptr %4562, align 4, !tbaa !5
  %4564 = add nsw i32 %4563, %4561
  store i32 %4564, ptr %4562, align 4, !tbaa !5
  br label %4583

4565:                                             ; preds = %4538, %4555
  %4566 = phi i32 [ %4550, %4555 ], [ %4539, %4538 ]
  %4567 = phi ptr [ %4549, %4555 ], [ %4, %4538 ]
  %4568 = phi i64 [ %4548, %4555 ], [ 0, %4538 ]
  %4569 = add nsw i32 %4566, 1
  store i32 %4569, ptr %4567, align 4, !tbaa !5
  %4570 = getelementptr inbounds i32, ptr %7, i64 %4568
  %4571 = load i32, ptr %4570, align 4, !tbaa !5
  %4572 = getelementptr inbounds i32, ptr %6, i64 %4568
  br label %4583

4573:                                             ; preds = %4547
  %4574 = icmp eq i32 %4550, %4553
  br i1 %4574, label %4575, label %4581

4575:                                             ; preds = %4573
  store i32 0, ptr %4549, align 4, !tbaa !5
  %4576 = getelementptr inbounds i32, ptr %8, i64 %4548
  %4577 = load i32, ptr %4576, align 4, !tbaa !5
  %4578 = getelementptr inbounds i32, ptr %6, i64 %4548
  store i32 %4577, ptr %4578, align 4, !tbaa !5
  %4579 = add nuw nsw i64 %4548, 1
  %4580 = icmp eq i64 %4579, %4298
  br i1 %4580, label %4588, label %4547, !llvm.loop !1452

4581:                                             ; preds = %4543, %4573
  %4582 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2305, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

4583:                                             ; preds = %4556, %4565
  %4584 = phi ptr [ %4572, %4565 ], [ %4549, %4556 ]
  %4585 = phi i32 [ %4571, %4565 ], [ 1, %4556 ]
  %4586 = load i32, ptr %4584, align 4, !tbaa !5
  %4587 = add nsw i32 %4586, %4585
  store i32 %4587, ptr %4584, align 4, !tbaa !5
  br label %4588

4588:                                             ; preds = %4575, %4583, %4545, %4527
  %4589 = icmp eq i32 %4537, %5
  br i1 %4589, label %5491, label %4449, !llvm.loop !1453

4590:                                             ; preds = %4286
  %4591 = getelementptr inbounds i32, ptr %3, i64 %19
  %4592 = load i32, ptr %4591, align 4, !tbaa !5
  %4593 = icmp eq i32 %4592, 0
  %4594 = icmp sgt i32 %5, 0
  br i1 %4593, label %4604, label %4595

4595:                                             ; preds = %4590
  br i1 %4594, label %4596, label %5491

4596:                                             ; preds = %4595
  %4597 = icmp sgt i32 %13, 1
  %4598 = icmp sgt i32 %13, 0
  %4599 = add i32 %13, -2
  %4600 = zext i32 %4599 to i64
  %4601 = zext i32 %13 to i64
  %4602 = add nuw i32 %5, 1
  %4603 = icmp eq i32 %13, 1
  br label %4746

4604:                                             ; preds = %4590
  br i1 %4594, label %4605, label %5491

4605:                                             ; preds = %4604
  %4606 = icmp sgt i32 %13, 1
  %4607 = icmp sgt i32 %13, 0
  %4608 = add i32 %13, -2
  %4609 = zext i32 %4608 to i64
  %4610 = zext i32 %13 to i64
  %4611 = add nuw i32 %5, 1
  %4612 = icmp eq i32 %13, 1
  br label %4613

4613:                                             ; preds = %4605, %4744
  %4614 = phi float [ 0.000000e+00, %4605 ], [ %4694, %4744 ]
  %4615 = phi i32 [ 0, %4605 ], [ %4696, %4744 ]
  %4616 = phi double [ 0.000000e+00, %4605 ], [ %4695, %4744 ]
  %4617 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4606, label %4618, label %4687

4618:                                             ; preds = %4613, %4677
  %4619 = phi i32 [ %4686, %4677 ], [ 0, %4613 ]
  %4620 = phi i64 [ %4628, %4677 ], [ %4610, %4613 ]
  %4621 = phi i64 [ %4685, %4677 ], [ %4609, %4613 ]
  %4622 = phi i32 [ %4683, %4677 ], [ %4617, %4613 ]
  %4623 = sub i32 %4608, %4619
  %4624 = tail call i32 @llvm.smin.i32(i32 %4623, i32 0)
  %4625 = sub i32 %4623, %4624
  %4626 = zext i32 %4625 to i64
  %4627 = add nuw nsw i64 %4626, 1
  %4628 = add nsw i64 %4620, -1
  %4629 = icmp ult i32 %4625, 31
  br i1 %4629, label %4665, label %4630

4630:                                             ; preds = %4618
  %4631 = and i64 %4627, 8589934560
  %4632 = sub i64 %4621, %4631
  br label %4633

4633:                                             ; preds = %4633, %4630
  %4634 = phi i64 [ 0, %4630 ], [ %4657, %4633 ]
  %4635 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4630 ], [ %4653, %4633 ]
  %4636 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4630 ], [ %4654, %4633 ]
  %4637 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4630 ], [ %4655, %4633 ]
  %4638 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4630 ], [ %4656, %4633 ]
  %4639 = sub i64 %4621, %4634
  %4640 = getelementptr inbounds i32, ptr %9, i64 %4639
  %4641 = getelementptr inbounds i32, ptr %4640, i64 -7
  %4642 = load <8 x i32>, ptr %4641, align 4, !tbaa !5
  %4643 = shufflevector <8 x i32> %4642, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4644 = getelementptr inbounds i32, ptr %4640, i64 -15
  %4645 = load <8 x i32>, ptr %4644, align 4, !tbaa !5
  %4646 = shufflevector <8 x i32> %4645, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4647 = getelementptr inbounds i32, ptr %4640, i64 -23
  %4648 = load <8 x i32>, ptr %4647, align 4, !tbaa !5
  %4649 = shufflevector <8 x i32> %4648, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4650 = getelementptr inbounds i32, ptr %4640, i64 -31
  %4651 = load <8 x i32>, ptr %4650, align 4, !tbaa !5
  %4652 = shufflevector <8 x i32> %4651, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4653 = mul <8 x i32> %4643, %4635
  %4654 = mul <8 x i32> %4646, %4636
  %4655 = mul <8 x i32> %4649, %4637
  %4656 = mul <8 x i32> %4652, %4638
  %4657 = add nuw i64 %4634, 32
  %4658 = icmp eq i64 %4657, %4631
  br i1 %4658, label %4659, label %4633, !llvm.loop !1454

4659:                                             ; preds = %4633
  %4660 = mul <8 x i32> %4654, %4653
  %4661 = mul <8 x i32> %4655, %4660
  %4662 = mul <8 x i32> %4656, %4661
  %4663 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4662)
  %4664 = icmp eq i64 %4627, %4631
  br i1 %4664, label %4677, label %4665

4665:                                             ; preds = %4618, %4659
  %4666 = phi i64 [ %4621, %4618 ], [ %4632, %4659 ]
  %4667 = phi i32 [ 1, %4618 ], [ %4663, %4659 ]
  br label %4668

4668:                                             ; preds = %4665, %4668
  %4669 = phi i64 [ %4674, %4668 ], [ %4666, %4665 ]
  %4670 = phi i32 [ %4673, %4668 ], [ %4667, %4665 ]
  %4671 = getelementptr inbounds i32, ptr %9, i64 %4669
  %4672 = load i32, ptr %4671, align 4, !tbaa !5
  %4673 = mul nsw i32 %4672, %4670
  %4674 = add nsw i64 %4669, -1
  %4675 = trunc i64 %4669 to i32
  %4676 = icmp sgt i32 %4675, 0
  br i1 %4676, label %4668, label %4677, !llvm.loop !1455

4677:                                             ; preds = %4668, %4659
  %4678 = phi i32 [ %4663, %4659 ], [ %4673, %4668 ]
  %4679 = and i64 %4628, 4294967295
  %4680 = getelementptr inbounds i32, ptr %6, i64 %4679
  %4681 = load i32, ptr %4680, align 4, !tbaa !5
  %4682 = mul nsw i32 %4681, %4678
  %4683 = add nsw i32 %4682, %4622
  %4684 = icmp sgt i64 %4620, 2
  %4685 = add nsw i64 %4621, -1
  %4686 = add i32 %4619, 1
  br i1 %4684, label %4618, label %4687, !llvm.loop !1456

4687:                                             ; preds = %4677, %4613
  %4688 = phi i32 [ %4617, %4613 ], [ %4683, %4677 ]
  %4689 = sext i32 %4688 to i64
  %4690 = getelementptr inbounds double, ptr %4278, i64 %4689
  %4691 = load double, ptr %4690, align 8, !tbaa !18
  %4692 = fptrunc double %4691 to float
  %4693 = fmul fast float %4692, %4692
  %4694 = fadd fast float %4693, %4614
  %4695 = fadd fast double %4616, 1.000000e+00
  %4696 = add nuw nsw i32 %4615, 1
  br i1 %4607, label %4697, label %4744

4697:                                             ; preds = %4687
  %4698 = load i32, ptr %4, align 4, !tbaa !5
  %4699 = load i32, ptr %12, align 4, !tbaa !5
  %4700 = add nsw i32 %4699, -1
  %4701 = icmp slt i32 %4698, %4700
  br i1 %4701, label %4721, label %4702

4702:                                             ; preds = %4697
  %4703 = icmp eq i32 %4698, %4700
  br i1 %4703, label %4704, label %4737

4704:                                             ; preds = %4702
  store i32 0, ptr %4, align 4, !tbaa !5
  %4705 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4705, ptr %6, align 4, !tbaa !5
  br i1 %4612, label %4744, label %4706

4706:                                             ; preds = %4704, %4731
  %4707 = phi i64 [ %4735, %4731 ], [ 1, %4704 ]
  %4708 = getelementptr inbounds i32, ptr %4, i64 %4707
  %4709 = load i32, ptr %4708, align 4, !tbaa !5
  %4710 = getelementptr inbounds i32, ptr %12, i64 %4707
  %4711 = load i32, ptr %4710, align 4, !tbaa !5
  %4712 = add nsw i32 %4711, -1
  %4713 = icmp slt i32 %4709, %4712
  br i1 %4713, label %4714, label %4729

4714:                                             ; preds = %4706
  br i1 %4701, label %4721, label %4715

4715:                                             ; preds = %4714
  %4716 = getelementptr inbounds i32, ptr %7, i64 %4707
  %4717 = load i32, ptr %4716, align 4, !tbaa !5
  %4718 = getelementptr inbounds i32, ptr %6, i64 %4707
  %4719 = load i32, ptr %4718, align 4, !tbaa !5
  %4720 = add nsw i32 %4719, %4717
  store i32 %4720, ptr %4718, align 4, !tbaa !5
  br label %4739

4721:                                             ; preds = %4697, %4714
  %4722 = phi i32 [ %4709, %4714 ], [ %4698, %4697 ]
  %4723 = phi ptr [ %4708, %4714 ], [ %4, %4697 ]
  %4724 = phi i64 [ %4707, %4714 ], [ 0, %4697 ]
  %4725 = add nsw i32 %4722, 1
  store i32 %4725, ptr %4723, align 4, !tbaa !5
  %4726 = getelementptr inbounds i32, ptr %7, i64 %4724
  %4727 = load i32, ptr %4726, align 4, !tbaa !5
  %4728 = getelementptr inbounds i32, ptr %6, i64 %4724
  br label %4739

4729:                                             ; preds = %4706
  %4730 = icmp eq i32 %4709, %4712
  br i1 %4730, label %4731, label %4737

4731:                                             ; preds = %4729
  store i32 0, ptr %4708, align 4, !tbaa !5
  %4732 = getelementptr inbounds i32, ptr %8, i64 %4707
  %4733 = load i32, ptr %4732, align 4, !tbaa !5
  %4734 = getelementptr inbounds i32, ptr %6, i64 %4707
  store i32 %4733, ptr %4734, align 4, !tbaa !5
  %4735 = add nuw nsw i64 %4707, 1
  %4736 = icmp eq i64 %4735, %4610
  br i1 %4736, label %4744, label %4706, !llvm.loop !1457

4737:                                             ; preds = %4702, %4729
  store float %4694, ptr %4280, align 4, !tbaa !162
  %4738 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2305, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

4739:                                             ; preds = %4715, %4721
  %4740 = phi ptr [ %4728, %4721 ], [ %4708, %4715 ]
  %4741 = phi i32 [ %4727, %4721 ], [ 1, %4715 ]
  %4742 = load i32, ptr %4740, align 4, !tbaa !5
  %4743 = add nsw i32 %4742, %4741
  store i32 %4743, ptr %4740, align 4, !tbaa !5
  br label %4744

4744:                                             ; preds = %4731, %4739, %4704, %4687
  %4745 = icmp eq i32 %4696, %5
  br i1 %4745, label %5490, label %4613, !llvm.loop !1458

4746:                                             ; preds = %4596, %4882
  %4747 = phi float [ 0.000000e+00, %4596 ], [ %4830, %4882 ]
  %4748 = phi i32 [ 0, %4596 ], [ %4831, %4882 ]
  %4749 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4597, label %4750, label %4819

4750:                                             ; preds = %4746, %4809
  %4751 = phi i32 [ %4818, %4809 ], [ 0, %4746 ]
  %4752 = phi i64 [ %4760, %4809 ], [ %4601, %4746 ]
  %4753 = phi i64 [ %4817, %4809 ], [ %4600, %4746 ]
  %4754 = phi i32 [ %4815, %4809 ], [ %4749, %4746 ]
  %4755 = sub i32 %4599, %4751
  %4756 = tail call i32 @llvm.smin.i32(i32 %4755, i32 0)
  %4757 = sub i32 %4755, %4756
  %4758 = zext i32 %4757 to i64
  %4759 = add nuw nsw i64 %4758, 1
  %4760 = add nsw i64 %4752, -1
  %4761 = icmp ult i32 %4757, 31
  br i1 %4761, label %4797, label %4762

4762:                                             ; preds = %4750
  %4763 = and i64 %4759, 8589934560
  %4764 = sub i64 %4753, %4763
  br label %4765

4765:                                             ; preds = %4765, %4762
  %4766 = phi i64 [ 0, %4762 ], [ %4789, %4765 ]
  %4767 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4762 ], [ %4785, %4765 ]
  %4768 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4762 ], [ %4786, %4765 ]
  %4769 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4762 ], [ %4787, %4765 ]
  %4770 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4762 ], [ %4788, %4765 ]
  %4771 = sub i64 %4753, %4766
  %4772 = getelementptr inbounds i32, ptr %11, i64 %4771
  %4773 = getelementptr inbounds i32, ptr %4772, i64 -7
  %4774 = load <8 x i32>, ptr %4773, align 4, !tbaa !5
  %4775 = shufflevector <8 x i32> %4774, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4776 = getelementptr inbounds i32, ptr %4772, i64 -15
  %4777 = load <8 x i32>, ptr %4776, align 4, !tbaa !5
  %4778 = shufflevector <8 x i32> %4777, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4779 = getelementptr inbounds i32, ptr %4772, i64 -23
  %4780 = load <8 x i32>, ptr %4779, align 4, !tbaa !5
  %4781 = shufflevector <8 x i32> %4780, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4782 = getelementptr inbounds i32, ptr %4772, i64 -31
  %4783 = load <8 x i32>, ptr %4782, align 4, !tbaa !5
  %4784 = shufflevector <8 x i32> %4783, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4785 = mul <8 x i32> %4775, %4767
  %4786 = mul <8 x i32> %4778, %4768
  %4787 = mul <8 x i32> %4781, %4769
  %4788 = mul <8 x i32> %4784, %4770
  %4789 = add nuw i64 %4766, 32
  %4790 = icmp eq i64 %4789, %4763
  br i1 %4790, label %4791, label %4765, !llvm.loop !1459

4791:                                             ; preds = %4765
  %4792 = mul <8 x i32> %4786, %4785
  %4793 = mul <8 x i32> %4787, %4792
  %4794 = mul <8 x i32> %4788, %4793
  %4795 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4794)
  %4796 = icmp eq i64 %4759, %4763
  br i1 %4796, label %4809, label %4797

4797:                                             ; preds = %4750, %4791
  %4798 = phi i64 [ %4753, %4750 ], [ %4764, %4791 ]
  %4799 = phi i32 [ 1, %4750 ], [ %4795, %4791 ]
  br label %4800

4800:                                             ; preds = %4797, %4800
  %4801 = phi i64 [ %4806, %4800 ], [ %4798, %4797 ]
  %4802 = phi i32 [ %4805, %4800 ], [ %4799, %4797 ]
  %4803 = getelementptr inbounds i32, ptr %11, i64 %4801
  %4804 = load i32, ptr %4803, align 4, !tbaa !5
  %4805 = mul nsw i32 %4804, %4802
  %4806 = add nsw i64 %4801, -1
  %4807 = trunc i64 %4801 to i32
  %4808 = icmp sgt i32 %4807, 0
  br i1 %4808, label %4800, label %4809, !llvm.loop !1460

4809:                                             ; preds = %4800, %4791
  %4810 = phi i32 [ %4795, %4791 ], [ %4805, %4800 ]
  %4811 = and i64 %4760, 4294967295
  %4812 = getelementptr inbounds i32, ptr %6, i64 %4811
  %4813 = load i32, ptr %4812, align 4, !tbaa !5
  %4814 = mul nsw i32 %4813, %4810
  %4815 = add nsw i32 %4814, %4754
  %4816 = icmp sgt i64 %4752, 2
  %4817 = add nsw i64 %4753, -1
  %4818 = add i32 %4751, 1
  br i1 %4816, label %4750, label %4819, !llvm.loop !1461

4819:                                             ; preds = %4809, %4746
  %4820 = phi i32 [ %4749, %4746 ], [ %4815, %4809 ]
  %4821 = icmp slt i32 %4820, %5
  br i1 %4821, label %4824, label %4822

4822:                                             ; preds = %4819
  %4823 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2305, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

4824:                                             ; preds = %4819
  %4825 = sext i32 %4820 to i64
  %4826 = getelementptr inbounds double, ptr %4278, i64 %4825
  %4827 = load double, ptr %4826, align 8, !tbaa !18
  %4828 = fptrunc double %4827 to float
  %4829 = fmul fast float %4828, %4828
  %4830 = fadd fast float %4829, %4747
  store float %4830, ptr %4280, align 4, !tbaa !162
  %4831 = add nuw nsw i32 %4748, 1
  br i1 %4598, label %4832, label %4882

4832:                                             ; preds = %4824
  %4833 = load i32, ptr %4, align 4, !tbaa !5
  %4834 = load i32, ptr %12, align 4, !tbaa !5
  %4835 = add nsw i32 %4834, -1
  %4836 = icmp slt i32 %4833, %4835
  br i1 %4836, label %4859, label %4837

4837:                                             ; preds = %4832
  %4838 = icmp eq i32 %4833, %4835
  br i1 %4838, label %4839, label %4875

4839:                                             ; preds = %4837
  store i32 0, ptr %4, align 4, !tbaa !5
  %4840 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4840, ptr %6, align 4, !tbaa !5
  br i1 %4603, label %4882, label %4841

4841:                                             ; preds = %4839, %4869
  %4842 = phi i64 [ %4873, %4869 ], [ 1, %4839 ]
  %4843 = getelementptr inbounds i32, ptr %4, i64 %4842
  %4844 = load i32, ptr %4843, align 4, !tbaa !5
  %4845 = getelementptr inbounds i32, ptr %12, i64 %4842
  %4846 = load i32, ptr %4845, align 4, !tbaa !5
  %4847 = add nsw i32 %4846, -1
  %4848 = icmp slt i32 %4844, %4847
  br i1 %4848, label %4849, label %4867

4849:                                             ; preds = %4841
  br i1 %4836, label %4859, label %4850

4850:                                             ; preds = %4849
  %4851 = shl i64 %4842, 32
  %4852 = add i64 %4851, -4294967296
  %4853 = ashr exact i64 %4852, 32
  %4854 = getelementptr inbounds i32, ptr %7, i64 %4853
  %4855 = load i32, ptr %4854, align 4, !tbaa !5
  %4856 = getelementptr inbounds i32, ptr %6, i64 %4842
  %4857 = load i32, ptr %4856, align 4, !tbaa !5
  %4858 = add nsw i32 %4857, %4855
  store i32 %4858, ptr %4856, align 4, !tbaa !5
  br label %4877

4859:                                             ; preds = %4832, %4849
  %4860 = phi i32 [ %4844, %4849 ], [ %4833, %4832 ]
  %4861 = phi ptr [ %4843, %4849 ], [ %4, %4832 ]
  %4862 = phi i64 [ %4842, %4849 ], [ 0, %4832 ]
  %4863 = add nsw i32 %4860, 1
  store i32 %4863, ptr %4861, align 4, !tbaa !5
  %4864 = getelementptr inbounds i32, ptr %7, i64 %4862
  %4865 = load i32, ptr %4864, align 4, !tbaa !5
  %4866 = getelementptr inbounds i32, ptr %6, i64 %4862
  br label %4877

4867:                                             ; preds = %4841
  %4868 = icmp eq i32 %4844, %4847
  br i1 %4868, label %4869, label %4875

4869:                                             ; preds = %4867
  store i32 0, ptr %4843, align 4, !tbaa !5
  %4870 = getelementptr inbounds i32, ptr %8, i64 %4842
  %4871 = load i32, ptr %4870, align 4, !tbaa !5
  %4872 = getelementptr inbounds i32, ptr %6, i64 %4842
  store i32 %4871, ptr %4872, align 4, !tbaa !5
  %4873 = add nuw nsw i64 %4842, 1
  %4874 = icmp eq i64 %4873, %4601
  br i1 %4874, label %4882, label %4841, !llvm.loop !1462

4875:                                             ; preds = %4837, %4867
  %4876 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2305, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

4877:                                             ; preds = %4850, %4859
  %4878 = phi ptr [ %4866, %4859 ], [ %4843, %4850 ]
  %4879 = phi i32 [ %4865, %4859 ], [ 1, %4850 ]
  %4880 = load i32, ptr %4878, align 4, !tbaa !5
  %4881 = add nsw i32 %4880, %4879
  store i32 %4881, ptr %4878, align 4, !tbaa !5
  br label %4882

4882:                                             ; preds = %4869, %4877, %4839, %4824
  %4883 = icmp eq i32 %4831, %5
  br i1 %4883, label %5491, label %4746, !llvm.loop !1463

4884:                                             ; preds = %4286
  %4885 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2305, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

4886:                                             ; preds = %18
  %4887 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4888 = load ptr, ptr %4887, align 8, !tbaa !9
  %4889 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4890 = load ptr, ptr %4889, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4890, align 8, !tbaa !18
  %4891 = icmp eq i32 %13, 0
  br i1 %4891, label %4892, label %4895

4892:                                             ; preds = %4886
  %4893 = load double, ptr %4888, align 8, !tbaa !18
  %4894 = fmul fast double %4893, %4893
  store double %4894, ptr %4890, align 8, !tbaa !18
  br label %5491

4895:                                             ; preds = %4886
  switch i32 %1, label %5483 [
    i32 1, label %4896
    i32 0, label %5191
  ]

4896:                                             ; preds = %4895
  %4897 = getelementptr inbounds i32, ptr %3, i64 %19
  %4898 = load i32, ptr %4897, align 4, !tbaa !5
  %4899 = icmp eq i32 %4898, 0
  %4900 = icmp sgt i32 %5, 0
  br i1 %4899, label %4910, label %4901

4901:                                             ; preds = %4896
  br i1 %4900, label %4902, label %5491

4902:                                             ; preds = %4901
  %4903 = icmp sgt i32 %13, 1
  %4904 = icmp sgt i32 %13, 0
  %4905 = add i32 %13, -2
  %4906 = zext i32 %4905 to i64
  %4907 = zext i32 %13 to i64
  %4908 = add nuw i32 %5, 1
  %4909 = icmp eq i32 %13, 1
  br label %5054

4910:                                             ; preds = %4896
  br i1 %4900, label %4911, label %5491

4911:                                             ; preds = %4910
  %4912 = icmp sgt i32 %13, 1
  %4913 = icmp sgt i32 %13, 0
  %4914 = add i32 %13, -2
  %4915 = zext i32 %4914 to i64
  %4916 = zext i32 %13 to i64
  %4917 = add nuw i32 %5, 1
  %4918 = icmp eq i32 %13, 1
  br label %4919

4919:                                             ; preds = %4911, %5052
  %4920 = phi double [ 0.000000e+00, %4911 ], [ %5002, %5052 ]
  %4921 = phi i32 [ 0, %4911 ], [ %5004, %5052 ]
  %4922 = phi double [ 0.000000e+00, %4911 ], [ %5003, %5052 ]
  %4923 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4912, label %4924, label %4993

4924:                                             ; preds = %4919, %4983
  %4925 = phi i32 [ %4992, %4983 ], [ 0, %4919 ]
  %4926 = phi i64 [ %4934, %4983 ], [ %4916, %4919 ]
  %4927 = phi i64 [ %4991, %4983 ], [ %4915, %4919 ]
  %4928 = phi i32 [ %4989, %4983 ], [ %4923, %4919 ]
  %4929 = sub i32 %4914, %4925
  %4930 = tail call i32 @llvm.smin.i32(i32 %4929, i32 0)
  %4931 = sub i32 %4929, %4930
  %4932 = zext i32 %4931 to i64
  %4933 = add nuw nsw i64 %4932, 1
  %4934 = add nsw i64 %4926, -1
  %4935 = icmp ult i32 %4931, 31
  br i1 %4935, label %4971, label %4936

4936:                                             ; preds = %4924
  %4937 = and i64 %4933, 8589934560
  %4938 = sub i64 %4927, %4937
  br label %4939

4939:                                             ; preds = %4939, %4936
  %4940 = phi i64 [ 0, %4936 ], [ %4963, %4939 ]
  %4941 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4936 ], [ %4959, %4939 ]
  %4942 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4936 ], [ %4960, %4939 ]
  %4943 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4936 ], [ %4961, %4939 ]
  %4944 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4936 ], [ %4962, %4939 ]
  %4945 = sub i64 %4927, %4940
  %4946 = getelementptr inbounds i32, ptr %9, i64 %4945
  %4947 = getelementptr inbounds i32, ptr %4946, i64 -7
  %4948 = load <8 x i32>, ptr %4947, align 4, !tbaa !5
  %4949 = shufflevector <8 x i32> %4948, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4950 = getelementptr inbounds i32, ptr %4946, i64 -15
  %4951 = load <8 x i32>, ptr %4950, align 4, !tbaa !5
  %4952 = shufflevector <8 x i32> %4951, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4953 = getelementptr inbounds i32, ptr %4946, i64 -23
  %4954 = load <8 x i32>, ptr %4953, align 4, !tbaa !5
  %4955 = shufflevector <8 x i32> %4954, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4956 = getelementptr inbounds i32, ptr %4946, i64 -31
  %4957 = load <8 x i32>, ptr %4956, align 4, !tbaa !5
  %4958 = shufflevector <8 x i32> %4957, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4959 = mul <8 x i32> %4949, %4941
  %4960 = mul <8 x i32> %4952, %4942
  %4961 = mul <8 x i32> %4955, %4943
  %4962 = mul <8 x i32> %4958, %4944
  %4963 = add nuw i64 %4940, 32
  %4964 = icmp eq i64 %4963, %4937
  br i1 %4964, label %4965, label %4939, !llvm.loop !1464

4965:                                             ; preds = %4939
  %4966 = mul <8 x i32> %4960, %4959
  %4967 = mul <8 x i32> %4961, %4966
  %4968 = mul <8 x i32> %4962, %4967
  %4969 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4968)
  %4970 = icmp eq i64 %4933, %4937
  br i1 %4970, label %4983, label %4971

4971:                                             ; preds = %4924, %4965
  %4972 = phi i64 [ %4927, %4924 ], [ %4938, %4965 ]
  %4973 = phi i32 [ 1, %4924 ], [ %4969, %4965 ]
  br label %4974

4974:                                             ; preds = %4971, %4974
  %4975 = phi i64 [ %4980, %4974 ], [ %4972, %4971 ]
  %4976 = phi i32 [ %4979, %4974 ], [ %4973, %4971 ]
  %4977 = getelementptr inbounds i32, ptr %9, i64 %4975
  %4978 = load i32, ptr %4977, align 4, !tbaa !5
  %4979 = mul nsw i32 %4978, %4976
  %4980 = add nsw i64 %4975, -1
  %4981 = trunc i64 %4975 to i32
  %4982 = icmp sgt i32 %4981, 0
  br i1 %4982, label %4974, label %4983, !llvm.loop !1465

4983:                                             ; preds = %4974, %4965
  %4984 = phi i32 [ %4969, %4965 ], [ %4979, %4974 ]
  %4985 = and i64 %4934, 4294967295
  %4986 = getelementptr inbounds i32, ptr %6, i64 %4985
  %4987 = load i32, ptr %4986, align 4, !tbaa !5
  %4988 = mul nsw i32 %4987, %4984
  %4989 = add nsw i32 %4988, %4928
  %4990 = icmp sgt i64 %4926, 2
  %4991 = add nsw i64 %4927, -1
  %4992 = add i32 %4925, 1
  br i1 %4990, label %4924, label %4993, !llvm.loop !1466

4993:                                             ; preds = %4983, %4919
  %4994 = phi i32 [ %4923, %4919 ], [ %4989, %4983 ]
  %4995 = sext i32 %4994 to i64
  %4996 = getelementptr inbounds double, ptr %2, i64 %4995
  %4997 = load double, ptr %4996, align 8, !tbaa !18
  %4998 = getelementptr inbounds double, ptr %4888, i64 %4995
  %4999 = load double, ptr %4998, align 8, !tbaa !18
  %5000 = fmul fast double %4999, %4997
  %5001 = fmul fast double %5000, %5000
  %5002 = fadd fast double %5001, %4920
  store double %5002, ptr %4890, align 8, !tbaa !18
  %5003 = fadd fast double %4997, %4922
  %5004 = add nuw nsw i32 %4921, 1
  br i1 %4913, label %5005, label %5052

5005:                                             ; preds = %4993
  %5006 = load i32, ptr %4, align 4, !tbaa !5
  %5007 = load i32, ptr %12, align 4, !tbaa !5
  %5008 = add nsw i32 %5007, -1
  %5009 = icmp slt i32 %5006, %5008
  br i1 %5009, label %5029, label %5010

5010:                                             ; preds = %5005
  %5011 = icmp eq i32 %5006, %5008
  br i1 %5011, label %5012, label %5045

5012:                                             ; preds = %5010
  store i32 0, ptr %4, align 4, !tbaa !5
  %5013 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5013, ptr %6, align 4, !tbaa !5
  br i1 %4918, label %5052, label %5014

5014:                                             ; preds = %5012, %5039
  %5015 = phi i64 [ %5043, %5039 ], [ 1, %5012 ]
  %5016 = getelementptr inbounds i32, ptr %4, i64 %5015
  %5017 = load i32, ptr %5016, align 4, !tbaa !5
  %5018 = getelementptr inbounds i32, ptr %12, i64 %5015
  %5019 = load i32, ptr %5018, align 4, !tbaa !5
  %5020 = add nsw i32 %5019, -1
  %5021 = icmp slt i32 %5017, %5020
  br i1 %5021, label %5022, label %5037

5022:                                             ; preds = %5014
  br i1 %5009, label %5029, label %5023

5023:                                             ; preds = %5022
  %5024 = getelementptr inbounds i32, ptr %7, i64 %5015
  %5025 = load i32, ptr %5024, align 4, !tbaa !5
  %5026 = getelementptr inbounds i32, ptr %6, i64 %5015
  %5027 = load i32, ptr %5026, align 4, !tbaa !5
  %5028 = add nsw i32 %5027, %5025
  store i32 %5028, ptr %5026, align 4, !tbaa !5
  br label %5047

5029:                                             ; preds = %5005, %5022
  %5030 = phi i32 [ %5017, %5022 ], [ %5006, %5005 ]
  %5031 = phi ptr [ %5016, %5022 ], [ %4, %5005 ]
  %5032 = phi i64 [ %5015, %5022 ], [ 0, %5005 ]
  %5033 = add nsw i32 %5030, 1
  store i32 %5033, ptr %5031, align 4, !tbaa !5
  %5034 = getelementptr inbounds i32, ptr %7, i64 %5032
  %5035 = load i32, ptr %5034, align 4, !tbaa !5
  %5036 = getelementptr inbounds i32, ptr %6, i64 %5032
  br label %5047

5037:                                             ; preds = %5014
  %5038 = icmp eq i32 %5017, %5020
  br i1 %5038, label %5039, label %5045

5039:                                             ; preds = %5037
  store i32 0, ptr %5016, align 4, !tbaa !5
  %5040 = getelementptr inbounds i32, ptr %8, i64 %5015
  %5041 = load i32, ptr %5040, align 4, !tbaa !5
  %5042 = getelementptr inbounds i32, ptr %6, i64 %5015
  store i32 %5041, ptr %5042, align 4, !tbaa !5
  %5043 = add nuw nsw i64 %5015, 1
  %5044 = icmp eq i64 %5043, %4916
  br i1 %5044, label %5052, label %5014, !llvm.loop !1467

5045:                                             ; preds = %5010, %5037
  %5046 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2310, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

5047:                                             ; preds = %5023, %5029
  %5048 = phi ptr [ %5036, %5029 ], [ %5016, %5023 ]
  %5049 = phi i32 [ %5035, %5029 ], [ 1, %5023 ]
  %5050 = load i32, ptr %5048, align 4, !tbaa !5
  %5051 = add nsw i32 %5050, %5049
  store i32 %5051, ptr %5048, align 4, !tbaa !5
  br label %5052

5052:                                             ; preds = %5039, %5047, %5012, %4993
  %5053 = icmp eq i32 %5004, %5
  br i1 %5053, label %5491, label %4919, !llvm.loop !1468

5054:                                             ; preds = %4902, %5189
  %5055 = phi double [ 0.000000e+00, %4902 ], [ %5137, %5189 ]
  %5056 = phi i32 [ 0, %4902 ], [ %5138, %5189 ]
  %5057 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4903, label %5058, label %5127

5058:                                             ; preds = %5054, %5117
  %5059 = phi i32 [ %5126, %5117 ], [ 0, %5054 ]
  %5060 = phi i64 [ %5068, %5117 ], [ %4907, %5054 ]
  %5061 = phi i64 [ %5125, %5117 ], [ %4906, %5054 ]
  %5062 = phi i32 [ %5123, %5117 ], [ %5057, %5054 ]
  %5063 = sub i32 %4905, %5059
  %5064 = tail call i32 @llvm.smin.i32(i32 %5063, i32 0)
  %5065 = sub i32 %5063, %5064
  %5066 = zext i32 %5065 to i64
  %5067 = add nuw nsw i64 %5066, 1
  %5068 = add nsw i64 %5060, -1
  %5069 = icmp ult i32 %5065, 31
  br i1 %5069, label %5105, label %5070

5070:                                             ; preds = %5058
  %5071 = and i64 %5067, 8589934560
  %5072 = sub i64 %5061, %5071
  br label %5073

5073:                                             ; preds = %5073, %5070
  %5074 = phi i64 [ 0, %5070 ], [ %5097, %5073 ]
  %5075 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5070 ], [ %5093, %5073 ]
  %5076 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5070 ], [ %5094, %5073 ]
  %5077 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5070 ], [ %5095, %5073 ]
  %5078 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5070 ], [ %5096, %5073 ]
  %5079 = sub i64 %5061, %5074
  %5080 = getelementptr inbounds i32, ptr %11, i64 %5079
  %5081 = getelementptr inbounds i32, ptr %5080, i64 -7
  %5082 = load <8 x i32>, ptr %5081, align 4, !tbaa !5
  %5083 = shufflevector <8 x i32> %5082, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5084 = getelementptr inbounds i32, ptr %5080, i64 -15
  %5085 = load <8 x i32>, ptr %5084, align 4, !tbaa !5
  %5086 = shufflevector <8 x i32> %5085, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5087 = getelementptr inbounds i32, ptr %5080, i64 -23
  %5088 = load <8 x i32>, ptr %5087, align 4, !tbaa !5
  %5089 = shufflevector <8 x i32> %5088, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5090 = getelementptr inbounds i32, ptr %5080, i64 -31
  %5091 = load <8 x i32>, ptr %5090, align 4, !tbaa !5
  %5092 = shufflevector <8 x i32> %5091, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5093 = mul <8 x i32> %5083, %5075
  %5094 = mul <8 x i32> %5086, %5076
  %5095 = mul <8 x i32> %5089, %5077
  %5096 = mul <8 x i32> %5092, %5078
  %5097 = add nuw i64 %5074, 32
  %5098 = icmp eq i64 %5097, %5071
  br i1 %5098, label %5099, label %5073, !llvm.loop !1469

5099:                                             ; preds = %5073
  %5100 = mul <8 x i32> %5094, %5093
  %5101 = mul <8 x i32> %5095, %5100
  %5102 = mul <8 x i32> %5096, %5101
  %5103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5102)
  %5104 = icmp eq i64 %5067, %5071
  br i1 %5104, label %5117, label %5105

5105:                                             ; preds = %5058, %5099
  %5106 = phi i64 [ %5061, %5058 ], [ %5072, %5099 ]
  %5107 = phi i32 [ 1, %5058 ], [ %5103, %5099 ]
  br label %5108

5108:                                             ; preds = %5105, %5108
  %5109 = phi i64 [ %5114, %5108 ], [ %5106, %5105 ]
  %5110 = phi i32 [ %5113, %5108 ], [ %5107, %5105 ]
  %5111 = getelementptr inbounds i32, ptr %11, i64 %5109
  %5112 = load i32, ptr %5111, align 4, !tbaa !5
  %5113 = mul nsw i32 %5112, %5110
  %5114 = add nsw i64 %5109, -1
  %5115 = trunc i64 %5109 to i32
  %5116 = icmp sgt i32 %5115, 0
  br i1 %5116, label %5108, label %5117, !llvm.loop !1470

5117:                                             ; preds = %5108, %5099
  %5118 = phi i32 [ %5103, %5099 ], [ %5113, %5108 ]
  %5119 = and i64 %5068, 4294967295
  %5120 = getelementptr inbounds i32, ptr %6, i64 %5119
  %5121 = load i32, ptr %5120, align 4, !tbaa !5
  %5122 = mul nsw i32 %5121, %5118
  %5123 = add nsw i32 %5122, %5062
  %5124 = icmp sgt i64 %5060, 2
  %5125 = add nsw i64 %5061, -1
  %5126 = add i32 %5059, 1
  br i1 %5124, label %5058, label %5127, !llvm.loop !1471

5127:                                             ; preds = %5117, %5054
  %5128 = phi i32 [ %5057, %5054 ], [ %5123, %5117 ]
  %5129 = icmp slt i32 %5128, %5
  br i1 %5129, label %5132, label %5130

5130:                                             ; preds = %5127
  %5131 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2310, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

5132:                                             ; preds = %5127
  %5133 = sext i32 %5128 to i64
  %5134 = getelementptr inbounds double, ptr %4888, i64 %5133
  %5135 = load double, ptr %5134, align 8, !tbaa !18
  %5136 = fmul fast double %5135, %5135
  %5137 = fadd fast double %5055, %5136
  store double %5137, ptr %4890, align 8, !tbaa !18
  %5138 = add nuw nsw i32 %5056, 1
  br i1 %4904, label %5139, label %5189

5139:                                             ; preds = %5132
  %5140 = load i32, ptr %4, align 4, !tbaa !5
  %5141 = load i32, ptr %12, align 4, !tbaa !5
  %5142 = add nsw i32 %5141, -1
  %5143 = icmp slt i32 %5140, %5142
  br i1 %5143, label %5166, label %5144

5144:                                             ; preds = %5139
  %5145 = icmp eq i32 %5140, %5142
  br i1 %5145, label %5146, label %5182

5146:                                             ; preds = %5144
  store i32 0, ptr %4, align 4, !tbaa !5
  %5147 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5147, ptr %6, align 4, !tbaa !5
  br i1 %4909, label %5189, label %5148

5148:                                             ; preds = %5146, %5176
  %5149 = phi i64 [ %5180, %5176 ], [ 1, %5146 ]
  %5150 = getelementptr inbounds i32, ptr %4, i64 %5149
  %5151 = load i32, ptr %5150, align 4, !tbaa !5
  %5152 = getelementptr inbounds i32, ptr %12, i64 %5149
  %5153 = load i32, ptr %5152, align 4, !tbaa !5
  %5154 = add nsw i32 %5153, -1
  %5155 = icmp slt i32 %5151, %5154
  br i1 %5155, label %5156, label %5174

5156:                                             ; preds = %5148
  br i1 %5143, label %5166, label %5157

5157:                                             ; preds = %5156
  %5158 = shl i64 %5149, 32
  %5159 = add i64 %5158, -4294967296
  %5160 = ashr exact i64 %5159, 32
  %5161 = getelementptr inbounds i32, ptr %7, i64 %5160
  %5162 = load i32, ptr %5161, align 4, !tbaa !5
  %5163 = getelementptr inbounds i32, ptr %6, i64 %5149
  %5164 = load i32, ptr %5163, align 4, !tbaa !5
  %5165 = add nsw i32 %5164, %5162
  store i32 %5165, ptr %5163, align 4, !tbaa !5
  br label %5184

5166:                                             ; preds = %5139, %5156
  %5167 = phi i32 [ %5151, %5156 ], [ %5140, %5139 ]
  %5168 = phi ptr [ %5150, %5156 ], [ %4, %5139 ]
  %5169 = phi i64 [ %5149, %5156 ], [ 0, %5139 ]
  %5170 = add nsw i32 %5167, 1
  store i32 %5170, ptr %5168, align 4, !tbaa !5
  %5171 = getelementptr inbounds i32, ptr %7, i64 %5169
  %5172 = load i32, ptr %5171, align 4, !tbaa !5
  %5173 = getelementptr inbounds i32, ptr %6, i64 %5169
  br label %5184

5174:                                             ; preds = %5148
  %5175 = icmp eq i32 %5151, %5154
  br i1 %5175, label %5176, label %5182

5176:                                             ; preds = %5174
  store i32 0, ptr %5150, align 4, !tbaa !5
  %5177 = getelementptr inbounds i32, ptr %8, i64 %5149
  %5178 = load i32, ptr %5177, align 4, !tbaa !5
  %5179 = getelementptr inbounds i32, ptr %6, i64 %5149
  store i32 %5178, ptr %5179, align 4, !tbaa !5
  %5180 = add nuw nsw i64 %5149, 1
  %5181 = icmp eq i64 %5180, %4907
  br i1 %5181, label %5189, label %5148, !llvm.loop !1472

5182:                                             ; preds = %5144, %5174
  %5183 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2310, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

5184:                                             ; preds = %5157, %5166
  %5185 = phi ptr [ %5173, %5166 ], [ %5150, %5157 ]
  %5186 = phi i32 [ %5172, %5166 ], [ 1, %5157 ]
  %5187 = load i32, ptr %5185, align 4, !tbaa !5
  %5188 = add nsw i32 %5187, %5186
  store i32 %5188, ptr %5185, align 4, !tbaa !5
  br label %5189

5189:                                             ; preds = %5176, %5184, %5146, %5132
  %5190 = icmp eq i32 %5138, %5
  br i1 %5190, label %5491, label %5054, !llvm.loop !1473

5191:                                             ; preds = %4895
  %5192 = getelementptr inbounds i32, ptr %3, i64 %19
  %5193 = load i32, ptr %5192, align 4, !tbaa !5
  %5194 = icmp eq i32 %5193, 0
  %5195 = icmp sgt i32 %5, 0
  br i1 %5194, label %5205, label %5196

5196:                                             ; preds = %5191
  br i1 %5195, label %5197, label %5491

5197:                                             ; preds = %5196
  %5198 = icmp sgt i32 %13, 1
  %5199 = icmp sgt i32 %13, 0
  %5200 = add i32 %13, -2
  %5201 = zext i32 %5200 to i64
  %5202 = zext i32 %13 to i64
  %5203 = add nuw i32 %5, 1
  %5204 = icmp eq i32 %13, 1
  br label %5346

5205:                                             ; preds = %5191
  br i1 %5195, label %5206, label %5491

5206:                                             ; preds = %5205
  %5207 = icmp sgt i32 %13, 1
  %5208 = icmp sgt i32 %13, 0
  %5209 = add i32 %13, -2
  %5210 = zext i32 %5209 to i64
  %5211 = zext i32 %13 to i64
  %5212 = add nuw i32 %5, 1
  %5213 = icmp eq i32 %13, 1
  br label %5214

5214:                                             ; preds = %5206, %5344
  %5215 = phi double [ 0.000000e+00, %5206 ], [ %5294, %5344 ]
  %5216 = phi i32 [ 0, %5206 ], [ %5296, %5344 ]
  %5217 = phi double [ 0.000000e+00, %5206 ], [ %5295, %5344 ]
  %5218 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5207, label %5219, label %5288

5219:                                             ; preds = %5214, %5278
  %5220 = phi i32 [ %5287, %5278 ], [ 0, %5214 ]
  %5221 = phi i64 [ %5229, %5278 ], [ %5211, %5214 ]
  %5222 = phi i64 [ %5286, %5278 ], [ %5210, %5214 ]
  %5223 = phi i32 [ %5284, %5278 ], [ %5218, %5214 ]
  %5224 = sub i32 %5209, %5220
  %5225 = tail call i32 @llvm.smin.i32(i32 %5224, i32 0)
  %5226 = sub i32 %5224, %5225
  %5227 = zext i32 %5226 to i64
  %5228 = add nuw nsw i64 %5227, 1
  %5229 = add nsw i64 %5221, -1
  %5230 = icmp ult i32 %5226, 31
  br i1 %5230, label %5266, label %5231

5231:                                             ; preds = %5219
  %5232 = and i64 %5228, 8589934560
  %5233 = sub i64 %5222, %5232
  br label %5234

5234:                                             ; preds = %5234, %5231
  %5235 = phi i64 [ 0, %5231 ], [ %5258, %5234 ]
  %5236 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5231 ], [ %5254, %5234 ]
  %5237 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5231 ], [ %5255, %5234 ]
  %5238 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5231 ], [ %5256, %5234 ]
  %5239 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5231 ], [ %5257, %5234 ]
  %5240 = sub i64 %5222, %5235
  %5241 = getelementptr inbounds i32, ptr %9, i64 %5240
  %5242 = getelementptr inbounds i32, ptr %5241, i64 -7
  %5243 = load <8 x i32>, ptr %5242, align 4, !tbaa !5
  %5244 = shufflevector <8 x i32> %5243, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5245 = getelementptr inbounds i32, ptr %5241, i64 -15
  %5246 = load <8 x i32>, ptr %5245, align 4, !tbaa !5
  %5247 = shufflevector <8 x i32> %5246, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5248 = getelementptr inbounds i32, ptr %5241, i64 -23
  %5249 = load <8 x i32>, ptr %5248, align 4, !tbaa !5
  %5250 = shufflevector <8 x i32> %5249, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5251 = getelementptr inbounds i32, ptr %5241, i64 -31
  %5252 = load <8 x i32>, ptr %5251, align 4, !tbaa !5
  %5253 = shufflevector <8 x i32> %5252, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5254 = mul <8 x i32> %5244, %5236
  %5255 = mul <8 x i32> %5247, %5237
  %5256 = mul <8 x i32> %5250, %5238
  %5257 = mul <8 x i32> %5253, %5239
  %5258 = add nuw i64 %5235, 32
  %5259 = icmp eq i64 %5258, %5232
  br i1 %5259, label %5260, label %5234, !llvm.loop !1474

5260:                                             ; preds = %5234
  %5261 = mul <8 x i32> %5255, %5254
  %5262 = mul <8 x i32> %5256, %5261
  %5263 = mul <8 x i32> %5257, %5262
  %5264 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5263)
  %5265 = icmp eq i64 %5228, %5232
  br i1 %5265, label %5278, label %5266

5266:                                             ; preds = %5219, %5260
  %5267 = phi i64 [ %5222, %5219 ], [ %5233, %5260 ]
  %5268 = phi i32 [ 1, %5219 ], [ %5264, %5260 ]
  br label %5269

5269:                                             ; preds = %5266, %5269
  %5270 = phi i64 [ %5275, %5269 ], [ %5267, %5266 ]
  %5271 = phi i32 [ %5274, %5269 ], [ %5268, %5266 ]
  %5272 = getelementptr inbounds i32, ptr %9, i64 %5270
  %5273 = load i32, ptr %5272, align 4, !tbaa !5
  %5274 = mul nsw i32 %5273, %5271
  %5275 = add nsw i64 %5270, -1
  %5276 = trunc i64 %5270 to i32
  %5277 = icmp sgt i32 %5276, 0
  br i1 %5277, label %5269, label %5278, !llvm.loop !1475

5278:                                             ; preds = %5269, %5260
  %5279 = phi i32 [ %5264, %5260 ], [ %5274, %5269 ]
  %5280 = and i64 %5229, 4294967295
  %5281 = getelementptr inbounds i32, ptr %6, i64 %5280
  %5282 = load i32, ptr %5281, align 4, !tbaa !5
  %5283 = mul nsw i32 %5282, %5279
  %5284 = add nsw i32 %5283, %5223
  %5285 = icmp sgt i64 %5221, 2
  %5286 = add nsw i64 %5222, -1
  %5287 = add i32 %5220, 1
  br i1 %5285, label %5219, label %5288, !llvm.loop !1476

5288:                                             ; preds = %5278, %5214
  %5289 = phi i32 [ %5218, %5214 ], [ %5284, %5278 ]
  %5290 = sext i32 %5289 to i64
  %5291 = getelementptr inbounds double, ptr %4888, i64 %5290
  %5292 = load double, ptr %5291, align 8, !tbaa !18
  %5293 = fmul fast double %5292, %5292
  %5294 = fadd fast double %5215, %5293
  store double %5294, ptr %4890, align 8, !tbaa !18
  %5295 = fadd fast double %5217, 1.000000e+00
  %5296 = add nuw nsw i32 %5216, 1
  br i1 %5208, label %5297, label %5344

5297:                                             ; preds = %5288
  %5298 = load i32, ptr %4, align 4, !tbaa !5
  %5299 = load i32, ptr %12, align 4, !tbaa !5
  %5300 = add nsw i32 %5299, -1
  %5301 = icmp slt i32 %5298, %5300
  br i1 %5301, label %5321, label %5302

5302:                                             ; preds = %5297
  %5303 = icmp eq i32 %5298, %5300
  br i1 %5303, label %5304, label %5337

5304:                                             ; preds = %5302
  store i32 0, ptr %4, align 4, !tbaa !5
  %5305 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5305, ptr %6, align 4, !tbaa !5
  br i1 %5213, label %5344, label %5306

5306:                                             ; preds = %5304, %5331
  %5307 = phi i64 [ %5335, %5331 ], [ 1, %5304 ]
  %5308 = getelementptr inbounds i32, ptr %4, i64 %5307
  %5309 = load i32, ptr %5308, align 4, !tbaa !5
  %5310 = getelementptr inbounds i32, ptr %12, i64 %5307
  %5311 = load i32, ptr %5310, align 4, !tbaa !5
  %5312 = add nsw i32 %5311, -1
  %5313 = icmp slt i32 %5309, %5312
  br i1 %5313, label %5314, label %5329

5314:                                             ; preds = %5306
  br i1 %5301, label %5321, label %5315

5315:                                             ; preds = %5314
  %5316 = getelementptr inbounds i32, ptr %7, i64 %5307
  %5317 = load i32, ptr %5316, align 4, !tbaa !5
  %5318 = getelementptr inbounds i32, ptr %6, i64 %5307
  %5319 = load i32, ptr %5318, align 4, !tbaa !5
  %5320 = add nsw i32 %5319, %5317
  store i32 %5320, ptr %5318, align 4, !tbaa !5
  br label %5339

5321:                                             ; preds = %5297, %5314
  %5322 = phi i32 [ %5309, %5314 ], [ %5298, %5297 ]
  %5323 = phi ptr [ %5308, %5314 ], [ %4, %5297 ]
  %5324 = phi i64 [ %5307, %5314 ], [ 0, %5297 ]
  %5325 = add nsw i32 %5322, 1
  store i32 %5325, ptr %5323, align 4, !tbaa !5
  %5326 = getelementptr inbounds i32, ptr %7, i64 %5324
  %5327 = load i32, ptr %5326, align 4, !tbaa !5
  %5328 = getelementptr inbounds i32, ptr %6, i64 %5324
  br label %5339

5329:                                             ; preds = %5306
  %5330 = icmp eq i32 %5309, %5312
  br i1 %5330, label %5331, label %5337

5331:                                             ; preds = %5329
  store i32 0, ptr %5308, align 4, !tbaa !5
  %5332 = getelementptr inbounds i32, ptr %8, i64 %5307
  %5333 = load i32, ptr %5332, align 4, !tbaa !5
  %5334 = getelementptr inbounds i32, ptr %6, i64 %5307
  store i32 %5333, ptr %5334, align 4, !tbaa !5
  %5335 = add nuw nsw i64 %5307, 1
  %5336 = icmp eq i64 %5335, %5211
  br i1 %5336, label %5344, label %5306, !llvm.loop !1477

5337:                                             ; preds = %5302, %5329
  %5338 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2310, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

5339:                                             ; preds = %5315, %5321
  %5340 = phi ptr [ %5328, %5321 ], [ %5308, %5315 ]
  %5341 = phi i32 [ %5327, %5321 ], [ 1, %5315 ]
  %5342 = load i32, ptr %5340, align 4, !tbaa !5
  %5343 = add nsw i32 %5342, %5341
  store i32 %5343, ptr %5340, align 4, !tbaa !5
  br label %5344

5344:                                             ; preds = %5331, %5339, %5304, %5288
  %5345 = icmp eq i32 %5296, %5
  br i1 %5345, label %5491, label %5214, !llvm.loop !1478

5346:                                             ; preds = %5197, %5481
  %5347 = phi double [ 0.000000e+00, %5197 ], [ %5429, %5481 ]
  %5348 = phi i32 [ 0, %5197 ], [ %5430, %5481 ]
  %5349 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5198, label %5350, label %5419

5350:                                             ; preds = %5346, %5409
  %5351 = phi i32 [ %5418, %5409 ], [ 0, %5346 ]
  %5352 = phi i64 [ %5360, %5409 ], [ %5202, %5346 ]
  %5353 = phi i64 [ %5417, %5409 ], [ %5201, %5346 ]
  %5354 = phi i32 [ %5415, %5409 ], [ %5349, %5346 ]
  %5355 = sub i32 %5200, %5351
  %5356 = tail call i32 @llvm.smin.i32(i32 %5355, i32 0)
  %5357 = sub i32 %5355, %5356
  %5358 = zext i32 %5357 to i64
  %5359 = add nuw nsw i64 %5358, 1
  %5360 = add nsw i64 %5352, -1
  %5361 = icmp ult i32 %5357, 31
  br i1 %5361, label %5397, label %5362

5362:                                             ; preds = %5350
  %5363 = and i64 %5359, 8589934560
  %5364 = sub i64 %5353, %5363
  br label %5365

5365:                                             ; preds = %5365, %5362
  %5366 = phi i64 [ 0, %5362 ], [ %5389, %5365 ]
  %5367 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5362 ], [ %5385, %5365 ]
  %5368 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5362 ], [ %5386, %5365 ]
  %5369 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5362 ], [ %5387, %5365 ]
  %5370 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5362 ], [ %5388, %5365 ]
  %5371 = sub i64 %5353, %5366
  %5372 = getelementptr inbounds i32, ptr %11, i64 %5371
  %5373 = getelementptr inbounds i32, ptr %5372, i64 -7
  %5374 = load <8 x i32>, ptr %5373, align 4, !tbaa !5
  %5375 = shufflevector <8 x i32> %5374, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5376 = getelementptr inbounds i32, ptr %5372, i64 -15
  %5377 = load <8 x i32>, ptr %5376, align 4, !tbaa !5
  %5378 = shufflevector <8 x i32> %5377, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5379 = getelementptr inbounds i32, ptr %5372, i64 -23
  %5380 = load <8 x i32>, ptr %5379, align 4, !tbaa !5
  %5381 = shufflevector <8 x i32> %5380, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5382 = getelementptr inbounds i32, ptr %5372, i64 -31
  %5383 = load <8 x i32>, ptr %5382, align 4, !tbaa !5
  %5384 = shufflevector <8 x i32> %5383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5385 = mul <8 x i32> %5375, %5367
  %5386 = mul <8 x i32> %5378, %5368
  %5387 = mul <8 x i32> %5381, %5369
  %5388 = mul <8 x i32> %5384, %5370
  %5389 = add nuw i64 %5366, 32
  %5390 = icmp eq i64 %5389, %5363
  br i1 %5390, label %5391, label %5365, !llvm.loop !1479

5391:                                             ; preds = %5365
  %5392 = mul <8 x i32> %5386, %5385
  %5393 = mul <8 x i32> %5387, %5392
  %5394 = mul <8 x i32> %5388, %5393
  %5395 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5394)
  %5396 = icmp eq i64 %5359, %5363
  br i1 %5396, label %5409, label %5397

5397:                                             ; preds = %5350, %5391
  %5398 = phi i64 [ %5353, %5350 ], [ %5364, %5391 ]
  %5399 = phi i32 [ 1, %5350 ], [ %5395, %5391 ]
  br label %5400

5400:                                             ; preds = %5397, %5400
  %5401 = phi i64 [ %5406, %5400 ], [ %5398, %5397 ]
  %5402 = phi i32 [ %5405, %5400 ], [ %5399, %5397 ]
  %5403 = getelementptr inbounds i32, ptr %11, i64 %5401
  %5404 = load i32, ptr %5403, align 4, !tbaa !5
  %5405 = mul nsw i32 %5404, %5402
  %5406 = add nsw i64 %5401, -1
  %5407 = trunc i64 %5401 to i32
  %5408 = icmp sgt i32 %5407, 0
  br i1 %5408, label %5400, label %5409, !llvm.loop !1480

5409:                                             ; preds = %5400, %5391
  %5410 = phi i32 [ %5395, %5391 ], [ %5405, %5400 ]
  %5411 = and i64 %5360, 4294967295
  %5412 = getelementptr inbounds i32, ptr %6, i64 %5411
  %5413 = load i32, ptr %5412, align 4, !tbaa !5
  %5414 = mul nsw i32 %5413, %5410
  %5415 = add nsw i32 %5414, %5354
  %5416 = icmp sgt i64 %5352, 2
  %5417 = add nsw i64 %5353, -1
  %5418 = add i32 %5351, 1
  br i1 %5416, label %5350, label %5419, !llvm.loop !1481

5419:                                             ; preds = %5409, %5346
  %5420 = phi i32 [ %5349, %5346 ], [ %5415, %5409 ]
  %5421 = icmp slt i32 %5420, %5
  br i1 %5421, label %5424, label %5422

5422:                                             ; preds = %5419
  %5423 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2310, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5496

5424:                                             ; preds = %5419
  %5425 = sext i32 %5420 to i64
  %5426 = getelementptr inbounds double, ptr %4888, i64 %5425
  %5427 = load double, ptr %5426, align 8, !tbaa !18
  %5428 = fmul fast double %5427, %5427
  %5429 = fadd fast double %5347, %5428
  store double %5429, ptr %4890, align 8, !tbaa !18
  %5430 = add nuw nsw i32 %5348, 1
  br i1 %5199, label %5431, label %5481

5431:                                             ; preds = %5424
  %5432 = load i32, ptr %4, align 4, !tbaa !5
  %5433 = load i32, ptr %12, align 4, !tbaa !5
  %5434 = add nsw i32 %5433, -1
  %5435 = icmp slt i32 %5432, %5434
  br i1 %5435, label %5458, label %5436

5436:                                             ; preds = %5431
  %5437 = icmp eq i32 %5432, %5434
  br i1 %5437, label %5438, label %5474

5438:                                             ; preds = %5436
  store i32 0, ptr %4, align 4, !tbaa !5
  %5439 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5439, ptr %6, align 4, !tbaa !5
  br i1 %5204, label %5481, label %5440

5440:                                             ; preds = %5438, %5468
  %5441 = phi i64 [ %5472, %5468 ], [ 1, %5438 ]
  %5442 = getelementptr inbounds i32, ptr %4, i64 %5441
  %5443 = load i32, ptr %5442, align 4, !tbaa !5
  %5444 = getelementptr inbounds i32, ptr %12, i64 %5441
  %5445 = load i32, ptr %5444, align 4, !tbaa !5
  %5446 = add nsw i32 %5445, -1
  %5447 = icmp slt i32 %5443, %5446
  br i1 %5447, label %5448, label %5466

5448:                                             ; preds = %5440
  br i1 %5435, label %5458, label %5449

5449:                                             ; preds = %5448
  %5450 = shl i64 %5441, 32
  %5451 = add i64 %5450, -4294967296
  %5452 = ashr exact i64 %5451, 32
  %5453 = getelementptr inbounds i32, ptr %7, i64 %5452
  %5454 = load i32, ptr %5453, align 4, !tbaa !5
  %5455 = getelementptr inbounds i32, ptr %6, i64 %5441
  %5456 = load i32, ptr %5455, align 4, !tbaa !5
  %5457 = add nsw i32 %5456, %5454
  store i32 %5457, ptr %5455, align 4, !tbaa !5
  br label %5476

5458:                                             ; preds = %5431, %5448
  %5459 = phi i32 [ %5443, %5448 ], [ %5432, %5431 ]
  %5460 = phi ptr [ %5442, %5448 ], [ %4, %5431 ]
  %5461 = phi i64 [ %5441, %5448 ], [ 0, %5431 ]
  %5462 = add nsw i32 %5459, 1
  store i32 %5462, ptr %5460, align 4, !tbaa !5
  %5463 = getelementptr inbounds i32, ptr %7, i64 %5461
  %5464 = load i32, ptr %5463, align 4, !tbaa !5
  %5465 = getelementptr inbounds i32, ptr %6, i64 %5461
  br label %5476

5466:                                             ; preds = %5440
  %5467 = icmp eq i32 %5443, %5446
  br i1 %5467, label %5468, label %5474

5468:                                             ; preds = %5466
  store i32 0, ptr %5442, align 4, !tbaa !5
  %5469 = getelementptr inbounds i32, ptr %8, i64 %5441
  %5470 = load i32, ptr %5469, align 4, !tbaa !5
  %5471 = getelementptr inbounds i32, ptr %6, i64 %5441
  store i32 %5470, ptr %5471, align 4, !tbaa !5
  %5472 = add nuw nsw i64 %5441, 1
  %5473 = icmp eq i64 %5472, %5202
  br i1 %5473, label %5481, label %5440, !llvm.loop !1482

5474:                                             ; preds = %5436, %5466
  %5475 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2310, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5496

5476:                                             ; preds = %5449, %5458
  %5477 = phi ptr [ %5465, %5458 ], [ %5442, %5449 ]
  %5478 = phi i32 [ %5464, %5458 ], [ 1, %5449 ]
  %5479 = load i32, ptr %5477, align 4, !tbaa !5
  %5480 = add nsw i32 %5479, %5478
  store i32 %5480, ptr %5477, align 4, !tbaa !5
  br label %5481

5481:                                             ; preds = %5468, %5476, %5438, %5424
  %5482 = icmp eq i32 %5430, %5
  br i1 %5482, label %5491, label %5346, !llvm.loop !1483

5483:                                             ; preds = %4895
  %5484 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2310, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5491

5485:                                             ; preds = %2017
  store i16 %1967, ptr %1850, align 2, !tbaa !78
  br label %5491

5486:                                             ; preds = %2315
  store i16 %2265, ptr %1850, align 2, !tbaa !78
  br label %5491

5487:                                             ; preds = %3238
  store i64 %3188, ptr %3071, align 8, !tbaa !120
  br label %5491

5488:                                             ; preds = %3535
  store i64 %3485, ptr %3071, align 8, !tbaa !120
  br label %5491

5489:                                             ; preds = %4447
  store float %4397, ptr %4280, align 4, !tbaa !162
  br label %5491

5490:                                             ; preds = %4744
  store float %4694, ptr %4280, align 4, !tbaa !162
  br label %5491

5491:                                             ; preds = %5481, %5344, %5189, %5052, %4882, %4588, %4272, %4135, %3980, %3843, %3673, %3379, %3063, %2925, %2769, %2628, %2453, %2159, %1842, %1704, %1548, %1410, %1235, %1097, %941, %800, %625, %487, %331, %193, %5196, %5205, %4901, %4910, %4595, %4604, %5490, %4292, %4301, %5489, %3987, %3996, %3692, %3701, %3386, %3395, %5488, %3083, %3092, %5487, %2776, %2785, %2473, %2482, %2166, %2175, %5486, %1862, %1871, %5485, %1555, %1564, %1255, %1264, %948, %957, %645, %654, %338, %347, %38, %47, %4892, %5483, %4282, %4884, %3683, %4274, %3073, %3675, %2463, %3065, %1852, %2455, %1245, %1844, %635, %1237, %28, %627, %18
  %5492 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %627 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1237 ], [ 0.000000e+00, %635 ], [ 0.000000e+00, %1844 ], [ 0.000000e+00, %1245 ], [ 0.000000e+00, %2455 ], [ 0.000000e+00, %1852 ], [ 0.000000e+00, %3065 ], [ 0.000000e+00, %2463 ], [ 0.000000e+00, %3675 ], [ 0.000000e+00, %3073 ], [ 0.000000e+00, %4274 ], [ 0.000000e+00, %3683 ], [ 0.000000e+00, %4884 ], [ 0.000000e+00, %4282 ], [ 0.000000e+00, %5483 ], [ 0.000000e+00, %4892 ], [ 0.000000e+00, %47 ], [ 0.000000e+00, %38 ], [ 0.000000e+00, %347 ], [ 0.000000e+00, %338 ], [ 0.000000e+00, %654 ], [ 0.000000e+00, %645 ], [ 0.000000e+00, %957 ], [ 0.000000e+00, %948 ], [ 0.000000e+00, %1264 ], [ 0.000000e+00, %1255 ], [ 0.000000e+00, %1564 ], [ 0.000000e+00, %1555 ], [ %1968, %5485 ], [ 0.000000e+00, %1871 ], [ 0.000000e+00, %1862 ], [ %2266, %5486 ], [ 0.000000e+00, %2175 ], [ 0.000000e+00, %2166 ], [ 0.000000e+00, %2482 ], [ 0.000000e+00, %2473 ], [ 0.000000e+00, %2785 ], [ 0.000000e+00, %2776 ], [ %3189, %5487 ], [ 0.000000e+00, %3092 ], [ 0.000000e+00, %3083 ], [ %3486, %5488 ], [ 0.000000e+00, %3395 ], [ 0.000000e+00, %3386 ], [ 0.000000e+00, %3701 ], [ 0.000000e+00, %3692 ], [ 0.000000e+00, %3996 ], [ 0.000000e+00, %3987 ], [ %4398, %5489 ], [ 0.000000e+00, %4301 ], [ 0.000000e+00, %4292 ], [ %4695, %5490 ], [ 0.000000e+00, %4604 ], [ 0.000000e+00, %4595 ], [ 0.000000e+00, %4910 ], [ 0.000000e+00, %4901 ], [ 0.000000e+00, %5205 ], [ 0.000000e+00, %5196 ], [ %144, %193 ], [ 0.000000e+00, %331 ], [ %438, %487 ], [ 0.000000e+00, %625 ], [ %751, %800 ], [ 0.000000e+00, %941 ], [ %1048, %1097 ], [ 0.000000e+00, %1235 ], [ %1361, %1410 ], [ 0.000000e+00, %1548 ], [ %1655, %1704 ], [ 0.000000e+00, %1842 ], [ 0.000000e+00, %2159 ], [ 0.000000e+00, %2453 ], [ %2579, %2628 ], [ 0.000000e+00, %2769 ], [ %2876, %2925 ], [ 0.000000e+00, %3063 ], [ 0.000000e+00, %3379 ], [ 0.000000e+00, %3673 ], [ %3794, %3843 ], [ 0.000000e+00, %3980 ], [ %4086, %4135 ], [ 0.000000e+00, %4272 ], [ 0.000000e+00, %4588 ], [ 0.000000e+00, %4882 ], [ %5003, %5052 ], [ 0.000000e+00, %5189 ], [ %5295, %5344 ], [ 0.000000e+00, %5481 ]
  %5493 = phi i32 [ %10, %18 ], [ 1, %627 ], [ 1, %28 ], [ 1, %1237 ], [ 1, %635 ], [ 1, %1844 ], [ 1, %1245 ], [ 1, %2455 ], [ 1, %1852 ], [ 1, %3065 ], [ 1, %2463 ], [ 1, %3675 ], [ 1, %3073 ], [ 1, %4274 ], [ 1, %3683 ], [ 1, %4884 ], [ 1, %4282 ], [ 1, %5483 ], [ 1, %4892 ], [ 1, %47 ], [ 1, %38 ], [ 1, %347 ], [ 1, %338 ], [ 1, %654 ], [ 1, %645 ], [ 1, %957 ], [ 1, %948 ], [ 1, %1264 ], [ 1, %1255 ], [ 1, %1564 ], [ 1, %1555 ], [ %1878, %5485 ], [ 1, %1871 ], [ 1, %1862 ], [ %2182, %5486 ], [ 1, %2175 ], [ 1, %2166 ], [ 1, %2482 ], [ 1, %2473 ], [ 1, %2785 ], [ 1, %2776 ], [ %3099, %5487 ], [ 1, %3092 ], [ 1, %3083 ], [ %3402, %5488 ], [ 1, %3395 ], [ 1, %3386 ], [ 1, %3701 ], [ 1, %3692 ], [ 1, %3996 ], [ 1, %3987 ], [ %4308, %5489 ], [ 1, %4301 ], [ 1, %4292 ], [ %4611, %5490 ], [ 1, %4604 ], [ 1, %4595 ], [ 1, %4910 ], [ 1, %4901 ], [ 1, %5205 ], [ 1, %5196 ], [ %54, %193 ], [ %45, %331 ], [ %354, %487 ], [ %345, %625 ], [ %661, %800 ], [ %652, %941 ], [ %964, %1097 ], [ %955, %1235 ], [ %1271, %1410 ], [ %1262, %1548 ], [ %1571, %1704 ], [ %1562, %1842 ], [ %1869, %2159 ], [ %2173, %2453 ], [ %2489, %2628 ], [ %2480, %2769 ], [ %2792, %2925 ], [ %2783, %3063 ], [ %3090, %3379 ], [ %3393, %3673 ], [ %3708, %3843 ], [ %3699, %3980 ], [ %4003, %4135 ], [ %3994, %4272 ], [ %4299, %4588 ], [ %4602, %4882 ], [ %4917, %5052 ], [ %4908, %5189 ], [ %5212, %5344 ], [ %5203, %5481 ]
  %5494 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5493, ptr noundef nonnull @.str.5) #3
  %5495 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5492, ptr noundef nonnull @.str.6) #3
  br label %5496

5496:                                             ; preds = %5045, %5130, %5182, %5337, %5422, %5474, %4440, %4525, %4581, %4737, %4822, %4875, %3836, %3921, %3973, %4128, %4213, %4265, %3231, %3316, %3372, %3528, %3613, %3666, %2621, %2705, %2762, %2918, %3002, %3056, %2010, %2095, %2152, %2308, %2393, %2446, %1403, %1487, %1541, %1697, %1781, %1835, %793, %877, %934, %1090, %1174, %1228, %186, %270, %324, %480, %564, %618, %5491
  %5497 = phi i32 [ 0, %5491 ], [ -1, %618 ], [ -1, %564 ], [ -1, %480 ], [ -1, %324 ], [ -1, %270 ], [ -1, %186 ], [ -1, %1228 ], [ -1, %1174 ], [ -1, %1090 ], [ -1, %934 ], [ -1, %877 ], [ -1, %793 ], [ -1, %1835 ], [ -1, %1781 ], [ -1, %1697 ], [ -1, %1541 ], [ -1, %1487 ], [ -1, %1403 ], [ -1, %2446 ], [ -1, %2393 ], [ -1, %2308 ], [ -1, %2152 ], [ -1, %2095 ], [ -1, %2010 ], [ -1, %3056 ], [ -1, %3002 ], [ -1, %2918 ], [ -1, %2762 ], [ -1, %2705 ], [ -1, %2621 ], [ -1, %3666 ], [ -1, %3613 ], [ -1, %3528 ], [ -1, %3372 ], [ -1, %3316 ], [ -1, %3231 ], [ -1, %4265 ], [ -1, %4213 ], [ -1, %4128 ], [ -1, %3973 ], [ -1, %3921 ], [ -1, %3836 ], [ -1, %4875 ], [ -1, %4822 ], [ -1, %4737 ], [ -1, %4581 ], [ -1, %4525 ], [ -1, %4440 ], [ -1, %5474 ], [ -1, %5422 ], [ -1, %5337 ], [ -1, %5182 ], [ -1, %5130 ], [ -1, %5045 ]
  ret i32 %5497
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.mul.v8i32(<8 x i32>) #2

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"any pointer", !7, i64 0}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !13, !14, !15}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = !{!"llvm.loop.unroll.runtime.disable"}
!16 = distinct !{!16, !13, !15, !14}
!17 = distinct !{!17, !13}
!18 = !{!19, !19, i64 0}
!19 = !{!"double", !7, i64 0}
!20 = distinct !{!20, !13, !21}
!21 = !{!"llvm.loop.peeled.count", i32 1}
!22 = distinct !{!22, !13}
!23 = distinct !{!23, !13, !14, !15}
!24 = distinct !{!24, !13, !15, !14}
!25 = distinct !{!25, !13}
!26 = distinct !{!26, !13, !21}
!27 = distinct !{!27, !13}
!28 = distinct !{!28, !13, !14, !15}
!29 = distinct !{!29, !13, !15, !14}
!30 = distinct !{!30, !13}
!31 = distinct !{!31, !13, !21}
!32 = distinct !{!32, !13}
!33 = distinct !{!33, !13, !14, !15}
!34 = distinct !{!34, !13, !15, !14}
!35 = distinct !{!35, !13}
!36 = distinct !{!36, !13, !21}
!37 = distinct !{!37, !13}
!38 = distinct !{!38, !13, !14, !15}
!39 = distinct !{!39, !13, !15, !14}
!40 = distinct !{!40, !13}
!41 = distinct !{!41, !13, !21}
!42 = distinct !{!42, !13}
!43 = distinct !{!43, !13, !14, !15}
!44 = distinct !{!44, !13, !15, !14}
!45 = distinct !{!45, !13}
!46 = distinct !{!46, !13, !21}
!47 = distinct !{!47, !13}
!48 = distinct !{!48, !13, !14, !15}
!49 = distinct !{!49, !13, !15, !14}
!50 = distinct !{!50, !13}
!51 = distinct !{!51, !13, !21}
!52 = distinct !{!52, !13}
!53 = distinct !{!53, !13, !14, !15}
!54 = distinct !{!54, !13, !15, !14}
!55 = distinct !{!55, !13}
!56 = distinct !{!56, !13, !21}
!57 = distinct !{!57, !13}
!58 = distinct !{!58, !13, !14, !15}
!59 = distinct !{!59, !13, !15, !14}
!60 = distinct !{!60, !13}
!61 = distinct !{!61, !13, !21}
!62 = distinct !{!62, !13}
!63 = distinct !{!63, !13, !14, !15}
!64 = distinct !{!64, !13, !15, !14}
!65 = distinct !{!65, !13}
!66 = distinct !{!66, !13, !21}
!67 = distinct !{!67, !13}
!68 = distinct !{!68, !13, !14, !15}
!69 = distinct !{!69, !13, !15, !14}
!70 = distinct !{!70, !13}
!71 = distinct !{!71, !13, !21}
!72 = distinct !{!72, !13}
!73 = distinct !{!73, !13, !14, !15}
!74 = distinct !{!74, !13, !15, !14}
!75 = distinct !{!75, !13}
!76 = distinct !{!76, !13, !21}
!77 = distinct !{!77, !13}
!78 = !{!79, !79, i64 0}
!79 = !{!"short", !7, i64 0}
!80 = distinct !{!80, !13, !14, !15}
!81 = distinct !{!81, !13, !15, !14}
!82 = distinct !{!82, !13}
!83 = distinct !{!83, !13, !21}
!84 = distinct !{!84, !13}
!85 = distinct !{!85, !13, !14, !15}
!86 = distinct !{!86, !13, !15, !14}
!87 = distinct !{!87, !13}
!88 = distinct !{!88, !13, !21}
!89 = distinct !{!89, !13}
!90 = distinct !{!90, !13, !14, !15}
!91 = distinct !{!91, !13, !15, !14}
!92 = distinct !{!92, !13}
!93 = distinct !{!93, !13, !21}
!94 = distinct !{!94, !13}
!95 = distinct !{!95, !13, !14, !15}
!96 = distinct !{!96, !13, !15, !14}
!97 = distinct !{!97, !13}
!98 = distinct !{!98, !13, !21}
!99 = distinct !{!99, !13}
!100 = distinct !{!100, !13, !14, !15}
!101 = distinct !{!101, !13, !15, !14}
!102 = distinct !{!102, !13}
!103 = distinct !{!103, !13, !21}
!104 = distinct !{!104, !13}
!105 = distinct !{!105, !13, !14, !15}
!106 = distinct !{!106, !13, !15, !14}
!107 = distinct !{!107, !13}
!108 = distinct !{!108, !13, !21}
!109 = distinct !{!109, !13}
!110 = distinct !{!110, !13, !14, !15}
!111 = distinct !{!111, !13, !15, !14}
!112 = distinct !{!112, !13}
!113 = distinct !{!113, !13, !21}
!114 = distinct !{!114, !13}
!115 = distinct !{!115, !13, !14, !15}
!116 = distinct !{!116, !13, !15, !14}
!117 = distinct !{!117, !13}
!118 = distinct !{!118, !13, !21}
!119 = distinct !{!119, !13}
!120 = !{!121, !121, i64 0}
!121 = !{!"long", !7, i64 0}
!122 = distinct !{!122, !13, !14, !15}
!123 = distinct !{!123, !13, !15, !14}
!124 = distinct !{!124, !13}
!125 = distinct !{!125, !13, !21}
!126 = distinct !{!126, !13}
!127 = distinct !{!127, !13, !14, !15}
!128 = distinct !{!128, !13, !15, !14}
!129 = distinct !{!129, !13}
!130 = distinct !{!130, !13, !21}
!131 = distinct !{!131, !13}
!132 = distinct !{!132, !13, !14, !15}
!133 = distinct !{!133, !13, !15, !14}
!134 = distinct !{!134, !13}
!135 = distinct !{!135, !13, !21}
!136 = distinct !{!136, !13}
!137 = distinct !{!137, !13, !14, !15}
!138 = distinct !{!138, !13, !15, !14}
!139 = distinct !{!139, !13}
!140 = distinct !{!140, !13, !21}
!141 = distinct !{!141, !13}
!142 = distinct !{!142, !13, !14, !15}
!143 = distinct !{!143, !13, !15, !14}
!144 = distinct !{!144, !13}
!145 = distinct !{!145, !13, !21}
!146 = distinct !{!146, !13}
!147 = distinct !{!147, !13, !14, !15}
!148 = distinct !{!148, !13, !15, !14}
!149 = distinct !{!149, !13}
!150 = distinct !{!150, !13, !21}
!151 = distinct !{!151, !13}
!152 = distinct !{!152, !13, !14, !15}
!153 = distinct !{!153, !13, !15, !14}
!154 = distinct !{!154, !13}
!155 = distinct !{!155, !13, !21}
!156 = distinct !{!156, !13}
!157 = distinct !{!157, !13, !14, !15}
!158 = distinct !{!158, !13, !15, !14}
!159 = distinct !{!159, !13}
!160 = distinct !{!160, !13, !21}
!161 = distinct !{!161, !13}
!162 = !{!163, !163, i64 0}
!163 = !{!"float", !7, i64 0}
!164 = distinct !{!164, !13, !14, !15}
!165 = distinct !{!165, !13, !15, !14}
!166 = distinct !{!166, !13}
!167 = distinct !{!167, !13, !21}
!168 = distinct !{!168, !13}
!169 = distinct !{!169, !13, !14, !15}
!170 = distinct !{!170, !13, !15, !14}
!171 = distinct !{!171, !13}
!172 = distinct !{!172, !13, !21}
!173 = distinct !{!173, !13}
!174 = distinct !{!174, !13, !14, !15}
!175 = distinct !{!175, !13, !15, !14}
!176 = distinct !{!176, !13}
!177 = distinct !{!177, !13, !21}
!178 = distinct !{!178, !13}
!179 = distinct !{!179, !13, !14, !15}
!180 = distinct !{!180, !13, !15, !14}
!181 = distinct !{!181, !13}
!182 = distinct !{!182, !13, !21}
!183 = distinct !{!183, !13}
!184 = distinct !{!184, !13, !14, !15}
!185 = distinct !{!185, !13, !15, !14}
!186 = distinct !{!186, !13}
!187 = distinct !{!187, !13, !21}
!188 = distinct !{!188, !13}
!189 = distinct !{!189, !13, !14, !15}
!190 = distinct !{!190, !13, !15, !14}
!191 = distinct !{!191, !13}
!192 = distinct !{!192, !13, !21}
!193 = distinct !{!193, !13}
!194 = distinct !{!194, !13, !14, !15}
!195 = distinct !{!195, !13, !15, !14}
!196 = distinct !{!196, !13}
!197 = distinct !{!197, !13, !21}
!198 = distinct !{!198, !13}
!199 = distinct !{!199, !13, !14, !15}
!200 = distinct !{!200, !13, !15, !14}
!201 = distinct !{!201, !13}
!202 = distinct !{!202, !13, !21}
!203 = distinct !{!203, !13}
!204 = distinct !{!204, !13, !14, !15}
!205 = distinct !{!205, !13, !15, !14}
!206 = distinct !{!206, !13}
!207 = distinct !{!207, !13, !21}
!208 = distinct !{!208, !13}
!209 = distinct !{!209, !13, !14, !15}
!210 = distinct !{!210, !13, !15, !14}
!211 = distinct !{!211, !13}
!212 = distinct !{!212, !13, !21}
!213 = distinct !{!213, !13}
!214 = distinct !{!214, !13, !14, !15}
!215 = distinct !{!215, !13, !15, !14}
!216 = distinct !{!216, !13}
!217 = distinct !{!217, !13, !21}
!218 = distinct !{!218, !13}
!219 = distinct !{!219, !13, !14, !15}
!220 = distinct !{!220, !13, !15, !14}
!221 = distinct !{!221, !13}
!222 = distinct !{!222, !13, !21}
!223 = distinct !{!223, !13}
!224 = distinct !{!224, !13, !14, !15}
!225 = distinct !{!225, !13, !15, !14}
!226 = distinct !{!226, !13}
!227 = distinct !{!227, !13, !21}
!228 = distinct !{!228, !13}
!229 = distinct !{!229, !13, !14, !15}
!230 = distinct !{!230, !13, !15, !14}
!231 = distinct !{!231, !13}
!232 = distinct !{!232, !13, !21}
!233 = distinct !{!233, !13}
!234 = distinct !{!234, !13, !14, !15}
!235 = distinct !{!235, !13, !15, !14}
!236 = distinct !{!236, !13}
!237 = distinct !{!237, !13, !21}
!238 = distinct !{!238, !13}
!239 = distinct !{!239, !13, !14, !15}
!240 = distinct !{!240, !13, !15, !14}
!241 = distinct !{!241, !13}
!242 = distinct !{!242, !13, !21}
!243 = distinct !{!243, !13}
!244 = distinct !{!244, !13, !14, !15}
!245 = distinct !{!245, !13, !15, !14}
!246 = distinct !{!246, !13}
!247 = distinct !{!247, !13, !21}
!248 = distinct !{!248, !13}
!249 = distinct !{!249, !13, !14, !15}
!250 = distinct !{!250, !13, !15, !14}
!251 = distinct !{!251, !13}
!252 = distinct !{!252, !13, !21}
!253 = distinct !{!253, !13}
!254 = distinct !{!254, !13, !14, !15}
!255 = distinct !{!255, !13, !15, !14}
!256 = distinct !{!256, !13}
!257 = distinct !{!257, !13, !21}
!258 = distinct !{!258, !13}
!259 = distinct !{!259, !13, !14, !15}
!260 = distinct !{!260, !13, !15, !14}
!261 = distinct !{!261, !13}
!262 = distinct !{!262, !13, !21}
!263 = distinct !{!263, !13}
!264 = distinct !{!264, !13, !14, !15}
!265 = distinct !{!265, !13, !15, !14}
!266 = distinct !{!266, !13}
!267 = distinct !{!267, !13, !21}
!268 = distinct !{!268, !13}
!269 = distinct !{!269, !13, !14, !15}
!270 = distinct !{!270, !13, !15, !14}
!271 = distinct !{!271, !13}
!272 = distinct !{!272, !13, !21}
!273 = distinct !{!273, !13}
!274 = distinct !{!274, !13, !14, !15}
!275 = distinct !{!275, !13, !15, !14}
!276 = distinct !{!276, !13}
!277 = distinct !{!277, !13, !21}
!278 = distinct !{!278, !13}
!279 = distinct !{!279, !13, !14, !15}
!280 = distinct !{!280, !13, !15, !14}
!281 = distinct !{!281, !13}
!282 = distinct !{!282, !13, !21}
!283 = distinct !{!283, !13}
!284 = distinct !{!284, !13, !14, !15}
!285 = distinct !{!285, !13, !15, !14}
!286 = distinct !{!286, !13}
!287 = distinct !{!287, !13, !21}
!288 = distinct !{!288, !13}
!289 = distinct !{!289, !13, !14, !15}
!290 = distinct !{!290, !13, !15, !14}
!291 = distinct !{!291, !13}
!292 = distinct !{!292, !13, !21}
!293 = distinct !{!293, !13}
!294 = distinct !{!294, !13, !14, !15}
!295 = distinct !{!295, !13, !15, !14}
!296 = distinct !{!296, !13}
!297 = distinct !{!297, !13, !21}
!298 = distinct !{!298, !13}
!299 = distinct !{!299, !13, !14, !15}
!300 = distinct !{!300, !13, !15, !14}
!301 = distinct !{!301, !13}
!302 = distinct !{!302, !13, !21}
!303 = distinct !{!303, !13}
!304 = distinct !{!304, !13, !14, !15}
!305 = distinct !{!305, !13, !15, !14}
!306 = distinct !{!306, !13}
!307 = distinct !{!307, !13, !21}
!308 = distinct !{!308, !13}
!309 = distinct !{!309, !13, !14, !15}
!310 = distinct !{!310, !13, !15, !14}
!311 = distinct !{!311, !13}
!312 = distinct !{!312, !13, !21}
!313 = distinct !{!313, !13}
!314 = distinct !{!314, !13, !14, !15}
!315 = distinct !{!315, !13, !15, !14}
!316 = distinct !{!316, !13}
!317 = distinct !{!317, !13, !21}
!318 = distinct !{!318, !13}
!319 = distinct !{!319, !13, !14, !15}
!320 = distinct !{!320, !13, !15, !14}
!321 = distinct !{!321, !13}
!322 = distinct !{!322, !13, !21}
!323 = distinct !{!323, !13}
!324 = distinct !{!324, !13, !14, !15}
!325 = distinct !{!325, !13, !15, !14}
!326 = distinct !{!326, !13}
!327 = distinct !{!327, !13, !21}
!328 = distinct !{!328, !13}
!329 = distinct !{!329, !13, !14, !15}
!330 = distinct !{!330, !13, !15, !14}
!331 = distinct !{!331, !13}
!332 = distinct !{!332, !13, !21}
!333 = distinct !{!333, !13}
!334 = distinct !{!334, !13, !14, !15}
!335 = distinct !{!335, !13, !15, !14}
!336 = distinct !{!336, !13}
!337 = distinct !{!337, !13, !21}
!338 = distinct !{!338, !13}
!339 = distinct !{!339, !13, !14, !15}
!340 = distinct !{!340, !13, !15, !14}
!341 = distinct !{!341, !13}
!342 = distinct !{!342, !13, !21}
!343 = distinct !{!343, !13}
!344 = distinct !{!344, !13, !14, !15}
!345 = distinct !{!345, !13, !15, !14}
!346 = distinct !{!346, !13}
!347 = distinct !{!347, !13, !21}
!348 = distinct !{!348, !13}
!349 = distinct !{!349, !13, !14, !15}
!350 = distinct !{!350, !13, !15, !14}
!351 = distinct !{!351, !13}
!352 = distinct !{!352, !13, !21}
!353 = distinct !{!353, !13}
!354 = distinct !{!354, !13, !14, !15}
!355 = distinct !{!355, !13, !15, !14}
!356 = distinct !{!356, !13}
!357 = distinct !{!357, !13, !21}
!358 = distinct !{!358, !13}
!359 = distinct !{!359, !13, !14, !15}
!360 = distinct !{!360, !13, !15, !14}
!361 = distinct !{!361, !13}
!362 = distinct !{!362, !13, !21}
!363 = distinct !{!363, !13}
!364 = distinct !{!364, !13, !14, !15}
!365 = distinct !{!365, !13, !15, !14}
!366 = distinct !{!366, !13}
!367 = distinct !{!367, !13, !21}
!368 = distinct !{!368, !13}
!369 = distinct !{!369, !13, !14, !15}
!370 = distinct !{!370, !13, !15, !14}
!371 = distinct !{!371, !13}
!372 = distinct !{!372, !13, !21}
!373 = distinct !{!373, !13}
!374 = distinct !{!374, !13, !14, !15}
!375 = distinct !{!375, !13, !15, !14}
!376 = distinct !{!376, !13}
!377 = distinct !{!377, !13, !21}
!378 = distinct !{!378, !13}
!379 = distinct !{!379, !13, !14, !15}
!380 = distinct !{!380, !13, !15, !14}
!381 = distinct !{!381, !13}
!382 = distinct !{!382, !13, !21}
!383 = distinct !{!383, !13}
!384 = distinct !{!384, !13, !14, !15}
!385 = distinct !{!385, !13, !15, !14}
!386 = distinct !{!386, !13}
!387 = distinct !{!387, !13, !21}
!388 = distinct !{!388, !13}
!389 = distinct !{!389, !13, !14, !15}
!390 = distinct !{!390, !13, !15, !14}
!391 = distinct !{!391, !13}
!392 = distinct !{!392, !13, !21}
!393 = distinct !{!393, !13}
!394 = distinct !{!394, !13, !14, !15}
!395 = distinct !{!395, !13, !15, !14}
!396 = distinct !{!396, !13}
!397 = distinct !{!397, !13, !21}
!398 = distinct !{!398, !13}
!399 = distinct !{!399, !13, !14, !15}
!400 = distinct !{!400, !13, !15, !14}
!401 = distinct !{!401, !13}
!402 = distinct !{!402, !13, !21}
!403 = distinct !{!403, !13}
!404 = distinct !{!404, !13, !14, !15}
!405 = distinct !{!405, !13, !15, !14}
!406 = distinct !{!406, !13}
!407 = distinct !{!407, !13, !21}
!408 = distinct !{!408, !13}
!409 = distinct !{!409, !13, !14, !15}
!410 = distinct !{!410, !13, !15, !14}
!411 = distinct !{!411, !13}
!412 = distinct !{!412, !13, !21}
!413 = distinct !{!413, !13}
!414 = distinct !{!414, !13, !14, !15}
!415 = distinct !{!415, !13, !15, !14}
!416 = distinct !{!416, !13}
!417 = distinct !{!417, !13, !21}
!418 = distinct !{!418, !13}
!419 = distinct !{!419, !13, !14, !15}
!420 = distinct !{!420, !13, !15, !14}
!421 = distinct !{!421, !13}
!422 = distinct !{!422, !13, !21}
!423 = distinct !{!423, !13}
!424 = distinct !{!424, !13, !14, !15}
!425 = distinct !{!425, !13, !15, !14}
!426 = distinct !{!426, !13}
!427 = distinct !{!427, !13, !21}
!428 = distinct !{!428, !13}
!429 = distinct !{!429, !13, !14, !15}
!430 = distinct !{!430, !13, !15, !14}
!431 = distinct !{!431, !13}
!432 = distinct !{!432, !13, !21}
!433 = distinct !{!433, !13}
!434 = distinct !{!434, !13, !14, !15}
!435 = distinct !{!435, !13, !15, !14}
!436 = distinct !{!436, !13}
!437 = distinct !{!437, !13, !21}
!438 = distinct !{!438, !13}
!439 = distinct !{!439, !13, !14, !15}
!440 = distinct !{!440, !13, !15, !14}
!441 = distinct !{!441, !13}
!442 = distinct !{!442, !13, !21}
!443 = distinct !{!443, !13}
!444 = distinct !{!444, !13, !14, !15}
!445 = distinct !{!445, !13, !15, !14}
!446 = distinct !{!446, !13}
!447 = distinct !{!447, !13, !21}
!448 = distinct !{!448, !13}
!449 = distinct !{!449, !13, !14, !15}
!450 = distinct !{!450, !13, !15, !14}
!451 = distinct !{!451, !13}
!452 = distinct !{!452, !13, !21}
!453 = distinct !{!453, !13}
!454 = distinct !{!454, !13, !14, !15}
!455 = distinct !{!455, !13, !15, !14}
!456 = distinct !{!456, !13}
!457 = distinct !{!457, !13, !21}
!458 = distinct !{!458, !13}
!459 = distinct !{!459, !13, !14, !15}
!460 = distinct !{!460, !13, !15, !14}
!461 = distinct !{!461, !13}
!462 = distinct !{!462, !13, !21}
!463 = distinct !{!463, !13}
!464 = distinct !{!464, !13, !14, !15}
!465 = distinct !{!465, !13, !15, !14}
!466 = distinct !{!466, !13}
!467 = distinct !{!467, !13, !21}
!468 = distinct !{!468, !13}
!469 = distinct !{!469, !13, !14, !15}
!470 = distinct !{!470, !13, !15, !14}
!471 = distinct !{!471, !13}
!472 = distinct !{!472, !13, !21}
!473 = distinct !{!473, !13}
!474 = distinct !{!474, !13, !14, !15}
!475 = distinct !{!475, !13, !15, !14}
!476 = distinct !{!476, !13}
!477 = distinct !{!477, !13, !21}
!478 = distinct !{!478, !13}
!479 = distinct !{!479, !13, !14, !15}
!480 = distinct !{!480, !13, !15, !14}
!481 = distinct !{!481, !13}
!482 = distinct !{!482, !13, !21}
!483 = distinct !{!483, !13}
!484 = distinct !{!484, !13, !14, !15}
!485 = distinct !{!485, !13, !15, !14}
!486 = distinct !{!486, !13}
!487 = distinct !{!487, !13, !21}
!488 = distinct !{!488, !13}
!489 = distinct !{!489, !13, !14, !15}
!490 = distinct !{!490, !13, !15, !14}
!491 = distinct !{!491, !13}
!492 = distinct !{!492, !13, !21}
!493 = distinct !{!493, !13}
!494 = distinct !{!494, !13, !14, !15}
!495 = distinct !{!495, !13, !15, !14}
!496 = distinct !{!496, !13}
!497 = distinct !{!497, !13, !21}
!498 = distinct !{!498, !13}
!499 = distinct !{!499, !13, !14, !15}
!500 = distinct !{!500, !13, !15, !14}
!501 = distinct !{!501, !13}
!502 = distinct !{!502, !13, !21}
!503 = distinct !{!503, !13}
!504 = distinct !{!504, !13, !14, !15}
!505 = distinct !{!505, !13, !15, !14}
!506 = distinct !{!506, !13}
!507 = distinct !{!507, !13, !21}
!508 = distinct !{!508, !13}
!509 = distinct !{!509, !13, !14, !15}
!510 = distinct !{!510, !13, !15, !14}
!511 = distinct !{!511, !13}
!512 = distinct !{!512, !13, !21}
!513 = distinct !{!513, !13}
!514 = distinct !{!514, !13, !14, !15}
!515 = distinct !{!515, !13, !15, !14}
!516 = distinct !{!516, !13}
!517 = distinct !{!517, !13, !21}
!518 = distinct !{!518, !13}
!519 = distinct !{!519, !13, !14, !15}
!520 = distinct !{!520, !13, !15, !14}
!521 = distinct !{!521, !13}
!522 = distinct !{!522, !13, !21}
!523 = distinct !{!523, !13}
!524 = distinct !{!524, !13, !14, !15}
!525 = distinct !{!525, !13, !15, !14}
!526 = distinct !{!526, !13}
!527 = distinct !{!527, !13, !21}
!528 = distinct !{!528, !13}
!529 = distinct !{!529, !13, !14, !15}
!530 = distinct !{!530, !13, !15, !14}
!531 = distinct !{!531, !13}
!532 = distinct !{!532, !13, !21}
!533 = distinct !{!533, !13}
!534 = distinct !{!534, !13, !14, !15}
!535 = distinct !{!535, !13, !15, !14}
!536 = distinct !{!536, !13}
!537 = distinct !{!537, !13, !21}
!538 = distinct !{!538, !13}
!539 = distinct !{!539, !13, !14, !15}
!540 = distinct !{!540, !13, !15, !14}
!541 = distinct !{!541, !13}
!542 = distinct !{!542, !13, !21}
!543 = distinct !{!543, !13}
!544 = distinct !{!544, !13, !14, !15}
!545 = distinct !{!545, !13, !15, !14}
!546 = distinct !{!546, !13}
!547 = distinct !{!547, !13, !21}
!548 = distinct !{!548, !13}
!549 = distinct !{!549, !13, !14, !15}
!550 = distinct !{!550, !13, !15, !14}
!551 = distinct !{!551, !13}
!552 = distinct !{!552, !13, !21}
!553 = distinct !{!553, !13}
!554 = distinct !{!554, !13, !14, !15}
!555 = distinct !{!555, !13, !15, !14}
!556 = distinct !{!556, !13}
!557 = distinct !{!557, !13, !21}
!558 = distinct !{!558, !13}
!559 = distinct !{!559, !13, !14, !15}
!560 = distinct !{!560, !13, !15, !14}
!561 = distinct !{!561, !13}
!562 = distinct !{!562, !13, !21}
!563 = distinct !{!563, !13}
!564 = distinct !{!564, !13, !14, !15}
!565 = distinct !{!565, !13, !15, !14}
!566 = distinct !{!566, !13}
!567 = distinct !{!567, !13, !21}
!568 = distinct !{!568, !13}
!569 = distinct !{!569, !13, !14, !15}
!570 = distinct !{!570, !13, !15, !14}
!571 = distinct !{!571, !13}
!572 = distinct !{!572, !13, !21}
!573 = distinct !{!573, !13}
!574 = distinct !{!574, !13, !14, !15}
!575 = distinct !{!575, !13, !15, !14}
!576 = distinct !{!576, !13}
!577 = distinct !{!577, !13, !21}
!578 = distinct !{!578, !13}
!579 = distinct !{!579, !13, !14, !15}
!580 = distinct !{!580, !13, !15, !14}
!581 = distinct !{!581, !13}
!582 = distinct !{!582, !13, !21}
!583 = distinct !{!583, !13}
!584 = distinct !{!584, !13, !14, !15}
!585 = distinct !{!585, !13, !15, !14}
!586 = distinct !{!586, !13}
!587 = distinct !{!587, !13, !21}
!588 = distinct !{!588, !13}
!589 = distinct !{!589, !13, !14, !15}
!590 = distinct !{!590, !13, !15, !14}
!591 = distinct !{!591, !13}
!592 = distinct !{!592, !13, !21}
!593 = distinct !{!593, !13}
!594 = distinct !{!594, !13, !14, !15}
!595 = distinct !{!595, !13, !15, !14}
!596 = distinct !{!596, !13}
!597 = distinct !{!597, !13, !21}
!598 = distinct !{!598, !13}
!599 = distinct !{!599, !13, !14, !15}
!600 = distinct !{!600, !13, !15, !14}
!601 = distinct !{!601, !13}
!602 = distinct !{!602, !13, !21}
!603 = distinct !{!603, !13}
!604 = distinct !{!604, !13, !14, !15}
!605 = distinct !{!605, !13, !15, !14}
!606 = distinct !{!606, !13}
!607 = distinct !{!607, !13, !21}
!608 = distinct !{!608, !13}
!609 = distinct !{!609, !13, !14, !15}
!610 = distinct !{!610, !13, !15, !14}
!611 = distinct !{!611, !13}
!612 = distinct !{!612, !13, !21}
!613 = distinct !{!613, !13}
!614 = distinct !{!614, !13, !14, !15}
!615 = distinct !{!615, !13, !15, !14}
!616 = distinct !{!616, !13}
!617 = distinct !{!617, !13, !21}
!618 = distinct !{!618, !13}
!619 = distinct !{!619, !13, !14, !15}
!620 = distinct !{!620, !13, !15, !14}
!621 = distinct !{!621, !13}
!622 = distinct !{!622, !13, !21}
!623 = distinct !{!623, !13}
!624 = distinct !{!624, !13, !14, !15}
!625 = distinct !{!625, !13, !15, !14}
!626 = distinct !{!626, !13}
!627 = distinct !{!627, !13, !21}
!628 = distinct !{!628, !13}
!629 = distinct !{!629, !13, !14, !15}
!630 = distinct !{!630, !13, !15, !14}
!631 = distinct !{!631, !13}
!632 = distinct !{!632, !13, !21}
!633 = distinct !{!633, !13}
!634 = distinct !{!634, !13, !14, !15}
!635 = distinct !{!635, !13, !15, !14}
!636 = distinct !{!636, !13}
!637 = distinct !{!637, !13, !21}
!638 = distinct !{!638, !13}
!639 = distinct !{!639, !13, !14, !15}
!640 = distinct !{!640, !13, !15, !14}
!641 = distinct !{!641, !13}
!642 = distinct !{!642, !13, !21}
!643 = distinct !{!643, !13}
!644 = distinct !{!644, !13, !14, !15}
!645 = distinct !{!645, !13, !15, !14}
!646 = distinct !{!646, !13}
!647 = distinct !{!647, !13, !21}
!648 = distinct !{!648, !13}
!649 = distinct !{!649, !13, !14, !15}
!650 = distinct !{!650, !13, !15, !14}
!651 = distinct !{!651, !13}
!652 = distinct !{!652, !13, !21}
!653 = distinct !{!653, !13}
!654 = distinct !{!654, !13, !14, !15}
!655 = distinct !{!655, !13, !15, !14}
!656 = distinct !{!656, !13}
!657 = distinct !{!657, !13, !21}
!658 = distinct !{!658, !13}
!659 = distinct !{!659, !13, !14, !15}
!660 = distinct !{!660, !13, !15, !14}
!661 = distinct !{!661, !13}
!662 = distinct !{!662, !13, !21}
!663 = distinct !{!663, !13}
!664 = distinct !{!664, !13, !14, !15}
!665 = distinct !{!665, !13, !15, !14}
!666 = distinct !{!666, !13}
!667 = distinct !{!667, !13, !21}
!668 = distinct !{!668, !13}
!669 = distinct !{!669, !13, !14, !15}
!670 = distinct !{!670, !13, !15, !14}
!671 = distinct !{!671, !13}
!672 = distinct !{!672, !13, !21}
!673 = distinct !{!673, !13}
!674 = distinct !{!674, !13, !14, !15}
!675 = distinct !{!675, !13, !15, !14}
!676 = distinct !{!676, !13}
!677 = distinct !{!677, !13, !21}
!678 = distinct !{!678, !13}
!679 = distinct !{!679, !13, !14, !15}
!680 = distinct !{!680, !13, !15, !14}
!681 = distinct !{!681, !13}
!682 = distinct !{!682, !13, !21}
!683 = distinct !{!683, !13}
!684 = distinct !{!684, !13, !14, !15}
!685 = distinct !{!685, !13, !15, !14}
!686 = distinct !{!686, !13}
!687 = distinct !{!687, !13, !21}
!688 = distinct !{!688, !13}
!689 = distinct !{!689, !13, !14, !15}
!690 = distinct !{!690, !13, !15, !14}
!691 = distinct !{!691, !13}
!692 = distinct !{!692, !13, !21}
!693 = distinct !{!693, !13}
!694 = distinct !{!694, !13, !14, !15}
!695 = distinct !{!695, !13, !15, !14}
!696 = distinct !{!696, !13}
!697 = distinct !{!697, !13, !21}
!698 = distinct !{!698, !13}
!699 = distinct !{!699, !13, !14, !15}
!700 = distinct !{!700, !13, !15, !14}
!701 = distinct !{!701, !13}
!702 = distinct !{!702, !13, !21}
!703 = distinct !{!703, !13}
!704 = distinct !{!704, !13, !14, !15}
!705 = distinct !{!705, !13, !15, !14}
!706 = distinct !{!706, !13}
!707 = distinct !{!707, !13, !21}
!708 = distinct !{!708, !13}
!709 = distinct !{!709, !13, !14, !15}
!710 = distinct !{!710, !13, !15, !14}
!711 = distinct !{!711, !13}
!712 = distinct !{!712, !13, !21}
!713 = distinct !{!713, !13}
!714 = distinct !{!714, !13, !14, !15}
!715 = distinct !{!715, !13, !15, !14}
!716 = distinct !{!716, !13}
!717 = distinct !{!717, !13, !21}
!718 = distinct !{!718, !13}
!719 = distinct !{!719, !13, !14, !15}
!720 = distinct !{!720, !13, !15, !14}
!721 = distinct !{!721, !13}
!722 = distinct !{!722, !13, !21}
!723 = distinct !{!723, !13}
!724 = distinct !{!724, !13, !14, !15}
!725 = distinct !{!725, !13, !15, !14}
!726 = distinct !{!726, !13}
!727 = distinct !{!727, !13, !21}
!728 = distinct !{!728, !13}
!729 = distinct !{!729, !13, !14, !15}
!730 = distinct !{!730, !13, !15, !14}
!731 = distinct !{!731, !13}
!732 = distinct !{!732, !13, !21}
!733 = distinct !{!733, !13}
!734 = distinct !{!734, !13, !14, !15}
!735 = distinct !{!735, !13, !15, !14}
!736 = distinct !{!736, !13}
!737 = distinct !{!737, !13, !21}
!738 = distinct !{!738, !13}
!739 = distinct !{!739, !13, !14, !15}
!740 = distinct !{!740, !13, !15, !14}
!741 = distinct !{!741, !13}
!742 = distinct !{!742, !13, !21}
!743 = distinct !{!743, !13}
!744 = distinct !{!744, !13, !14, !15}
!745 = distinct !{!745, !13, !15, !14}
!746 = distinct !{!746, !13}
!747 = distinct !{!747, !13, !21}
!748 = distinct !{!748, !13}
!749 = distinct !{!749, !13, !14, !15}
!750 = distinct !{!750, !13, !15, !14}
!751 = distinct !{!751, !13}
!752 = distinct !{!752, !13, !21}
!753 = distinct !{!753, !13}
!754 = distinct !{!754, !13, !14, !15}
!755 = distinct !{!755, !13, !15, !14}
!756 = distinct !{!756, !13}
!757 = distinct !{!757, !13, !21}
!758 = distinct !{!758, !13}
!759 = distinct !{!759, !13, !14, !15}
!760 = distinct !{!760, !13, !15, !14}
!761 = distinct !{!761, !13}
!762 = distinct !{!762, !13, !21}
!763 = distinct !{!763, !13}
!764 = distinct !{!764, !13, !14, !15}
!765 = distinct !{!765, !13, !15, !14}
!766 = distinct !{!766, !13}
!767 = distinct !{!767, !13, !21}
!768 = distinct !{!768, !13}
!769 = distinct !{!769, !13, !14, !15}
!770 = distinct !{!770, !13, !15, !14}
!771 = distinct !{!771, !13}
!772 = distinct !{!772, !13, !21}
!773 = distinct !{!773, !13}
!774 = distinct !{!774, !13, !14, !15}
!775 = distinct !{!775, !13, !15, !14}
!776 = distinct !{!776, !13}
!777 = distinct !{!777, !13, !21}
!778 = distinct !{!778, !13}
!779 = distinct !{!779, !13, !14, !15}
!780 = distinct !{!780, !13, !15, !14}
!781 = distinct !{!781, !13}
!782 = distinct !{!782, !13, !21}
!783 = distinct !{!783, !13}
!784 = distinct !{!784, !13, !14, !15}
!785 = distinct !{!785, !13, !15, !14}
!786 = distinct !{!786, !13}
!787 = distinct !{!787, !13, !21}
!788 = distinct !{!788, !13}
!789 = distinct !{!789, !13, !14, !15}
!790 = distinct !{!790, !13, !15, !14}
!791 = distinct !{!791, !13}
!792 = distinct !{!792, !13, !21}
!793 = distinct !{!793, !13}
!794 = distinct !{!794, !13, !14, !15}
!795 = distinct !{!795, !13, !15, !14}
!796 = distinct !{!796, !13}
!797 = distinct !{!797, !13, !21}
!798 = distinct !{!798, !13}
!799 = distinct !{!799, !13, !14, !15}
!800 = distinct !{!800, !13, !15, !14}
!801 = distinct !{!801, !13}
!802 = distinct !{!802, !13, !21}
!803 = distinct !{!803, !13}
!804 = distinct !{!804, !13, !14, !15}
!805 = distinct !{!805, !13, !15, !14}
!806 = distinct !{!806, !13}
!807 = distinct !{!807, !13, !21}
!808 = distinct !{!808, !13}
!809 = distinct !{!809, !13, !14, !15}
!810 = distinct !{!810, !13, !15, !14}
!811 = distinct !{!811, !13}
!812 = distinct !{!812, !13, !21}
!813 = distinct !{!813, !13}
!814 = distinct !{!814, !13, !14, !15}
!815 = distinct !{!815, !13, !15, !14}
!816 = distinct !{!816, !13}
!817 = distinct !{!817, !13, !21}
!818 = distinct !{!818, !13}
!819 = distinct !{!819, !13, !14, !15}
!820 = distinct !{!820, !13, !15, !14}
!821 = distinct !{!821, !13}
!822 = distinct !{!822, !13, !21}
!823 = distinct !{!823, !13}
!824 = distinct !{!824, !13, !14, !15}
!825 = distinct !{!825, !13, !15, !14}
!826 = distinct !{!826, !13}
!827 = distinct !{!827, !13, !21}
!828 = distinct !{!828, !13}
!829 = distinct !{!829, !13, !14, !15}
!830 = distinct !{!830, !13, !15, !14}
!831 = distinct !{!831, !13}
!832 = distinct !{!832, !13, !21}
!833 = distinct !{!833, !13}
!834 = distinct !{!834, !13, !14, !15}
!835 = distinct !{!835, !13, !15, !14}
!836 = distinct !{!836, !13}
!837 = distinct !{!837, !13, !21}
!838 = distinct !{!838, !13}
!839 = distinct !{!839, !13, !14, !15}
!840 = distinct !{!840, !13, !15, !14}
!841 = distinct !{!841, !13}
!842 = distinct !{!842, !13, !21}
!843 = distinct !{!843, !13}
!844 = distinct !{!844, !13, !14, !15}
!845 = distinct !{!845, !13, !15, !14}
!846 = distinct !{!846, !13}
!847 = distinct !{!847, !13, !21}
!848 = distinct !{!848, !13}
!849 = distinct !{!849, !13, !14, !15}
!850 = distinct !{!850, !13, !15, !14}
!851 = distinct !{!851, !13}
!852 = distinct !{!852, !13, !21}
!853 = distinct !{!853, !13}
!854 = distinct !{!854, !13, !14, !15}
!855 = distinct !{!855, !13, !15, !14}
!856 = distinct !{!856, !13}
!857 = distinct !{!857, !13, !21}
!858 = distinct !{!858, !13}
!859 = distinct !{!859, !13, !14, !15}
!860 = distinct !{!860, !13, !15, !14}
!861 = distinct !{!861, !13}
!862 = distinct !{!862, !13, !21}
!863 = distinct !{!863, !13}
!864 = distinct !{!864, !13, !14, !15}
!865 = distinct !{!865, !13, !15, !14}
!866 = distinct !{!866, !13}
!867 = distinct !{!867, !13, !21}
!868 = distinct !{!868, !13}
!869 = distinct !{!869, !13, !14, !15}
!870 = distinct !{!870, !13, !15, !14}
!871 = distinct !{!871, !13}
!872 = distinct !{!872, !13, !21}
!873 = distinct !{!873, !13}
!874 = distinct !{!874, !13, !14, !15}
!875 = distinct !{!875, !13, !15, !14}
!876 = distinct !{!876, !13}
!877 = distinct !{!877, !13, !21}
!878 = distinct !{!878, !13}
!879 = distinct !{!879, !13, !14, !15}
!880 = distinct !{!880, !13, !15, !14}
!881 = distinct !{!881, !13}
!882 = distinct !{!882, !13, !21}
!883 = distinct !{!883, !13}
!884 = distinct !{!884, !13, !14, !15}
!885 = distinct !{!885, !13, !15, !14}
!886 = distinct !{!886, !13}
!887 = distinct !{!887, !13, !21}
!888 = distinct !{!888, !13}
!889 = distinct !{!889, !13, !14, !15}
!890 = distinct !{!890, !13, !15, !14}
!891 = distinct !{!891, !13}
!892 = distinct !{!892, !13, !21}
!893 = distinct !{!893, !13}
!894 = distinct !{!894, !13, !14, !15}
!895 = distinct !{!895, !13, !15, !14}
!896 = distinct !{!896, !13}
!897 = distinct !{!897, !13, !21}
!898 = distinct !{!898, !13}
!899 = distinct !{!899, !13, !14, !15}
!900 = distinct !{!900, !13, !15, !14}
!901 = distinct !{!901, !13}
!902 = distinct !{!902, !13, !21}
!903 = distinct !{!903, !13}
!904 = distinct !{!904, !13, !14, !15}
!905 = distinct !{!905, !13, !15, !14}
!906 = distinct !{!906, !13}
!907 = distinct !{!907, !13, !21}
!908 = distinct !{!908, !13}
!909 = distinct !{!909, !13, !14, !15}
!910 = distinct !{!910, !13, !15, !14}
!911 = distinct !{!911, !13}
!912 = distinct !{!912, !13, !21}
!913 = distinct !{!913, !13}
!914 = distinct !{!914, !13, !14, !15}
!915 = distinct !{!915, !13, !15, !14}
!916 = distinct !{!916, !13}
!917 = distinct !{!917, !13, !21}
!918 = distinct !{!918, !13}
!919 = distinct !{!919, !13, !14, !15}
!920 = distinct !{!920, !13, !15, !14}
!921 = distinct !{!921, !13}
!922 = distinct !{!922, !13, !21}
!923 = distinct !{!923, !13}
!924 = distinct !{!924, !13, !14, !15}
!925 = distinct !{!925, !13, !15, !14}
!926 = distinct !{!926, !13}
!927 = distinct !{!927, !13, !21}
!928 = distinct !{!928, !13}
!929 = distinct !{!929, !13, !14, !15}
!930 = distinct !{!930, !13, !15, !14}
!931 = distinct !{!931, !13}
!932 = distinct !{!932, !13, !21}
!933 = distinct !{!933, !13}
!934 = distinct !{!934, !13, !14, !15}
!935 = distinct !{!935, !13, !15, !14}
!936 = distinct !{!936, !13}
!937 = distinct !{!937, !13, !21}
!938 = distinct !{!938, !13}
!939 = distinct !{!939, !13, !14, !15}
!940 = distinct !{!940, !13, !15, !14}
!941 = distinct !{!941, !13}
!942 = distinct !{!942, !13, !21}
!943 = distinct !{!943, !13}
!944 = distinct !{!944, !13, !14, !15}
!945 = distinct !{!945, !13, !15, !14}
!946 = distinct !{!946, !13}
!947 = distinct !{!947, !13, !21}
!948 = distinct !{!948, !13}
!949 = distinct !{!949, !13, !14, !15}
!950 = distinct !{!950, !13, !15, !14}
!951 = distinct !{!951, !13}
!952 = distinct !{!952, !13, !21}
!953 = distinct !{!953, !13}
!954 = distinct !{!954, !13, !14, !15}
!955 = distinct !{!955, !13, !15, !14}
!956 = distinct !{!956, !13}
!957 = distinct !{!957, !13, !21}
!958 = distinct !{!958, !13}
!959 = distinct !{!959, !13, !14, !15}
!960 = distinct !{!960, !13, !15, !14}
!961 = distinct !{!961, !13}
!962 = distinct !{!962, !13, !21}
!963 = distinct !{!963, !13}
!964 = distinct !{!964, !13, !14, !15}
!965 = distinct !{!965, !13, !15, !14}
!966 = distinct !{!966, !13}
!967 = distinct !{!967, !13, !21}
!968 = distinct !{!968, !13}
!969 = distinct !{!969, !13, !14, !15}
!970 = distinct !{!970, !13, !15, !14}
!971 = distinct !{!971, !13}
!972 = distinct !{!972, !13, !21}
!973 = distinct !{!973, !13}
!974 = distinct !{!974, !13, !14, !15}
!975 = distinct !{!975, !13, !15, !14}
!976 = distinct !{!976, !13}
!977 = distinct !{!977, !13, !21}
!978 = distinct !{!978, !13}
!979 = distinct !{!979, !13, !14, !15}
!980 = distinct !{!980, !13, !15, !14}
!981 = distinct !{!981, !13}
!982 = distinct !{!982, !13, !21}
!983 = distinct !{!983, !13}
!984 = distinct !{!984, !13, !14, !15}
!985 = distinct !{!985, !13, !15, !14}
!986 = distinct !{!986, !13}
!987 = distinct !{!987, !13, !21}
!988 = distinct !{!988, !13}
!989 = distinct !{!989, !13, !14, !15}
!990 = distinct !{!990, !13, !15, !14}
!991 = distinct !{!991, !13}
!992 = distinct !{!992, !13, !21}
!993 = distinct !{!993, !13}
!994 = distinct !{!994, !13, !14, !15}
!995 = distinct !{!995, !13, !15, !14}
!996 = distinct !{!996, !13}
!997 = distinct !{!997, !13, !21}
!998 = distinct !{!998, !13}
!999 = distinct !{!999, !13, !14, !15}
!1000 = distinct !{!1000, !13, !15, !14}
!1001 = distinct !{!1001, !13}
!1002 = distinct !{!1002, !13, !21}
!1003 = distinct !{!1003, !13}
!1004 = distinct !{!1004, !13, !14, !15}
!1005 = distinct !{!1005, !13, !15, !14}
!1006 = distinct !{!1006, !13}
!1007 = distinct !{!1007, !13, !21}
!1008 = distinct !{!1008, !13}
!1009 = distinct !{!1009, !13, !14, !15}
!1010 = distinct !{!1010, !13, !15, !14}
!1011 = distinct !{!1011, !13}
!1012 = distinct !{!1012, !13, !21}
!1013 = distinct !{!1013, !13}
!1014 = distinct !{!1014, !13, !14, !15}
!1015 = distinct !{!1015, !13, !15, !14}
!1016 = distinct !{!1016, !13}
!1017 = distinct !{!1017, !13, !21}
!1018 = distinct !{!1018, !13}
!1019 = distinct !{!1019, !13, !14, !15}
!1020 = distinct !{!1020, !13, !15, !14}
!1021 = distinct !{!1021, !13}
!1022 = distinct !{!1022, !13, !21}
!1023 = distinct !{!1023, !13}
!1024 = distinct !{!1024, !13, !14, !15}
!1025 = distinct !{!1025, !13, !15, !14}
!1026 = distinct !{!1026, !13}
!1027 = distinct !{!1027, !13, !21}
!1028 = distinct !{!1028, !13}
!1029 = distinct !{!1029, !13, !14, !15}
!1030 = distinct !{!1030, !13, !15, !14}
!1031 = distinct !{!1031, !13}
!1032 = distinct !{!1032, !13, !21}
!1033 = distinct !{!1033, !13}
!1034 = distinct !{!1034, !13, !14, !15}
!1035 = distinct !{!1035, !13, !15, !14}
!1036 = distinct !{!1036, !13}
!1037 = distinct !{!1037, !13, !21}
!1038 = distinct !{!1038, !13}
!1039 = distinct !{!1039, !13, !14, !15}
!1040 = distinct !{!1040, !13, !15, !14}
!1041 = distinct !{!1041, !13}
!1042 = distinct !{!1042, !13, !21}
!1043 = distinct !{!1043, !13}
!1044 = distinct !{!1044, !13, !14, !15}
!1045 = distinct !{!1045, !13, !15, !14}
!1046 = distinct !{!1046, !13}
!1047 = distinct !{!1047, !13, !21}
!1048 = distinct !{!1048, !13}
!1049 = distinct !{!1049, !13, !14, !15}
!1050 = distinct !{!1050, !13, !15, !14}
!1051 = distinct !{!1051, !13}
!1052 = distinct !{!1052, !13, !21}
!1053 = distinct !{!1053, !13}
!1054 = distinct !{!1054, !13, !14, !15}
!1055 = distinct !{!1055, !13, !15, !14}
!1056 = distinct !{!1056, !13}
!1057 = distinct !{!1057, !13, !21}
!1058 = distinct !{!1058, !13}
!1059 = distinct !{!1059, !13, !14, !15}
!1060 = distinct !{!1060, !13, !15, !14}
!1061 = distinct !{!1061, !13}
!1062 = distinct !{!1062, !13, !21}
!1063 = distinct !{!1063, !13}
!1064 = distinct !{!1064, !13, !14, !15}
!1065 = distinct !{!1065, !13, !15, !14}
!1066 = distinct !{!1066, !13}
!1067 = distinct !{!1067, !13, !21}
!1068 = distinct !{!1068, !13}
!1069 = distinct !{!1069, !13, !14, !15}
!1070 = distinct !{!1070, !13, !15, !14}
!1071 = distinct !{!1071, !13}
!1072 = distinct !{!1072, !13, !21}
!1073 = distinct !{!1073, !13}
!1074 = distinct !{!1074, !13, !14, !15}
!1075 = distinct !{!1075, !13, !15, !14}
!1076 = distinct !{!1076, !13}
!1077 = distinct !{!1077, !13, !21}
!1078 = distinct !{!1078, !13}
!1079 = distinct !{!1079, !13, !14, !15}
!1080 = distinct !{!1080, !13, !15, !14}
!1081 = distinct !{!1081, !13}
!1082 = distinct !{!1082, !13, !21}
!1083 = distinct !{!1083, !13}
!1084 = distinct !{!1084, !13, !14, !15}
!1085 = distinct !{!1085, !13, !15, !14}
!1086 = distinct !{!1086, !13}
!1087 = distinct !{!1087, !13, !21}
!1088 = distinct !{!1088, !13}
!1089 = distinct !{!1089, !13, !14, !15}
!1090 = distinct !{!1090, !13, !15, !14}
!1091 = distinct !{!1091, !13}
!1092 = distinct !{!1092, !13, !21}
!1093 = distinct !{!1093, !13}
!1094 = distinct !{!1094, !13, !14, !15}
!1095 = distinct !{!1095, !13, !15, !14}
!1096 = distinct !{!1096, !13}
!1097 = distinct !{!1097, !13, !21}
!1098 = distinct !{!1098, !13}
!1099 = distinct !{!1099, !13, !14, !15}
!1100 = distinct !{!1100, !13, !15, !14}
!1101 = distinct !{!1101, !13}
!1102 = distinct !{!1102, !13, !21}
!1103 = distinct !{!1103, !13}
!1104 = distinct !{!1104, !13, !14, !15}
!1105 = distinct !{!1105, !13, !15, !14}
!1106 = distinct !{!1106, !13}
!1107 = distinct !{!1107, !13, !21}
!1108 = distinct !{!1108, !13}
!1109 = distinct !{!1109, !13, !14, !15}
!1110 = distinct !{!1110, !13, !15, !14}
!1111 = distinct !{!1111, !13}
!1112 = distinct !{!1112, !13, !21}
!1113 = distinct !{!1113, !13}
!1114 = distinct !{!1114, !13, !14, !15}
!1115 = distinct !{!1115, !13, !15, !14}
!1116 = distinct !{!1116, !13}
!1117 = distinct !{!1117, !13, !21}
!1118 = distinct !{!1118, !13}
!1119 = distinct !{!1119, !13, !14, !15}
!1120 = distinct !{!1120, !13, !15, !14}
!1121 = distinct !{!1121, !13}
!1122 = distinct !{!1122, !13, !21}
!1123 = distinct !{!1123, !13}
!1124 = distinct !{!1124, !13, !14, !15}
!1125 = distinct !{!1125, !13, !15, !14}
!1126 = distinct !{!1126, !13}
!1127 = distinct !{!1127, !13, !21}
!1128 = distinct !{!1128, !13}
!1129 = distinct !{!1129, !13, !14, !15}
!1130 = distinct !{!1130, !13, !15, !14}
!1131 = distinct !{!1131, !13}
!1132 = distinct !{!1132, !13, !21}
!1133 = distinct !{!1133, !13}
!1134 = distinct !{!1134, !13, !14, !15}
!1135 = distinct !{!1135, !13, !15, !14}
!1136 = distinct !{!1136, !13}
!1137 = distinct !{!1137, !13, !21}
!1138 = distinct !{!1138, !13}
!1139 = distinct !{!1139, !13, !14, !15}
!1140 = distinct !{!1140, !13, !15, !14}
!1141 = distinct !{!1141, !13}
!1142 = distinct !{!1142, !13, !21}
!1143 = distinct !{!1143, !13}
!1144 = distinct !{!1144, !13, !14, !15}
!1145 = distinct !{!1145, !13, !15, !14}
!1146 = distinct !{!1146, !13}
!1147 = distinct !{!1147, !13, !21}
!1148 = distinct !{!1148, !13}
!1149 = distinct !{!1149, !13, !14, !15}
!1150 = distinct !{!1150, !13, !15, !14}
!1151 = distinct !{!1151, !13}
!1152 = distinct !{!1152, !13, !21}
!1153 = distinct !{!1153, !13}
!1154 = distinct !{!1154, !13, !14, !15}
!1155 = distinct !{!1155, !13, !15, !14}
!1156 = distinct !{!1156, !13}
!1157 = distinct !{!1157, !13, !21}
!1158 = distinct !{!1158, !13}
!1159 = distinct !{!1159, !13, !14, !15}
!1160 = distinct !{!1160, !13, !15, !14}
!1161 = distinct !{!1161, !13}
!1162 = distinct !{!1162, !13, !21}
!1163 = distinct !{!1163, !13}
!1164 = distinct !{!1164, !13, !14, !15}
!1165 = distinct !{!1165, !13, !15, !14}
!1166 = distinct !{!1166, !13}
!1167 = distinct !{!1167, !13, !21}
!1168 = distinct !{!1168, !13}
!1169 = distinct !{!1169, !13, !14, !15}
!1170 = distinct !{!1170, !13, !15, !14}
!1171 = distinct !{!1171, !13}
!1172 = distinct !{!1172, !13, !21}
!1173 = distinct !{!1173, !13}
!1174 = distinct !{!1174, !13, !14, !15}
!1175 = distinct !{!1175, !13, !15, !14}
!1176 = distinct !{!1176, !13}
!1177 = distinct !{!1177, !13, !21}
!1178 = distinct !{!1178, !13}
!1179 = distinct !{!1179, !13, !14, !15}
!1180 = distinct !{!1180, !13, !15, !14}
!1181 = distinct !{!1181, !13}
!1182 = distinct !{!1182, !13, !21}
!1183 = distinct !{!1183, !13}
!1184 = distinct !{!1184, !13, !14, !15}
!1185 = distinct !{!1185, !13, !15, !14}
!1186 = distinct !{!1186, !13}
!1187 = distinct !{!1187, !13, !21}
!1188 = distinct !{!1188, !13}
!1189 = distinct !{!1189, !13, !14, !15}
!1190 = distinct !{!1190, !13, !15, !14}
!1191 = distinct !{!1191, !13}
!1192 = distinct !{!1192, !13, !21}
!1193 = distinct !{!1193, !13}
!1194 = distinct !{!1194, !13, !14, !15}
!1195 = distinct !{!1195, !13, !15, !14}
!1196 = distinct !{!1196, !13}
!1197 = distinct !{!1197, !13, !21}
!1198 = distinct !{!1198, !13}
!1199 = distinct !{!1199, !13, !14, !15}
!1200 = distinct !{!1200, !13, !15, !14}
!1201 = distinct !{!1201, !13}
!1202 = distinct !{!1202, !13, !21}
!1203 = distinct !{!1203, !13}
!1204 = distinct !{!1204, !13, !14, !15}
!1205 = distinct !{!1205, !13, !15, !14}
!1206 = distinct !{!1206, !13}
!1207 = distinct !{!1207, !13, !21}
!1208 = distinct !{!1208, !13}
!1209 = distinct !{!1209, !13, !14, !15}
!1210 = distinct !{!1210, !13, !15, !14}
!1211 = distinct !{!1211, !13}
!1212 = distinct !{!1212, !13, !21}
!1213 = distinct !{!1213, !13}
!1214 = distinct !{!1214, !13, !14, !15}
!1215 = distinct !{!1215, !13, !15, !14}
!1216 = distinct !{!1216, !13}
!1217 = distinct !{!1217, !13, !21}
!1218 = distinct !{!1218, !13}
!1219 = distinct !{!1219, !13, !14, !15}
!1220 = distinct !{!1220, !13, !15, !14}
!1221 = distinct !{!1221, !13}
!1222 = distinct !{!1222, !13, !21}
!1223 = distinct !{!1223, !13}
!1224 = distinct !{!1224, !13, !14, !15}
!1225 = distinct !{!1225, !13, !15, !14}
!1226 = distinct !{!1226, !13}
!1227 = distinct !{!1227, !13, !21}
!1228 = distinct !{!1228, !13}
!1229 = distinct !{!1229, !13, !14, !15}
!1230 = distinct !{!1230, !13, !15, !14}
!1231 = distinct !{!1231, !13}
!1232 = distinct !{!1232, !13, !21}
!1233 = distinct !{!1233, !13}
!1234 = distinct !{!1234, !13, !14, !15}
!1235 = distinct !{!1235, !13, !15, !14}
!1236 = distinct !{!1236, !13}
!1237 = distinct !{!1237, !13, !21}
!1238 = distinct !{!1238, !13}
!1239 = distinct !{!1239, !13, !14, !15}
!1240 = distinct !{!1240, !13, !15, !14}
!1241 = distinct !{!1241, !13}
!1242 = distinct !{!1242, !13, !21}
!1243 = distinct !{!1243, !13}
!1244 = distinct !{!1244, !13, !14, !15}
!1245 = distinct !{!1245, !13, !15, !14}
!1246 = distinct !{!1246, !13}
!1247 = distinct !{!1247, !13, !21}
!1248 = distinct !{!1248, !13}
!1249 = distinct !{!1249, !13, !14, !15}
!1250 = distinct !{!1250, !13, !15, !14}
!1251 = distinct !{!1251, !13}
!1252 = distinct !{!1252, !13, !21}
!1253 = distinct !{!1253, !13}
!1254 = distinct !{!1254, !13, !14, !15}
!1255 = distinct !{!1255, !13, !15, !14}
!1256 = distinct !{!1256, !13}
!1257 = distinct !{!1257, !13, !21}
!1258 = distinct !{!1258, !13}
!1259 = distinct !{!1259, !13, !14, !15}
!1260 = distinct !{!1260, !13, !15, !14}
!1261 = distinct !{!1261, !13}
!1262 = distinct !{!1262, !13, !21}
!1263 = distinct !{!1263, !13}
!1264 = distinct !{!1264, !13, !14, !15}
!1265 = distinct !{!1265, !13, !15, !14}
!1266 = distinct !{!1266, !13}
!1267 = distinct !{!1267, !13, !21}
!1268 = distinct !{!1268, !13}
!1269 = distinct !{!1269, !13, !14, !15}
!1270 = distinct !{!1270, !13, !15, !14}
!1271 = distinct !{!1271, !13}
!1272 = distinct !{!1272, !13, !21}
!1273 = distinct !{!1273, !13}
!1274 = distinct !{!1274, !13, !14, !15}
!1275 = distinct !{!1275, !13, !15, !14}
!1276 = distinct !{!1276, !13}
!1277 = distinct !{!1277, !13, !21}
!1278 = distinct !{!1278, !13}
!1279 = distinct !{!1279, !13, !14, !15}
!1280 = distinct !{!1280, !13, !15, !14}
!1281 = distinct !{!1281, !13}
!1282 = distinct !{!1282, !13, !21}
!1283 = distinct !{!1283, !13}
!1284 = distinct !{!1284, !13, !14, !15}
!1285 = distinct !{!1285, !13, !15, !14}
!1286 = distinct !{!1286, !13}
!1287 = distinct !{!1287, !13, !21}
!1288 = distinct !{!1288, !13}
!1289 = distinct !{!1289, !13, !14, !15}
!1290 = distinct !{!1290, !13, !15, !14}
!1291 = distinct !{!1291, !13}
!1292 = distinct !{!1292, !13, !21}
!1293 = distinct !{!1293, !13}
!1294 = distinct !{!1294, !13, !14, !15}
!1295 = distinct !{!1295, !13, !15, !14}
!1296 = distinct !{!1296, !13}
!1297 = distinct !{!1297, !13, !21}
!1298 = distinct !{!1298, !13}
!1299 = distinct !{!1299, !13, !14, !15}
!1300 = distinct !{!1300, !13, !15, !14}
!1301 = distinct !{!1301, !13}
!1302 = distinct !{!1302, !13, !21}
!1303 = distinct !{!1303, !13}
!1304 = distinct !{!1304, !13, !14, !15}
!1305 = distinct !{!1305, !13, !15, !14}
!1306 = distinct !{!1306, !13}
!1307 = distinct !{!1307, !13, !21}
!1308 = distinct !{!1308, !13}
!1309 = distinct !{!1309, !13, !14, !15}
!1310 = distinct !{!1310, !13, !15, !14}
!1311 = distinct !{!1311, !13}
!1312 = distinct !{!1312, !13, !21}
!1313 = distinct !{!1313, !13}
!1314 = distinct !{!1314, !13, !14, !15}
!1315 = distinct !{!1315, !13, !15, !14}
!1316 = distinct !{!1316, !13}
!1317 = distinct !{!1317, !13, !21}
!1318 = distinct !{!1318, !13}
!1319 = distinct !{!1319, !13, !14, !15}
!1320 = distinct !{!1320, !13, !15, !14}
!1321 = distinct !{!1321, !13}
!1322 = distinct !{!1322, !13, !21}
!1323 = distinct !{!1323, !13}
!1324 = distinct !{!1324, !13, !14, !15}
!1325 = distinct !{!1325, !13, !15, !14}
!1326 = distinct !{!1326, !13}
!1327 = distinct !{!1327, !13, !21}
!1328 = distinct !{!1328, !13}
!1329 = distinct !{!1329, !13, !14, !15}
!1330 = distinct !{!1330, !13, !15, !14}
!1331 = distinct !{!1331, !13}
!1332 = distinct !{!1332, !13, !21}
!1333 = distinct !{!1333, !13}
!1334 = distinct !{!1334, !13, !14, !15}
!1335 = distinct !{!1335, !13, !15, !14}
!1336 = distinct !{!1336, !13}
!1337 = distinct !{!1337, !13, !21}
!1338 = distinct !{!1338, !13}
!1339 = distinct !{!1339, !13, !14, !15}
!1340 = distinct !{!1340, !13, !15, !14}
!1341 = distinct !{!1341, !13}
!1342 = distinct !{!1342, !13, !21}
!1343 = distinct !{!1343, !13}
!1344 = distinct !{!1344, !13, !14, !15}
!1345 = distinct !{!1345, !13, !15, !14}
!1346 = distinct !{!1346, !13}
!1347 = distinct !{!1347, !13, !21}
!1348 = distinct !{!1348, !13}
!1349 = distinct !{!1349, !13, !14, !15}
!1350 = distinct !{!1350, !13, !15, !14}
!1351 = distinct !{!1351, !13}
!1352 = distinct !{!1352, !13, !21}
!1353 = distinct !{!1353, !13}
!1354 = distinct !{!1354, !13, !14, !15}
!1355 = distinct !{!1355, !13, !15, !14}
!1356 = distinct !{!1356, !13}
!1357 = distinct !{!1357, !13, !21}
!1358 = distinct !{!1358, !13}
!1359 = distinct !{!1359, !13, !14, !15}
!1360 = distinct !{!1360, !13, !15, !14}
!1361 = distinct !{!1361, !13}
!1362 = distinct !{!1362, !13, !21}
!1363 = distinct !{!1363, !13}
!1364 = distinct !{!1364, !13, !14, !15}
!1365 = distinct !{!1365, !13, !15, !14}
!1366 = distinct !{!1366, !13}
!1367 = distinct !{!1367, !13, !21}
!1368 = distinct !{!1368, !13}
!1369 = distinct !{!1369, !13, !14, !15}
!1370 = distinct !{!1370, !13, !15, !14}
!1371 = distinct !{!1371, !13}
!1372 = distinct !{!1372, !13, !21}
!1373 = distinct !{!1373, !13}
!1374 = distinct !{!1374, !13, !14, !15}
!1375 = distinct !{!1375, !13, !15, !14}
!1376 = distinct !{!1376, !13}
!1377 = distinct !{!1377, !13, !21}
!1378 = distinct !{!1378, !13}
!1379 = distinct !{!1379, !13, !14, !15}
!1380 = distinct !{!1380, !13, !15, !14}
!1381 = distinct !{!1381, !13}
!1382 = distinct !{!1382, !13, !21}
!1383 = distinct !{!1383, !13}
!1384 = distinct !{!1384, !13, !14, !15}
!1385 = distinct !{!1385, !13, !15, !14}
!1386 = distinct !{!1386, !13}
!1387 = distinct !{!1387, !13, !21}
!1388 = distinct !{!1388, !13}
!1389 = distinct !{!1389, !13, !14, !15}
!1390 = distinct !{!1390, !13, !15, !14}
!1391 = distinct !{!1391, !13}
!1392 = distinct !{!1392, !13, !21}
!1393 = distinct !{!1393, !13}
!1394 = distinct !{!1394, !13, !14, !15}
!1395 = distinct !{!1395, !13, !15, !14}
!1396 = distinct !{!1396, !13}
!1397 = distinct !{!1397, !13, !21}
!1398 = distinct !{!1398, !13}
!1399 = distinct !{!1399, !13, !14, !15}
!1400 = distinct !{!1400, !13, !15, !14}
!1401 = distinct !{!1401, !13}
!1402 = distinct !{!1402, !13, !21}
!1403 = distinct !{!1403, !13}
!1404 = distinct !{!1404, !13, !14, !15}
!1405 = distinct !{!1405, !13, !15, !14}
!1406 = distinct !{!1406, !13}
!1407 = distinct !{!1407, !13, !21}
!1408 = distinct !{!1408, !13}
!1409 = distinct !{!1409, !13, !14, !15}
!1410 = distinct !{!1410, !13, !15, !14}
!1411 = distinct !{!1411, !13}
!1412 = distinct !{!1412, !13, !21}
!1413 = distinct !{!1413, !13}
!1414 = distinct !{!1414, !13, !14, !15}
!1415 = distinct !{!1415, !13, !15, !14}
!1416 = distinct !{!1416, !13}
!1417 = distinct !{!1417, !13, !21}
!1418 = distinct !{!1418, !13}
!1419 = distinct !{!1419, !13, !14, !15}
!1420 = distinct !{!1420, !13, !15, !14}
!1421 = distinct !{!1421, !13}
!1422 = distinct !{!1422, !13, !21}
!1423 = distinct !{!1423, !13}
!1424 = distinct !{!1424, !13, !14, !15}
!1425 = distinct !{!1425, !13, !15, !14}
!1426 = distinct !{!1426, !13}
!1427 = distinct !{!1427, !13, !21}
!1428 = distinct !{!1428, !13}
!1429 = distinct !{!1429, !13, !14, !15}
!1430 = distinct !{!1430, !13, !15, !14}
!1431 = distinct !{!1431, !13}
!1432 = distinct !{!1432, !13, !21}
!1433 = distinct !{!1433, !13}
!1434 = distinct !{!1434, !13, !14, !15}
!1435 = distinct !{!1435, !13, !15, !14}
!1436 = distinct !{!1436, !13}
!1437 = distinct !{!1437, !13, !21}
!1438 = distinct !{!1438, !13}
!1439 = distinct !{!1439, !13, !14, !15}
!1440 = distinct !{!1440, !13, !15, !14}
!1441 = distinct !{!1441, !13}
!1442 = distinct !{!1442, !13, !21}
!1443 = distinct !{!1443, !13}
!1444 = distinct !{!1444, !13, !14, !15}
!1445 = distinct !{!1445, !13, !15, !14}
!1446 = distinct !{!1446, !13}
!1447 = distinct !{!1447, !13, !21}
!1448 = distinct !{!1448, !13}
!1449 = distinct !{!1449, !13, !14, !15}
!1450 = distinct !{!1450, !13, !15, !14}
!1451 = distinct !{!1451, !13}
!1452 = distinct !{!1452, !13, !21}
!1453 = distinct !{!1453, !13}
!1454 = distinct !{!1454, !13, !14, !15}
!1455 = distinct !{!1455, !13, !15, !14}
!1456 = distinct !{!1456, !13}
!1457 = distinct !{!1457, !13, !21}
!1458 = distinct !{!1458, !13}
!1459 = distinct !{!1459, !13, !14, !15}
!1460 = distinct !{!1460, !13, !15, !14}
!1461 = distinct !{!1461, !13}
!1462 = distinct !{!1462, !13, !21}
!1463 = distinct !{!1463, !13}
!1464 = distinct !{!1464, !13, !14, !15}
!1465 = distinct !{!1465, !13, !15, !14}
!1466 = distinct !{!1466, !13}
!1467 = distinct !{!1467, !13, !21}
!1468 = distinct !{!1468, !13}
!1469 = distinct !{!1469, !13, !14, !15}
!1470 = distinct !{!1470, !13, !15, !14}
!1471 = distinct !{!1471, !13}
!1472 = distinct !{!1472, !13, !21}
!1473 = distinct !{!1473, !13}
!1474 = distinct !{!1474, !13, !14, !15}
!1475 = distinct !{!1475, !13, !15, !14}
!1476 = distinct !{!1476, !13}
!1477 = distinct !{!1477, !13, !21}
!1478 = distinct !{!1478, !13}
!1479 = distinct !{!1479, !13, !14, !15}
!1480 = distinct !{!1480, !13, !15, !14}
!1481 = distinct !{!1481, !13}
!1482 = distinct !{!1482, !13, !21}
!1483 = distinct !{!1483, !13}
