; ModuleID = 'CactusBindings/Parameters/MoL_Parameters.c'
source_filename = "CactusBindings/Parameters/MoL_Parameters.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.anon = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon.0 = type { double, double, double, double, double, double, double, double, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [27 x i8] c"MoL_Max_Evolved_Array_Size\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"MoL\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"INT\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"RESTRICTED\00", align 1
@.str.4 = private unnamed_addr constant [56 x i8] c"The maximum total size of any grid arrays to be evolved\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@methodoflinesrest_ = dso_local global %struct.anon zeroinitializer, align 4
@.str.6 = private unnamed_addr constant [6 x i8] c"(x+y)\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"0:*\00", align 1
@.str.8 = private unnamed_addr constant [51 x i8] c"Anything non negative. Accumulated by other thorns\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"MoL_Max_Evolved_ComplexArray_Size\00", align 1
@.str.10 = private unnamed_addr constant [64 x i8] c"The maximum total size of any complex grid arrays to be evolved\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"MoL_Num_ArrayConstrained_Vars\00", align 1
@.str.12 = private unnamed_addr constant [95 x i8] c"The maximum number of array constrained variables with timelevels that MoL needs to know about\00", align 1
@.str.13 = private unnamed_addr constant [49 x i8] c"Anything non negative. Added to by other thorns.\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"MoL_Num_ArrayEvolved_Vars\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"The maximum number of array variables to be evolved by MoL\00", align 1
@.str.16 = private unnamed_addr constant [33 x i8] c"MoL_Num_ArraySaveAndRestore_Vars\00", align 1
@.str.17 = private unnamed_addr constant [100 x i8] c"The maximum number of array variables to be evolved outside of MoL but that MoL needs to know about\00", align 1
@.str.18 = private unnamed_addr constant [37 x i8] c"MoL_Num_ComplexArrayConstrained_Vars\00", align 1
@.str.19 = private unnamed_addr constant [103 x i8] c"The maximum number of complex array constrained variables with timelevels that MoL needs to know about\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"MoL_Num_ComplexArrayEvolved_Vars\00", align 1
@.str.21 = private unnamed_addr constant [67 x i8] c"The maximum number of complex array variables to be evolved by MoL\00", align 1
@.str.22 = private unnamed_addr constant [40 x i8] c"MoL_Num_ComplexArraySaveAndRestore_Vars\00", align 1
@.str.23 = private unnamed_addr constant [108 x i8] c"The maximum number of complex array variables to be evolved outside of MoL but that MoL needs to know about\00", align 1
@.str.24 = private unnamed_addr constant [32 x i8] c"MoL_Num_ComplexConstrained_Vars\00", align 1
@.str.25 = private unnamed_addr constant [97 x i8] c"The maximum number of complex constrained variables with timelevels that MoL needs to know about\00", align 1
@.str.26 = private unnamed_addr constant [28 x i8] c"MoL_Num_ComplexEvolved_Vars\00", align 1
@.str.27 = private unnamed_addr constant [61 x i8] c"The maximum number of complex variables to be evolved by MoL\00", align 1
@.str.28 = private unnamed_addr constant [35 x i8] c"MoL_Num_ComplexSaveAndRestore_Vars\00", align 1
@.str.29 = private unnamed_addr constant [102 x i8] c"The maximum number of complex variables to be evolved outside of MoL but that MoL needs to know about\00", align 1
@.str.30 = private unnamed_addr constant [25 x i8] c"MoL_Num_Constrained_Vars\00", align 1
@.str.31 = private unnamed_addr constant [89 x i8] c"The maximum number of constrained variables with timelevels that MoL needs to know about\00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"MoL_Num_Evolved_Vars\00", align 1
@.str.33 = private unnamed_addr constant [53 x i8] c"The maximum number of variables to be evolved by MoL\00", align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"MoL_Num_Evolved_Vars_Slow\00", align 1
@.str.35 = private unnamed_addr constant [60 x i8] c"The maximum number of 'slow' variables to be evolved by MoL\00", align 1
@.str.36 = private unnamed_addr constant [28 x i8] c"MoL_Num_SaveAndRestore_Vars\00", align 1
@.str.37 = private unnamed_addr constant [94 x i8] c"The maximum number of variables to be evolved outside of MoL but that MoL needs to know about\00", align 1
@.str.38 = private unnamed_addr constant [23 x i8] c"MoL_Num_Scratch_Levels\00", align 1
@.str.39 = private unnamed_addr constant [52 x i8] c"Number of scratch levels required by the ODE method\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"Anything non negative\00", align 1
@.str.41 = private unnamed_addr constant [8 x i8] c"AB_Type\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"KEYWORD\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"PRIVATE\00", align 1
@.str.44 = private unnamed_addr constant [39 x i8] c"If using the the AB method, which sort\00", align 1
@.str.45 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@molpriv_ = dso_local global %struct.anon.0 zeroinitializer, align 8
@.str.46 = private unnamed_addr constant [22 x i8] c"same as forward Euler\00", align 1
@.str.47 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.48 = private unnamed_addr constant [13 x i8] c"second order\00", align 1
@.str.49 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@.str.50 = private unnamed_addr constant [12 x i8] c"third order\00", align 1
@.str.51 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"fourth order\00", align 1
@.str.53 = private unnamed_addr constant [2 x i8] c"5\00", align 1
@.str.54 = private unnamed_addr constant [12 x i8] c"fifth order\00", align 1
@.str.55 = private unnamed_addr constant [26 x i8] c"AB_initially_reduce_order\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"BOOLEAN\00", align 1
@.str.57 = private unnamed_addr constant [91 x i8] c"Reduce order of accuracy initially so that no past timelevels of initial data are required\00", align 1
@.str.58 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.59 = private unnamed_addr constant [26 x i8] c"Generic_Method_Descriptor\00", align 1
@.str.60 = private unnamed_addr constant [7 x i8] c"STRING\00", align 1
@.str.61 = private unnamed_addr constant [81 x i8] c"A string used to create a table containing the description of the generic method\00", align 1
@.str.62 = private unnamed_addr constant [108 x i8] c"GenericIntermediateSteps = 2    GenericAlphaCoeffs = { 1.0 0.0 0.5 0.5 }    GenericBetaCoeffs = { 1.0 0.5 }\00", align 1
@.str.63 = private unnamed_addr constant [3 x i8] c".*\00", align 1
@.str.64 = private unnamed_addr constant [79 x i8] c"Should contain the Alpha and Beta arrays, and the number of intermediate steps\00", align 1
@.str.65 = private unnamed_addr constant [13 x i8] c"Generic_Type\00", align 1
@.str.66 = private unnamed_addr constant [40 x i8] c"If using the generic method, which sort\00", align 1
@.str.67 = private unnamed_addr constant [3 x i8] c"RK\00", align 1
@.str.68 = private unnamed_addr constant [44 x i8] c"One of the standard TVD Runge-Kutta methods\00", align 1
@.str.69 = private unnamed_addr constant [4 x i8] c"ICN\00", align 1
@.str.70 = private unnamed_addr constant [46 x i8] c"Iterative Crank Nicholson as a generic method\00", align 1
@.str.71 = private unnamed_addr constant [6 x i8] c"Table\00", align 1
@.str.72 = private unnamed_addr constant [51 x i8] c"Given from the generic method descriptor parameter\00", align 1
@.str.73 = private unnamed_addr constant [12 x i8] c"Classic RK3\00", align 1
@.str.74 = private unnamed_addr constant [34 x i8] c"Efficient RK3 - classical version\00", align 1
@.str.75 = private unnamed_addr constant [16 x i8] c"ICN_avg_swapped\00", align 1
@.str.76 = private unnamed_addr constant [36 x i8] c"Use swapped averages in ICN method?\00", align 1
@.str.77 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.78 = private unnamed_addr constant [14 x i8] c"ICN_avg_theta\00", align 1
@.str.79 = private unnamed_addr constant [5 x i8] c"REAL\00", align 1
@.str.80 = private unnamed_addr constant [42 x i8] c"theta of averaged ICN method, usually 0.5\00", align 1
@.str.81 = private unnamed_addr constant [4 x i8] c"0.5\00", align 1
@.str.82 = private unnamed_addr constant [4 x i8] c"0:1\00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"0 <= theta <= 1\00", align 1
@.str.84 = private unnamed_addr constant [23 x i8] c"MoL_Intermediate_Steps\00", align 1
@.str.85 = private unnamed_addr constant [53 x i8] c"Number of intermediate steps taken by the ODE method\00", align 1
@.str.86 = private unnamed_addr constant [4 x i8] c"1:*\00", align 1
@.str.87 = private unnamed_addr constant [24 x i8] c"Anything greater than 1\00", align 1
@.str.88 = private unnamed_addr constant [21 x i8] c"MoL_Memory_Always_On\00", align 1
@.str.89 = private unnamed_addr constant [54 x i8] c"Do we keep the scratch arrays allocated all the time?\00", align 1
@.str.90 = private unnamed_addr constant [14 x i8] c"MoL_NaN_Check\00", align 1
@.str.91 = private unnamed_addr constant [40 x i8] c"Should the RHS GFs be checked for NaNs?\00", align 1
@.str.92 = private unnamed_addr constant [9 x i8] c"MoL_Tiny\00", align 1
@.str.93 = private unnamed_addr constant [58 x i8] c"Effective local machine zero; required by generic solvers\00", align 1
@.str.94 = private unnamed_addr constant [7 x i8] c"1.e-15\00", align 1
@.str.95 = private unnamed_addr constant [19 x i8] c"Defaults to 1.e-15\00", align 1
@.str.96 = private unnamed_addr constant [11 x i8] c"ODE_Method\00", align 1
@.str.97 = private unnamed_addr constant [49 x i8] c"The ODE method use by MoL to do time integration\00", align 1
@.str.98 = private unnamed_addr constant [8 x i8] c"Generic\00", align 1
@.str.99 = private unnamed_addr constant [35 x i8] c"Generic Shu-Osher Runge-Kutta type\00", align 1
@.str.100 = private unnamed_addr constant [26 x i8] c"Iterative Crank Nicholson\00", align 1
@.str.101 = private unnamed_addr constant [8 x i8] c"ICN-avg\00", align 1
@.str.102 = private unnamed_addr constant [41 x i8] c"Iterative Crank Nicholson with averaging\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"Euler\00", align 1
@.str.104 = private unnamed_addr constant [4 x i8] c"RK2\00", align 1
@.str.105 = private unnamed_addr constant [14 x i8] c"Efficient RK2\00", align 1
@.str.106 = private unnamed_addr constant [4 x i8] c"RK3\00", align 1
@.str.107 = private unnamed_addr constant [14 x i8] c"Efficient RK3\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"RK4\00", align 1
@.str.109 = private unnamed_addr constant [14 x i8] c"Efficient RK4\00", align 1
@.str.110 = private unnamed_addr constant [5 x i8] c"RK45\00", align 1
@.str.111 = private unnamed_addr constant [38 x i8] c"RK45 (Fehlberg) with error estimation\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"RK45CK\00", align 1
@.str.113 = private unnamed_addr constant [41 x i8] c"RK45CK (Cash-Karp) with error estimation\00", align 1
@.str.114 = private unnamed_addr constant [5 x i8] c"RK65\00", align 1
@.str.115 = private unnamed_addr constant [27 x i8] c"RK65 with error estimation\00", align 1
@.str.116 = private unnamed_addr constant [5 x i8] c"RK87\00", align 1
@.str.117 = private unnamed_addr constant [27 x i8] c"RK87 with error estimation\00", align 1
@.str.118 = private unnamed_addr constant [3 x i8] c"AB\00", align 1
@.str.119 = private unnamed_addr constant [16 x i8] c"Adams-Bashforth\00", align 1
@.str.120 = private unnamed_addr constant [11 x i8] c"RK2-MR-2:1\00", align 1
@.str.121 = private unnamed_addr constant [74 x i8] c"2nd order 2:1 multirate RK scheme based on RK2 due to Schlegel et al 2009\00", align 1
@.str.122 = private unnamed_addr constant [11 x i8] c"RK4-MR-2:1\00", align 1
@.str.123 = private unnamed_addr constant [75 x i8] c"3rd order 2:1 multirate RK scheme based on RK43 due to Schlegel et al 2009\00", align 1
@.str.124 = private unnamed_addr constant [8 x i8] c"RK4-RK2\00", align 1
@.str.125 = private unnamed_addr constant [42 x i8] c"RK4 as fast method and RK2 as slow method\00", align 1
@.str.126 = private unnamed_addr constant [17 x i8] c"RHS_error_weight\00", align 1
@.str.127 = private unnamed_addr constant [52 x i8] c"Weight of the RHS in the relative error calculation\00", align 1
@.str.128 = private unnamed_addr constant [4 x i8] c"1.0\00", align 1
@.str.129 = private unnamed_addr constant [6 x i8] c"0.0:*\00", align 1
@.str.130 = private unnamed_addr constant [31 x i8] c"should be between zero and one\00", align 1
@.str.131 = private unnamed_addr constant [18 x i8] c"adaptive_stepsize\00", align 1
@.str.132 = private unnamed_addr constant [37 x i8] c"Choose the time step size adaptively\00", align 1
@.str.133 = private unnamed_addr constant [27 x i8] c"copy_ID_after_MoL_PostStep\00", align 1
@.str.134 = private unnamed_addr constant [260 x i8] c"if  initial_data_is_crap  is true, *when* should we copy the\09\09   current time level to all previous time levels:\09\09\09   false ==> copy *before* MoL_PostStep  (default, matches old behavior)   true  ==> copy *after*  MoL_PostStep  (maybe preferable for new code)\00", align 1
@.str.135 = private unnamed_addr constant [21 x i8] c"disable_prolongation\00", align 1
@.str.136 = private unnamed_addr constant [80 x i8] c"If Mesh refinement is enabled should we use buffer zones in intermediate steps?\00", align 1
@.str.137 = private unnamed_addr constant [14 x i8] c"init_RHS_zero\00", align 1
@.str.138 = private unnamed_addr constant [27 x i8] c"Initialise the RHS to zero\00", align 1
@.str.139 = private unnamed_addr constant [21 x i8] c"initial_data_is_crap\00", align 1
@.str.140 = private unnamed_addr constant [97 x i8] c"If the initial data routine fails to set up the previous time levels, copy the current backwards\00", align 1
@.str.141 = private unnamed_addr constant [23 x i8] c"maximum_absolute_error\00", align 1
@.str.142 = private unnamed_addr constant [61 x i8] c"Maximum allowed absolute error for adaptive stepsize control\00", align 1
@.str.143 = private unnamed_addr constant [7 x i8] c"1.0e-6\00", align 1
@.str.144 = private unnamed_addr constant [8 x i8] c"(0.0:*)\00", align 1
@.str.145 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.146 = private unnamed_addr constant [17 x i8] c"maximum_decrease\00", align 1
@.str.147 = private unnamed_addr constant [33 x i8] c"Maximum stepsize decrease factor\00", align 1
@.str.148 = private unnamed_addr constant [5 x i8] c"10.0\00", align 1
@.str.149 = private unnamed_addr constant [26 x i8] c"should be larger than one\00", align 1
@.str.150 = private unnamed_addr constant [17 x i8] c"maximum_increase\00", align 1
@.str.151 = private unnamed_addr constant [33 x i8] c"Maximum stepsize increase factor\00", align 1
@.str.152 = private unnamed_addr constant [4 x i8] c"5.0\00", align 1
@.str.153 = private unnamed_addr constant [23 x i8] c"maximum_relative_error\00", align 1
@.str.154 = private unnamed_addr constant [61 x i8] c"Maximum allowed relative error for adaptive stepsize control\00", align 1
@.str.155 = private unnamed_addr constant [43 x i8] c"run_MoL_PostStep_in_Post_Recover_Variables\00", align 1
@.str.156 = private unnamed_addr constant [96 x i8] c"Schedule the PostStep parts after recovery so that symmetries are automatically done correctly.\00", align 1
@.str.157 = private unnamed_addr constant [14 x i8] c"safety_factor\00", align 1
@.str.158 = private unnamed_addr constant [35 x i8] c"Safety factor for stepsize control\00", align 1
@.str.159 = private unnamed_addr constant [4 x i8] c"0.9\00", align 1
@.str.160 = private unnamed_addr constant [24 x i8] c"should be less than one\00", align 1
@.str.161 = private unnamed_addr constant [18 x i8] c"set_ID_boundaries\00", align 1
@.str.162 = private unnamed_addr constant [98 x i8] c"Should boundaries be overwritten (via synchronization, prolongation, boundary conditions) by MoL?\00", align 1
@.str.163 = private unnamed_addr constant [18 x i8] c"skip_initial_copy\00", align 1
@.str.164 = private unnamed_addr constant [54 x i8] c"Skip initial copy from previous to current time level\00", align 1
@.str.165 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.166 = private unnamed_addr constant [27 x i8] c"How verbose should MoL be?\00", align 1
@.str.167 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.168 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.169 = private unnamed_addr constant [35 x i8] c"No output at all (not implemented)\00", align 1
@.str.170 = private unnamed_addr constant [19 x i8] c"Standard verbosity\00", align 1
@.str.171 = private unnamed_addr constant [9 x i8] c"register\00", align 1
@.str.172 = private unnamed_addr constant [38 x i8] c"List the variables registered as well\00", align 1
@.str.173 = private unnamed_addr constant [8 x i8] c"extreme\00", align 1
@.str.174 = private unnamed_addr constant [36 x i8] c"Everything you never wanted to know\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @CCTKi_BindingsCreateMoLParameters() local_unnamed_addr #0 {
  %1 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.4, ptr noundef nonnull @.str.5, ptr noundef nonnull @methodoflinesrest_, i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.8) #3
  %2 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 1), i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.8) #3
  %3 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.11, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.12, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 2), i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.13) #3
  %4 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.14, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.15, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 3), i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.13) #3
  %5 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.16, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 4), i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.13) #3
  %6 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.18, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 5), i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.13) #3
  %7 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.20, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 6), i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.13) #3
  %8 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.22, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.23, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 7), i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.13) #3
  %9 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.24, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.25, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 8), i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.13) #3
  %10 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.26, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.27, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 9), i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.13) #3
  %11 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.29, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 10), i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.13) #3
  %12 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.30, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 11), i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.13) #3
  %13 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.32, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.33, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 12), i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.13) #3
  %14 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.35, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 13), i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.13) #3
  %15 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.37, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 14), i32 noundef 0, ptr noundef nonnull @.str.6, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.13) #3
  %16 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.3, i32 noundef 200, ptr noundef nonnull @.str.39, ptr noundef nonnull @.str.5, ptr noundef nonnull getelementptr inbounds (%struct.anon, ptr @methodoflinesrest_, i64 0, i32 15), i32 noundef 0, ptr noundef null, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.40) #3
  %17 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.41, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.42, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.44, ptr noundef nonnull @.str.45, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 8), i32 noundef 0, ptr noundef null, i32 noundef 5, ptr noundef nonnull @.str.45, ptr noundef nonnull @.str.46, ptr noundef nonnull @.str.47, ptr noundef nonnull @.str.48, ptr noundef nonnull @.str.49, ptr noundef nonnull @.str.50, ptr noundef nonnull @.str.51, ptr noundef nonnull @.str.52, ptr noundef nonnull @.str.53, ptr noundef nonnull @.str.54) #3
  %18 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.55, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.57, ptr noundef nonnull @.str.58, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 13), i32 noundef 0, ptr noundef null, i32 noundef 0) #3
  %19 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.59, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.60, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.61, ptr noundef nonnull @.str.62, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 9), i32 noundef 0, ptr noundef null, i32 noundef 1, ptr noundef nonnull @.str.63, ptr noundef nonnull @.str.64) #3
  %20 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.65, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.42, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.66, ptr noundef nonnull @.str.67, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 10), i32 noundef 0, ptr noundef null, i32 noundef 4, ptr noundef nonnull @.str.67, ptr noundef nonnull @.str.68, ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.70, ptr noundef nonnull @.str.71, ptr noundef nonnull @.str.72, ptr noundef nonnull @.str.73, ptr noundef nonnull @.str.74) #3
  %21 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.75, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.76, ptr noundef nonnull @.str.77, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 14), i32 noundef 0, ptr noundef null, i32 noundef 0) #3
  %22 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.78, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.79, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.80, ptr noundef nonnull @.str.81, ptr noundef nonnull @molpriv_, i32 noundef 0, ptr noundef null, i32 noundef 1, ptr noundef nonnull @.str.82, ptr noundef nonnull @.str.83) #3
  %23 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.84, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.85, ptr noundef nonnull @.str.49, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 15), i32 noundef 0, ptr noundef null, i32 noundef 1, ptr noundef nonnull @.str.86, ptr noundef nonnull @.str.87) #3
  %24 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.88, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.89, ptr noundef nonnull @.str.58, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 16), i32 noundef 0, ptr noundef null, i32 noundef 0) #3
  %25 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.90, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.91, ptr noundef nonnull @.str.77, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 17), i32 noundef 0, ptr noundef null, i32 noundef 0) #3
  %26 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.92, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.79, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.93, ptr noundef nonnull @.str.94, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 1), i32 noundef 0, ptr noundef null, i32 noundef 1, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.95) #3
  %27 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.96, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.42, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.97, ptr noundef nonnull @.str.69, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 11), i32 noundef 0, ptr noundef null, i32 noundef 15, ptr noundef nonnull @.str.98, ptr noundef nonnull @.str.99, ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.100, ptr noundef nonnull @.str.101, ptr noundef nonnull @.str.102, ptr noundef nonnull @.str.103, ptr noundef nonnull @.str.103, ptr noundef nonnull @.str.104, ptr noundef nonnull @.str.105, ptr noundef nonnull @.str.106, ptr noundef nonnull @.str.107, ptr noundef nonnull @.str.108, ptr noundef nonnull @.str.109, ptr noundef nonnull @.str.110, ptr noundef nonnull @.str.111, ptr noundef nonnull @.str.112, ptr noundef nonnull @.str.113, ptr noundef nonnull @.str.114, ptr noundef nonnull @.str.115, ptr noundef nonnull @.str.116, ptr noundef nonnull @.str.117, ptr noundef nonnull @.str.118, ptr noundef nonnull @.str.119, ptr noundef nonnull @.str.120, ptr noundef nonnull @.str.121, ptr noundef nonnull @.str.122, ptr noundef nonnull @.str.123, ptr noundef nonnull @.str.124, ptr noundef nonnull @.str.125) #3
  %28 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.126, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.79, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.127, ptr noundef nonnull @.str.128, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 2), i32 noundef 0, ptr noundef null, i32 noundef 1, ptr noundef nonnull @.str.129, ptr noundef nonnull @.str.130) #3
  %29 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.131, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.132, ptr noundef nonnull @.str.77, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 18), i32 noundef 0, ptr noundef null, i32 noundef 0) #3
  %30 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.133, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.134, ptr noundef nonnull @.str.77, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 19), i32 noundef 0, ptr noundef null, i32 noundef 0) #3
  %31 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.135, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.136, ptr noundef nonnull @.str.58, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 20), i32 noundef 0, ptr noundef null, i32 noundef 0) #3
  %32 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.137, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.43, i32 noundef 202, ptr noundef nonnull @.str.138, ptr noundef nonnull @.str.58, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 21), i32 noundef 0, ptr noundef null, i32 noundef 0) #3
  %33 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.139, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.140, ptr noundef nonnull @.str.77, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 22), i32 noundef 0, ptr noundef null, i32 noundef 0) #3
  %34 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.141, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.79, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.142, ptr noundef nonnull @.str.143, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 3), i32 noundef 0, ptr noundef null, i32 noundef 1, ptr noundef nonnull @.str.144, ptr noundef nonnull @.str.145) #3
  %35 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.146, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.79, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.147, ptr noundef nonnull @.str.148, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 4), i32 noundef 0, ptr noundef null, i32 noundef 1, ptr noundef nonnull @.str.144, ptr noundef nonnull @.str.149) #3
  %36 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.150, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.79, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.151, ptr noundef nonnull @.str.152, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 5), i32 noundef 0, ptr noundef null, i32 noundef 1, ptr noundef nonnull @.str.144, ptr noundef nonnull @.str.149) #3
  %37 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.153, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.79, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.154, ptr noundef nonnull @.str.143, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 6), i32 noundef 0, ptr noundef null, i32 noundef 1, ptr noundef nonnull @.str.144, ptr noundef nonnull @.str.145) #3
  %38 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.155, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.43, i32 noundef 202, ptr noundef nonnull @.str.156, ptr noundef nonnull @.str.58, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 23), i32 noundef 0, ptr noundef null, i32 noundef 0) #3
  %39 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.157, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.79, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.158, ptr noundef nonnull @.str.159, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 7), i32 noundef 0, ptr noundef null, i32 noundef 1, ptr noundef nonnull @.str.144, ptr noundef nonnull @.str.160) #3
  %40 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.161, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.162, ptr noundef nonnull @.str.58, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 24), i32 noundef 0, ptr noundef null, i32 noundef 0) #3
  %41 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.163, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.43, i32 noundef 202, ptr noundef nonnull @.str.164, ptr noundef nonnull @.str.77, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 25), i32 noundef 0, ptr noundef null, i32 noundef 0) #3
  %42 = tail call i32 (ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, i32, ...) @CCTKi_ParameterCreate(ptr noundef nonnull @.str.165, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.42, ptr noundef nonnull @.str.43, i32 noundef 200, ptr noundef nonnull @.str.166, ptr noundef nonnull @.str.167, ptr noundef nonnull getelementptr inbounds (%struct.anon.0, ptr @molpriv_, i64 0, i32 12), i32 noundef 0, ptr noundef null, i32 noundef 4, ptr noundef nonnull @.str.168, ptr noundef nonnull @.str.169, ptr noundef nonnull @.str.167, ptr noundef nonnull @.str.170, ptr noundef nonnull @.str.171, ptr noundef nonnull @.str.172, ptr noundef nonnull @.str.173, ptr noundef nonnull @.str.174) #3
  ret i32 0
}

declare i32 @CCTKi_ParameterCreate(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, ...) local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local i32 @CCTKi_BindingsMoLParameterExtensions() local_unnamed_addr #2 {
  ret i32 0
}

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
