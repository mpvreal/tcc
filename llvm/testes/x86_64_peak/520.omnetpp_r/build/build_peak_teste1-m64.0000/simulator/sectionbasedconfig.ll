; ModuleID = 'simulator/sectionbasedconfig.cc'
source_filename = "simulator/sectionbasedconfig.cc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

module asm ".globl _ZSt21ios_base_library_initv"

%class.ExecuteOnStartup = type { ptr, ptr }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { ptr }
%union.anon = type { i64, [8 x i8] }
%struct.ConfigVarDescription = type { ptr, ptr }
%class.cGlobalRegistrationList = type { ptr, ptr }
%class.SectionBasedConfiguration = type { %class.cConfigurationEx, ptr, %"class.std::vector", %"class.std::__cxx11::basic_string", i32, %"class.std::__cxx11::basic_string", %"class.std::set", %"class.std::map", %"class.std::map.10", %"struct.SectionBasedConfiguration::Group", %"class.SectionBasedConfiguration::NullKeyValue", %"class.std::map.20", %class.CommonStringPool }
%class.cConfigurationEx = type { %class.cConfiguration }
%class.cConfiguration = type { %class.cObject }
%class.cObject = type { ptr }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue1, std::allocator<SectionBasedConfiguration::KeyValue1> >::_Vector_impl" }
%"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue1, std::allocator<SectionBasedConfiguration::KeyValue1> >::_Vector_impl" = type { %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue1, std::allocator<SectionBasedConfiguration::KeyValue1> >::_Vector_impl_data" }
%"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue1, std::allocator<SectionBasedConfiguration::KeyValue1> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::set" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>, std::_Identity<std::__cxx11::basic_string<char> >, std::less<std::__cxx11::basic_string<char> > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>, std::_Identity<std::__cxx11::basic_string<char> >, std::less<std::__cxx11::basic_string<char> > >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, ptr, ptr, ptr }
%"class.std::map" = type { %"class.std::_Rb_tree.6" }
%"class.std::_Rb_tree.6" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::KeyValue1>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::KeyValue1> >, std::less<std::__cxx11::basic_string<char> > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::KeyValue1>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::KeyValue1> >, std::less<std::__cxx11::basic_string<char> > >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"class.std::map.10" = type { %"class.std::_Rb_tree.11" }
%"class.std::_Rb_tree.11" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::Group>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::Group> >, std::less<std::__cxx11::basic_string<char> > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::Group>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::Group> >, std::less<std::__cxx11::basic_string<char> > >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.SectionBasedConfiguration::Group" = type { %"class.std::vector.15" }
%"class.std::vector.15" = type { %"struct.std::_Vector_base.16" }
%"struct.std::_Vector_base.16" = type { %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl" }
%"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl" = type { %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl_data" }
%"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.SectionBasedConfiguration::NullKeyValue" = type { %"class.cConfiguration::KeyValue", %"class.std::__cxx11::basic_string" }
%"class.cConfiguration::KeyValue" = type { ptr }
%"class.std::map.20" = type { %"class.std::_Rb_tree.21" }
%"class.std::_Rb_tree.21" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> > >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%class.CommonStringPool = type { %"class.std::set.25" }
%"class.std::set.25" = type { %"class.std::_Rb_tree.26" }
%"class.std::_Rb_tree.26" = type { %"struct.std::_Rb_tree<char *, char *, std::_Identity<char *>, CommonStringPool::strless>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<char *, char *, std::_Identity<char *>, CommonStringPool::strless>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare.30", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare.30" = type { %"struct.CommonStringPool::strless" }
%"struct.CommonStringPool::strless" = type { i8 }
%"class.SectionBasedConfiguration::KeyValue2" = type { %"class.SectionBasedConfiguration::KeyValue1", ptr, ptr, ptr }
%"class.SectionBasedConfiguration::KeyValue1" = type { %"class.cConfiguration::KeyValue", ptr, %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string" }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.std::pair" }
%"struct.std::pair" = type { %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string" }
%class.cConfigOption = type { %class.cNoncopyableOwnedObject.base, i8, i8, i32, %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string" }
%class.cNoncopyableOwnedObject.base = type { %class.cOwnedObject.base }
%class.cOwnedObject.base = type <{ %class.cNamedObject.base, [4 x i8], ptr, i32 }>
%class.cNamedObject.base = type <{ %class.cObject, ptr, i16, i16 }>
%class.PatternMatcher = type { %"class.std::vector.66", i8, %"class.std::__cxx11::basic_string" }
%"class.std::vector.66" = type { %"struct.std::_Vector_base.67" }
%"struct.std::_Vector_base.67" = type { %"struct.std::_Vector_base<PatternMatcher::Elem, std::allocator<PatternMatcher::Elem> >::_Vector_impl" }
%"struct.std::_Vector_base<PatternMatcher::Elem, std::allocator<PatternMatcher::Elem> >::_Vector_impl" = type { %"struct.std::_Vector_base<PatternMatcher::Elem, std::allocator<PatternMatcher::Elem> >::_Vector_impl_data" }
%"struct.std::_Vector_base<PatternMatcher::Elem, std::allocator<PatternMatcher::Elem> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.31" = type { %"struct.std::_Vector_base.32" }
%"struct.std::_Vector_base.32" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.36" = type { %"struct.std::_Vector_base.37" }
%"struct.std::_Vector_base.37" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.41" = type { %"struct.std::_Vector_base.42" }
%"struct.std::_Vector_base.42" = type { %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl" }
%"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl" = type { %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data" }
%"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%class.Scenario = type { ptr, ptr, %"class.std::vector.46", %"class.std::map.51" }
%"class.std::vector.46" = type { %"struct.std::_Vector_base.47" }
%"struct.std::_Vector_base.47" = type { %"struct.std::_Vector_base<ValueIterator, std::allocator<ValueIterator> >::_Vector_impl" }
%"struct.std::_Vector_base<ValueIterator, std::allocator<ValueIterator> >::_Vector_impl" = type { %"struct.std::_Vector_base<ValueIterator, std::allocator<ValueIterator> >::_Vector_impl_data" }
%"struct.std::_Vector_base<ValueIterator, std::allocator<ValueIterator> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::map.51" = type { %"class.std::_Rb_tree.52" }
%"class.std::_Rb_tree.52" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, ValueIterator *>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, ValueIterator *> >, std::less<std::__cxx11::basic_string<char> > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, ValueIterator *>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, ValueIterator *> >, std::less<std::__cxx11::basic_string<char> > >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.SectionBasedConfiguration::IterationVariable" = type { %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string" }
%"struct.std::_Rb_tree_node.98" = type { %"struct.std::_Rb_tree_node_base", %"struct.std::pair.88" }
%"struct.std::pair.88" = type { %"class.std::__cxx11::basic_string", %"class.SectionBasedConfiguration::KeyValue1" }
%"struct.std::_Rb_tree_node.94" = type { %"struct.std::_Rb_tree_node_base", %"struct.std::pair.72" }
%"struct.std::pair.72" = type { %"class.std::__cxx11::basic_string", %"struct.SectionBasedConfiguration::Group" }
%"struct.std::_Rb_tree_node.102" = type { %"struct.std::_Rb_tree_node_base", %"class.std::__cxx11::basic_string" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> > >::_Alloc_node" = type { ptr }
%class.ValueIterator = type <{ %"class.std::vector.56", i32, i32, i32, [4 x i8] }>
%"class.std::vector.56" = type { %"struct.std::_Vector_base.57" }
%"struct.std::_Vector_base.57" = type { %"struct.std::_Vector_base<ValueIterator::Item, std::allocator<ValueIterator::Item> >::_Vector_impl" }
%"struct.std::_Vector_base<ValueIterator::Item, std::allocator<ValueIterator::Item> >::_Vector_impl" = type { %"struct.std::_Vector_base<ValueIterator::Item, std::allocator<ValueIterator::Item> >::_Vector_impl_data" }
%"struct.std::_Vector_base<ValueIterator::Item, std::allocator<ValueIterator::Item> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.61" = type { %"struct.std::_Vector_base.62" }
%"struct.std::_Vector_base.62" = type { %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl" }
%"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl" = type { %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::KeyValue1>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::KeyValue1> >, std::less<std::__cxx11::basic_string<char> > >::_Alloc_node" = type { ptr }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::Group>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::Group> >, std::less<std::__cxx11::basic_string<char> > >::_Alloc_node" = type { ptr }
%class.StringTokenizer = type { ptr, ptr, %"class.std::__cxx11::basic_string" }
%class.cException = type <{ %"class.std::exception", i32, [4 x i8], %"class.std::__cxx11::basic_string", i8, [7 x i8], %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", i32, [4 x i8] }>
%"class.std::exception" = type { ptr }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> > >::_Reuse_or_alloc_node" = type { ptr, ptr, ptr }

$__clang_call_terminate = comdat any

$_ZN25SectionBasedConfiguration12NullKeyValueD2Ev = comdat any

$_ZN25SectionBasedConfiguration5GroupD2Ev = comdat any

$_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue1ESaIS1_EED2Ev = comdat any

$_ZN25SectionBasedConfiguration9KeyValue1C2EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcSA_ = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$_ZNSt6vectorIN25SectionBasedConfiguration17IterationVariableESaIS1_EED2Ev = comdat any

$_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_ = comdat any

$_ZN25SectionBasedConfiguration17IterationVariableD2Ev = comdat any

$_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration9KeyValue1ESt4lessIS5_ESaISt4pairIKS5_S7_EEEixERSB_ = comdat any

$_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration5GroupESt4lessIS5_ESaISt4pairIKS5_S7_EEEixERSB_ = comdat any

$_ZN25SectionBasedConfiguration9KeyValue1D2Ev = comdat any

$_ZNK7cObject7getNameEv = comdat any

$_ZNK7cObject11getFullNameEv = comdat any

$_ZNK7cObject8getOwnerEv = comdat any

$_ZNK7cObject13isOwnedObjectEv = comdat any

$_ZN25SectionBasedConfiguration12NullKeyValueD0Ev = comdat any

$_ZNK25SectionBasedConfiguration12NullKeyValue6getKeyEv = comdat any

$_ZNK25SectionBasedConfiguration12NullKeyValue8getValueEv = comdat any

$_ZNK25SectionBasedConfiguration12NullKeyValue16getBaseDirectoryEv = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E = comdat any

$_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration5GroupEED2Ev = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E = comdat any

$_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration9KeyValue1EED2Ev = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E = comdat any

$_ZN10cExceptionD2Ev = comdat any

$_ZN10cExceptionD0Ev = comdat any

$_ZNK10cException4whatEv = comdat any

$_ZNK10cException3dupEv = comdat any

$_ZNK10cException12getErrorCodeEv = comdat any

$_ZN10cException10setMessageEPKc = comdat any

$_ZN10cException14prependMessageEPKc = comdat any

$_ZNK10cException10hasContextEv = comdat any

$_ZNK10cException19getContextClassNameEv = comdat any

$_ZNK10cException18getContextFullPathEv = comdat any

$_ZNK10cException11getModuleIDEv = comdat any

$_ZN25SectionBasedConfiguration9KeyValue1D0Ev = comdat any

$_ZNK25SectionBasedConfiguration9KeyValue16getKeyEv = comdat any

$_ZNK25SectionBasedConfiguration9KeyValue18getValueEv = comdat any

$_ZNK25SectionBasedConfiguration9KeyValue116getBaseDirectoryEv = comdat any

$_ZN25SectionBasedConfiguration9KeyValue2D0Ev = comdat any

$_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue1ESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_ = comdat any

$_ZN25SectionBasedConfiguration9KeyValue1C2ERKS0_ = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_ = comdat any

$_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_ = comdat any

$_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERS6_S8_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_M_insert_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_EPSt18_Rb_tree_node_baseSK_RKS8_RT_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_ = comdat any

$_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS7_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIS8_EEPSt13_Rb_tree_nodeIS8_ERKT_ = comdat any

$_ZNSt6vectorIN25SectionBasedConfiguration17IterationVariableESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_ = comdat any

$_ZN25SectionBasedConfiguration17IterationVariableC2ERKS0_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN25SectionBasedConfiguration17IterationVariableES4_EET0_T_S6_S5_ = comdat any

$_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_ = comdat any

$_ZNSt6vectorIiSaIiEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EERKi = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_insert_unique_INSG_11_Alloc_nodeEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_ERKSA_RT_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeEPSt13_Rb_tree_nodeISA_ERKSA_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_insert_unique_INSG_11_Alloc_nodeEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_ERKSA_RT_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeEPSt13_Rb_tree_nodeISA_ERKSA_ = comdat any

$_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue2ESaIS1_EEC2ERKS3_ = comdat any

$_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue2ESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueERKS5_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeEPSt13_Rb_tree_nodeIS5_ERKS5_ = comdat any

$_ZTS13cRuntimeError = comdat any

$_ZTS10cException = comdat any

$_ZTI10cException = comdat any

$_ZTI13cRuntimeError = comdat any

$_ZTS20cConfigurationReader = comdat any

$_ZTI20cConfigurationReader = comdat any

$_ZTS16cConfigurationEx = comdat any

$_ZTI16cConfigurationEx = comdat any

$_ZTVN25SectionBasedConfiguration12NullKeyValueE = comdat any

$_ZTSN25SectionBasedConfiguration12NullKeyValueE = comdat any

$_ZTSN14cConfiguration8KeyValueE = comdat any

$_ZTIN14cConfiguration8KeyValueE = comdat any

$_ZTIN25SectionBasedConfiguration12NullKeyValueE = comdat any

$_ZTV10cException = comdat any

$_ZTVN25SectionBasedConfiguration9KeyValue1E = comdat any

$_ZTSN25SectionBasedConfiguration9KeyValue1E = comdat any

$_ZTIN25SectionBasedConfiguration9KeyValue1E = comdat any

$_ZTVN25SectionBasedConfiguration9KeyValue2E = comdat any

$_ZTSN25SectionBasedConfiguration9KeyValue2E = comdat any

$_ZTIN25SectionBasedConfiguration9KeyValue2E = comdat any

@CFGID_SECTIONBASEDCONFIG_CONFIGREADER_CLASS = dso_local local_unnamed_addr global ptr null, align 8
@_ZN12_GLOBAL__N_118__onstartup_obj_41E = internal global %class.ExecuteOnStartup zeroinitializer, align 8
@__dso_handle = external hidden global i8
@CFGID_DESCRIPTION = dso_local local_unnamed_addr global ptr null, align 8
@_ZN12_GLOBAL__N_118__onstartup_obj_42E = internal global %class.ExecuteOnStartup zeroinitializer, align 8
@CFGID_EXTENDS = dso_local local_unnamed_addr global ptr null, align 8
@_ZN12_GLOBAL__N_118__onstartup_obj_43E = internal global %class.ExecuteOnStartup zeroinitializer, align 8
@CFGID_CONSTRAINT = dso_local local_unnamed_addr global ptr null, align 8
@_ZN12_GLOBAL__N_118__onstartup_obj_44E = internal global %class.ExecuteOnStartup zeroinitializer, align 8
@CFGID_REPEAT = dso_local local_unnamed_addr global ptr null, align 8
@_ZN12_GLOBAL__N_118__onstartup_obj_45E = internal global %class.ExecuteOnStartup zeroinitializer, align 8
@CFGID_EXPERIMENT_LABEL = dso_local local_unnamed_addr global ptr null, align 8
@_ZN12_GLOBAL__N_118__onstartup_obj_46E = internal global %class.ExecuteOnStartup zeroinitializer, align 8
@CFGID_MEASUREMENT_LABEL = dso_local local_unnamed_addr global ptr null, align 8
@_ZN12_GLOBAL__N_118__onstartup_obj_47E = internal global %class.ExecuteOnStartup zeroinitializer, align 8
@CFGID_REPLICATION_LABEL = dso_local local_unnamed_addr global ptr null, align 8
@_ZN12_GLOBAL__N_118__onstartup_obj_48E = internal global %class.ExecuteOnStartup zeroinitializer, align 8
@CFGID_RUNNUMBER_WIDTH = dso_local local_unnamed_addr global ptr null, align 8
@_ZN12_GLOBAL__N_118__onstartup_obj_49E = internal global %class.ExecuteOnStartup zeroinitializer, align 8
@_ZN12_GLOBAL__N_118__onstartup_obj_55E = internal global %class.ExecuteOnStartup zeroinitializer, align 8
@_ZN25SectionBasedConfiguration9KeyValue111nullbasedirB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZTV25SectionBasedConfiguration = dso_local unnamed_addr constant { [66 x ptr] } { [66 x ptr] [ptr null, ptr @_ZTI25SectionBasedConfiguration, ptr @_ZN7cObject13getDescriptorEv, ptr @_ZN7cObject18ownedObjectDeletedEP12cOwnedObject, ptr @_ZN7cObject14yieldOwnershipEP12cOwnedObjectPS_, ptr @_ZN25SectionBasedConfigurationD2Ev, ptr @_ZN25SectionBasedConfigurationD0Ev, ptr @_ZNK7cObject12getClassNameEv, ptr @_ZNK7cObject7getNameEv, ptr @_ZNK7cObject11getFullNameEv, ptr @_ZNK7cObject11getFullPathB5cxx11Ev, ptr @_ZNK7cObject4infoB5cxx11Ev, ptr @_ZNK7cObject12detailedInfoB5cxx11Ev, ptr @_ZNK7cObject3dupEv, ptr @_ZN7cObject4takeEP12cOwnedObject, ptr @_ZN7cObject4dropEP12cOwnedObject, ptr @_ZN7cObject10parsimPackEP11cCommBuffer, ptr @_ZN7cObject12parsimUnpackEP11cCommBuffer, ptr @_ZNK7cObject8getOwnerEv, ptr @_ZNK7cObject13isOwnedObjectEv, ptr @_ZN7cObject12forEachChildEP8cVisitor, ptr @_ZN25SectionBasedConfiguration19substituteVariablesEPKc, ptr @_ZNK25SectionBasedConfiguration14getConfigValueEPKc, ptr @_ZNK25SectionBasedConfiguration14getConfigEntryEPKc, ptr @_ZNK25SectionBasedConfiguration23getPerObjectConfigValueEPKcS1_, ptr @_ZNK25SectionBasedConfiguration23getPerObjectConfigEntryEPKcS1_, ptr @_ZN14cConfiguration11getAsCustomEP13cConfigOptionPKc, ptr @_ZN14cConfiguration9getAsBoolEP13cConfigOptionb, ptr @_ZN14cConfiguration8getAsIntEP13cConfigOptionl, ptr @_ZN14cConfiguration11getAsDoubleEP13cConfigOptiond, ptr @_ZN14cConfiguration11getAsStringB5cxx11EP13cConfigOptionPKc, ptr @_ZN14cConfiguration13getAsFilenameB5cxx11EP13cConfigOption, ptr @_ZN14cConfiguration14getAsFilenamesB5cxx11EP13cConfigOption, ptr @_ZN14cConfiguration9getAsPathB5cxx11EP13cConfigOption, ptr @_ZN14cConfiguration11getAsCustomEPKcP13cConfigOptionS1_, ptr @_ZN14cConfiguration9getAsBoolEPKcP13cConfigOptionb, ptr @_ZN14cConfiguration8getAsIntEPKcP13cConfigOptionl, ptr @_ZN14cConfiguration11getAsDoubleEPKcP13cConfigOptiond, ptr @_ZN14cConfiguration11getAsStringB5cxx11EPKcP13cConfigOptionS1_, ptr @_ZN14cConfiguration13getAsFilenameB5cxx11EPKcP13cConfigOption, ptr @_ZN14cConfiguration14getAsFilenamesB5cxx11EPKcP13cConfigOption, ptr @_ZN14cConfiguration9getAsPathB5cxx11EPKcP13cConfigOption, ptr @_ZN25SectionBasedConfiguration14initializeFromEP14cConfiguration, ptr @_ZNK25SectionBasedConfiguration11getFileNameEv, ptr @_ZNK25SectionBasedConfiguration8validateEPKc, ptr @_ZN25SectionBasedConfiguration14getConfigNamesB5cxx11Ev, ptr @_ZN25SectionBasedConfiguration14activateConfigEPKci, ptr @_ZNK25SectionBasedConfiguration20getConfigDescriptionB5cxx11EPKc, ptr @_ZNK25SectionBasedConfiguration13getBaseConfigB5cxx11EPKc, ptr @_ZNK25SectionBasedConfiguration18getNumRunsInConfigEPKc, ptr @_ZNK25SectionBasedConfiguration12unrollConfigB5cxx11EPKcb, ptr @_ZNK25SectionBasedConfiguration19getActiveConfigNameEv, ptr @_ZNK25SectionBasedConfiguration18getActiveRunNumberEv, ptr @_ZNK25SectionBasedConfiguration11getVariableEPKc, ptr @_ZNK25SectionBasedConfiguration25getIterationVariableNamesEv, ptr @_ZNK25SectionBasedConfiguration26getPredefinedVariableNamesEv, ptr @_ZNK25SectionBasedConfiguration22getVariableDescriptionEPKc, ptr @_ZNK25SectionBasedConfiguration4dumpEv, ptr @_ZNK25SectionBasedConfiguration21getMatchingConfigKeysEPKc, ptr @_ZNK25SectionBasedConfiguration17getParameterValueEPKcS1_b, ptr @_ZNK25SectionBasedConfiguration17getParameterEntryEPKcS1_b, ptr @_ZNK25SectionBasedConfiguration25getParameterKeyValuePairsEv, ptr @_ZNK25SectionBasedConfiguration30getMatchingPerObjectConfigKeysEPKcS1_, ptr @_ZNK25SectionBasedConfiguration37getMatchingPerObjectConfigKeySuffixesEPKcS1_, ptr @_ZN25SectionBasedConfiguration22setConfigurationReaderEP20cConfigurationReader, ptr @_ZN25SectionBasedConfiguration27setCommandLineConfigOptionsERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_St4lessIS6_ESaISt4pairIKS6_S6_EEE] }, align 8
@.str = private unnamed_addr constant [47 x i8] c"Unknown command-line configuration option --%s\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global ptr
@_ZTS13cRuntimeError = linkonce_odr dso_local constant [16 x i8] c"13cRuntimeError\00", comdat, align 1
@_ZTS10cException = linkonce_odr dso_local constant [13 x i8] c"10cException\00", comdat, align 1
@_ZTISt9exception = external constant ptr
@_ZTI10cException = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTS10cException, ptr @_ZTISt9exception }, comdat, align 8
@_ZTI13cRuntimeError = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTS13cRuntimeError, ptr @_ZTI10cException }, comdat, align 8
@.str.11 = private unnamed_addr constant [76 x i8] c"Wrong command-line configuration option --%s: %s is not a per-object option\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"**.\00", align 1
@.str.13 = private unnamed_addr constant [57 x i8] c"Missing value for command-line configuration option --%s\00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.15 = private unnamed_addr constant [87 x i8] c"SectionBasedConfiguration: no configuration reader class specified (missing %s option)\00", align 1
@_ZTI7cObject = external constant ptr
@_ZTVN10__cxxabiv117__class_type_infoE = external global ptr
@_ZTS20cConfigurationReader = linkonce_odr dso_local constant [23 x i8] c"20cConfigurationReader\00", comdat, align 1
@_ZTI20cConfigurationReader = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTS20cConfigurationReader }, comdat, align 8
@.str.16 = private unnamed_addr constant [55 x i8] c"Class \22%s\22 is not subclassed from cConfigurationReader\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"General\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"Config \00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"No such config: %s\00", align 1
@.str.20 = private unnamed_addr constant [28 x i8] c"Empty config name specified\00", align 1
@.str.21 = private unnamed_addr constant [76 x i8] c"Run number %d is out of range for configuration `%s': it contains %d run(s)\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"Scenario generator: %s\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"inifile\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"configname\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"%0*d\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"runnumber\00", align 1
@CFGID_NETWORK = external local_unnamed_addr global ptr, align 8
@.str.27 = private unnamed_addr constant [8 x i8] c"network\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"speccpu-pid\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"processid\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c"speccpu-datetime\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"datetime\00", align 1
@.str.32 = private unnamed_addr constant [14 x i8] c"speccpu-runid\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"runid\00", align 1
@CFGID_RESULT_DIR = external local_unnamed_addr global ptr, align 8
@.str.34 = private unnamed_addr constant [10 x i8] c"resultdir\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.37 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"repetition\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c"iterationvars\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"iterationvars2\00", align 1
@CFGID_SEED_SET = external local_unnamed_addr global ptr, align 8
@.str.43 = private unnamed_addr constant [8 x i8] c"seedset\00", align 1
@.str.44 = private unnamed_addr constant [11 x i8] c"experiment\00", align 1
@.str.45 = private unnamed_addr constant [12 x i8] c"measurement\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"replication\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"\09# \00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.49 = private unnamed_addr constant [3 x i8] c"${\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.52 = private unnamed_addr constant [32 x i8] c"Scenario generator: %s at %s=%s\00", align 1
@.str.53 = private unnamed_addr constant [82 x i8] c"Scenario generator: redefinition of iteration variable ${%s} in the configuration\00", align 1
@.str.54 = private unnamed_addr constant [73 x i8] c"Scenario generator: ${%s} is a predefined variable and cannot be changed\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"%d-%d-%d\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"0..%d\00", align 1
@.str.57 = private unnamed_addr constant [21 x i8] c"missing '}' for '${'\00", align 1
@.str.58 = private unnamed_addr constant [30 x i8] c"missing '=' after '${varname'\00", align 1
@.str.59 = private unnamed_addr constant [63 x i8] c"the ${var=...} and ${...!var} syntaxes cannot be used together\00", align 1
@.str.60 = private unnamed_addr constant [24 x i8] c"no such variable: ${%s}\00", align 1
@.str.61 = private unnamed_addr constant [56 x i8] c"parallel iterator ${...!%s} does not have enough values\00", align 1
@_ZL21configVarDescriptions = internal global [16 x %struct.ConfigVarDescription] [%struct.ConfigVarDescription { ptr @.str.33, ptr @.str.150 }, %struct.ConfigVarDescription { ptr @.str.23, ptr @.str.151 }, %struct.ConfigVarDescription { ptr @.str.24, ptr @.str.152 }, %struct.ConfigVarDescription { ptr @.str.26, ptr @.str.153 }, %struct.ConfigVarDescription { ptr @.str.27, ptr @.str.154 }, %struct.ConfigVarDescription { ptr @.str.44, ptr @.str.155 }, %struct.ConfigVarDescription { ptr @.str.45, ptr @.str.156 }, %struct.ConfigVarDescription { ptr @.str.46, ptr @.str.157 }, %struct.ConfigVarDescription { ptr @.str.29, ptr @.str.158 }, %struct.ConfigVarDescription { ptr @.str.31, ptr @.str.159 }, %struct.ConfigVarDescription { ptr @.str.34, ptr @.str.160 }, %struct.ConfigVarDescription { ptr @.str.39, ptr @.str.161 }, %struct.ConfigVarDescription { ptr @.str.43, ptr @.str.162 }, %struct.ConfigVarDescription { ptr @.str.41, ptr @.str.163 }, %struct.ConfigVarDescription { ptr @.str.42, ptr @.str.164 }, %struct.ConfigVarDescription zeroinitializer], align 16
@.str.62 = private unnamed_addr constant [32 x i8] c"User-defined iteration variable\00", align 1
@.str.63 = private unnamed_addr constant [50 x i8] c"Cycle detected in section fallback chain at: [%s]\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c"**\00", align 1
@.str.65 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.66 = private unnamed_addr constant [20 x i8] c"no such section: %s\00", align 1
@.str.67 = private unnamed_addr constant [11 x i8] c"Parameters\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"Cmdenv\00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c"Tkenv\00", align 1
@.str.70 = private unnamed_addr constant [11 x i8] c"OutVectors\00", align 1
@.str.71 = private unnamed_addr constant [13 x i8] c"Partitioning\00", align 1
@.str.72 = private unnamed_addr constant [15 x i8] c"DisplayStrings\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c"autoflush\00", align 1
@.str.74 = private unnamed_addr constant [21 x i8] c"event-banner-details\00", align 1
@.str.75 = private unnamed_addr constant [14 x i8] c"event-banners\00", align 1
@.str.76 = private unnamed_addr constant [13 x i8] c"express-mode\00", align 1
@.str.77 = private unnamed_addr constant [14 x i8] c"message-trace\00", align 1
@.str.78 = private unnamed_addr constant [16 x i8] c"module-messages\00", align 1
@.str.79 = private unnamed_addr constant [12 x i8] c"output-file\00", align 1
@.str.80 = private unnamed_addr constant [20 x i8] c"performance-display\00", align 1
@.str.81 = private unnamed_addr constant [16 x i8] c"runs-to-execute\00", align 1
@.str.82 = private unnamed_addr constant [17 x i8] c"status-frequency\00", align 1
@.str.83 = private unnamed_addr constant [17 x i8] c"anim-methodcalls\00", align 1
@.str.84 = private unnamed_addr constant [18 x i8] c"animation-enabled\00", align 1
@.str.85 = private unnamed_addr constant [24 x i8] c"animation-msgclassnames\00", align 1
@.str.86 = private unnamed_addr constant [20 x i8] c"animation-msgcolors\00", align 1
@.str.87 = private unnamed_addr constant [19 x i8] c"animation-msgnames\00", align 1
@.str.88 = private unnamed_addr constant [16 x i8] c"animation-speed\00", align 1
@.str.89 = private unnamed_addr constant [12 x i8] c"default-run\00", align 1
@.str.90 = private unnamed_addr constant [23 x i8] c"expressmode-autoupdate\00", align 1
@.str.91 = private unnamed_addr constant [11 x i8] c"image-path\00", align 1
@.str.92 = private unnamed_addr constant [18 x i8] c"methodcalls-delay\00", align 1
@.str.93 = private unnamed_addr constant [19 x i8] c"next-event-markers\00", align 1
@.str.94 = private unnamed_addr constant [13 x i8] c"penguin-mode\00", align 1
@.str.95 = private unnamed_addr constant [12 x i8] c"plugin-path\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"print-banners\00", align 1
@.str.97 = private unnamed_addr constant [18 x i8] c"senddirect-arrows\00", align 1
@.str.98 = private unnamed_addr constant [13 x i8] c"show-bubbles\00", align 1
@.str.99 = private unnamed_addr constant [15 x i8] c"show-layouting\00", align 1
@.str.100 = private unnamed_addr constant [15 x i8] c"slowexec-delay\00", align 1
@.str.101 = private unnamed_addr constant [20 x i8] c"update-freq-express\00", align 1
@.str.102 = private unnamed_addr constant [17 x i8] c"update-freq-fast\00", align 1
@.str.103 = private unnamed_addr constant [15 x i8] c"use-mainwindow\00", align 1
@.str.104 = private unnamed_addr constant [17 x i8] c"use-new-layouter\00", align 1
@.str.105 = private unnamed_addr constant [76 x i8] c"Obsolete section name [%s] found, please convert the ini file to 4.x format\00", align 1
@.str.106 = private unnamed_addr constant [80 x i8] c"Obsolete configuration key %s= found, please convert the ini file to 4.x format\00", align 1
@.str.107 = private unnamed_addr constant [66 x i8] c"Invalid section name [%s], should be [General] or [Config <name>]\00", align 1
@.str.108 = private unnamed_addr constant [43 x i8] c"Invalid section name [%s]: too many spaces\00", align 1
@.str.109 = private unnamed_addr constant [78 x i8] c"Invalid section name [%s]: config name must begin with a letter or underscore\00", align 1
@.str.110 = private unnamed_addr constant [4 x i8] c"-_@\00", align 1
@.str.111 = private unnamed_addr constant [59 x i8] c"Invalid section name [%s], contains illegal character '%c'\00", align 1
@.str.112 = private unnamed_addr constant [35 x i8] c"Configuration name '%s' not unique\00", align 1
@.str.113 = private unnamed_addr constant [30 x i8] c"Unknown configuration key: %s\00", align 1
@.str.114 = private unnamed_addr constant [64 x i8] c"Configuration key %s should be specified per object, try **.%s=\00", align 1
@.str.115 = private unnamed_addr constant [61 x i8] c"Configuration key %s may only occur in the [General] section\00", align 1
@.str.116 = private unnamed_addr constant [51 x i8] c"The [General] section cannot extend other sections\00", align 1
@.str.117 = private unnamed_addr constant [48 x i8] c"Unknown per-object configuration key `%s' in %s\00", align 1
@configOptions = external global %class.cGlobalRegistrationList, align 8
@.str.118 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.119 = private unnamed_addr constant [5 x i8] c"{..}\00", align 1
@.str.120 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.121 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.123 = private unnamed_addr constant [11 x i8] c"  %s = %s\0A\00", align 1
@.str.124 = private unnamed_addr constant [11 x i8] c"Group %s:\0A\00", align 1
@_ZTS25SectionBasedConfiguration = dso_local constant [28 x i8] c"25SectionBasedConfiguration\00", align 1
@_ZTS16cConfigurationEx = linkonce_odr dso_local constant [19 x i8] c"16cConfigurationEx\00", comdat, align 1
@_ZTI14cConfiguration = external constant ptr
@_ZTI16cConfigurationEx = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTS16cConfigurationEx, ptr @_ZTI14cConfiguration }, comdat, align 8
@_ZTI25SectionBasedConfiguration = dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTS25SectionBasedConfiguration, ptr @_ZTI16cConfigurationEx }, align 8
@.str.126 = private unnamed_addr constant [38 x i8] c"sectionbasedconfig-configreader-class\00", align 1
@.str.127 = private unnamed_addr constant [143 x i8] c"When configuration-class=SectionBasedConfiguration: selects the configuration reader C++ class, which must subclass from cConfigurationReader.\00", align 1
@.str.128 = private unnamed_addr constant [12 x i8] c"description\00", align 1
@.str.129 = private unnamed_addr constant [113 x i8] c"Descriptive name for the given simulation configuration. Descriptions get displayed in the run selection dialog.\00", align 1
@.str.130 = private unnamed_addr constant [8 x i8] c"extends\00", align 1
@.str.131 = private unnamed_addr constant [193 x i8] c"Name of the configuration this section is based on. Entries from that section will be inherited and can be overridden. In other words, configuration lookups will fall back to the base section.\00", align 1
@.str.132 = private unnamed_addr constant [11 x i8] c"constraint\00", align 1
@.str.133 = private unnamed_addr constant [137 x i8] c"For scenarios. Contains an expression that iteration variables (${} syntax) must satisfy for that simulation to run. Example: $i < $j+1.\00", align 1
@.str.134 = private unnamed_addr constant [7 x i8] c"repeat\00", align 1
@.str.135 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.136 = private unnamed_addr constant [268 x i8] c"For scenarios. Specifies how many replications should be done with the same parameters (iteration variables). This is typically used to perform multiple runs with different random number seeds. The loop variable is available as ${repetition}. See also: seed-set= key.\00", align 1
@.str.137 = private unnamed_addr constant [17 x i8] c"experiment-label\00", align 1
@.str.138 = private unnamed_addr constant [14 x i8] c"${configname}\00", align 1
@.str.139 = private unnamed_addr constant [193 x i8] c"Identifies the simulation experiment (which consists of several, potentially repeated measurements). This string gets recorded into result files, and may be referred to during result analysis.\00", align 1
@.str.140 = private unnamed_addr constant [18 x i8] c"measurement-label\00", align 1
@.str.141 = private unnamed_addr constant [17 x i8] c"${iterationvars}\00", align 1
@.str.142 = private unnamed_addr constant [142 x i8] c"Identifies the measurement within the experiment. This string gets recorded into result files, and may be referred to during result analysis.\00", align 1
@.str.143 = private unnamed_addr constant [18 x i8] c"replication-label\00", align 1
@.str.144 = private unnamed_addr constant [15 x i8] c"#${repetition}\00", align 1
@.str.145 = private unnamed_addr constant [182 x i8] c"Identifies one replication of a measurement (see repeat= and measurement-label= as well). This string gets recorded into result files, and may be referred to during result analysis.\00", align 1
@.str.146 = private unnamed_addr constant [16 x i8] c"runnumber-width\00", align 1
@.str.147 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.148 = private unnamed_addr constant [114 x i8] c"Setting a nonzero value will cause the $runnumber variable to get padded with leading zeroes to the given length.\00", align 1
@classes = external global %class.cGlobalRegistrationList, align 8
@_ZTVN25SectionBasedConfiguration12NullKeyValueE = linkonce_odr dso_local unnamed_addr constant { [7 x ptr] } { [7 x ptr] [ptr null, ptr @_ZTIN25SectionBasedConfiguration12NullKeyValueE, ptr @_ZN25SectionBasedConfiguration12NullKeyValueD2Ev, ptr @_ZN25SectionBasedConfiguration12NullKeyValueD0Ev, ptr @_ZNK25SectionBasedConfiguration12NullKeyValue6getKeyEv, ptr @_ZNK25SectionBasedConfiguration12NullKeyValue8getValueEv, ptr @_ZNK25SectionBasedConfiguration12NullKeyValue16getBaseDirectoryEv] }, comdat, align 8
@_ZTSN25SectionBasedConfiguration12NullKeyValueE = linkonce_odr dso_local constant [44 x i8] c"N25SectionBasedConfiguration12NullKeyValueE\00", comdat, align 1
@_ZTSN14cConfiguration8KeyValueE = linkonce_odr dso_local constant [28 x i8] c"N14cConfiguration8KeyValueE\00", comdat, align 1
@_ZTIN14cConfiguration8KeyValueE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN14cConfiguration8KeyValueE }, comdat, align 8
@_ZTIN25SectionBasedConfiguration12NullKeyValueE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN25SectionBasedConfiguration12NullKeyValueE, ptr @_ZTIN14cConfiguration8KeyValueE }, comdat, align 8
@_ZTV10cException = linkonce_odr dso_local unnamed_addr constant { [13 x ptr] } { [13 x ptr] [ptr null, ptr @_ZTI10cException, ptr @_ZN10cExceptionD2Ev, ptr @_ZN10cExceptionD0Ev, ptr @_ZNK10cException4whatEv, ptr @_ZNK10cException3dupEv, ptr @_ZNK10cException12getErrorCodeEv, ptr @_ZN10cException10setMessageEPKc, ptr @_ZN10cException14prependMessageEPKc, ptr @_ZNK10cException10hasContextEv, ptr @_ZNK10cException19getContextClassNameEv, ptr @_ZNK10cException18getContextFullPathEv, ptr @_ZNK10cException11getModuleIDEv] }, comdat, align 8
@.str.149 = private unnamed_addr constant [3 x i8] c": \00", align 1
@_ZTVN25SectionBasedConfiguration9KeyValue1E = linkonce_odr dso_local unnamed_addr constant { [7 x ptr] } { [7 x ptr] [ptr null, ptr @_ZTIN25SectionBasedConfiguration9KeyValue1E, ptr @_ZN25SectionBasedConfiguration9KeyValue1D2Ev, ptr @_ZN25SectionBasedConfiguration9KeyValue1D0Ev, ptr @_ZNK25SectionBasedConfiguration9KeyValue16getKeyEv, ptr @_ZNK25SectionBasedConfiguration9KeyValue18getValueEv, ptr @_ZNK25SectionBasedConfiguration9KeyValue116getBaseDirectoryEv] }, comdat, align 8
@_ZTSN25SectionBasedConfiguration9KeyValue1E = linkonce_odr dso_local constant [40 x i8] c"N25SectionBasedConfiguration9KeyValue1E\00", comdat, align 1
@_ZTIN25SectionBasedConfiguration9KeyValue1E = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN25SectionBasedConfiguration9KeyValue1E, ptr @_ZTIN14cConfiguration8KeyValueE }, comdat, align 8
@.str.150 = private unnamed_addr constant [131 x i8] c"A reasonably globally unique identifier for the run, produced by concatenating the configuration name, run number, date/time, etc.\00", align 1
@.str.151 = private unnamed_addr constant [30 x i8] c"Name of the (primary) inifile\00", align 1
@.str.152 = private unnamed_addr constant [33 x i8] c"Name of the active configuration\00", align 1
@.str.153 = private unnamed_addr constant [79 x i8] c"Sequence number of the current run within all runs in the active configuration\00", align 1
@.str.154 = private unnamed_addr constant [44 x i8] c"Value of the \22network\22 configuration option\00", align 1
@.str.155 = private unnamed_addr constant [53 x i8] c"Value of the \22experiment-label\22 configuration option\00", align 1
@.str.156 = private unnamed_addr constant [54 x i8] c"Value of the \22measurement-label\22 configuration option\00", align 1
@.str.157 = private unnamed_addr constant [54 x i8] c"Value of the \22replication-label\22 configuration option\00", align 1
@.str.158 = private unnamed_addr constant [30 x i8] c"PID of the simulation process\00", align 1
@.str.159 = private unnamed_addr constant [45 x i8] c"Date and time the simulation run was started\00", align 1
@.str.160 = private unnamed_addr constant [47 x i8] c"Value of the \22result-dir\22 configuration option\00", align 1
@.str.161 = private unnamed_addr constant [90 x i8] c"The iteration number in 0..N-1, where N is the value of the \22repeat\22 configuration option\00", align 1
@.str.162 = private unnamed_addr constant [45 x i8] c"Value of the \22seed-set\22 configuration option\00", align 1
@.str.163 = private unnamed_addr constant [73 x i8] c"Concatenation of all user-defined iteration variables in name=value form\00", align 1
@.str.164 = private unnamed_addr constant [93 x i8] c"Concatenation of all user-defined iteration variables in name=value form, plus ${repetition}\00", align 1
@_ZTVN25SectionBasedConfiguration9KeyValue2E = linkonce_odr dso_local unnamed_addr constant { [7 x ptr] } { [7 x ptr] [ptr null, ptr @_ZTIN25SectionBasedConfiguration9KeyValue2E, ptr @_ZN25SectionBasedConfiguration9KeyValue1D2Ev, ptr @_ZN25SectionBasedConfiguration9KeyValue2D0Ev, ptr @_ZNK25SectionBasedConfiguration9KeyValue16getKeyEv, ptr @_ZNK25SectionBasedConfiguration9KeyValue18getValueEv, ptr @_ZNK25SectionBasedConfiguration9KeyValue116getBaseDirectoryEv] }, comdat, align 8
@_ZTSN25SectionBasedConfiguration9KeyValue2E = linkonce_odr dso_local constant [40 x i8] c"N25SectionBasedConfiguration9KeyValue2E\00", comdat, align 1
@_ZTIN25SectionBasedConfiguration9KeyValue2E = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN25SectionBasedConfiguration9KeyValue2E, ptr @_ZTIN25SectionBasedConfiguration9KeyValue1E }, comdat, align 8
@.str.165 = private unnamed_addr constant [50 x i8] c"basic_string: construction from null is not valid\00", align 1
@.str.166 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@.str.167 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@.str.168 = private unnamed_addr constant [22 x i8] c"basic_string::replace\00", align 1
@.str.169 = private unnamed_addr constant [55 x i8] c"%s: __pos (which is %zu) > this->size() (which is %zu)\00", align 1
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_sectionbasedconfig.cc, ptr null }]
@str = private unnamed_addr constant [8 x i8] c"Config:\00", align 1
@str.170 = private unnamed_addr constant [16 x i8] c"Wildcard Group:\00", align 1

@_ZN25SectionBasedConfigurationC1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN25SectionBasedConfigurationC2Ev
@_ZN25SectionBasedConfigurationD1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN25SectionBasedConfigurationD2Ev

; Function Attrs: sspstrong uwtable
define internal void @_ZN12_GLOBAL__N_119__onstartup_func_41Ev() #0 personality ptr @__gxx_personality_v0 {
  %1 = tail call noundef ptr @_ZN23cGlobalRegistrationList11getInstanceEv(ptr noundef nonnull align 8 dereferenceable(16) @configOptions)
  %2 = tail call noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #25
  invoke void @_ZN13cConfigOptionC1EPKcbbNS_4TypeES1_S1_S1_(ptr noundef nonnull align 8 dereferenceable(144) %2, ptr noundef nonnull @.str.126, i1 noundef zeroext false, i1 noundef zeroext true, i32 noundef 3, ptr noundef null, ptr noundef nonnull @.str.14, ptr noundef nonnull @.str.127)
          to label %3 unwind label %7

3:                                                ; preds = %0
  store ptr %2, ptr @CFGID_SECTIONBASEDCONFIG_CONFIGREADER_CLASS, align 8, !tbaa !5
  %4 = load ptr, ptr %1, align 8, !tbaa !9
  %5 = getelementptr inbounds ptr, ptr %4, i64 22
  %6 = load ptr, ptr %5, align 8
  tail call void %6(ptr noundef nonnull align 8 dereferenceable(144) %1, ptr noundef nonnull %2)
  ret void

7:                                                ; preds = %0
  %8 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %2) #26
  resume { ptr, i32 } %8
}

declare void @_ZN16ExecuteOnStartupC1EPFvvE(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef) unnamed_addr #1

declare void @_ZN16ExecuteOnStartupD1Ev(ptr noundef nonnull align 8 dereferenceable(16)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #2

; Function Attrs: sspstrong uwtable
define internal void @_ZN12_GLOBAL__N_119__onstartup_func_42Ev() #0 personality ptr @__gxx_personality_v0 {
  %1 = tail call noundef ptr @_ZN23cGlobalRegistrationList11getInstanceEv(ptr noundef nonnull align 8 dereferenceable(16) @configOptions)
  %2 = tail call noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #25
  invoke void @_ZN13cConfigOptionC1EPKcbbNS_4TypeES1_S1_S1_(ptr noundef nonnull align 8 dereferenceable(144) %2, ptr noundef nonnull @.str.128, i1 noundef zeroext false, i1 noundef zeroext false, i32 noundef 3, ptr noundef null, ptr noundef null, ptr noundef nonnull @.str.129)
          to label %3 unwind label %7

3:                                                ; preds = %0
  store ptr %2, ptr @CFGID_DESCRIPTION, align 8, !tbaa !5
  %4 = load ptr, ptr %1, align 8, !tbaa !9
  %5 = getelementptr inbounds ptr, ptr %4, i64 22
  %6 = load ptr, ptr %5, align 8
  tail call void %6(ptr noundef nonnull align 8 dereferenceable(144) %1, ptr noundef nonnull %2)
  ret void

7:                                                ; preds = %0
  %8 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %2) #26
  resume { ptr, i32 } %8
}

; Function Attrs: sspstrong uwtable
define internal void @_ZN12_GLOBAL__N_119__onstartup_func_43Ev() #0 personality ptr @__gxx_personality_v0 {
  %1 = tail call noundef ptr @_ZN23cGlobalRegistrationList11getInstanceEv(ptr noundef nonnull align 8 dereferenceable(16) @configOptions)
  %2 = tail call noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #25
  invoke void @_ZN13cConfigOptionC1EPKcbbNS_4TypeES1_S1_S1_(ptr noundef nonnull align 8 dereferenceable(144) %2, ptr noundef nonnull @.str.130, i1 noundef zeroext false, i1 noundef zeroext false, i32 noundef 3, ptr noundef null, ptr noundef null, ptr noundef nonnull @.str.131)
          to label %3 unwind label %7

3:                                                ; preds = %0
  store ptr %2, ptr @CFGID_EXTENDS, align 8, !tbaa !5
  %4 = load ptr, ptr %1, align 8, !tbaa !9
  %5 = getelementptr inbounds ptr, ptr %4, i64 22
  %6 = load ptr, ptr %5, align 8
  tail call void %6(ptr noundef nonnull align 8 dereferenceable(144) %1, ptr noundef nonnull %2)
  ret void

7:                                                ; preds = %0
  %8 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %2) #26
  resume { ptr, i32 } %8
}

; Function Attrs: sspstrong uwtable
define internal void @_ZN12_GLOBAL__N_119__onstartup_func_44Ev() #0 personality ptr @__gxx_personality_v0 {
  %1 = tail call noundef ptr @_ZN23cGlobalRegistrationList11getInstanceEv(ptr noundef nonnull align 8 dereferenceable(16) @configOptions)
  %2 = tail call noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #25
  invoke void @_ZN13cConfigOptionC1EPKcbbNS_4TypeES1_S1_S1_(ptr noundef nonnull align 8 dereferenceable(144) %2, ptr noundef nonnull @.str.132, i1 noundef zeroext false, i1 noundef zeroext false, i32 noundef 3, ptr noundef null, ptr noundef null, ptr noundef nonnull @.str.133)
          to label %3 unwind label %7

3:                                                ; preds = %0
  store ptr %2, ptr @CFGID_CONSTRAINT, align 8, !tbaa !5
  %4 = load ptr, ptr %1, align 8, !tbaa !9
  %5 = getelementptr inbounds ptr, ptr %4, i64 22
  %6 = load ptr, ptr %5, align 8
  tail call void %6(ptr noundef nonnull align 8 dereferenceable(144) %1, ptr noundef nonnull %2)
  ret void

7:                                                ; preds = %0
  %8 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %2) #26
  resume { ptr, i32 } %8
}

; Function Attrs: sspstrong uwtable
define internal void @_ZN12_GLOBAL__N_119__onstartup_func_45Ev() #0 personality ptr @__gxx_personality_v0 {
  %1 = tail call noundef ptr @_ZN23cGlobalRegistrationList11getInstanceEv(ptr noundef nonnull align 8 dereferenceable(16) @configOptions)
  %2 = tail call noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #25
  invoke void @_ZN13cConfigOptionC1EPKcbbNS_4TypeES1_S1_S1_(ptr noundef nonnull align 8 dereferenceable(144) %2, ptr noundef nonnull @.str.134, i1 noundef zeroext false, i1 noundef zeroext false, i32 noundef 1, ptr noundef null, ptr noundef nonnull @.str.135, ptr noundef nonnull @.str.136)
          to label %3 unwind label %7

3:                                                ; preds = %0
  store ptr %2, ptr @CFGID_REPEAT, align 8, !tbaa !5
  %4 = load ptr, ptr %1, align 8, !tbaa !9
  %5 = getelementptr inbounds ptr, ptr %4, i64 22
  %6 = load ptr, ptr %5, align 8
  tail call void %6(ptr noundef nonnull align 8 dereferenceable(144) %1, ptr noundef nonnull %2)
  ret void

7:                                                ; preds = %0
  %8 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %2) #26
  resume { ptr, i32 } %8
}

; Function Attrs: sspstrong uwtable
define internal void @_ZN12_GLOBAL__N_119__onstartup_func_46Ev() #0 personality ptr @__gxx_personality_v0 {
  %1 = tail call noundef ptr @_ZN23cGlobalRegistrationList11getInstanceEv(ptr noundef nonnull align 8 dereferenceable(16) @configOptions)
  %2 = tail call noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #25
  invoke void @_ZN13cConfigOptionC1EPKcbbNS_4TypeES1_S1_S1_(ptr noundef nonnull align 8 dereferenceable(144) %2, ptr noundef nonnull @.str.137, i1 noundef zeroext false, i1 noundef zeroext false, i32 noundef 3, ptr noundef null, ptr noundef nonnull @.str.138, ptr noundef nonnull @.str.139)
          to label %3 unwind label %7

3:                                                ; preds = %0
  store ptr %2, ptr @CFGID_EXPERIMENT_LABEL, align 8, !tbaa !5
  %4 = load ptr, ptr %1, align 8, !tbaa !9
  %5 = getelementptr inbounds ptr, ptr %4, i64 22
  %6 = load ptr, ptr %5, align 8
  tail call void %6(ptr noundef nonnull align 8 dereferenceable(144) %1, ptr noundef nonnull %2)
  ret void

7:                                                ; preds = %0
  %8 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %2) #26
  resume { ptr, i32 } %8
}

; Function Attrs: sspstrong uwtable
define internal void @_ZN12_GLOBAL__N_119__onstartup_func_47Ev() #0 personality ptr @__gxx_personality_v0 {
  %1 = tail call noundef ptr @_ZN23cGlobalRegistrationList11getInstanceEv(ptr noundef nonnull align 8 dereferenceable(16) @configOptions)
  %2 = tail call noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #25
  invoke void @_ZN13cConfigOptionC1EPKcbbNS_4TypeES1_S1_S1_(ptr noundef nonnull align 8 dereferenceable(144) %2, ptr noundef nonnull @.str.140, i1 noundef zeroext false, i1 noundef zeroext false, i32 noundef 3, ptr noundef null, ptr noundef nonnull @.str.141, ptr noundef nonnull @.str.142)
          to label %3 unwind label %7

3:                                                ; preds = %0
  store ptr %2, ptr @CFGID_MEASUREMENT_LABEL, align 8, !tbaa !5
  %4 = load ptr, ptr %1, align 8, !tbaa !9
  %5 = getelementptr inbounds ptr, ptr %4, i64 22
  %6 = load ptr, ptr %5, align 8
  tail call void %6(ptr noundef nonnull align 8 dereferenceable(144) %1, ptr noundef nonnull %2)
  ret void

7:                                                ; preds = %0
  %8 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %2) #26
  resume { ptr, i32 } %8
}

; Function Attrs: sspstrong uwtable
define internal void @_ZN12_GLOBAL__N_119__onstartup_func_48Ev() #0 personality ptr @__gxx_personality_v0 {
  %1 = tail call noundef ptr @_ZN23cGlobalRegistrationList11getInstanceEv(ptr noundef nonnull align 8 dereferenceable(16) @configOptions)
  %2 = tail call noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #25
  invoke void @_ZN13cConfigOptionC1EPKcbbNS_4TypeES1_S1_S1_(ptr noundef nonnull align 8 dereferenceable(144) %2, ptr noundef nonnull @.str.143, i1 noundef zeroext false, i1 noundef zeroext false, i32 noundef 3, ptr noundef null, ptr noundef nonnull @.str.144, ptr noundef nonnull @.str.145)
          to label %3 unwind label %7

3:                                                ; preds = %0
  store ptr %2, ptr @CFGID_REPLICATION_LABEL, align 8, !tbaa !5
  %4 = load ptr, ptr %1, align 8, !tbaa !9
  %5 = getelementptr inbounds ptr, ptr %4, i64 22
  %6 = load ptr, ptr %5, align 8
  tail call void %6(ptr noundef nonnull align 8 dereferenceable(144) %1, ptr noundef nonnull %2)
  ret void

7:                                                ; preds = %0
  %8 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %2) #26
  resume { ptr, i32 } %8
}

; Function Attrs: sspstrong uwtable
define internal void @_ZN12_GLOBAL__N_119__onstartup_func_49Ev() #0 personality ptr @__gxx_personality_v0 {
  %1 = tail call noundef ptr @_ZN23cGlobalRegistrationList11getInstanceEv(ptr noundef nonnull align 8 dereferenceable(16) @configOptions)
  %2 = tail call noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #25
  invoke void @_ZN13cConfigOptionC1EPKcbbNS_4TypeES1_S1_S1_(ptr noundef nonnull align 8 dereferenceable(144) %2, ptr noundef nonnull @.str.146, i1 noundef zeroext false, i1 noundef zeroext false, i32 noundef 1, ptr noundef null, ptr noundef nonnull @.str.147, ptr noundef nonnull @.str.148)
          to label %3 unwind label %7

3:                                                ; preds = %0
  store ptr %2, ptr @CFGID_RUNNUMBER_WIDTH, align 8, !tbaa !5
  %4 = load ptr, ptr %1, align 8, !tbaa !9
  %5 = getelementptr inbounds ptr, ptr %4, i64 22
  %6 = load ptr, ptr %5, align 8
  tail call void %6(ptr noundef nonnull align 8 dereferenceable(144) %1, ptr noundef nonnull %2)
  ret void

7:                                                ; preds = %0
  %8 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %2) #26
  resume { ptr, i32 } %8
}

; Function Attrs: sspstrong uwtable
define internal void @_ZN12_GLOBAL__N_119__onstartup_func_55Ev() #0 personality ptr @__gxx_personality_v0 {
  %1 = tail call noundef ptr @_ZN23cGlobalRegistrationList11getInstanceEv(ptr noundef nonnull align 8 dereferenceable(16) @classes)
  %2 = tail call noalias noundef nonnull dereferenceable(80) ptr @_Znwm(i64 noundef 80) #25
  %3 = invoke noundef ptr @_Z12opp_typenameRKSt9type_info(ptr noundef nonnull align 8 dereferenceable(16) @_ZTI25SectionBasedConfiguration)
          to label %4 unwind label %9

4:                                                ; preds = %0
  invoke void @_ZN13cClassFactoryC1EPKcPFP7cObjectvES1_(ptr noundef nonnull align 8 dereferenceable(80) %2, ptr noundef %3, ptr noundef nonnull @_ZL15__uniquename_55v, ptr noundef null)
          to label %5 unwind label %9

5:                                                ; preds = %4
  %6 = load ptr, ptr %1, align 8, !tbaa !9
  %7 = getelementptr inbounds ptr, ptr %6, i64 22
  %8 = load ptr, ptr %7, align 8
  tail call void %8(ptr noundef nonnull align 8 dereferenceable(144) %1, ptr noundef nonnull %2)
  ret void

9:                                                ; preds = %4, %0
  %10 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %2) #26
  resume { ptr, i32 } %10
}

; Function Attrs: sspstrong uwtable
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(32)) unnamed_addr #0 align 2

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN25SectionBasedConfigurationC2Ev(ptr noundef nonnull align 8 dereferenceable(416) %0) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [66 x ptr] }, ptr @_ZTV25SectionBasedConfiguration, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !9
  %2 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %2, i8 0, i64 24, i1 false)
  %3 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 3, i32 2
  store ptr %4, ptr %3, align 8, !tbaa !11
  %5 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 3, i32 1
  store i64 0, ptr %5, align 8, !tbaa !13
  store i8 0, ptr %4, align 8, !tbaa !16
  %6 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 5
  %7 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 5, i32 2
  store ptr %7, ptr %6, align 8, !tbaa !11
  %8 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 5, i32 1
  store i64 0, ptr %8, align 8, !tbaa !13
  store i8 0, ptr %7, align 8, !tbaa !16
  %9 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 6
  %10 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 6, i32 0, i32 0, i32 1
  store i32 0, ptr %10, align 8, !tbaa !17
  %11 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %11, align 8, !tbaa !21
  %12 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %10, ptr %12, align 8, !tbaa !22
  %13 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %10, ptr %13, align 8, !tbaa !23
  %14 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %14, align 8, !tbaa !24
  %15 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7
  %16 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1
  store i32 0, ptr %16, align 8, !tbaa !17
  %17 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %17, align 8, !tbaa !21
  %18 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %16, ptr %18, align 8, !tbaa !22
  %19 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %16, ptr %19, align 8, !tbaa !23
  %20 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %20, align 8, !tbaa !24
  %21 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8
  %22 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1
  store i32 0, ptr %22, align 8, !tbaa !17
  %23 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %23, align 8, !tbaa !21
  %24 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %22, ptr %24, align 8, !tbaa !22
  %25 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %22, ptr %25, align 8, !tbaa !23
  %26 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 1
  %27 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 9
  %28 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %26, i8 0, i64 32, i1 false)
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration12NullKeyValueE, i64 0, inrange i32 0, i64 2), ptr %28, align 8, !tbaa !9
  %29 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10, i32 1
  %30 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10, i32 1, i32 2
  store ptr %30, ptr %29, align 8, !tbaa !11
  %31 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10, i32 1, i32 1
  store i64 0, ptr %31, align 8, !tbaa !13
  store i8 0, ptr %30, align 8, !tbaa !16
  %32 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11, i32 0, i32 0, i32 1
  store i32 0, ptr %32, align 8, !tbaa !17
  %33 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %33, align 8, !tbaa !21
  %34 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %32, ptr %34, align 8, !tbaa !22
  %35 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %32, ptr %35, align 8, !tbaa !23
  %36 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %36, align 8, !tbaa !24
  %37 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 12
  invoke void @_ZN16CommonStringPoolC1Ev(ptr noundef nonnull align 8 dereferenceable(48) %37)
          to label %38 unwind label %41

38:                                               ; preds = %1
  %39 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 1
  store ptr null, ptr %39, align 8, !tbaa !25
  %40 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 4
  store i32 0, ptr %40, align 8, !tbaa !62
  ret void

41:                                               ; preds = %1
  %42 = landingpad { ptr, i32 }
          cleanup
  %43 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11
  %44 = load ptr, ptr %33, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %43, ptr noundef %44)
          to label %45 unwind label %76

45:                                               ; preds = %41
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration12NullKeyValueE, i64 0, inrange i32 0, i64 2), ptr %28, align 8, !tbaa !9
  %46 = load ptr, ptr %29, align 8, !tbaa !63
  %47 = icmp eq ptr %46, %30
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = load i64, ptr %31, align 8, !tbaa !13
  %50 = icmp ult i64 %49, 16
  tail call void @llvm.assume(i1 %50)
  br label %52

51:                                               ; preds = %45
  tail call void @_ZdlPv(ptr noundef %46) #26
  br label %52

52:                                               ; preds = %51, %48
  invoke void @_ZN25SectionBasedConfiguration5GroupD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %27)
          to label %53 unwind label %76

53:                                               ; preds = %52
  %54 = load ptr, ptr %23, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %21, ptr noundef %54)
          to label %55 unwind label %76

55:                                               ; preds = %53
  %56 = load ptr, ptr %17, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %15, ptr noundef %56)
          to label %57 unwind label %76

57:                                               ; preds = %55
  %58 = load ptr, ptr %11, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %9, ptr noundef %58)
          to label %59 unwind label %76

59:                                               ; preds = %57
  %60 = load ptr, ptr %6, align 8, !tbaa !63
  %61 = icmp eq ptr %60, %7
  br i1 %61, label %62, label %65

62:                                               ; preds = %59
  %63 = load i64, ptr %8, align 8, !tbaa !13
  %64 = icmp ult i64 %63, 16
  tail call void @llvm.assume(i1 %64)
  br label %66

65:                                               ; preds = %59
  tail call void @_ZdlPv(ptr noundef %60) #26
  br label %66

66:                                               ; preds = %65, %62
  %67 = load ptr, ptr %3, align 8, !tbaa !63
  %68 = icmp eq ptr %67, %4
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = load i64, ptr %5, align 8, !tbaa !13
  %71 = icmp ult i64 %70, 16
  tail call void @llvm.assume(i1 %71)
  br label %73

72:                                               ; preds = %66
  tail call void @_ZdlPv(ptr noundef %67) #26
  br label %73

73:                                               ; preds = %72, %69
  invoke void @_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue1ESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %2)
          to label %74 unwind label %76

74:                                               ; preds = %73
  invoke void @_ZN7cObjectD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %0)
          to label %75 unwind label %76

75:                                               ; preds = %74
  resume { ptr, i32 } %42

76:                                               ; preds = %57, %55, %53, %41, %74, %73, %52
  %77 = landingpad { ptr, i32 }
          catch ptr null
  %78 = extractvalue { ptr, i32 } %77, 0
  tail call void @__clang_call_terminate(ptr %78) #27
  unreachable
}

declare i32 @__gxx_personality_v0(...)

declare void @_ZN16CommonStringPoolC1Ev(ptr noundef nonnull align 8 dereferenceable(48)) unnamed_addr #1

; Function Attrs: noinline noreturn nounwind sspstrong uwtable
define linkonce_odr hidden void @__clang_call_terminate(ptr noundef %0) local_unnamed_addr #3 comdat {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #28
  tail call void @_ZSt9terminatev() #27
  unreachable
}

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN25SectionBasedConfiguration12NullKeyValueD2Ev(ptr noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration12NullKeyValueE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !9
  %2 = getelementptr inbounds %"class.SectionBasedConfiguration::NullKeyValue", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  %4 = getelementptr inbounds %"class.SectionBasedConfiguration::NullKeyValue", ptr %0, i64 0, i32 1, i32 2
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.SectionBasedConfiguration::NullKeyValue", ptr %0, i64 0, i32 1, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !13
  %9 = icmp ult i64 %8, 16
  tail call void @llvm.assume(i1 %9)
  br label %11

10:                                               ; preds = %1
  tail call void @_ZdlPv(ptr noundef %3) #26
  br label %11

11:                                               ; preds = %10, %6
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN25SectionBasedConfiguration5GroupD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !64
  %3 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !65
  %5 = icmp eq ptr %2, %4
  br i1 %5, label %15, label %6

6:                                                ; preds = %1, %10
  %7 = phi ptr [ %11, %10 ], [ %2, %1 ]
  %8 = load ptr, ptr %7, align 8, !tbaa !9
  %9 = load ptr, ptr %8, align 8
  invoke void %9(ptr noundef nonnull align 8 dereferenceable(104) %7)
          to label %10 unwind label %19

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %7, i64 1
  %12 = icmp eq ptr %11, %4
  br i1 %12, label %13, label %6

13:                                               ; preds = %10
  %14 = load ptr, ptr %0, align 8, !tbaa !64
  br label %15

15:                                               ; preds = %13, %1
  %16 = phi ptr [ %14, %13 ], [ %2, %1 ]
  %17 = icmp eq ptr %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  tail call void @_ZdlPv(ptr noundef nonnull %16) #26
  br label %25

19:                                               ; preds = %6
  %20 = landingpad { ptr, i32 }
          cleanup
  %21 = load ptr, ptr %0, align 8, !tbaa !64
  %22 = icmp eq ptr %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @_ZdlPv(ptr noundef nonnull %21) #26
  br label %24

24:                                               ; preds = %23, %19
  resume { ptr, i32 } %20

25:                                               ; preds = %15, %18
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue1ESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !66
  %3 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue1, std::allocator<SectionBasedConfiguration::KeyValue1> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !67
  %5 = icmp eq ptr %2, %4
  br i1 %5, label %15, label %6

6:                                                ; preds = %1, %10
  %7 = phi ptr [ %11, %10 ], [ %2, %1 ]
  %8 = load ptr, ptr %7, align 8, !tbaa !9
  %9 = load ptr, ptr %8, align 8
  invoke void %9(ptr noundef nonnull align 8 dereferenceable(80) %7)
          to label %10 unwind label %20

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %7, i64 1
  %12 = icmp eq ptr %11, %4
  br i1 %12, label %13, label %6

13:                                               ; preds = %10
  %14 = load ptr, ptr %0, align 8, !tbaa !66
  br label %15

15:                                               ; preds = %13, %1
  %16 = phi ptr [ %14, %13 ], [ %2, %1 ]
  %17 = icmp eq ptr %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  tail call void @_ZdlPv(ptr noundef nonnull %16) #26
  br label %19

19:                                               ; preds = %15, %18
  ret void

20:                                               ; preds = %6
  %21 = landingpad { ptr, i32 }
          cleanup
  %22 = load ptr, ptr %0, align 8, !tbaa !66
  %23 = icmp eq ptr %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @_ZdlPv(ptr noundef nonnull %22) #26
  br label %25

25:                                               ; preds = %24, %20
  resume { ptr, i32 } %21
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN25SectionBasedConfigurationD2Ev(ptr noundef nonnull align 8 dereferenceable(416) %0) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [66 x ptr] }, ptr @_ZTV25SectionBasedConfiguration, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !9
  invoke void @_ZN25SectionBasedConfiguration5clearEv(ptr noundef nonnull align 8 dereferenceable(416) %0)
          to label %2 unwind label %108

2:                                                ; preds = %1
  %3 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !25
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = load ptr, ptr %4, align 8, !tbaa !9
  %8 = getelementptr inbounds ptr, ptr %7, i64 1
  %9 = load ptr, ptr %8, align 8
  invoke void %9(ptr noundef nonnull align 8 dereferenceable(8) %4)
          to label %10 unwind label %108

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 12
  invoke void @_ZN16CommonStringPoolD1Ev(ptr noundef nonnull align 8 dereferenceable(48) %11)
          to label %12 unwind label %111

12:                                               ; preds = %10
  %13 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11
  %14 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %13, ptr noundef %15)
          to label %16 unwind label %113

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration12NullKeyValueE, i64 0, inrange i32 0, i64 2), ptr %17, align 8, !tbaa !9
  %18 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !63
  %20 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10, i32 1, i32 2
  %21 = icmp eq ptr %19, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10, i32 1, i32 1
  %24 = load i64, ptr %23, align 8, !tbaa !13
  %25 = icmp ult i64 %24, 16
  tail call void @llvm.assume(i1 %25)
  br label %27

26:                                               ; preds = %16
  tail call void @_ZdlPv(ptr noundef %19) #26
  br label %27

27:                                               ; preds = %26, %22
  %28 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 9
  %29 = load ptr, ptr %28, align 8, !tbaa !64
  %30 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !65
  %32 = icmp eq ptr %29, %31
  br i1 %32, label %42, label %33

33:                                               ; preds = %27, %37
  %34 = phi ptr [ %38, %37 ], [ %29, %27 ]
  %35 = load ptr, ptr %34, align 8, !tbaa !9
  %36 = load ptr, ptr %35, align 8
  invoke void %36(ptr noundef nonnull align 8 dereferenceable(104) %34)
          to label %37 unwind label %46

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %34, i64 1
  %39 = icmp eq ptr %38, %31
  br i1 %39, label %40, label %33

40:                                               ; preds = %37
  %41 = load ptr, ptr %28, align 8, !tbaa !64
  br label %42

42:                                               ; preds = %40, %27
  %43 = phi ptr [ %41, %40 ], [ %29, %27 ]
  %44 = icmp eq ptr %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %42
  tail call void @_ZdlPv(ptr noundef nonnull %43) #26
  br label %51

46:                                               ; preds = %33
  %47 = landingpad { ptr, i32 }
          cleanup
  %48 = load ptr, ptr %28, align 8, !tbaa !64
  %49 = icmp eq ptr %48, null
  br i1 %49, label %136, label %50

50:                                               ; preds = %46
  tail call void @_ZdlPv(ptr noundef nonnull %48) #26
  br label %136

51:                                               ; preds = %45, %42
  %52 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8
  %53 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %52, ptr noundef %54)
          to label %55 unwind label %134

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7
  %57 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef %58)
          to label %59 unwind label %141

59:                                               ; preds = %55
  %60 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 6
  %61 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 1
  %62 = load ptr, ptr %61, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %60, ptr noundef %62)
          to label %63 unwind label %148

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 5
  %65 = load ptr, ptr %64, align 8, !tbaa !63
  %66 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 5, i32 2
  %67 = icmp eq ptr %65, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %63
  %69 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 5, i32 1
  %70 = load i64, ptr %69, align 8, !tbaa !13
  %71 = icmp ult i64 %70, 16
  tail call void @llvm.assume(i1 %71)
  br label %73

72:                                               ; preds = %63
  tail call void @_ZdlPv(ptr noundef %65) #26
  br label %73

73:                                               ; preds = %72, %68
  %74 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 3
  %75 = load ptr, ptr %74, align 8, !tbaa !63
  %76 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 3, i32 2
  %77 = icmp eq ptr %75, %76
  br i1 %77, label %78, label %82

78:                                               ; preds = %73
  %79 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 3, i32 1
  %80 = load i64, ptr %79, align 8, !tbaa !13
  %81 = icmp ult i64 %80, 16
  tail call void @llvm.assume(i1 %81)
  br label %83

82:                                               ; preds = %73
  tail call void @_ZdlPv(ptr noundef %75) #26
  br label %83

83:                                               ; preds = %82, %78
  %84 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 2
  %85 = load ptr, ptr %84, align 8, !tbaa !66
  %86 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %87 = load ptr, ptr %86, align 8, !tbaa !67
  %88 = icmp eq ptr %85, %87
  br i1 %88, label %98, label %89

89:                                               ; preds = %83, %93
  %90 = phi ptr [ %94, %93 ], [ %85, %83 ]
  %91 = load ptr, ptr %90, align 8, !tbaa !9
  %92 = load ptr, ptr %91, align 8
  invoke void %92(ptr noundef nonnull align 8 dereferenceable(80) %90)
          to label %93 unwind label %102

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %90, i64 1
  %95 = icmp eq ptr %94, %87
  br i1 %95, label %96, label %89

96:                                               ; preds = %93
  %97 = load ptr, ptr %84, align 8, !tbaa !66
  br label %98

98:                                               ; preds = %96, %83
  %99 = phi ptr [ %97, %96 ], [ %85, %83 ]
  %100 = icmp eq ptr %99, null
  br i1 %100, label %107, label %101

101:                                              ; preds = %98
  tail call void @_ZdlPv(ptr noundef nonnull %99) #26
  br label %107

102:                                              ; preds = %89
  %103 = landingpad { ptr, i32 }
          cleanup
  %104 = load ptr, ptr %84, align 8, !tbaa !66
  %105 = icmp eq ptr %104, null
  br i1 %105, label %178, label %106

106:                                              ; preds = %102
  tail call void @_ZdlPv(ptr noundef nonnull %104) #26
  br label %178

107:                                              ; preds = %101, %98
  tail call void @_ZN7cObjectD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %0)
  ret void

108:                                              ; preds = %6, %1
  %109 = landingpad { ptr, i32 }
          cleanup
  %110 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 12
  invoke void @_ZN16CommonStringPoolD1Ev(ptr noundef nonnull align 8 dereferenceable(48) %110)
          to label %115 unwind label %181

111:                                              ; preds = %10
  %112 = landingpad { ptr, i32 }
          cleanup
  br label %115

113:                                              ; preds = %12
  %114 = landingpad { ptr, i32 }
          cleanup
  br label %120

115:                                              ; preds = %108, %111
  %116 = phi { ptr, i32 } [ %112, %111 ], [ %109, %108 ]
  %117 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11
  %118 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 1
  %119 = load ptr, ptr %118, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %117, ptr noundef %119)
          to label %120 unwind label %181

120:                                              ; preds = %115, %113
  %121 = phi { ptr, i32 } [ %114, %113 ], [ %116, %115 ]
  %122 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration12NullKeyValueE, i64 0, inrange i32 0, i64 2), ptr %122, align 8, !tbaa !9
  %123 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10, i32 1
  %124 = load ptr, ptr %123, align 8, !tbaa !63
  %125 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10, i32 1, i32 2
  %126 = icmp eq ptr %124, %125
  br i1 %126, label %127, label %131

127:                                              ; preds = %120
  %128 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10, i32 1, i32 1
  %129 = load i64, ptr %128, align 8, !tbaa !13
  %130 = icmp ult i64 %129, 16
  tail call void @llvm.assume(i1 %130)
  br label %132

131:                                              ; preds = %120
  tail call void @_ZdlPv(ptr noundef %124) #26
  br label %132

132:                                              ; preds = %131, %127
  %133 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 9
  invoke void @_ZN25SectionBasedConfiguration5GroupD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %133)
          to label %136 unwind label %181

134:                                              ; preds = %51
  %135 = landingpad { ptr, i32 }
          cleanup
  br label %143

136:                                              ; preds = %50, %46, %132
  %137 = phi { ptr, i32 } [ %121, %132 ], [ %47, %50 ], [ %47, %46 ]
  %138 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8
  %139 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 1
  %140 = load ptr, ptr %139, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %138, ptr noundef %140)
          to label %143 unwind label %181

141:                                              ; preds = %55
  %142 = landingpad { ptr, i32 }
          cleanup
  br label %150

143:                                              ; preds = %136, %134
  %144 = phi { ptr, i32 } [ %135, %134 ], [ %137, %136 ]
  %145 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7
  %146 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 1
  %147 = load ptr, ptr %146, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %145, ptr noundef %147)
          to label %150 unwind label %181

148:                                              ; preds = %59
  %149 = landingpad { ptr, i32 }
          cleanup
  br label %155

150:                                              ; preds = %143, %141
  %151 = phi { ptr, i32 } [ %142, %141 ], [ %144, %143 ]
  %152 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 6
  %153 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 1
  %154 = load ptr, ptr %153, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %152, ptr noundef %154)
          to label %155 unwind label %181

155:                                              ; preds = %150, %148
  %156 = phi { ptr, i32 } [ %149, %148 ], [ %151, %150 ]
  %157 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 5
  %158 = load ptr, ptr %157, align 8, !tbaa !63
  %159 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 5, i32 2
  %160 = icmp eq ptr %158, %159
  br i1 %160, label %161, label %165

161:                                              ; preds = %155
  %162 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 5, i32 1
  %163 = load i64, ptr %162, align 8, !tbaa !13
  %164 = icmp ult i64 %163, 16
  tail call void @llvm.assume(i1 %164)
  br label %166

165:                                              ; preds = %155
  tail call void @_ZdlPv(ptr noundef %158) #26
  br label %166

166:                                              ; preds = %165, %161
  %167 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 3
  %168 = load ptr, ptr %167, align 8, !tbaa !63
  %169 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 3, i32 2
  %170 = icmp eq ptr %168, %169
  br i1 %170, label %171, label %175

171:                                              ; preds = %166
  %172 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 3, i32 1
  %173 = load i64, ptr %172, align 8, !tbaa !13
  %174 = icmp ult i64 %173, 16
  tail call void @llvm.assume(i1 %174)
  br label %176

175:                                              ; preds = %166
  tail call void @_ZdlPv(ptr noundef %168) #26
  br label %176

176:                                              ; preds = %175, %171
  %177 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 2
  invoke void @_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue1ESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %177)
          to label %178 unwind label %181

178:                                              ; preds = %106, %102, %176
  %179 = phi { ptr, i32 } [ %156, %176 ], [ %103, %106 ], [ %103, %102 ]
  invoke void @_ZN7cObjectD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %0)
          to label %180 unwind label %181

180:                                              ; preds = %178
  resume { ptr, i32 } %179

181:                                              ; preds = %150, %143, %136, %115, %178, %176, %132, %108
  %182 = landingpad { ptr, i32 }
          catch ptr null
  %183 = extractvalue { ptr, i32 } %182, 0
  tail call void @__clang_call_terminate(ptr %183) #27
  unreachable
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN25SectionBasedConfiguration5clearEv(ptr noundef nonnull align 8 dereferenceable(416) %0) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 3
  %3 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 3, i32 1
  %4 = load i64, ptr %3, align 8, !tbaa !13
  %5 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef 0, i64 noundef %4, ptr noundef nonnull @.str.14, i64 noundef 0)
  %6 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 4
  store i32 0, ptr %6, align 8, !tbaa !62
  %7 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7
  %8 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !21
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %7, ptr noundef %9)
  %10 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1
  store ptr null, ptr %8, align 8, !tbaa !21
  %11 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %10, ptr %11, align 8, !tbaa !22
  %12 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %10, ptr %12, align 8, !tbaa !23
  %13 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %13, align 8, !tbaa !24
  %14 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8
  %15 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !21
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %14, ptr noundef %16)
  %17 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1
  store ptr null, ptr %15, align 8, !tbaa !21
  %18 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %17, ptr %18, align 8, !tbaa !22
  %19 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %17, ptr %19, align 8, !tbaa !23
  %20 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %20, align 8, !tbaa !24
  %21 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 9
  %22 = load ptr, ptr %21, align 8, !tbaa !64
  %23 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !65
  %25 = icmp eq ptr %24, %22
  br i1 %25, label %33, label %26

26:                                               ; preds = %1, %26
  %27 = phi ptr [ %30, %26 ], [ %22, %1 ]
  %28 = load ptr, ptr %27, align 8, !tbaa !9
  %29 = load ptr, ptr %28, align 8
  tail call void %29(ptr noundef nonnull align 8 dereferenceable(104) %27)
  %30 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %27, i64 1
  %31 = icmp eq ptr %30, %24
  br i1 %31, label %32, label %26

32:                                               ; preds = %26
  store ptr %22, ptr %23, align 8, !tbaa !65
  br label %33

33:                                               ; preds = %1, %32
  %34 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11
  %35 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !21
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %34, ptr noundef %36)
  %37 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11, i32 0, i32 0, i32 1
  store ptr null, ptr %35, align 8, !tbaa !21
  %38 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %37, ptr %38, align 8, !tbaa !22
  %39 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %37, ptr %39, align 8, !tbaa !23
  %40 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %40, align 8, !tbaa !24
  ret void
}

declare void @_ZN16CommonStringPoolD1Ev(ptr noundef nonnull align 8 dereferenceable(48)) unnamed_addr #1

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN25SectionBasedConfigurationD0Ev(ptr noundef nonnull align 8 dereferenceable(416) %0) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  invoke void @_ZN25SectionBasedConfigurationD2Ev(ptr noundef nonnull align 8 dereferenceable(416) %0)
          to label %2 unwind label %3

2:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %0) #26
  ret void

3:                                                ; preds = %1
  %4 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #26
  resume { ptr, i32 } %4
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #5

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN25SectionBasedConfiguration22setConfigurationReaderEP20cConfigurationReader(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %1) unnamed_addr #0 align 2 {
  tail call void @_ZN25SectionBasedConfiguration5clearEv(ptr noundef nonnull align 8 dereferenceable(416) %0)
  %3 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 1
  store ptr %1, ptr %3, align 8, !tbaa !25
  %4 = load ptr, ptr %1, align 8, !tbaa !9
  %5 = getelementptr inbounds ptr, ptr %4, i64 4
  %6 = load ptr, ptr %5, align 8
  %7 = tail call noundef ptr %6(ptr noundef nonnull align 8 dereferenceable(8) %1)
  %8 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10, i32 1
  %9 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10, i32 1, i32 1
  %10 = load i64, ptr %9, align 8, !tbaa !13
  %11 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %7) #28
  %12 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %8, i64 noundef 0, i64 noundef %10, ptr noundef %7, i64 noundef %11)
  ret void
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN25SectionBasedConfiguration27setCommandLineConfigOptionsERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_St4lessIS6_ESaISt4pairIKS6_S6_EEE(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull readonly align 8 dereferenceable(48) %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.SectionBasedConfiguration::KeyValue1", align 8
  %9 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !66
  %11 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !67
  %13 = icmp eq ptr %12, %10
  br i1 %13, label %21, label %14

14:                                               ; preds = %2, %14
  %15 = phi ptr [ %18, %14 ], [ %10, %2 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !9
  %17 = load ptr, ptr %16, align 8
  tail call void %17(ptr noundef nonnull align 8 dereferenceable(80) %15)
  %18 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %15, i64 1
  %19 = icmp eq ptr %18, %12
  br i1 %19, label %20, label %14

20:                                               ; preds = %14
  store ptr %10, ptr %11, align 8, !tbaa !67
  br label %21

21:                                               ; preds = %2, %20
  %22 = getelementptr inbounds i8, ptr %1, i64 24
  %23 = load ptr, ptr %22, align 8, !tbaa !22
  %24 = getelementptr inbounds i8, ptr %1, i64 8
  %25 = icmp eq ptr %23, %24
  br i1 %25, label %42, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 2
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 1
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 2
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 1
  %33 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %34 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 1
  %35 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 2
  %36 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 2, i32 1
  %37 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 3
  %38 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 3, i32 1
  %39 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 3, i32 2
  %40 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 2, i32 2
  %41 = getelementptr inbounds i8, ptr %7, i64 19
  br label %43

42:                                               ; preds = %234, %21
  ret void

43:                                               ; preds = %26, %234
  %44 = phi ptr [ %23, %26 ], [ %235, %234 ]
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !63
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %44, i64 0, i32 1, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !63
  %49 = call noundef ptr @strchr(ptr noundef nonnull dereferenceable(1) %46, i32 noundef 46) #29
  %50 = icmp eq ptr %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %43
  %52 = call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %46, i32 noundef 46) #29
  %53 = getelementptr inbounds i8, ptr %52, i64 1
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi ptr [ %53, %51 ], [ %46, %43 ]
  %56 = call noundef ptr @_ZN25SectionBasedConfiguration18lookupConfigOptionEPKc(ptr noundef %55)
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %63

58:                                               ; preds = %54
  %59 = call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %59, ptr noundef nonnull @.str, ptr noundef %46)
          to label %60 unwind label %61

60:                                               ; preds = %58
  call void @__cxa_throw(ptr nonnull %59, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
  unreachable

61:                                               ; preds = %58
  %62 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %59) #28
  br label %254

63:                                               ; preds = %54
  %64 = getelementptr inbounds %class.cConfigOption, ptr %56, i64 0, i32 1
  %65 = load i8, ptr %64, align 4, !tbaa !68, !range !76, !noundef !77
  %66 = icmp ne i8 %65, 0
  %67 = icmp eq ptr %46, %55
  %68 = or i1 %67, %66
  br i1 %68, label %79, label %69

69:                                               ; preds = %63
  %70 = call ptr @__cxa_allocate_exception(i64 128) #28
  %71 = load ptr, ptr %56, align 8, !tbaa !9
  %72 = getelementptr inbounds ptr, ptr %71, i64 6
  %73 = load ptr, ptr %72, align 8
  %74 = invoke noundef ptr %73(ptr noundef nonnull align 8 dereferenceable(20) %56)
          to label %75 unwind label %77

75:                                               ; preds = %69
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %70, ptr noundef nonnull @.str.11, ptr noundef %46, ptr noundef %74)
          to label %76 unwind label %77

76:                                               ; preds = %75
  call void @__cxa_throw(ptr nonnull %70, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
  unreachable

77:                                               ; preds = %75, %69
  %78 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %70) #28
  br label %254

79:                                               ; preds = %63
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #28
  store ptr %27, ptr %5, align 8, !tbaa !11
  store i64 0, ptr %28, align 8, !tbaa !13
  store i8 0, ptr %27, align 8, !tbaa !16
  %80 = and i1 %67, %66
  br i1 %80, label %81, label %146

81:                                               ; preds = %79
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #28
  store ptr %29, ptr %7, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %29, ptr noundef nonnull align 1 dereferenceable(3) @.str.12, i64 3, i1 false)
  store i64 3, ptr %30, align 8, !tbaa !13
  store i8 0, ptr %41, align 1, !tbaa !16
  call void @llvm.experimental.noalias.scope.decl(metadata !78)
  %82 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %46) #28, !noalias !78
  store ptr %31, ptr %6, align 8, !tbaa !11, !alias.scope !81
  store i64 0, ptr %32, align 8, !tbaa !13, !alias.scope !81
  store i8 0, ptr %31, align 8, !tbaa !16, !alias.scope !81
  %83 = add i64 %82, 3
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %6, i64 noundef %83)
          to label %84 unwind label %98

84:                                               ; preds = %81
  %85 = load i64, ptr %32, align 8, !tbaa !13, !alias.scope !81
  %86 = add i64 %85, -4611686018427387901
  %87 = icmp ult i64 %86, 3
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %6, ptr noundef nonnull %29, i64 noundef 3)
          to label %90 unwind label %98

90:                                               ; preds = %88
  %91 = load i64, ptr %32, align 8, !tbaa !13, !alias.scope !81
  %92 = sub i64 4611686018427387903, %91
  %93 = icmp ult i64 %92, %82
  br i1 %93, label %94, label %96

94:                                               ; preds = %90, %84
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %95 unwind label %100

95:                                               ; preds = %94
  unreachable

96:                                               ; preds = %90
  %97 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %6, ptr noundef %46, i64 noundef %82)
          to label %110 unwind label %98

98:                                               ; preds = %81, %88, %96
  %99 = landingpad { ptr, i32 }
          cleanup
  br label %102

100:                                              ; preds = %94
  %101 = landingpad { ptr, i32 }
          cleanup
  br label %102

102:                                              ; preds = %100, %98
  %103 = phi { ptr, i32 } [ %99, %98 ], [ %101, %100 ]
  %104 = load ptr, ptr %6, align 8, !tbaa !63, !alias.scope !81
  %105 = icmp eq ptr %104, %31
  br i1 %105, label %106, label %109

106:                                              ; preds = %102
  %107 = load i64, ptr %32, align 8, !tbaa !13, !alias.scope !81
  %108 = icmp ult i64 %107, 16
  call void @llvm.assume(i1 %108)
  br label %137

109:                                              ; preds = %102
  call void @_ZdlPv(ptr noundef %104) #26
  br label %137

110:                                              ; preds = %96
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull align 8 dereferenceable(32) %6)
          to label %111 unwind label %129

111:                                              ; preds = %110
  %112 = load ptr, ptr %5, align 8, !tbaa !63
  %113 = load ptr, ptr %6, align 8, !tbaa !63
  %114 = icmp eq ptr %113, %31
  br i1 %114, label %115, label %118

115:                                              ; preds = %111
  %116 = load i64, ptr %32, align 8, !tbaa !13
  %117 = icmp ult i64 %116, 16
  call void @llvm.assume(i1 %117)
  br label %119

118:                                              ; preds = %111
  call void @_ZdlPv(ptr noundef %113) #26
  br label %119

119:                                              ; preds = %118, %115
  %120 = load ptr, ptr %7, align 8, !tbaa !63
  %121 = icmp eq ptr %120, %29
  br i1 %121, label %122, label %125

122:                                              ; preds = %119
  %123 = load i64, ptr %30, align 8, !tbaa !13
  %124 = icmp ult i64 %123, 16
  call void @llvm.assume(i1 %124)
  br label %126

125:                                              ; preds = %119
  call void @_ZdlPv(ptr noundef %120) #26
  br label %126

126:                                              ; preds = %125, %122
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #28
  br label %146

127:                                              ; preds = %152
  %128 = landingpad { ptr, i32 }
          cleanup
  br label %245

129:                                              ; preds = %110
  %130 = landingpad { ptr, i32 }
          cleanup
  %131 = load ptr, ptr %6, align 8, !tbaa !63
  %132 = icmp eq ptr %131, %31
  br i1 %132, label %133, label %136

133:                                              ; preds = %129
  %134 = load i64, ptr %32, align 8, !tbaa !13
  %135 = icmp ult i64 %134, 16
  call void @llvm.assume(i1 %135)
  br label %137

136:                                              ; preds = %129
  call void @_ZdlPv(ptr noundef %131) #26
  br label %137

137:                                              ; preds = %136, %133, %109, %106
  %138 = phi { ptr, i32 } [ %103, %109 ], [ %103, %106 ], [ %130, %133 ], [ %130, %136 ]
  %139 = load ptr, ptr %7, align 8, !tbaa !63
  %140 = icmp eq ptr %139, %29
  br i1 %140, label %141, label %144

141:                                              ; preds = %137
  %142 = load i64, ptr %30, align 8, !tbaa !13
  %143 = icmp ult i64 %142, 16
  call void @llvm.assume(i1 %143)
  br label %145

144:                                              ; preds = %137
  call void @_ZdlPv(ptr noundef %139) #26
  br label %145

145:                                              ; preds = %144, %141
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #28
  br label %245

146:                                              ; preds = %126, %79
  %147 = phi ptr [ %112, %126 ], [ %46, %79 ]
  %148 = load i8, ptr %48, align 1, !tbaa !16
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %150, label %155

150:                                              ; preds = %146
  %151 = call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %151, ptr noundef nonnull @.str.13, ptr noundef %147)
          to label %152 unwind label %153

152:                                              ; preds = %150
  invoke void @__cxa_throw(ptr nonnull %151, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %259 unwind label %127

153:                                              ; preds = %150
  %154 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %151) #28
  br label %245

155:                                              ; preds = %146
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %8) #28
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1C2EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcSA_(ptr noundef nonnull align 8 dereferenceable(80) %8, ptr noundef null, ptr noundef %147, ptr noundef nonnull %48)
          to label %156 unwind label %237

156:                                              ; preds = %155
  %157 = load ptr, ptr %11, align 8, !tbaa !5
  %158 = load ptr, ptr %33, align 8, !tbaa !84
  %159 = icmp eq ptr %157, %158
  br i1 %159, label %212, label %160

160:                                              ; preds = %156
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %157, align 8, !tbaa !9
  %161 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %157, i64 0, i32 1
  %162 = load ptr, ptr %34, align 8, !tbaa !85
  store ptr %162, ptr %161, align 8, !tbaa !85
  %163 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %157, i64 0, i32 2
  %164 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %157, i64 0, i32 2, i32 2
  store ptr %164, ptr %163, align 8, !tbaa !11
  %165 = load ptr, ptr %35, align 8, !tbaa !63
  %166 = load i64, ptr %36, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %166, ptr %4, align 8, !tbaa !87
  %167 = icmp ugt i64 %166, 15
  br i1 %167, label %168, label %172

168:                                              ; preds = %160
  %169 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %163, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %170 unwind label %239

170:                                              ; preds = %168
  store ptr %169, ptr %163, align 8, !tbaa !63
  %171 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %171, ptr %164, align 8, !tbaa !16
  br label %172

172:                                              ; preds = %170, %160
  %173 = phi ptr [ %169, %170 ], [ %164, %160 ]
  switch i64 %166, label %176 [
    i64 1, label %174
    i64 0, label %177
  ]

174:                                              ; preds = %172
  %175 = load i8, ptr %165, align 1, !tbaa !16
  store i8 %175, ptr %173, align 1, !tbaa !16
  br label %177

176:                                              ; preds = %172
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %173, ptr align 1 %165, i64 %166, i1 false)
  br label %177

177:                                              ; preds = %176, %174, %172
  %178 = load i64, ptr %4, align 8, !tbaa !87
  %179 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %157, i64 0, i32 2, i32 1
  store i64 %178, ptr %179, align 8, !tbaa !13
  %180 = load ptr, ptr %163, align 8, !tbaa !63
  %181 = getelementptr inbounds i8, ptr %180, i64 %178
  store i8 0, ptr %181, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %182 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %157, i64 0, i32 3
  %183 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %157, i64 0, i32 3, i32 2
  store ptr %183, ptr %182, align 8, !tbaa !11
  %184 = load ptr, ptr %37, align 8, !tbaa !63
  %185 = load i64, ptr %38, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #28
  store i64 %185, ptr %3, align 8, !tbaa !87
  %186 = icmp ugt i64 %185, 15
  br i1 %186, label %187, label %191

187:                                              ; preds = %177
  %188 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %182, ptr noundef nonnull align 8 dereferenceable(8) %3, i64 noundef 0)
          to label %189 unwind label %196

189:                                              ; preds = %187
  store ptr %188, ptr %182, align 8, !tbaa !63
  %190 = load i64, ptr %3, align 8, !tbaa !87
  store i64 %190, ptr %183, align 8, !tbaa !16
  br label %191

191:                                              ; preds = %189, %177
  %192 = phi ptr [ %188, %189 ], [ %183, %177 ]
  switch i64 %185, label %195 [
    i64 1, label %193
    i64 0, label %205
  ]

193:                                              ; preds = %191
  %194 = load i8, ptr %184, align 1, !tbaa !16
  store i8 %194, ptr %192, align 1, !tbaa !16
  br label %205

195:                                              ; preds = %191
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %192, ptr align 1 %184, i64 %185, i1 false)
  br label %205

196:                                              ; preds = %187
  %197 = landingpad { ptr, i32 }
          cleanup
  %198 = load ptr, ptr %163, align 8, !tbaa !63
  %199 = icmp eq ptr %198, %164
  br i1 %199, label %200, label %204

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %157, i64 0, i32 2, i32 1
  %202 = load i64, ptr %201, align 8, !tbaa !13
  %203 = icmp ult i64 %202, 16
  call void @llvm.assume(i1 %203)
  br label %241

204:                                              ; preds = %196
  call void @_ZdlPv(ptr noundef %198) #26
  br label %241

205:                                              ; preds = %195, %193, %191
  %206 = load i64, ptr %3, align 8, !tbaa !87
  %207 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %157, i64 0, i32 3, i32 1
  store i64 %206, ptr %207, align 8, !tbaa !13
  %208 = load ptr, ptr %182, align 8, !tbaa !63
  %209 = getelementptr inbounds i8, ptr %208, i64 %206
  store i8 0, ptr %209, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  %210 = load ptr, ptr %11, align 8, !tbaa !67
  %211 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %210, i64 1
  store ptr %211, ptr %11, align 8, !tbaa !67
  br label %213

212:                                              ; preds = %156
  invoke void @_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue1ESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr %157, ptr noundef nonnull align 8 dereferenceable(80) %8)
          to label %213 unwind label %239

213:                                              ; preds = %205, %212
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !9
  %214 = load ptr, ptr %37, align 8, !tbaa !63
  %215 = icmp eq ptr %214, %39
  br i1 %215, label %216, label %219

216:                                              ; preds = %213
  %217 = load i64, ptr %38, align 8, !tbaa !13
  %218 = icmp ult i64 %217, 16
  call void @llvm.assume(i1 %218)
  br label %220

219:                                              ; preds = %213
  call void @_ZdlPv(ptr noundef %214) #26
  br label %220

220:                                              ; preds = %219, %216
  %221 = load ptr, ptr %35, align 8, !tbaa !63
  %222 = icmp eq ptr %221, %40
  br i1 %222, label %223, label %226

223:                                              ; preds = %220
  %224 = load i64, ptr %36, align 8, !tbaa !13
  %225 = icmp ult i64 %224, 16
  call void @llvm.assume(i1 %225)
  br label %227

226:                                              ; preds = %220
  call void @_ZdlPv(ptr noundef %221) #26
  br label %227

227:                                              ; preds = %226, %223
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %8) #28
  %228 = load ptr, ptr %5, align 8, !tbaa !63
  %229 = icmp eq ptr %228, %27
  br i1 %229, label %230, label %233

230:                                              ; preds = %227
  %231 = load i64, ptr %28, align 8, !tbaa !13
  %232 = icmp ult i64 %231, 16
  call void @llvm.assume(i1 %232)
  br label %234

233:                                              ; preds = %227
  call void @_ZdlPv(ptr noundef %228) #26
  br label %234

234:                                              ; preds = %230, %233
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #28
  %235 = call noundef ptr @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(ptr noundef nonnull %44) #29
  %236 = icmp eq ptr %235, %24
  br i1 %236, label %42, label %43

237:                                              ; preds = %155
  %238 = landingpad { ptr, i32 }
          cleanup
  br label %243

239:                                              ; preds = %168, %212
  %240 = landingpad { ptr, i32 }
          cleanup
  br label %241

241:                                              ; preds = %200, %204, %239
  %242 = phi { ptr, i32 } [ %240, %239 ], [ %197, %204 ], [ %197, %200 ]
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1D2Ev(ptr noundef nonnull align 8 dereferenceable(80) %8)
          to label %243 unwind label %256

243:                                              ; preds = %241, %237
  %244 = phi { ptr, i32 } [ %238, %237 ], [ %242, %241 ]
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %8) #28
  br label %245

245:                                              ; preds = %243, %153, %145, %127
  %246 = phi { ptr, i32 } [ %244, %243 ], [ %128, %127 ], [ %154, %153 ], [ %138, %145 ]
  %247 = load ptr, ptr %5, align 8, !tbaa !63
  %248 = icmp eq ptr %247, %27
  br i1 %248, label %249, label %252

249:                                              ; preds = %245
  %250 = load i64, ptr %28, align 8, !tbaa !13
  %251 = icmp ult i64 %250, 16
  call void @llvm.assume(i1 %251)
  br label %253

252:                                              ; preds = %245
  call void @_ZdlPv(ptr noundef %247) #26
  br label %253

253:                                              ; preds = %252, %249
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #28
  br label %254

254:                                              ; preds = %253, %77, %61
  %255 = phi { ptr, i32 } [ %246, %253 ], [ %78, %77 ], [ %62, %61 ]
  resume { ptr, i32 } %255

256:                                              ; preds = %241
  %257 = landingpad { ptr, i32 }
          catch ptr null
  %258 = extractvalue { ptr, i32 } %257, 0
  call void @__clang_call_terminate(ptr %258) #27
  unreachable

259:                                              ; preds = %152
  unreachable
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare noundef ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare noundef ptr @strrchr(ptr noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: sspstrong uwtable
define dso_local noundef ptr @_ZN25SectionBasedConfiguration18lookupConfigOptionEPKc(ptr noundef %0) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = alloca %class.PatternMatcher, align 8
  %4 = tail call noundef ptr @_ZN23cGlobalRegistrationList11getInstanceEv(ptr noundef nonnull align 8 dereferenceable(16) @configOptions)
  %5 = load ptr, ptr %4, align 8, !tbaa !9
  %6 = getelementptr inbounds ptr, ptr %5, i64 26
  %7 = load ptr, ptr %6, align 8
  %8 = tail call noundef ptr %7(ptr noundef nonnull align 8 dereferenceable(144) %4, ptr noundef %0)
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %72

10:                                               ; preds = %1
  %11 = tail call noundef ptr @_ZN23cGlobalRegistrationList11getInstanceEv(ptr noundef nonnull align 8 dereferenceable(16) @configOptions)
  %12 = load ptr, ptr %11, align 8, !tbaa !9
  %13 = getelementptr inbounds ptr, ptr %12, i64 23
  %14 = load ptr, ptr %13, align 8
  %15 = tail call noundef i32 %14(ptr noundef nonnull align 8 dereferenceable(144) %11)
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %72

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 2
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  br label %20

20:                                               ; preds = %17, %69
  %21 = phi i32 [ 0, %17 ], [ %70, %69 ]
  %22 = call noundef ptr @_ZN23cGlobalRegistrationList11getInstanceEv(ptr noundef nonnull align 8 dereferenceable(16) @configOptions)
  %23 = load ptr, ptr %22, align 8, !tbaa !9
  %24 = getelementptr inbounds ptr, ptr %23, i64 24
  %25 = load ptr, ptr %24, align 8
  %26 = call noundef ptr %25(ptr noundef nonnull align 8 dereferenceable(144) %22, i32 noundef %21)
  %27 = load ptr, ptr %26, align 8, !tbaa !9
  %28 = getelementptr inbounds ptr, ptr %27, i64 6
  %29 = load ptr, ptr %28, align 8
  %30 = call noundef ptr %29(ptr noundef nonnull align 8 dereferenceable(20) %26)
  %31 = call noundef zeroext i1 @_ZN14PatternMatcher17containsWildcardsEPKc(ptr noundef %30)
  br i1 %31, label %39, label %32

32:                                               ; preds = %20
  %33 = load ptr, ptr %26, align 8, !tbaa !9
  %34 = getelementptr inbounds ptr, ptr %33, i64 6
  %35 = load ptr, ptr %34, align 8
  %36 = call noundef ptr %35(ptr noundef nonnull align 8 dereferenceable(20) %26)
  %37 = call noundef ptr @strchr(ptr noundef nonnull dereferenceable(1) %36, i32 noundef 37) #29
  %38 = icmp eq ptr %37, null
  br i1 %38, label %69, label %39

39:                                               ; preds = %32, %20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #28
  %40 = load ptr, ptr %26, align 8, !tbaa !9
  %41 = getelementptr inbounds ptr, ptr %40, i64 6
  %42 = load ptr, ptr %41, align 8
  %43 = call noundef ptr %42(ptr noundef nonnull align 8 dereferenceable(20) %26)
  call void @_Z20opp_replacesubstringB5cxx11PKcS0_S0_b(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %2, ptr noundef %43, ptr noundef nonnull @.str.118, ptr noundef nonnull @.str.119, i1 noundef zeroext true)
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %3) #28
  %44 = load ptr, ptr %2, align 8, !tbaa !63
  invoke void @_ZN14PatternMatcherC1EPKcbbb(ptr noundef nonnull align 8 dereferenceable(64) %3, ptr noundef %44, i1 noundef zeroext false, i1 noundef zeroext true, i1 noundef zeroext true)
          to label %45 unwind label %56

45:                                               ; preds = %39
  %46 = invoke noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64) %3, ptr noundef %0)
          to label %47 unwind label %58

47:                                               ; preds = %45
  invoke void @_ZN14PatternMatcherD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %3)
          to label %48 unwind label %56

48:                                               ; preds = %47
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %3) #28
  %49 = load ptr, ptr %2, align 8, !tbaa !63
  %50 = icmp eq ptr %49, %18
  br i1 %50, label %51, label %54

51:                                               ; preds = %48
  %52 = load i64, ptr %19, align 8, !tbaa !13
  %53 = icmp ult i64 %52, 16
  call void @llvm.assume(i1 %53)
  br label %55

54:                                               ; preds = %48
  call void @_ZdlPv(ptr noundef %49) #26
  br label %55

55:                                               ; preds = %51, %54
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #28
  br i1 %46, label %72, label %69

56:                                               ; preds = %47, %39
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %60

58:                                               ; preds = %45
  %59 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN14PatternMatcherD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %3)
          to label %60 unwind label %74

60:                                               ; preds = %58, %56
  %61 = phi { ptr, i32 } [ %57, %56 ], [ %59, %58 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %3) #28
  %62 = load ptr, ptr %2, align 8, !tbaa !63
  %63 = icmp eq ptr %62, %18
  br i1 %63, label %64, label %67

64:                                               ; preds = %60
  %65 = load i64, ptr %19, align 8, !tbaa !13
  %66 = icmp ult i64 %65, 16
  call void @llvm.assume(i1 %66)
  br label %68

67:                                               ; preds = %60
  call void @_ZdlPv(ptr noundef %62) #26
  br label %68

68:                                               ; preds = %67, %64
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #28
  resume { ptr, i32 } %61

69:                                               ; preds = %32, %55
  %70 = add nuw nsw i32 %21, 1
  %71 = icmp eq i32 %70, %15
  br i1 %71, label %72, label %20

72:                                               ; preds = %55, %69, %10, %1
  %73 = phi ptr [ %8, %1 ], [ null, %10 ], [ %26, %55 ], [ null, %69 ]
  ret ptr %73

74:                                               ; preds = %58
  %75 = landingpad { ptr, i32 }
          catch ptr null
  %76 = extractvalue { ptr, i32 } %75, 0
  call void @__clang_call_terminate(ptr %76) #27
  unreachable
}

declare ptr @__cxa_allocate_exception(i64) local_unnamed_addr

declare void @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124), ptr noundef, ...) unnamed_addr #1

declare void @__cxa_free_exception(ptr) local_unnamed_addr

declare void @__cxa_throw(ptr, ptr, ptr) local_unnamed_addr

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN25SectionBasedConfiguration9KeyValue1C2EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcSA_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !9
  %5 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2, i32 2
  store ptr %6, ptr %5, align 8, !tbaa !11
  %7 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2, i32 1
  store i64 0, ptr %7, align 8, !tbaa !13
  store i8 0, ptr %6, align 8, !tbaa !16
  %8 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3, i32 2
  store ptr %9, ptr %8, align 8, !tbaa !11
  %10 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3, i32 1
  store i64 0, ptr %10, align 8, !tbaa !13
  store i8 0, ptr %9, align 8, !tbaa !16
  %11 = icmp eq ptr %1, null
  %12 = select i1 %11, ptr @_ZN25SectionBasedConfiguration9KeyValue111nullbasedirB5cxx11E, ptr %1
  %13 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 1
  store ptr %12, ptr %13, align 8, !tbaa !85
  %14 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %2) #28
  %15 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef 0, i64 noundef 0, ptr noundef %2, i64 noundef %14)
          to label %16 unwind label %21

16:                                               ; preds = %4
  %17 = load i64, ptr %10, align 8, !tbaa !13
  %18 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %3) #28
  %19 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %8, i64 noundef 0, i64 noundef %17, ptr noundef %3, i64 noundef %18)
          to label %20 unwind label %21

20:                                               ; preds = %16
  ret void

21:                                               ; preds = %16, %4
  %22 = landingpad { ptr, i32 }
          cleanup
  %23 = load ptr, ptr %8, align 8, !tbaa !63
  %24 = icmp eq ptr %23, %9
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = load i64, ptr %10, align 8, !tbaa !13
  %27 = icmp ult i64 %26, 16
  tail call void @llvm.assume(i1 %27)
  br label %29

28:                                               ; preds = %21
  tail call void @_ZdlPv(ptr noundef %23) #26
  br label %29

29:                                               ; preds = %28, %25
  %30 = load ptr, ptr %5, align 8, !tbaa !63
  %31 = icmp eq ptr %30, %6
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = load i64, ptr %7, align 8, !tbaa !13
  %34 = icmp ult i64 %33, 16
  tail call void @llvm.assume(i1 %34)
  br label %36

35:                                               ; preds = %29
  tail call void @_ZdlPv(ptr noundef %30) #26
  br label %36

36:                                               ; preds = %35, %32
  resume { ptr, i32 } %22
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN25SectionBasedConfiguration14initializeFromEP14cConfiguration(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #28
  %4 = load ptr, ptr @CFGID_SECTIONBASEDCONFIG_CONFIGREADER_CLASS, align 8, !tbaa !5
  %5 = load ptr, ptr %1, align 8, !tbaa !9
  %6 = getelementptr inbounds ptr, ptr %5, i64 28
  %7 = load ptr, ptr %6, align 8
  call void %7(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %3, ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef %4, ptr noundef nonnull @.str.14)
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !13
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %2
  %12 = call ptr @__cxa_allocate_exception(i64 128) #28
  %13 = load ptr, ptr @CFGID_SECTIONBASEDCONFIG_CONFIGREADER_CLASS, align 8, !tbaa !5
  %14 = load ptr, ptr %13, align 8, !tbaa !9
  %15 = getelementptr inbounds ptr, ptr %14, i64 6
  %16 = load ptr, ptr %15, align 8
  %17 = invoke noundef ptr %16(ptr noundef nonnull align 8 dereferenceable(20) %13)
          to label %18 unwind label %22

18:                                               ; preds = %11
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %12, ptr noundef nonnull @.str.15, ptr noundef %17)
          to label %19 unwind label %22

19:                                               ; preds = %18
  invoke void @__cxa_throw(ptr nonnull %12, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %67 unwind label %20

20:                                               ; preds = %19
  %21 = landingpad { ptr, i32 }
          cleanup
  br label %57

22:                                               ; preds = %18, %11
  %23 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %12) #28
  br label %57

24:                                               ; preds = %2
  %25 = load ptr, ptr %3, align 8, !tbaa !63
  %26 = invoke noundef ptr @_ZN13cClassFactory9createOneEPKc(ptr noundef %25)
          to label %27 unwind label %29

27:                                               ; preds = %24
  %28 = icmp eq ptr %26, null
  br i1 %28, label %34, label %31

29:                                               ; preds = %24, %44, %40, %37
  %30 = landingpad { ptr, i32 }
          cleanup
  br label %57

31:                                               ; preds = %27
  %32 = call ptr @__dynamic_cast(ptr nonnull %26, ptr nonnull @_ZTI7cObject, ptr nonnull @_ZTI20cConfigurationReader, i64 -2) #28
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %40

34:                                               ; preds = %27, %31
  %35 = call ptr @__cxa_allocate_exception(i64 128) #28
  %36 = load ptr, ptr %3, align 8, !tbaa !63
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %35, ptr noundef nonnull @.str.16, ptr noundef %36)
          to label %37 unwind label %38

37:                                               ; preds = %34
  invoke void @__cxa_throw(ptr nonnull %35, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %67 unwind label %29

38:                                               ; preds = %34
  %39 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %35) #28
  br label %57

40:                                               ; preds = %31
  %41 = load ptr, ptr %32, align 8, !tbaa !9
  %42 = getelementptr inbounds ptr, ptr %41, i64 2
  %43 = load ptr, ptr %42, align 8
  invoke void %43(ptr noundef nonnull align 8 dereferenceable(8) %32, ptr noundef nonnull %1)
          to label %44 unwind label %29

44:                                               ; preds = %40
  %45 = load ptr, ptr %0, align 8, !tbaa !9
  %46 = getelementptr inbounds ptr, ptr %45, i64 62
  %47 = load ptr, ptr %46, align 8
  invoke void %47(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull %32)
          to label %48 unwind label %29

48:                                               ; preds = %44
  %49 = load ptr, ptr %3, align 8, !tbaa !63
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  %51 = icmp eq ptr %49, %50
  br i1 %51, label %52, label %55

52:                                               ; preds = %48
  %53 = load i64, ptr %8, align 8, !tbaa !13
  %54 = icmp ult i64 %53, 16
  call void @llvm.assume(i1 %54)
  br label %56

55:                                               ; preds = %48
  call void @_ZdlPv(ptr noundef %49) #26
  br label %56

56:                                               ; preds = %52, %55
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #28
  ret void

57:                                               ; preds = %29, %38, %22, %20
  %58 = phi { ptr, i32 } [ %21, %20 ], [ %23, %22 ], [ %30, %29 ], [ %39, %38 ]
  %59 = load ptr, ptr %3, align 8, !tbaa !63
  %60 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  %61 = icmp eq ptr %59, %60
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = load i64, ptr %8, align 8, !tbaa !13
  %64 = icmp ult i64 %63, 16
  call void @llvm.assume(i1 %64)
  br label %66

65:                                               ; preds = %57
  call void @_ZdlPv(ptr noundef %59) #26
  br label %66

66:                                               ; preds = %65, %62
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #28
  resume { ptr, i32 } %58

67:                                               ; preds = %37, %19
  unreachable
}

; Function Attrs: nofree nounwind memory(read)
declare ptr @__dynamic_cast(ptr, ptr, ptr, i64) local_unnamed_addr #8

; Function Attrs: sspstrong uwtable
define dso_local noundef ptr @_ZNK25SectionBasedConfiguration11getFileNameEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %0) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !25
  %4 = icmp eq ptr %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = load ptr, ptr %3, align 8, !tbaa !9
  %7 = getelementptr inbounds ptr, ptr %6, i64 3
  %8 = load ptr, ptr %7, align 8
  %9 = tail call noundef ptr %8(ptr noundef nonnull align 8 dereferenceable(8) %3)
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi ptr [ %9, %5 ], [ null, %1 ]
  ret ptr %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local noundef ptr @_ZNK25SectionBasedConfiguration19getActiveConfigNameEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %0) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local noundef i32 @_ZNK25SectionBasedConfiguration18getActiveRunNumberEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %0) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 4
  %3 = load i32, ptr %2, align 8, !tbaa !62
  ret i32 %3
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN25SectionBasedConfiguration14getConfigNamesB5cxx11Ev(ptr noalias sret(%"class.std::vector.31") align 8 %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %9 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 1
  br label %16

16:                                               ; preds = %170, %2
  %17 = phi i32 [ 0, %2 ], [ %171, %170 ]
  %18 = load ptr, ptr %9, align 8, !tbaa !25
  %19 = load ptr, ptr %18, align 8, !tbaa !9
  %20 = getelementptr inbounds ptr, ptr %19, i64 5
  %21 = load ptr, ptr %20, align 8
  %22 = invoke noundef i32 %21(ptr noundef nonnull align 8 dereferenceable(8) %18)
          to label %23 unwind label %25

23:                                               ; preds = %16
  %24 = icmp slt i32 %17, %22
  br i1 %24, label %27, label %174

25:                                               ; preds = %16
  %26 = landingpad { ptr, i32 }
          cleanup
  br label %172

27:                                               ; preds = %23
  %28 = load ptr, ptr %9, align 8, !tbaa !25
  %29 = load ptr, ptr %28, align 8, !tbaa !9
  %30 = getelementptr inbounds ptr, ptr %29, i64 6
  %31 = load ptr, ptr %30, align 8
  %32 = invoke noundef ptr %31(ptr noundef nonnull align 8 dereferenceable(8) %28, i32 noundef %17)
          to label %33 unwind label %89

33:                                               ; preds = %27
  %34 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %32, ptr noundef nonnull dereferenceable(8) @.str.17) #29
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %105

36:                                               ; preds = %33
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #28
  store ptr %14, ptr %7, align 8, !tbaa !11
  %37 = icmp eq ptr %32, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  invoke void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
          to label %39 unwind label %93

39:                                               ; preds = %38
  unreachable

40:                                               ; preds = %36
  %41 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %32) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #28
  store i64 %41, ptr %6, align 8, !tbaa !87
  %42 = icmp ugt i64 %41, 15
  br i1 %42, label %43, label %47

43:                                               ; preds = %40
  %44 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %7, ptr noundef nonnull align 8 dereferenceable(8) %6, i64 noundef 0)
          to label %45 unwind label %91

45:                                               ; preds = %43
  store ptr %44, ptr %7, align 8, !tbaa !63
  %46 = load i64, ptr %6, align 8, !tbaa !87
  store i64 %46, ptr %14, align 8, !tbaa !16
  br label %47

47:                                               ; preds = %45, %40
  %48 = phi ptr [ %44, %45 ], [ %14, %40 ]
  switch i64 %41, label %51 [
    i64 1, label %49
    i64 0, label %52
  ]

49:                                               ; preds = %47
  %50 = load i8, ptr %32, align 1, !tbaa !16
  store i8 %50, ptr %48, align 1, !tbaa !16
  br label %52

51:                                               ; preds = %47
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %48, ptr nonnull align 1 %32, i64 %41, i1 false)
  br label %52

52:                                               ; preds = %51, %49, %47
  %53 = load i64, ptr %6, align 8, !tbaa !87
  store i64 %53, ptr %15, align 8, !tbaa !13
  %54 = load ptr, ptr %7, align 8, !tbaa !63
  %55 = getelementptr inbounds i8, ptr %54, i64 %53
  store i8 0, ptr %55, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #28
  %56 = load ptr, ptr %12, align 8, !tbaa !5
  %57 = load ptr, ptr %13, align 8, !tbaa !88
  %58 = icmp eq ptr %56, %57
  br i1 %58, label %80, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %56, i64 0, i32 2
  store ptr %60, ptr %56, align 8, !tbaa !11
  %61 = load ptr, ptr %7, align 8, !tbaa !63
  %62 = load i64, ptr %15, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #28
  store i64 %62, ptr %5, align 8, !tbaa !87
  %63 = icmp ugt i64 %62, 15
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %56, ptr noundef nonnull align 8 dereferenceable(8) %5, i64 noundef 0)
          to label %66 unwind label %95

66:                                               ; preds = %64
  store ptr %65, ptr %56, align 8, !tbaa !63
  %67 = load i64, ptr %5, align 8, !tbaa !87
  store i64 %67, ptr %60, align 8, !tbaa !16
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi ptr [ %65, %66 ], [ %60, %59 ]
  switch i64 %62, label %72 [
    i64 1, label %70
    i64 0, label %73
  ]

70:                                               ; preds = %68
  %71 = load i8, ptr %61, align 1, !tbaa !16
  store i8 %71, ptr %69, align 1, !tbaa !16
  br label %73

72:                                               ; preds = %68
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %69, ptr align 1 %61, i64 %62, i1 false)
  br label %73

73:                                               ; preds = %72, %70, %68
  %74 = load i64, ptr %5, align 8, !tbaa !87
  %75 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %56, i64 0, i32 1
  store i64 %74, ptr %75, align 8, !tbaa !13
  %76 = load ptr, ptr %56, align 8, !tbaa !63
  %77 = getelementptr inbounds i8, ptr %76, i64 %74
  store i8 0, ptr %77, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #28
  %78 = load ptr, ptr %12, align 8, !tbaa !90
  %79 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %78, i64 1
  store ptr %79, ptr %12, align 8, !tbaa !90
  br label %81

80:                                               ; preds = %52
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %56, ptr noundef nonnull align 8 dereferenceable(32) %7)
          to label %81 unwind label %95

81:                                               ; preds = %73, %80
  %82 = load ptr, ptr %7, align 8, !tbaa !63
  %83 = icmp eq ptr %82, %14
  br i1 %83, label %84, label %87

84:                                               ; preds = %81
  %85 = load i64, ptr %15, align 8, !tbaa !13
  %86 = icmp ult i64 %85, 16
  call void @llvm.assume(i1 %86)
  br label %88

87:                                               ; preds = %81
  call void @_ZdlPv(ptr noundef %82) #26
  br label %88

88:                                               ; preds = %87, %84
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #28
  br label %170

89:                                               ; preds = %27
  %90 = landingpad { ptr, i32 }
          cleanup
  br label %172

91:                                               ; preds = %43
  %92 = landingpad { ptr, i32 }
          cleanup
  br label %103

93:                                               ; preds = %38
  %94 = landingpad { ptr, i32 }
          cleanup
  br label %103

95:                                               ; preds = %80, %64
  %96 = landingpad { ptr, i32 }
          cleanup
  %97 = load ptr, ptr %7, align 8, !tbaa !63
  %98 = icmp eq ptr %97, %14
  br i1 %98, label %99, label %102

99:                                               ; preds = %95
  %100 = load i64, ptr %15, align 8, !tbaa !13
  %101 = icmp ult i64 %100, 16
  call void @llvm.assume(i1 %101)
  br label %103

102:                                              ; preds = %95
  call void @_ZdlPv(ptr noundef %97) #26
  br label %103

103:                                              ; preds = %91, %93, %102, %99
  %104 = phi { ptr, i32 } [ %96, %99 ], [ %96, %102 ], [ %92, %91 ], [ %94, %93 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #28
  br label %172

105:                                              ; preds = %33
  %106 = call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %32, ptr noundef nonnull dereferenceable(8) @.str.18, i64 noundef 7) #29
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %170

108:                                              ; preds = %105
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %8) #28
  %109 = getelementptr inbounds i8, ptr %32, i64 7
  store ptr %10, ptr %8, align 8, !tbaa !11
  %110 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %109) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %110, ptr %4, align 8, !tbaa !87
  %111 = icmp ugt i64 %110, 15
  br i1 %111, label %112, label %116

112:                                              ; preds = %108
  %113 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %8, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %114 unwind label %158

114:                                              ; preds = %112
  store ptr %113, ptr %8, align 8, !tbaa !63
  %115 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %115, ptr %10, align 8, !tbaa !16
  br label %116

116:                                              ; preds = %114, %108
  %117 = phi ptr [ %113, %114 ], [ %10, %108 ]
  switch i64 %110, label %120 [
    i64 1, label %118
    i64 0, label %121
  ]

118:                                              ; preds = %116
  %119 = load i8, ptr %109, align 1, !tbaa !16
  store i8 %119, ptr %117, align 1, !tbaa !16
  br label %121

120:                                              ; preds = %116
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %117, ptr nonnull align 1 %109, i64 %110, i1 false)
  br label %121

121:                                              ; preds = %120, %118, %116
  %122 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %122, ptr %11, align 8, !tbaa !13
  %123 = load ptr, ptr %8, align 8, !tbaa !63
  %124 = getelementptr inbounds i8, ptr %123, i64 %122
  store i8 0, ptr %124, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %125 = load ptr, ptr %12, align 8, !tbaa !5
  %126 = load ptr, ptr %13, align 8, !tbaa !88
  %127 = icmp eq ptr %125, %126
  br i1 %127, label %149, label %128

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %125, i64 0, i32 2
  store ptr %129, ptr %125, align 8, !tbaa !11
  %130 = load ptr, ptr %8, align 8, !tbaa !63
  %131 = load i64, ptr %11, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #28
  store i64 %131, ptr %3, align 8, !tbaa !87
  %132 = icmp ugt i64 %131, 15
  br i1 %132, label %133, label %137

133:                                              ; preds = %128
  %134 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %125, ptr noundef nonnull align 8 dereferenceable(8) %3, i64 noundef 0)
          to label %135 unwind label %160

135:                                              ; preds = %133
  store ptr %134, ptr %125, align 8, !tbaa !63
  %136 = load i64, ptr %3, align 8, !tbaa !87
  store i64 %136, ptr %129, align 8, !tbaa !16
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi ptr [ %134, %135 ], [ %129, %128 ]
  switch i64 %131, label %141 [
    i64 1, label %139
    i64 0, label %142
  ]

139:                                              ; preds = %137
  %140 = load i8, ptr %130, align 1, !tbaa !16
  store i8 %140, ptr %138, align 1, !tbaa !16
  br label %142

141:                                              ; preds = %137
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %138, ptr align 1 %130, i64 %131, i1 false)
  br label %142

142:                                              ; preds = %141, %139, %137
  %143 = load i64, ptr %3, align 8, !tbaa !87
  %144 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %125, i64 0, i32 1
  store i64 %143, ptr %144, align 8, !tbaa !13
  %145 = load ptr, ptr %125, align 8, !tbaa !63
  %146 = getelementptr inbounds i8, ptr %145, i64 %143
  store i8 0, ptr %146, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  %147 = load ptr, ptr %12, align 8, !tbaa !90
  %148 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %147, i64 1
  store ptr %148, ptr %12, align 8, !tbaa !90
  br label %150

149:                                              ; preds = %121
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %125, ptr noundef nonnull align 8 dereferenceable(32) %8)
          to label %150 unwind label %160

150:                                              ; preds = %142, %149
  %151 = load ptr, ptr %8, align 8, !tbaa !63
  %152 = icmp eq ptr %151, %10
  br i1 %152, label %153, label %156

153:                                              ; preds = %150
  %154 = load i64, ptr %11, align 8, !tbaa !13
  %155 = icmp ult i64 %154, 16
  call void @llvm.assume(i1 %155)
  br label %157

156:                                              ; preds = %150
  call void @_ZdlPv(ptr noundef %151) #26
  br label %157

157:                                              ; preds = %156, %153
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #28
  br label %170

158:                                              ; preds = %112
  %159 = landingpad { ptr, i32 }
          cleanup
  br label %168

160:                                              ; preds = %149, %133
  %161 = landingpad { ptr, i32 }
          cleanup
  %162 = load ptr, ptr %8, align 8, !tbaa !63
  %163 = icmp eq ptr %162, %10
  br i1 %163, label %164, label %167

164:                                              ; preds = %160
  %165 = load i64, ptr %11, align 8, !tbaa !13
  %166 = icmp ult i64 %165, 16
  call void @llvm.assume(i1 %166)
  br label %168

167:                                              ; preds = %160
  call void @_ZdlPv(ptr noundef %162) #26
  br label %168

168:                                              ; preds = %167, %164, %158
  %169 = phi { ptr, i32 } [ %159, %158 ], [ %161, %164 ], [ %161, %167 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #28
  br label %172

170:                                              ; preds = %157, %105, %88
  %171 = add nuw nsw i32 %17, 1
  br label %16

172:                                              ; preds = %89, %103, %168, %25
  %173 = phi { ptr, i32 } [ %26, %25 ], [ %104, %103 ], [ %169, %168 ], [ %90, %89 ]
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0)
          to label %175 unwind label %176

174:                                              ; preds = %23
  ret void

175:                                              ; preds = %172
  resume { ptr, i32 } %173

176:                                              ; preds = %172
  %177 = landingpad { ptr, i32 }
          catch ptr null
  %178 = extractvalue { ptr, i32 } %177, 0
  call void @__clang_call_terminate(ptr %178) #27
  unreachable
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #7

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !91
  %3 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !90
  %5 = icmp eq ptr %2, %4
  br i1 %5, label %21, label %6

6:                                                ; preds = %1, %16
  %7 = phi ptr [ %17, %16 ], [ %2, %1 ]
  %8 = load ptr, ptr %7, align 8, !tbaa !63
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 1
  %13 = load i64, ptr %12, align 8, !tbaa !13
  %14 = icmp ult i64 %13, 16
  tail call void @llvm.assume(i1 %14)
  br label %16

15:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef %8) #26
  br label %16

16:                                               ; preds = %15, %11
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 1
  %18 = icmp eq ptr %17, %4
  br i1 %18, label %19, label %6

19:                                               ; preds = %16
  %20 = load ptr, ptr %0, align 8, !tbaa !91
  br label %21

21:                                               ; preds = %19, %1
  %22 = phi ptr [ %20, %19 ], [ %2, %1 ]
  %23 = icmp eq ptr %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %21
  tail call void @_ZdlPv(ptr noundef nonnull %22) #26
  br label %25

25:                                               ; preds = %21, %24
  ret void
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK25SectionBasedConfiguration20getConfigDescriptionB5cxx11EPKc(ptr noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %1, ptr noundef %2) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::vector.36", align 8
  %6 = tail call noundef i32 @_ZNK25SectionBasedConfiguration17resolveConfigNameEPKc(ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %2)
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = tail call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %9, ptr noundef nonnull @.str.19, ptr noundef %2)
          to label %10 unwind label %11

10:                                               ; preds = %8
  tail call void @__cxa_throw(ptr nonnull %9, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
  unreachable

11:                                               ; preds = %8
  %12 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_free_exception(ptr %9) #28
  br label %61

13:                                               ; preds = %3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #28
  %14 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !25, !noalias !92
  %16 = load ptr, ptr %15, align 8, !tbaa !9, !noalias !92
  %17 = getelementptr inbounds ptr, ptr %16, i64 6
  %18 = load ptr, ptr %17, align 8, !noalias !92
  %19 = tail call noundef ptr %18(ptr noundef nonnull align 8 dereferenceable(8) %15, i32 noundef %6), !noalias !92
  call void @_ZNK25SectionBasedConfiguration19resolveSectionChainEPKc(ptr nonnull sret(%"class.std::vector.36") align 8 %5, ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %19)
  %20 = load ptr, ptr @CFGID_DESCRIPTION, align 8, !tbaa !5
  %21 = load ptr, ptr %20, align 8, !tbaa !9
  %22 = getelementptr inbounds ptr, ptr %21, i64 6
  %23 = load ptr, ptr %22, align 8
  %24 = invoke noundef ptr %23(ptr noundef nonnull align 8 dereferenceable(20) %20)
          to label %25 unwind label %51

25:                                               ; preds = %13
  %26 = invoke noundef ptr @_ZNK25SectionBasedConfiguration16internalGetValueERKSt6vectorIiSaIiEEPKcS6_(ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %24, ptr noundef null)
          to label %27 unwind label %51

27:                                               ; preds = %25
  %28 = icmp eq ptr %26, null
  %29 = select i1 %28, ptr @.str.14, ptr %26
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %30, ptr %0, align 8, !tbaa !11
  %31 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %29) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %31, ptr %4, align 8, !tbaa !87
  %32 = icmp ugt i64 %31, 15
  br i1 %32, label %33, label %37

33:                                               ; preds = %27
  %34 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %35 unwind label %53

35:                                               ; preds = %33
  store ptr %34, ptr %0, align 8, !tbaa !63
  %36 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %36, ptr %30, align 8, !tbaa !16
  br label %37

37:                                               ; preds = %35, %27
  %38 = phi ptr [ %34, %35 ], [ %30, %27 ]
  switch i64 %31, label %41 [
    i64 1, label %39
    i64 0, label %42
  ]

39:                                               ; preds = %37
  %40 = load i8, ptr %29, align 1, !tbaa !16
  store i8 %40, ptr %38, align 1, !tbaa !16
  br label %42

41:                                               ; preds = %37
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %38, ptr nonnull align 1 %29, i64 %31, i1 false)
  br label %42

42:                                               ; preds = %41, %39, %37
  %43 = load i64, ptr %4, align 8, !tbaa !87
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %43, ptr %44, align 8, !tbaa !13
  %45 = load ptr, ptr %0, align 8, !tbaa !63
  %46 = getelementptr inbounds i8, ptr %45, i64 %43
  store i8 0, ptr %46, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %47 = load ptr, ptr %5, align 8, !tbaa !95
  %48 = icmp eq ptr %47, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %42
  call void @_ZdlPv(ptr noundef nonnull %47) #26
  br label %50

50:                                               ; preds = %42, %49
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #28
  ret void

51:                                               ; preds = %25, %13
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %55

53:                                               ; preds = %33
  %54 = landingpad { ptr, i32 }
          cleanup
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi { ptr, i32 } [ %54, %53 ], [ %52, %51 ]
  %57 = load ptr, ptr %5, align 8, !tbaa !95
  %58 = icmp eq ptr %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %55
  call void @_ZdlPv(ptr noundef nonnull %57) #26
  br label %60

60:                                               ; preds = %59, %55
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #28
  br label %61

61:                                               ; preds = %60, %11
  %62 = phi { ptr, i32 } [ %12, %11 ], [ %56, %60 ]
  resume { ptr, i32 } %62
}

; Function Attrs: sspstrong uwtable
define dso_local noundef i32 @_ZNK25SectionBasedConfiguration17resolveConfigNameEPKc(ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %0, ptr noundef %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = icmp eq ptr %1, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = load i8, ptr %1, align 1, !tbaa !16
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %6, %2
  %10 = tail call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %10, ptr noundef nonnull @.str.20)
          to label %11 unwind label %12

11:                                               ; preds = %9
  tail call void @__cxa_throw(ptr nonnull %10, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
  unreachable

12:                                               ; preds = %9
  %13 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_free_exception(ptr %10) #28
  br label %140

14:                                               ; preds = %6
  %15 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %1, ptr noundef nonnull dereferenceable(8) @.str.17) #29
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %42

17:                                               ; preds = %14
  %18 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !25
  %20 = load ptr, ptr %19, align 8, !tbaa !9
  %21 = getelementptr inbounds ptr, ptr %20, i64 5
  %22 = load ptr, ptr %21, align 8
  %23 = tail call noundef i32 %22(ptr noundef nonnull align 8 dereferenceable(8) %19)
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %42

25:                                               ; preds = %17, %34
  %26 = phi i32 [ %35, %34 ], [ 0, %17 ]
  %27 = load ptr, ptr %18, align 8, !tbaa !25
  %28 = load ptr, ptr %27, align 8, !tbaa !9
  %29 = getelementptr inbounds ptr, ptr %28, i64 6
  %30 = load ptr, ptr %29, align 8
  %31 = tail call noundef ptr %30(ptr noundef nonnull align 8 dereferenceable(8) %27, i32 noundef %26)
  %32 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(8) @.str.17, ptr noundef nonnull dereferenceable(1) %31) #29
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %138, label %34

34:                                               ; preds = %25
  %35 = add nuw nsw i32 %26, 1
  %36 = load ptr, ptr %18, align 8, !tbaa !25
  %37 = load ptr, ptr %36, align 8, !tbaa !9
  %38 = getelementptr inbounds ptr, ptr %37, i64 5
  %39 = load ptr, ptr %38, align 8
  %40 = tail call noundef i32 %39(ptr noundef nonnull align 8 dereferenceable(8) %36)
  %41 = icmp slt i32 %35, %40
  br i1 %41, label %25, label %42

42:                                               ; preds = %34, %14, %17
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #28
  %43 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 2
  store ptr %43, ptr %4, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %43, ptr noundef nonnull align 1 dereferenceable(7) @.str.18, i64 7, i1 false)
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 1
  store i64 7, ptr %44, align 8, !tbaa !13
  %45 = getelementptr inbounds i8, ptr %4, i64 23
  store i8 0, ptr %45, align 1, !tbaa !16
  call void @llvm.experimental.noalias.scope.decl(metadata !97)
  %46 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #28, !noalias !97
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %47, ptr %3, align 8, !tbaa !11, !alias.scope !100
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  store i64 0, ptr %48, align 8, !tbaa !13, !alias.scope !100
  store i8 0, ptr %47, align 8, !tbaa !16, !alias.scope !100
  %49 = add i64 %46, 7
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %49)
          to label %50 unwind label %64

50:                                               ; preds = %42
  %51 = load i64, ptr %48, align 8, !tbaa !13, !alias.scope !100
  %52 = add i64 %51, -4611686018427387897
  %53 = icmp ult i64 %52, 7
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull %43, i64 noundef 7)
          to label %56 unwind label %64

56:                                               ; preds = %54
  %57 = load i64, ptr %48, align 8, !tbaa !13, !alias.scope !100
  %58 = sub i64 4611686018427387903, %57
  %59 = icmp ult i64 %58, %46
  br i1 %59, label %60, label %62

60:                                               ; preds = %56, %50
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %61 unwind label %64

61:                                               ; preds = %60
  unreachable

62:                                               ; preds = %56
  %63 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull %1, i64 noundef %46)
          to label %72 unwind label %64

64:                                               ; preds = %62, %60, %54, %42
  %65 = landingpad { ptr, i32 }
          cleanup
  %66 = load ptr, ptr %3, align 8, !tbaa !63, !alias.scope !100
  %67 = icmp eq ptr %66, %47
  br i1 %67, label %68, label %71

68:                                               ; preds = %64
  %69 = load i64, ptr %48, align 8, !tbaa !13, !alias.scope !100
  %70 = icmp ult i64 %69, 16
  call void @llvm.assume(i1 %70)
  br label %129

71:                                               ; preds = %64
  call void @_ZdlPv(ptr noundef %66) #26
  br label %129

72:                                               ; preds = %62
  %73 = load ptr, ptr %3, align 8, !tbaa !63
  %74 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 1
  %75 = load ptr, ptr %74, align 8, !tbaa !25
  %76 = load ptr, ptr %75, align 8, !tbaa !9
  %77 = getelementptr inbounds ptr, ptr %76, i64 5
  %78 = load ptr, ptr %77, align 8
  %79 = invoke noundef i32 %78(ptr noundef nonnull align 8 dereferenceable(8) %75)
          to label %80 unwind label %119

80:                                               ; preds = %72
  %81 = icmp sgt i32 %79, 0
  br i1 %81, label %82, label %101

82:                                               ; preds = %80, %98
  %83 = phi i32 [ %99, %98 ], [ 0, %80 ]
  %84 = load ptr, ptr %74, align 8, !tbaa !25
  %85 = load ptr, ptr %84, align 8, !tbaa !9
  %86 = getelementptr inbounds ptr, ptr %85, i64 6
  %87 = load ptr, ptr %86, align 8
  %88 = invoke noundef ptr %87(ptr noundef nonnull align 8 dereferenceable(8) %84, i32 noundef %83)
          to label %89 unwind label %117

89:                                               ; preds = %82
  %90 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %73, ptr noundef nonnull dereferenceable(1) %88) #29
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %101, label %92

92:                                               ; preds = %89
  %93 = load ptr, ptr %74, align 8, !tbaa !25
  %94 = load ptr, ptr %93, align 8, !tbaa !9
  %95 = getelementptr inbounds ptr, ptr %94, i64 5
  %96 = load ptr, ptr %95, align 8
  %97 = invoke noundef i32 %96(ptr noundef nonnull align 8 dereferenceable(8) %93)
          to label %98 unwind label %117

98:                                               ; preds = %92
  %99 = add nuw nsw i32 %83, 1
  %100 = icmp slt i32 %99, %97
  br i1 %100, label %82, label %101

101:                                              ; preds = %98, %89, %80
  %102 = phi i32 [ -1, %80 ], [ -1, %98 ], [ %83, %89 ]
  %103 = load ptr, ptr %3, align 8, !tbaa !63
  %104 = icmp eq ptr %103, %47
  br i1 %104, label %105, label %108

105:                                              ; preds = %101
  %106 = load i64, ptr %48, align 8, !tbaa !13
  %107 = icmp ult i64 %106, 16
  call void @llvm.assume(i1 %107)
  br label %109

108:                                              ; preds = %101
  call void @_ZdlPv(ptr noundef %103) #26
  br label %109

109:                                              ; preds = %108, %105
  %110 = load ptr, ptr %4, align 8, !tbaa !63
  %111 = icmp eq ptr %110, %43
  br i1 %111, label %112, label %115

112:                                              ; preds = %109
  %113 = load i64, ptr %44, align 8, !tbaa !13
  %114 = icmp ult i64 %113, 16
  call void @llvm.assume(i1 %114)
  br label %116

115:                                              ; preds = %109
  call void @_ZdlPv(ptr noundef %110) #26
  br label %116

116:                                              ; preds = %115, %112
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #28
  br label %138

117:                                              ; preds = %82, %92
  %118 = landingpad { ptr, i32 }
          cleanup
  br label %121

119:                                              ; preds = %72
  %120 = landingpad { ptr, i32 }
          cleanup
  br label %121

121:                                              ; preds = %119, %117
  %122 = phi { ptr, i32 } [ %118, %117 ], [ %120, %119 ]
  %123 = load ptr, ptr %3, align 8, !tbaa !63
  %124 = icmp eq ptr %123, %47
  br i1 %124, label %125, label %128

125:                                              ; preds = %121
  %126 = load i64, ptr %48, align 8, !tbaa !13
  %127 = icmp ult i64 %126, 16
  call void @llvm.assume(i1 %127)
  br label %129

128:                                              ; preds = %121
  call void @_ZdlPv(ptr noundef %123) #26
  br label %129

129:                                              ; preds = %128, %125, %71, %68
  %130 = phi { ptr, i32 } [ %65, %71 ], [ %65, %68 ], [ %122, %125 ], [ %122, %128 ]
  %131 = load ptr, ptr %4, align 8, !tbaa !63
  %132 = icmp eq ptr %131, %43
  br i1 %132, label %133, label %136

133:                                              ; preds = %129
  %134 = load i64, ptr %44, align 8, !tbaa !13
  %135 = icmp ult i64 %134, 16
  call void @llvm.assume(i1 %135)
  br label %137

136:                                              ; preds = %129
  call void @_ZdlPv(ptr noundef %131) #26
  br label %137

137:                                              ; preds = %136, %133
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #28
  br label %140

138:                                              ; preds = %25, %116
  %139 = phi i32 [ %102, %116 ], [ %26, %25 ]
  ret i32 %139

140:                                              ; preds = %137, %12
  %141 = phi { ptr, i32 } [ %130, %137 ], [ %13, %12 ]
  resume { ptr, i32 } %141
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK25SectionBasedConfiguration19resolveSectionChainEi(ptr noalias sret(%"class.std::vector.36") align 8 %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %1, i32 noundef %2) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !25
  %6 = load ptr, ptr %5, align 8, !tbaa !9
  %7 = getelementptr inbounds ptr, ptr %6, i64 6
  %8 = load ptr, ptr %7, align 8
  %9 = tail call noundef ptr %8(ptr noundef nonnull align 8 dereferenceable(8) %5, i32 noundef %2)
  tail call void @_ZNK25SectionBasedConfiguration19resolveSectionChainEPKc(ptr sret(%"class.std::vector.36") align 8 %0, ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %9)
  ret void
}

; Function Attrs: sspstrong uwtable
define dso_local noundef ptr @_ZNK25SectionBasedConfiguration16internalGetValueERKSt6vectorIiSaIiEEPKcS6_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(24) %1, ptr nocapture noundef readonly %2, ptr noundef readnone %3) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !67
  %8 = load ptr, ptr %5, align 8, !tbaa !66
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = sdiv exact i64 %11, 80
  %13 = trunc i64 %12 to i32
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %38, label %26

15:                                               ; preds = %38
  %16 = add nuw nsw i64 %39, 1
  %17 = load ptr, ptr %6, align 8, !tbaa !67
  %18 = load ptr, ptr %5, align 8, !tbaa !66
  %19 = ptrtoint ptr %17 to i64
  %20 = ptrtoint ptr %18 to i64
  %21 = sub i64 %19, %20
  %22 = sdiv exact i64 %21, 80
  %23 = shl i64 %22, 32
  %24 = ashr exact i64 %23, 32
  %25 = icmp slt i64 %16, %24
  br i1 %25, label %38, label %26

26:                                               ; preds = %15, %4
  %27 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !103
  %29 = load ptr, ptr %1, align 8, !tbaa !95
  %30 = ptrtoint ptr %28 to i64
  %31 = ptrtoint ptr %29 to i64
  %32 = sub i64 %30, %31
  %33 = lshr exact i64 %32, 2
  %34 = trunc i64 %33 to i32
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %107

36:                                               ; preds = %26
  %37 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 1
  br label %55

38:                                               ; preds = %4, %15
  %39 = phi i64 [ %16, %15 ], [ 0, %4 ]
  %40 = phi ptr [ %18, %15 ], [ %8, %4 ]
  %41 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %40, i64 %39
  %42 = load ptr, ptr %41, align 8, !tbaa !9
  %43 = getelementptr inbounds ptr, ptr %42, i64 2
  %44 = load ptr, ptr %43, align 8
  %45 = tail call noundef ptr %44(ptr noundef nonnull align 8 dereferenceable(80) %41)
  %46 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) %45) #29
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %15

48:                                               ; preds = %38
  %49 = load ptr, ptr %5, align 8, !tbaa !66
  %50 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %49, i64 %39
  %51 = load ptr, ptr %50, align 8, !tbaa !9
  %52 = getelementptr inbounds ptr, ptr %51, i64 3
  %53 = load ptr, ptr %52, align 8
  %54 = tail call noundef ptr %53(ptr noundef nonnull align 8 dereferenceable(80) %50)
  br label %107

55:                                               ; preds = %36, %97
  %56 = phi i64 [ 0, %36 ], [ %98, %97 ]
  %57 = phi ptr [ %29, %36 ], [ %100, %97 ]
  %58 = getelementptr inbounds i32, ptr %57, i64 %56
  %59 = load i32, ptr %58, align 4, !tbaa !104
  %60 = load ptr, ptr %37, align 8, !tbaa !25
  %61 = load ptr, ptr %60, align 8, !tbaa !9
  %62 = getelementptr inbounds ptr, ptr %61, i64 7
  %63 = load ptr, ptr %62, align 8
  %64 = tail call noundef i32 %63(ptr noundef nonnull align 8 dereferenceable(8) %60, i32 noundef %59)
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %97

66:                                               ; preds = %55, %79
  %67 = phi i32 [ %80, %79 ], [ 0, %55 ]
  %68 = load ptr, ptr %37, align 8, !tbaa !25
  %69 = load ptr, ptr %68, align 8, !tbaa !9
  %70 = getelementptr inbounds ptr, ptr %69, i64 8
  %71 = load ptr, ptr %70, align 8
  %72 = tail call noundef nonnull align 8 dereferenceable(8) ptr %71(ptr noundef nonnull align 8 dereferenceable(8) %68, i32 noundef %59, i32 noundef %67)
  %73 = load ptr, ptr %72, align 8, !tbaa !9
  %74 = getelementptr inbounds ptr, ptr %73, i64 2
  %75 = load ptr, ptr %74, align 8
  %76 = tail call noundef ptr %75(ptr noundef nonnull align 8 dereferenceable(8) %72)
  %77 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) %76) #29
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %87, label %79

79:                                               ; preds = %66
  %80 = add nuw nsw i32 %67, 1
  %81 = load ptr, ptr %37, align 8, !tbaa !25
  %82 = load ptr, ptr %81, align 8, !tbaa !9
  %83 = getelementptr inbounds ptr, ptr %82, i64 7
  %84 = load ptr, ptr %83, align 8
  %85 = tail call noundef i32 %84(ptr noundef nonnull align 8 dereferenceable(8) %81, i32 noundef %59)
  %86 = icmp slt i32 %80, %85
  br i1 %86, label %66, label %97

87:                                               ; preds = %66
  %88 = load ptr, ptr %37, align 8, !tbaa !25
  %89 = load ptr, ptr %88, align 8, !tbaa !9
  %90 = getelementptr inbounds ptr, ptr %89, i64 8
  %91 = load ptr, ptr %90, align 8
  %92 = tail call noundef nonnull align 8 dereferenceable(8) ptr %91(ptr noundef nonnull align 8 dereferenceable(8) %88, i32 noundef %59, i32 noundef %67)
  %93 = load ptr, ptr %92, align 8, !tbaa !9
  %94 = getelementptr inbounds ptr, ptr %93, i64 3
  %95 = load ptr, ptr %94, align 8
  %96 = tail call noundef ptr %95(ptr noundef nonnull align 8 dereferenceable(8) %92)
  br label %107

97:                                               ; preds = %79, %55
  %98 = add nuw nsw i64 %56, 1
  %99 = load ptr, ptr %27, align 8, !tbaa !103
  %100 = load ptr, ptr %1, align 8, !tbaa !95
  %101 = ptrtoint ptr %99 to i64
  %102 = ptrtoint ptr %100 to i64
  %103 = sub i64 %101, %102
  %104 = shl i64 %103, 30
  %105 = ashr i64 %104, 32
  %106 = icmp slt i64 %98, %105
  br i1 %106, label %55, label %107

107:                                              ; preds = %97, %26, %87, %48
  %108 = phi ptr [ %54, %48 ], [ %96, %87 ], [ %3, %26 ], [ %3, %97 ]
  ret ptr %108
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK25SectionBasedConfiguration13getBaseConfigB5cxx11EPKc(ptr noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %1, ptr noundef %2) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = tail call noundef i32 @_ZNK25SectionBasedConfiguration17resolveConfigNameEPKc(ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %2)
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = tail call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %10, ptr noundef nonnull @.str.19, ptr noundef %2)
          to label %11 unwind label %12

11:                                               ; preds = %9
  tail call void @__cxa_throw(ptr nonnull %10, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
  unreachable

12:                                               ; preds = %9
  %13 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_free_exception(ptr %10) #28
  br label %139

14:                                               ; preds = %3
  %15 = load ptr, ptr @CFGID_EXTENDS, align 8, !tbaa !5
  %16 = load ptr, ptr %15, align 8, !tbaa !9
  %17 = getelementptr inbounds ptr, ptr %16, i64 6
  %18 = load ptr, ptr %17, align 8
  %19 = tail call noundef ptr %18(ptr noundef nonnull align 8 dereferenceable(20) %15)
  %20 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !25
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  %23 = getelementptr inbounds ptr, ptr %22, i64 7
  %24 = load ptr, ptr %23, align 8
  %25 = tail call noundef i32 %24(ptr noundef nonnull align 8 dereferenceable(8) %21, i32 noundef %7)
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %48

27:                                               ; preds = %14, %40
  %28 = phi i32 [ %41, %40 ], [ 0, %14 ]
  %29 = load ptr, ptr %20, align 8, !tbaa !25
  %30 = load ptr, ptr %29, align 8, !tbaa !9
  %31 = getelementptr inbounds ptr, ptr %30, i64 8
  %32 = load ptr, ptr %31, align 8
  %33 = tail call noundef nonnull align 8 dereferenceable(8) ptr %32(ptr noundef nonnull align 8 dereferenceable(8) %29, i32 noundef %7, i32 noundef %28)
  %34 = load ptr, ptr %33, align 8, !tbaa !9
  %35 = getelementptr inbounds ptr, ptr %34, i64 2
  %36 = load ptr, ptr %35, align 8
  %37 = tail call noundef ptr %36(ptr noundef nonnull align 8 dereferenceable(8) %33)
  %38 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %19, ptr noundef nonnull dereferenceable(1) %37) #29
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %27
  %41 = add nuw nsw i32 %28, 1
  %42 = load ptr, ptr %20, align 8, !tbaa !25
  %43 = load ptr, ptr %42, align 8, !tbaa !9
  %44 = getelementptr inbounds ptr, ptr %43, i64 7
  %45 = load ptr, ptr %44, align 8
  %46 = tail call noundef i32 %45(ptr noundef nonnull align 8 dereferenceable(8) %42, i32 noundef %7)
  %47 = icmp slt i32 %41, %46
  br i1 %47, label %27, label %48

48:                                               ; preds = %40, %14
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #28
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 2
  store ptr %49, ptr %6, align 8, !tbaa !11
  br label %64

50:                                               ; preds = %27
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #28
  %51 = load ptr, ptr %20, align 8, !tbaa !25
  %52 = load ptr, ptr %51, align 8, !tbaa !9
  %53 = getelementptr inbounds ptr, ptr %52, i64 8
  %54 = load ptr, ptr %53, align 8
  %55 = tail call noundef nonnull align 8 dereferenceable(8) ptr %54(ptr noundef nonnull align 8 dereferenceable(8) %51, i32 noundef %7, i32 noundef %28)
  %56 = load ptr, ptr %55, align 8, !tbaa !9
  %57 = getelementptr inbounds ptr, ptr %56, i64 3
  %58 = load ptr, ptr %57, align 8
  %59 = tail call noundef ptr %58(ptr noundef nonnull align 8 dereferenceable(8) %55)
  %60 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 2
  store ptr %60, ptr %6, align 8, !tbaa !11
  %61 = icmp eq ptr %59, null
  br i1 %61, label %62, label %64

62:                                               ; preds = %50
  invoke void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
          to label %63 unwind label %87

63:                                               ; preds = %62
  unreachable

64:                                               ; preds = %48, %50
  %65 = phi ptr [ %49, %48 ], [ %60, %50 ]
  %66 = phi ptr [ @.str.14, %48 ], [ %59, %50 ]
  %67 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %66) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #28
  store i64 %67, ptr %5, align 8, !tbaa !87
  %68 = icmp ugt i64 %67, 15
  br i1 %68, label %69, label %73

69:                                               ; preds = %64
  %70 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %6, ptr noundef nonnull align 8 dereferenceable(8) %5, i64 noundef 0)
          to label %71 unwind label %87

71:                                               ; preds = %69
  store ptr %70, ptr %6, align 8, !tbaa !63
  %72 = load i64, ptr %5, align 8, !tbaa !87
  store i64 %72, ptr %65, align 8, !tbaa !16
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi ptr [ %70, %71 ], [ %65, %64 ]
  switch i64 %67, label %77 [
    i64 1, label %75
    i64 0, label %78
  ]

75:                                               ; preds = %73
  %76 = load i8, ptr %66, align 1, !tbaa !16
  store i8 %76, ptr %74, align 1, !tbaa !16
  br label %78

77:                                               ; preds = %73
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %74, ptr nonnull align 1 %66, i64 %67, i1 false)
  br label %78

78:                                               ; preds = %77, %75, %73
  %79 = load i64, ptr %5, align 8, !tbaa !87
  %80 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 1
  store i64 %79, ptr %80, align 8, !tbaa !13
  %81 = load ptr, ptr %6, align 8, !tbaa !63
  %82 = getelementptr inbounds i8, ptr %81, i64 %79
  store i8 0, ptr %82, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #28
  %83 = load i64, ptr %80, align 8, !tbaa !13
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %78
  %86 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %6, i64 noundef 0, i64 noundef 0, ptr noundef nonnull @.str.17, i64 noundef 7)
          to label %91 unwind label %89

87:                                               ; preds = %69, %62
  %88 = landingpad { ptr, i32 }
          cleanup
  br label %137

89:                                               ; preds = %85
  %90 = landingpad { ptr, i32 }
          cleanup
  br label %129

91:                                               ; preds = %85, %78
  %92 = load ptr, ptr %6, align 8, !tbaa !63
  %93 = invoke noundef i32 @_ZNK25SectionBasedConfiguration17resolveConfigNameEPKc(ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %92)
          to label %94 unwind label %125

94:                                               ; preds = %91
  %95 = icmp eq i32 %93, -1
  %96 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %96, ptr %0, align 8, !tbaa !11
  br i1 %95, label %97, label %99

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 0, ptr %98, align 8, !tbaa !13
  store i8 0, ptr %96, align 8, !tbaa !16
  br label %117

99:                                               ; preds = %94
  %100 = load ptr, ptr %6, align 8, !tbaa !63
  %101 = load i64, ptr %80, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %101, ptr %4, align 8, !tbaa !87
  %102 = icmp ugt i64 %101, 15
  br i1 %102, label %103, label %107

103:                                              ; preds = %99
  %104 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %105 unwind label %127

105:                                              ; preds = %103
  store ptr %104, ptr %0, align 8, !tbaa !63
  %106 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %106, ptr %96, align 8, !tbaa !16
  br label %107

107:                                              ; preds = %105, %99
  %108 = phi ptr [ %104, %105 ], [ %96, %99 ]
  switch i64 %101, label %111 [
    i64 1, label %109
    i64 0, label %112
  ]

109:                                              ; preds = %107
  %110 = load i8, ptr %100, align 1, !tbaa !16
  store i8 %110, ptr %108, align 1, !tbaa !16
  br label %112

111:                                              ; preds = %107
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %108, ptr align 1 %100, i64 %101, i1 false)
  br label %112

112:                                              ; preds = %111, %109, %107
  %113 = load i64, ptr %4, align 8, !tbaa !87
  %114 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %113, ptr %114, align 8, !tbaa !13
  %115 = load ptr, ptr %0, align 8, !tbaa !63
  %116 = getelementptr inbounds i8, ptr %115, i64 %113
  store i8 0, ptr %116, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  br label %117

117:                                              ; preds = %112, %97
  %118 = load ptr, ptr %6, align 8, !tbaa !63
  %119 = icmp eq ptr %118, %65
  br i1 %119, label %120, label %123

120:                                              ; preds = %117
  %121 = load i64, ptr %80, align 8, !tbaa !13
  %122 = icmp ult i64 %121, 16
  call void @llvm.assume(i1 %122)
  br label %124

123:                                              ; preds = %117
  call void @_ZdlPv(ptr noundef %118) #26
  br label %124

124:                                              ; preds = %120, %123
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #28
  ret void

125:                                              ; preds = %91
  %126 = landingpad { ptr, i32 }
          cleanup
  br label %129

127:                                              ; preds = %103
  %128 = landingpad { ptr, i32 }
          cleanup
  br label %129

129:                                              ; preds = %127, %125, %89
  %130 = phi { ptr, i32 } [ %90, %89 ], [ %126, %125 ], [ %128, %127 ]
  %131 = load ptr, ptr %6, align 8, !tbaa !63
  %132 = icmp eq ptr %131, %65
  br i1 %132, label %133, label %136

133:                                              ; preds = %129
  %134 = load i64, ptr %80, align 8, !tbaa !13
  %135 = icmp ult i64 %134, 16
  call void @llvm.assume(i1 %135)
  br label %137

136:                                              ; preds = %129
  call void @_ZdlPv(ptr noundef %131) #26
  br label %137

137:                                              ; preds = %136, %133, %87
  %138 = phi { ptr, i32 } [ %88, %87 ], [ %130, %133 ], [ %130, %136 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #28
  br label %139

139:                                              ; preds = %137, %12
  %140 = phi { ptr, i32 } [ %13, %12 ], [ %138, %137 ]
  resume { ptr, i32 } %140
}

; Function Attrs: sspstrong uwtable
define dso_local noundef i32 @_ZNK25SectionBasedConfiguration17internalFindEntryEiPKc(ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %0, i32 noundef %1, ptr nocapture noundef readonly %2) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !25
  %6 = load ptr, ptr %5, align 8, !tbaa !9
  %7 = getelementptr inbounds ptr, ptr %6, i64 7
  %8 = load ptr, ptr %7, align 8
  %9 = tail call noundef i32 %8(ptr noundef nonnull align 8 dereferenceable(8) %5, i32 noundef %1)
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %32

11:                                               ; preds = %3, %24
  %12 = phi i32 [ %25, %24 ], [ 0, %3 ]
  %13 = load ptr, ptr %4, align 8, !tbaa !25
  %14 = load ptr, ptr %13, align 8, !tbaa !9
  %15 = getelementptr inbounds ptr, ptr %14, i64 8
  %16 = load ptr, ptr %15, align 8
  %17 = tail call noundef nonnull align 8 dereferenceable(8) ptr %16(ptr noundef nonnull align 8 dereferenceable(8) %13, i32 noundef %1, i32 noundef %12)
  %18 = load ptr, ptr %17, align 8, !tbaa !9
  %19 = getelementptr inbounds ptr, ptr %18, i64 2
  %20 = load ptr, ptr %19, align 8
  %21 = tail call noundef ptr %20(ptr noundef nonnull align 8 dereferenceable(8) %17)
  %22 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) %21) #29
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %11
  %25 = add nuw nsw i32 %12, 1
  %26 = load ptr, ptr %4, align 8, !tbaa !25
  %27 = load ptr, ptr %26, align 8, !tbaa !9
  %28 = getelementptr inbounds ptr, ptr %27, i64 7
  %29 = load ptr, ptr %28, align 8
  %30 = tail call noundef i32 %29(ptr noundef nonnull align 8 dereferenceable(8) %26, i32 noundef %1)
  %31 = icmp slt i32 %25, %30
  br i1 %31, label %11, label %32

32:                                               ; preds = %24, %11, %3
  %33 = phi i32 [ -1, %3 ], [ %12, %11 ], [ -1, %24 ]
  ret i32 %33
}

; Function Attrs: sspstrong uwtable
define dso_local noundef i32 @_ZNK25SectionBasedConfiguration19internalFindSectionEPKc(ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %0, ptr nocapture noundef readonly %1) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !25
  %5 = load ptr, ptr %4, align 8, !tbaa !9
  %6 = getelementptr inbounds ptr, ptr %5, i64 5
  %7 = load ptr, ptr %6, align 8
  %8 = tail call noundef i32 %7(ptr noundef nonnull align 8 dereferenceable(8) %4)
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %27

10:                                               ; preds = %2, %19
  %11 = phi i32 [ %20, %19 ], [ 0, %2 ]
  %12 = load ptr, ptr %3, align 8, !tbaa !25
  %13 = load ptr, ptr %12, align 8, !tbaa !9
  %14 = getelementptr inbounds ptr, ptr %13, i64 6
  %15 = load ptr, ptr %14, align 8
  %16 = tail call noundef ptr %15(ptr noundef nonnull align 8 dereferenceable(8) %12, i32 noundef %11)
  %17 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %1, ptr noundef nonnull dereferenceable(1) %16) #29
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %10
  %20 = add nuw nsw i32 %11, 1
  %21 = load ptr, ptr %3, align 8, !tbaa !25
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  %23 = getelementptr inbounds ptr, ptr %22, i64 5
  %24 = load ptr, ptr %23, align 8
  %25 = tail call noundef i32 %24(ptr noundef nonnull align 8 dereferenceable(8) %21)
  %26 = icmp slt i32 %20, %25
  br i1 %26, label %10, label %27

27:                                               ; preds = %19, %10, %2
  %28 = phi i32 [ -1, %2 ], [ %11, %10 ], [ -1, %19 ]
  ret i32 %28
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN25SectionBasedConfiguration14activateConfigEPKci(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.std::vector.36", align 8
  %5 = alloca %"class.std::vector.41", align 8
  %6 = alloca %class.Scenario, align 8
  %7 = alloca %"class.SectionBasedConfiguration::KeyValue1", align 8
  tail call void @_ZN25SectionBasedConfiguration5clearEv(ptr noundef nonnull align 8 dereferenceable(416) %0)
  %8 = icmp eq ptr %1, null
  %9 = select i1 %8, ptr @.str.14, ptr %1
  %10 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 3
  %11 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 3, i32 1
  %12 = load i64, ptr %11, align 8, !tbaa !13
  %13 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %9) #28
  %14 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %10, i64 noundef 0, i64 noundef %12, ptr noundef nonnull %9, i64 noundef %13)
  %15 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 4
  store i32 %2, ptr %15, align 8, !tbaa !62
  %16 = tail call noundef i32 @_ZNK25SectionBasedConfiguration17resolveConfigNameEPKc(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %1)
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %28

18:                                               ; preds = %3
  %19 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %1, ptr noundef nonnull dereferenceable(8) @.str.17) #29
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %265, label %21

21:                                               ; preds = %18
  %22 = tail call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %22, ptr noundef nonnull @.str.19, ptr noundef %1)
          to label %23 unwind label %24

23:                                               ; preds = %21
  tail call void @__cxa_throw(ptr nonnull %22, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
  unreachable

24:                                               ; preds = %21
  %25 = landingpad { ptr, i32 }
          cleanup
  %26 = extractvalue { ptr, i32 } %25, 0
  %27 = extractvalue { ptr, i32 } %25, 1
  tail call void @__cxa_free_exception(ptr %22) #28
  br label %276

28:                                               ; preds = %3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #28
  %29 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !25, !noalias !105
  %31 = load ptr, ptr %30, align 8, !tbaa !9, !noalias !105
  %32 = getelementptr inbounds ptr, ptr %31, i64 6
  %33 = load ptr, ptr %32, align 8, !noalias !105
  %34 = tail call noundef ptr %33(ptr noundef nonnull align 8 dereferenceable(8) %30, i32 noundef %16), !noalias !105
  call void @_ZNK25SectionBasedConfiguration19resolveSectionChainEPKc(ptr nonnull sret(%"class.std::vector.36") align 8 %4, ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %34)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #28
  invoke void @_ZNK25SectionBasedConfiguration25collectIterationVariablesERKSt6vectorIiSaIiEE(ptr nonnull sret(%"class.std::vector.41") align 8 %5, ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull align 8 dereferenceable(24) %4)
          to label %35 unwind label %53

35:                                               ; preds = %28
  %36 = load ptr, ptr @CFGID_CONSTRAINT, align 8, !tbaa !5
  %37 = load ptr, ptr %36, align 8, !tbaa !9
  %38 = getelementptr inbounds ptr, ptr %37, i64 6
  %39 = load ptr, ptr %38, align 8
  %40 = invoke noundef ptr %39(ptr noundef nonnull align 8 dereferenceable(20) %36)
          to label %41 unwind label %57

41:                                               ; preds = %35
  %42 = invoke noundef ptr @_ZNK25SectionBasedConfiguration16internalGetValueERKSt6vectorIiSaIiEEPKcS6_(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %40, ptr noundef null)
          to label %43 unwind label %57

43:                                               ; preds = %41
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %6) #28
  invoke void @_ZN8ScenarioC1ERKSt6vectorIN25SectionBasedConfiguration17IterationVariableESaIS2_EEPKc(ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %42)
          to label %44 unwind label %61

44:                                               ; preds = %43
  %45 = invoke noundef i32 @_ZN8Scenario10getNumRunsEv(ptr noundef nonnull align 8 dereferenceable(88) %6)
          to label %46 unwind label %63

46:                                               ; preds = %44
  %47 = icmp sgt i32 %2, -1
  %48 = icmp sgt i32 %45, %2
  %49 = and i1 %47, %48
  br i1 %49, label %67, label %50

50:                                               ; preds = %46
  %51 = call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %51, ptr noundef nonnull @.str.21, i32 noundef %2, ptr noundef %1, i32 noundef %45)
          to label %52 unwind label %65

52:                                               ; preds = %50
  invoke void @__cxa_throw(ptr nonnull %51, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %284 unwind label %63

53:                                               ; preds = %28
  %54 = landingpad { ptr, i32 }
          cleanup
  %55 = extractvalue { ptr, i32 } %54, 0
  %56 = extractvalue { ptr, i32 } %54, 1
  br label %269

57:                                               ; preds = %41, %35
  %58 = landingpad { ptr, i32 }
          cleanup
  %59 = extractvalue { ptr, i32 } %58, 0
  %60 = extractvalue { ptr, i32 } %58, 1
  br label %266

61:                                               ; preds = %79, %43
  %62 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %93

63:                                               ; preds = %78, %73, %68, %67, %52, %44
  %64 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %91

65:                                               ; preds = %50
  %66 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  call void @__cxa_free_exception(ptr %51) #28
  br label %91

67:                                               ; preds = %46
  invoke void @_ZN8Scenario7gotoRunEi(ptr noundef nonnull align 8 dereferenceable(88) %6, i32 noundef %2)
          to label %68 unwind label %63

68:                                               ; preds = %67
  %69 = load ptr, ptr %0, align 8, !tbaa !9
  %70 = getelementptr inbounds ptr, ptr %69, i64 49
  %71 = load ptr, ptr %70, align 8
  %72 = invoke noundef ptr %71(ptr noundef nonnull align 8 dereferenceable(416) %0)
          to label %73 unwind label %63

73:                                               ; preds = %68
  %74 = load ptr, ptr %0, align 8, !tbaa !9
  %75 = getelementptr inbounds ptr, ptr %74, i64 50
  %76 = load ptr, ptr %75, align 8
  %77 = invoke noundef i32 %76(ptr noundef nonnull align 8 dereferenceable(416) %0)
          to label %78 unwind label %63

78:                                               ; preds = %73
  invoke void @_ZN25SectionBasedConfiguration14setupVariablesEPKciP8ScenarioRKSt6vectorIiSaIiEE(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %72, i32 noundef %77, ptr noundef nonnull %6, ptr noundef nonnull align 8 dereferenceable(24) %4)
          to label %79 unwind label %63

79:                                               ; preds = %78
  invoke void @_ZN8ScenarioD1Ev(ptr noundef nonnull align 8 dereferenceable(88) %6)
          to label %80 unwind label %61

80:                                               ; preds = %79
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %6) #28
  %81 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 2
  %82 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %83 = load ptr, ptr %82, align 8, !tbaa !67
  %84 = load ptr, ptr %81, align 8, !tbaa !66
  %85 = ptrtoint ptr %83 to i64
  %86 = ptrtoint ptr %84 to i64
  %87 = sub i64 %85, %86
  %88 = sdiv exact i64 %87, 80
  %89 = trunc i64 %88 to i32
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %137, label %116

91:                                               ; preds = %65, %63
  %92 = phi { ptr, i32 } [ %64, %63 ], [ %66, %65 ]
  invoke void @_ZN8ScenarioD1Ev(ptr noundef nonnull align 8 dereferenceable(88) %6)
          to label %93 unwind label %281

93:                                               ; preds = %91, %61
  %94 = phi { ptr, i32 } [ %92, %91 ], [ %62, %61 ]
  %95 = extractvalue { ptr, i32 } %94, 0
  %96 = extractvalue { ptr, i32 } %94, 1
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %6) #28
  %97 = call i32 @llvm.eh.typeid.for(ptr nonnull @_ZTISt9exception) #28
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %99, label %266

99:                                               ; preds = %93
  %100 = call ptr @__cxa_begin_catch(ptr %95) #28
  %101 = call ptr @__cxa_allocate_exception(i64 128) #28
  %102 = load ptr, ptr %100, align 8, !tbaa !9
  %103 = getelementptr inbounds ptr, ptr %102, i64 2
  %104 = load ptr, ptr %103, align 8
  %105 = call noundef ptr %104(ptr noundef nonnull align 8 dereferenceable(8) %100) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %101, ptr noundef nonnull @.str.22, ptr noundef %105)
          to label %106 unwind label %107

106:                                              ; preds = %99
  invoke void @__cxa_throw(ptr nonnull %101, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %284 unwind label %109

107:                                              ; preds = %99
  %108 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %101) #28
  br label %111

109:                                              ; preds = %106
  %110 = landingpad { ptr, i32 }
          cleanup
  br label %111

111:                                              ; preds = %109, %107
  %112 = phi { ptr, i32 } [ %110, %109 ], [ %108, %107 ]
  invoke void @__cxa_end_catch()
          to label %113 unwind label %281

113:                                              ; preds = %111
  %114 = extractvalue { ptr, i32 } %112, 0
  %115 = extractvalue { ptr, i32 } %112, 1
  br label %266

116:                                              ; preds = %141, %80
  %117 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  %118 = load ptr, ptr %117, align 8, !tbaa !103
  %119 = load ptr, ptr %4, align 8, !tbaa !95
  %120 = ptrtoint ptr %118 to i64
  %121 = ptrtoint ptr %119 to i64
  %122 = sub i64 %120, %121
  %123 = lshr exact i64 %122, 2
  %124 = trunc i64 %123 to i32
  %125 = icmp sgt i32 %124, 0
  br i1 %125, label %126, label %152

126:                                              ; preds = %116
  %127 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %7, i64 0, i32 3
  %128 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %7, i64 0, i32 3, i32 2
  %129 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %7, i64 0, i32 3, i32 1
  %130 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %7, i64 0, i32 2
  %131 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %7, i64 0, i32 2, i32 2
  %132 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %7, i64 0, i32 2, i32 1
  br label %206

133:                                              ; preds = %137
  %134 = landingpad { ptr, i32 }
          cleanup
  %135 = extractvalue { ptr, i32 } %134, 0
  %136 = extractvalue { ptr, i32 } %134, 1
  br label %266

137:                                              ; preds = %80, %141
  %138 = phi i64 [ %142, %141 ], [ 0, %80 ]
  %139 = phi ptr [ %144, %141 ], [ %84, %80 ]
  %140 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %139, i64 %138
  invoke void @_ZN25SectionBasedConfiguration8addEntryERKNS_9KeyValue1E(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull align 8 dereferenceable(80) %140)
          to label %141 unwind label %133

141:                                              ; preds = %137
  %142 = add nuw nsw i64 %138, 1
  %143 = load ptr, ptr %82, align 8, !tbaa !67
  %144 = load ptr, ptr %81, align 8, !tbaa !66
  %145 = ptrtoint ptr %143 to i64
  %146 = ptrtoint ptr %144 to i64
  %147 = sub i64 %145, %146
  %148 = sdiv exact i64 %147, 80
  %149 = shl i64 %148, 32
  %150 = ashr exact i64 %149, 32
  %151 = icmp slt i64 %142, %150
  br i1 %151, label %137, label %116

152:                                              ; preds = %220, %116
  %153 = load ptr, ptr %5, align 8, !tbaa !108
  %154 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data", ptr %5, i64 0, i32 1
  %155 = load ptr, ptr %154, align 8, !tbaa !110
  %156 = icmp eq ptr %153, %155
  br i1 %156, label %202, label %157

157:                                              ; preds = %152, %197
  %158 = phi ptr [ %198, %197 ], [ %153, %152 ]
  %159 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %158, i64 0, i32 3
  %160 = load ptr, ptr %159, align 8, !tbaa !63
  %161 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %158, i64 0, i32 3, i32 2
  %162 = icmp eq ptr %160, %161
  br i1 %162, label %163, label %167

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %158, i64 0, i32 3, i32 1
  %165 = load i64, ptr %164, align 8, !tbaa !13
  %166 = icmp ult i64 %165, 16
  call void @llvm.assume(i1 %166)
  br label %168

167:                                              ; preds = %157
  call void @_ZdlPv(ptr noundef %160) #26
  br label %168

168:                                              ; preds = %167, %163
  %169 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %158, i64 0, i32 2
  %170 = load ptr, ptr %169, align 8, !tbaa !63
  %171 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %158, i64 0, i32 2, i32 2
  %172 = icmp eq ptr %170, %171
  br i1 %172, label %173, label %177

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %158, i64 0, i32 2, i32 1
  %175 = load i64, ptr %174, align 8, !tbaa !13
  %176 = icmp ult i64 %175, 16
  call void @llvm.assume(i1 %176)
  br label %178

177:                                              ; preds = %168
  call void @_ZdlPv(ptr noundef %170) #26
  br label %178

178:                                              ; preds = %177, %173
  %179 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %158, i64 0, i32 1
  %180 = load ptr, ptr %179, align 8, !tbaa !63
  %181 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %158, i64 0, i32 1, i32 2
  %182 = icmp eq ptr %180, %181
  br i1 %182, label %183, label %187

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %158, i64 0, i32 1, i32 1
  %185 = load i64, ptr %184, align 8, !tbaa !13
  %186 = icmp ult i64 %185, 16
  call void @llvm.assume(i1 %186)
  br label %188

187:                                              ; preds = %178
  call void @_ZdlPv(ptr noundef %180) #26
  br label %188

188:                                              ; preds = %187, %183
  %189 = load ptr, ptr %158, align 8, !tbaa !63
  %190 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %158, i64 0, i32 2
  %191 = icmp eq ptr %189, %190
  br i1 %191, label %192, label %196

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %158, i64 0, i32 1
  %194 = load i64, ptr %193, align 8, !tbaa !13
  %195 = icmp ult i64 %194, 16
  call void @llvm.assume(i1 %195)
  br label %197

196:                                              ; preds = %188
  call void @_ZdlPv(ptr noundef %189) #26
  br label %197

197:                                              ; preds = %196, %192
  %198 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %158, i64 1
  %199 = icmp eq ptr %198, %155
  br i1 %199, label %200, label %157

200:                                              ; preds = %197
  %201 = load ptr, ptr %5, align 8, !tbaa !108
  br label %202

202:                                              ; preds = %200, %152
  %203 = phi ptr [ %201, %200 ], [ %153, %152 ]
  %204 = icmp eq ptr %203, null
  br i1 %204, label %260, label %205

205:                                              ; preds = %202
  call void @_ZdlPv(ptr noundef nonnull %203) #26
  br label %260

206:                                              ; preds = %126, %220
  %207 = phi i64 [ 0, %126 ], [ %221, %220 ]
  %208 = phi ptr [ %119, %126 ], [ %223, %220 ]
  %209 = getelementptr inbounds i32, ptr %208, i64 %207
  %210 = load i32, ptr %209, align 4, !tbaa !104
  br label %211

211:                                              ; preds = %248, %206
  %212 = phi i32 [ 0, %206 ], [ %249, %248 ]
  %213 = load ptr, ptr %29, align 8, !tbaa !25
  %214 = load ptr, ptr %213, align 8, !tbaa !9
  %215 = getelementptr inbounds ptr, ptr %214, i64 7
  %216 = load ptr, ptr %215, align 8
  %217 = invoke noundef i32 %216(ptr noundef nonnull align 8 dereferenceable(8) %213, i32 noundef %210)
          to label %218 unwind label %230

218:                                              ; preds = %211
  %219 = icmp slt i32 %212, %217
  br i1 %219, label %232, label %220

220:                                              ; preds = %218
  %221 = add nuw nsw i64 %207, 1
  %222 = load ptr, ptr %117, align 8, !tbaa !103
  %223 = load ptr, ptr %4, align 8, !tbaa !95
  %224 = ptrtoint ptr %222 to i64
  %225 = ptrtoint ptr %223 to i64
  %226 = sub i64 %224, %225
  %227 = shl i64 %226, 30
  %228 = ashr i64 %227, 32
  %229 = icmp slt i64 %221, %228
  br i1 %229, label %206, label %152

230:                                              ; preds = %211
  %231 = landingpad { ptr, i32 }
          cleanup
  br label %256

232:                                              ; preds = %218
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %7) #28
  invoke void @_ZN25SectionBasedConfiguration7convertEii(ptr nonnull sret(%"class.SectionBasedConfiguration::KeyValue1") align 8 %7, ptr noundef nonnull align 8 dereferenceable(416) %0, i32 noundef %210, i32 noundef %212)
          to label %233 unwind label %250

233:                                              ; preds = %232
  invoke void @_ZN25SectionBasedConfiguration8addEntryERKNS_9KeyValue1E(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull align 8 dereferenceable(80) %7)
          to label %234 unwind label %252

234:                                              ; preds = %233
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !9
  %235 = load ptr, ptr %127, align 8, !tbaa !63
  %236 = icmp eq ptr %235, %128
  br i1 %236, label %237, label %240

237:                                              ; preds = %234
  %238 = load i64, ptr %129, align 8, !tbaa !13
  %239 = icmp ult i64 %238, 16
  call void @llvm.assume(i1 %239)
  br label %241

240:                                              ; preds = %234
  call void @_ZdlPv(ptr noundef %235) #26
  br label %241

241:                                              ; preds = %240, %237
  %242 = load ptr, ptr %130, align 8, !tbaa !63
  %243 = icmp eq ptr %242, %131
  br i1 %243, label %244, label %247

244:                                              ; preds = %241
  %245 = load i64, ptr %132, align 8, !tbaa !13
  %246 = icmp ult i64 %245, 16
  call void @llvm.assume(i1 %246)
  br label %248

247:                                              ; preds = %241
  call void @_ZdlPv(ptr noundef %242) #26
  br label %248

248:                                              ; preds = %247, %244
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %7) #28
  %249 = add nuw nsw i32 %212, 1
  br label %211

250:                                              ; preds = %232
  %251 = landingpad { ptr, i32 }
          cleanup
  br label %254

252:                                              ; preds = %233
  %253 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1D2Ev(ptr noundef nonnull align 8 dereferenceable(80) %7)
          to label %254 unwind label %281

254:                                              ; preds = %252, %250
  %255 = phi { ptr, i32 } [ %251, %250 ], [ %253, %252 ]
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %7) #28
  br label %256

256:                                              ; preds = %254, %230
  %257 = phi { ptr, i32 } [ %255, %254 ], [ %231, %230 ]
  %258 = extractvalue { ptr, i32 } %257, 0
  %259 = extractvalue { ptr, i32 } %257, 1
  br label %266

260:                                              ; preds = %205, %202
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #28
  %261 = load ptr, ptr %4, align 8, !tbaa !95
  %262 = icmp eq ptr %261, null
  br i1 %262, label %264, label %263

263:                                              ; preds = %260
  call void @_ZdlPv(ptr noundef nonnull %261) #26
  br label %264

264:                                              ; preds = %260, %263
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #28
  br label %265

265:                                              ; preds = %18, %264
  ret void

266:                                              ; preds = %256, %133, %113, %93, %57
  %267 = phi i32 [ %115, %113 ], [ %96, %93 ], [ %136, %133 ], [ %259, %256 ], [ %60, %57 ]
  %268 = phi ptr [ %114, %113 ], [ %95, %93 ], [ %135, %133 ], [ %258, %256 ], [ %59, %57 ]
  invoke void @_ZNSt6vectorIN25SectionBasedConfiguration17IterationVariableESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %269 unwind label %281

269:                                              ; preds = %266, %53
  %270 = phi i32 [ %267, %266 ], [ %56, %53 ]
  %271 = phi ptr [ %268, %266 ], [ %55, %53 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #28
  %272 = load ptr, ptr %4, align 8, !tbaa !95
  %273 = icmp eq ptr %272, null
  br i1 %273, label %275, label %274

274:                                              ; preds = %269
  call void @_ZdlPv(ptr noundef nonnull %272) #26
  br label %275

275:                                              ; preds = %274, %269
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #28
  br label %276

276:                                              ; preds = %275, %24
  %277 = phi i32 [ %27, %24 ], [ %270, %275 ]
  %278 = phi ptr [ %26, %24 ], [ %271, %275 ]
  %279 = insertvalue { ptr, i32 } poison, ptr %278, 0
  %280 = insertvalue { ptr, i32 } %279, i32 %277, 1
  resume { ptr, i32 } %280

281:                                              ; preds = %266, %252, %111, %91
  %282 = landingpad { ptr, i32 }
          catch ptr null
  %283 = extractvalue { ptr, i32 } %282, 0
  call void @__clang_call_terminate(ptr %283) #27
  unreachable

284:                                              ; preds = %106, %52
  unreachable
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK25SectionBasedConfiguration25collectIterationVariablesERKSt6vectorIiSaIiEE(ptr noalias sret(%"class.std::vector.41") align 8 %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %1, ptr nocapture noundef nonnull readonly align 8 dereferenceable(24) %2) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca ptr, align 8
  %5 = alloca %"struct.SectionBasedConfiguration::IterationVariable", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"struct.SectionBasedConfiguration::IterationVariable", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data", ptr %2, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !103
  %12 = load ptr, ptr %2, align 8, !tbaa !95
  %13 = ptrtoint ptr %11 to i64
  %14 = ptrtoint ptr %12 to i64
  %15 = sub i64 %13, %14
  %16 = lshr exact i64 %15, 2
  %17 = trunc i64 %16 to i32
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %38

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 1
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 2
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %5, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %5, i64 0, i32 1, i32 2
  %25 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %5, i64 0, i32 1, i32 1
  %26 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %5, i64 0, i32 2
  %27 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %5, i64 0, i32 2, i32 2
  %28 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %5, i64 0, i32 2, i32 1
  %29 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %5, i64 0, i32 3
  %30 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %5, i64 0, i32 3, i32 2
  %31 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %5, i64 0, i32 3, i32 1
  %32 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 2
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 1
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  br label %44

38:                                               ; preds = %60, %3
  %39 = load ptr, ptr @CFGID_REPEAT, align 8, !tbaa !5
  %40 = load ptr, ptr %39, align 8, !tbaa !9
  %41 = getelementptr inbounds ptr, ptr %40, i64 6
  %42 = load ptr, ptr %41, align 8
  %43 = invoke noundef ptr %42(ptr noundef nonnull align 8 dereferenceable(20) %39)
          to label %338 unwind label %408

44:                                               ; preds = %19, %60
  %45 = phi i64 [ 0, %19 ], [ %61, %60 ]
  %46 = phi ptr [ %12, %19 ], [ %63, %60 ]
  %47 = phi i32 [ 0, %19 ], [ %52, %60 ]
  %48 = getelementptr inbounds i32, ptr %46, i64 %45
  %49 = load i32, ptr %48, align 4, !tbaa !104
  br label %50

50:                                               ; preds = %332, %44
  %51 = phi i32 [ 0, %44 ], [ %334, %332 ]
  %52 = phi i32 [ %47, %44 ], [ %333, %332 ]
  %53 = load ptr, ptr %20, align 8, !tbaa !25
  %54 = load ptr, ptr %53, align 8, !tbaa !9
  %55 = getelementptr inbounds ptr, ptr %54, i64 7
  %56 = load ptr, ptr %55, align 8
  %57 = invoke noundef i32 %56(ptr noundef nonnull align 8 dereferenceable(8) %53, i32 noundef %49)
          to label %58 unwind label %70

58:                                               ; preds = %50
  %59 = icmp slt i32 %51, %57
  br i1 %59, label %74, label %60

60:                                               ; preds = %58
  %61 = add nuw nsw i64 %45, 1
  %62 = load ptr, ptr %10, align 8, !tbaa !103
  %63 = load ptr, ptr %2, align 8, !tbaa !95
  %64 = ptrtoint ptr %62 to i64
  %65 = ptrtoint ptr %63 to i64
  %66 = sub i64 %64, %65
  %67 = shl i64 %66, 30
  %68 = ashr i64 %67, 32
  %69 = icmp slt i64 %61, %68
  br i1 %69, label %44, label %38

70:                                               ; preds = %50
  %71 = landingpad { ptr, i32 }
          cleanup
  %72 = extractvalue { ptr, i32 } %71, 0
  %73 = extractvalue { ptr, i32 } %71, 1
  br label %436

74:                                               ; preds = %58
  %75 = load ptr, ptr %20, align 8, !tbaa !25
  %76 = load ptr, ptr %75, align 8, !tbaa !9
  %77 = getelementptr inbounds ptr, ptr %76, i64 8
  %78 = load ptr, ptr %77, align 8
  %79 = invoke noundef nonnull align 8 dereferenceable(8) ptr %78(ptr noundef nonnull align 8 dereferenceable(8) %75, i32 noundef %49, i32 noundef %51)
          to label %80 unwind label %92

80:                                               ; preds = %74
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  %81 = load ptr, ptr %79, align 8, !tbaa !9
  %82 = getelementptr inbounds ptr, ptr %81, i64 3
  %83 = load ptr, ptr %82, align 8
  %84 = invoke noundef ptr %83(ptr noundef nonnull align 8 dereferenceable(8) %79)
          to label %85 unwind label %96

85:                                               ; preds = %80
  %86 = call noundef ptr @strstr(ptr noundef nonnull dereferenceable(1) %84, ptr noundef nonnull dereferenceable(1) @.str.49) #29
  store ptr %86, ptr %4, align 8, !tbaa !5
  %87 = icmp eq ptr %86, null
  br i1 %87, label %332, label %88

88:                                               ; preds = %85, %296
  %89 = phi ptr [ %299, %296 ], [ %86, %85 ]
  %90 = phi i32 [ %268, %296 ], [ %52, %85 ]
  %91 = phi i32 [ %297, %296 ], [ 0, %85 ]
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %5) #28
  store ptr %21, ptr %5, align 8, !tbaa !11
  store i64 0, ptr %22, align 8, !tbaa !13
  store i8 0, ptr %21, align 8, !tbaa !16
  store ptr %24, ptr %23, align 8, !tbaa !11
  store i64 0, ptr %25, align 8, !tbaa !13
  store i8 0, ptr %24, align 8, !tbaa !16
  store ptr %27, ptr %26, align 8, !tbaa !11
  store i64 0, ptr %28, align 8, !tbaa !13
  store i8 0, ptr %27, align 8, !tbaa !16
  store ptr %30, ptr %29, align 8, !tbaa !11
  store i64 0, ptr %31, align 8, !tbaa !13
  store i8 0, ptr %30, align 8, !tbaa !16
  invoke void @_ZN25SectionBasedConfiguration13parseVariableEPKcRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_S8_RS1_(ptr noundef nonnull %89, ptr noundef nonnull align 8 dereferenceable(32) %23, ptr noundef nonnull align 8 dereferenceable(32) %26, ptr noundef nonnull align 8 dereferenceable(32) %29, ptr noundef nonnull align 8 dereferenceable(8) %4)
          to label %133 unwind label %100

92:                                               ; preds = %74
  %93 = landingpad { ptr, i32 }
          cleanup
  %94 = extractvalue { ptr, i32 } %93, 0
  %95 = extractvalue { ptr, i32 } %93, 1
  br label %436

96:                                               ; preds = %80
  %97 = landingpad { ptr, i32 }
          cleanup
  %98 = extractvalue { ptr, i32 } %97, 0
  %99 = extractvalue { ptr, i32 } %97, 1
  br label %335

100:                                              ; preds = %88
  %101 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  %102 = extractvalue { ptr, i32 } %101, 0
  %103 = extractvalue { ptr, i32 } %101, 1
  %104 = call i32 @llvm.eh.typeid.for(ptr nonnull @_ZTISt9exception) #28
  %105 = icmp eq i32 %103, %104
  br i1 %105, label %106, label %301

106:                                              ; preds = %100
  %107 = call ptr @__cxa_begin_catch(ptr %102) #28
  %108 = call ptr @__cxa_allocate_exception(i64 128) #28
  %109 = load ptr, ptr %107, align 8, !tbaa !9
  %110 = getelementptr inbounds ptr, ptr %109, i64 2
  %111 = load ptr, ptr %110, align 8
  %112 = call noundef ptr %111(ptr noundef nonnull align 8 dereferenceable(8) %107) #28
  %113 = load ptr, ptr %79, align 8, !tbaa !9
  %114 = getelementptr inbounds ptr, ptr %113, i64 2
  %115 = load ptr, ptr %114, align 8
  %116 = invoke noundef ptr %115(ptr noundef nonnull align 8 dereferenceable(8) %79)
          to label %117 unwind label %124

117:                                              ; preds = %106
  %118 = load ptr, ptr %79, align 8, !tbaa !9
  %119 = getelementptr inbounds ptr, ptr %118, i64 3
  %120 = load ptr, ptr %119, align 8
  %121 = invoke noundef ptr %120(ptr noundef nonnull align 8 dereferenceable(8) %79)
          to label %122 unwind label %124

122:                                              ; preds = %117
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %108, ptr noundef nonnull @.str.52, ptr noundef %112, ptr noundef %116, ptr noundef %121)
          to label %123 unwind label %124

123:                                              ; preds = %122
  invoke void @__cxa_throw(ptr nonnull %108, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %498 unwind label %126

124:                                              ; preds = %122, %117, %106
  %125 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %108) #28
  br label %128

126:                                              ; preds = %123
  %127 = landingpad { ptr, i32 }
          cleanup
  br label %128

128:                                              ; preds = %126, %124
  %129 = phi { ptr, i32 } [ %127, %126 ], [ %125, %124 ]
  invoke void @__cxa_end_catch()
          to label %130 unwind label %495

130:                                              ; preds = %128
  %131 = extractvalue { ptr, i32 } %129, 0
  %132 = extractvalue { ptr, i32 } %129, 1
  br label %301

133:                                              ; preds = %88
  %134 = load i64, ptr %28, align 8, !tbaa !13
  %135 = icmp ne i64 %134, 0
  %136 = load i64, ptr %31, align 8
  %137 = icmp eq i64 %136, 0
  %138 = select i1 %135, i1 %137, i1 false
  br i1 %138, label %139, label %267

139:                                              ; preds = %133
  %140 = load i64, ptr %25, align 8, !tbaa !13
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %209, label %142

142:                                              ; preds = %139
  %143 = load ptr, ptr %32, align 8, !tbaa !110
  %144 = load ptr, ptr %0, align 8, !tbaa !108
  %145 = ptrtoint ptr %143 to i64
  %146 = ptrtoint ptr %144 to i64
  %147 = sub i64 %145, %146
  %148 = lshr exact i64 %147, 7
  %149 = trunc i64 %148 to i32
  %150 = icmp sgt i32 %149, 0
  %151 = load ptr, ptr %23, align 8
  br i1 %150, label %152, label %154

152:                                              ; preds = %142
  %153 = and i64 %148, 4294967295
  br label %177

154:                                              ; preds = %193, %142
  %155 = load ptr, ptr @_ZL21configVarDescriptions, align 16, !tbaa !111
  %156 = icmp eq ptr %155, null
  br i1 %156, label %208, label %162

157:                                              ; preds = %162
  %158 = add nuw i64 %163, 1
  %159 = getelementptr inbounds [16 x %struct.ConfigVarDescription], ptr @_ZL21configVarDescriptions, i64 0, i64 %158
  %160 = load ptr, ptr %159, align 16, !tbaa !111
  %161 = icmp eq ptr %160, null
  br i1 %161, label %208, label %162

162:                                              ; preds = %154, %157
  %163 = phi i64 [ %158, %157 ], [ 0, %154 ]
  %164 = phi ptr [ %160, %157 ], [ %155, %154 ]
  %165 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %151, ptr noundef nonnull dereferenceable(1) %164) #29
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %200, label %157

167:                                              ; preds = %208, %262, %266
  %168 = landingpad { ptr, i32 }
          cleanup
  br label %171

169:                                              ; preds = %203
  %170 = landingpad { ptr, i32 }
          cleanup
  br label %171

171:                                              ; preds = %169, %167
  %172 = phi { ptr, i32 } [ %168, %167 ], [ %170, %169 ]
  %173 = extractvalue { ptr, i32 } %172, 0
  %174 = extractvalue { ptr, i32 } %172, 1
  br label %301

175:                                              ; preds = %190
  %176 = landingpad { ptr, i32 }
          cleanup
  br label %196

177:                                              ; preds = %152, %193
  %178 = phi i64 [ 0, %152 ], [ %194, %193 ]
  %179 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %144, i64 %178, i32 1, i32 1
  %180 = load i64, ptr %179, align 8, !tbaa !13
  %181 = icmp eq i64 %180, %140
  br i1 %181, label %182, label %193

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %144, i64 %178, i32 1
  %184 = load ptr, ptr %183, align 8, !tbaa !63
  %185 = call i32 @bcmp(ptr %184, ptr %151, i64 %140)
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %193

187:                                              ; preds = %182
  %188 = call ptr @__cxa_allocate_exception(i64 128) #28
  %189 = load ptr, ptr %23, align 8, !tbaa !63
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %188, ptr noundef nonnull @.str.53, ptr noundef %189)
          to label %190 unwind label %191

190:                                              ; preds = %187
  invoke void @__cxa_throw(ptr nonnull %188, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %498 unwind label %175

191:                                              ; preds = %187
  %192 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %188) #28
  br label %196

193:                                              ; preds = %177, %182
  %194 = add nuw nsw i64 %178, 1
  %195 = icmp eq i64 %194, %153
  br i1 %195, label %154, label %177

196:                                              ; preds = %191, %175
  %197 = phi { ptr, i32 } [ %176, %175 ], [ %192, %191 ]
  %198 = extractvalue { ptr, i32 } %197, 0
  %199 = extractvalue { ptr, i32 } %197, 1
  br label %301

200:                                              ; preds = %162
  %201 = call ptr @__cxa_allocate_exception(i64 128) #28
  %202 = load ptr, ptr %23, align 8, !tbaa !63
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %201, ptr noundef nonnull @.str.54, ptr noundef %202)
          to label %203 unwind label %204

203:                                              ; preds = %200
  invoke void @__cxa_throw(ptr nonnull %201, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %498 unwind label %169

204:                                              ; preds = %200
  %205 = landingpad { ptr, i32 }
          cleanup
  %206 = extractvalue { ptr, i32 } %205, 0
  %207 = extractvalue { ptr, i32 } %205, 1
  call void @__cxa_free_exception(ptr %201) #28
  br label %301

208:                                              ; preds = %157, %154
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull align 8 dereferenceable(32) %23)
          to label %257 unwind label %167

209:                                              ; preds = %139
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #28
  invoke void (ptr, ptr, ...) @_Z11opp_stringfB5cxx11PKcz(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %6, ptr noundef nonnull @.str.55, i32 noundef %49, i32 noundef %51, i32 noundef %91)
          to label %210 unwind label %229

210:                                              ; preds = %209
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull align 8 dereferenceable(32) %6)
          to label %211 unwind label %231

211:                                              ; preds = %210
  %212 = load ptr, ptr %6, align 8, !tbaa !63
  %213 = icmp eq ptr %212, %33
  br i1 %213, label %214, label %217

214:                                              ; preds = %211
  %215 = load i64, ptr %34, align 8, !tbaa !13
  %216 = icmp ult i64 %215, 16
  call void @llvm.assume(i1 %216)
  br label %218

217:                                              ; preds = %211
  call void @_ZdlPv(ptr noundef %212) #26
  br label %218

218:                                              ; preds = %217, %214
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #28
  %219 = add nsw i32 %90, 1
  invoke void (ptr, ptr, ...) @_Z11opp_stringfB5cxx11PKcz(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %7, ptr noundef nonnull @.str.35, i32 noundef %90)
          to label %220 unwind label %243

220:                                              ; preds = %218
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %23, ptr noundef nonnull align 8 dereferenceable(32) %7)
          to label %221 unwind label %245

221:                                              ; preds = %220
  %222 = load ptr, ptr %7, align 8, !tbaa !63
  %223 = icmp eq ptr %222, %35
  br i1 %223, label %224, label %227

224:                                              ; preds = %221
  %225 = load i64, ptr %36, align 8, !tbaa !13
  %226 = icmp ult i64 %225, 16
  call void @llvm.assume(i1 %226)
  br label %228

227:                                              ; preds = %221
  call void @_ZdlPv(ptr noundef %222) #26
  br label %228

228:                                              ; preds = %227, %224
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #28
  br label %257

229:                                              ; preds = %209
  %230 = landingpad { ptr, i32 }
          cleanup
  br label %239

231:                                              ; preds = %210
  %232 = landingpad { ptr, i32 }
          cleanup
  %233 = load ptr, ptr %6, align 8, !tbaa !63
  %234 = icmp eq ptr %233, %33
  br i1 %234, label %235, label %238

235:                                              ; preds = %231
  %236 = load i64, ptr %34, align 8, !tbaa !13
  %237 = icmp ult i64 %236, 16
  call void @llvm.assume(i1 %237)
  br label %239

238:                                              ; preds = %231
  call void @_ZdlPv(ptr noundef %233) #26
  br label %239

239:                                              ; preds = %238, %235, %229
  %240 = phi { ptr, i32 } [ %230, %229 ], [ %232, %235 ], [ %232, %238 ]
  %241 = extractvalue { ptr, i32 } %240, 0
  %242 = extractvalue { ptr, i32 } %240, 1
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #28
  br label %301

243:                                              ; preds = %218
  %244 = landingpad { ptr, i32 }
          cleanup
  br label %253

245:                                              ; preds = %220
  %246 = landingpad { ptr, i32 }
          cleanup
  %247 = load ptr, ptr %7, align 8, !tbaa !63
  %248 = icmp eq ptr %247, %35
  br i1 %248, label %249, label %252

249:                                              ; preds = %245
  %250 = load i64, ptr %36, align 8, !tbaa !13
  %251 = icmp ult i64 %250, 16
  call void @llvm.assume(i1 %251)
  br label %253

252:                                              ; preds = %245
  call void @_ZdlPv(ptr noundef %247) #26
  br label %253

253:                                              ; preds = %252, %249, %243
  %254 = phi { ptr, i32 } [ %244, %243 ], [ %246, %249 ], [ %246, %252 ]
  %255 = extractvalue { ptr, i32 } %254, 0
  %256 = extractvalue { ptr, i32 } %254, 1
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #28
  br label %301

257:                                              ; preds = %208, %228
  %258 = phi i32 [ %219, %228 ], [ %90, %208 ]
  %259 = load ptr, ptr %32, align 8, !tbaa !5
  %260 = load ptr, ptr %37, align 8, !tbaa !113
  %261 = icmp eq ptr %259, %260
  br i1 %261, label %266, label %262

262:                                              ; preds = %257
  invoke void @_ZN25SectionBasedConfiguration17IterationVariableC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(128) %259, ptr noundef nonnull align 8 dereferenceable(128) %5)
          to label %263 unwind label %167

263:                                              ; preds = %262
  %264 = load ptr, ptr %32, align 8, !tbaa !110
  %265 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %264, i64 1
  store ptr %265, ptr %32, align 8, !tbaa !110
  br label %267

266:                                              ; preds = %257
  invoke void @_ZNSt6vectorIN25SectionBasedConfiguration17IterationVariableESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %259, ptr noundef nonnull align 8 dereferenceable(128) %5)
          to label %267 unwind label %167

267:                                              ; preds = %263, %266, %133
  %268 = phi i32 [ %90, %133 ], [ %258, %266 ], [ %258, %263 ]
  %269 = load ptr, ptr %29, align 8, !tbaa !63
  %270 = icmp eq ptr %269, %30
  br i1 %270, label %271, label %274

271:                                              ; preds = %267
  %272 = load i64, ptr %31, align 8, !tbaa !13
  %273 = icmp ult i64 %272, 16
  call void @llvm.assume(i1 %273)
  br label %275

274:                                              ; preds = %267
  call void @_ZdlPv(ptr noundef %269) #26
  br label %275

275:                                              ; preds = %274, %271
  %276 = load ptr, ptr %26, align 8, !tbaa !63
  %277 = icmp eq ptr %276, %27
  br i1 %277, label %278, label %281

278:                                              ; preds = %275
  %279 = load i64, ptr %28, align 8, !tbaa !13
  %280 = icmp ult i64 %279, 16
  call void @llvm.assume(i1 %280)
  br label %282

281:                                              ; preds = %275
  call void @_ZdlPv(ptr noundef %276) #26
  br label %282

282:                                              ; preds = %281, %278
  %283 = load ptr, ptr %23, align 8, !tbaa !63
  %284 = icmp eq ptr %283, %24
  br i1 %284, label %285, label %288

285:                                              ; preds = %282
  %286 = load i64, ptr %25, align 8, !tbaa !13
  %287 = icmp ult i64 %286, 16
  call void @llvm.assume(i1 %287)
  br label %289

288:                                              ; preds = %282
  call void @_ZdlPv(ptr noundef %283) #26
  br label %289

289:                                              ; preds = %288, %285
  %290 = load ptr, ptr %5, align 8, !tbaa !63
  %291 = icmp eq ptr %290, %21
  br i1 %291, label %292, label %295

292:                                              ; preds = %289
  %293 = load i64, ptr %22, align 8, !tbaa !13
  %294 = icmp ult i64 %293, 16
  call void @llvm.assume(i1 %294)
  br label %296

295:                                              ; preds = %289
  call void @_ZdlPv(ptr noundef %290) #26
  br label %296

296:                                              ; preds = %295, %292
  %297 = add nuw nsw i32 %91, 1
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %5) #28
  %298 = load ptr, ptr %4, align 8, !tbaa !5
  %299 = call noundef ptr @strstr(ptr noundef nonnull dereferenceable(1) %298, ptr noundef nonnull dereferenceable(1) @.str.49) #29
  store ptr %299, ptr %4, align 8, !tbaa !5
  %300 = icmp eq ptr %299, null
  br i1 %300, label %332, label %88

301:                                              ; preds = %253, %239, %204, %196, %171, %130, %100
  %302 = phi i32 [ %174, %171 ], [ %256, %253 ], [ %242, %239 ], [ %199, %196 ], [ %207, %204 ], [ %132, %130 ], [ %103, %100 ]
  %303 = phi ptr [ %173, %171 ], [ %255, %253 ], [ %241, %239 ], [ %198, %196 ], [ %206, %204 ], [ %131, %130 ], [ %102, %100 ]
  %304 = load ptr, ptr %29, align 8, !tbaa !63
  %305 = icmp eq ptr %304, %30
  br i1 %305, label %306, label %309

306:                                              ; preds = %301
  %307 = load i64, ptr %31, align 8, !tbaa !13
  %308 = icmp ult i64 %307, 16
  call void @llvm.assume(i1 %308)
  br label %310

309:                                              ; preds = %301
  call void @_ZdlPv(ptr noundef %304) #26
  br label %310

310:                                              ; preds = %309, %306
  %311 = load ptr, ptr %26, align 8, !tbaa !63
  %312 = icmp eq ptr %311, %27
  br i1 %312, label %313, label %316

313:                                              ; preds = %310
  %314 = load i64, ptr %28, align 8, !tbaa !13
  %315 = icmp ult i64 %314, 16
  call void @llvm.assume(i1 %315)
  br label %317

316:                                              ; preds = %310
  call void @_ZdlPv(ptr noundef %311) #26
  br label %317

317:                                              ; preds = %316, %313
  %318 = load ptr, ptr %23, align 8, !tbaa !63
  %319 = icmp eq ptr %318, %24
  br i1 %319, label %320, label %323

320:                                              ; preds = %317
  %321 = load i64, ptr %25, align 8, !tbaa !13
  %322 = icmp ult i64 %321, 16
  call void @llvm.assume(i1 %322)
  br label %324

323:                                              ; preds = %317
  call void @_ZdlPv(ptr noundef %318) #26
  br label %324

324:                                              ; preds = %323, %320
  %325 = load ptr, ptr %5, align 8, !tbaa !63
  %326 = icmp eq ptr %325, %21
  br i1 %326, label %327, label %330

327:                                              ; preds = %324
  %328 = load i64, ptr %22, align 8, !tbaa !13
  %329 = icmp ult i64 %328, 16
  call void @llvm.assume(i1 %329)
  br label %331

330:                                              ; preds = %324
  call void @_ZdlPv(ptr noundef %325) #26
  br label %331

331:                                              ; preds = %330, %327
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %5) #28
  br label %335

332:                                              ; preds = %296, %85
  %333 = phi i32 [ %52, %85 ], [ %268, %296 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %334 = add nuw nsw i32 %51, 1
  br label %50

335:                                              ; preds = %331, %96
  %336 = phi i32 [ %302, %331 ], [ %99, %96 ]
  %337 = phi ptr [ %303, %331 ], [ %98, %96 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  br label %436

338:                                              ; preds = %38
  %339 = invoke noundef ptr @_ZNK25SectionBasedConfiguration16internalGetValueERKSt6vectorIiSaIiEEPKcS6_(ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef %43, ptr noundef null)
          to label %340 unwind label %408

340:                                              ; preds = %338
  %341 = invoke noundef i64 @_ZN14cConfiguration9parseLongEPKcS1_l(ptr noundef %339, ptr noundef null, i64 noundef 1)
          to label %342 unwind label %410

342:                                              ; preds = %340
  %343 = trunc i64 %341 to i32
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %8) #28
  %344 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 2
  store ptr %344, ptr %8, align 8, !tbaa !11
  %345 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 1
  store i64 0, ptr %345, align 8, !tbaa !13
  store i8 0, ptr %344, align 8, !tbaa !16
  %346 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %8, i64 0, i32 1
  %347 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %8, i64 0, i32 1, i32 2
  store ptr %347, ptr %346, align 8, !tbaa !11
  %348 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %8, i64 0, i32 1, i32 1
  store i64 0, ptr %348, align 8, !tbaa !13
  store i8 0, ptr %347, align 8, !tbaa !16
  %349 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %8, i64 0, i32 2
  %350 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %8, i64 0, i32 2, i32 2
  store ptr %350, ptr %349, align 8, !tbaa !11
  %351 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %8, i64 0, i32 2, i32 1
  store i64 0, ptr %351, align 8, !tbaa !13
  store i8 0, ptr %350, align 8, !tbaa !16
  %352 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %8, i64 0, i32 3
  %353 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %8, i64 0, i32 3, i32 2
  store ptr %353, ptr %352, align 8, !tbaa !11
  %354 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %8, i64 0, i32 3, i32 1
  store i64 0, ptr %354, align 8, !tbaa !13
  store i8 0, ptr %353, align 8, !tbaa !16
  %355 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %346, i64 noundef 0, i64 noundef 0, ptr noundef nonnull @.str.39, i64 noundef 10)
          to label %356 unwind label %412

356:                                              ; preds = %342
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %8, ptr noundef nonnull align 8 dereferenceable(32) %355)
          to label %357 unwind label %412

357:                                              ; preds = %356
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %9) #28
  %358 = add nsw i32 %343, -1
  invoke void (ptr, ptr, ...) @_Z11opp_stringfB5cxx11PKcz(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %9, ptr noundef nonnull @.str.56, i32 noundef %358)
          to label %359 unwind label %414

359:                                              ; preds = %357
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %349, ptr noundef nonnull align 8 dereferenceable(32) %9)
          to label %360 unwind label %416

360:                                              ; preds = %359
  %361 = load ptr, ptr %9, align 8, !tbaa !63
  %362 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 2
  %363 = icmp eq ptr %361, %362
  br i1 %363, label %364, label %368

364:                                              ; preds = %360
  %365 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 1
  %366 = load i64, ptr %365, align 8, !tbaa !13
  %367 = icmp ult i64 %366, 16
  call void @llvm.assume(i1 %367)
  br label %369

368:                                              ; preds = %360
  call void @_ZdlPv(ptr noundef %361) #26
  br label %369

369:                                              ; preds = %368, %364
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #28
  %370 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %371 = load ptr, ptr %370, align 8, !tbaa !5
  %372 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %373 = load ptr, ptr %372, align 8, !tbaa !113
  %374 = icmp eq ptr %371, %373
  br i1 %374, label %379, label %375

375:                                              ; preds = %369
  invoke void @_ZN25SectionBasedConfiguration17IterationVariableC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(128) %371, ptr noundef nonnull align 8 dereferenceable(128) %8)
          to label %376 unwind label %412

376:                                              ; preds = %375
  %377 = load ptr, ptr %370, align 8, !tbaa !110
  %378 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %377, i64 1
  store ptr %378, ptr %370, align 8, !tbaa !110
  br label %380

379:                                              ; preds = %369
  invoke void @_ZNSt6vectorIN25SectionBasedConfiguration17IterationVariableESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %371, ptr noundef nonnull align 8 dereferenceable(128) %8)
          to label %380 unwind label %412

380:                                              ; preds = %376, %379
  %381 = load ptr, ptr %352, align 8, !tbaa !63
  %382 = icmp eq ptr %381, %353
  br i1 %382, label %383, label %386

383:                                              ; preds = %380
  %384 = load i64, ptr %354, align 8, !tbaa !13
  %385 = icmp ult i64 %384, 16
  call void @llvm.assume(i1 %385)
  br label %387

386:                                              ; preds = %380
  call void @_ZdlPv(ptr noundef %381) #26
  br label %387

387:                                              ; preds = %386, %383
  %388 = load ptr, ptr %349, align 8, !tbaa !63
  %389 = icmp eq ptr %388, %350
  br i1 %389, label %390, label %393

390:                                              ; preds = %387
  %391 = load i64, ptr %351, align 8, !tbaa !13
  %392 = icmp ult i64 %391, 16
  call void @llvm.assume(i1 %392)
  br label %394

393:                                              ; preds = %387
  call void @_ZdlPv(ptr noundef %388) #26
  br label %394

394:                                              ; preds = %393, %390
  %395 = load ptr, ptr %346, align 8, !tbaa !63
  %396 = icmp eq ptr %395, %347
  br i1 %396, label %397, label %400

397:                                              ; preds = %394
  %398 = load i64, ptr %348, align 8, !tbaa !13
  %399 = icmp ult i64 %398, 16
  call void @llvm.assume(i1 %399)
  br label %401

400:                                              ; preds = %394
  call void @_ZdlPv(ptr noundef %395) #26
  br label %401

401:                                              ; preds = %400, %397
  %402 = load ptr, ptr %8, align 8, !tbaa !63
  %403 = icmp eq ptr %402, %344
  br i1 %403, label %404, label %407

404:                                              ; preds = %401
  %405 = load i64, ptr %345, align 8, !tbaa !13
  %406 = icmp ult i64 %405, 16
  call void @llvm.assume(i1 %406)
  br label %428

407:                                              ; preds = %401
  call void @_ZdlPv(ptr noundef %402) #26
  br label %428

408:                                              ; preds = %338, %38
  %409 = landingpad { ptr, i32 }
          cleanup
  br label %432

410:                                              ; preds = %340
  %411 = landingpad { ptr, i32 }
          cleanup
  br label %432

412:                                              ; preds = %379, %375, %356, %342
  %413 = landingpad { ptr, i32 }
          cleanup
  br label %429

414:                                              ; preds = %357
  %415 = landingpad { ptr, i32 }
          cleanup
  br label %426

416:                                              ; preds = %359
  %417 = landingpad { ptr, i32 }
          cleanup
  %418 = load ptr, ptr %9, align 8, !tbaa !63
  %419 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 2
  %420 = icmp eq ptr %418, %419
  br i1 %420, label %421, label %425

421:                                              ; preds = %416
  %422 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 1
  %423 = load i64, ptr %422, align 8, !tbaa !13
  %424 = icmp ult i64 %423, 16
  call void @llvm.assume(i1 %424)
  br label %426

425:                                              ; preds = %416
  call void @_ZdlPv(ptr noundef %418) #26
  br label %426

426:                                              ; preds = %425, %421, %414
  %427 = phi { ptr, i32 } [ %415, %414 ], [ %417, %421 ], [ %417, %425 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #28
  br label %429

428:                                              ; preds = %407, %404
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %8) #28
  ret void

429:                                              ; preds = %426, %412
  %430 = phi { ptr, i32 } [ %413, %412 ], [ %427, %426 ]
  invoke void @_ZN25SectionBasedConfiguration17IterationVariableD2Ev(ptr noundef nonnull align 8 dereferenceable(128) %8)
          to label %431 unwind label %495

431:                                              ; preds = %429
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %8) #28
  br label %432

432:                                              ; preds = %410, %431, %408
  %433 = phi { ptr, i32 } [ %409, %408 ], [ %430, %431 ], [ %411, %410 ]
  %434 = extractvalue { ptr, i32 } %433, 0
  %435 = extractvalue { ptr, i32 } %433, 1
  br label %436

436:                                              ; preds = %70, %335, %92, %432
  %437 = phi i32 [ %435, %432 ], [ %73, %70 ], [ %336, %335 ], [ %95, %92 ]
  %438 = phi ptr [ %434, %432 ], [ %72, %70 ], [ %337, %335 ], [ %94, %92 ]
  %439 = load ptr, ptr %0, align 8, !tbaa !108
  %440 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %441 = load ptr, ptr %440, align 8, !tbaa !110
  %442 = icmp eq ptr %439, %441
  br i1 %442, label %488, label %443

443:                                              ; preds = %436, %483
  %444 = phi ptr [ %484, %483 ], [ %439, %436 ]
  %445 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %444, i64 0, i32 3
  %446 = load ptr, ptr %445, align 8, !tbaa !63
  %447 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %444, i64 0, i32 3, i32 2
  %448 = icmp eq ptr %446, %447
  br i1 %448, label %449, label %453

449:                                              ; preds = %443
  %450 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %444, i64 0, i32 3, i32 1
  %451 = load i64, ptr %450, align 8, !tbaa !13
  %452 = icmp ult i64 %451, 16
  call void @llvm.assume(i1 %452)
  br label %454

453:                                              ; preds = %443
  call void @_ZdlPv(ptr noundef %446) #26
  br label %454

454:                                              ; preds = %453, %449
  %455 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %444, i64 0, i32 2
  %456 = load ptr, ptr %455, align 8, !tbaa !63
  %457 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %444, i64 0, i32 2, i32 2
  %458 = icmp eq ptr %456, %457
  br i1 %458, label %459, label %463

459:                                              ; preds = %454
  %460 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %444, i64 0, i32 2, i32 1
  %461 = load i64, ptr %460, align 8, !tbaa !13
  %462 = icmp ult i64 %461, 16
  call void @llvm.assume(i1 %462)
  br label %464

463:                                              ; preds = %454
  call void @_ZdlPv(ptr noundef %456) #26
  br label %464

464:                                              ; preds = %463, %459
  %465 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %444, i64 0, i32 1
  %466 = load ptr, ptr %465, align 8, !tbaa !63
  %467 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %444, i64 0, i32 1, i32 2
  %468 = icmp eq ptr %466, %467
  br i1 %468, label %469, label %473

469:                                              ; preds = %464
  %470 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %444, i64 0, i32 1, i32 1
  %471 = load i64, ptr %470, align 8, !tbaa !13
  %472 = icmp ult i64 %471, 16
  call void @llvm.assume(i1 %472)
  br label %474

473:                                              ; preds = %464
  call void @_ZdlPv(ptr noundef %466) #26
  br label %474

474:                                              ; preds = %473, %469
  %475 = load ptr, ptr %444, align 8, !tbaa !63
  %476 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %444, i64 0, i32 2
  %477 = icmp eq ptr %475, %476
  br i1 %477, label %478, label %482

478:                                              ; preds = %474
  %479 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %444, i64 0, i32 1
  %480 = load i64, ptr %479, align 8, !tbaa !13
  %481 = icmp ult i64 %480, 16
  call void @llvm.assume(i1 %481)
  br label %483

482:                                              ; preds = %474
  call void @_ZdlPv(ptr noundef %475) #26
  br label %483

483:                                              ; preds = %482, %478
  %484 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %444, i64 1
  %485 = icmp eq ptr %484, %441
  br i1 %485, label %486, label %443

486:                                              ; preds = %483
  %487 = load ptr, ptr %0, align 8, !tbaa !108
  br label %488

488:                                              ; preds = %486, %436
  %489 = phi ptr [ %487, %486 ], [ %439, %436 ]
  %490 = icmp eq ptr %489, null
  br i1 %490, label %492, label %491

491:                                              ; preds = %488
  call void @_ZdlPv(ptr noundef nonnull %489) #26
  br label %492

492:                                              ; preds = %491, %488
  %493 = insertvalue { ptr, i32 } poison, ptr %438, 0
  %494 = insertvalue { ptr, i32 } %493, i32 %437, 1
  resume { ptr, i32 } %494

495:                                              ; preds = %429, %128
  %496 = landingpad { ptr, i32 }
          catch ptr null
  %497 = extractvalue { ptr, i32 } %496, 0
  call void @__clang_call_terminate(ptr %497) #27
  unreachable

498:                                              ; preds = %203, %190, %123
  unreachable
}

declare void @_ZN8ScenarioC1ERKSt6vectorIN25SectionBasedConfiguration17IterationVariableESaIS2_EEPKc(ptr noundef nonnull align 8 dereferenceable(88), ptr noundef nonnull align 8 dereferenceable(24), ptr noundef) unnamed_addr #1

declare noundef i32 @_ZN8Scenario10getNumRunsEv(ptr noundef nonnull align 8 dereferenceable(88)) local_unnamed_addr #1

declare void @_ZN8Scenario7gotoRunEi(ptr noundef nonnull align 8 dereferenceable(88), i32 noundef) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN25SectionBasedConfiguration14setupVariablesEPKciP8ScenarioRKSt6vectorIiSaIiEE(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, ptr nocapture noundef nonnull readonly align 8 dereferenceable(24) %4) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = alloca %"class.std::__cxx11::basic_string", align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.std::__cxx11::basic_string", align 8
  %14 = alloca %"class.std::__cxx11::basic_string", align 8
  %15 = alloca %"class.std::__cxx11::basic_string", align 8
  %16 = alloca %"class.std::__cxx11::basic_string", align 8
  %17 = alloca %"class.std::__cxx11::basic_string", align 8
  %18 = alloca %"class.std::__cxx11::basic_string", align 8
  %19 = alloca %"class.std::__cxx11::basic_string", align 8
  %20 = alloca %"class.std::__cxx11::basic_string", align 8
  %21 = alloca %"class.std::__cxx11::basic_string", align 8
  %22 = alloca %"class.std::__cxx11::basic_string", align 8
  %23 = alloca %"class.std::__cxx11::basic_string", align 8
  %24 = alloca %"class.std::__cxx11::basic_string", align 8
  %25 = alloca %"class.std::__cxx11::basic_string", align 8
  %26 = alloca %"class.std::__cxx11::basic_string", align 8
  %27 = alloca %"class.std::__cxx11::basic_string", align 8
  %28 = alloca %"class.std::__cxx11::basic_string", align 8
  %29 = alloca %"class.std::__cxx11::basic_string", align 8
  %30 = alloca %"class.std::__cxx11::basic_string", align 8
  %31 = alloca %"class.std::__cxx11::basic_string", align 8
  %32 = alloca %"class.std::__cxx11::basic_string", align 8
  %33 = alloca %"class.std::__cxx11::basic_string", align 8
  %34 = alloca %"class.std::__cxx11::basic_string", align 8
  %35 = alloca %"class.std::__cxx11::basic_string", align 8
  %36 = alloca %"class.std::__cxx11::basic_string", align 8
  %37 = alloca %"class.std::__cxx11::basic_string", align 8
  %38 = alloca %"class.std::__cxx11::basic_string", align 8
  %39 = alloca %"class.std::__cxx11::basic_string", align 8
  %40 = alloca %"class.std::__cxx11::basic_string", align 8
  %41 = load ptr, ptr @CFGID_RUNNUMBER_WIDTH, align 8, !tbaa !5
  %42 = load ptr, ptr %41, align 8, !tbaa !9
  %43 = getelementptr inbounds ptr, ptr %42, i64 6
  %44 = load ptr, ptr %43, align 8
  %45 = tail call noundef ptr %44(ptr noundef nonnull align 8 dereferenceable(20) %41)
  %46 = tail call noundef ptr @_ZNK25SectionBasedConfiguration16internalGetValueERKSt6vectorIiSaIiEEPKcS6_(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %45, ptr noundef null)
  %47 = icmp eq ptr %46, null
  %48 = select i1 %47, ptr @.str.14, ptr %46
  %49 = tail call i64 @__isoc23_strtol(ptr noundef nonnull %48, ptr noundef null, i32 noundef 10) #28
  %50 = trunc i64 %49 to i32
  %51 = tail call i32 @llvm.smax.i32(i32 %50, i32 0)
  %52 = load ptr, ptr %0, align 8, !tbaa !9
  %53 = getelementptr inbounds ptr, ptr %52, i64 41
  %54 = load ptr, ptr %53, align 8
  %55 = tail call noundef ptr %54(ptr noundef nonnull align 8 dereferenceable(416) %0)
  %56 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #28
  %57 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  store ptr %57, ptr %7, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %57, ptr noundef nonnull align 1 dereferenceable(7) @.str.23, i64 7, i1 false)
  %58 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 1
  store i64 7, ptr %58, align 8, !tbaa !13
  %59 = getelementptr inbounds i8, ptr %7, i64 23
  store i8 0, ptr %59, align 1, !tbaa !16
  %60 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %7)
          to label %61 unwind label %272

61:                                               ; preds = %5
  %62 = icmp eq ptr %55, null
  %63 = select i1 %62, ptr @.str.14, ptr %55
  %64 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %60, i64 0, i32 1
  %65 = load i64, ptr %64, align 8, !tbaa !13
  %66 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %63) #28
  %67 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %60, i64 noundef 0, i64 noundef %65, ptr noundef nonnull %63, i64 noundef %66)
          to label %68 unwind label %272

68:                                               ; preds = %61
  %69 = load ptr, ptr %7, align 8, !tbaa !63
  %70 = icmp eq ptr %69, %57
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  %72 = load i64, ptr %58, align 8, !tbaa !13
  %73 = icmp ult i64 %72, 16
  call void @llvm.assume(i1 %73)
  br label %75

74:                                               ; preds = %68
  call void @_ZdlPv(ptr noundef %69) #26
  br label %75

75:                                               ; preds = %74, %71
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %8) #28
  %76 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 2
  store ptr %76, ptr %8, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %76, ptr noundef nonnull align 1 dereferenceable(10) @.str.24, i64 10, i1 false)
  %77 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 1
  store i64 10, ptr %77, align 8, !tbaa !13
  %78 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 2, i32 1, i64 2
  store i8 0, ptr %78, align 2, !tbaa !16
  %79 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %8)
          to label %80 unwind label %281

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %79, i64 0, i32 1
  %82 = load i64, ptr %81, align 8, !tbaa !13
  %83 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #28
  %84 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %79, i64 noundef 0, i64 noundef %82, ptr noundef %1, i64 noundef %83)
          to label %85 unwind label %281

85:                                               ; preds = %80
  %86 = load ptr, ptr %8, align 8, !tbaa !63
  %87 = icmp eq ptr %86, %76
  br i1 %87, label %88, label %91

88:                                               ; preds = %85
  %89 = load i64, ptr %77, align 8, !tbaa !13
  %90 = icmp ult i64 %89, 16
  call void @llvm.assume(i1 %90)
  br label %92

91:                                               ; preds = %85
  call void @_ZdlPv(ptr noundef %86) #26
  br label %92

92:                                               ; preds = %91, %88
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %9) #28
  call void (ptr, ptr, ...) @_Z11opp_stringfB5cxx11PKcz(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %9, ptr noundef nonnull @.str.25, i32 noundef %51, i32 noundef %2)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #28
  %93 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2
  store ptr %93, ptr %10, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %93, ptr noundef nonnull align 1 dereferenceable(9) @.str.26, i64 9, i1 false)
  %94 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 1
  store i64 9, ptr %94, align 8, !tbaa !13
  %95 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2, i32 1, i64 1
  store i8 0, ptr %95, align 1, !tbaa !16
  %96 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %10)
          to label %97 unwind label %290

97:                                               ; preds = %92
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %96, ptr noundef nonnull align 8 dereferenceable(32) %9)
          to label %98 unwind label %290

98:                                               ; preds = %97
  %99 = load ptr, ptr %10, align 8, !tbaa !63
  %100 = icmp eq ptr %99, %93
  br i1 %100, label %101, label %104

101:                                              ; preds = %98
  %102 = load i64, ptr %94, align 8, !tbaa !13
  %103 = icmp ult i64 %102, 16
  call void @llvm.assume(i1 %103)
  br label %105

104:                                              ; preds = %98
  call void @_ZdlPv(ptr noundef %99) #26
  br label %105

105:                                              ; preds = %104, %101
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #28
  %106 = load ptr, ptr %9, align 8, !tbaa !63
  %107 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 2
  %108 = icmp eq ptr %106, %107
  br i1 %108, label %109, label %113

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 1
  %111 = load i64, ptr %110, align 8, !tbaa !13
  %112 = icmp ult i64 %111, 16
  call void @llvm.assume(i1 %112)
  br label %114

113:                                              ; preds = %105
  call void @_ZdlPv(ptr noundef %106) #26
  br label %114

114:                                              ; preds = %109, %113
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #28
  %115 = load ptr, ptr @CFGID_NETWORK, align 8, !tbaa !5
  %116 = load ptr, ptr %115, align 8, !tbaa !9
  %117 = getelementptr inbounds ptr, ptr %116, i64 6
  %118 = load ptr, ptr %117, align 8
  %119 = call noundef ptr %118(ptr noundef nonnull align 8 dereferenceable(20) %115)
  %120 = call noundef ptr @_ZNK25SectionBasedConfiguration16internalGetValueERKSt6vectorIiSaIiEEPKcS6_(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %119, ptr noundef null)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %11) #28
  %121 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 2
  store ptr %121, ptr %11, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %121, ptr noundef nonnull align 1 dereferenceable(7) @.str.27, i64 7, i1 false)
  %122 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 1
  store i64 7, ptr %122, align 8, !tbaa !13
  %123 = getelementptr inbounds i8, ptr %11, i64 23
  store i8 0, ptr %123, align 1, !tbaa !16
  %124 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %11)
          to label %125 unwind label %308

125:                                              ; preds = %114
  %126 = icmp eq ptr %120, null
  %127 = select i1 %126, ptr @.str.14, ptr %120
  %128 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %124, i64 0, i32 1
  %129 = load i64, ptr %128, align 8, !tbaa !13
  %130 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %127) #28
  %131 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %124, i64 noundef 0, i64 noundef %129, ptr noundef nonnull %127, i64 noundef %130)
          to label %132 unwind label %308

132:                                              ; preds = %125
  %133 = load ptr, ptr %11, align 8, !tbaa !63
  %134 = icmp eq ptr %133, %121
  br i1 %134, label %135, label %138

135:                                              ; preds = %132
  %136 = load i64, ptr %122, align 8, !tbaa !13
  %137 = icmp ult i64 %136, 16
  call void @llvm.assume(i1 %137)
  br label %139

138:                                              ; preds = %132
  call void @_ZdlPv(ptr noundef %133) #26
  br label %139

139:                                              ; preds = %138, %135
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #28
  %140 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  store ptr %140, ptr %12, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %140, ptr noundef nonnull align 1 dereferenceable(9) @.str.29, i64 9, i1 false)
  %141 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 1
  store i64 9, ptr %141, align 8, !tbaa !13
  %142 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2, i32 1, i64 1
  store i8 0, ptr %142, align 1, !tbaa !16
  %143 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %144 unwind label %317

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %143, i64 0, i32 1
  %146 = load i64, ptr %145, align 8, !tbaa !13
  %147 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %143, i64 noundef 0, i64 noundef %146, ptr noundef nonnull @.str.28, i64 noundef 11)
          to label %148 unwind label %317

148:                                              ; preds = %144
  %149 = load ptr, ptr %12, align 8, !tbaa !63
  %150 = icmp eq ptr %149, %140
  br i1 %150, label %151, label %154

151:                                              ; preds = %148
  %152 = load i64, ptr %141, align 8, !tbaa !13
  %153 = icmp ult i64 %152, 16
  call void @llvm.assume(i1 %153)
  br label %155

154:                                              ; preds = %148
  call void @_ZdlPv(ptr noundef %149) #26
  br label %155

155:                                              ; preds = %154, %151
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #28
  %156 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 2
  store ptr %156, ptr %13, align 8, !tbaa !11
  store i64 7308613718931431780, ptr %156, align 8
  %157 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 1
  store i64 8, ptr %157, align 8, !tbaa !13
  %158 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 2, i32 1
  store i8 0, ptr %158, align 8, !tbaa !16
  %159 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %13)
          to label %160 unwind label %326

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %159, i64 0, i32 1
  %162 = load i64, ptr %161, align 8, !tbaa !13
  %163 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %159, i64 noundef 0, i64 noundef %162, ptr noundef nonnull @.str.30, i64 noundef 16)
          to label %164 unwind label %326

164:                                              ; preds = %160
  %165 = load ptr, ptr %13, align 8, !tbaa !63
  %166 = icmp eq ptr %165, %156
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i64, ptr %157, align 8, !tbaa !13
  %169 = icmp ult i64 %168, 16
  call void @llvm.assume(i1 %169)
  br label %171

170:                                              ; preds = %164
  call void @_ZdlPv(ptr noundef %165) #26
  br label %171

171:                                              ; preds = %170, %167
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %14) #28
  %172 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 2
  store ptr %172, ptr %14, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %172, ptr noundef nonnull align 1 dereferenceable(5) @.str.33, i64 5, i1 false)
  %173 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 1
  store i64 5, ptr %173, align 8, !tbaa !13
  %174 = getelementptr inbounds i8, ptr %14, i64 21
  store i8 0, ptr %174, align 1, !tbaa !16
  %175 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %14)
          to label %176 unwind label %335

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %175, i64 0, i32 1
  %178 = load i64, ptr %177, align 8, !tbaa !13
  %179 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %175, i64 noundef 0, i64 noundef %178, ptr noundef nonnull @.str.32, i64 noundef 13)
          to label %180 unwind label %335

180:                                              ; preds = %176
  %181 = load ptr, ptr %14, align 8, !tbaa !63
  %182 = icmp eq ptr %181, %172
  br i1 %182, label %183, label %186

183:                                              ; preds = %180
  %184 = load i64, ptr %173, align 8, !tbaa !13
  %185 = icmp ult i64 %184, 16
  call void @llvm.assume(i1 %185)
  br label %187

186:                                              ; preds = %180
  call void @_ZdlPv(ptr noundef %181) #26
  br label %187

187:                                              ; preds = %186, %183
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14) #28
  %188 = load ptr, ptr @CFGID_RESULT_DIR, align 8, !tbaa !5
  %189 = load ptr, ptr %188, align 8, !tbaa !9
  %190 = getelementptr inbounds ptr, ptr %189, i64 6
  %191 = load ptr, ptr %190, align 8
  %192 = call noundef ptr %191(ptr noundef nonnull align 8 dereferenceable(20) %188)
  %193 = load ptr, ptr @CFGID_RESULT_DIR, align 8, !tbaa !5
  %194 = getelementptr inbounds %class.cConfigOption, ptr %193, i64 0, i32 5
  %195 = getelementptr inbounds %class.cConfigOption, ptr %193, i64 0, i32 5, i32 1
  %196 = load i64, ptr %195, align 8, !tbaa !13
  %197 = icmp eq i64 %196, 0
  %198 = load ptr, ptr %194, align 8
  %199 = select i1 %197, ptr null, ptr %198
  %200 = call noundef ptr @_ZNK25SectionBasedConfiguration16internalGetValueERKSt6vectorIiSaIiEEPKcS6_(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %192, ptr noundef %199)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #28
  %201 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 2
  store ptr %201, ptr %15, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %201, ptr noundef nonnull align 1 dereferenceable(9) @.str.34, i64 9, i1 false)
  %202 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 1
  store i64 9, ptr %202, align 8, !tbaa !13
  %203 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 2, i32 1, i64 1
  store i8 0, ptr %203, align 1, !tbaa !16
  %204 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %15)
          to label %205 unwind label %344

205:                                              ; preds = %187
  %206 = icmp eq ptr %200, null
  %207 = select i1 %206, ptr @.str.14, ptr %200
  %208 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %204, i64 0, i32 1
  %209 = load i64, ptr %208, align 8, !tbaa !13
  %210 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %207) #28
  %211 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %204, i64 noundef 0, i64 noundef %209, ptr noundef nonnull %207, i64 noundef %210)
          to label %212 unwind label %344

212:                                              ; preds = %205
  %213 = load ptr, ptr %15, align 8, !tbaa !63
  %214 = icmp eq ptr %213, %201
  br i1 %214, label %215, label %218

215:                                              ; preds = %212
  %216 = load i64, ptr %202, align 8, !tbaa !13
  %217 = icmp ult i64 %216, 16
  call void @llvm.assume(i1 %217)
  br label %219

218:                                              ; preds = %212
  call void @_ZdlPv(ptr noundef %213) #26
  br label %219

219:                                              ; preds = %218, %215
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #28
  %220 = load ptr, ptr %3, align 8, !tbaa !114
  %221 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data", ptr %220, i64 0, i32 1
  %222 = load ptr, ptr %221, align 8, !tbaa !110
  %223 = load ptr, ptr %220, align 8, !tbaa !108
  %224 = ptrtoint ptr %222 to i64
  %225 = ptrtoint ptr %223 to i64
  %226 = sub i64 %224, %225
  %227 = lshr exact i64 %226, 7
  %228 = trunc i64 %227 to i32
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %242

230:                                              ; preds = %219
  %231 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %17, i64 0, i32 2
  %232 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %17, i64 0, i32 1
  %233 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 2
  %234 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 1
  %235 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %20, i64 0, i32 2
  %236 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %20, i64 0, i32 1
  %237 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 2
  %238 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 1
  %239 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %18, i64 0, i32 2
  %240 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %18, i64 0, i32 1
  %241 = getelementptr inbounds i8, ptr %20, i64 17
  br label %353

242:                                              ; preds = %446, %219
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %21) #28
  %243 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %21, i64 0, i32 2
  store ptr %243, ptr %21, align 8, !tbaa !11
  %244 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %21, i64 0, i32 1
  store i64 0, ptr %244, align 8, !tbaa !13
  store i8 0, ptr %243, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %22) #28
  %245 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %22, i64 0, i32 2
  store ptr %245, ptr %22, align 8, !tbaa !11
  %246 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %22, i64 0, i32 1
  store i64 0, ptr %246, align 8, !tbaa !13
  store i8 0, ptr %245, align 8, !tbaa !16
  %247 = load ptr, ptr %221, align 8, !tbaa !110
  %248 = load ptr, ptr %220, align 8, !tbaa !108
  %249 = ptrtoint ptr %247 to i64
  %250 = ptrtoint ptr %248 to i64
  %251 = sub i64 %249, %250
  %252 = lshr exact i64 %251, 7
  %253 = trunc i64 %252 to i32
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %255, label %501

255:                                              ; preds = %242
  %256 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %25, i64 0, i32 2
  %257 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %25, i64 0, i32 1
  %258 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 0, i32 2
  %259 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 0, i32 1
  %260 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %26, i64 0, i32 1
  %261 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %23, i64 0, i32 2
  %262 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %23, i64 0, i32 1
  %263 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %26, i64 0, i32 2
  %264 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 2
  %265 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 1
  %266 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 2
  %267 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 1
  %268 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %30, i64 0, i32 2
  %269 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %30, i64 0, i32 1
  %270 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 2
  %271 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 1
  br label %506

272:                                              ; preds = %61, %5
  %273 = landingpad { ptr, i32 }
          cleanup
  %274 = load ptr, ptr %7, align 8, !tbaa !63
  %275 = icmp eq ptr %274, %57
  br i1 %275, label %276, label %279

276:                                              ; preds = %272
  %277 = load i64, ptr %58, align 8, !tbaa !13
  %278 = icmp ult i64 %277, 16
  call void @llvm.assume(i1 %278)
  br label %280

279:                                              ; preds = %272
  call void @_ZdlPv(ptr noundef %274) #26
  br label %280

280:                                              ; preds = %279, %276
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #28
  br label %1156

281:                                              ; preds = %80, %75
  %282 = landingpad { ptr, i32 }
          cleanup
  %283 = load ptr, ptr %8, align 8, !tbaa !63
  %284 = icmp eq ptr %283, %76
  br i1 %284, label %285, label %288

285:                                              ; preds = %281
  %286 = load i64, ptr %77, align 8, !tbaa !13
  %287 = icmp ult i64 %286, 16
  call void @llvm.assume(i1 %287)
  br label %289

288:                                              ; preds = %281
  call void @_ZdlPv(ptr noundef %283) #26
  br label %289

289:                                              ; preds = %288, %285
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #28
  br label %1156

290:                                              ; preds = %97, %92
  %291 = landingpad { ptr, i32 }
          cleanup
  %292 = load ptr, ptr %10, align 8, !tbaa !63
  %293 = icmp eq ptr %292, %93
  br i1 %293, label %294, label %297

294:                                              ; preds = %290
  %295 = load i64, ptr %94, align 8, !tbaa !13
  %296 = icmp ult i64 %295, 16
  call void @llvm.assume(i1 %296)
  br label %298

297:                                              ; preds = %290
  call void @_ZdlPv(ptr noundef %292) #26
  br label %298

298:                                              ; preds = %297, %294
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #28
  %299 = load ptr, ptr %9, align 8, !tbaa !63
  %300 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 2
  %301 = icmp eq ptr %299, %300
  br i1 %301, label %302, label %306

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 1
  %304 = load i64, ptr %303, align 8, !tbaa !13
  %305 = icmp ult i64 %304, 16
  call void @llvm.assume(i1 %305)
  br label %307

306:                                              ; preds = %298
  call void @_ZdlPv(ptr noundef %299) #26
  br label %307

307:                                              ; preds = %306, %302
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #28
  br label %1156

308:                                              ; preds = %125, %114
  %309 = landingpad { ptr, i32 }
          cleanup
  %310 = load ptr, ptr %11, align 8, !tbaa !63
  %311 = icmp eq ptr %310, %121
  br i1 %311, label %312, label %315

312:                                              ; preds = %308
  %313 = load i64, ptr %122, align 8, !tbaa !13
  %314 = icmp ult i64 %313, 16
  call void @llvm.assume(i1 %314)
  br label %316

315:                                              ; preds = %308
  call void @_ZdlPv(ptr noundef %310) #26
  br label %316

316:                                              ; preds = %315, %312
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #28
  br label %1156

317:                                              ; preds = %144, %139
  %318 = landingpad { ptr, i32 }
          cleanup
  %319 = load ptr, ptr %12, align 8, !tbaa !63
  %320 = icmp eq ptr %319, %140
  br i1 %320, label %321, label %324

321:                                              ; preds = %317
  %322 = load i64, ptr %141, align 8, !tbaa !13
  %323 = icmp ult i64 %322, 16
  call void @llvm.assume(i1 %323)
  br label %325

324:                                              ; preds = %317
  call void @_ZdlPv(ptr noundef %319) #26
  br label %325

325:                                              ; preds = %324, %321
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #28
  br label %1156

326:                                              ; preds = %160, %155
  %327 = landingpad { ptr, i32 }
          cleanup
  %328 = load ptr, ptr %13, align 8, !tbaa !63
  %329 = icmp eq ptr %328, %156
  br i1 %329, label %330, label %333

330:                                              ; preds = %326
  %331 = load i64, ptr %157, align 8, !tbaa !13
  %332 = icmp ult i64 %331, 16
  call void @llvm.assume(i1 %332)
  br label %334

333:                                              ; preds = %326
  call void @_ZdlPv(ptr noundef %328) #26
  br label %334

334:                                              ; preds = %333, %330
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #28
  br label %1156

335:                                              ; preds = %176, %171
  %336 = landingpad { ptr, i32 }
          cleanup
  %337 = load ptr, ptr %14, align 8, !tbaa !63
  %338 = icmp eq ptr %337, %172
  br i1 %338, label %339, label %342

339:                                              ; preds = %335
  %340 = load i64, ptr %173, align 8, !tbaa !13
  %341 = icmp ult i64 %340, 16
  call void @llvm.assume(i1 %341)
  br label %343

342:                                              ; preds = %335
  call void @_ZdlPv(ptr noundef %337) #26
  br label %343

343:                                              ; preds = %342, %339
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14) #28
  br label %1156

344:                                              ; preds = %205, %187
  %345 = landingpad { ptr, i32 }
          cleanup
  %346 = load ptr, ptr %15, align 8, !tbaa !63
  %347 = icmp eq ptr %346, %201
  br i1 %347, label %348, label %351

348:                                              ; preds = %344
  %349 = load i64, ptr %202, align 8, !tbaa !13
  %350 = icmp ult i64 %349, 16
  call void @llvm.assume(i1 %350)
  br label %352

351:                                              ; preds = %344
  call void @_ZdlPv(ptr noundef %346) #26
  br label %352

352:                                              ; preds = %351, %348
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #28
  br label %1156

353:                                              ; preds = %230, %446
  %354 = phi i64 [ 0, %230 ], [ %447, %446 ]
  %355 = phi ptr [ %223, %230 ], [ %449, %446 ]
  %356 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %355, i64 %354
  %357 = load ptr, ptr %356, align 8, !tbaa !63
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %16) #28
  call void @_ZNK8Scenario11getVariableB5cxx11EPKc(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %16, ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef %357)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %17) #28
  store ptr %231, ptr %17, align 8, !tbaa !11
  %358 = icmp eq ptr %357, null
  br i1 %358, label %359, label %361

359:                                              ; preds = %353
  invoke void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
          to label %360 unwind label %458

360:                                              ; preds = %359
  unreachable

361:                                              ; preds = %353
  %362 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %357) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #28
  store i64 %362, ptr %6, align 8, !tbaa !87
  %363 = icmp ugt i64 %362, 15
  br i1 %363, label %364, label %368

364:                                              ; preds = %361
  %365 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %17, ptr noundef nonnull align 8 dereferenceable(8) %6, i64 noundef 0)
          to label %366 unwind label %456

366:                                              ; preds = %364
  store ptr %365, ptr %17, align 8, !tbaa !63
  %367 = load i64, ptr %6, align 8, !tbaa !87
  store i64 %367, ptr %231, align 8, !tbaa !16
  br label %368

368:                                              ; preds = %366, %361
  %369 = phi ptr [ %365, %366 ], [ %231, %361 ]
  switch i64 %362, label %372 [
    i64 1, label %370
    i64 0, label %373
  ]

370:                                              ; preds = %368
  %371 = load i8, ptr %357, align 1, !tbaa !16
  store i8 %371, ptr %369, align 1, !tbaa !16
  br label %373

372:                                              ; preds = %368
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %369, ptr nonnull align 1 %357, i64 %362, i1 false)
  br label %373

373:                                              ; preds = %372, %370, %368
  %374 = load i64, ptr %6, align 8, !tbaa !87
  store i64 %374, ptr %232, align 8, !tbaa !13
  %375 = load ptr, ptr %17, align 8, !tbaa !63
  %376 = getelementptr inbounds i8, ptr %375, i64 %374
  store i8 0, ptr %376, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #28
  %377 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %17)
          to label %378 unwind label %460

378:                                              ; preds = %373
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %377, ptr noundef nonnull align 8 dereferenceable(32) %16)
          to label %379 unwind label %460

379:                                              ; preds = %378
  %380 = load ptr, ptr %17, align 8, !tbaa !63
  %381 = icmp eq ptr %380, %231
  br i1 %381, label %382, label %385

382:                                              ; preds = %379
  %383 = load i64, ptr %232, align 8, !tbaa !13
  %384 = icmp ult i64 %383, 16
  call void @llvm.assume(i1 %384)
  br label %386

385:                                              ; preds = %379
  call void @_ZdlPv(ptr noundef %380) #26
  br label %386

386:                                              ; preds = %385, %382
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %17) #28
  %387 = load ptr, ptr %16, align 8, !tbaa !63
  %388 = icmp eq ptr %387, %233
  br i1 %388, label %389, label %392

389:                                              ; preds = %386
  %390 = load i64, ptr %234, align 8, !tbaa !13
  %391 = icmp ult i64 %390, 16
  call void @llvm.assume(i1 %391)
  br label %393

392:                                              ; preds = %386
  call void @_ZdlPv(ptr noundef %387) #26
  br label %393

393:                                              ; preds = %389, %392
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %18) #28
  %394 = call noundef i32 @_ZNK8Scenario19getIteratorPositionEPKc(ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull %357)
  call void (ptr, ptr, ...) @_Z11opp_stringfB5cxx11PKcz(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %18, ptr noundef nonnull @.str.35, i32 noundef %394)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %19) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %20) #28
  store ptr %235, ptr %20, align 8, !tbaa !11
  store i8 38, ptr %235, align 8, !tbaa !16
  store i64 1, ptr %236, align 8, !tbaa !13
  store i8 0, ptr %241, align 1, !tbaa !16
  call void @llvm.experimental.noalias.scope.decl(metadata !123)
  %395 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %357) #28, !noalias !123
  store ptr %237, ptr %19, align 8, !tbaa !11, !alias.scope !126
  store i64 0, ptr %238, align 8, !tbaa !13, !alias.scope !126
  store i8 0, ptr %237, align 8, !tbaa !16, !alias.scope !126
  %396 = add i64 %395, 1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %19, i64 noundef %396)
          to label %397 unwind label %410

397:                                              ; preds = %393
  %398 = load i64, ptr %238, align 8, !tbaa !13, !alias.scope !126
  %399 = icmp eq i64 %398, 4611686018427387903
  br i1 %399, label %406, label %400

400:                                              ; preds = %397
  %401 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %19, ptr noundef nonnull %235, i64 noundef 1)
          to label %402 unwind label %410

402:                                              ; preds = %400
  %403 = load i64, ptr %238, align 8, !tbaa !13, !alias.scope !126
  %404 = sub i64 4611686018427387903, %403
  %405 = icmp ult i64 %404, %395
  br i1 %405, label %406, label %408

406:                                              ; preds = %402, %397
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %407 unwind label %412

407:                                              ; preds = %406
  unreachable

408:                                              ; preds = %402
  %409 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %19, ptr noundef nonnull %357, i64 noundef %395)
          to label %422 unwind label %410

410:                                              ; preds = %393, %400, %408
  %411 = landingpad { ptr, i32 }
          cleanup
  br label %414

412:                                              ; preds = %406
  %413 = landingpad { ptr, i32 }
          cleanup
  br label %414

414:                                              ; preds = %412, %410
  %415 = phi { ptr, i32 } [ %411, %410 ], [ %413, %412 ]
  %416 = load ptr, ptr %19, align 8, !tbaa !63, !alias.scope !126
  %417 = icmp eq ptr %416, %237
  br i1 %417, label %418, label %421

418:                                              ; preds = %414
  %419 = load i64, ptr %238, align 8, !tbaa !13, !alias.scope !126
  %420 = icmp ult i64 %419, 16
  call void @llvm.assume(i1 %420)
  br label %485

421:                                              ; preds = %414
  call void @_ZdlPv(ptr noundef %416) #26
  br label %485

422:                                              ; preds = %408
  %423 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %19)
          to label %424 unwind label %477

424:                                              ; preds = %422
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %423, ptr noundef nonnull align 8 dereferenceable(32) %18)
          to label %425 unwind label %477

425:                                              ; preds = %424
  %426 = load ptr, ptr %19, align 8, !tbaa !63
  %427 = icmp eq ptr %426, %237
  br i1 %427, label %428, label %431

428:                                              ; preds = %425
  %429 = load i64, ptr %238, align 8, !tbaa !13
  %430 = icmp ult i64 %429, 16
  call void @llvm.assume(i1 %430)
  br label %432

431:                                              ; preds = %425
  call void @_ZdlPv(ptr noundef %426) #26
  br label %432

432:                                              ; preds = %431, %428
  %433 = load ptr, ptr %20, align 8, !tbaa !63
  %434 = icmp eq ptr %433, %235
  br i1 %434, label %435, label %438

435:                                              ; preds = %432
  %436 = load i64, ptr %236, align 8, !tbaa !13
  %437 = icmp ult i64 %436, 16
  call void @llvm.assume(i1 %437)
  br label %439

438:                                              ; preds = %432
  call void @_ZdlPv(ptr noundef %433) #26
  br label %439

439:                                              ; preds = %438, %435
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %20) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %19) #28
  %440 = load ptr, ptr %18, align 8, !tbaa !63
  %441 = icmp eq ptr %440, %239
  br i1 %441, label %442, label %445

442:                                              ; preds = %439
  %443 = load i64, ptr %240, align 8, !tbaa !13
  %444 = icmp ult i64 %443, 16
  call void @llvm.assume(i1 %444)
  br label %446

445:                                              ; preds = %439
  call void @_ZdlPv(ptr noundef %440) #26
  br label %446

446:                                              ; preds = %442, %445
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18) #28
  %447 = add nuw nsw i64 %354, 1
  %448 = load ptr, ptr %221, align 8, !tbaa !110
  %449 = load ptr, ptr %220, align 8, !tbaa !108
  %450 = ptrtoint ptr %448 to i64
  %451 = ptrtoint ptr %449 to i64
  %452 = sub i64 %450, %451
  %453 = shl i64 %452, 25
  %454 = ashr i64 %453, 32
  %455 = icmp slt i64 %447, %454
  br i1 %455, label %353, label %242

456:                                              ; preds = %364
  %457 = landingpad { ptr, i32 }
          cleanup
  br label %468

458:                                              ; preds = %359
  %459 = landingpad { ptr, i32 }
          cleanup
  br label %468

460:                                              ; preds = %378, %373
  %461 = landingpad { ptr, i32 }
          cleanup
  %462 = load ptr, ptr %17, align 8, !tbaa !63
  %463 = icmp eq ptr %462, %231
  br i1 %463, label %464, label %467

464:                                              ; preds = %460
  %465 = load i64, ptr %232, align 8, !tbaa !13
  %466 = icmp ult i64 %465, 16
  call void @llvm.assume(i1 %466)
  br label %468

467:                                              ; preds = %460
  call void @_ZdlPv(ptr noundef %462) #26
  br label %468

468:                                              ; preds = %456, %458, %467, %464
  %469 = phi { ptr, i32 } [ %461, %464 ], [ %461, %467 ], [ %457, %456 ], [ %459, %458 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %17) #28
  %470 = load ptr, ptr %16, align 8, !tbaa !63
  %471 = icmp eq ptr %470, %233
  br i1 %471, label %472, label %475

472:                                              ; preds = %468
  %473 = load i64, ptr %234, align 8, !tbaa !13
  %474 = icmp ult i64 %473, 16
  call void @llvm.assume(i1 %474)
  br label %476

475:                                              ; preds = %468
  call void @_ZdlPv(ptr noundef %470) #26
  br label %476

476:                                              ; preds = %475, %472
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #28
  br label %1156

477:                                              ; preds = %424, %422
  %478 = landingpad { ptr, i32 }
          cleanup
  %479 = load ptr, ptr %19, align 8, !tbaa !63
  %480 = icmp eq ptr %479, %237
  br i1 %480, label %481, label %484

481:                                              ; preds = %477
  %482 = load i64, ptr %238, align 8, !tbaa !13
  %483 = icmp ult i64 %482, 16
  call void @llvm.assume(i1 %483)
  br label %485

484:                                              ; preds = %477
  call void @_ZdlPv(ptr noundef %479) #26
  br label %485

485:                                              ; preds = %484, %481, %421, %418
  %486 = phi { ptr, i32 } [ %415, %421 ], [ %415, %418 ], [ %478, %481 ], [ %478, %484 ]
  %487 = load ptr, ptr %20, align 8, !tbaa !63
  %488 = icmp eq ptr %487, %235
  br i1 %488, label %489, label %492

489:                                              ; preds = %485
  %490 = load i64, ptr %236, align 8, !tbaa !13
  %491 = icmp ult i64 %490, 16
  call void @llvm.assume(i1 %491)
  br label %493

492:                                              ; preds = %485
  call void @_ZdlPv(ptr noundef %487) #26
  br label %493

493:                                              ; preds = %492, %489
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %20) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %19) #28
  %494 = load ptr, ptr %18, align 8, !tbaa !63
  %495 = icmp eq ptr %494, %239
  br i1 %495, label %496, label %499

496:                                              ; preds = %493
  %497 = load i64, ptr %240, align 8, !tbaa !13
  %498 = icmp ult i64 %497, 16
  call void @llvm.assume(i1 %498)
  br label %500

499:                                              ; preds = %493
  call void @_ZdlPv(ptr noundef %494) #26
  br label %500

500:                                              ; preds = %499, %496
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18) #28
  br label %1156

501:                                              ; preds = %809, %242
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %31) #28
  %502 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %31, i64 0, i32 2
  store ptr %502, ptr %31, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %502, ptr noundef nonnull align 1 dereferenceable(13) @.str.41, i64 13, i1 false)
  %503 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %31, i64 0, i32 1
  store i64 13, ptr %503, align 8, !tbaa !13
  %504 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %31, i64 0, i32 2, i32 1, i64 5
  store i8 0, ptr %504, align 1, !tbaa !16
  %505 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %31)
          to label %850 unwind label %1038

506:                                              ; preds = %255, %809
  %507 = phi ptr [ %248, %255 ], [ %812, %809 ]
  %508 = phi i64 [ 0, %255 ], [ %810, %809 ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %23) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %24) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %25) #28
  %509 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %507, i64 %508, i32 1
  call void @llvm.experimental.noalias.scope.decl(metadata !129)
  %510 = load ptr, ptr %509, align 8, !tbaa !63, !noalias !129
  %511 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %507, i64 %508, i32 1, i32 1
  %512 = load i64, ptr %511, align 8, !tbaa !13, !noalias !129
  store ptr %256, ptr %25, align 8, !tbaa !11, !alias.scope !132
  store i64 0, ptr %257, align 8, !tbaa !13, !alias.scope !132
  store i8 0, ptr %256, align 8, !tbaa !16, !alias.scope !132
  %513 = add i64 %512, 1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %25, i64 noundef %513)
          to label %514 unwind label %527

514:                                              ; preds = %506
  %515 = load i64, ptr %257, align 8, !tbaa !13, !alias.scope !132
  %516 = icmp eq i64 %515, 4611686018427387903
  br i1 %516, label %523, label %517

517:                                              ; preds = %514
  %518 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %25, ptr noundef nonnull @.str.37, i64 noundef 1)
          to label %519 unwind label %527

519:                                              ; preds = %517
  %520 = load i64, ptr %257, align 8, !tbaa !13, !alias.scope !132
  %521 = sub i64 4611686018427387903, %520
  %522 = icmp ult i64 %521, %512
  br i1 %522, label %523, label %525

523:                                              ; preds = %519, %514
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %524 unwind label %529

524:                                              ; preds = %523
  unreachable

525:                                              ; preds = %519
  %526 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %25, ptr noundef %510, i64 noundef %512)
          to label %539 unwind label %527

527:                                              ; preds = %506, %517, %525
  %528 = landingpad { ptr, i32 }
          cleanup
  br label %531

529:                                              ; preds = %523
  %530 = landingpad { ptr, i32 }
          cleanup
  br label %531

531:                                              ; preds = %529, %527
  %532 = phi { ptr, i32 } [ %528, %527 ], [ %530, %529 ]
  %533 = load ptr, ptr %25, align 8, !tbaa !63, !alias.scope !132
  %534 = icmp eq ptr %533, %256
  br i1 %534, label %535, label %538

535:                                              ; preds = %531
  %536 = load i64, ptr %257, align 8, !tbaa !13, !alias.scope !132
  %537 = icmp ult i64 %536, 16
  call void @llvm.assume(i1 %537)
  br label %720

538:                                              ; preds = %531
  call void @_ZdlPv(ptr noundef %533) #26
  br label %720

539:                                              ; preds = %525
  call void @llvm.experimental.noalias.scope.decl(metadata !135)
  %540 = load ptr, ptr %25, align 8, !tbaa !63, !noalias !135
  %541 = load i64, ptr %257, align 8, !tbaa !13, !noalias !135
  store ptr %258, ptr %24, align 8, !tbaa !11, !alias.scope !138
  store i64 0, ptr %259, align 8, !tbaa !13, !alias.scope !138
  store i8 0, ptr %258, align 8, !tbaa !16, !alias.scope !138
  %542 = add i64 %541, 1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %24, i64 noundef %542)
          to label %543 unwind label %556

543:                                              ; preds = %539
  %544 = load i64, ptr %259, align 8, !tbaa !13, !alias.scope !138
  %545 = sub i64 4611686018427387903, %544
  %546 = icmp ult i64 %545, %541
  br i1 %546, label %552, label %547

547:                                              ; preds = %543
  %548 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %24, ptr noundef %540, i64 noundef %541)
          to label %549 unwind label %556

549:                                              ; preds = %547
  %550 = load i64, ptr %259, align 8, !tbaa !13, !alias.scope !138
  %551 = icmp eq i64 %550, 4611686018427387903
  br i1 %551, label %552, label %554

552:                                              ; preds = %549, %543
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %553 unwind label %558

553:                                              ; preds = %552
  unreachable

554:                                              ; preds = %549
  %555 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %24, ptr noundef nonnull @.str.38, i64 noundef 1)
          to label %568 unwind label %556

556:                                              ; preds = %539, %547, %554
  %557 = landingpad { ptr, i32 }
          cleanup
  br label %560

558:                                              ; preds = %552
  %559 = landingpad { ptr, i32 }
          cleanup
  br label %560

560:                                              ; preds = %558, %556
  %561 = phi { ptr, i32 } [ %557, %556 ], [ %559, %558 ]
  %562 = load ptr, ptr %24, align 8, !tbaa !63, !alias.scope !138
  %563 = icmp eq ptr %562, %258
  br i1 %563, label %564, label %567

564:                                              ; preds = %560
  %565 = load i64, ptr %259, align 8, !tbaa !13, !alias.scope !138
  %566 = icmp ult i64 %565, 16
  call void @llvm.assume(i1 %566)
  br label %712

567:                                              ; preds = %560
  call void @_ZdlPv(ptr noundef %562) #26
  br label %712

568:                                              ; preds = %554
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %26) #28
  %569 = load ptr, ptr %220, align 8, !tbaa !108
  %570 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %569, i64 %508
  %571 = load ptr, ptr %570, align 8, !tbaa !63
  invoke void @_ZNK8Scenario11getVariableB5cxx11EPKc(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %26, ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef %571)
          to label %572 unwind label %695

572:                                              ; preds = %568
  call void @llvm.experimental.noalias.scope.decl(metadata !141)
  %573 = load ptr, ptr %24, align 8, !tbaa !63, !noalias !141
  %574 = load i64, ptr %259, align 8, !tbaa !13, !noalias !141
  %575 = load ptr, ptr %26, align 8, !tbaa !63, !noalias !141
  %576 = load i64, ptr %260, align 8, !tbaa !13, !noalias !141
  store ptr %261, ptr %23, align 8, !tbaa !11, !alias.scope !144
  store i64 0, ptr %262, align 8, !tbaa !13, !alias.scope !144
  store i8 0, ptr %261, align 8, !tbaa !16, !alias.scope !144
  %577 = add i64 %576, %574
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %23, i64 noundef %577)
          to label %578 unwind label %592

578:                                              ; preds = %572
  %579 = load i64, ptr %262, align 8, !tbaa !13, !alias.scope !144
  %580 = sub i64 4611686018427387903, %579
  %581 = icmp ult i64 %580, %574
  br i1 %581, label %588, label %582

582:                                              ; preds = %578
  %583 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %23, ptr noundef %573, i64 noundef %574)
          to label %584 unwind label %592

584:                                              ; preds = %582
  %585 = load i64, ptr %262, align 8, !tbaa !13, !alias.scope !144
  %586 = sub i64 4611686018427387903, %585
  %587 = icmp ult i64 %586, %576
  br i1 %587, label %588, label %590

588:                                              ; preds = %584, %578
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %589 unwind label %594

589:                                              ; preds = %588
  unreachable

590:                                              ; preds = %584
  %591 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %23, ptr noundef %575, i64 noundef %576)
          to label %604 unwind label %592

592:                                              ; preds = %572, %582, %590
  %593 = landingpad { ptr, i32 }
          cleanup
  br label %596

594:                                              ; preds = %588
  %595 = landingpad { ptr, i32 }
          cleanup
  br label %596

596:                                              ; preds = %594, %592
  %597 = phi { ptr, i32 } [ %593, %592 ], [ %595, %594 ]
  %598 = load ptr, ptr %23, align 8, !tbaa !63, !alias.scope !144
  %599 = icmp eq ptr %598, %261
  br i1 %599, label %600, label %603

600:                                              ; preds = %596
  %601 = load i64, ptr %262, align 8, !tbaa !13, !alias.scope !144
  %602 = icmp ult i64 %601, 16
  call void @llvm.assume(i1 %602)
  br label %697

603:                                              ; preds = %596
  call void @_ZdlPv(ptr noundef %598) #26
  br label %697

604:                                              ; preds = %590
  %605 = load ptr, ptr %26, align 8, !tbaa !63
  %606 = icmp eq ptr %605, %263
  br i1 %606, label %607, label %610

607:                                              ; preds = %604
  %608 = load i64, ptr %260, align 8, !tbaa !13
  %609 = icmp ult i64 %608, 16
  call void @llvm.assume(i1 %609)
  br label %611

610:                                              ; preds = %604
  call void @_ZdlPv(ptr noundef %605) #26
  br label %611

611:                                              ; preds = %610, %607
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %26) #28
  %612 = load ptr, ptr %24, align 8, !tbaa !63
  %613 = icmp eq ptr %612, %258
  br i1 %613, label %614, label %617

614:                                              ; preds = %611
  %615 = load i64, ptr %259, align 8, !tbaa !13
  %616 = icmp ult i64 %615, 16
  call void @llvm.assume(i1 %616)
  br label %618

617:                                              ; preds = %611
  call void @_ZdlPv(ptr noundef %612) #26
  br label %618

618:                                              ; preds = %617, %614
  %619 = load ptr, ptr %25, align 8, !tbaa !63
  %620 = icmp eq ptr %619, %256
  br i1 %620, label %621, label %624

621:                                              ; preds = %618
  %622 = load i64, ptr %257, align 8, !tbaa !13
  %623 = icmp ult i64 %622, 16
  call void @llvm.assume(i1 %623)
  br label %625

624:                                              ; preds = %618
  call void @_ZdlPv(ptr noundef %619) #26
  br label %625

625:                                              ; preds = %624, %621
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %25) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %24) #28
  %626 = load ptr, ptr %220, align 8, !tbaa !108
  %627 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %626, i64 %508, i32 1, i32 1
  %628 = load i64, ptr %627, align 8, !tbaa !13
  %629 = icmp eq i64 %628, 10
  br i1 %629, label %630, label %635

630:                                              ; preds = %625
  %631 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %626, i64 %508, i32 1
  %632 = load ptr, ptr %631, align 8, !tbaa !63
  %633 = call i32 @bcmp(ptr noundef nonnull dereferenceable(10) %632, ptr noundef nonnull dereferenceable(10) @.str.39, i64 10)
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %743, label %635

635:                                              ; preds = %625, %630
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %27) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %28) #28
  %636 = icmp eq i64 %508, 0
  store ptr %264, ptr %28, align 8, !tbaa !11
  %637 = select i1 %636, i64 0, i64 2
  br i1 %636, label %639, label %638

638:                                              ; preds = %635
  store i16 8236, ptr %264, align 8
  br label %639

639:                                              ; preds = %635, %638
  store i64 %637, ptr %265, align 8, !tbaa !13
  %640 = getelementptr inbounds i8, ptr %264, i64 %637
  store i8 0, ptr %640, align 2, !tbaa !16
  call void @llvm.experimental.noalias.scope.decl(metadata !147)
  %641 = load ptr, ptr %23, align 8, !tbaa !63, !noalias !147
  %642 = load i64, ptr %262, align 8, !tbaa !13, !noalias !147
  store ptr %266, ptr %27, align 8, !tbaa !11, !alias.scope !150
  store i64 0, ptr %267, align 8, !tbaa !13, !alias.scope !150
  store i8 0, ptr %266, align 8, !tbaa !16, !alias.scope !150
  %643 = add i64 %642, %637
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %643)
          to label %644 unwind label %658

644:                                              ; preds = %639
  %645 = load i64, ptr %267, align 8, !tbaa !13, !alias.scope !150
  %646 = sub i64 4611686018427387903, %645
  %647 = icmp ult i64 %646, %637
  br i1 %647, label %654, label %648

648:                                              ; preds = %644
  %649 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %27, ptr noundef nonnull %264, i64 noundef %637)
          to label %650 unwind label %658

650:                                              ; preds = %648
  %651 = load i64, ptr %267, align 8, !tbaa !13, !alias.scope !150
  %652 = sub i64 4611686018427387903, %651
  %653 = icmp ult i64 %652, %642
  br i1 %653, label %654, label %656

654:                                              ; preds = %650, %644
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %655 unwind label %660

655:                                              ; preds = %654
  unreachable

656:                                              ; preds = %650
  %657 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %27, ptr noundef %641, i64 noundef %642)
          to label %670 unwind label %658

658:                                              ; preds = %639, %648, %656
  %659 = landingpad { ptr, i32 }
          cleanup
  br label %662

660:                                              ; preds = %654
  %661 = landingpad { ptr, i32 }
          cleanup
  br label %662

662:                                              ; preds = %660, %658
  %663 = phi { ptr, i32 } [ %659, %658 ], [ %661, %660 ]
  %664 = load ptr, ptr %27, align 8, !tbaa !63, !alias.scope !150
  %665 = icmp eq ptr %664, %266
  br i1 %665, label %666, label %669

666:                                              ; preds = %662
  %667 = load i64, ptr %267, align 8, !tbaa !13, !alias.scope !150
  %668 = icmp ult i64 %667, 16
  call void @llvm.assume(i1 %668)
  br label %734

669:                                              ; preds = %662
  call void @_ZdlPv(ptr noundef %664) #26
  br label %734

670:                                              ; preds = %656
  %671 = load i64, ptr %267, align 8, !tbaa !13
  %672 = load i64, ptr %244, align 8, !tbaa !13
  %673 = sub i64 4611686018427387903, %672
  %674 = icmp ult i64 %673, %671
  br i1 %674, label %675, label %677

675:                                              ; preds = %670
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %676 unwind label %724

676:                                              ; preds = %675
  unreachable

677:                                              ; preds = %670
  %678 = load ptr, ptr %27, align 8, !tbaa !63
  %679 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %21, ptr noundef %678, i64 noundef %671)
          to label %680 unwind label %722

680:                                              ; preds = %677
  %681 = load ptr, ptr %27, align 8, !tbaa !63
  %682 = icmp eq ptr %681, %266
  br i1 %682, label %683, label %686

683:                                              ; preds = %680
  %684 = load i64, ptr %267, align 8, !tbaa !13
  %685 = icmp ult i64 %684, 16
  call void @llvm.assume(i1 %685)
  br label %687

686:                                              ; preds = %680
  call void @_ZdlPv(ptr noundef %681) #26
  br label %687

687:                                              ; preds = %686, %683
  %688 = load ptr, ptr %28, align 8, !tbaa !63
  %689 = icmp eq ptr %688, %264
  br i1 %689, label %690, label %693

690:                                              ; preds = %687
  %691 = load i64, ptr %265, align 8, !tbaa !13
  %692 = icmp ult i64 %691, 16
  call void @llvm.assume(i1 %692)
  br label %694

693:                                              ; preds = %687
  call void @_ZdlPv(ptr noundef %688) #26
  br label %694

694:                                              ; preds = %693, %690
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %28) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %27) #28
  br label %743

695:                                              ; preds = %568
  %696 = landingpad { ptr, i32 }
          cleanup
  br label %704

697:                                              ; preds = %600, %603
  %698 = load ptr, ptr %26, align 8, !tbaa !63
  %699 = icmp eq ptr %698, %263
  br i1 %699, label %700, label %703

700:                                              ; preds = %697
  %701 = load i64, ptr %260, align 8, !tbaa !13
  %702 = icmp ult i64 %701, 16
  call void @llvm.assume(i1 %702)
  br label %704

703:                                              ; preds = %697
  call void @_ZdlPv(ptr noundef %698) #26
  br label %704

704:                                              ; preds = %703, %700, %695
  %705 = phi { ptr, i32 } [ %696, %695 ], [ %597, %700 ], [ %597, %703 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %26) #28
  %706 = load ptr, ptr %24, align 8, !tbaa !63
  %707 = icmp eq ptr %706, %258
  br i1 %707, label %708, label %711

708:                                              ; preds = %704
  %709 = load i64, ptr %259, align 8, !tbaa !13
  %710 = icmp ult i64 %709, 16
  call void @llvm.assume(i1 %710)
  br label %712

711:                                              ; preds = %704
  call void @_ZdlPv(ptr noundef %706) #26
  br label %712

712:                                              ; preds = %711, %708, %567, %564
  %713 = phi { ptr, i32 } [ %561, %567 ], [ %561, %564 ], [ %705, %708 ], [ %705, %711 ]
  %714 = load ptr, ptr %25, align 8, !tbaa !63
  %715 = icmp eq ptr %714, %256
  br i1 %715, label %716, label %719

716:                                              ; preds = %712
  %717 = load i64, ptr %257, align 8, !tbaa !13
  %718 = icmp ult i64 %717, 16
  call void @llvm.assume(i1 %718)
  br label %720

719:                                              ; preds = %712
  call void @_ZdlPv(ptr noundef %714) #26
  br label %720

720:                                              ; preds = %719, %716, %538, %535
  %721 = phi { ptr, i32 } [ %532, %538 ], [ %532, %535 ], [ %713, %716 ], [ %713, %719 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %25) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %24) #28
  br label %848

722:                                              ; preds = %677
  %723 = landingpad { ptr, i32 }
          cleanup
  br label %726

724:                                              ; preds = %675
  %725 = landingpad { ptr, i32 }
          cleanup
  br label %726

726:                                              ; preds = %724, %722
  %727 = phi { ptr, i32 } [ %723, %722 ], [ %725, %724 ]
  %728 = load ptr, ptr %27, align 8, !tbaa !63
  %729 = icmp eq ptr %728, %266
  br i1 %729, label %730, label %733

730:                                              ; preds = %726
  %731 = load i64, ptr %267, align 8, !tbaa !13
  %732 = icmp ult i64 %731, 16
  call void @llvm.assume(i1 %732)
  br label %734

733:                                              ; preds = %726
  call void @_ZdlPv(ptr noundef %728) #26
  br label %734

734:                                              ; preds = %733, %730, %669, %666
  %735 = phi { ptr, i32 } [ %663, %669 ], [ %663, %666 ], [ %727, %730 ], [ %727, %733 ]
  %736 = load ptr, ptr %28, align 8, !tbaa !63
  %737 = icmp eq ptr %736, %264
  br i1 %737, label %738, label %741

738:                                              ; preds = %734
  %739 = load i64, ptr %265, align 8, !tbaa !13
  %740 = icmp ult i64 %739, 16
  call void @llvm.assume(i1 %740)
  br label %742

741:                                              ; preds = %734
  call void @_ZdlPv(ptr noundef %736) #26
  br label %742

742:                                              ; preds = %741, %738
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %28) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %27) #28
  br label %840

743:                                              ; preds = %630, %694
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %29) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %30) #28
  %744 = icmp eq i64 %508, 0
  store ptr %268, ptr %30, align 8, !tbaa !11
  %745 = select i1 %744, i64 0, i64 2
  br i1 %744, label %747, label %746

746:                                              ; preds = %743
  store i16 8236, ptr %268, align 8
  br label %747

747:                                              ; preds = %743, %746
  store i64 %745, ptr %269, align 8, !tbaa !13
  %748 = getelementptr inbounds i8, ptr %268, i64 %745
  store i8 0, ptr %748, align 2, !tbaa !16
  call void @llvm.experimental.noalias.scope.decl(metadata !153)
  %749 = load ptr, ptr %23, align 8, !tbaa !63, !noalias !153
  %750 = load i64, ptr %262, align 8, !tbaa !13, !noalias !153
  store ptr %270, ptr %29, align 8, !tbaa !11, !alias.scope !156
  store i64 0, ptr %271, align 8, !tbaa !13, !alias.scope !156
  store i8 0, ptr %270, align 8, !tbaa !16, !alias.scope !156
  %751 = add i64 %750, %745
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %29, i64 noundef %751)
          to label %752 unwind label %766

752:                                              ; preds = %747
  %753 = load i64, ptr %271, align 8, !tbaa !13, !alias.scope !156
  %754 = sub i64 4611686018427387903, %753
  %755 = icmp ult i64 %754, %745
  br i1 %755, label %762, label %756

756:                                              ; preds = %752
  %757 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %29, ptr noundef nonnull %268, i64 noundef %745)
          to label %758 unwind label %766

758:                                              ; preds = %756
  %759 = load i64, ptr %271, align 8, !tbaa !13, !alias.scope !156
  %760 = sub i64 4611686018427387903, %759
  %761 = icmp ult i64 %760, %750
  br i1 %761, label %762, label %764

762:                                              ; preds = %758, %752
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %763 unwind label %768

763:                                              ; preds = %762
  unreachable

764:                                              ; preds = %758
  %765 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %29, ptr noundef %749, i64 noundef %750)
          to label %778 unwind label %766

766:                                              ; preds = %747, %756, %764
  %767 = landingpad { ptr, i32 }
          cleanup
  br label %770

768:                                              ; preds = %762
  %769 = landingpad { ptr, i32 }
          cleanup
  br label %770

770:                                              ; preds = %768, %766
  %771 = phi { ptr, i32 } [ %767, %766 ], [ %769, %768 ]
  %772 = load ptr, ptr %29, align 8, !tbaa !63, !alias.scope !156
  %773 = icmp eq ptr %772, %270
  br i1 %773, label %774, label %777

774:                                              ; preds = %770
  %775 = load i64, ptr %271, align 8, !tbaa !13, !alias.scope !156
  %776 = icmp ult i64 %775, 16
  call void @llvm.assume(i1 %776)
  br label %831

777:                                              ; preds = %770
  call void @_ZdlPv(ptr noundef %772) #26
  br label %831

778:                                              ; preds = %764
  %779 = load i64, ptr %271, align 8, !tbaa !13
  %780 = load i64, ptr %246, align 8, !tbaa !13
  %781 = sub i64 4611686018427387903, %780
  %782 = icmp ult i64 %781, %779
  br i1 %782, label %783, label %785

783:                                              ; preds = %778
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %784 unwind label %821

784:                                              ; preds = %783
  unreachable

785:                                              ; preds = %778
  %786 = load ptr, ptr %29, align 8, !tbaa !63
  %787 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %22, ptr noundef %786, i64 noundef %779)
          to label %788 unwind label %819

788:                                              ; preds = %785
  %789 = load ptr, ptr %29, align 8, !tbaa !63
  %790 = icmp eq ptr %789, %270
  br i1 %790, label %791, label %794

791:                                              ; preds = %788
  %792 = load i64, ptr %271, align 8, !tbaa !13
  %793 = icmp ult i64 %792, 16
  call void @llvm.assume(i1 %793)
  br label %795

794:                                              ; preds = %788
  call void @_ZdlPv(ptr noundef %789) #26
  br label %795

795:                                              ; preds = %794, %791
  %796 = load ptr, ptr %30, align 8, !tbaa !63
  %797 = icmp eq ptr %796, %268
  br i1 %797, label %798, label %801

798:                                              ; preds = %795
  %799 = load i64, ptr %269, align 8, !tbaa !13
  %800 = icmp ult i64 %799, 16
  call void @llvm.assume(i1 %800)
  br label %802

801:                                              ; preds = %795
  call void @_ZdlPv(ptr noundef %796) #26
  br label %802

802:                                              ; preds = %801, %798
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %30) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %29) #28
  %803 = load ptr, ptr %23, align 8, !tbaa !63
  %804 = icmp eq ptr %803, %261
  br i1 %804, label %805, label %808

805:                                              ; preds = %802
  %806 = load i64, ptr %262, align 8, !tbaa !13
  %807 = icmp ult i64 %806, 16
  call void @llvm.assume(i1 %807)
  br label %809

808:                                              ; preds = %802
  call void @_ZdlPv(ptr noundef %803) #26
  br label %809

809:                                              ; preds = %808, %805
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %23) #28
  %810 = add nuw nsw i64 %508, 1
  %811 = load ptr, ptr %221, align 8, !tbaa !110
  %812 = load ptr, ptr %220, align 8, !tbaa !108
  %813 = ptrtoint ptr %811 to i64
  %814 = ptrtoint ptr %812 to i64
  %815 = sub i64 %813, %814
  %816 = shl i64 %815, 25
  %817 = ashr i64 %816, 32
  %818 = icmp slt i64 %810, %817
  br i1 %818, label %506, label %501

819:                                              ; preds = %785
  %820 = landingpad { ptr, i32 }
          cleanup
  br label %823

821:                                              ; preds = %783
  %822 = landingpad { ptr, i32 }
          cleanup
  br label %823

823:                                              ; preds = %821, %819
  %824 = phi { ptr, i32 } [ %820, %819 ], [ %822, %821 ]
  %825 = load ptr, ptr %29, align 8, !tbaa !63
  %826 = icmp eq ptr %825, %270
  br i1 %826, label %827, label %830

827:                                              ; preds = %823
  %828 = load i64, ptr %271, align 8, !tbaa !13
  %829 = icmp ult i64 %828, 16
  call void @llvm.assume(i1 %829)
  br label %831

830:                                              ; preds = %823
  call void @_ZdlPv(ptr noundef %825) #26
  br label %831

831:                                              ; preds = %830, %827, %777, %774
  %832 = phi { ptr, i32 } [ %771, %777 ], [ %771, %774 ], [ %824, %827 ], [ %824, %830 ]
  %833 = load ptr, ptr %30, align 8, !tbaa !63
  %834 = icmp eq ptr %833, %268
  br i1 %834, label %835, label %838

835:                                              ; preds = %831
  %836 = load i64, ptr %269, align 8, !tbaa !13
  %837 = icmp ult i64 %836, 16
  call void @llvm.assume(i1 %837)
  br label %839

838:                                              ; preds = %831
  call void @_ZdlPv(ptr noundef %833) #26
  br label %839

839:                                              ; preds = %838, %835
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %30) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %29) #28
  br label %840

840:                                              ; preds = %839, %742
  %841 = phi { ptr, i32 } [ %832, %839 ], [ %735, %742 ]
  %842 = load ptr, ptr %23, align 8, !tbaa !63
  %843 = icmp eq ptr %842, %261
  br i1 %843, label %844, label %847

844:                                              ; preds = %840
  %845 = load i64, ptr %262, align 8, !tbaa !13
  %846 = icmp ult i64 %845, 16
  call void @llvm.assume(i1 %846)
  br label %848

847:                                              ; preds = %840
  call void @_ZdlPv(ptr noundef %842) #26
  br label %848

848:                                              ; preds = %847, %844, %720
  %849 = phi { ptr, i32 } [ %721, %720 ], [ %841, %844 ], [ %841, %847 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %23) #28
  br label %1140

850:                                              ; preds = %501
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %505, ptr noundef nonnull align 8 dereferenceable(32) %21)
          to label %851 unwind label %1038

851:                                              ; preds = %850
  %852 = load ptr, ptr %31, align 8, !tbaa !63
  %853 = icmp eq ptr %852, %502
  br i1 %853, label %854, label %857

854:                                              ; preds = %851
  %855 = load i64, ptr %503, align 8, !tbaa !13
  %856 = icmp ult i64 %855, 16
  call void @llvm.assume(i1 %856)
  br label %858

857:                                              ; preds = %851
  call void @_ZdlPv(ptr noundef %852) #26
  br label %858

858:                                              ; preds = %857, %854
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %31) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %32) #28
  %859 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %32, i64 0, i32 2
  store ptr %859, ptr %32, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %859, ptr noundef nonnull align 1 dereferenceable(14) @.str.42, i64 14, i1 false)
  %860 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %32, i64 0, i32 1
  store i64 14, ptr %860, align 8, !tbaa !13
  %861 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %32, i64 0, i32 2, i32 1, i64 6
  store i8 0, ptr %861, align 2, !tbaa !16
  %862 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %32)
          to label %863 unwind label %1047

863:                                              ; preds = %858
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %862, ptr noundef nonnull align 8 dereferenceable(32) %22)
          to label %864 unwind label %1047

864:                                              ; preds = %863
  %865 = load ptr, ptr %32, align 8, !tbaa !63
  %866 = icmp eq ptr %865, %859
  br i1 %866, label %867, label %870

867:                                              ; preds = %864
  %868 = load i64, ptr %860, align 8, !tbaa !13
  %869 = icmp ult i64 %868, 16
  call void @llvm.assume(i1 %869)
  br label %871

870:                                              ; preds = %864
  call void @_ZdlPv(ptr noundef %865) #26
  br label %871

871:                                              ; preds = %870, %867
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %32) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %33) #28
  %872 = load ptr, ptr @CFGID_SEED_SET, align 8, !tbaa !5
  %873 = load ptr, ptr %872, align 8, !tbaa !9
  %874 = getelementptr inbounds ptr, ptr %873, i64 6
  %875 = load ptr, ptr %874, align 8
  %876 = invoke noundef ptr %875(ptr noundef nonnull align 8 dereferenceable(20) %872)
          to label %877 unwind label %1056

877:                                              ; preds = %871
  %878 = load ptr, ptr @CFGID_SEED_SET, align 8, !tbaa !5
  %879 = getelementptr inbounds %class.cConfigOption, ptr %878, i64 0, i32 5
  %880 = getelementptr inbounds %class.cConfigOption, ptr %878, i64 0, i32 5, i32 1
  %881 = load i64, ptr %880, align 8, !tbaa !13
  %882 = icmp eq i64 %881, 0
  %883 = load ptr, ptr %879, align 8
  %884 = select i1 %882, ptr null, ptr %883
  %885 = invoke noundef ptr @_ZNK25SectionBasedConfiguration16internalGetValueERKSt6vectorIiSaIiEEPKcS6_(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %876, ptr noundef %884)
          to label %886 unwind label %1056

886:                                              ; preds = %877
  invoke void @_ZNK25SectionBasedConfiguration19substituteVariablesB5cxx11EPKcii(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %33, ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %885, i32 noundef -1, i32 noundef -1)
          to label %887 unwind label %1056

887:                                              ; preds = %886
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %34) #28
  %888 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %34, i64 0, i32 2
  store ptr %888, ptr %34, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %888, ptr noundef nonnull align 1 dereferenceable(7) @.str.43, i64 7, i1 false)
  %889 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %34, i64 0, i32 1
  store i64 7, ptr %889, align 8, !tbaa !13
  %890 = getelementptr inbounds i8, ptr %34, i64 23
  store i8 0, ptr %890, align 1, !tbaa !16
  %891 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %34)
          to label %892 unwind label %1058

892:                                              ; preds = %887
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %891, ptr noundef nonnull align 8 dereferenceable(32) %33)
          to label %893 unwind label %1058

893:                                              ; preds = %892
  %894 = load ptr, ptr %34, align 8, !tbaa !63
  %895 = icmp eq ptr %894, %888
  br i1 %895, label %896, label %899

896:                                              ; preds = %893
  %897 = load i64, ptr %889, align 8, !tbaa !13
  %898 = icmp ult i64 %897, 16
  call void @llvm.assume(i1 %898)
  br label %900

899:                                              ; preds = %893
  call void @_ZdlPv(ptr noundef %894) #26
  br label %900

900:                                              ; preds = %899, %896
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %34) #28
  %901 = load ptr, ptr %33, align 8, !tbaa !63
  %902 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %33, i64 0, i32 2
  %903 = icmp eq ptr %901, %902
  br i1 %903, label %904, label %908

904:                                              ; preds = %900
  %905 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %33, i64 0, i32 1
  %906 = load i64, ptr %905, align 8, !tbaa !13
  %907 = icmp ult i64 %906, 16
  call void @llvm.assume(i1 %907)
  br label %909

908:                                              ; preds = %900
  call void @_ZdlPv(ptr noundef %901) #26
  br label %909

909:                                              ; preds = %908, %904
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %33) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %35) #28
  %910 = load ptr, ptr @CFGID_EXPERIMENT_LABEL, align 8, !tbaa !5
  %911 = load ptr, ptr %910, align 8, !tbaa !9
  %912 = getelementptr inbounds ptr, ptr %911, i64 6
  %913 = load ptr, ptr %912, align 8
  %914 = invoke noundef ptr %913(ptr noundef nonnull align 8 dereferenceable(20) %910)
          to label %915 unwind label %1077

915:                                              ; preds = %909
  %916 = load ptr, ptr @CFGID_EXPERIMENT_LABEL, align 8, !tbaa !5
  %917 = getelementptr inbounds %class.cConfigOption, ptr %916, i64 0, i32 5
  %918 = getelementptr inbounds %class.cConfigOption, ptr %916, i64 0, i32 5, i32 1
  %919 = load i64, ptr %918, align 8, !tbaa !13
  %920 = icmp eq i64 %919, 0
  %921 = load ptr, ptr %917, align 8
  %922 = select i1 %920, ptr null, ptr %921
  %923 = invoke noundef ptr @_ZNK25SectionBasedConfiguration16internalGetValueERKSt6vectorIiSaIiEEPKcS6_(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %914, ptr noundef %922)
          to label %924 unwind label %1077

924:                                              ; preds = %915
  invoke void @_ZNK25SectionBasedConfiguration19substituteVariablesB5cxx11EPKcii(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %35, ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %923, i32 noundef -1, i32 noundef -1)
          to label %925 unwind label %1077

925:                                              ; preds = %924
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %36) #28
  %926 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %36, i64 0, i32 2
  store ptr %926, ptr %36, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %926, ptr noundef nonnull align 1 dereferenceable(10) @.str.44, i64 10, i1 false)
  %927 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %36, i64 0, i32 1
  store i64 10, ptr %927, align 8, !tbaa !13
  %928 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %36, i64 0, i32 2, i32 1, i64 2
  store i8 0, ptr %928, align 2, !tbaa !16
  %929 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %36)
          to label %930 unwind label %1079

930:                                              ; preds = %925
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %929, ptr noundef nonnull align 8 dereferenceable(32) %35)
          to label %931 unwind label %1079

931:                                              ; preds = %930
  %932 = load ptr, ptr %36, align 8, !tbaa !63
  %933 = icmp eq ptr %932, %926
  br i1 %933, label %934, label %937

934:                                              ; preds = %931
  %935 = load i64, ptr %927, align 8, !tbaa !13
  %936 = icmp ult i64 %935, 16
  call void @llvm.assume(i1 %936)
  br label %938

937:                                              ; preds = %931
  call void @_ZdlPv(ptr noundef %932) #26
  br label %938

938:                                              ; preds = %937, %934
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %36) #28
  %939 = load ptr, ptr %35, align 8, !tbaa !63
  %940 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %35, i64 0, i32 2
  %941 = icmp eq ptr %939, %940
  br i1 %941, label %942, label %946

942:                                              ; preds = %938
  %943 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %35, i64 0, i32 1
  %944 = load i64, ptr %943, align 8, !tbaa !13
  %945 = icmp ult i64 %944, 16
  call void @llvm.assume(i1 %945)
  br label %947

946:                                              ; preds = %938
  call void @_ZdlPv(ptr noundef %939) #26
  br label %947

947:                                              ; preds = %946, %942
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %35) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %37) #28
  %948 = load ptr, ptr @CFGID_MEASUREMENT_LABEL, align 8, !tbaa !5
  %949 = load ptr, ptr %948, align 8, !tbaa !9
  %950 = getelementptr inbounds ptr, ptr %949, i64 6
  %951 = load ptr, ptr %950, align 8
  %952 = invoke noundef ptr %951(ptr noundef nonnull align 8 dereferenceable(20) %948)
          to label %953 unwind label %1098

953:                                              ; preds = %947
  %954 = load ptr, ptr @CFGID_MEASUREMENT_LABEL, align 8, !tbaa !5
  %955 = getelementptr inbounds %class.cConfigOption, ptr %954, i64 0, i32 5
  %956 = getelementptr inbounds %class.cConfigOption, ptr %954, i64 0, i32 5, i32 1
  %957 = load i64, ptr %956, align 8, !tbaa !13
  %958 = icmp eq i64 %957, 0
  %959 = load ptr, ptr %955, align 8
  %960 = select i1 %958, ptr null, ptr %959
  %961 = invoke noundef ptr @_ZNK25SectionBasedConfiguration16internalGetValueERKSt6vectorIiSaIiEEPKcS6_(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %952, ptr noundef %960)
          to label %962 unwind label %1098

962:                                              ; preds = %953
  invoke void @_ZNK25SectionBasedConfiguration19substituteVariablesB5cxx11EPKcii(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %37, ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %961, i32 noundef -1, i32 noundef -1)
          to label %963 unwind label %1098

963:                                              ; preds = %962
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %38) #28
  %964 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %38, i64 0, i32 2
  store ptr %964, ptr %38, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %964, ptr noundef nonnull align 1 dereferenceable(11) @.str.45, i64 11, i1 false)
  %965 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %38, i64 0, i32 1
  store i64 11, ptr %965, align 8, !tbaa !13
  %966 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %38, i64 0, i32 2, i32 1, i64 3
  store i8 0, ptr %966, align 1, !tbaa !16
  %967 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %38)
          to label %968 unwind label %1100

968:                                              ; preds = %963
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %967, ptr noundef nonnull align 8 dereferenceable(32) %37)
          to label %969 unwind label %1100

969:                                              ; preds = %968
  %970 = load ptr, ptr %38, align 8, !tbaa !63
  %971 = icmp eq ptr %970, %964
  br i1 %971, label %972, label %975

972:                                              ; preds = %969
  %973 = load i64, ptr %965, align 8, !tbaa !13
  %974 = icmp ult i64 %973, 16
  call void @llvm.assume(i1 %974)
  br label %976

975:                                              ; preds = %969
  call void @_ZdlPv(ptr noundef %970) #26
  br label %976

976:                                              ; preds = %975, %972
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %38) #28
  %977 = load ptr, ptr %37, align 8, !tbaa !63
  %978 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %37, i64 0, i32 2
  %979 = icmp eq ptr %977, %978
  br i1 %979, label %980, label %984

980:                                              ; preds = %976
  %981 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %37, i64 0, i32 1
  %982 = load i64, ptr %981, align 8, !tbaa !13
  %983 = icmp ult i64 %982, 16
  call void @llvm.assume(i1 %983)
  br label %985

984:                                              ; preds = %976
  call void @_ZdlPv(ptr noundef %977) #26
  br label %985

985:                                              ; preds = %984, %980
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %37) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %39) #28
  %986 = load ptr, ptr @CFGID_REPLICATION_LABEL, align 8, !tbaa !5
  %987 = load ptr, ptr %986, align 8, !tbaa !9
  %988 = getelementptr inbounds ptr, ptr %987, i64 6
  %989 = load ptr, ptr %988, align 8
  %990 = invoke noundef ptr %989(ptr noundef nonnull align 8 dereferenceable(20) %986)
          to label %991 unwind label %1119

991:                                              ; preds = %985
  %992 = load ptr, ptr @CFGID_REPLICATION_LABEL, align 8, !tbaa !5
  %993 = getelementptr inbounds %class.cConfigOption, ptr %992, i64 0, i32 5
  %994 = getelementptr inbounds %class.cConfigOption, ptr %992, i64 0, i32 5, i32 1
  %995 = load i64, ptr %994, align 8, !tbaa !13
  %996 = icmp eq i64 %995, 0
  %997 = load ptr, ptr %993, align 8
  %998 = select i1 %996, ptr null, ptr %997
  %999 = invoke noundef ptr @_ZNK25SectionBasedConfiguration16internalGetValueERKSt6vectorIiSaIiEEPKcS6_(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %990, ptr noundef %998)
          to label %1000 unwind label %1119

1000:                                             ; preds = %991
  invoke void @_ZNK25SectionBasedConfiguration19substituteVariablesB5cxx11EPKcii(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %39, ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %999, i32 noundef -1, i32 noundef -1)
          to label %1001 unwind label %1119

1001:                                             ; preds = %1000
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %40) #28
  %1002 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %40, i64 0, i32 2
  store ptr %1002, ptr %40, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %1002, ptr noundef nonnull align 1 dereferenceable(11) @.str.46, i64 11, i1 false)
  %1003 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %40, i64 0, i32 1
  store i64 11, ptr %1003, align 8, !tbaa !13
  %1004 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %40, i64 0, i32 2, i32 1, i64 3
  store i8 0, ptr %1004, align 1, !tbaa !16
  %1005 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %56, ptr noundef nonnull align 8 dereferenceable(32) %40)
          to label %1006 unwind label %1121

1006:                                             ; preds = %1001
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %1005, ptr noundef nonnull align 8 dereferenceable(32) %39)
          to label %1007 unwind label %1121

1007:                                             ; preds = %1006
  %1008 = load ptr, ptr %40, align 8, !tbaa !63
  %1009 = icmp eq ptr %1008, %1002
  br i1 %1009, label %1010, label %1013

1010:                                             ; preds = %1007
  %1011 = load i64, ptr %1003, align 8, !tbaa !13
  %1012 = icmp ult i64 %1011, 16
  call void @llvm.assume(i1 %1012)
  br label %1014

1013:                                             ; preds = %1007
  call void @_ZdlPv(ptr noundef %1008) #26
  br label %1014

1014:                                             ; preds = %1013, %1010
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %40) #28
  %1015 = load ptr, ptr %39, align 8, !tbaa !63
  %1016 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %39, i64 0, i32 2
  %1017 = icmp eq ptr %1015, %1016
  br i1 %1017, label %1018, label %1022

1018:                                             ; preds = %1014
  %1019 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %39, i64 0, i32 1
  %1020 = load i64, ptr %1019, align 8, !tbaa !13
  %1021 = icmp ult i64 %1020, 16
  call void @llvm.assume(i1 %1021)
  br label %1023

1022:                                             ; preds = %1014
  call void @_ZdlPv(ptr noundef %1015) #26
  br label %1023

1023:                                             ; preds = %1022, %1018
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %39) #28
  %1024 = load ptr, ptr %22, align 8, !tbaa !63
  %1025 = icmp eq ptr %1024, %245
  br i1 %1025, label %1026, label %1029

1026:                                             ; preds = %1023
  %1027 = load i64, ptr %246, align 8, !tbaa !13
  %1028 = icmp ult i64 %1027, 16
  call void @llvm.assume(i1 %1028)
  br label %1030

1029:                                             ; preds = %1023
  call void @_ZdlPv(ptr noundef %1024) #26
  br label %1030

1030:                                             ; preds = %1029, %1026
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %22) #28
  %1031 = load ptr, ptr %21, align 8, !tbaa !63
  %1032 = icmp eq ptr %1031, %243
  br i1 %1032, label %1033, label %1036

1033:                                             ; preds = %1030
  %1034 = load i64, ptr %244, align 8, !tbaa !13
  %1035 = icmp ult i64 %1034, 16
  call void @llvm.assume(i1 %1035)
  br label %1037

1036:                                             ; preds = %1030
  call void @_ZdlPv(ptr noundef %1031) #26
  br label %1037

1037:                                             ; preds = %1033, %1036
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %21) #28
  ret void

1038:                                             ; preds = %850, %501
  %1039 = landingpad { ptr, i32 }
          cleanup
  %1040 = load ptr, ptr %31, align 8, !tbaa !63
  %1041 = icmp eq ptr %1040, %502
  br i1 %1041, label %1042, label %1045

1042:                                             ; preds = %1038
  %1043 = load i64, ptr %503, align 8, !tbaa !13
  %1044 = icmp ult i64 %1043, 16
  call void @llvm.assume(i1 %1044)
  br label %1046

1045:                                             ; preds = %1038
  call void @_ZdlPv(ptr noundef %1040) #26
  br label %1046

1046:                                             ; preds = %1045, %1042
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %31) #28
  br label %1140

1047:                                             ; preds = %863, %858
  %1048 = landingpad { ptr, i32 }
          cleanup
  %1049 = load ptr, ptr %32, align 8, !tbaa !63
  %1050 = icmp eq ptr %1049, %859
  br i1 %1050, label %1051, label %1054

1051:                                             ; preds = %1047
  %1052 = load i64, ptr %860, align 8, !tbaa !13
  %1053 = icmp ult i64 %1052, 16
  call void @llvm.assume(i1 %1053)
  br label %1055

1054:                                             ; preds = %1047
  call void @_ZdlPv(ptr noundef %1049) #26
  br label %1055

1055:                                             ; preds = %1054, %1051
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %32) #28
  br label %1140

1056:                                             ; preds = %886, %877, %871
  %1057 = landingpad { ptr, i32 }
          cleanup
  br label %1075

1058:                                             ; preds = %892, %887
  %1059 = landingpad { ptr, i32 }
          cleanup
  %1060 = load ptr, ptr %34, align 8, !tbaa !63
  %1061 = icmp eq ptr %1060, %888
  br i1 %1061, label %1062, label %1065

1062:                                             ; preds = %1058
  %1063 = load i64, ptr %889, align 8, !tbaa !13
  %1064 = icmp ult i64 %1063, 16
  call void @llvm.assume(i1 %1064)
  br label %1066

1065:                                             ; preds = %1058
  call void @_ZdlPv(ptr noundef %1060) #26
  br label %1066

1066:                                             ; preds = %1065, %1062
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %34) #28
  %1067 = load ptr, ptr %33, align 8, !tbaa !63
  %1068 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %33, i64 0, i32 2
  %1069 = icmp eq ptr %1067, %1068
  br i1 %1069, label %1070, label %1074

1070:                                             ; preds = %1066
  %1071 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %33, i64 0, i32 1
  %1072 = load i64, ptr %1071, align 8, !tbaa !13
  %1073 = icmp ult i64 %1072, 16
  call void @llvm.assume(i1 %1073)
  br label %1075

1074:                                             ; preds = %1066
  call void @_ZdlPv(ptr noundef %1067) #26
  br label %1075

1075:                                             ; preds = %1074, %1070, %1056
  %1076 = phi { ptr, i32 } [ %1057, %1056 ], [ %1059, %1070 ], [ %1059, %1074 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %33) #28
  br label %1140

1077:                                             ; preds = %924, %915, %909
  %1078 = landingpad { ptr, i32 }
          cleanup
  br label %1096

1079:                                             ; preds = %930, %925
  %1080 = landingpad { ptr, i32 }
          cleanup
  %1081 = load ptr, ptr %36, align 8, !tbaa !63
  %1082 = icmp eq ptr %1081, %926
  br i1 %1082, label %1083, label %1086

1083:                                             ; preds = %1079
  %1084 = load i64, ptr %927, align 8, !tbaa !13
  %1085 = icmp ult i64 %1084, 16
  call void @llvm.assume(i1 %1085)
  br label %1087

1086:                                             ; preds = %1079
  call void @_ZdlPv(ptr noundef %1081) #26
  br label %1087

1087:                                             ; preds = %1086, %1083
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %36) #28
  %1088 = load ptr, ptr %35, align 8, !tbaa !63
  %1089 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %35, i64 0, i32 2
  %1090 = icmp eq ptr %1088, %1089
  br i1 %1090, label %1091, label %1095

1091:                                             ; preds = %1087
  %1092 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %35, i64 0, i32 1
  %1093 = load i64, ptr %1092, align 8, !tbaa !13
  %1094 = icmp ult i64 %1093, 16
  call void @llvm.assume(i1 %1094)
  br label %1096

1095:                                             ; preds = %1087
  call void @_ZdlPv(ptr noundef %1088) #26
  br label %1096

1096:                                             ; preds = %1095, %1091, %1077
  %1097 = phi { ptr, i32 } [ %1078, %1077 ], [ %1080, %1091 ], [ %1080, %1095 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %35) #28
  br label %1140

1098:                                             ; preds = %962, %953, %947
  %1099 = landingpad { ptr, i32 }
          cleanup
  br label %1117

1100:                                             ; preds = %968, %963
  %1101 = landingpad { ptr, i32 }
          cleanup
  %1102 = load ptr, ptr %38, align 8, !tbaa !63
  %1103 = icmp eq ptr %1102, %964
  br i1 %1103, label %1104, label %1107

1104:                                             ; preds = %1100
  %1105 = load i64, ptr %965, align 8, !tbaa !13
  %1106 = icmp ult i64 %1105, 16
  call void @llvm.assume(i1 %1106)
  br label %1108

1107:                                             ; preds = %1100
  call void @_ZdlPv(ptr noundef %1102) #26
  br label %1108

1108:                                             ; preds = %1107, %1104
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %38) #28
  %1109 = load ptr, ptr %37, align 8, !tbaa !63
  %1110 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %37, i64 0, i32 2
  %1111 = icmp eq ptr %1109, %1110
  br i1 %1111, label %1112, label %1116

1112:                                             ; preds = %1108
  %1113 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %37, i64 0, i32 1
  %1114 = load i64, ptr %1113, align 8, !tbaa !13
  %1115 = icmp ult i64 %1114, 16
  call void @llvm.assume(i1 %1115)
  br label %1117

1116:                                             ; preds = %1108
  call void @_ZdlPv(ptr noundef %1109) #26
  br label %1117

1117:                                             ; preds = %1116, %1112, %1098
  %1118 = phi { ptr, i32 } [ %1099, %1098 ], [ %1101, %1112 ], [ %1101, %1116 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %37) #28
  br label %1140

1119:                                             ; preds = %1000, %991, %985
  %1120 = landingpad { ptr, i32 }
          cleanup
  br label %1138

1121:                                             ; preds = %1006, %1001
  %1122 = landingpad { ptr, i32 }
          cleanup
  %1123 = load ptr, ptr %40, align 8, !tbaa !63
  %1124 = icmp eq ptr %1123, %1002
  br i1 %1124, label %1125, label %1128

1125:                                             ; preds = %1121
  %1126 = load i64, ptr %1003, align 8, !tbaa !13
  %1127 = icmp ult i64 %1126, 16
  call void @llvm.assume(i1 %1127)
  br label %1129

1128:                                             ; preds = %1121
  call void @_ZdlPv(ptr noundef %1123) #26
  br label %1129

1129:                                             ; preds = %1128, %1125
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %40) #28
  %1130 = load ptr, ptr %39, align 8, !tbaa !63
  %1131 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %39, i64 0, i32 2
  %1132 = icmp eq ptr %1130, %1131
  br i1 %1132, label %1133, label %1137

1133:                                             ; preds = %1129
  %1134 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %39, i64 0, i32 1
  %1135 = load i64, ptr %1134, align 8, !tbaa !13
  %1136 = icmp ult i64 %1135, 16
  call void @llvm.assume(i1 %1136)
  br label %1138

1137:                                             ; preds = %1129
  call void @_ZdlPv(ptr noundef %1130) #26
  br label %1138

1138:                                             ; preds = %1137, %1133, %1119
  %1139 = phi { ptr, i32 } [ %1120, %1119 ], [ %1122, %1133 ], [ %1122, %1137 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %39) #28
  br label %1140

1140:                                             ; preds = %1138, %1117, %1096, %1075, %1055, %1046, %848
  %1141 = phi { ptr, i32 } [ %849, %848 ], [ %1139, %1138 ], [ %1118, %1117 ], [ %1097, %1096 ], [ %1076, %1075 ], [ %1048, %1055 ], [ %1039, %1046 ]
  %1142 = load ptr, ptr %22, align 8, !tbaa !63
  %1143 = icmp eq ptr %1142, %245
  br i1 %1143, label %1144, label %1147

1144:                                             ; preds = %1140
  %1145 = load i64, ptr %246, align 8, !tbaa !13
  %1146 = icmp ult i64 %1145, 16
  call void @llvm.assume(i1 %1146)
  br label %1148

1147:                                             ; preds = %1140
  call void @_ZdlPv(ptr noundef %1142) #26
  br label %1148

1148:                                             ; preds = %1147, %1144
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %22) #28
  %1149 = load ptr, ptr %21, align 8, !tbaa !63
  %1150 = icmp eq ptr %1149, %243
  br i1 %1150, label %1151, label %1154

1151:                                             ; preds = %1148
  %1152 = load i64, ptr %244, align 8, !tbaa !13
  %1153 = icmp ult i64 %1152, 16
  call void @llvm.assume(i1 %1153)
  br label %1155

1154:                                             ; preds = %1148
  call void @_ZdlPv(ptr noundef %1149) #26
  br label %1155

1155:                                             ; preds = %1154, %1151
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %21) #28
  br label %1156

1156:                                             ; preds = %1155, %500, %476, %352, %343, %334, %325, %316, %307, %289, %280
  %1157 = phi { ptr, i32 } [ %345, %352 ], [ %336, %343 ], [ %327, %334 ], [ %318, %325 ], [ %309, %316 ], [ %291, %307 ], [ %282, %289 ], [ %273, %280 ], [ %1141, %1155 ], [ %486, %500 ], [ %469, %476 ]
  resume { ptr, i32 } %1157
}

declare void @_ZN8ScenarioD1Ev(ptr noundef nonnull align 8 dereferenceable(88)) unnamed_addr #1

; Function Attrs: nofree nosync nounwind memory(none)
declare i32 @llvm.eh.typeid.for(ptr) #10

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN25SectionBasedConfiguration8addEntryERKNS_9KeyValue1E(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull align 8 dereferenceable(80) %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = alloca %"class.SectionBasedConfiguration::KeyValue2", align 8
  %12 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %1, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !63
  %14 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %13, i32 noundef 46) #29
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %84

16:                                               ; preds = %2
  %17 = tail call noundef zeroext i1 @_ZN14PatternMatcher17containsWildcardsEPKc(ptr noundef %13)
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = load ptr, ptr %12, align 8, !tbaa !63
  br label %84

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7
  %22 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !21
  %24 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %25 = icmp eq ptr %23, null
  br i1 %25, label %76, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %1, i64 0, i32 2, i32 1
  %28 = load i64, ptr %27, align 8, !tbaa !13
  %29 = load ptr, ptr %12, align 8
  br label %30

30:                                               ; preds = %47, %26
  %31 = phi ptr [ %23, %26 ], [ %54, %47 ]
  %32 = phi ptr [ %24, %26 ], [ %52, %47 ]
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %31, i64 0, i32 1, i32 0, i32 1
  %34 = load i64, ptr %33, align 8, !tbaa !13
  %35 = tail call i64 @llvm.umin.i64(i64 %28, i64 %34)
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %31, i64 0, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !63
  %40 = tail call i32 @memcmp(ptr noundef %39, ptr noundef %29, i64 noundef %35) #28
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %37, %30
  %43 = sub i64 %34, %28
  %44 = tail call i64 @llvm.smax.i64(i64 %43, i64 -2147483648)
  %45 = tail call i64 @llvm.smin.i64(i64 %44, i64 2147483647)
  %46 = trunc i64 %45 to i32
  br label %47

47:                                               ; preds = %42, %37
  %48 = phi i32 [ %40, %37 ], [ %46, %42 ]
  %49 = icmp slt i32 %48, 0
  %50 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %31, i64 0, i32 3
  %51 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %31, i64 0, i32 2
  %52 = select i1 %49, ptr %32, ptr %31
  %53 = select i1 %49, ptr %50, ptr %51
  %54 = load ptr, ptr %53, align 8, !tbaa !5
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %30

56:                                               ; preds = %47
  %57 = icmp eq ptr %52, %24
  br i1 %57, label %76, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %52, i64 0, i32 1, i32 0, i32 1
  %60 = load i64, ptr %59, align 8, !tbaa !13
  %61 = tail call i64 @llvm.umin.i64(i64 %60, i64 %28)
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %52, i64 0, i32 1
  %65 = load ptr, ptr %64, align 8, !tbaa !63
  %66 = tail call i32 @memcmp(ptr noundef %29, ptr noundef %65, i64 noundef %61) #28
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %63, %58
  %69 = sub i64 %28, %60
  %70 = tail call i64 @llvm.smax.i64(i64 %69, i64 -2147483648)
  %71 = tail call i64 @llvm.smin.i64(i64 %70, i64 2147483647)
  %72 = trunc i64 %71 to i32
  br label %73

73:                                               ; preds = %63, %68
  %74 = phi i32 [ %66, %63 ], [ %72, %68 ]
  %75 = icmp slt i32 %74, 0
  br i1 %75, label %76, label %523

76:                                               ; preds = %20, %56, %73
  %77 = tail call noundef nonnull align 8 dereferenceable(80) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration9KeyValue1ESt4lessIS5_ESaISt4pairIKS5_S7_EEEixERSB_(ptr noundef nonnull align 8 dereferenceable(48) %21, ptr noundef nonnull align 8 dereferenceable(32) %12)
  %78 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %1, i64 0, i32 1
  %79 = load ptr, ptr %78, align 8, !tbaa !85
  %80 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %77, i64 0, i32 1
  store ptr %79, ptr %80, align 8, !tbaa !85
  %81 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %77, i64 0, i32 2
  tail call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %81, ptr noundef nonnull align 8 dereferenceable(32) %12)
  %82 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %77, i64 0, i32 3
  %83 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %1, i64 0, i32 3
  tail call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %82, ptr noundef nonnull align 8 dereferenceable(32) %83)
  br label %523

84:                                               ; preds = %18, %2
  %85 = phi ptr [ %19, %18 ], [ %13, %2 ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %9) #28
  %86 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 2
  store ptr %86, ptr %9, align 8, !tbaa !11
  %87 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 1
  store i64 0, ptr %87, align 8, !tbaa !13
  store i8 0, ptr %86, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #28
  %88 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2
  store ptr %88, ptr %10, align 8, !tbaa !11
  %89 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 1
  store i64 0, ptr %89, align 8, !tbaa !13
  store i8 0, ptr %88, align 8, !tbaa !16
  invoke void @_ZN25SectionBasedConfiguration8splitKeyEPKcRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_(ptr noundef %85, ptr noundef nonnull align 8 dereferenceable(32) %9, ptr noundef nonnull align 8 dereferenceable(32) %10)
          to label %90 unwind label %103

90:                                               ; preds = %84
  %91 = load ptr, ptr %10, align 8, !tbaa !63
  %92 = invoke noundef zeroext i1 @_ZN14PatternMatcher17containsWildcardsEPKc(ptr noundef %91)
          to label %93 unwind label %105

93:                                               ; preds = %90
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %11) #28
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1C2ERKS0_(ptr noundef nonnull align 8 dereferenceable(80) %11, ptr noundef nonnull align 8 dereferenceable(80) %1)
          to label %94 unwind label %107

94:                                               ; preds = %93
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue2E, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !9
  %95 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %11, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %95, i8 0, i64 24, i1 false)
  %96 = load i64, ptr %87, align 8, !tbaa !13
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %94
  %99 = invoke noalias noundef nonnull dereferenceable(64) ptr @_Znwm(i64 noundef 64) #25
          to label %100 unwind label %109

100:                                              ; preds = %98
  %101 = load ptr, ptr %9, align 8, !tbaa !63
  invoke void @_ZN14PatternMatcherC1EPKcbbb(ptr noundef nonnull align 8 dereferenceable(64) %99, ptr noundef %101, i1 noundef zeroext true, i1 noundef zeroext true, i1 noundef zeroext true)
          to label %102 unwind label %111

102:                                              ; preds = %100
  store ptr %99, ptr %95, align 8, !tbaa !159
  br label %121

103:                                              ; preds = %84
  %104 = landingpad { ptr, i32 }
          cleanup
  br label %507

105:                                              ; preds = %90
  %106 = landingpad { ptr, i32 }
          cleanup
  br label %507

107:                                              ; preds = %93
  %108 = landingpad { ptr, i32 }
          cleanup
  br label %505

109:                                              ; preds = %328, %259, %378, %309, %240, %122, %113, %98
  %110 = landingpad { ptr, i32 }
          cleanup
  br label %503

111:                                              ; preds = %100
  %112 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %99) #26
  br label %503

113:                                              ; preds = %94
  %114 = invoke noalias noundef nonnull dereferenceable(64) ptr @_Znwm(i64 noundef 64) #25
          to label %115 unwind label %109

115:                                              ; preds = %113
  %116 = load ptr, ptr %12, align 8, !tbaa !63
  invoke void @_ZN14PatternMatcherC1EPKcbbb(ptr noundef nonnull align 8 dereferenceable(64) %114, ptr noundef %116, i1 noundef zeroext true, i1 noundef zeroext true, i1 noundef zeroext true)
          to label %117 unwind label %119

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %11, i64 0, i32 3
  store ptr %114, ptr %118, align 8, !tbaa !161
  br label %121

119:                                              ; preds = %115
  %120 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %114) #26
  br label %503

121:                                              ; preds = %117, %102
  br i1 %92, label %122, label %126

122:                                              ; preds = %121
  %123 = invoke noalias noundef nonnull dereferenceable(64) ptr @_Znwm(i64 noundef 64) #25
          to label %124 unwind label %109

124:                                              ; preds = %122
  %125 = load ptr, ptr %10, align 8, !tbaa !63
  invoke void @_ZN14PatternMatcherC1EPKcbbb(ptr noundef nonnull align 8 dereferenceable(64) %123, ptr noundef %125, i1 noundef zeroext true, i1 noundef zeroext true, i1 noundef zeroext true)
          to label %310 unwind label %198

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %11, i64 0, i32 2
  store ptr null, ptr %127, align 8, !tbaa !162
  %128 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8
  %129 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 1
  %130 = load ptr, ptr %129, align 8, !tbaa !21
  %131 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %132 = icmp eq ptr %130, null
  br i1 %132, label %182, label %133

133:                                              ; preds = %126
  %134 = load i64, ptr %89, align 8, !tbaa !13
  %135 = load ptr, ptr %10, align 8
  br label %136

136:                                              ; preds = %153, %133
  %137 = phi ptr [ %130, %133 ], [ %160, %153 ]
  %138 = phi ptr [ %131, %133 ], [ %158, %153 ]
  %139 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %137, i64 0, i32 1, i32 0, i32 1
  %140 = load i64, ptr %139, align 8, !tbaa !13
  %141 = call i64 @llvm.umin.i64(i64 %134, i64 %140)
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %148, label %143

143:                                              ; preds = %136
  %144 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %137, i64 0, i32 1
  %145 = load ptr, ptr %144, align 8, !tbaa !63
  %146 = call i32 @memcmp(ptr noundef %145, ptr noundef %135, i64 noundef %141) #28
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %153

148:                                              ; preds = %143, %136
  %149 = sub i64 %140, %134
  %150 = call i64 @llvm.smax.i64(i64 %149, i64 -2147483648)
  %151 = call i64 @llvm.smin.i64(i64 %150, i64 2147483647)
  %152 = trunc i64 %151 to i32
  br label %153

153:                                              ; preds = %148, %143
  %154 = phi i32 [ %146, %143 ], [ %152, %148 ]
  %155 = icmp slt i32 %154, 0
  %156 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %137, i64 0, i32 3
  %157 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %137, i64 0, i32 2
  %158 = select i1 %155, ptr %138, ptr %137
  %159 = select i1 %155, ptr %156, ptr %157
  %160 = load ptr, ptr %159, align 8, !tbaa !5
  %161 = icmp eq ptr %160, null
  br i1 %161, label %162, label %136

162:                                              ; preds = %153
  %163 = icmp eq ptr %158, %131
  br i1 %163, label %182, label %164

164:                                              ; preds = %162
  %165 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %158, i64 0, i32 1, i32 0, i32 1
  %166 = load i64, ptr %165, align 8, !tbaa !13
  %167 = call i64 @llvm.umin.i64(i64 %166, i64 %134)
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %174, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %158, i64 0, i32 1
  %171 = load ptr, ptr %170, align 8, !tbaa !63
  %172 = call i32 @memcmp(ptr noundef %135, ptr noundef %171, i64 noundef %167) #28
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %179

174:                                              ; preds = %169, %164
  %175 = sub i64 %134, %166
  %176 = call i64 @llvm.smax.i64(i64 %175, i64 -2147483648)
  %177 = call i64 @llvm.smin.i64(i64 %176, i64 2147483647)
  %178 = trunc i64 %177 to i32
  br label %179

179:                                              ; preds = %169, %174
  %180 = phi i32 [ %172, %169 ], [ %178, %174 ]
  %181 = icmp slt i32 %180, 0
  br i1 %181, label %182, label %240

182:                                              ; preds = %126, %162, %179
  %183 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration5GroupESt4lessIS5_ESaISt4pairIKS5_S7_EEEixERSB_(ptr noundef nonnull align 8 dereferenceable(48) %128, ptr noundef nonnull align 8 dereferenceable(32) %10)
          to label %184 unwind label %200

184:                                              ; preds = %182
  %185 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 9
  %186 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 1
  %187 = load ptr, ptr %186, align 8, !tbaa !65
  %188 = load ptr, ptr %185, align 8, !tbaa !64
  %189 = ptrtoint ptr %187 to i64
  %190 = ptrtoint ptr %188 to i64
  %191 = sub i64 %189, %190
  %192 = sdiv exact i64 %191, 104
  %193 = trunc i64 %192 to i32
  %194 = icmp sgt i32 %193, 0
  br i1 %194, label %195, label %240

195:                                              ; preds = %184
  %196 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl_data", ptr %183, i64 0, i32 1
  %197 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl_data", ptr %183, i64 0, i32 2
  br label %204

198:                                              ; preds = %124
  %199 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %123) #26
  br label %503

200:                                              ; preds = %182
  %201 = landingpad { ptr, i32 }
          cleanup
  br label %503

202:                                              ; preds = %228, %218, %204
  %203 = landingpad { ptr, i32 }
          cleanup
  br label %503

204:                                              ; preds = %195, %229
  %205 = phi i64 [ 0, %195 ], [ %230, %229 ]
  %206 = phi ptr [ %188, %195 ], [ %232, %229 ]
  %207 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %206, i64 %205, i32 2
  %208 = load ptr, ptr %207, align 8, !tbaa !162
  %209 = load ptr, ptr %10, align 8, !tbaa !63
  %210 = invoke noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64) %208, ptr noundef %209)
          to label %211 unwind label %202

211:                                              ; preds = %204
  br i1 %210, label %212, label %229

212:                                              ; preds = %211
  %213 = load ptr, ptr %185, align 8, !tbaa !64
  %214 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %213, i64 %205
  %215 = load ptr, ptr %196, align 8, !tbaa !5
  %216 = load ptr, ptr %197, align 8, !tbaa !163
  %217 = icmp eq ptr %215, %216
  br i1 %217, label %228, label %218

218:                                              ; preds = %212
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1C2ERKS0_(ptr noundef nonnull align 8 dereferenceable(80) %215, ptr noundef nonnull align 8 dereferenceable(80) %214)
          to label %219 unwind label %202

219:                                              ; preds = %218
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue2E, i64 0, inrange i32 0, i64 2), ptr %215, align 8, !tbaa !9
  %220 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %213, i64 %205, i32 1
  %221 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %215, i64 0, i32 1
  %222 = load <2 x ptr>, ptr %220, align 8, !tbaa !5
  store <2 x ptr> %222, ptr %221, align 8, !tbaa !5
  %223 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %213, i64 %205, i32 3
  %224 = load ptr, ptr %223, align 8, !tbaa !161
  %225 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %215, i64 0, i32 3
  store ptr %224, ptr %225, align 8, !tbaa !161
  %226 = load ptr, ptr %196, align 8, !tbaa !65
  %227 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %226, i64 1
  store ptr %227, ptr %196, align 8, !tbaa !65
  br label %229

228:                                              ; preds = %212
  invoke void @_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue2ESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %183, ptr %215, ptr noundef nonnull align 8 dereferenceable(104) %214)
          to label %229 unwind label %202

229:                                              ; preds = %219, %228, %211
  %230 = add nuw nsw i64 %205, 1
  %231 = load ptr, ptr %186, align 8, !tbaa !65
  %232 = load ptr, ptr %185, align 8, !tbaa !64
  %233 = ptrtoint ptr %231 to i64
  %234 = ptrtoint ptr %232 to i64
  %235 = sub i64 %233, %234
  %236 = sdiv exact i64 %235, 104
  %237 = shl i64 %236, 32
  %238 = ashr exact i64 %237, 32
  %239 = icmp slt i64 %230, %238
  br i1 %239, label %204, label %240

240:                                              ; preds = %229, %184, %179
  %241 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration5GroupESt4lessIS5_ESaISt4pairIKS5_S7_EEEixERSB_(ptr noundef nonnull align 8 dereferenceable(48) %128, ptr noundef nonnull align 8 dereferenceable(32) %10)
          to label %242 unwind label %109

242:                                              ; preds = %240
  %243 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl_data", ptr %241, i64 0, i32 1
  %244 = load ptr, ptr %243, align 8, !tbaa !5
  %245 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl_data", ptr %241, i64 0, i32 2
  %246 = load ptr, ptr %245, align 8, !tbaa !163
  %247 = icmp eq ptr %244, %246
  br i1 %247, label %309, label %248

248:                                              ; preds = %242
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %244, align 8, !tbaa !9
  %249 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %244, i64 0, i32 1
  %250 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 1
  %251 = load ptr, ptr %250, align 8, !tbaa !85
  store ptr %251, ptr %249, align 8, !tbaa !85
  %252 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %244, i64 0, i32 2
  %253 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 2
  %254 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %244, i64 0, i32 2, i32 2
  store ptr %254, ptr %252, align 8, !tbaa !11
  %255 = load ptr, ptr %253, align 8, !tbaa !63
  %256 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 2, i32 1
  %257 = load i64, ptr %256, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #28
  store i64 %257, ptr %8, align 8, !tbaa !87
  %258 = icmp ugt i64 %257, 15
  br i1 %258, label %259, label %263

259:                                              ; preds = %248
  %260 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %252, ptr noundef nonnull align 8 dereferenceable(8) %8, i64 noundef 0)
          to label %261 unwind label %109

261:                                              ; preds = %259
  store ptr %260, ptr %252, align 8, !tbaa !63
  %262 = load i64, ptr %8, align 8, !tbaa !87
  store i64 %262, ptr %254, align 8, !tbaa !16
  br label %263

263:                                              ; preds = %261, %248
  %264 = phi ptr [ %260, %261 ], [ %254, %248 ]
  switch i64 %257, label %267 [
    i64 1, label %265
    i64 0, label %268
  ]

265:                                              ; preds = %263
  %266 = load i8, ptr %255, align 1, !tbaa !16
  store i8 %266, ptr %264, align 1, !tbaa !16
  br label %268

267:                                              ; preds = %263
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %264, ptr align 1 %255, i64 %257, i1 false)
  br label %268

268:                                              ; preds = %267, %265, %263
  %269 = load i64, ptr %8, align 8, !tbaa !87
  %270 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %244, i64 0, i32 2, i32 1
  store i64 %269, ptr %270, align 8, !tbaa !13
  %271 = load ptr, ptr %252, align 8, !tbaa !63
  %272 = getelementptr inbounds i8, ptr %271, i64 %269
  store i8 0, ptr %272, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #28
  %273 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %244, i64 0, i32 3
  %274 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 3
  %275 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %244, i64 0, i32 3, i32 2
  store ptr %275, ptr %273, align 8, !tbaa !11
  %276 = load ptr, ptr %274, align 8, !tbaa !63
  %277 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 3, i32 1
  %278 = load i64, ptr %277, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #28
  store i64 %278, ptr %7, align 8, !tbaa !87
  %279 = icmp ugt i64 %278, 15
  br i1 %279, label %280, label %284

280:                                              ; preds = %268
  %281 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %273, ptr noundef nonnull align 8 dereferenceable(8) %7, i64 noundef 0)
          to label %282 unwind label %289

282:                                              ; preds = %280
  store ptr %281, ptr %273, align 8, !tbaa !63
  %283 = load i64, ptr %7, align 8, !tbaa !87
  store i64 %283, ptr %275, align 8, !tbaa !16
  br label %284

284:                                              ; preds = %282, %268
  %285 = phi ptr [ %281, %282 ], [ %275, %268 ]
  switch i64 %278, label %288 [
    i64 1, label %286
    i64 0, label %297
  ]

286:                                              ; preds = %284
  %287 = load i8, ptr %276, align 1, !tbaa !16
  store i8 %287, ptr %285, align 1, !tbaa !16
  br label %297

288:                                              ; preds = %284
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %285, ptr align 1 %276, i64 %278, i1 false)
  br label %297

289:                                              ; preds = %280
  %290 = landingpad { ptr, i32 }
          cleanup
  %291 = load ptr, ptr %252, align 8, !tbaa !63
  %292 = icmp eq ptr %291, %254
  br i1 %292, label %293, label %296

293:                                              ; preds = %289
  %294 = load i64, ptr %270, align 8, !tbaa !13
  %295 = icmp ult i64 %294, 16
  call void @llvm.assume(i1 %295)
  br label %503

296:                                              ; preds = %289
  call void @_ZdlPv(ptr noundef %291) #26
  br label %503

297:                                              ; preds = %288, %286, %284
  %298 = load i64, ptr %7, align 8, !tbaa !87
  %299 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %244, i64 0, i32 3, i32 1
  store i64 %298, ptr %299, align 8, !tbaa !13
  %300 = load ptr, ptr %273, align 8, !tbaa !63
  %301 = getelementptr inbounds i8, ptr %300, i64 %298
  store i8 0, ptr %301, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #28
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue2E, i64 0, inrange i32 0, i64 2), ptr %244, align 8, !tbaa !9
  %302 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %244, i64 0, i32 1
  %303 = load <2 x ptr>, ptr %95, align 8, !tbaa !5
  store <2 x ptr> %303, ptr %302, align 8, !tbaa !5
  %304 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %11, i64 0, i32 3
  %305 = load ptr, ptr %304, align 8, !tbaa !161
  %306 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %244, i64 0, i32 3
  store ptr %305, ptr %306, align 8, !tbaa !161
  %307 = load ptr, ptr %243, align 8, !tbaa !65
  %308 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %307, i64 1
  store ptr %308, ptr %243, align 8, !tbaa !65
  br label %468

309:                                              ; preds = %242
  invoke void @_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue2ESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %241, ptr %244, ptr noundef nonnull align 8 dereferenceable(104) %11)
          to label %468 unwind label %109

310:                                              ; preds = %124
  %311 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %11, i64 0, i32 2
  store ptr %123, ptr %311, align 8, !tbaa !162
  %312 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 1
  %313 = load ptr, ptr %312, align 8, !tbaa !5
  %314 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 2
  %315 = load ptr, ptr %314, align 8, !tbaa !163
  %316 = icmp eq ptr %313, %315
  br i1 %316, label %378, label %317

317:                                              ; preds = %310
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %313, align 8, !tbaa !9
  %318 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %313, i64 0, i32 1
  %319 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 1
  %320 = load ptr, ptr %319, align 8, !tbaa !85
  store ptr %320, ptr %318, align 8, !tbaa !85
  %321 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %313, i64 0, i32 2
  %322 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 2
  %323 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %313, i64 0, i32 2, i32 2
  store ptr %323, ptr %321, align 8, !tbaa !11
  %324 = load ptr, ptr %322, align 8, !tbaa !63
  %325 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 2, i32 1
  %326 = load i64, ptr %325, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #28
  store i64 %326, ptr %6, align 8, !tbaa !87
  %327 = icmp ugt i64 %326, 15
  br i1 %327, label %328, label %332

328:                                              ; preds = %317
  %329 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %321, ptr noundef nonnull align 8 dereferenceable(8) %6, i64 noundef 0)
          to label %330 unwind label %109

330:                                              ; preds = %328
  store ptr %329, ptr %321, align 8, !tbaa !63
  %331 = load i64, ptr %6, align 8, !tbaa !87
  store i64 %331, ptr %323, align 8, !tbaa !16
  br label %332

332:                                              ; preds = %330, %317
  %333 = phi ptr [ %329, %330 ], [ %323, %317 ]
  switch i64 %326, label %336 [
    i64 1, label %334
    i64 0, label %337
  ]

334:                                              ; preds = %332
  %335 = load i8, ptr %324, align 1, !tbaa !16
  store i8 %335, ptr %333, align 1, !tbaa !16
  br label %337

336:                                              ; preds = %332
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %333, ptr align 1 %324, i64 %326, i1 false)
  br label %337

337:                                              ; preds = %336, %334, %332
  %338 = load i64, ptr %6, align 8, !tbaa !87
  %339 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %313, i64 0, i32 2, i32 1
  store i64 %338, ptr %339, align 8, !tbaa !13
  %340 = load ptr, ptr %321, align 8, !tbaa !63
  %341 = getelementptr inbounds i8, ptr %340, i64 %338
  store i8 0, ptr %341, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #28
  %342 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %313, i64 0, i32 3
  %343 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 3
  %344 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %313, i64 0, i32 3, i32 2
  store ptr %344, ptr %342, align 8, !tbaa !11
  %345 = load ptr, ptr %343, align 8, !tbaa !63
  %346 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 3, i32 1
  %347 = load i64, ptr %346, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #28
  store i64 %347, ptr %5, align 8, !tbaa !87
  %348 = icmp ugt i64 %347, 15
  br i1 %348, label %349, label %353

349:                                              ; preds = %337
  %350 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %342, ptr noundef nonnull align 8 dereferenceable(8) %5, i64 noundef 0)
          to label %351 unwind label %358

351:                                              ; preds = %349
  store ptr %350, ptr %342, align 8, !tbaa !63
  %352 = load i64, ptr %5, align 8, !tbaa !87
  store i64 %352, ptr %344, align 8, !tbaa !16
  br label %353

353:                                              ; preds = %351, %337
  %354 = phi ptr [ %350, %351 ], [ %344, %337 ]
  switch i64 %347, label %357 [
    i64 1, label %355
    i64 0, label %366
  ]

355:                                              ; preds = %353
  %356 = load i8, ptr %345, align 1, !tbaa !16
  store i8 %356, ptr %354, align 1, !tbaa !16
  br label %366

357:                                              ; preds = %353
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %354, ptr align 1 %345, i64 %347, i1 false)
  br label %366

358:                                              ; preds = %349
  %359 = landingpad { ptr, i32 }
          cleanup
  %360 = load ptr, ptr %321, align 8, !tbaa !63
  %361 = icmp eq ptr %360, %323
  br i1 %361, label %362, label %365

362:                                              ; preds = %358
  %363 = load i64, ptr %339, align 8, !tbaa !13
  %364 = icmp ult i64 %363, 16
  call void @llvm.assume(i1 %364)
  br label %503

365:                                              ; preds = %358
  call void @_ZdlPv(ptr noundef %360) #26
  br label %503

366:                                              ; preds = %357, %355, %353
  %367 = load i64, ptr %5, align 8, !tbaa !87
  %368 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %313, i64 0, i32 3, i32 1
  store i64 %367, ptr %368, align 8, !tbaa !13
  %369 = load ptr, ptr %342, align 8, !tbaa !63
  %370 = getelementptr inbounds i8, ptr %369, i64 %367
  store i8 0, ptr %370, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #28
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue2E, i64 0, inrange i32 0, i64 2), ptr %313, align 8, !tbaa !9
  %371 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %313, i64 0, i32 1
  %372 = load <2 x ptr>, ptr %95, align 8, !tbaa !5
  store <2 x ptr> %372, ptr %371, align 8, !tbaa !5
  %373 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %11, i64 0, i32 3
  %374 = load ptr, ptr %373, align 8, !tbaa !161
  %375 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %313, i64 0, i32 3
  store ptr %374, ptr %375, align 8, !tbaa !161
  %376 = load ptr, ptr %312, align 8, !tbaa !65
  %377 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %376, i64 1
  store ptr %377, ptr %312, align 8, !tbaa !65
  br label %380

378:                                              ; preds = %310
  %379 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 9
  invoke void @_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue2ESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %379, ptr %313, ptr noundef nonnull align 8 dereferenceable(104) %11)
          to label %380 unwind label %109

380:                                              ; preds = %378, %366
  %381 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 2
  %382 = load ptr, ptr %381, align 8, !tbaa !22
  %383 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %384 = icmp eq ptr %382, %383
  br i1 %384, label %468, label %385

385:                                              ; preds = %380
  %386 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 1
  %387 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 2
  %388 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 2, i32 1
  %389 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 3
  %390 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 3, i32 1
  %391 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %11, i64 0, i32 3
  br label %394

392:                                              ; preds = %415, %463, %394
  %393 = landingpad { ptr, i32 }
          cleanup
  br label %503

394:                                              ; preds = %385, %465
  %395 = phi ptr [ %382, %385 ], [ %466, %465 ]
  %396 = load ptr, ptr %311, align 8, !tbaa !162
  %397 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %395, i64 0, i32 1
  %398 = load ptr, ptr %397, align 8, !tbaa !63
  %399 = invoke noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64) %396, ptr noundef %398)
          to label %400 unwind label %392

400:                                              ; preds = %394
  br i1 %399, label %401, label %465

401:                                              ; preds = %400
  %402 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %395, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %403 = load ptr, ptr %402, align 8, !tbaa !5
  %404 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %395, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %405 = load ptr, ptr %404, align 8, !tbaa !163
  %406 = icmp eq ptr %403, %405
  br i1 %406, label %463, label %407

407:                                              ; preds = %401
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %403, align 8, !tbaa !9
  %408 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %403, i64 0, i32 1
  %409 = load ptr, ptr %386, align 8, !tbaa !85
  store ptr %409, ptr %408, align 8, !tbaa !85
  %410 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %403, i64 0, i32 2
  %411 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %403, i64 0, i32 2, i32 2
  store ptr %411, ptr %410, align 8, !tbaa !11
  %412 = load ptr, ptr %387, align 8, !tbaa !63
  %413 = load i64, ptr %388, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %413, ptr %4, align 8, !tbaa !87
  %414 = icmp ugt i64 %413, 15
  br i1 %414, label %415, label %419

415:                                              ; preds = %407
  %416 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %410, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %417 unwind label %392

417:                                              ; preds = %415
  store ptr %416, ptr %410, align 8, !tbaa !63
  %418 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %418, ptr %411, align 8, !tbaa !16
  br label %419

419:                                              ; preds = %417, %407
  %420 = phi ptr [ %416, %417 ], [ %411, %407 ]
  switch i64 %413, label %423 [
    i64 1, label %421
    i64 0, label %424
  ]

421:                                              ; preds = %419
  %422 = load i8, ptr %412, align 1, !tbaa !16
  store i8 %422, ptr %420, align 1, !tbaa !16
  br label %424

423:                                              ; preds = %419
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %420, ptr align 1 %412, i64 %413, i1 false)
  br label %424

424:                                              ; preds = %423, %421, %419
  %425 = load i64, ptr %4, align 8, !tbaa !87
  %426 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %403, i64 0, i32 2, i32 1
  store i64 %425, ptr %426, align 8, !tbaa !13
  %427 = load ptr, ptr %410, align 8, !tbaa !63
  %428 = getelementptr inbounds i8, ptr %427, i64 %425
  store i8 0, ptr %428, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %429 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %403, i64 0, i32 3
  %430 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %403, i64 0, i32 3, i32 2
  store ptr %430, ptr %429, align 8, !tbaa !11
  %431 = load ptr, ptr %389, align 8, !tbaa !63
  %432 = load i64, ptr %390, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #28
  store i64 %432, ptr %3, align 8, !tbaa !87
  %433 = icmp ugt i64 %432, 15
  br i1 %433, label %434, label %438

434:                                              ; preds = %424
  %435 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %429, ptr noundef nonnull align 8 dereferenceable(8) %3, i64 noundef 0)
          to label %436 unwind label %443

436:                                              ; preds = %434
  store ptr %435, ptr %429, align 8, !tbaa !63
  %437 = load i64, ptr %3, align 8, !tbaa !87
  store i64 %437, ptr %430, align 8, !tbaa !16
  br label %438

438:                                              ; preds = %436, %424
  %439 = phi ptr [ %435, %436 ], [ %430, %424 ]
  switch i64 %432, label %442 [
    i64 1, label %440
    i64 0, label %452
  ]

440:                                              ; preds = %438
  %441 = load i8, ptr %431, align 1, !tbaa !16
  store i8 %441, ptr %439, align 1, !tbaa !16
  br label %452

442:                                              ; preds = %438
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %439, ptr align 1 %431, i64 %432, i1 false)
  br label %452

443:                                              ; preds = %434
  %444 = landingpad { ptr, i32 }
          cleanup
  %445 = load ptr, ptr %410, align 8, !tbaa !63
  %446 = icmp eq ptr %445, %411
  br i1 %446, label %447, label %451

447:                                              ; preds = %443
  %448 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %403, i64 0, i32 2, i32 1
  %449 = load i64, ptr %448, align 8, !tbaa !13
  %450 = icmp ult i64 %449, 16
  call void @llvm.assume(i1 %450)
  br label %503

451:                                              ; preds = %443
  call void @_ZdlPv(ptr noundef %445) #26
  br label %503

452:                                              ; preds = %442, %440, %438
  %453 = load i64, ptr %3, align 8, !tbaa !87
  %454 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %403, i64 0, i32 3, i32 1
  store i64 %453, ptr %454, align 8, !tbaa !13
  %455 = load ptr, ptr %429, align 8, !tbaa !63
  %456 = getelementptr inbounds i8, ptr %455, i64 %453
  store i8 0, ptr %456, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue2E, i64 0, inrange i32 0, i64 2), ptr %403, align 8, !tbaa !9
  %457 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %403, i64 0, i32 1
  %458 = load <2 x ptr>, ptr %95, align 8, !tbaa !5
  store <2 x ptr> %458, ptr %457, align 8, !tbaa !5
  %459 = load ptr, ptr %391, align 8, !tbaa !161
  %460 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %403, i64 0, i32 3
  store ptr %459, ptr %460, align 8, !tbaa !161
  %461 = load ptr, ptr %402, align 8, !tbaa !65
  %462 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %461, i64 1
  store ptr %462, ptr %402, align 8, !tbaa !65
  br label %465

463:                                              ; preds = %401
  %464 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %395, i64 0, i32 1, i32 1
  invoke void @_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue2ESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %464, ptr %403, ptr noundef nonnull align 8 dereferenceable(104) %11)
          to label %465 unwind label %392

465:                                              ; preds = %452, %463, %400
  %466 = call noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef nonnull %395) #29
  %467 = icmp eq ptr %466, %383
  br i1 %467, label %468, label %394

468:                                              ; preds = %465, %380, %297, %309
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !9
  %469 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 3
  %470 = load ptr, ptr %469, align 8, !tbaa !63
  %471 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 3, i32 2
  %472 = icmp eq ptr %470, %471
  br i1 %472, label %473, label %477

473:                                              ; preds = %468
  %474 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 3, i32 1
  %475 = load i64, ptr %474, align 8, !tbaa !13
  %476 = icmp ult i64 %475, 16
  call void @llvm.assume(i1 %476)
  br label %478

477:                                              ; preds = %468
  call void @_ZdlPv(ptr noundef %470) #26
  br label %478

478:                                              ; preds = %477, %473
  %479 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 2
  %480 = load ptr, ptr %479, align 8, !tbaa !63
  %481 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 2, i32 2
  %482 = icmp eq ptr %480, %481
  br i1 %482, label %483, label %487

483:                                              ; preds = %478
  %484 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %11, i64 0, i32 2, i32 1
  %485 = load i64, ptr %484, align 8, !tbaa !13
  %486 = icmp ult i64 %485, 16
  call void @llvm.assume(i1 %486)
  br label %488

487:                                              ; preds = %478
  call void @_ZdlPv(ptr noundef %480) #26
  br label %488

488:                                              ; preds = %487, %483
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %11) #28
  %489 = load ptr, ptr %10, align 8, !tbaa !63
  %490 = icmp eq ptr %489, %88
  br i1 %490, label %491, label %494

491:                                              ; preds = %488
  %492 = load i64, ptr %89, align 8, !tbaa !13
  %493 = icmp ult i64 %492, 16
  call void @llvm.assume(i1 %493)
  br label %495

494:                                              ; preds = %488
  call void @_ZdlPv(ptr noundef %489) #26
  br label %495

495:                                              ; preds = %494, %491
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #28
  %496 = load ptr, ptr %9, align 8, !tbaa !63
  %497 = icmp eq ptr %496, %86
  br i1 %497, label %498, label %501

498:                                              ; preds = %495
  %499 = load i64, ptr %87, align 8, !tbaa !13
  %500 = icmp ult i64 %499, 16
  call void @llvm.assume(i1 %500)
  br label %502

501:                                              ; preds = %495
  call void @_ZdlPv(ptr noundef %496) #26
  br label %502

502:                                              ; preds = %498, %501
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #28
  br label %523

503:                                              ; preds = %392, %451, %447, %362, %365, %293, %296, %109, %200, %202, %198, %119, %111
  %504 = phi { ptr, i32 } [ %199, %198 ], [ %120, %119 ], [ %112, %111 ], [ %203, %202 ], [ %201, %200 ], [ %110, %109 ], [ %290, %296 ], [ %290, %293 ], [ %359, %365 ], [ %359, %362 ], [ %393, %392 ], [ %444, %451 ], [ %444, %447 ]
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1D2Ev(ptr noundef nonnull align 8 dereferenceable(104) %11)
          to label %505 unwind label %524

505:                                              ; preds = %503, %107
  %506 = phi { ptr, i32 } [ %504, %503 ], [ %108, %107 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %11) #28
  br label %507

507:                                              ; preds = %105, %505, %103
  %508 = phi { ptr, i32 } [ %104, %103 ], [ %506, %505 ], [ %106, %105 ]
  %509 = load ptr, ptr %10, align 8, !tbaa !63
  %510 = icmp eq ptr %509, %88
  br i1 %510, label %511, label %514

511:                                              ; preds = %507
  %512 = load i64, ptr %89, align 8, !tbaa !13
  %513 = icmp ult i64 %512, 16
  call void @llvm.assume(i1 %513)
  br label %515

514:                                              ; preds = %507
  call void @_ZdlPv(ptr noundef %509) #26
  br label %515

515:                                              ; preds = %514, %511
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #28
  %516 = load ptr, ptr %9, align 8, !tbaa !63
  %517 = icmp eq ptr %516, %86
  br i1 %517, label %518, label %521

518:                                              ; preds = %515
  %519 = load i64, ptr %87, align 8, !tbaa !13
  %520 = icmp ult i64 %519, 16
  call void @llvm.assume(i1 %520)
  br label %522

521:                                              ; preds = %515
  call void @_ZdlPv(ptr noundef %516) #26
  br label %522

522:                                              ; preds = %521, %518
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #28
  resume { ptr, i32 } %508

523:                                              ; preds = %73, %76, %502
  ret void

524:                                              ; preds = %503
  %525 = landingpad { ptr, i32 }
          catch ptr null
  %526 = extractvalue { ptr, i32 } %525, 0
  call void @__clang_call_terminate(ptr %526) #27
  unreachable
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN25SectionBasedConfiguration7convertEii(ptr noalias sret(%"class.SectionBasedConfiguration::KeyValue1") align 8 %0, ptr noundef nonnull align 8 dereferenceable(416) %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = alloca %"class.std::__cxx11::basic_string", align 8
  %12 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !25
  %14 = load ptr, ptr %13, align 8, !tbaa !9
  %15 = getelementptr inbounds ptr, ptr %14, i64 8
  %16 = load ptr, ptr %15, align 8
  %17 = tail call noundef nonnull align 8 dereferenceable(8) ptr %16(ptr noundef nonnull align 8 dereferenceable(8) %13, i32 noundef %2, i32 noundef %3)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %8) #28
  %18 = load ptr, ptr %17, align 8, !tbaa !9
  %19 = getelementptr inbounds ptr, ptr %18, i64 3
  %20 = load ptr, ptr %19, align 8
  %21 = tail call noundef ptr %20(ptr noundef nonnull align 8 dereferenceable(8) %17)
  call void @_ZNK25SectionBasedConfiguration19substituteVariablesB5cxx11EPKcii(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %8, ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %21, i32 noundef %2, i32 noundef %3)
  %22 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 6
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %9) #28
  %23 = load ptr, ptr %17, align 8, !tbaa !9
  %24 = getelementptr inbounds ptr, ptr %23, i64 4
  %25 = load ptr, ptr %24, align 8
  %26 = invoke noundef ptr %25(ptr noundef nonnull align 8 dereferenceable(8) %17)
          to label %27 unwind label %234

27:                                               ; preds = %4
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 2
  store ptr %28, ptr %9, align 8, !tbaa !11
  %29 = icmp eq ptr %26, null
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  invoke void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
          to label %31 unwind label %236

31:                                               ; preds = %30
  unreachable

32:                                               ; preds = %27
  %33 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %26) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #28
  store i64 %33, ptr %7, align 8, !tbaa !87
  %34 = icmp ugt i64 %33, 15
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  %36 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %9, ptr noundef nonnull align 8 dereferenceable(8) %7, i64 noundef 0)
          to label %37 unwind label %236

37:                                               ; preds = %35
  store ptr %36, ptr %9, align 8, !tbaa !63
  %38 = load i64, ptr %7, align 8, !tbaa !87
  store i64 %38, ptr %28, align 8, !tbaa !16
  br label %39

39:                                               ; preds = %37, %32
  %40 = phi ptr [ %36, %37 ], [ %28, %32 ]
  switch i64 %33, label %43 [
    i64 1, label %41
    i64 0, label %44
  ]

41:                                               ; preds = %39
  %42 = load i8, ptr %26, align 1, !tbaa !16
  store i8 %42, ptr %40, align 1, !tbaa !16
  br label %44

43:                                               ; preds = %39
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %40, ptr nonnull align 1 %26, i64 %33, i1 false)
  br label %44

44:                                               ; preds = %43, %41, %39
  %45 = load i64, ptr %7, align 8, !tbaa !87
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 1
  store i64 %45, ptr %46, align 8, !tbaa !13
  %47 = load ptr, ptr %9, align 8, !tbaa !63
  %48 = getelementptr inbounds i8, ptr %47, i64 %45
  store i8 0, ptr %48, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #28
  %49 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !21
  %51 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 6, i32 0, i32 0, i32 1
  %52 = icmp eq ptr %50, null
  %53 = load ptr, ptr %9, align 8
  br i1 %52, label %103, label %54

54:                                               ; preds = %44
  %55 = load i64, ptr %46, align 8, !tbaa !13
  br label %56

56:                                               ; preds = %73, %54
  %57 = phi ptr [ %50, %54 ], [ %80, %73 ]
  %58 = phi ptr [ %51, %54 ], [ %78, %73 ]
  %59 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %57, i64 0, i32 1, i32 1
  %60 = load i64, ptr %59, align 8, !tbaa !13
  %61 = call i64 @llvm.umin.i64(i64 %55, i64 %60)
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %57, i64 0, i32 1
  %65 = load ptr, ptr %64, align 8, !tbaa !63
  %66 = call i32 @memcmp(ptr noundef %65, ptr noundef %53, i64 noundef %61) #28
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %63, %56
  %69 = sub i64 %60, %55
  %70 = call i64 @llvm.smax.i64(i64 %69, i64 -2147483648)
  %71 = call i64 @llvm.smin.i64(i64 %70, i64 2147483647)
  %72 = trunc i64 %71 to i32
  br label %73

73:                                               ; preds = %68, %63
  %74 = phi i32 [ %66, %63 ], [ %72, %68 ]
  %75 = icmp slt i32 %74, 0
  %76 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %57, i64 0, i32 3
  %77 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %57, i64 0, i32 2
  %78 = select i1 %75, ptr %58, ptr %57
  %79 = select i1 %75, ptr %76, ptr %77
  %80 = load ptr, ptr %79, align 8, !tbaa !5
  %81 = icmp eq ptr %80, null
  br i1 %81, label %82, label %56

82:                                               ; preds = %73
  %83 = icmp eq ptr %78, %51
  br i1 %83, label %103, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %78, i64 0, i32 1, i32 1
  %86 = load i64, ptr %85, align 8, !tbaa !13
  %87 = call i64 @llvm.umin.i64(i64 %86, i64 %55)
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %78, i64 0, i32 1
  %91 = load ptr, ptr %90, align 8, !tbaa !63
  %92 = call i32 @memcmp(ptr noundef %53, ptr noundef %91, i64 noundef %87) #28
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %99

94:                                               ; preds = %89, %84
  %95 = sub i64 %55, %86
  %96 = call i64 @llvm.smax.i64(i64 %95, i64 -2147483648)
  %97 = call i64 @llvm.smin.i64(i64 %96, i64 2147483647)
  %98 = trunc i64 %97 to i32
  br label %99

99:                                               ; preds = %94, %89
  %100 = phi i32 [ %92, %89 ], [ %98, %94 ]
  %101 = icmp slt i32 %100, 0
  %102 = select i1 %101, ptr %51, ptr %78
  br label %103

103:                                              ; preds = %99, %82, %44
  %104 = phi ptr [ %51, %82 ], [ %51, %44 ], [ %102, %99 ]
  %105 = icmp eq ptr %53, %28
  br i1 %105, label %106, label %109

106:                                              ; preds = %103
  %107 = load i64, ptr %46, align 8, !tbaa !13
  %108 = icmp ult i64 %107, 16
  call void @llvm.assume(i1 %108)
  br label %110

109:                                              ; preds = %103
  call void @_ZdlPv(ptr noundef %53) #26
  br label %110

110:                                              ; preds = %106, %109
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #28
  %111 = icmp eq ptr %104, %51
  br i1 %111, label %112, label %260

112:                                              ; preds = %110
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #28
  %113 = load ptr, ptr %17, align 8, !tbaa !9
  %114 = getelementptr inbounds ptr, ptr %113, i64 4
  %115 = load ptr, ptr %114, align 8
  %116 = invoke noundef ptr %115(ptr noundef nonnull align 8 dereferenceable(8) %17)
          to label %117 unwind label %240

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2
  store ptr %118, ptr %10, align 8, !tbaa !11
  %119 = icmp eq ptr %116, null
  br i1 %119, label %120, label %122

120:                                              ; preds = %117
  invoke void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
          to label %121 unwind label %242

121:                                              ; preds = %120
  unreachable

122:                                              ; preds = %117
  %123 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %116) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #28
  store i64 %123, ptr %6, align 8, !tbaa !87
  %124 = icmp ugt i64 %123, 15
  br i1 %124, label %125, label %129

125:                                              ; preds = %122
  %126 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull align 8 dereferenceable(8) %6, i64 noundef 0)
          to label %127 unwind label %242

127:                                              ; preds = %125
  store ptr %126, ptr %10, align 8, !tbaa !63
  %128 = load i64, ptr %6, align 8, !tbaa !87
  store i64 %128, ptr %118, align 8, !tbaa !16
  br label %129

129:                                              ; preds = %127, %122
  %130 = phi ptr [ %126, %127 ], [ %118, %122 ]
  switch i64 %123, label %133 [
    i64 1, label %131
    i64 0, label %134
  ]

131:                                              ; preds = %129
  %132 = load i8, ptr %116, align 1, !tbaa !16
  store i8 %132, ptr %130, align 1, !tbaa !16
  br label %134

133:                                              ; preds = %129
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %130, ptr nonnull align 1 %116, i64 %123, i1 false)
  br label %134

134:                                              ; preds = %133, %131, %129
  %135 = load i64, ptr %6, align 8, !tbaa !87
  %136 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 1
  store i64 %135, ptr %136, align 8, !tbaa !13
  %137 = load ptr, ptr %10, align 8, !tbaa !63
  %138 = getelementptr inbounds i8, ptr %137, i64 %135
  store i8 0, ptr %138, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #28
  %139 = invoke { ptr, i8 } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueERKS5_(ptr noundef nonnull align 8 dereferenceable(48) %22, ptr noundef nonnull align 8 dereferenceable(32) %10)
          to label %140 unwind label %244

140:                                              ; preds = %134
  %141 = load ptr, ptr %10, align 8, !tbaa !63
  %142 = icmp eq ptr %141, %118
  br i1 %142, label %143, label %146

143:                                              ; preds = %140
  %144 = load i64, ptr %136, align 8, !tbaa !13
  %145 = icmp ult i64 %144, 16
  call void @llvm.assume(i1 %145)
  br label %147

146:                                              ; preds = %140
  call void @_ZdlPv(ptr noundef %141) #26
  br label %147

147:                                              ; preds = %146, %143
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %11) #28
  %148 = load ptr, ptr %17, align 8, !tbaa !9
  %149 = getelementptr inbounds ptr, ptr %148, i64 4
  %150 = load ptr, ptr %149, align 8
  %151 = invoke noundef ptr %150(ptr noundef nonnull align 8 dereferenceable(8) %17)
          to label %152 unwind label %254

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 2
  store ptr %153, ptr %11, align 8, !tbaa !11
  %154 = icmp eq ptr %151, null
  br i1 %154, label %155, label %157

155:                                              ; preds = %152
  invoke void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
          to label %156 unwind label %256

156:                                              ; preds = %155
  unreachable

157:                                              ; preds = %152
  %158 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %151) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #28
  store i64 %158, ptr %5, align 8, !tbaa !87
  %159 = icmp ugt i64 %158, 15
  br i1 %159, label %160, label %164

160:                                              ; preds = %157
  %161 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %11, ptr noundef nonnull align 8 dereferenceable(8) %5, i64 noundef 0)
          to label %162 unwind label %256

162:                                              ; preds = %160
  store ptr %161, ptr %11, align 8, !tbaa !63
  %163 = load i64, ptr %5, align 8, !tbaa !87
  store i64 %163, ptr %153, align 8, !tbaa !16
  br label %164

164:                                              ; preds = %162, %157
  %165 = phi ptr [ %161, %162 ], [ %153, %157 ]
  switch i64 %158, label %168 [
    i64 1, label %166
    i64 0, label %169
  ]

166:                                              ; preds = %164
  %167 = load i8, ptr %151, align 1, !tbaa !16
  store i8 %167, ptr %165, align 1, !tbaa !16
  br label %169

168:                                              ; preds = %164
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %165, ptr nonnull align 1 %151, i64 %158, i1 false)
  br label %169

169:                                              ; preds = %168, %166, %164
  %170 = load i64, ptr %5, align 8, !tbaa !87
  %171 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 1
  store i64 %170, ptr %171, align 8, !tbaa !13
  %172 = load ptr, ptr %11, align 8, !tbaa !63
  %173 = getelementptr inbounds i8, ptr %172, i64 %170
  store i8 0, ptr %173, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #28
  %174 = load ptr, ptr %49, align 8, !tbaa !21
  %175 = icmp eq ptr %174, null
  %176 = load ptr, ptr %11, align 8
  br i1 %175, label %226, label %177

177:                                              ; preds = %169
  %178 = load i64, ptr %171, align 8, !tbaa !13
  br label %179

179:                                              ; preds = %196, %177
  %180 = phi ptr [ %174, %177 ], [ %203, %196 ]
  %181 = phi ptr [ %51, %177 ], [ %201, %196 ]
  %182 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %180, i64 0, i32 1, i32 1
  %183 = load i64, ptr %182, align 8, !tbaa !13
  %184 = call i64 @llvm.umin.i64(i64 %178, i64 %183)
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %191, label %186

186:                                              ; preds = %179
  %187 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %180, i64 0, i32 1
  %188 = load ptr, ptr %187, align 8, !tbaa !63
  %189 = call i32 @memcmp(ptr noundef %188, ptr noundef %176, i64 noundef %184) #28
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %196

191:                                              ; preds = %186, %179
  %192 = sub i64 %183, %178
  %193 = call i64 @llvm.smax.i64(i64 %192, i64 -2147483648)
  %194 = call i64 @llvm.smin.i64(i64 %193, i64 2147483647)
  %195 = trunc i64 %194 to i32
  br label %196

196:                                              ; preds = %191, %186
  %197 = phi i32 [ %189, %186 ], [ %195, %191 ]
  %198 = icmp slt i32 %197, 0
  %199 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %180, i64 0, i32 3
  %200 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %180, i64 0, i32 2
  %201 = select i1 %198, ptr %181, ptr %180
  %202 = select i1 %198, ptr %199, ptr %200
  %203 = load ptr, ptr %202, align 8, !tbaa !5
  %204 = icmp eq ptr %203, null
  br i1 %204, label %205, label %179

205:                                              ; preds = %196
  %206 = icmp eq ptr %201, %51
  br i1 %206, label %226, label %207

207:                                              ; preds = %205
  %208 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %201, i64 0, i32 1, i32 1
  %209 = load i64, ptr %208, align 8, !tbaa !13
  %210 = call i64 @llvm.umin.i64(i64 %209, i64 %178)
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %217, label %212

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %201, i64 0, i32 1
  %214 = load ptr, ptr %213, align 8, !tbaa !63
  %215 = call i32 @memcmp(ptr noundef %176, ptr noundef %214, i64 noundef %210) #28
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %222

217:                                              ; preds = %212, %207
  %218 = sub i64 %178, %209
  %219 = call i64 @llvm.smax.i64(i64 %218, i64 -2147483648)
  %220 = call i64 @llvm.smin.i64(i64 %219, i64 2147483647)
  %221 = trunc i64 %220 to i32
  br label %222

222:                                              ; preds = %217, %212
  %223 = phi i32 [ %215, %212 ], [ %221, %217 ]
  %224 = icmp slt i32 %223, 0
  %225 = select i1 %224, ptr %51, ptr %201
  br label %226

226:                                              ; preds = %222, %205, %169
  %227 = phi ptr [ %51, %205 ], [ %51, %169 ], [ %225, %222 ]
  %228 = icmp eq ptr %176, %153
  br i1 %228, label %229, label %232

229:                                              ; preds = %226
  %230 = load i64, ptr %171, align 8, !tbaa !13
  %231 = icmp ult i64 %230, 16
  call void @llvm.assume(i1 %231)
  br label %233

232:                                              ; preds = %226
  call void @_ZdlPv(ptr noundef %176) #26
  br label %233

233:                                              ; preds = %232, %229
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #28
  br label %260

234:                                              ; preds = %4
  %235 = landingpad { ptr, i32 }
          cleanup
  br label %238

236:                                              ; preds = %35, %30
  %237 = landingpad { ptr, i32 }
          cleanup
  br label %238

238:                                              ; preds = %236, %234
  %239 = phi { ptr, i32 } [ %235, %234 ], [ %237, %236 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #28
  br label %281

240:                                              ; preds = %112
  %241 = landingpad { ptr, i32 }
          cleanup
  br label %252

242:                                              ; preds = %125, %120
  %243 = landingpad { ptr, i32 }
          cleanup
  br label %252

244:                                              ; preds = %134
  %245 = landingpad { ptr, i32 }
          cleanup
  %246 = load ptr, ptr %10, align 8, !tbaa !63
  %247 = icmp eq ptr %246, %118
  br i1 %247, label %248, label %251

248:                                              ; preds = %244
  %249 = load i64, ptr %136, align 8, !tbaa !13
  %250 = icmp ult i64 %249, 16
  call void @llvm.assume(i1 %250)
  br label %252

251:                                              ; preds = %244
  call void @_ZdlPv(ptr noundef %246) #26
  br label %252

252:                                              ; preds = %242, %248, %251, %240
  %253 = phi { ptr, i32 } [ %241, %240 ], [ %243, %242 ], [ %245, %248 ], [ %245, %251 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #28
  br label %281

254:                                              ; preds = %147
  %255 = landingpad { ptr, i32 }
          cleanup
  br label %258

256:                                              ; preds = %160, %155
  %257 = landingpad { ptr, i32 }
          cleanup
  br label %258

258:                                              ; preds = %256, %254
  %259 = phi { ptr, i32 } [ %255, %254 ], [ %257, %256 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #28
  br label %281

260:                                              ; preds = %233, %110
  %261 = phi ptr [ %227, %233 ], [ %104, %110 ]
  %262 = load ptr, ptr %17, align 8, !tbaa !9
  %263 = getelementptr inbounds ptr, ptr %262, i64 2
  %264 = load ptr, ptr %263, align 8
  %265 = invoke noundef ptr %264(ptr noundef nonnull align 8 dereferenceable(8) %17)
          to label %266 unwind label %279

266:                                              ; preds = %260
  %267 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %261, i64 0, i32 1
  %268 = load ptr, ptr %8, align 8, !tbaa !63
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1C2EPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcSA_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull %267, ptr noundef %265, ptr noundef %268)
          to label %269 unwind label %279

269:                                              ; preds = %266
  %270 = load ptr, ptr %8, align 8, !tbaa !63
  %271 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 2
  %272 = icmp eq ptr %270, %271
  br i1 %272, label %273, label %277

273:                                              ; preds = %269
  %274 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 1
  %275 = load i64, ptr %274, align 8, !tbaa !13
  %276 = icmp ult i64 %275, 16
  call void @llvm.assume(i1 %276)
  br label %278

277:                                              ; preds = %269
  call void @_ZdlPv(ptr noundef %270) #26
  br label %278

278:                                              ; preds = %273, %277
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #28
  ret void

279:                                              ; preds = %266, %260
  %280 = landingpad { ptr, i32 }
          cleanup
  br label %281

281:                                              ; preds = %279, %258, %252, %238
  %282 = phi { ptr, i32 } [ %280, %279 ], [ %259, %258 ], [ %253, %252 ], [ %239, %238 ]
  %283 = load ptr, ptr %8, align 8, !tbaa !63
  %284 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 2
  %285 = icmp eq ptr %283, %284
  br i1 %285, label %286, label %290

286:                                              ; preds = %281
  %287 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 1
  %288 = load i64, ptr %287, align 8, !tbaa !13
  %289 = icmp ult i64 %288, 16
  call void @llvm.assume(i1 %289)
  br label %291

290:                                              ; preds = %281
  call void @_ZdlPv(ptr noundef %283) #26
  br label %291

291:                                              ; preds = %290, %286
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #28
  resume { ptr, i32 } %282
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN25SectionBasedConfiguration17IterationVariableESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !108
  %3 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !110
  %5 = icmp eq ptr %2, %4
  br i1 %5, label %51, label %6

6:                                                ; preds = %1, %46
  %7 = phi ptr [ %47, %46 ], [ %2, %1 ]
  %8 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %7, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !63
  %10 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %7, i64 0, i32 3, i32 2
  %11 = icmp eq ptr %9, %10
  br i1 %11, label %12, label %16

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %7, i64 0, i32 3, i32 1
  %14 = load i64, ptr %13, align 8, !tbaa !13
  %15 = icmp ult i64 %14, 16
  tail call void @llvm.assume(i1 %15)
  br label %17

16:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef %9) #26
  br label %17

17:                                               ; preds = %16, %12
  %18 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %7, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !63
  %20 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %7, i64 0, i32 2, i32 2
  %21 = icmp eq ptr %19, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %7, i64 0, i32 2, i32 1
  %24 = load i64, ptr %23, align 8, !tbaa !13
  %25 = icmp ult i64 %24, 16
  tail call void @llvm.assume(i1 %25)
  br label %27

26:                                               ; preds = %17
  tail call void @_ZdlPv(ptr noundef %19) #26
  br label %27

27:                                               ; preds = %26, %22
  %28 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %7, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !63
  %30 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %7, i64 0, i32 1, i32 2
  %31 = icmp eq ptr %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %7, i64 0, i32 1, i32 1
  %34 = load i64, ptr %33, align 8, !tbaa !13
  %35 = icmp ult i64 %34, 16
  tail call void @llvm.assume(i1 %35)
  br label %37

36:                                               ; preds = %27
  tail call void @_ZdlPv(ptr noundef %29) #26
  br label %37

37:                                               ; preds = %36, %32
  %38 = load ptr, ptr %7, align 8, !tbaa !63
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  %40 = icmp eq ptr %38, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 1
  %43 = load i64, ptr %42, align 8, !tbaa !13
  %44 = icmp ult i64 %43, 16
  tail call void @llvm.assume(i1 %44)
  br label %46

45:                                               ; preds = %37
  tail call void @_ZdlPv(ptr noundef %38) #26
  br label %46

46:                                               ; preds = %45, %41
  %47 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %7, i64 1
  %48 = icmp eq ptr %47, %4
  br i1 %48, label %49, label %6

49:                                               ; preds = %46
  %50 = load ptr, ptr %0, align 8, !tbaa !108
  br label %51

51:                                               ; preds = %49, %1
  %52 = phi ptr [ %50, %49 ], [ %2, %1 ]
  %53 = icmp eq ptr %52, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  tail call void @_ZdlPv(ptr noundef nonnull %52) #26
  br label %55

55:                                               ; preds = %51, %54
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEEixERS9_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> > >::_Alloc_node", align 8
  %4 = alloca %"struct.std::pair", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 16
  %7 = load ptr, ptr %6, align 8, !tbaa !21
  %8 = getelementptr inbounds i8, ptr %0, i64 8
  %9 = icmp eq ptr %7, null
  br i1 %9, label %60, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %12 = load i64, ptr %11, align 8, !tbaa !13
  %13 = load ptr, ptr %1, align 8
  br label %14

14:                                               ; preds = %31, %10
  %15 = phi ptr [ %7, %10 ], [ %38, %31 ]
  %16 = phi ptr [ %8, %10 ], [ %36, %31 ]
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %15, i64 0, i32 1, i32 0, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !13
  %19 = tail call i64 @llvm.umin.i64(i64 %12, i64 %18)
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %15, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !63
  %24 = tail call i32 @memcmp(ptr noundef %23, ptr noundef %13, i64 noundef %19) #28
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %21, %14
  %27 = sub i64 %18, %12
  %28 = tail call i64 @llvm.smax.i64(i64 %27, i64 -2147483648)
  %29 = tail call i64 @llvm.smin.i64(i64 %28, i64 2147483647)
  %30 = trunc i64 %29 to i32
  br label %31

31:                                               ; preds = %26, %21
  %32 = phi i32 [ %24, %21 ], [ %30, %26 ]
  %33 = icmp slt i32 %32, 0
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %15, i64 0, i32 3
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %15, i64 0, i32 2
  %36 = select i1 %33, ptr %16, ptr %15
  %37 = select i1 %33, ptr %34, ptr %35
  %38 = load ptr, ptr %37, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %14

40:                                               ; preds = %31
  %41 = icmp eq ptr %36, %8
  br i1 %41, label %60, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %36, i64 0, i32 1, i32 0, i32 1
  %44 = load i64, ptr %43, align 8, !tbaa !13
  %45 = tail call i64 @llvm.umin.i64(i64 %44, i64 %12)
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %36, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !63
  %50 = tail call i32 @memcmp(ptr noundef %13, ptr noundef %49, i64 noundef %45) #28
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %47, %42
  %53 = sub i64 %12, %44
  %54 = tail call i64 @llvm.smax.i64(i64 %53, i64 -2147483648)
  %55 = tail call i64 @llvm.smin.i64(i64 %54, i64 2147483647)
  %56 = trunc i64 %55 to i32
  br label %57

57:                                               ; preds = %47, %52
  %58 = phi i32 [ %50, %47 ], [ %56, %52 ]
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %60, label %113

60:                                               ; preds = %2, %40, %57
  %61 = phi ptr [ %36, %57 ], [ %8, %40 ], [ %8, %2 ]
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %4) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #28
  %62 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 2
  store ptr %62, ptr %5, align 8, !tbaa !11
  %63 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 1
  store i64 0, ptr %63, align 8, !tbaa !13
  store i8 0, ptr %62, align 8, !tbaa !16
  invoke void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERS6_S8_(ptr noundef nonnull align 8 dereferenceable(64) %4, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %5)
          to label %64 unwind label %100

64:                                               ; preds = %60
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #28
  store ptr %0, ptr %3, align 8, !tbaa !5
  %65 = invoke { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %61, ptr noundef nonnull align 8 dereferenceable(32) %4)
          to label %66 unwind label %102

66:                                               ; preds = %64
  %67 = extractvalue { ptr, ptr } %65, 0
  %68 = extractvalue { ptr, ptr } %65, 1
  %69 = icmp eq ptr %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  %71 = invoke ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_M_insert_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_EPSt18_Rb_tree_node_baseSK_RKS8_RT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %67, ptr noundef nonnull %68, ptr noundef nonnull align 8 dereferenceable(64) %4, ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %72 unwind label %102

72:                                               ; preds = %66, %70
  %73 = phi ptr [ %67, %66 ], [ %71, %70 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  %74 = getelementptr inbounds %"struct.std::pair", ptr %4, i64 0, i32 1
  %75 = load ptr, ptr %74, align 8, !tbaa !63
  %76 = getelementptr inbounds %"struct.std::pair", ptr %4, i64 0, i32 1, i32 2
  %77 = icmp eq ptr %75, %76
  br i1 %77, label %78, label %82

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"struct.std::pair", ptr %4, i64 0, i32 1, i32 1
  %80 = load i64, ptr %79, align 8, !tbaa !13
  %81 = icmp ult i64 %80, 16
  call void @llvm.assume(i1 %81)
  br label %83

82:                                               ; preds = %72
  call void @_ZdlPv(ptr noundef %75) #26
  br label %83

83:                                               ; preds = %82, %78
  %84 = load ptr, ptr %4, align 8, !tbaa !63
  %85 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 2
  %86 = icmp eq ptr %84, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 1
  %89 = load i64, ptr %88, align 8, !tbaa !13
  %90 = icmp ult i64 %89, 16
  call void @llvm.assume(i1 %90)
  br label %92

91:                                               ; preds = %83
  call void @_ZdlPv(ptr noundef %84) #26
  br label %92

92:                                               ; preds = %91, %87
  %93 = load ptr, ptr %5, align 8, !tbaa !63
  %94 = icmp eq ptr %93, %62
  br i1 %94, label %95, label %98

95:                                               ; preds = %92
  %96 = load i64, ptr %63, align 8, !tbaa !13
  %97 = icmp ult i64 %96, 16
  call void @llvm.assume(i1 %97)
  br label %99

98:                                               ; preds = %92
  call void @_ZdlPv(ptr noundef %93) #26
  br label %99

99:                                               ; preds = %95, %98
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #28
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #28
  br label %113

100:                                              ; preds = %60
  %101 = landingpad { ptr, i32 }
          cleanup
  br label %104

102:                                              ; preds = %70, %64
  %103 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev(ptr noundef nonnull align 8 dereferenceable(64) %4)
          to label %104 unwind label %116

104:                                              ; preds = %102, %100
  %105 = phi { ptr, i32 } [ %101, %100 ], [ %103, %102 ]
  %106 = load ptr, ptr %5, align 8, !tbaa !63
  %107 = icmp eq ptr %106, %62
  br i1 %107, label %108, label %111

108:                                              ; preds = %104
  %109 = load i64, ptr %63, align 8, !tbaa !13
  %110 = icmp ult i64 %109, 16
  call void @llvm.assume(i1 %110)
  br label %112

111:                                              ; preds = %104
  call void @_ZdlPv(ptr noundef %106) #26
  br label %112

112:                                              ; preds = %111, %108
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #28
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #28
  resume { ptr, i32 } %105

113:                                              ; preds = %99, %57
  %114 = phi ptr [ %73, %99 ], [ %36, %57 ]
  %115 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %114, i64 0, i32 1, i32 1
  ret ptr %115

116:                                              ; preds = %102
  %117 = landingpad { ptr, i32 }
          catch ptr null
  %118 = extractvalue { ptr, i32 } %117, 0
  call void @__clang_call_terminate(ptr %118) #27
  unreachable
}

declare void @_Z11opp_stringfB5cxx11PKcz(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef, ...) local_unnamed_addr #1

declare void @_ZNK8Scenario11getVariableB5cxx11EPKc(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef nonnull align 8 dereferenceable(88), ptr noundef) local_unnamed_addr #1

declare noundef i32 @_ZNK8Scenario19getIteratorPositionEPKc(ptr noundef nonnull align 8 dereferenceable(88), ptr noundef) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK25SectionBasedConfiguration19substituteVariablesB5cxx11EPKcii(ptr noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef readonly %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = alloca %"class.std::__cxx11::basic_string", align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.std::__cxx11::basic_string", align 8
  %14 = alloca %"class.std::__cxx11::basic_string", align 8
  %15 = alloca %"class.std::__cxx11::basic_string", align 8
  %16 = alloca %"class.std::__cxx11::basic_string", align 8
  %17 = alloca %"class.std::__cxx11::basic_string", align 8
  %18 = alloca %class.ValueIterator, align 8
  %19 = alloca %"class.std::__cxx11::basic_string", align 8
  %20 = icmp eq ptr %2, null
  %21 = select i1 %20, ptr @.str.14, ptr %2
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %22, ptr %0, align 8, !tbaa !11
  %23 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %21) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #28
  store i64 %23, ptr %8, align 8, !tbaa !87
  %24 = icmp ugt i64 %23, 15
  br i1 %24, label %25, label %28

25:                                               ; preds = %5
  %26 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(8) %8, i64 noundef 0)
  store ptr %26, ptr %0, align 8, !tbaa !63
  %27 = load i64, ptr %8, align 8, !tbaa !87
  store i64 %27, ptr %22, align 8, !tbaa !16
  br label %28

28:                                               ; preds = %25, %5
  %29 = phi ptr [ %26, %25 ], [ %22, %5 ]
  switch i64 %23, label %32 [
    i64 1, label %30
    i64 0, label %33
  ]

30:                                               ; preds = %28
  %31 = load i8, ptr %21, align 1, !tbaa !16
  store i8 %31, ptr %29, align 1, !tbaa !16
  br label %33

32:                                               ; preds = %28
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %29, ptr nonnull align 1 %21, i64 %23, i1 false)
  br label %33

33:                                               ; preds = %32, %30, %28
  %34 = load i64, ptr %8, align 8, !tbaa !87
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %34, ptr %35, align 8, !tbaa !13
  %36 = load ptr, ptr %0, align 8, !tbaa !63
  %37 = getelementptr inbounds i8, ptr %36, i64 %34
  store i8 0, ptr %37, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #28
  %38 = load ptr, ptr %0, align 8, !tbaa !63
  %39 = call noundef ptr @strstr(ptr noundef nonnull dereferenceable(1) %38, ptr noundef nonnull dereferenceable(1) @.str.49) #29
  %40 = icmp eq ptr %39, null
  br i1 %40, label %468, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2
  %43 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 1
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 2
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 1
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 1
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 2
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 1
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %17, i64 0, i32 2
  %51 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %17, i64 0, i32 1
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 2
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 1
  %54 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 1
  %55 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 2
  %57 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 1
  %58 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 2
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 1
  %60 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 2
  %61 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 1
  %62 = getelementptr inbounds i8, ptr %17, i64 17
  br label %63

63:                                               ; preds = %41, %426
  %64 = phi ptr [ %39, %41 ], [ %428, %426 ]
  %65 = phi i32 [ 0, %41 ], [ %398, %426 ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #28
  store ptr %42, ptr %10, align 8, !tbaa !11
  store i64 0, ptr %43, align 8, !tbaa !13
  store i8 0, ptr %42, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %11) #28
  store ptr %44, ptr %11, align 8, !tbaa !11
  store i64 0, ptr %45, align 8, !tbaa !13
  store i8 0, ptr %44, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #28
  store ptr %46, ptr %12, align 8, !tbaa !11
  store i64 0, ptr %47, align 8, !tbaa !13
  store i8 0, ptr %46, align 8, !tbaa !16
  invoke void @_ZN25SectionBasedConfiguration13parseVariableEPKcRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_S8_RS1_(ptr noundef nonnull %64, ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull align 8 dereferenceable(32) %11, ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef nonnull align 8 dereferenceable(8) %9)
          to label %66 unwind label %176

66:                                               ; preds = %63
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #28
  store ptr %48, ptr %13, align 8, !tbaa !11
  store i64 0, ptr %49, align 8, !tbaa !13
  store i8 0, ptr %48, align 8, !tbaa !16
  %67 = load i64, ptr %47, align 8, !tbaa !13
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %216

69:                                               ; preds = %66
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %14) #28
  %70 = load i64, ptr %43, align 8, !tbaa !13
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %89, label %72

72:                                               ; preds = %69
  store ptr %58, ptr %14, align 8, !tbaa !11
  %73 = load ptr, ptr %10, align 8, !tbaa !63
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #28
  store i64 %70, ptr %7, align 8, !tbaa !87
  %74 = icmp ugt i64 %70, 15
  br i1 %74, label %75, label %79

75:                                               ; preds = %72
  %76 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %14, ptr noundef nonnull align 8 dereferenceable(8) %7, i64 noundef 0)
          to label %77 unwind label %182

77:                                               ; preds = %75
  store ptr %76, ptr %14, align 8, !tbaa !63
  %78 = load i64, ptr %7, align 8, !tbaa !87
  store i64 %78, ptr %58, align 8, !tbaa !16
  br label %83

79:                                               ; preds = %72
  %80 = icmp eq i64 %70, 1
  br i1 %80, label %81, label %83

81:                                               ; preds = %79
  %82 = load i8, ptr %73, align 1, !tbaa !16
  store i8 %82, ptr %58, align 8, !tbaa !16
  br label %85

83:                                               ; preds = %77, %79
  %84 = phi ptr [ %76, %77 ], [ %58, %79 ]
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %84, ptr align 1 %73, i64 %70, i1 false)
  br label %85

85:                                               ; preds = %81, %83
  %86 = load i64, ptr %7, align 8, !tbaa !87
  store i64 %86, ptr %59, align 8, !tbaa !13
  %87 = load ptr, ptr %14, align 8, !tbaa !63
  %88 = getelementptr inbounds i8, ptr %87, i64 %86
  store i8 0, ptr %88, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #28
  br label %90

89:                                               ; preds = %69
  invoke void (ptr, ptr, ...) @_Z11opp_stringfB5cxx11PKcz(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %14, ptr noundef nonnull @.str.55, i32 noundef %3, i32 noundef %4, i32 noundef %65)
          to label %90 unwind label %182

90:                                               ; preds = %85, %89
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #28
  %91 = load ptr, ptr %14, align 8, !tbaa !63
  store ptr %60, ptr %15, align 8, !tbaa !11
  %92 = icmp eq ptr %91, null
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  invoke void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
          to label %94 unwind label %186

94:                                               ; preds = %93
  unreachable

95:                                               ; preds = %90
  %96 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %91) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #28
  store i64 %96, ptr %6, align 8, !tbaa !87
  %97 = icmp ugt i64 %96, 15
  br i1 %97, label %98, label %102

98:                                               ; preds = %95
  %99 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %15, ptr noundef nonnull align 8 dereferenceable(8) %6, i64 noundef 0)
          to label %100 unwind label %184

100:                                              ; preds = %98
  store ptr %99, ptr %15, align 8, !tbaa !63
  %101 = load i64, ptr %6, align 8, !tbaa !87
  store i64 %101, ptr %60, align 8, !tbaa !16
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi ptr [ %99, %100 ], [ %60, %95 ]
  switch i64 %96, label %106 [
    i64 1, label %104
    i64 0, label %107
  ]

104:                                              ; preds = %102
  %105 = load i8, ptr %91, align 1, !tbaa !16
  store i8 %105, ptr %103, align 1, !tbaa !16
  br label %107

106:                                              ; preds = %102
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %103, ptr nonnull align 1 %91, i64 %96, i1 false)
  br label %107

107:                                              ; preds = %106, %104, %102
  %108 = load i64, ptr %6, align 8, !tbaa !87
  store i64 %108, ptr %61, align 8, !tbaa !13
  %109 = load ptr, ptr %15, align 8, !tbaa !63
  %110 = getelementptr inbounds i8, ptr %109, i64 %108
  store i8 0, ptr %110, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #28
  %111 = load ptr, ptr %54, align 8, !tbaa !21
  %112 = icmp eq ptr %111, null
  %113 = load ptr, ptr %15, align 8
  br i1 %112, label %163, label %114

114:                                              ; preds = %107
  %115 = load i64, ptr %61, align 8, !tbaa !13
  br label %116

116:                                              ; preds = %133, %114
  %117 = phi ptr [ %111, %114 ], [ %140, %133 ]
  %118 = phi ptr [ %55, %114 ], [ %138, %133 ]
  %119 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %117, i64 0, i32 1, i32 0, i32 1
  %120 = load i64, ptr %119, align 8, !tbaa !13
  %121 = call i64 @llvm.umin.i64(i64 %115, i64 %120)
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %128, label %123

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %117, i64 0, i32 1
  %125 = load ptr, ptr %124, align 8, !tbaa !63
  %126 = call i32 @memcmp(ptr noundef %125, ptr noundef %113, i64 noundef %121) #28
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %133

128:                                              ; preds = %123, %116
  %129 = sub i64 %120, %115
  %130 = call i64 @llvm.smax.i64(i64 %129, i64 -2147483648)
  %131 = call i64 @llvm.smin.i64(i64 %130, i64 2147483647)
  %132 = trunc i64 %131 to i32
  br label %133

133:                                              ; preds = %128, %123
  %134 = phi i32 [ %126, %123 ], [ %132, %128 ]
  %135 = icmp slt i32 %134, 0
  %136 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %117, i64 0, i32 3
  %137 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %117, i64 0, i32 2
  %138 = select i1 %135, ptr %118, ptr %117
  %139 = select i1 %135, ptr %136, ptr %137
  %140 = load ptr, ptr %139, align 8, !tbaa !5
  %141 = icmp eq ptr %140, null
  br i1 %141, label %142, label %116

142:                                              ; preds = %133
  %143 = icmp eq ptr %138, %55
  br i1 %143, label %163, label %144

144:                                              ; preds = %142
  %145 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %138, i64 0, i32 1, i32 0, i32 1
  %146 = load i64, ptr %145, align 8, !tbaa !13
  %147 = call i64 @llvm.umin.i64(i64 %146, i64 %115)
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %154, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %138, i64 0, i32 1
  %151 = load ptr, ptr %150, align 8, !tbaa !63
  %152 = call i32 @memcmp(ptr noundef %113, ptr noundef %151, i64 noundef %147) #28
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %159

154:                                              ; preds = %149, %144
  %155 = sub i64 %115, %146
  %156 = call i64 @llvm.smax.i64(i64 %155, i64 -2147483648)
  %157 = call i64 @llvm.smin.i64(i64 %156, i64 2147483647)
  %158 = trunc i64 %157 to i32
  br label %159

159:                                              ; preds = %154, %149
  %160 = phi i32 [ %152, %149 ], [ %158, %154 ]
  %161 = icmp slt i32 %160, 0
  %162 = select i1 %161, ptr %55, ptr %138
  br label %163

163:                                              ; preds = %159, %142, %107
  %164 = phi ptr [ %55, %142 ], [ %55, %107 ], [ %162, %159 ]
  %165 = icmp eq ptr %113, %60
  br i1 %165, label %166, label %169

166:                                              ; preds = %163
  %167 = load i64, ptr %61, align 8, !tbaa !13
  %168 = icmp ult i64 %167, 16
  call void @llvm.assume(i1 %168)
  br label %170

169:                                              ; preds = %163
  call void @_ZdlPv(ptr noundef %113) #26
  br label %170

170:                                              ; preds = %166, %169
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #28
  %171 = icmp eq ptr %164, %55
  br i1 %171, label %172, label %196

172:                                              ; preds = %170
  %173 = call ptr @__cxa_allocate_exception(i64 128) #28
  %174 = load ptr, ptr %14, align 8, !tbaa !63
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %173, ptr noundef nonnull @.str.60, ptr noundef %174)
          to label %175 unwind label %190

175:                                              ; preds = %172
  invoke void @__cxa_throw(ptr nonnull %173, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %473 unwind label %194

176:                                              ; preds = %63
  %177 = landingpad { ptr, i32 }
          cleanup
  br label %439

178:                                              ; preds = %387
  %179 = landingpad { ptr, i32 }
          cleanup
  br label %430

180:                                              ; preds = %385
  %181 = landingpad { ptr, i32 }
          cleanup
  br label %430

182:                                              ; preds = %75, %89
  %183 = landingpad { ptr, i32 }
          cleanup
  br label %214

184:                                              ; preds = %98
  %185 = landingpad { ptr, i32 }
          cleanup
  br label %188

186:                                              ; preds = %93
  %187 = landingpad { ptr, i32 }
          cleanup
  br label %188

188:                                              ; preds = %186, %184
  %189 = phi { ptr, i32 } [ %185, %184 ], [ %187, %186 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #28
  br label %206

190:                                              ; preds = %172
  %191 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %173) #28
  br label %206

192:                                              ; preds = %196
  %193 = landingpad { ptr, i32 }
          cleanup
  br label %206

194:                                              ; preds = %175
  %195 = landingpad { ptr, i32 }
          cleanup
  br label %206

196:                                              ; preds = %170
  %197 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %164, i64 0, i32 1, i32 1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(32) %197)
          to label %198 unwind label %192

198:                                              ; preds = %196
  %199 = load ptr, ptr %14, align 8, !tbaa !63
  %200 = icmp eq ptr %199, %58
  br i1 %200, label %201, label %204

201:                                              ; preds = %198
  %202 = load i64, ptr %59, align 8, !tbaa !13
  %203 = icmp ult i64 %202, 16
  call void @llvm.assume(i1 %203)
  br label %205

204:                                              ; preds = %198
  call void @_ZdlPv(ptr noundef %199) #26
  br label %205

205:                                              ; preds = %204, %201
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14) #28
  br label %378

206:                                              ; preds = %192, %194, %190, %188
  %207 = phi { ptr, i32 } [ %191, %190 ], [ %189, %188 ], [ %193, %192 ], [ %195, %194 ]
  %208 = load ptr, ptr %14, align 8, !tbaa !63
  %209 = icmp eq ptr %208, %58
  br i1 %209, label %210, label %213

210:                                              ; preds = %206
  %211 = load i64, ptr %59, align 8, !tbaa !13
  %212 = icmp ult i64 %211, 16
  call void @llvm.assume(i1 %212)
  br label %214

213:                                              ; preds = %206
  call void @_ZdlPv(ptr noundef %208) #26
  br label %214

214:                                              ; preds = %213, %210, %182
  %215 = phi { ptr, i32 } [ %183, %182 ], [ %207, %210 ], [ %207, %213 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14) #28
  br label %430

216:                                              ; preds = %66
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %16) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %17) #28
  store ptr %50, ptr %17, align 8, !tbaa !11
  store i8 38, ptr %50, align 8, !tbaa !16
  store i64 1, ptr %51, align 8, !tbaa !13
  store i8 0, ptr %62, align 1, !tbaa !16
  call void @llvm.experimental.noalias.scope.decl(metadata !164)
  %217 = load ptr, ptr %12, align 8, !tbaa !63, !noalias !164
  store ptr %52, ptr %16, align 8, !tbaa !11, !alias.scope !167
  store i64 0, ptr %53, align 8, !tbaa !13, !alias.scope !167
  store i8 0, ptr %52, align 8, !tbaa !16, !alias.scope !167
  %218 = add i64 %67, 1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %16, i64 noundef %218)
          to label %219 unwind label %232

219:                                              ; preds = %216
  %220 = load i64, ptr %53, align 8, !tbaa !13, !alias.scope !167
  %221 = icmp eq i64 %220, 4611686018427387903
  br i1 %221, label %228, label %222

222:                                              ; preds = %219
  %223 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %16, ptr noundef nonnull %50, i64 noundef 1)
          to label %224 unwind label %232

224:                                              ; preds = %222
  %225 = load i64, ptr %53, align 8, !tbaa !13, !alias.scope !167
  %226 = sub i64 4611686018427387903, %225
  %227 = icmp ult i64 %226, %67
  br i1 %227, label %228, label %230

228:                                              ; preds = %224, %219
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %229 unwind label %234

229:                                              ; preds = %228
  unreachable

230:                                              ; preds = %224
  %231 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %16, ptr noundef %217, i64 noundef %67)
          to label %244 unwind label %232

232:                                              ; preds = %216, %222, %230
  %233 = landingpad { ptr, i32 }
          cleanup
  br label %236

234:                                              ; preds = %228
  %235 = landingpad { ptr, i32 }
          cleanup
  br label %236

236:                                              ; preds = %234, %232
  %237 = phi { ptr, i32 } [ %233, %232 ], [ %235, %234 ]
  %238 = load ptr, ptr %16, align 8, !tbaa !63, !alias.scope !167
  %239 = icmp eq ptr %238, %52
  br i1 %239, label %240, label %243

240:                                              ; preds = %236
  %241 = load i64, ptr %53, align 8, !tbaa !13, !alias.scope !167
  %242 = icmp ult i64 %241, 16
  call void @llvm.assume(i1 %242)
  br label %317

243:                                              ; preds = %236
  call void @_ZdlPv(ptr noundef %238) #26
  br label %317

244:                                              ; preds = %230
  %245 = load ptr, ptr %54, align 8, !tbaa !21
  %246 = icmp eq ptr %245, null
  %247 = load ptr, ptr %16, align 8
  br i1 %246, label %297, label %248

248:                                              ; preds = %244
  %249 = load i64, ptr %53, align 8, !tbaa !13
  br label %250

250:                                              ; preds = %267, %248
  %251 = phi ptr [ %245, %248 ], [ %274, %267 ]
  %252 = phi ptr [ %55, %248 ], [ %272, %267 ]
  %253 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %251, i64 0, i32 1, i32 0, i32 1
  %254 = load i64, ptr %253, align 8, !tbaa !13
  %255 = call i64 @llvm.umin.i64(i64 %249, i64 %254)
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %262, label %257

257:                                              ; preds = %250
  %258 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %251, i64 0, i32 1
  %259 = load ptr, ptr %258, align 8, !tbaa !63
  %260 = call i32 @memcmp(ptr noundef %259, ptr noundef %247, i64 noundef %255) #28
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %267

262:                                              ; preds = %257, %250
  %263 = sub i64 %254, %249
  %264 = call i64 @llvm.smax.i64(i64 %263, i64 -2147483648)
  %265 = call i64 @llvm.smin.i64(i64 %264, i64 2147483647)
  %266 = trunc i64 %265 to i32
  br label %267

267:                                              ; preds = %262, %257
  %268 = phi i32 [ %260, %257 ], [ %266, %262 ]
  %269 = icmp slt i32 %268, 0
  %270 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %251, i64 0, i32 3
  %271 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %251, i64 0, i32 2
  %272 = select i1 %269, ptr %252, ptr %251
  %273 = select i1 %269, ptr %270, ptr %271
  %274 = load ptr, ptr %273, align 8, !tbaa !5
  %275 = icmp eq ptr %274, null
  br i1 %275, label %276, label %250

276:                                              ; preds = %267
  %277 = icmp eq ptr %272, %55
  br i1 %277, label %297, label %278

278:                                              ; preds = %276
  %279 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %272, i64 0, i32 1, i32 0, i32 1
  %280 = load i64, ptr %279, align 8, !tbaa !13
  %281 = call i64 @llvm.umin.i64(i64 %280, i64 %249)
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %288, label %283

283:                                              ; preds = %278
  %284 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %272, i64 0, i32 1
  %285 = load ptr, ptr %284, align 8, !tbaa !63
  %286 = call i32 @memcmp(ptr noundef %247, ptr noundef %285, i64 noundef %281) #28
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %293

288:                                              ; preds = %283, %278
  %289 = sub i64 %249, %280
  %290 = call i64 @llvm.smax.i64(i64 %289, i64 -2147483648)
  %291 = call i64 @llvm.smin.i64(i64 %290, i64 2147483647)
  %292 = trunc i64 %291 to i32
  br label %293

293:                                              ; preds = %288, %283
  %294 = phi i32 [ %286, %283 ], [ %292, %288 ]
  %295 = icmp slt i32 %294, 0
  %296 = select i1 %295, ptr %55, ptr %272
  br label %297

297:                                              ; preds = %293, %276, %244
  %298 = phi ptr [ %55, %276 ], [ %55, %244 ], [ %296, %293 ]
  %299 = icmp eq ptr %247, %52
  br i1 %299, label %300, label %303

300:                                              ; preds = %297
  %301 = load i64, ptr %53, align 8, !tbaa !13
  %302 = icmp ult i64 %301, 16
  call void @llvm.assume(i1 %302)
  br label %304

303:                                              ; preds = %297
  call void @_ZdlPv(ptr noundef %247) #26
  br label %304

304:                                              ; preds = %303, %300
  %305 = load ptr, ptr %17, align 8, !tbaa !63
  %306 = icmp eq ptr %305, %50
  br i1 %306, label %307, label %310

307:                                              ; preds = %304
  %308 = load i64, ptr %51, align 8, !tbaa !13
  %309 = icmp ult i64 %308, 16
  call void @llvm.assume(i1 %309)
  br label %311

310:                                              ; preds = %304
  call void @_ZdlPv(ptr noundef %305) #26
  br label %311

311:                                              ; preds = %307, %310
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %17) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #28
  %312 = icmp eq ptr %298, %55
  br i1 %312, label %313, label %329

313:                                              ; preds = %311
  %314 = call ptr @__cxa_allocate_exception(i64 128) #28
  %315 = load ptr, ptr %12, align 8, !tbaa !63
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %314, ptr noundef nonnull @.str.60, ptr noundef %315)
          to label %316 unwind label %325

316:                                              ; preds = %313
  invoke void @__cxa_throw(ptr nonnull %314, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %473 unwind label %327

317:                                              ; preds = %243, %240
  %318 = load ptr, ptr %17, align 8, !tbaa !63
  %319 = icmp eq ptr %318, %50
  br i1 %319, label %320, label %323

320:                                              ; preds = %317
  %321 = load i64, ptr %51, align 8, !tbaa !13
  %322 = icmp ult i64 %321, 16
  call void @llvm.assume(i1 %322)
  br label %324

323:                                              ; preds = %317
  call void @_ZdlPv(ptr noundef %318) #26
  br label %324

324:                                              ; preds = %323, %320
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %17) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #28
  br label %430

325:                                              ; preds = %313
  %326 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %314) #28
  br label %430

327:                                              ; preds = %316
  %328 = landingpad { ptr, i32 }
          cleanup
  br label %430

329:                                              ; preds = %311
  %330 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %298, i64 0, i32 1, i32 1
  %331 = load ptr, ptr %330, align 8, !tbaa !63
  %332 = call i64 @__isoc23_strtol(ptr noundef nonnull %331, ptr noundef null, i32 noundef 10) #28
  %333 = trunc i64 %332 to i32
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %18) #28
  %334 = load ptr, ptr %11, align 8, !tbaa !63
  invoke void @_ZN13ValueIteratorC1EPKc(ptr noundef nonnull align 8 dereferenceable(36) %18, ptr noundef %334)
          to label %335 unwind label %343

335:                                              ; preds = %329
  %336 = invoke noundef i32 @_ZNK13ValueIterator6lengthEv(ptr noundef nonnull align 8 dereferenceable(36) %18)
          to label %337 unwind label %345

337:                                              ; preds = %335
  %338 = icmp sgt i32 %336, %333
  br i1 %338, label %351, label %339

339:                                              ; preds = %337
  %340 = call ptr @__cxa_allocate_exception(i64 128) #28
  %341 = load ptr, ptr %12, align 8, !tbaa !63
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %340, ptr noundef nonnull @.str.61, ptr noundef %341)
          to label %342 unwind label %349

342:                                              ; preds = %339
  invoke void @__cxa_throw(ptr nonnull %340, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %473 unwind label %347

343:                                              ; preds = %360, %329
  %344 = landingpad { ptr, i32 }
          cleanup
  br label %376

345:                                              ; preds = %335
  %346 = landingpad { ptr, i32 }
          cleanup
  br label %374

347:                                              ; preds = %342
  %348 = landingpad { ptr, i32 }
          cleanup
  br label %374

349:                                              ; preds = %339
  %350 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %340) #28
  br label %374

351:                                              ; preds = %337
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %19) #28
  invoke void @_ZNK13ValueIterator3getB5cxx11Ei(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %19, ptr noundef nonnull align 8 dereferenceable(36) %18, i32 noundef %333)
          to label %352 unwind label %362

352:                                              ; preds = %351
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(32) %19)
          to label %353 unwind label %364

353:                                              ; preds = %352
  %354 = load ptr, ptr %19, align 8, !tbaa !63
  %355 = icmp eq ptr %354, %56
  br i1 %355, label %356, label %359

356:                                              ; preds = %353
  %357 = load i64, ptr %57, align 8, !tbaa !13
  %358 = icmp ult i64 %357, 16
  call void @llvm.assume(i1 %358)
  br label %360

359:                                              ; preds = %353
  call void @_ZdlPv(ptr noundef %354) #26
  br label %360

360:                                              ; preds = %359, %356
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %19) #28
  invoke void @_ZN13ValueIteratorD1Ev(ptr noundef nonnull align 8 dereferenceable(36) %18)
          to label %361 unwind label %343

361:                                              ; preds = %360
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %18) #28
  br label %378

362:                                              ; preds = %351
  %363 = landingpad { ptr, i32 }
          cleanup
  br label %372

364:                                              ; preds = %352
  %365 = landingpad { ptr, i32 }
          cleanup
  %366 = load ptr, ptr %19, align 8, !tbaa !63
  %367 = icmp eq ptr %366, %56
  br i1 %367, label %368, label %371

368:                                              ; preds = %364
  %369 = load i64, ptr %57, align 8, !tbaa !13
  %370 = icmp ult i64 %369, 16
  call void @llvm.assume(i1 %370)
  br label %372

371:                                              ; preds = %364
  call void @_ZdlPv(ptr noundef %366) #26
  br label %372

372:                                              ; preds = %371, %368, %362
  %373 = phi { ptr, i32 } [ %363, %362 ], [ %365, %368 ], [ %365, %371 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %19) #28
  br label %374

374:                                              ; preds = %345, %347, %372, %349
  %375 = phi { ptr, i32 } [ %350, %349 ], [ %373, %372 ], [ %346, %345 ], [ %348, %347 ]
  invoke void @_ZN13ValueIteratorD1Ev(ptr noundef nonnull align 8 dereferenceable(36) %18)
          to label %376 unwind label %470

376:                                              ; preds = %374, %343
  %377 = phi { ptr, i32 } [ %375, %374 ], [ %344, %343 ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %18) #28
  br label %430

378:                                              ; preds = %361, %205
  %379 = load ptr, ptr %0, align 8, !tbaa !63
  %380 = ptrtoint ptr %64 to i64
  %381 = ptrtoint ptr %379 to i64
  %382 = sub i64 %380, %381
  %383 = load i64, ptr %35, align 8, !tbaa !13
  %384 = icmp ult i64 %383, %382
  br i1 %384, label %385, label %387

385:                                              ; preds = %378
  invoke void (ptr, ...) @_ZSt24__throw_out_of_range_fmtPKcz(ptr noundef nonnull @.str.169, ptr noundef nonnull @.str.168, i64 noundef %382, i64 noundef %383) #30
          to label %386 unwind label %180

386:                                              ; preds = %385
  unreachable

387:                                              ; preds = %378
  %388 = load ptr, ptr %9, align 8, !tbaa !5
  %389 = ptrtoint ptr %388 to i64
  %390 = sub i64 %389, %380
  %391 = add i64 %390, 1
  %392 = load i64, ptr %49, align 8, !tbaa !13
  %393 = load ptr, ptr %13, align 8, !tbaa !63
  %394 = sub i64 %383, %382
  %395 = call i64 @llvm.umin.i64(i64 %394, i64 %391)
  %396 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %0, i64 noundef %382, i64 noundef %395, ptr noundef %393, i64 noundef %392)
          to label %397 unwind label %178

397:                                              ; preds = %387
  %398 = add nuw nsw i32 %65, 1
  %399 = load ptr, ptr %13, align 8, !tbaa !63
  %400 = icmp eq ptr %399, %48
  br i1 %400, label %401, label %404

401:                                              ; preds = %397
  %402 = load i64, ptr %49, align 8, !tbaa !13
  %403 = icmp ult i64 %402, 16
  call void @llvm.assume(i1 %403)
  br label %405

404:                                              ; preds = %397
  call void @_ZdlPv(ptr noundef %399) #26
  br label %405

405:                                              ; preds = %404, %401
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #28
  %406 = load ptr, ptr %12, align 8, !tbaa !63
  %407 = icmp eq ptr %406, %46
  br i1 %407, label %408, label %411

408:                                              ; preds = %405
  %409 = load i64, ptr %47, align 8, !tbaa !13
  %410 = icmp ult i64 %409, 16
  call void @llvm.assume(i1 %410)
  br label %412

411:                                              ; preds = %405
  call void @_ZdlPv(ptr noundef %406) #26
  br label %412

412:                                              ; preds = %411, %408
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #28
  %413 = load ptr, ptr %11, align 8, !tbaa !63
  %414 = icmp eq ptr %413, %44
  br i1 %414, label %415, label %418

415:                                              ; preds = %412
  %416 = load i64, ptr %45, align 8, !tbaa !13
  %417 = icmp ult i64 %416, 16
  call void @llvm.assume(i1 %417)
  br label %419

418:                                              ; preds = %412
  call void @_ZdlPv(ptr noundef %413) #26
  br label %419

419:                                              ; preds = %418, %415
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #28
  %420 = load ptr, ptr %10, align 8, !tbaa !63
  %421 = icmp eq ptr %420, %42
  br i1 %421, label %422, label %425

422:                                              ; preds = %419
  %423 = load i64, ptr %43, align 8, !tbaa !13
  %424 = icmp ult i64 %423, 16
  call void @llvm.assume(i1 %424)
  br label %426

425:                                              ; preds = %419
  call void @_ZdlPv(ptr noundef %420) #26
  br label %426

426:                                              ; preds = %425, %422
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #28
  %427 = load ptr, ptr %0, align 8, !tbaa !63
  %428 = call noundef ptr @strstr(ptr noundef nonnull dereferenceable(1) %427, ptr noundef nonnull dereferenceable(1) @.str.49) #29
  %429 = icmp eq ptr %428, null
  br i1 %429, label %468, label %63

430:                                              ; preds = %178, %180, %324, %325, %327, %376, %214
  %431 = phi { ptr, i32 } [ %215, %214 ], [ %328, %327 ], [ %326, %325 ], [ %237, %324 ], [ %377, %376 ], [ %179, %178 ], [ %181, %180 ]
  %432 = load ptr, ptr %13, align 8, !tbaa !63
  %433 = icmp eq ptr %432, %48
  br i1 %433, label %434, label %437

434:                                              ; preds = %430
  %435 = load i64, ptr %49, align 8, !tbaa !13
  %436 = icmp ult i64 %435, 16
  call void @llvm.assume(i1 %436)
  br label %438

437:                                              ; preds = %430
  call void @_ZdlPv(ptr noundef %432) #26
  br label %438

438:                                              ; preds = %437, %434
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #28
  br label %439

439:                                              ; preds = %438, %176
  %440 = phi { ptr, i32 } [ %431, %438 ], [ %177, %176 ]
  %441 = load ptr, ptr %12, align 8, !tbaa !63
  %442 = icmp eq ptr %441, %46
  br i1 %442, label %443, label %446

443:                                              ; preds = %439
  %444 = load i64, ptr %47, align 8, !tbaa !13
  %445 = icmp ult i64 %444, 16
  call void @llvm.assume(i1 %445)
  br label %447

446:                                              ; preds = %439
  call void @_ZdlPv(ptr noundef %441) #26
  br label %447

447:                                              ; preds = %446, %443
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #28
  %448 = load ptr, ptr %11, align 8, !tbaa !63
  %449 = icmp eq ptr %448, %44
  br i1 %449, label %450, label %453

450:                                              ; preds = %447
  %451 = load i64, ptr %45, align 8, !tbaa !13
  %452 = icmp ult i64 %451, 16
  call void @llvm.assume(i1 %452)
  br label %454

453:                                              ; preds = %447
  call void @_ZdlPv(ptr noundef %448) #26
  br label %454

454:                                              ; preds = %453, %450
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #28
  %455 = load ptr, ptr %10, align 8, !tbaa !63
  %456 = icmp eq ptr %455, %42
  br i1 %456, label %457, label %460

457:                                              ; preds = %454
  %458 = load i64, ptr %43, align 8, !tbaa !13
  %459 = icmp ult i64 %458, 16
  call void @llvm.assume(i1 %459)
  br label %461

460:                                              ; preds = %454
  call void @_ZdlPv(ptr noundef %455) #26
  br label %461

461:                                              ; preds = %460, %457
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #28
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #28
  %462 = load ptr, ptr %0, align 8, !tbaa !63
  %463 = icmp eq ptr %462, %22
  br i1 %463, label %464, label %467

464:                                              ; preds = %461
  %465 = load i64, ptr %35, align 8, !tbaa !13
  %466 = icmp ult i64 %465, 16
  call void @llvm.assume(i1 %466)
  br label %469

467:                                              ; preds = %461
  call void @_ZdlPv(ptr noundef %462) #26
  br label %469

468:                                              ; preds = %426, %33
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #28
  ret void

469:                                              ; preds = %467, %464
  resume { ptr, i32 } %440

470:                                              ; preds = %374
  %471 = landingpad { ptr, i32 }
          catch ptr null
  %472 = extractvalue { ptr, i32 } %471, 0
  call void @__clang_call_terminate(ptr %472) #27
  unreachable

473:                                              ; preds = %342, %316, %175
  unreachable
}

; Function Attrs: sspstrong uwtable
define dso_local noundef i32 @_ZNK25SectionBasedConfiguration18getNumRunsInConfigEPKc(ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %0, ptr noundef %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::vector.36", align 8
  %4 = alloca %"class.std::vector.41", align 8
  %5 = alloca %class.Scenario, align 8
  %6 = tail call noundef i32 @_ZNK25SectionBasedConfiguration17resolveConfigNameEPKc(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %1)
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %133, label %8

8:                                                ; preds = %2
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #28
  %9 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !25, !noalias !170
  %11 = load ptr, ptr %10, align 8, !tbaa !9, !noalias !170
  %12 = getelementptr inbounds ptr, ptr %11, i64 6
  %13 = load ptr, ptr %12, align 8, !noalias !170
  %14 = tail call noundef ptr %13(ptr noundef nonnull align 8 dereferenceable(8) %10, i32 noundef %6), !noalias !170
  call void @_ZNK25SectionBasedConfiguration19resolveSectionChainEPKc(ptr nonnull sret(%"class.std::vector.36") align 8 %3, ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %14)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #28
  invoke void @_ZNK25SectionBasedConfiguration25collectIterationVariablesERKSt6vectorIiSaIiEE(ptr nonnull sret(%"class.std::vector.41") align 8 %4, ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull align 8 dereferenceable(24) %3)
          to label %15 unwind label %81

15:                                               ; preds = %8
  %16 = load ptr, ptr @CFGID_CONSTRAINT, align 8, !tbaa !5
  %17 = load ptr, ptr %16, align 8, !tbaa !9
  %18 = getelementptr inbounds ptr, ptr %17, i64 6
  %19 = load ptr, ptr %18, align 8
  %20 = invoke noundef ptr %19(ptr noundef nonnull align 8 dereferenceable(20) %16)
          to label %21 unwind label %85

21:                                               ; preds = %15
  %22 = invoke noundef ptr @_ZNK25SectionBasedConfiguration16internalGetValueERKSt6vectorIiSaIiEEPKcS6_(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef %20, ptr noundef null)
          to label %23 unwind label %85

23:                                               ; preds = %21
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %5) #28
  invoke void @_ZN8ScenarioC1ERKSt6vectorIN25SectionBasedConfiguration17IterationVariableESaIS2_EEPKc(ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %22)
          to label %24 unwind label %89

24:                                               ; preds = %23
  %25 = invoke noundef i32 @_ZN8Scenario10getNumRunsEv(ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %26 unwind label %91

26:                                               ; preds = %24
  invoke void @_ZN8ScenarioD1Ev(ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %27 unwind label %89

27:                                               ; preds = %26
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #28
  %28 = load ptr, ptr %4, align 8, !tbaa !108
  %29 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data", ptr %4, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !110
  %31 = icmp eq ptr %28, %30
  br i1 %31, label %77, label %32

32:                                               ; preds = %27, %72
  %33 = phi ptr [ %73, %72 ], [ %28, %27 ]
  %34 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %33, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !63
  %36 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %33, i64 0, i32 3, i32 2
  %37 = icmp eq ptr %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %33, i64 0, i32 3, i32 1
  %40 = load i64, ptr %39, align 8, !tbaa !13
  %41 = icmp ult i64 %40, 16
  call void @llvm.assume(i1 %41)
  br label %43

42:                                               ; preds = %32
  call void @_ZdlPv(ptr noundef %35) #26
  br label %43

43:                                               ; preds = %42, %38
  %44 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %33, i64 0, i32 2
  %45 = load ptr, ptr %44, align 8, !tbaa !63
  %46 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %33, i64 0, i32 2, i32 2
  %47 = icmp eq ptr %45, %46
  br i1 %47, label %48, label %52

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %33, i64 0, i32 2, i32 1
  %50 = load i64, ptr %49, align 8, !tbaa !13
  %51 = icmp ult i64 %50, 16
  call void @llvm.assume(i1 %51)
  br label %53

52:                                               ; preds = %43
  call void @_ZdlPv(ptr noundef %45) #26
  br label %53

53:                                               ; preds = %52, %48
  %54 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %33, i64 0, i32 1
  %55 = load ptr, ptr %54, align 8, !tbaa !63
  %56 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %33, i64 0, i32 1, i32 2
  %57 = icmp eq ptr %55, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %33, i64 0, i32 1, i32 1
  %60 = load i64, ptr %59, align 8, !tbaa !13
  %61 = icmp ult i64 %60, 16
  call void @llvm.assume(i1 %61)
  br label %63

62:                                               ; preds = %53
  call void @_ZdlPv(ptr noundef %55) #26
  br label %63

63:                                               ; preds = %62, %58
  %64 = load ptr, ptr %33, align 8, !tbaa !63
  %65 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %33, i64 0, i32 2
  %66 = icmp eq ptr %64, %65
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %33, i64 0, i32 1
  %69 = load i64, ptr %68, align 8, !tbaa !13
  %70 = icmp ult i64 %69, 16
  call void @llvm.assume(i1 %70)
  br label %72

71:                                               ; preds = %63
  call void @_ZdlPv(ptr noundef %64) #26
  br label %72

72:                                               ; preds = %71, %67
  %73 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %33, i64 1
  %74 = icmp eq ptr %73, %30
  br i1 %74, label %75, label %32

75:                                               ; preds = %72
  %76 = load ptr, ptr %4, align 8, !tbaa !108
  br label %77

77:                                               ; preds = %75, %27
  %78 = phi ptr [ %76, %75 ], [ %28, %27 ]
  %79 = icmp eq ptr %78, null
  br i1 %79, label %119, label %80

80:                                               ; preds = %77
  call void @_ZdlPv(ptr noundef nonnull %78) #26
  br label %119

81:                                               ; preds = %8
  %82 = landingpad { ptr, i32 }
          cleanup
  %83 = extractvalue { ptr, i32 } %82, 0
  %84 = extractvalue { ptr, i32 } %82, 1
  br label %124

85:                                               ; preds = %21, %15
  %86 = landingpad { ptr, i32 }
          cleanup
  %87 = extractvalue { ptr, i32 } %86, 0
  %88 = extractvalue { ptr, i32 } %86, 1
  br label %116

89:                                               ; preds = %26, %23
  %90 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %93

91:                                               ; preds = %24
  %92 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  invoke void @_ZN8ScenarioD1Ev(ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %93 unwind label %135

93:                                               ; preds = %91, %89
  %94 = phi { ptr, i32 } [ %90, %89 ], [ %92, %91 ]
  %95 = extractvalue { ptr, i32 } %94, 1
  %96 = extractvalue { ptr, i32 } %94, 0
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #28
  %97 = call i32 @llvm.eh.typeid.for(ptr nonnull @_ZTISt9exception) #28
  %98 = icmp eq i32 %95, %97
  br i1 %98, label %99, label %116

99:                                               ; preds = %93
  %100 = call ptr @__cxa_begin_catch(ptr %96) #28
  %101 = call ptr @__cxa_allocate_exception(i64 128) #28
  %102 = load ptr, ptr %100, align 8, !tbaa !9
  %103 = getelementptr inbounds ptr, ptr %102, i64 2
  %104 = load ptr, ptr %103, align 8
  %105 = call noundef ptr %104(ptr noundef nonnull align 8 dereferenceable(8) %100) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %101, ptr noundef nonnull @.str.22, ptr noundef %105)
          to label %106 unwind label %107

106:                                              ; preds = %99
  invoke void @__cxa_throw(ptr nonnull %101, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %138 unwind label %109

107:                                              ; preds = %99
  %108 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %101) #28
  br label %111

109:                                              ; preds = %106
  %110 = landingpad { ptr, i32 }
          cleanup
  br label %111

111:                                              ; preds = %109, %107
  %112 = phi { ptr, i32 } [ %110, %109 ], [ %108, %107 ]
  invoke void @__cxa_end_catch()
          to label %113 unwind label %135

113:                                              ; preds = %111
  %114 = extractvalue { ptr, i32 } %112, 1
  %115 = extractvalue { ptr, i32 } %112, 0
  br label %116

116:                                              ; preds = %113, %93, %85
  %117 = phi ptr [ %115, %113 ], [ %96, %93 ], [ %87, %85 ]
  %118 = phi i32 [ %114, %113 ], [ %95, %93 ], [ %88, %85 ]
  invoke void @_ZNSt6vectorIN25SectionBasedConfiguration17IterationVariableESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %4)
          to label %124 unwind label %135

119:                                              ; preds = %80, %77
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #28
  %120 = load ptr, ptr %3, align 8, !tbaa !95
  %121 = icmp eq ptr %120, null
  br i1 %121, label %123, label %122

122:                                              ; preds = %119
  call void @_ZdlPv(ptr noundef nonnull %120) #26
  br label %123

123:                                              ; preds = %119, %122
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #28
  br label %133

124:                                              ; preds = %116, %81
  %125 = phi ptr [ %83, %81 ], [ %117, %116 ]
  %126 = phi i32 [ %84, %81 ], [ %118, %116 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #28
  %127 = load ptr, ptr %3, align 8, !tbaa !95
  %128 = icmp eq ptr %127, null
  br i1 %128, label %130, label %129

129:                                              ; preds = %124
  call void @_ZdlPv(ptr noundef nonnull %127) #26
  br label %130

130:                                              ; preds = %129, %124
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #28
  %131 = insertvalue { ptr, i32 } poison, ptr %125, 0
  %132 = insertvalue { ptr, i32 } %131, i32 %126, 1
  resume { ptr, i32 } %132

133:                                              ; preds = %2, %123
  %134 = phi i32 [ %25, %123 ], [ 0, %2 ]
  ret i32 %134

135:                                              ; preds = %116, %111, %91
  %136 = landingpad { ptr, i32 }
          catch ptr null
  %137 = extractvalue { ptr, i32 } %136, 0
  call void @__clang_call_terminate(ptr %137) #27
  unreachable

138:                                              ; preds = %106
  unreachable
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK25SectionBasedConfiguration12unrollConfigB5cxx11EPKcb(ptr noalias sret(%"class.std::vector.31") align 8 %0, ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %2, i1 noundef zeroext %3) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> > >::_Alloc_node", align 8
  %7 = alloca %"class.std::vector.36", align 8
  %8 = alloca %"class.std::vector.41", align 8
  %9 = alloca %"class.std::map.20", align 8
  %10 = alloca %class.Scenario, align 8
  %11 = alloca %"class.std::__cxx11::basic_string", align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.std::__cxx11::basic_string", align 8
  %14 = alloca %"class.std::__cxx11::basic_string", align 8
  %15 = alloca %"class.std::__cxx11::basic_string", align 8
  %16 = alloca %"class.std::__cxx11::basic_string", align 8
  %17 = alloca %"class.std::__cxx11::basic_string", align 8
  %18 = alloca %"class.std::__cxx11::basic_string", align 8
  %19 = alloca %"class.std::__cxx11::basic_string", align 8
  %20 = alloca %"class.std::__cxx11::basic_string", align 8
  %21 = alloca %"class.std::__cxx11::basic_string", align 8
  %22 = alloca %"class.std::__cxx11::basic_string", align 8
  %23 = tail call noundef i32 @_ZNK25SectionBasedConfiguration17resolveConfigNameEPKc(ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %2)
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %32

25:                                               ; preds = %4
  %26 = tail call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %26, ptr noundef nonnull @.str.19, ptr noundef %2)
          to label %27 unwind label %28

27:                                               ; preds = %25
  tail call void @__cxa_throw(ptr nonnull %26, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
  unreachable

28:                                               ; preds = %25
  %29 = landingpad { ptr, i32 }
          cleanup
  %30 = extractvalue { ptr, i32 } %29, 0
  %31 = extractvalue { ptr, i32 } %29, 1
  tail call void @__cxa_free_exception(ptr %26) #28
  br label %821

32:                                               ; preds = %4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #28
  %33 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !25, !noalias !173
  %35 = load ptr, ptr %34, align 8, !tbaa !9, !noalias !173
  %36 = getelementptr inbounds ptr, ptr %35, i64 6
  %37 = load ptr, ptr %36, align 8, !noalias !173
  %38 = tail call noundef ptr %37(ptr noundef nonnull align 8 dereferenceable(8) %34, i32 noundef %23), !noalias !173
  call void @_ZNK25SectionBasedConfiguration19resolveSectionChainEPKc(ptr nonnull sret(%"class.std::vector.36") align 8 %7, ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %38)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #28
  invoke void @_ZNK25SectionBasedConfiguration25collectIterationVariablesERKSt6vectorIiSaIiEE(ptr nonnull sret(%"class.std::vector.41") align 8 %8, ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef nonnull align 8 dereferenceable(24) %7)
          to label %39 unwind label %118

39:                                               ; preds = %32
  %40 = load ptr, ptr @CFGID_CONSTRAINT, align 8, !tbaa !5
  %41 = load ptr, ptr %40, align 8, !tbaa !9
  %42 = getelementptr inbounds ptr, ptr %41, i64 6
  %43 = load ptr, ptr %42, align 8
  %44 = invoke noundef ptr %43(ptr noundef nonnull align 8 dereferenceable(20) %40)
          to label %45 unwind label %122

45:                                               ; preds = %39
  %46 = invoke noundef ptr @_ZNK25SectionBasedConfiguration16internalGetValueERKSt6vectorIiSaIiEEPKcS6_(ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef %44, ptr noundef null)
          to label %47 unwind label %122

47:                                               ; preds = %45
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %9) #28
  %48 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 11
  %49 = getelementptr inbounds i8, ptr %9, i64 8
  store i32 0, ptr %49, align 8, !tbaa !17
  %50 = getelementptr inbounds i8, ptr %9, i64 16
  store ptr null, ptr %50, align 8, !tbaa !21
  %51 = getelementptr inbounds i8, ptr %9, i64 24
  store ptr %49, ptr %51, align 8, !tbaa !22
  %52 = getelementptr inbounds i8, ptr %9, i64 32
  store ptr %49, ptr %52, align 8, !tbaa !23
  %53 = getelementptr inbounds i8, ptr %9, i64 40
  store i64 0, ptr %53, align 8, !tbaa !24
  %54 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 1
  %55 = load ptr, ptr %54, align 8, !tbaa !21
  %56 = icmp eq ptr %55, null
  br i1 %56, label %73, label %57

57:                                               ; preds = %47
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #28
  store ptr %9, ptr %6, align 8, !tbaa !5
  %58 = invoke noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %9, ptr noundef nonnull %55, ptr noundef nonnull %49, ptr noundef nonnull align 8 dereferenceable(8) %6)
          to label %59 unwind label %126

59:                                               ; preds = %57, %59
  %60 = phi ptr [ %62, %59 ], [ %58, %57 ]
  %61 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %60, i64 0, i32 2
  %62 = load ptr, ptr %61, align 8, !tbaa !176
  %63 = icmp eq ptr %62, null
  br i1 %63, label %64, label %59

64:                                               ; preds = %59
  store ptr %60, ptr %51, align 8, !tbaa !5
  br label %65

65:                                               ; preds = %65, %64
  %66 = phi ptr [ %58, %64 ], [ %68, %65 ]
  %67 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %66, i64 0, i32 3
  %68 = load ptr, ptr %67, align 8, !tbaa !177
  %69 = icmp eq ptr %68, null
  br i1 %69, label %70, label %65

70:                                               ; preds = %65
  store ptr %66, ptr %52, align 8, !tbaa !5
  %71 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 11, i32 0, i32 0, i32 1, i32 1
  %72 = load i64, ptr %71, align 8, !tbaa !24
  store i64 %72, ptr %53, align 8, !tbaa !24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #28
  store ptr %58, ptr %50, align 8, !tbaa !5
  br label %73

73:                                               ; preds = %70, %47
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %10) #28
  invoke void @_ZN8ScenarioC1ERKSt6vectorIN25SectionBasedConfiguration17IterationVariableESaIS2_EEPKc(ptr noundef nonnull align 8 dereferenceable(88) %10, ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef %46)
          to label %74 unwind label %130

74:                                               ; preds = %73
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %75 = invoke noundef zeroext i1 @_ZN8Scenario7restartEv(ptr noundef nonnull align 8 dereferenceable(88) %10)
          to label %76 unwind label %132

76:                                               ; preds = %74
  br i1 %75, label %77, label %636

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 2
  %79 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 1
  %80 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 1
  %82 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 2
  %83 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 1
  %84 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 1
  %85 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 2
  %86 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 1
  %87 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 2
  %88 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 1
  %89 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 2
  %90 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %91 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  %92 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %22, i64 0, i32 2
  %93 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %22, i64 0, i32 1
  %94 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %21, i64 0, i32 2
  %95 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %21, i64 0, i32 1
  %96 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %20, i64 0, i32 2
  %97 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %20, i64 0, i32 1
  %98 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %17, i64 0, i32 1
  %99 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 2
  %100 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 1
  %101 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %18, i64 0, i32 2
  %102 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %18, i64 0, i32 1
  %103 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %17, i64 0, i32 2
  %104 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %105 = getelementptr inbounds i8, ptr %15, i64 19
  %106 = getelementptr inbounds i8, ptr %22, i64 17
  br label %107

107:                                              ; preds = %77, %626
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %11) #28
  store ptr %78, ptr %11, align 8, !tbaa !11
  store i64 0, ptr %79, align 8, !tbaa !13
  store i8 0, ptr %78, align 8, !tbaa !16
  br i1 %3, label %146, label %108

108:                                              ; preds = %107
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #28
  invoke void @_ZNK8Scenario3strB5cxx11Ev(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %12, ptr noundef nonnull align 8 dereferenceable(88) %10)
          to label %109 unwind label %134

109:                                              ; preds = %108
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %11, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %110 unwind label %136

110:                                              ; preds = %109
  %111 = load ptr, ptr %12, align 8, !tbaa !63
  %112 = icmp eq ptr %111, %80
  br i1 %112, label %113, label %116

113:                                              ; preds = %110
  %114 = load i64, ptr %81, align 8, !tbaa !13
  %115 = icmp ult i64 %114, 16
  call void @llvm.assume(i1 %115)
  br label %117

116:                                              ; preds = %110
  call void @_ZdlPv(ptr noundef %111) #26
  br label %117

117:                                              ; preds = %116, %113
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #28
  br label %591

118:                                              ; preds = %32
  %119 = landingpad { ptr, i32 }
          cleanup
  %120 = extractvalue { ptr, i32 } %119, 0
  %121 = extractvalue { ptr, i32 } %119, 1
  br label %814

122:                                              ; preds = %45, %39
  %123 = landingpad { ptr, i32 }
          cleanup
  %124 = extractvalue { ptr, i32 } %123, 0
  %125 = extractvalue { ptr, i32 } %123, 1
  br label %753

126:                                              ; preds = %664, %57
  %127 = landingpad { ptr, i32 }
          cleanup
  %128 = extractvalue { ptr, i32 } %127, 0
  %129 = extractvalue { ptr, i32 } %127, 1
  br label %750

130:                                              ; preds = %638, %73
  %131 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %667

132:                                              ; preds = %636, %74
  %133 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %639

134:                                              ; preds = %108
  %135 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %144

136:                                              ; preds = %109
  %137 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  %138 = load ptr, ptr %12, align 8, !tbaa !63
  %139 = icmp eq ptr %138, %80
  br i1 %139, label %140, label %143

140:                                              ; preds = %136
  %141 = load i64, ptr %81, align 8, !tbaa !13
  %142 = icmp ult i64 %141, 16
  call void @llvm.assume(i1 %142)
  br label %144

143:                                              ; preds = %136
  call void @_ZdlPv(ptr noundef %138) #26
  br label %144

144:                                              ; preds = %143, %140, %134
  %145 = phi { ptr, i32 } [ %135, %134 ], [ %137, %140 ], [ %137, %143 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #28
  br label %627

146:                                              ; preds = %107
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %14) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #28
  store ptr %82, ptr %15, align 8, !tbaa !11
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %82, ptr noundef nonnull align 1 dereferenceable(3) @.str.47, i64 3, i1 false)
  store i64 3, ptr %83, align 8, !tbaa !13
  store i8 0, ptr %105, align 1, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %16) #28
  invoke void @_ZNK8Scenario3strB5cxx11Ev(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %16, ptr noundef nonnull align 8 dereferenceable(88) %10)
          to label %147 unwind label %263

147:                                              ; preds = %146
  call void @llvm.experimental.noalias.scope.decl(metadata !178)
  %148 = load ptr, ptr %15, align 8, !tbaa !63, !noalias !178
  %149 = load i64, ptr %83, align 8, !tbaa !13, !noalias !178
  %150 = load ptr, ptr %16, align 8, !tbaa !63, !noalias !178
  %151 = load i64, ptr %84, align 8, !tbaa !13, !noalias !178
  store ptr %85, ptr %14, align 8, !tbaa !11, !alias.scope !181
  store i64 0, ptr %86, align 8, !tbaa !13, !alias.scope !181
  store i8 0, ptr %85, align 8, !tbaa !16, !alias.scope !181
  %152 = add i64 %151, %149
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %14, i64 noundef %152)
          to label %153 unwind label %167

153:                                              ; preds = %147
  %154 = load i64, ptr %86, align 8, !tbaa !13, !alias.scope !181
  %155 = sub i64 4611686018427387903, %154
  %156 = icmp ult i64 %155, %149
  br i1 %156, label %163, label %157

157:                                              ; preds = %153
  %158 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %14, ptr noundef %148, i64 noundef %149)
          to label %159 unwind label %167

159:                                              ; preds = %157
  %160 = load i64, ptr %86, align 8, !tbaa !13, !alias.scope !181
  %161 = sub i64 4611686018427387903, %160
  %162 = icmp ult i64 %161, %151
  br i1 %162, label %163, label %165

163:                                              ; preds = %159, %153
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %164 unwind label %169

164:                                              ; preds = %163
  unreachable

165:                                              ; preds = %159
  %166 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %14, ptr noundef %150, i64 noundef %151)
          to label %179 unwind label %167

167:                                              ; preds = %147, %157, %165
  %168 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %171

169:                                              ; preds = %163
  %170 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %171

171:                                              ; preds = %169, %167
  %172 = phi { ptr, i32 } [ %168, %167 ], [ %170, %169 ]
  %173 = load ptr, ptr %14, align 8, !tbaa !63, !alias.scope !181
  %174 = icmp eq ptr %173, %85
  br i1 %174, label %175, label %178

175:                                              ; preds = %171
  %176 = load i64, ptr %86, align 8, !tbaa !13, !alias.scope !181
  %177 = icmp ult i64 %176, 16
  call void @llvm.assume(i1 %177)
  br label %285

178:                                              ; preds = %171
  call void @_ZdlPv(ptr noundef %173) #26
  br label %285

179:                                              ; preds = %165
  call void @llvm.experimental.noalias.scope.decl(metadata !184)
  %180 = load ptr, ptr %14, align 8, !tbaa !63, !noalias !184
  %181 = load i64, ptr %86, align 8, !tbaa !13, !noalias !184
  store ptr %87, ptr %13, align 8, !tbaa !11, !alias.scope !187
  store i64 0, ptr %88, align 8, !tbaa !13, !alias.scope !187
  store i8 0, ptr %87, align 8, !tbaa !16, !alias.scope !187
  %182 = add i64 %181, 1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %13, i64 noundef %182)
          to label %183 unwind label %196

183:                                              ; preds = %179
  %184 = load i64, ptr %88, align 8, !tbaa !13, !alias.scope !187
  %185 = sub i64 4611686018427387903, %184
  %186 = icmp ult i64 %185, %181
  br i1 %186, label %192, label %187

187:                                              ; preds = %183
  %188 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef %180, i64 noundef %181)
          to label %189 unwind label %196

189:                                              ; preds = %187
  %190 = load i64, ptr %88, align 8, !tbaa !13, !alias.scope !187
  %191 = icmp eq i64 %190, 4611686018427387903
  br i1 %191, label %192, label %194

192:                                              ; preds = %189, %183
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %193 unwind label %198

193:                                              ; preds = %192
  unreachable

194:                                              ; preds = %189
  %195 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull @.str.48, i64 noundef 1)
          to label %208 unwind label %196

196:                                              ; preds = %179, %187, %194
  %197 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %200

198:                                              ; preds = %192
  %199 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %200

200:                                              ; preds = %198, %196
  %201 = phi { ptr, i32 } [ %197, %196 ], [ %199, %198 ]
  %202 = load ptr, ptr %13, align 8, !tbaa !63, !alias.scope !187
  %203 = icmp eq ptr %202, %87
  br i1 %203, label %204, label %207

204:                                              ; preds = %200
  %205 = load i64, ptr %88, align 8, !tbaa !13, !alias.scope !187
  %206 = icmp ult i64 %205, 16
  call void @llvm.assume(i1 %206)
  br label %277

207:                                              ; preds = %200
  call void @_ZdlPv(ptr noundef %202) #26
  br label %277

208:                                              ; preds = %194
  %209 = load i64, ptr %88, align 8, !tbaa !13
  %210 = load i64, ptr %79, align 8, !tbaa !13
  %211 = sub i64 4611686018427387903, %210
  %212 = icmp ult i64 %211, %209
  br i1 %212, label %213, label %215

213:                                              ; preds = %208
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %214 unwind label %267

214:                                              ; preds = %213
  unreachable

215:                                              ; preds = %208
  %216 = load ptr, ptr %13, align 8, !tbaa !63
  %217 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %11, ptr noundef %216, i64 noundef %209)
          to label %218 unwind label %265

218:                                              ; preds = %215
  %219 = load ptr, ptr %13, align 8, !tbaa !63
  %220 = icmp eq ptr %219, %87
  br i1 %220, label %221, label %224

221:                                              ; preds = %218
  %222 = load i64, ptr %88, align 8, !tbaa !13
  %223 = icmp ult i64 %222, 16
  call void @llvm.assume(i1 %223)
  br label %225

224:                                              ; preds = %218
  call void @_ZdlPv(ptr noundef %219) #26
  br label %225

225:                                              ; preds = %224, %221
  %226 = load ptr, ptr %14, align 8, !tbaa !63
  %227 = icmp eq ptr %226, %85
  br i1 %227, label %228, label %231

228:                                              ; preds = %225
  %229 = load i64, ptr %86, align 8, !tbaa !13
  %230 = icmp ult i64 %229, 16
  call void @llvm.assume(i1 %230)
  br label %232

231:                                              ; preds = %225
  call void @_ZdlPv(ptr noundef %226) #26
  br label %232

232:                                              ; preds = %231, %228
  %233 = load ptr, ptr %16, align 8, !tbaa !63
  %234 = icmp eq ptr %233, %89
  br i1 %234, label %235, label %238

235:                                              ; preds = %232
  %236 = load i64, ptr %84, align 8, !tbaa !13
  %237 = icmp ult i64 %236, 16
  call void @llvm.assume(i1 %237)
  br label %239

238:                                              ; preds = %232
  call void @_ZdlPv(ptr noundef %233) #26
  br label %239

239:                                              ; preds = %238, %235
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #28
  %240 = load ptr, ptr %15, align 8, !tbaa !63
  %241 = icmp eq ptr %240, %82
  br i1 %241, label %242, label %245

242:                                              ; preds = %239
  %243 = load i64, ptr %83, align 8, !tbaa !13
  %244 = icmp ult i64 %243, 16
  call void @llvm.assume(i1 %244)
  br label %246

245:                                              ; preds = %239
  call void @_ZdlPv(ptr noundef %240) #26
  br label %246

246:                                              ; preds = %245, %242
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #28
  %247 = load ptr, ptr %90, align 8, !tbaa !90
  %248 = load ptr, ptr %0, align 8, !tbaa !91
  %249 = ptrtoint ptr %247 to i64
  %250 = ptrtoint ptr %248 to i64
  %251 = sub i64 %249, %250
  %252 = lshr exact i64 %251, 5
  %253 = trunc i64 %252 to i32
  invoke void @_ZN25SectionBasedConfiguration14setupVariablesEPKciP8ScenarioRKSt6vectorIiSaIiEE(ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %2, i32 noundef %253, ptr noundef nonnull %10, ptr noundef nonnull align 8 dereferenceable(24) %7)
          to label %254 unwind label %302

254:                                              ; preds = %246
  %255 = load ptr, ptr %91, align 8, !tbaa !103
  %256 = load ptr, ptr %7, align 8, !tbaa !95
  %257 = ptrtoint ptr %255 to i64
  %258 = ptrtoint ptr %256 to i64
  %259 = sub i64 %257, %258
  %260 = lshr exact i64 %259, 2
  %261 = trunc i64 %260 to i32
  %262 = icmp sgt i32 %261, 0
  br i1 %262, label %304, label %591

263:                                              ; preds = %146
  %264 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %293

265:                                              ; preds = %215
  %266 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %269

267:                                              ; preds = %213
  %268 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %269

269:                                              ; preds = %267, %265
  %270 = phi { ptr, i32 } [ %266, %265 ], [ %268, %267 ]
  %271 = load ptr, ptr %13, align 8, !tbaa !63
  %272 = icmp eq ptr %271, %87
  br i1 %272, label %273, label %276

273:                                              ; preds = %269
  %274 = load i64, ptr %88, align 8, !tbaa !13
  %275 = icmp ult i64 %274, 16
  call void @llvm.assume(i1 %275)
  br label %277

276:                                              ; preds = %269
  call void @_ZdlPv(ptr noundef %271) #26
  br label %277

277:                                              ; preds = %276, %273, %207, %204
  %278 = phi { ptr, i32 } [ %201, %207 ], [ %201, %204 ], [ %270, %273 ], [ %270, %276 ]
  %279 = load ptr, ptr %14, align 8, !tbaa !63
  %280 = icmp eq ptr %279, %85
  br i1 %280, label %281, label %284

281:                                              ; preds = %277
  %282 = load i64, ptr %86, align 8, !tbaa !13
  %283 = icmp ult i64 %282, 16
  call void @llvm.assume(i1 %283)
  br label %285

284:                                              ; preds = %277
  call void @_ZdlPv(ptr noundef %279) #26
  br label %285

285:                                              ; preds = %284, %281, %178, %175
  %286 = phi { ptr, i32 } [ %172, %178 ], [ %172, %175 ], [ %278, %281 ], [ %278, %284 ]
  %287 = load ptr, ptr %16, align 8, !tbaa !63
  %288 = icmp eq ptr %287, %89
  br i1 %288, label %289, label %292

289:                                              ; preds = %285
  %290 = load i64, ptr %84, align 8, !tbaa !13
  %291 = icmp ult i64 %290, 16
  call void @llvm.assume(i1 %291)
  br label %293

292:                                              ; preds = %285
  call void @_ZdlPv(ptr noundef %287) #26
  br label %293

293:                                              ; preds = %292, %289, %263
  %294 = phi { ptr, i32 } [ %264, %263 ], [ %286, %289 ], [ %286, %292 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #28
  %295 = load ptr, ptr %15, align 8, !tbaa !63
  %296 = icmp eq ptr %295, %82
  br i1 %296, label %297, label %300

297:                                              ; preds = %293
  %298 = load i64, ptr %83, align 8, !tbaa !13
  %299 = icmp ult i64 %298, 16
  call void @llvm.assume(i1 %299)
  br label %301

300:                                              ; preds = %293
  call void @_ZdlPv(ptr noundef %295) #26
  br label %301

301:                                              ; preds = %300, %297
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #28
  br label %627

302:                                              ; preds = %616, %600, %617, %246
  %303 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %627

304:                                              ; preds = %254, %318
  %305 = phi i64 [ %319, %318 ], [ 0, %254 ]
  %306 = phi ptr [ %321, %318 ], [ %256, %254 ]
  %307 = getelementptr inbounds i32, ptr %306, i64 %305
  %308 = load i32, ptr %307, align 4, !tbaa !104
  br label %309

309:                                              ; preds = %589, %304
  %310 = phi i32 [ 0, %304 ], [ %590, %589 ]
  %311 = load ptr, ptr %33, align 8, !tbaa !25
  %312 = load ptr, ptr %311, align 8, !tbaa !9
  %313 = getelementptr inbounds ptr, ptr %312, i64 7
  %314 = load ptr, ptr %313, align 8
  %315 = invoke noundef i32 %314(ptr noundef nonnull align 8 dereferenceable(8) %311, i32 noundef %308)
          to label %316 unwind label %328

316:                                              ; preds = %309
  %317 = icmp slt i32 %310, %315
  br i1 %317, label %330, label %318

318:                                              ; preds = %316
  %319 = add nuw nsw i64 %305, 1
  %320 = load ptr, ptr %91, align 8, !tbaa !103
  %321 = load ptr, ptr %7, align 8, !tbaa !95
  %322 = ptrtoint ptr %320 to i64
  %323 = ptrtoint ptr %321 to i64
  %324 = sub i64 %322, %323
  %325 = shl i64 %324, 30
  %326 = ashr i64 %325, 32
  %327 = icmp slt i64 %319, %326
  br i1 %327, label %304, label %591

328:                                              ; preds = %309
  %329 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %627

330:                                              ; preds = %316
  %331 = load ptr, ptr %33, align 8, !tbaa !25
  %332 = load ptr, ptr %331, align 8, !tbaa !9
  %333 = getelementptr inbounds ptr, ptr %332, i64 8
  %334 = load ptr, ptr %333, align 8
  %335 = invoke noundef nonnull align 8 dereferenceable(8) ptr %334(ptr noundef nonnull align 8 dereferenceable(8) %331, i32 noundef %308, i32 noundef %310)
          to label %336 unwind label %530

336:                                              ; preds = %330
  %337 = load ptr, ptr %335, align 8, !tbaa !9
  %338 = getelementptr inbounds ptr, ptr %337, i64 3
  %339 = load ptr, ptr %338, align 8
  %340 = invoke noundef ptr %339(ptr noundef nonnull align 8 dereferenceable(8) %335)
          to label %341 unwind label %530

341:                                              ; preds = %336
  %342 = call noundef ptr @strstr(ptr noundef nonnull dereferenceable(1) %340, ptr noundef nonnull dereferenceable(1) @.str.49) #29
  %343 = icmp eq ptr %342, null
  br i1 %343, label %589, label %344

344:                                              ; preds = %341
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %17) #28
  %345 = load ptr, ptr %335, align 8, !tbaa !9
  %346 = getelementptr inbounds ptr, ptr %345, i64 3
  %347 = load ptr, ptr %346, align 8
  %348 = invoke noundef ptr %347(ptr noundef nonnull align 8 dereferenceable(8) %335)
          to label %349 unwind label %532

349:                                              ; preds = %344
  invoke void @_ZNK25SectionBasedConfiguration19substituteVariablesB5cxx11EPKcii(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %17, ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %348, i32 noundef %308, i32 noundef %310)
          to label %350 unwind label %532

350:                                              ; preds = %349
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %18) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %19) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %20) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %21) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %22) #28
  store ptr %92, ptr %22, align 8, !tbaa !11
  store i8 9, ptr %92, align 8, !tbaa !16
  store i64 1, ptr %93, align 8, !tbaa !13
  store i8 0, ptr %106, align 1, !tbaa !16
  %351 = load ptr, ptr %335, align 8, !tbaa !9
  %352 = getelementptr inbounds ptr, ptr %351, i64 2
  %353 = load ptr, ptr %352, align 8
  %354 = invoke noundef ptr %353(ptr noundef nonnull align 8 dereferenceable(8) %335)
          to label %355 unwind label %534

355:                                              ; preds = %350
  call void @llvm.experimental.noalias.scope.decl(metadata !190)
  %356 = load ptr, ptr %22, align 8, !tbaa !63, !noalias !190
  %357 = load i64, ptr %93, align 8, !tbaa !13, !noalias !190
  %358 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %354) #28, !noalias !190
  store ptr %94, ptr %21, align 8, !tbaa !11, !alias.scope !193
  store i64 0, ptr %95, align 8, !tbaa !13, !alias.scope !193
  store i8 0, ptr %94, align 8, !tbaa !16, !alias.scope !193
  %359 = add i64 %358, %357
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %21, i64 noundef %359)
          to label %360 unwind label %374

360:                                              ; preds = %355
  %361 = load i64, ptr %95, align 8, !tbaa !13, !alias.scope !193
  %362 = sub i64 4611686018427387903, %361
  %363 = icmp ult i64 %362, %357
  br i1 %363, label %370, label %364

364:                                              ; preds = %360
  %365 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %21, ptr noundef %356, i64 noundef %357)
          to label %366 unwind label %374

366:                                              ; preds = %364
  %367 = load i64, ptr %95, align 8, !tbaa !13, !alias.scope !193
  %368 = sub i64 4611686018427387903, %367
  %369 = icmp ult i64 %368, %358
  br i1 %369, label %370, label %372

370:                                              ; preds = %366, %360
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %371 unwind label %376

371:                                              ; preds = %370
  unreachable

372:                                              ; preds = %366
  %373 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %21, ptr noundef %354, i64 noundef %358)
          to label %386 unwind label %374

374:                                              ; preds = %355, %364, %372
  %375 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %378

376:                                              ; preds = %370
  %377 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %378

378:                                              ; preds = %376, %374
  %379 = phi { ptr, i32 } [ %375, %374 ], [ %377, %376 ]
  %380 = load ptr, ptr %21, align 8, !tbaa !63, !alias.scope !193
  %381 = icmp eq ptr %380, %94
  br i1 %381, label %382, label %385

382:                                              ; preds = %378
  %383 = load i64, ptr %95, align 8, !tbaa !13, !alias.scope !193
  %384 = icmp ult i64 %383, 16
  call void @llvm.assume(i1 %384)
  br label %572

385:                                              ; preds = %378
  call void @_ZdlPv(ptr noundef %380) #26
  br label %572

386:                                              ; preds = %372
  call void @llvm.experimental.noalias.scope.decl(metadata !196)
  %387 = load ptr, ptr %21, align 8, !tbaa !63, !noalias !196
  %388 = load i64, ptr %95, align 8, !tbaa !13, !noalias !196
  store ptr %96, ptr %20, align 8, !tbaa !11, !alias.scope !199
  store i64 0, ptr %97, align 8, !tbaa !13, !alias.scope !199
  store i8 0, ptr %96, align 8, !tbaa !16, !alias.scope !199
  %389 = add i64 %388, 3
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %20, i64 noundef %389)
          to label %390 unwind label %404

390:                                              ; preds = %386
  %391 = load i64, ptr %97, align 8, !tbaa !13, !alias.scope !199
  %392 = sub i64 4611686018427387903, %391
  %393 = icmp ult i64 %392, %388
  br i1 %393, label %400, label %394

394:                                              ; preds = %390
  %395 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %20, ptr noundef %387, i64 noundef %388)
          to label %396 unwind label %404

396:                                              ; preds = %394
  %397 = load i64, ptr %97, align 8, !tbaa !13, !alias.scope !199
  %398 = add i64 %397, -4611686018427387901
  %399 = icmp ult i64 %398, 3
  br i1 %399, label %400, label %402

400:                                              ; preds = %396, %390
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %401 unwind label %406

401:                                              ; preds = %400
  unreachable

402:                                              ; preds = %396
  %403 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %20, ptr noundef nonnull @.str.51, i64 noundef 3)
          to label %416 unwind label %404

404:                                              ; preds = %386, %394, %402
  %405 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %408

406:                                              ; preds = %400
  %407 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %408

408:                                              ; preds = %406, %404
  %409 = phi { ptr, i32 } [ %405, %404 ], [ %407, %406 ]
  %410 = load ptr, ptr %20, align 8, !tbaa !63, !alias.scope !199
  %411 = icmp eq ptr %410, %96
  br i1 %411, label %412, label %415

412:                                              ; preds = %408
  %413 = load i64, ptr %97, align 8, !tbaa !13, !alias.scope !199
  %414 = icmp ult i64 %413, 16
  call void @llvm.assume(i1 %414)
  br label %564

415:                                              ; preds = %408
  call void @_ZdlPv(ptr noundef %410) #26
  br label %564

416:                                              ; preds = %402
  call void @llvm.experimental.noalias.scope.decl(metadata !202)
  %417 = load ptr, ptr %20, align 8, !tbaa !63, !noalias !202
  %418 = load i64, ptr %97, align 8, !tbaa !13, !noalias !202
  %419 = load ptr, ptr %17, align 8, !tbaa !63, !noalias !202
  %420 = load i64, ptr %98, align 8, !tbaa !13, !noalias !202
  store ptr %99, ptr %19, align 8, !tbaa !11, !alias.scope !205
  store i64 0, ptr %100, align 8, !tbaa !13, !alias.scope !205
  store i8 0, ptr %99, align 8, !tbaa !16, !alias.scope !205
  %421 = add i64 %420, %418
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %19, i64 noundef %421)
          to label %422 unwind label %436

422:                                              ; preds = %416
  %423 = load i64, ptr %100, align 8, !tbaa !13, !alias.scope !205
  %424 = sub i64 4611686018427387903, %423
  %425 = icmp ult i64 %424, %418
  br i1 %425, label %432, label %426

426:                                              ; preds = %422
  %427 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %19, ptr noundef %417, i64 noundef %418)
          to label %428 unwind label %436

428:                                              ; preds = %426
  %429 = load i64, ptr %100, align 8, !tbaa !13, !alias.scope !205
  %430 = sub i64 4611686018427387903, %429
  %431 = icmp ult i64 %430, %420
  br i1 %431, label %432, label %434

432:                                              ; preds = %428, %422
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %433 unwind label %438

433:                                              ; preds = %432
  unreachable

434:                                              ; preds = %428
  %435 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %19, ptr noundef %419, i64 noundef %420)
          to label %448 unwind label %436

436:                                              ; preds = %416, %426, %434
  %437 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %440

438:                                              ; preds = %432
  %439 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %440

440:                                              ; preds = %438, %436
  %441 = phi { ptr, i32 } [ %437, %436 ], [ %439, %438 ]
  %442 = load ptr, ptr %19, align 8, !tbaa !63, !alias.scope !205
  %443 = icmp eq ptr %442, %99
  br i1 %443, label %444, label %447

444:                                              ; preds = %440
  %445 = load i64, ptr %100, align 8, !tbaa !13, !alias.scope !205
  %446 = icmp ult i64 %445, 16
  call void @llvm.assume(i1 %446)
  br label %556

447:                                              ; preds = %440
  call void @_ZdlPv(ptr noundef %442) #26
  br label %556

448:                                              ; preds = %434
  call void @llvm.experimental.noalias.scope.decl(metadata !208)
  %449 = load ptr, ptr %19, align 8, !tbaa !63, !noalias !208
  %450 = load i64, ptr %100, align 8, !tbaa !13, !noalias !208
  store ptr %101, ptr %18, align 8, !tbaa !11, !alias.scope !211
  store i64 0, ptr %102, align 8, !tbaa !13, !alias.scope !211
  store i8 0, ptr %101, align 8, !tbaa !16, !alias.scope !211
  %451 = add i64 %450, 1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %18, i64 noundef %451)
          to label %452 unwind label %465

452:                                              ; preds = %448
  %453 = load i64, ptr %102, align 8, !tbaa !13, !alias.scope !211
  %454 = sub i64 4611686018427387903, %453
  %455 = icmp ult i64 %454, %450
  br i1 %455, label %461, label %456

456:                                              ; preds = %452
  %457 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %18, ptr noundef %449, i64 noundef %450)
          to label %458 unwind label %465

458:                                              ; preds = %456
  %459 = load i64, ptr %102, align 8, !tbaa !13, !alias.scope !211
  %460 = icmp eq i64 %459, 4611686018427387903
  br i1 %460, label %461, label %463

461:                                              ; preds = %458, %452
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %462 unwind label %467

462:                                              ; preds = %461
  unreachable

463:                                              ; preds = %458
  %464 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %18, ptr noundef nonnull @.str.48, i64 noundef 1)
          to label %477 unwind label %465

465:                                              ; preds = %448, %456, %463
  %466 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %469

467:                                              ; preds = %461
  %468 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %469

469:                                              ; preds = %467, %465
  %470 = phi { ptr, i32 } [ %466, %465 ], [ %468, %467 ]
  %471 = load ptr, ptr %18, align 8, !tbaa !63, !alias.scope !211
  %472 = icmp eq ptr %471, %101
  br i1 %472, label %473, label %476

473:                                              ; preds = %469
  %474 = load i64, ptr %102, align 8, !tbaa !13, !alias.scope !211
  %475 = icmp ult i64 %474, 16
  call void @llvm.assume(i1 %475)
  br label %548

476:                                              ; preds = %469
  call void @_ZdlPv(ptr noundef %471) #26
  br label %548

477:                                              ; preds = %463
  %478 = load i64, ptr %102, align 8, !tbaa !13
  %479 = load i64, ptr %79, align 8, !tbaa !13
  %480 = sub i64 4611686018427387903, %479
  %481 = icmp ult i64 %480, %478
  br i1 %481, label %482, label %484

482:                                              ; preds = %477
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %483 unwind label %538

483:                                              ; preds = %482
  unreachable

484:                                              ; preds = %477
  %485 = load ptr, ptr %18, align 8, !tbaa !63
  %486 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %11, ptr noundef %485, i64 noundef %478)
          to label %487 unwind label %536

487:                                              ; preds = %484
  %488 = load ptr, ptr %18, align 8, !tbaa !63
  %489 = icmp eq ptr %488, %101
  br i1 %489, label %490, label %493

490:                                              ; preds = %487
  %491 = load i64, ptr %102, align 8, !tbaa !13
  %492 = icmp ult i64 %491, 16
  call void @llvm.assume(i1 %492)
  br label %494

493:                                              ; preds = %487
  call void @_ZdlPv(ptr noundef %488) #26
  br label %494

494:                                              ; preds = %493, %490
  %495 = load ptr, ptr %19, align 8, !tbaa !63
  %496 = icmp eq ptr %495, %99
  br i1 %496, label %497, label %500

497:                                              ; preds = %494
  %498 = load i64, ptr %100, align 8, !tbaa !13
  %499 = icmp ult i64 %498, 16
  call void @llvm.assume(i1 %499)
  br label %501

500:                                              ; preds = %494
  call void @_ZdlPv(ptr noundef %495) #26
  br label %501

501:                                              ; preds = %500, %497
  %502 = load ptr, ptr %20, align 8, !tbaa !63
  %503 = icmp eq ptr %502, %96
  br i1 %503, label %504, label %507

504:                                              ; preds = %501
  %505 = load i64, ptr %97, align 8, !tbaa !13
  %506 = icmp ult i64 %505, 16
  call void @llvm.assume(i1 %506)
  br label %508

507:                                              ; preds = %501
  call void @_ZdlPv(ptr noundef %502) #26
  br label %508

508:                                              ; preds = %507, %504
  %509 = load ptr, ptr %21, align 8, !tbaa !63
  %510 = icmp eq ptr %509, %94
  br i1 %510, label %511, label %514

511:                                              ; preds = %508
  %512 = load i64, ptr %95, align 8, !tbaa !13
  %513 = icmp ult i64 %512, 16
  call void @llvm.assume(i1 %513)
  br label %515

514:                                              ; preds = %508
  call void @_ZdlPv(ptr noundef %509) #26
  br label %515

515:                                              ; preds = %514, %511
  %516 = load ptr, ptr %22, align 8, !tbaa !63
  %517 = icmp eq ptr %516, %92
  br i1 %517, label %518, label %521

518:                                              ; preds = %515
  %519 = load i64, ptr %93, align 8, !tbaa !13
  %520 = icmp ult i64 %519, 16
  call void @llvm.assume(i1 %520)
  br label %522

521:                                              ; preds = %515
  call void @_ZdlPv(ptr noundef %516) #26
  br label %522

522:                                              ; preds = %521, %518
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %22) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %21) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %20) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %19) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18) #28
  %523 = load ptr, ptr %17, align 8, !tbaa !63
  %524 = icmp eq ptr %523, %103
  br i1 %524, label %525, label %528

525:                                              ; preds = %522
  %526 = load i64, ptr %98, align 8, !tbaa !13
  %527 = icmp ult i64 %526, 16
  call void @llvm.assume(i1 %527)
  br label %529

528:                                              ; preds = %522
  call void @_ZdlPv(ptr noundef %523) #26
  br label %529

529:                                              ; preds = %528, %525
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %17) #28
  br label %589

530:                                              ; preds = %336, %330
  %531 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %627

532:                                              ; preds = %349, %344
  %533 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %587

534:                                              ; preds = %350
  %535 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %572

536:                                              ; preds = %484
  %537 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %540

538:                                              ; preds = %482
  %539 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTISt9exception
  br label %540

540:                                              ; preds = %538, %536
  %541 = phi { ptr, i32 } [ %537, %536 ], [ %539, %538 ]
  %542 = load ptr, ptr %18, align 8, !tbaa !63
  %543 = icmp eq ptr %542, %101
  br i1 %543, label %544, label %547

544:                                              ; preds = %540
  %545 = load i64, ptr %102, align 8, !tbaa !13
  %546 = icmp ult i64 %545, 16
  call void @llvm.assume(i1 %546)
  br label %548

547:                                              ; preds = %540
  call void @_ZdlPv(ptr noundef %542) #26
  br label %548

548:                                              ; preds = %547, %544, %476, %473
  %549 = phi { ptr, i32 } [ %470, %476 ], [ %470, %473 ], [ %541, %544 ], [ %541, %547 ]
  %550 = load ptr, ptr %19, align 8, !tbaa !63
  %551 = icmp eq ptr %550, %99
  br i1 %551, label %552, label %555

552:                                              ; preds = %548
  %553 = load i64, ptr %100, align 8, !tbaa !13
  %554 = icmp ult i64 %553, 16
  call void @llvm.assume(i1 %554)
  br label %556

555:                                              ; preds = %548
  call void @_ZdlPv(ptr noundef %550) #26
  br label %556

556:                                              ; preds = %555, %552, %447, %444
  %557 = phi { ptr, i32 } [ %441, %447 ], [ %441, %444 ], [ %549, %552 ], [ %549, %555 ]
  %558 = load ptr, ptr %20, align 8, !tbaa !63
  %559 = icmp eq ptr %558, %96
  br i1 %559, label %560, label %563

560:                                              ; preds = %556
  %561 = load i64, ptr %97, align 8, !tbaa !13
  %562 = icmp ult i64 %561, 16
  call void @llvm.assume(i1 %562)
  br label %564

563:                                              ; preds = %556
  call void @_ZdlPv(ptr noundef %558) #26
  br label %564

564:                                              ; preds = %563, %560, %415, %412
  %565 = phi { ptr, i32 } [ %409, %415 ], [ %409, %412 ], [ %557, %560 ], [ %557, %563 ]
  %566 = load ptr, ptr %21, align 8, !tbaa !63
  %567 = icmp eq ptr %566, %94
  br i1 %567, label %568, label %571

568:                                              ; preds = %564
  %569 = load i64, ptr %95, align 8, !tbaa !13
  %570 = icmp ult i64 %569, 16
  call void @llvm.assume(i1 %570)
  br label %572

571:                                              ; preds = %564
  call void @_ZdlPv(ptr noundef %566) #26
  br label %572

572:                                              ; preds = %571, %568, %534, %385, %382
  %573 = phi { ptr, i32 } [ %535, %534 ], [ %379, %385 ], [ %379, %382 ], [ %565, %568 ], [ %565, %571 ]
  %574 = load ptr, ptr %22, align 8, !tbaa !63
  %575 = icmp eq ptr %574, %92
  br i1 %575, label %576, label %579

576:                                              ; preds = %572
  %577 = load i64, ptr %93, align 8, !tbaa !13
  %578 = icmp ult i64 %577, 16
  call void @llvm.assume(i1 %578)
  br label %580

579:                                              ; preds = %572
  call void @_ZdlPv(ptr noundef %574) #26
  br label %580

580:                                              ; preds = %579, %576
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %22) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %21) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %20) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %19) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18) #28
  %581 = load ptr, ptr %17, align 8, !tbaa !63
  %582 = icmp eq ptr %581, %103
  br i1 %582, label %583, label %586

583:                                              ; preds = %580
  %584 = load i64, ptr %98, align 8, !tbaa !13
  %585 = icmp ult i64 %584, 16
  call void @llvm.assume(i1 %585)
  br label %587

586:                                              ; preds = %580
  call void @_ZdlPv(ptr noundef %581) #26
  br label %587

587:                                              ; preds = %586, %583, %532
  %588 = phi { ptr, i32 } [ %533, %532 ], [ %573, %583 ], [ %573, %586 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %17) #28
  br label %627

589:                                              ; preds = %529, %341
  %590 = add nuw nsw i32 %310, 1
  br label %309

591:                                              ; preds = %318, %254, %117
  %592 = load ptr, ptr %90, align 8, !tbaa !5
  %593 = load ptr, ptr %104, align 8, !tbaa !88
  %594 = icmp eq ptr %592, %593
  br i1 %594, label %616, label %595

595:                                              ; preds = %591
  %596 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %592, i64 0, i32 2
  store ptr %596, ptr %592, align 8, !tbaa !11
  %597 = load ptr, ptr %11, align 8, !tbaa !63
  %598 = load i64, ptr %79, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #28
  store i64 %598, ptr %5, align 8, !tbaa !87
  %599 = icmp ugt i64 %598, 15
  br i1 %599, label %600, label %604

600:                                              ; preds = %595
  %601 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %592, ptr noundef nonnull align 8 dereferenceable(8) %5, i64 noundef 0)
          to label %602 unwind label %302

602:                                              ; preds = %600
  store ptr %601, ptr %592, align 8, !tbaa !63
  %603 = load i64, ptr %5, align 8, !tbaa !87
  store i64 %603, ptr %596, align 8, !tbaa !16
  br label %604

604:                                              ; preds = %602, %595
  %605 = phi ptr [ %601, %602 ], [ %596, %595 ]
  switch i64 %598, label %608 [
    i64 1, label %606
    i64 0, label %609
  ]

606:                                              ; preds = %604
  %607 = load i8, ptr %597, align 1, !tbaa !16
  store i8 %607, ptr %605, align 1, !tbaa !16
  br label %609

608:                                              ; preds = %604
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %605, ptr align 1 %597, i64 %598, i1 false)
  br label %609

609:                                              ; preds = %608, %606, %604
  %610 = load i64, ptr %5, align 8, !tbaa !87
  %611 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %592, i64 0, i32 1
  store i64 %610, ptr %611, align 8, !tbaa !13
  %612 = load ptr, ptr %592, align 8, !tbaa !63
  %613 = getelementptr inbounds i8, ptr %612, i64 %610
  store i8 0, ptr %613, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #28
  %614 = load ptr, ptr %90, align 8, !tbaa !90
  %615 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %614, i64 1
  store ptr %615, ptr %90, align 8, !tbaa !90
  br label %617

616:                                              ; preds = %591
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %592, ptr noundef nonnull align 8 dereferenceable(32) %11)
          to label %617 unwind label %302

617:                                              ; preds = %609, %616
  %618 = invoke noundef zeroext i1 @_ZN8Scenario4nextEv(ptr noundef nonnull align 8 dereferenceable(88) %10)
          to label %619 unwind label %302

619:                                              ; preds = %617
  %620 = load ptr, ptr %11, align 8, !tbaa !63
  %621 = icmp eq ptr %620, %78
  br i1 %621, label %622, label %625

622:                                              ; preds = %619
  %623 = load i64, ptr %79, align 8, !tbaa !13
  %624 = icmp ult i64 %623, 16
  call void @llvm.assume(i1 %624)
  br label %626

625:                                              ; preds = %619
  call void @_ZdlPv(ptr noundef %620) #26
  br label %626

626:                                              ; preds = %625, %622
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #28
  br i1 %618, label %107, label %636

627:                                              ; preds = %328, %587, %530, %302, %301, %144
  %628 = phi { ptr, i32 } [ %303, %302 ], [ %294, %301 ], [ %145, %144 ], [ %329, %328 ], [ %588, %587 ], [ %531, %530 ]
  %629 = load ptr, ptr %11, align 8, !tbaa !63
  %630 = icmp eq ptr %629, %78
  br i1 %630, label %631, label %634

631:                                              ; preds = %627
  %632 = load i64, ptr %79, align 8, !tbaa !13
  %633 = icmp ult i64 %632, 16
  call void @llvm.assume(i1 %633)
  br label %635

634:                                              ; preds = %627
  call void @_ZdlPv(ptr noundef %629) #26
  br label %635

635:                                              ; preds = %634, %631
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #28
  br label %639

636:                                              ; preds = %626, %76
  %637 = invoke noundef nonnull align 8 dereferenceable(48) ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_(ptr noundef nonnull align 8 dereferenceable(48) %48, ptr noundef nonnull align 8 dereferenceable(48) %9)
          to label %638 unwind label %132

638:                                              ; preds = %636
  invoke void @_ZN8ScenarioD1Ev(ptr noundef nonnull align 8 dereferenceable(88) %10)
          to label %664 unwind label %130

639:                                              ; preds = %635, %132
  %640 = phi { ptr, i32 } [ %628, %635 ], [ %133, %132 ]
  %641 = load ptr, ptr %0, align 8, !tbaa !91
  %642 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %643 = load ptr, ptr %642, align 8, !tbaa !90
  %644 = icmp eq ptr %641, %643
  br i1 %644, label %660, label %645

645:                                              ; preds = %639, %655
  %646 = phi ptr [ %656, %655 ], [ %641, %639 ]
  %647 = load ptr, ptr %646, align 8, !tbaa !63
  %648 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %646, i64 0, i32 2
  %649 = icmp eq ptr %647, %648
  br i1 %649, label %650, label %654

650:                                              ; preds = %645
  %651 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %646, i64 0, i32 1
  %652 = load i64, ptr %651, align 8, !tbaa !13
  %653 = icmp ult i64 %652, 16
  call void @llvm.assume(i1 %653)
  br label %655

654:                                              ; preds = %645
  call void @_ZdlPv(ptr noundef %647) #26
  br label %655

655:                                              ; preds = %654, %650
  %656 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %646, i64 1
  %657 = icmp eq ptr %656, %643
  br i1 %657, label %658, label %645

658:                                              ; preds = %655
  %659 = load ptr, ptr %0, align 8, !tbaa !91
  br label %660

660:                                              ; preds = %658, %639
  %661 = phi ptr [ %659, %658 ], [ %641, %639 ]
  %662 = icmp eq ptr %661, null
  br i1 %662, label %666, label %663

663:                                              ; preds = %660
  call void @_ZdlPv(ptr noundef nonnull %661) #26
  br label %666

664:                                              ; preds = %638
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %10) #28
  %665 = load ptr, ptr %50, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %9, ptr noundef %665)
          to label %692 unwind label %126

666:                                              ; preds = %663, %660
  invoke void @_ZN8ScenarioD1Ev(ptr noundef nonnull align 8 dereferenceable(88) %10)
          to label %667 unwind label %826

667:                                              ; preds = %666, %130
  %668 = phi { ptr, i32 } [ %640, %666 ], [ %131, %130 ]
  %669 = extractvalue { ptr, i32 } %668, 0
  %670 = extractvalue { ptr, i32 } %668, 1
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %10) #28
  %671 = call i32 @llvm.eh.typeid.for(ptr nonnull @_ZTISt9exception) #28
  %672 = icmp eq i32 %670, %671
  br i1 %672, label %673, label %746

673:                                              ; preds = %667
  %674 = call ptr @__cxa_begin_catch(ptr %669) #28
  %675 = invoke noundef nonnull align 8 dereferenceable(48) ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_(ptr noundef nonnull align 8 dereferenceable(48) %48, ptr noundef nonnull align 8 dereferenceable(48) %9)
          to label %676 unwind label %683

676:                                              ; preds = %673
  %677 = call ptr @__cxa_allocate_exception(i64 128) #28
  %678 = load ptr, ptr %674, align 8, !tbaa !9
  %679 = getelementptr inbounds ptr, ptr %678, i64 2
  %680 = load ptr, ptr %679, align 8
  %681 = call noundef ptr %680(ptr noundef nonnull align 8 dereferenceable(8) %674) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %677, ptr noundef nonnull @.str.22, ptr noundef %681)
          to label %682 unwind label %685

682:                                              ; preds = %676
  invoke void @__cxa_throw(ptr nonnull %677, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %829 unwind label %683

683:                                              ; preds = %673, %682
  %684 = landingpad { ptr, i32 }
          cleanup
  br label %687

685:                                              ; preds = %676
  %686 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %677) #28
  br label %687

687:                                              ; preds = %685, %683
  %688 = phi { ptr, i32 } [ %684, %683 ], [ %686, %685 ]
  invoke void @__cxa_end_catch()
          to label %689 unwind label %826

689:                                              ; preds = %687
  %690 = extractvalue { ptr, i32 } %688, 0
  %691 = extractvalue { ptr, i32 } %688, 1
  br label %746

692:                                              ; preds = %664
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %9) #28
  %693 = load ptr, ptr %8, align 8, !tbaa !108
  %694 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  %695 = load ptr, ptr %694, align 8, !tbaa !110
  %696 = icmp eq ptr %693, %695
  br i1 %696, label %742, label %697

697:                                              ; preds = %692, %737
  %698 = phi ptr [ %738, %737 ], [ %693, %692 ]
  %699 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %698, i64 0, i32 3
  %700 = load ptr, ptr %699, align 8, !tbaa !63
  %701 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %698, i64 0, i32 3, i32 2
  %702 = icmp eq ptr %700, %701
  br i1 %702, label %703, label %707

703:                                              ; preds = %697
  %704 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %698, i64 0, i32 3, i32 1
  %705 = load i64, ptr %704, align 8, !tbaa !13
  %706 = icmp ult i64 %705, 16
  call void @llvm.assume(i1 %706)
  br label %708

707:                                              ; preds = %697
  call void @_ZdlPv(ptr noundef %700) #26
  br label %708

708:                                              ; preds = %707, %703
  %709 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %698, i64 0, i32 2
  %710 = load ptr, ptr %709, align 8, !tbaa !63
  %711 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %698, i64 0, i32 2, i32 2
  %712 = icmp eq ptr %710, %711
  br i1 %712, label %713, label %717

713:                                              ; preds = %708
  %714 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %698, i64 0, i32 2, i32 1
  %715 = load i64, ptr %714, align 8, !tbaa !13
  %716 = icmp ult i64 %715, 16
  call void @llvm.assume(i1 %716)
  br label %718

717:                                              ; preds = %708
  call void @_ZdlPv(ptr noundef %710) #26
  br label %718

718:                                              ; preds = %717, %713
  %719 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %698, i64 0, i32 1
  %720 = load ptr, ptr %719, align 8, !tbaa !63
  %721 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %698, i64 0, i32 1, i32 2
  %722 = icmp eq ptr %720, %721
  br i1 %722, label %723, label %727

723:                                              ; preds = %718
  %724 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %698, i64 0, i32 1, i32 1
  %725 = load i64, ptr %724, align 8, !tbaa !13
  %726 = icmp ult i64 %725, 16
  call void @llvm.assume(i1 %726)
  br label %728

727:                                              ; preds = %718
  call void @_ZdlPv(ptr noundef %720) #26
  br label %728

728:                                              ; preds = %727, %723
  %729 = load ptr, ptr %698, align 8, !tbaa !63
  %730 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %698, i64 0, i32 2
  %731 = icmp eq ptr %729, %730
  br i1 %731, label %732, label %736

732:                                              ; preds = %728
  %733 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %698, i64 0, i32 1
  %734 = load i64, ptr %733, align 8, !tbaa !13
  %735 = icmp ult i64 %734, 16
  call void @llvm.assume(i1 %735)
  br label %737

736:                                              ; preds = %728
  call void @_ZdlPv(ptr noundef %729) #26
  br label %737

737:                                              ; preds = %736, %732
  %738 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %698, i64 1
  %739 = icmp eq ptr %738, %695
  br i1 %739, label %740, label %697

740:                                              ; preds = %737
  %741 = load ptr, ptr %8, align 8, !tbaa !108
  br label %742

742:                                              ; preds = %740, %692
  %743 = phi ptr [ %741, %740 ], [ %693, %692 ]
  %744 = icmp eq ptr %743, null
  br i1 %744, label %809, label %745

745:                                              ; preds = %742
  call void @_ZdlPv(ptr noundef nonnull %743) #26
  br label %809

746:                                              ; preds = %689, %667
  %747 = phi i32 [ %691, %689 ], [ %670, %667 ]
  %748 = phi ptr [ %690, %689 ], [ %669, %667 ]
  %749 = load ptr, ptr %50, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %9, ptr noundef %749)
          to label %750 unwind label %826

750:                                              ; preds = %746, %126
  %751 = phi i32 [ %129, %126 ], [ %747, %746 ]
  %752 = phi ptr [ %128, %126 ], [ %748, %746 ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %9) #28
  br label %753

753:                                              ; preds = %750, %122
  %754 = phi i32 [ %751, %750 ], [ %125, %122 ]
  %755 = phi ptr [ %752, %750 ], [ %124, %122 ]
  %756 = load ptr, ptr %8, align 8, !tbaa !108
  %757 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  %758 = load ptr, ptr %757, align 8, !tbaa !110
  %759 = icmp eq ptr %756, %758
  br i1 %759, label %805, label %760

760:                                              ; preds = %753, %800
  %761 = phi ptr [ %801, %800 ], [ %756, %753 ]
  %762 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %761, i64 0, i32 3
  %763 = load ptr, ptr %762, align 8, !tbaa !63
  %764 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %761, i64 0, i32 3, i32 2
  %765 = icmp eq ptr %763, %764
  br i1 %765, label %766, label %770

766:                                              ; preds = %760
  %767 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %761, i64 0, i32 3, i32 1
  %768 = load i64, ptr %767, align 8, !tbaa !13
  %769 = icmp ult i64 %768, 16
  call void @llvm.assume(i1 %769)
  br label %771

770:                                              ; preds = %760
  call void @_ZdlPv(ptr noundef %763) #26
  br label %771

771:                                              ; preds = %770, %766
  %772 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %761, i64 0, i32 2
  %773 = load ptr, ptr %772, align 8, !tbaa !63
  %774 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %761, i64 0, i32 2, i32 2
  %775 = icmp eq ptr %773, %774
  br i1 %775, label %776, label %780

776:                                              ; preds = %771
  %777 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %761, i64 0, i32 2, i32 1
  %778 = load i64, ptr %777, align 8, !tbaa !13
  %779 = icmp ult i64 %778, 16
  call void @llvm.assume(i1 %779)
  br label %781

780:                                              ; preds = %771
  call void @_ZdlPv(ptr noundef %773) #26
  br label %781

781:                                              ; preds = %780, %776
  %782 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %761, i64 0, i32 1
  %783 = load ptr, ptr %782, align 8, !tbaa !63
  %784 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %761, i64 0, i32 1, i32 2
  %785 = icmp eq ptr %783, %784
  br i1 %785, label %786, label %790

786:                                              ; preds = %781
  %787 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %761, i64 0, i32 1, i32 1
  %788 = load i64, ptr %787, align 8, !tbaa !13
  %789 = icmp ult i64 %788, 16
  call void @llvm.assume(i1 %789)
  br label %791

790:                                              ; preds = %781
  call void @_ZdlPv(ptr noundef %783) #26
  br label %791

791:                                              ; preds = %790, %786
  %792 = load ptr, ptr %761, align 8, !tbaa !63
  %793 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %761, i64 0, i32 2
  %794 = icmp eq ptr %792, %793
  br i1 %794, label %795, label %799

795:                                              ; preds = %791
  %796 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %761, i64 0, i32 1
  %797 = load i64, ptr %796, align 8, !tbaa !13
  %798 = icmp ult i64 %797, 16
  call void @llvm.assume(i1 %798)
  br label %800

799:                                              ; preds = %791
  call void @_ZdlPv(ptr noundef %792) #26
  br label %800

800:                                              ; preds = %799, %795
  %801 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %761, i64 1
  %802 = icmp eq ptr %801, %758
  br i1 %802, label %803, label %760

803:                                              ; preds = %800
  %804 = load ptr, ptr %8, align 8, !tbaa !108
  br label %805

805:                                              ; preds = %803, %753
  %806 = phi ptr [ %804, %803 ], [ %756, %753 ]
  %807 = icmp eq ptr %806, null
  br i1 %807, label %814, label %808

808:                                              ; preds = %805
  call void @_ZdlPv(ptr noundef nonnull %806) #26
  br label %814

809:                                              ; preds = %745, %742
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #28
  %810 = load ptr, ptr %7, align 8, !tbaa !95
  %811 = icmp eq ptr %810, null
  br i1 %811, label %813, label %812

812:                                              ; preds = %809
  call void @_ZdlPv(ptr noundef nonnull %810) #26
  br label %813

813:                                              ; preds = %809, %812
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #28
  ret void

814:                                              ; preds = %808, %805, %118
  %815 = phi i32 [ %121, %118 ], [ %754, %805 ], [ %754, %808 ]
  %816 = phi ptr [ %120, %118 ], [ %755, %805 ], [ %755, %808 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #28
  %817 = load ptr, ptr %7, align 8, !tbaa !95
  %818 = icmp eq ptr %817, null
  br i1 %818, label %820, label %819

819:                                              ; preds = %814
  call void @_ZdlPv(ptr noundef nonnull %817) #26
  br label %820

820:                                              ; preds = %819, %814
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #28
  br label %821

821:                                              ; preds = %820, %28
  %822 = phi i32 [ %31, %28 ], [ %815, %820 ]
  %823 = phi ptr [ %30, %28 ], [ %816, %820 ]
  %824 = insertvalue { ptr, i32 } poison, ptr %823, 0
  %825 = insertvalue { ptr, i32 } %824, i32 %822, 1
  resume { ptr, i32 } %825

826:                                              ; preds = %746, %687, %666
  %827 = landingpad { ptr, i32 }
          catch ptr null
  %828 = extractvalue { ptr, i32 } %827, 0
  call void @__clang_call_terminate(ptr %828) #27
  unreachable

829:                                              ; preds = %682
  unreachable
}

declare noundef zeroext i1 @_ZN8Scenario7restartEv(ptr noundef nonnull align 8 dereferenceable(88)) local_unnamed_addr #1

declare void @_ZNK8Scenario3strB5cxx11Ev(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef nonnull align 8 dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare noundef ptr @strstr(ptr noundef, ptr nocapture noundef) local_unnamed_addr #7

declare noundef zeroext i1 @_ZN8Scenario4nextEv(ptr noundef nonnull align 8 dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN25SectionBasedConfiguration13parseVariableEPKcRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_S8_RS1_(ptr noundef %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %2, ptr noundef nonnull align 8 dereferenceable(32) %3, ptr nocapture noundef nonnull writeonly align 8 dereferenceable(8) %4) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %6 = tail call noundef ptr @strchr(ptr noundef nonnull dereferenceable(1) %0, i32 noundef 125) #29
  store ptr %6, ptr %4, align 8, !tbaa !5
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %13

8:                                                ; preds = %5
  %9 = tail call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %9, ptr noundef nonnull @.str.57)
          to label %10 unwind label %11

10:                                               ; preds = %8
  tail call void @__cxa_throw(ptr nonnull %9, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
  unreachable

11:                                               ; preds = %8
  %12 = landingpad { ptr, i32 }
          cleanup
  br label %143

13:                                               ; preds = %5
  %14 = getelementptr inbounds i8, ptr %0, i64 2
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi ptr [ %14, %13 ], [ %21, %15 ]
  %17 = load i8, ptr %16, align 1, !tbaa !16
  %18 = zext i8 %17 to i32
  %19 = tail call i32 @isspace(i32 noundef %18) #29
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds i8, ptr %16, i64 1
  br i1 %20, label %22, label %15

22:                                               ; preds = %15
  %23 = tail call i32 @isalpha(i32 noundef %18) #29
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %22, %25
  %26 = phi ptr [ %31, %25 ], [ %16, %22 ]
  %27 = load i8, ptr %26, align 1, !tbaa !16
  %28 = zext i8 %27 to i32
  %29 = tail call i32 @isalnum(i32 noundef %28) #29
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds i8, ptr %26, i64 1
  br i1 %30, label %32, label %25

32:                                               ; preds = %25
  %33 = tail call i32 @isspace(i32 noundef %28) #29
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %32, %35
  %36 = phi ptr [ %37, %35 ], [ %26, %32 ]
  %37 = getelementptr inbounds i8, ptr %36, i64 1
  %38 = load i8, ptr %37, align 1, !tbaa !16
  %39 = zext i8 %38 to i32
  %40 = tail call i32 @isspace(i32 noundef %39) #29
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %35

42:                                               ; preds = %35, %32
  %43 = phi i8 [ %27, %32 ], [ %38, %35 ]
  %44 = phi ptr [ %26, %32 ], [ %37, %35 ]
  switch i8 %43, label %49 [
    i8 125, label %89
    i8 61, label %45
  ]

45:                                               ; preds = %42
  %46 = getelementptr inbounds i8, ptr %44, i64 1
  %47 = load i8, ptr %46, align 1, !tbaa !16
  %48 = icmp eq i8 %47, 61
  br i1 %48, label %49, label %57

49:                                               ; preds = %42, %45
  %50 = tail call noundef ptr @strchr(ptr noundef nonnull dereferenceable(1) %44, i32 noundef 44) #29
  %51 = icmp eq ptr %50, null
  br i1 %51, label %52, label %57

52:                                               ; preds = %49
  %53 = tail call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %53, ptr noundef nonnull @.str.58)
          to label %54 unwind label %55

54:                                               ; preds = %52
  tail call void @__cxa_throw(ptr nonnull %53, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
  unreachable

55:                                               ; preds = %52
  %56 = landingpad { ptr, i32 }
          cleanup
  br label %143

57:                                               ; preds = %45, %49, %22
  %58 = phi ptr [ null, %22 ], [ null, %49 ], [ %16, %45 ]
  %59 = phi ptr [ null, %22 ], [ null, %49 ], [ %26, %45 ]
  %60 = phi ptr [ %16, %22 ], [ %16, %49 ], [ %46, %45 ]
  %61 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %60, i32 noundef 33) #29
  %62 = icmp eq ptr %61, null
  br i1 %62, label %89, label %63

63:                                               ; preds = %57, %63
  %64 = phi ptr [ %65, %63 ], [ %61, %57 ]
  %65 = getelementptr inbounds i8, ptr %64, i64 1
  %66 = load i8, ptr %65, align 1, !tbaa !16
  %67 = zext i8 %66 to i32
  %68 = tail call i32 @isspace(i32 noundef %67) #29
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %63

70:                                               ; preds = %63
  %71 = tail call i32 @isalpha(i32 noundef %67) #29
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %70
  %74 = icmp ne ptr %58, null
  br label %107

75:                                               ; preds = %70, %75
  %76 = phi ptr [ %81, %75 ], [ %65, %70 ]
  %77 = load i8, ptr %76, align 1, !tbaa !16
  %78 = zext i8 %77 to i32
  %79 = tail call i32 @isalnum(i32 noundef %78) #29
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds i8, ptr %76, i64 1
  br i1 %80, label %82, label %75

82:                                               ; preds = %75, %82
  %83 = phi ptr [ %88, %82 ], [ %76, %75 ]
  %84 = load i8, ptr %83, align 1, !tbaa !16
  %85 = zext i8 %84 to i32
  %86 = tail call i32 @isspace(i32 noundef %85) #29
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds i8, ptr %83, i64 1
  br i1 %87, label %95, label %82

89:                                               ; preds = %57, %42
  %90 = phi i1 [ true, %42 ], [ false, %57 ]
  %91 = phi ptr [ null, %42 ], [ %60, %57 ]
  %92 = phi ptr [ %26, %42 ], [ %59, %57 ]
  %93 = phi ptr [ %16, %42 ], [ %58, %57 ]
  %94 = icmp ne ptr %93, null
  br label %107

95:                                               ; preds = %82
  %96 = icmp eq ptr %83, %6
  %97 = select i1 %96, ptr %65, ptr null
  %98 = select i1 %96, ptr %76, ptr null
  %99 = select i1 %96, ptr %61, ptr %6
  %100 = icmp ne ptr %58, null
  %101 = and i1 %100, %96
  br i1 %101, label %102, label %107

102:                                              ; preds = %95
  %103 = tail call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %103, ptr noundef nonnull @.str.59)
          to label %104 unwind label %105

104:                                              ; preds = %102
  tail call void @__cxa_throw(ptr nonnull %103, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
  unreachable

105:                                              ; preds = %102
  %106 = landingpad { ptr, i32 }
          cleanup
  br label %143

107:                                              ; preds = %73, %89, %95
  %108 = phi i1 [ false, %89 ], [ %96, %95 ], [ false, %73 ]
  %109 = phi i1 [ %94, %89 ], [ %100, %95 ], [ %74, %73 ]
  %110 = phi ptr [ null, %89 ], [ %98, %95 ], [ null, %73 ]
  %111 = phi ptr [ null, %89 ], [ %97, %95 ], [ null, %73 ]
  %112 = phi ptr [ %6, %89 ], [ %99, %95 ], [ %6, %73 ]
  %113 = phi ptr [ %93, %89 ], [ %58, %95 ], [ %58, %73 ]
  %114 = phi ptr [ %92, %89 ], [ %59, %95 ], [ %59, %73 ]
  %115 = phi ptr [ %91, %89 ], [ %60, %95 ], [ %60, %73 ]
  %116 = phi i1 [ %90, %89 ], [ false, %95 ], [ false, %73 ]
  %117 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  %118 = load i64, ptr %117, align 8, !tbaa !13
  %119 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef 0, i64 noundef %118, ptr noundef nonnull @.str.14, i64 noundef 0)
  tail call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %2, ptr noundef nonnull align 8 dereferenceable(32) %119)
  tail call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %2)
  br i1 %109, label %120, label %127

120:                                              ; preds = %107
  %121 = ptrtoint ptr %114 to i64
  %122 = ptrtoint ptr %113 to i64
  %123 = sub i64 %121, %122
  %124 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %125 = load i64, ptr %124, align 8, !tbaa !13
  %126 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %1, i64 noundef 0, i64 noundef %125, ptr noundef %113, i64 noundef %123)
  br label %127

127:                                              ; preds = %120, %107
  br i1 %116, label %135, label %128

128:                                              ; preds = %127
  %129 = ptrtoint ptr %112 to i64
  %130 = ptrtoint ptr %115 to i64
  %131 = sub i64 %129, %130
  %132 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %133 = load i64, ptr %132, align 8, !tbaa !13
  %134 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef 0, i64 noundef %133, ptr noundef %115, i64 noundef %131)
  br label %135

135:                                              ; preds = %128, %127
  br i1 %108, label %136, label %142

136:                                              ; preds = %135
  %137 = ptrtoint ptr %110 to i64
  %138 = ptrtoint ptr %111 to i64
  %139 = sub i64 %137, %138
  %140 = load i64, ptr %117, align 8, !tbaa !13
  %141 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef 0, i64 noundef %140, ptr noundef %111, i64 noundef %139)
  br label %142

142:                                              ; preds = %136, %135
  ret void

143:                                              ; preds = %55, %105, %11
  %144 = phi ptr [ %53, %55 ], [ %103, %105 ], [ %9, %11 ]
  %145 = phi { ptr, i32 } [ %56, %55 ], [ %106, %105 ], [ %12, %11 ]
  tail call void @__cxa_free_exception(ptr %144) #28
  resume { ptr, i32 } %145
}

; Function Attrs: nofree nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local noundef zeroext i1 @_ZNK25SectionBasedConfiguration20isPredefinedVariableEPKc(ptr nocapture noundef nonnull readnone align 8 dereferenceable(416) %0, ptr nocapture noundef readonly %1) local_unnamed_addr #11 align 2 {
  %3 = load ptr, ptr @_ZL21configVarDescriptions, align 16, !tbaa !111
  %4 = icmp eq ptr %3, null
  br i1 %4, label %15, label %10

5:                                                ; preds = %10
  %6 = add nuw i64 %11, 1
  %7 = getelementptr inbounds [16 x %struct.ConfigVarDescription], ptr @_ZL21configVarDescriptions, i64 0, i64 %6
  %8 = load ptr, ptr %7, align 16, !tbaa !111
  %9 = icmp eq ptr %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %2, %5
  %11 = phi i64 [ %6, %5 ], [ 0, %2 ]
  %12 = phi ptr [ %8, %5 ], [ %3, %2 ]
  %13 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %1, ptr noundef nonnull dereferenceable(1) %12) #29
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %5

15:                                               ; preds = %5, %10, %2
  %16 = phi i1 [ false, %2 ], [ %14, %10 ], [ %14, %5 ]
  ret i1 %16
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN25SectionBasedConfiguration17IterationVariableD2Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  %4 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 3, i32 2
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 3, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !13
  %9 = icmp ult i64 %8, 16
  tail call void @llvm.assume(i1 %9)
  br label %11

10:                                               ; preds = %1
  tail call void @_ZdlPv(ptr noundef %3) #26
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !63
  %14 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 2, i32 2
  %15 = icmp eq ptr %13, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 2, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !13
  %19 = icmp ult i64 %18, 16
  tail call void @llvm.assume(i1 %19)
  br label %21

20:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef %13) #26
  br label %21

21:                                               ; preds = %20, %16
  %22 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !63
  %24 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 1, i32 2
  %25 = icmp eq ptr %23, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 1, i32 1
  %28 = load i64, ptr %27, align 8, !tbaa !13
  %29 = icmp ult i64 %28, 16
  tail call void @llvm.assume(i1 %29)
  br label %31

30:                                               ; preds = %21
  tail call void @_ZdlPv(ptr noundef %23) #26
  br label %31

31:                                               ; preds = %30, %26
  %32 = load ptr, ptr %0, align 8, !tbaa !63
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  %34 = icmp eq ptr %32, %33
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %37 = load i64, ptr %36, align 8, !tbaa !13
  %38 = icmp ult i64 %37, 16
  tail call void @llvm.assume(i1 %38)
  br label %40

39:                                               ; preds = %31
  tail call void @_ZdlPv(ptr noundef %32) #26
  br label %40

40:                                               ; preds = %35, %39
  ret void
}

declare noundef i64 @_ZN14cConfiguration9parseLongEPKcS1_l(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #1

declare void @_ZN13ValueIteratorC1EPKc(ptr noundef nonnull align 8 dereferenceable(36), ptr noundef) unnamed_addr #1

declare noundef i32 @_ZNK13ValueIterator6lengthEv(ptr noundef nonnull align 8 dereferenceable(36)) local_unnamed_addr #1

declare void @_ZNK13ValueIterator3getB5cxx11Ei(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef nonnull align 8 dereferenceable(36), i32 noundef) local_unnamed_addr #1

declare void @_ZN13ValueIteratorD1Ev(ptr noundef nonnull align 8 dereferenceable(36)) unnamed_addr #1

; Function Attrs: sspstrong uwtable
define dso_local noundef ptr @_ZN25SectionBasedConfiguration19substituteVariablesEPKc(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = icmp eq ptr %1, null
  br i1 %4, label %33, label %5

5:                                                ; preds = %2
  %6 = tail call noundef ptr @strstr(ptr noundef nonnull dereferenceable(1) %1, ptr noundef nonnull dereferenceable(1) @.str.49) #29
  %7 = icmp eq ptr %6, null
  br i1 %7, label %33, label %8

8:                                                ; preds = %5
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #28
  call void @_ZNK25SectionBasedConfiguration19substituteVariablesB5cxx11EPKcii(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %3, ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef nonnull %1, i32 noundef -1, i32 noundef -1)
  %9 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 12
  %10 = load ptr, ptr %3, align 8, !tbaa !63
  %11 = invoke noundef ptr @_ZN16CommonStringPool3getEPKc(ptr noundef nonnull align 8 dereferenceable(48) %9, ptr noundef %10)
          to label %12 unwind label %22

12:                                               ; preds = %8
  %13 = load ptr, ptr %3, align 8, !tbaa !63
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  %15 = icmp eq ptr %13, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !13
  %19 = icmp ult i64 %18, 16
  call void @llvm.assume(i1 %19)
  br label %21

20:                                               ; preds = %12
  call void @_ZdlPv(ptr noundef %13) #26
  br label %21

21:                                               ; preds = %16, %20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #28
  br label %33

22:                                               ; preds = %8
  %23 = landingpad { ptr, i32 }
          cleanup
  %24 = load ptr, ptr %3, align 8, !tbaa !63
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  %26 = icmp eq ptr %24, %25
  br i1 %26, label %27, label %31

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  %29 = load i64, ptr %28, align 8, !tbaa !13
  %30 = icmp ult i64 %29, 16
  call void @llvm.assume(i1 %30)
  br label %32

31:                                               ; preds = %22
  call void @_ZdlPv(ptr noundef %24) #26
  br label %32

32:                                               ; preds = %31, %27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #28
  resume { ptr, i32 } %23

33:                                               ; preds = %2, %5, %21
  %34 = phi ptr [ %11, %21 ], [ %1, %5 ], [ null, %2 ]
  ret ptr %34
}

declare noundef ptr @_ZN16CommonStringPool3getEPKc(ptr noundef nonnull align 8 dereferenceable(48), ptr noundef) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define dso_local noundef ptr @_ZNK25SectionBasedConfiguration11getVariableEPKc(ptr noundef nonnull readonly align 8 dereferenceable(416) %0, ptr noundef readonly %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #28
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 2
  store ptr %5, ptr %4, align 8, !tbaa !11
  %6 = icmp eq ptr %1, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  call void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
  unreachable

8:                                                ; preds = %2
  %9 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #28
  store i64 %9, ptr %3, align 8, !tbaa !87
  %10 = icmp ugt i64 %9, 15
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef nonnull align 8 dereferenceable(8) %3, i64 noundef 0)
  store ptr %12, ptr %4, align 8, !tbaa !63
  %13 = load i64, ptr %3, align 8, !tbaa !87
  store i64 %13, ptr %5, align 8, !tbaa !16
  br label %14

14:                                               ; preds = %11, %8
  %15 = phi ptr [ %12, %11 ], [ %5, %8 ]
  switch i64 %9, label %18 [
    i64 1, label %16
    i64 0, label %19
  ]

16:                                               ; preds = %14
  %17 = load i8, ptr %1, align 1, !tbaa !16
  store i8 %17, ptr %15, align 1, !tbaa !16
  br label %19

18:                                               ; preds = %14
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %15, ptr nonnull align 1 %1, i64 %9, i1 false)
  br label %19

19:                                               ; preds = %18, %16, %14
  %20 = load i64, ptr %3, align 8, !tbaa !87
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 1
  store i64 %20, ptr %21, align 8, !tbaa !13
  %22 = load ptr, ptr %4, align 8, !tbaa !63
  %23 = getelementptr inbounds i8, ptr %22, i64 %20
  store i8 0, ptr %23, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  %24 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !21
  %26 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %27 = icmp eq ptr %25, null
  %28 = load ptr, ptr %4, align 8
  br i1 %27, label %78, label %29

29:                                               ; preds = %19
  %30 = load i64, ptr %21, align 8, !tbaa !13
  br label %31

31:                                               ; preds = %48, %29
  %32 = phi ptr [ %25, %29 ], [ %55, %48 ]
  %33 = phi ptr [ %26, %29 ], [ %53, %48 ]
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %32, i64 0, i32 1, i32 0, i32 1
  %35 = load i64, ptr %34, align 8, !tbaa !13
  %36 = call i64 @llvm.umin.i64(i64 %30, i64 %35)
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %32, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !63
  %41 = call i32 @memcmp(ptr noundef %40, ptr noundef %28, i64 noundef %36) #28
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %38, %31
  %44 = sub i64 %35, %30
  %45 = call i64 @llvm.smax.i64(i64 %44, i64 -2147483648)
  %46 = call i64 @llvm.smin.i64(i64 %45, i64 2147483647)
  %47 = trunc i64 %46 to i32
  br label %48

48:                                               ; preds = %43, %38
  %49 = phi i32 [ %41, %38 ], [ %47, %43 ]
  %50 = icmp slt i32 %49, 0
  %51 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %32, i64 0, i32 3
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %32, i64 0, i32 2
  %53 = select i1 %50, ptr %33, ptr %32
  %54 = select i1 %50, ptr %51, ptr %52
  %55 = load ptr, ptr %54, align 8, !tbaa !5
  %56 = icmp eq ptr %55, null
  br i1 %56, label %57, label %31

57:                                               ; preds = %48
  %58 = icmp eq ptr %53, %26
  br i1 %58, label %78, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %53, i64 0, i32 1, i32 0, i32 1
  %61 = load i64, ptr %60, align 8, !tbaa !13
  %62 = call i64 @llvm.umin.i64(i64 %61, i64 %30)
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %53, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !63
  %67 = call i32 @memcmp(ptr noundef %28, ptr noundef %66, i64 noundef %62) #28
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %74

69:                                               ; preds = %64, %59
  %70 = sub i64 %30, %61
  %71 = call i64 @llvm.smax.i64(i64 %70, i64 -2147483648)
  %72 = call i64 @llvm.smin.i64(i64 %71, i64 2147483647)
  %73 = trunc i64 %72 to i32
  br label %74

74:                                               ; preds = %69, %64
  %75 = phi i32 [ %67, %64 ], [ %73, %69 ]
  %76 = icmp slt i32 %75, 0
  %77 = select i1 %76, ptr %26, ptr %53
  br label %78

78:                                               ; preds = %74, %57, %19
  %79 = phi ptr [ %26, %57 ], [ %26, %19 ], [ %77, %74 ]
  %80 = icmp eq ptr %28, %5
  br i1 %80, label %81, label %84

81:                                               ; preds = %78
  %82 = load i64, ptr %21, align 8, !tbaa !13
  %83 = icmp ult i64 %82, 16
  call void @llvm.assume(i1 %83)
  br label %85

84:                                               ; preds = %78
  call void @_ZdlPv(ptr noundef %28) #26
  br label %85

85:                                               ; preds = %84, %81
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #28
  %86 = icmp eq ptr %79, %26
  br i1 %86, label %90, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %79, i64 0, i32 1, i32 1
  %89 = load ptr, ptr %88, align 8, !tbaa !63
  br label %90

90:                                               ; preds = %85, %87
  %91 = phi ptr [ %89, %87 ], [ null, %85 ]
  ret ptr %91
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK25SectionBasedConfiguration25getIterationVariableNamesEv(ptr noalias sret(%"class.std::vector.61") align 8 %0, ptr noundef nonnull readonly align 8 dereferenceable(416) %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca ptr, align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %4 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !22
  %6 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %7 = icmp eq ptr %5, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  br label %12

11:                                               ; preds = %46, %2
  ret void

12:                                               ; preds = %8, %46
  %13 = phi ptr [ %5, %8 ], [ %47, %46 ]
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !63
  %16 = load i8, ptr %15, align 1, !tbaa !16
  %17 = zext i8 %16 to i32
  %18 = call i32 @isalpha(i32 noundef %17) #29
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %46, label %20

20:                                               ; preds = %12
  %21 = load ptr, ptr @_ZL21configVarDescriptions, align 16, !tbaa !111
  %22 = icmp eq ptr %21, null
  br i1 %22, label %33, label %28

23:                                               ; preds = %28
  %24 = add nuw i64 %29, 1
  %25 = getelementptr inbounds [16 x %struct.ConfigVarDescription], ptr @_ZL21configVarDescriptions, i64 0, i64 %24
  %26 = load ptr, ptr %25, align 16, !tbaa !111
  %27 = icmp eq ptr %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %20, %23
  %29 = phi i64 [ %24, %23 ], [ 0, %20 ]
  %30 = phi ptr [ %26, %23 ], [ %21, %20 ]
  %31 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %15, ptr noundef nonnull dereferenceable(1) %30) #29
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %46, label %23

33:                                               ; preds = %23, %20
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #28
  store ptr %15, ptr %3, align 8, !tbaa !5
  %34 = load ptr, ptr %9, align 8, !tbaa !5
  %35 = load ptr, ptr %10, align 8, !tbaa !214
  %36 = icmp eq ptr %34, %35
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  store ptr %15, ptr %34, align 8, !tbaa !5
  %38 = load ptr, ptr %9, align 8, !tbaa !216
  %39 = getelementptr inbounds ptr, ptr %38, i64 1
  store ptr %39, ptr %9, align 8, !tbaa !216
  br label %41

40:                                               ; preds = %33
  invoke void @_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %34, ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %41 unwind label %42

41:                                               ; preds = %37, %40
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  br label %46

42:                                               ; preds = %40
  %43 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  %44 = load ptr, ptr %0, align 8, !tbaa !217
  %45 = icmp eq ptr %44, null
  br i1 %45, label %50, label %49

46:                                               ; preds = %28, %12, %41
  %47 = call noundef ptr @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(ptr noundef %13) #29
  %48 = icmp eq ptr %47, %6
  br i1 %48, label %11, label %12

49:                                               ; preds = %42
  call void @_ZdlPv(ptr noundef nonnull %44) #26
  br label %50

50:                                               ; preds = %49, %42
  resume { ptr, i32 } %43
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK25SectionBasedConfiguration26getPredefinedVariableNamesEv(ptr noalias sret(%"class.std::vector.61") align 8 %0, ptr nocapture nonnull readnone align 8 %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %3 = load ptr, ptr @_ZL21configVarDescriptions, align 16, !tbaa !5
  %4 = icmp eq ptr %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  br label %8

8:                                                ; preds = %5, %19
  %9 = phi i64 [ 0, %5 ], [ %20, %19 ]
  %10 = phi ptr [ %3, %5 ], [ %22, %19 ]
  %11 = phi ptr [ @_ZL21configVarDescriptions, %5 ], [ %21, %19 ]
  %12 = load ptr, ptr %6, align 8, !tbaa !5
  %13 = load ptr, ptr %7, align 8, !tbaa !214
  %14 = icmp eq ptr %12, %13
  br i1 %14, label %18, label %15

15:                                               ; preds = %8
  store ptr %10, ptr %12, align 8, !tbaa !5
  %16 = load ptr, ptr %6, align 8, !tbaa !216
  %17 = getelementptr inbounds ptr, ptr %16, i64 1
  store ptr %17, ptr %6, align 8, !tbaa !216
  br label %19

18:                                               ; preds = %8
  invoke void @_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %12, ptr noundef nonnull align 8 dereferenceable(8) %11)
          to label %19 unwind label %24

19:                                               ; preds = %15, %18
  %20 = add nuw i64 %9, 1
  %21 = getelementptr inbounds [16 x %struct.ConfigVarDescription], ptr @_ZL21configVarDescriptions, i64 0, i64 %20
  %22 = load ptr, ptr %21, align 16, !tbaa !5
  %23 = icmp eq ptr %22, null
  br i1 %23, label %29, label %8

24:                                               ; preds = %18
  %25 = landingpad { ptr, i32 }
          cleanup
  %26 = load ptr, ptr %0, align 8, !tbaa !217
  %27 = icmp eq ptr %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  tail call void @_ZdlPv(ptr noundef nonnull %26) #26
  br label %30

29:                                               ; preds = %19, %2
  ret void

30:                                               ; preds = %28, %24
  resume { ptr, i32 } %25
}

; Function Attrs: sspstrong uwtable
define dso_local noundef ptr @_ZNK25SectionBasedConfiguration22getVariableDescriptionEPKc(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %1) unnamed_addr #0 align 2 {
  %3 = load ptr, ptr @_ZL21configVarDescriptions, align 16, !tbaa !111
  %4 = icmp eq ptr %3, null
  br i1 %4, label %18, label %10

5:                                                ; preds = %10
  %6 = add nuw i64 %11, 1
  %7 = getelementptr inbounds [16 x %struct.ConfigVarDescription], ptr @_ZL21configVarDescriptions, i64 0, i64 %6
  %8 = load ptr, ptr %7, align 16, !tbaa !111
  %9 = icmp eq ptr %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %2, %5
  %11 = phi i64 [ %6, %5 ], [ 0, %2 ]
  %12 = phi ptr [ %8, %5 ], [ %3, %2 ]
  %13 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %1, ptr noundef nonnull dereferenceable(1) %12) #29
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %5

15:                                               ; preds = %10
  %16 = getelementptr inbounds [16 x %struct.ConfigVarDescription], ptr @_ZL21configVarDescriptions, i64 0, i64 %11, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !218
  br label %29

18:                                               ; preds = %5, %2
  %19 = load ptr, ptr %0, align 8, !tbaa !9
  %20 = getelementptr inbounds ptr, ptr %19, i64 51
  %21 = load ptr, ptr %20, align 8
  %22 = tail call noundef ptr %21(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %1)
  %23 = icmp eq ptr %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %18
  %25 = load i8, ptr %22, align 1, !tbaa !16
  %26 = freeze i8 %25
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %18, %24
  br label %29

29:                                               ; preds = %28, %24, %15
  %30 = phi ptr [ %17, %15 ], [ null, %28 ], [ @.str.62, %24 ]
  ret ptr %30
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK25SectionBasedConfiguration19resolveSectionChainEPKc(ptr noalias sret(%"class.std::vector.36") align 8 %0, ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %1, ptr noundef %2) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %7 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !25
  %9 = load ptr, ptr %8, align 8, !tbaa !9
  %10 = getelementptr inbounds ptr, ptr %9, i64 5
  %11 = load ptr, ptr %10, align 8
  %12 = invoke noundef i32 %11(ptr noundef nonnull align 8 dereferenceable(8) %8)
          to label %13 unwind label %125

13:                                               ; preds = %3
  %14 = icmp sgt i32 %12, 0
  br i1 %14, label %15, label %34

15:                                               ; preds = %13, %31
  %16 = phi i32 [ %32, %31 ], [ 0, %13 ]
  %17 = load ptr, ptr %7, align 8, !tbaa !25
  %18 = load ptr, ptr %17, align 8, !tbaa !9
  %19 = getelementptr inbounds ptr, ptr %18, i64 6
  %20 = load ptr, ptr %19, align 8
  %21 = invoke noundef ptr %20(ptr noundef nonnull align 8 dereferenceable(8) %17, i32 noundef %16)
          to label %22 unwind label %123

22:                                               ; preds = %15
  %23 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(8) @.str.17, ptr noundef nonnull dereferenceable(1) %21) #29
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %7, align 8, !tbaa !25
  %27 = load ptr, ptr %26, align 8, !tbaa !9
  %28 = getelementptr inbounds ptr, ptr %27, i64 5
  %29 = load ptr, ptr %28, align 8
  %30 = invoke noundef i32 %29(ptr noundef nonnull align 8 dereferenceable(8) %26)
          to label %31 unwind label %123

31:                                               ; preds = %25
  %32 = add nuw nsw i32 %16, 1
  %33 = icmp slt i32 %32, %30
  br i1 %33, label %15, label %34

34:                                               ; preds = %31, %22, %13
  %35 = phi i32 [ -1, %13 ], [ -1, %31 ], [ %16, %22 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #28
  %36 = invoke noundef i32 @_ZNK25SectionBasedConfiguration20internalGetSectionIdEPKc(ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %2)
          to label %37 unwind label %129, !range !219

37:                                               ; preds = %34
  store i32 %36, ptr %5, align 4, !tbaa !104
  %38 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 2
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 1
  %42 = icmp eq i32 %35, -1
  br label %43

43:                                               ; preds = %258, %37
  %44 = load ptr, ptr %0, align 8, !tbaa !5
  %45 = load ptr, ptr %38, align 8, !tbaa !5
  %46 = ptrtoint ptr %45 to i64
  %47 = ptrtoint ptr %44 to i64
  %48 = sub i64 %46, %47
  %49 = icmp sgt i64 %48, 15
  br i1 %49, label %50, label %77

50:                                               ; preds = %43
  %51 = lshr i64 %48, 4
  %52 = load i32, ptr %5, align 4, !tbaa !104
  br label %53

53:                                               ; preds = %70, %50
  %54 = phi i64 [ %51, %50 ], [ %72, %70 ]
  %55 = phi ptr [ %44, %50 ], [ %71, %70 ]
  %56 = load i32, ptr %55, align 4, !tbaa !104
  %57 = icmp eq i32 %56, %52
  br i1 %57, label %110, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds i32, ptr %55, i64 1
  %60 = load i32, ptr %59, align 4, !tbaa !104
  %61 = icmp eq i32 %60, %52
  br i1 %61, label %104, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds i32, ptr %55, i64 2
  %64 = load i32, ptr %63, align 4, !tbaa !104
  %65 = icmp eq i32 %64, %52
  br i1 %65, label %106, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds i32, ptr %55, i64 3
  %68 = load i32, ptr %67, align 4, !tbaa !104
  %69 = icmp eq i32 %68, %52
  br i1 %69, label %108, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds i32, ptr %55, i64 4
  %72 = add nsw i64 %54, -1
  %73 = icmp sgt i64 %54, 1
  br i1 %73, label %53, label %74

74:                                               ; preds = %70
  %75 = ptrtoint ptr %71 to i64
  %76 = sub i64 %46, %75
  br label %77

77:                                               ; preds = %74, %43
  %78 = phi i64 [ %76, %74 ], [ %48, %43 ]
  %79 = phi ptr [ %71, %74 ], [ %44, %43 ]
  %80 = ashr exact i64 %78, 2
  switch i64 %80, label %133 [
    i64 3, label %85
    i64 2, label %83
    i64 1, label %81
  ]

81:                                               ; preds = %77
  %82 = load i32, ptr %5, align 4, !tbaa !104
  br label %98

83:                                               ; preds = %77
  %84 = load i32, ptr %5, align 4, !tbaa !104
  br label %91

85:                                               ; preds = %77
  %86 = load i32, ptr %79, align 4, !tbaa !104
  %87 = load i32, ptr %5, align 4, !tbaa !104
  %88 = icmp eq i32 %86, %87
  br i1 %88, label %110, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds i32, ptr %79, i64 1
  br label %91

91:                                               ; preds = %89, %83
  %92 = phi i32 [ %84, %83 ], [ %87, %89 ]
  %93 = phi ptr [ %79, %83 ], [ %90, %89 ]
  %94 = load i32, ptr %93, align 4, !tbaa !104
  %95 = icmp eq i32 %94, %92
  br i1 %95, label %110, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds i32, ptr %93, i64 1
  br label %98

98:                                               ; preds = %96, %81
  %99 = phi i32 [ %82, %81 ], [ %92, %96 ]
  %100 = phi ptr [ %79, %81 ], [ %97, %96 ]
  %101 = load i32, ptr %100, align 4, !tbaa !104
  %102 = icmp eq i32 %101, %99
  %103 = select i1 %102, ptr %100, ptr %45
  br label %110

104:                                              ; preds = %58
  %105 = getelementptr inbounds i32, ptr %55, i64 1
  br label %110

106:                                              ; preds = %62
  %107 = getelementptr inbounds i32, ptr %55, i64 2
  br label %110

108:                                              ; preds = %66
  %109 = getelementptr inbounds i32, ptr %55, i64 3
  br label %110

110:                                              ; preds = %53, %104, %106, %108, %85, %91, %98
  %111 = phi ptr [ %79, %85 ], [ %93, %91 ], [ %103, %98 ], [ %105, %104 ], [ %107, %106 ], [ %109, %108 ], [ %55, %53 ]
  %112 = icmp eq ptr %111, %45
  br i1 %112, label %133, label %113

113:                                              ; preds = %110
  %114 = call ptr @__cxa_allocate_exception(i64 128) #28
  %115 = load ptr, ptr %7, align 8, !tbaa !25
  %116 = load i32, ptr %5, align 4, !tbaa !104
  %117 = load ptr, ptr %115, align 8, !tbaa !9
  %118 = getelementptr inbounds ptr, ptr %117, i64 6
  %119 = load ptr, ptr %118, align 8
  %120 = invoke noundef ptr %119(ptr noundef nonnull align 8 dereferenceable(8) %115, i32 noundef %116)
          to label %121 unwind label %131

121:                                              ; preds = %113
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %114, ptr noundef nonnull @.str.63, ptr noundef %120)
          to label %122 unwind label %131

122:                                              ; preds = %121
  invoke void @__cxa_throw(ptr nonnull %114, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %271 unwind label %129

123:                                              ; preds = %15, %25
  %124 = landingpad { ptr, i32 }
          cleanup
  br label %265

125:                                              ; preds = %3
  %126 = landingpad { ptr, i32 }
          cleanup
  br label %265

127:                                              ; preds = %139
  %128 = landingpad { ptr, i32 }
          cleanup
  br label %263

129:                                              ; preds = %34, %122
  %130 = landingpad { ptr, i32 }
          cleanup
  br label %263

131:                                              ; preds = %121, %113
  %132 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %114) #28
  br label %263

133:                                              ; preds = %77, %110
  %134 = load ptr, ptr %39, align 8, !tbaa !220
  %135 = icmp eq ptr %45, %134
  br i1 %135, label %139, label %136

136:                                              ; preds = %133
  %137 = load i32, ptr %5, align 4, !tbaa !104
  store i32 %137, ptr %45, align 4, !tbaa !104
  %138 = getelementptr inbounds i32, ptr %45, i64 1
  store ptr %138, ptr %38, align 8, !tbaa !103
  br label %140

139:                                              ; preds = %133
  invoke void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EERKi(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %45, ptr noundef nonnull align 4 dereferenceable(4) %5)
          to label %140 unwind label %127

140:                                              ; preds = %136, %139
  %141 = load i32, ptr %5, align 4, !tbaa !104
  %142 = load ptr, ptr @CFGID_EXTENDS, align 8, !tbaa !5
  %143 = load ptr, ptr %142, align 8, !tbaa !9
  %144 = getelementptr inbounds ptr, ptr %143, i64 6
  %145 = load ptr, ptr %144, align 8
  %146 = invoke noundef ptr %145(ptr noundef nonnull align 8 dereferenceable(20) %142)
          to label %147 unwind label %225

147:                                              ; preds = %140
  %148 = load ptr, ptr %7, align 8, !tbaa !25
  %149 = load ptr, ptr %148, align 8, !tbaa !9
  %150 = getelementptr inbounds ptr, ptr %149, i64 7
  %151 = load ptr, ptr %150, align 8
  %152 = invoke noundef i32 %151(ptr noundef nonnull align 8 dereferenceable(8) %148, i32 noundef %141)
          to label %153 unwind label %225

153:                                              ; preds = %147
  %154 = icmp sgt i32 %152, 0
  br i1 %154, label %155, label %179

155:                                              ; preds = %153, %176
  %156 = phi i32 [ %177, %176 ], [ 0, %153 ]
  %157 = load ptr, ptr %7, align 8, !tbaa !25
  %158 = load ptr, ptr %157, align 8, !tbaa !9
  %159 = getelementptr inbounds ptr, ptr %158, i64 8
  %160 = load ptr, ptr %159, align 8
  %161 = invoke noundef nonnull align 8 dereferenceable(8) ptr %160(ptr noundef nonnull align 8 dereferenceable(8) %157, i32 noundef %141, i32 noundef %156)
          to label %162 unwind label %223

162:                                              ; preds = %155
  %163 = load ptr, ptr %161, align 8, !tbaa !9
  %164 = getelementptr inbounds ptr, ptr %163, i64 2
  %165 = load ptr, ptr %164, align 8
  %166 = invoke noundef ptr %165(ptr noundef nonnull align 8 dereferenceable(8) %161)
          to label %167 unwind label %223

167:                                              ; preds = %162
  %168 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %146, ptr noundef nonnull dereferenceable(1) %166) #29
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %180, label %170

170:                                              ; preds = %167
  %171 = load ptr, ptr %7, align 8, !tbaa !25
  %172 = load ptr, ptr %171, align 8, !tbaa !9
  %173 = getelementptr inbounds ptr, ptr %172, i64 7
  %174 = load ptr, ptr %173, align 8
  %175 = invoke noundef i32 %174(ptr noundef nonnull align 8 dereferenceable(8) %171, i32 noundef %141)
          to label %176 unwind label %223

176:                                              ; preds = %170
  %177 = add nuw nsw i32 %156, 1
  %178 = icmp slt i32 %177, %175
  br i1 %178, label %155, label %179

179:                                              ; preds = %176, %153
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #28
  store ptr %40, ptr %6, align 8, !tbaa !11
  br label %196

180:                                              ; preds = %167
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #28
  %181 = load ptr, ptr %7, align 8, !tbaa !25
  %182 = load i32, ptr %5, align 4, !tbaa !104
  %183 = load ptr, ptr %181, align 8, !tbaa !9
  %184 = getelementptr inbounds ptr, ptr %183, i64 8
  %185 = load ptr, ptr %184, align 8
  %186 = invoke noundef nonnull align 8 dereferenceable(8) ptr %185(ptr noundef nonnull align 8 dereferenceable(8) %181, i32 noundef %182, i32 noundef %156)
          to label %187 unwind label %227

187:                                              ; preds = %180
  %188 = load ptr, ptr %186, align 8, !tbaa !9
  %189 = getelementptr inbounds ptr, ptr %188, i64 3
  %190 = load ptr, ptr %189, align 8
  %191 = invoke noundef ptr %190(ptr noundef nonnull align 8 dereferenceable(8) %186)
          to label %192 unwind label %227

192:                                              ; preds = %187
  store ptr %40, ptr %6, align 8, !tbaa !11
  %193 = icmp eq ptr %191, null
  br i1 %193, label %194, label %196

194:                                              ; preds = %192
  invoke void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
          to label %195 unwind label %231

195:                                              ; preds = %194
  unreachable

196:                                              ; preds = %179, %192
  %197 = phi ptr [ @.str.14, %179 ], [ %191, %192 ]
  %198 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %197) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %198, ptr %4, align 8, !tbaa !87
  %199 = icmp ugt i64 %198, 15
  br i1 %199, label %200, label %204

200:                                              ; preds = %196
  %201 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %6, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %202 unwind label %229

202:                                              ; preds = %200
  store ptr %201, ptr %6, align 8, !tbaa !63
  %203 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %203, ptr %40, align 8, !tbaa !16
  br label %204

204:                                              ; preds = %202, %196
  %205 = phi ptr [ %201, %202 ], [ %40, %196 ]
  switch i64 %198, label %208 [
    i64 1, label %206
    i64 0, label %209
  ]

206:                                              ; preds = %204
  %207 = load i8, ptr %197, align 1, !tbaa !16
  store i8 %207, ptr %205, align 1, !tbaa !16
  br label %209

208:                                              ; preds = %204
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %205, ptr nonnull align 1 %197, i64 %198, i1 false)
  br label %209

209:                                              ; preds = %208, %206, %204
  %210 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %210, ptr %41, align 8, !tbaa !13
  %211 = load ptr, ptr %6, align 8, !tbaa !63
  %212 = getelementptr inbounds i8, ptr %211, i64 %210
  store i8 0, ptr %212, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %213 = load i64, ptr %41, align 8, !tbaa !13
  %214 = icmp ne i64 %213, 0
  %215 = or i1 %42, %214
  %216 = load i32, ptr %5, align 4
  %217 = icmp eq i32 %216, %35
  %218 = select i1 %215, i1 true, i1 %217
  br i1 %218, label %241, label %219

219:                                              ; preds = %209
  %220 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %6, i64 noundef 0, i64 noundef 0, ptr noundef nonnull @.str.17, i64 noundef 7)
          to label %221 unwind label %233

221:                                              ; preds = %219
  %222 = load i64, ptr %41, align 8, !tbaa !13
  br label %241

223:                                              ; preds = %155, %162, %170
  %224 = landingpad { ptr, i32 }
          cleanup
  br label %263

225:                                              ; preds = %140, %147
  %226 = landingpad { ptr, i32 }
          cleanup
  br label %263

227:                                              ; preds = %187, %180
  %228 = landingpad { ptr, i32 }
          cleanup
  br label %260

229:                                              ; preds = %200
  %230 = landingpad { ptr, i32 }
          cleanup
  br label %260

231:                                              ; preds = %194
  %232 = landingpad { ptr, i32 }
          cleanup
  br label %260

233:                                              ; preds = %219, %244
  %234 = landingpad { ptr, i32 }
          cleanup
  %235 = load ptr, ptr %6, align 8, !tbaa !63
  %236 = icmp eq ptr %235, %40
  br i1 %236, label %237, label %240

237:                                              ; preds = %233
  %238 = load i64, ptr %41, align 8, !tbaa !13
  %239 = icmp ult i64 %238, 16
  call void @llvm.assume(i1 %239)
  br label %260

240:                                              ; preds = %233
  call void @_ZdlPv(ptr noundef %235) #26
  br label %260

241:                                              ; preds = %221, %209
  %242 = phi i64 [ %222, %221 ], [ %213, %209 ]
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %250, label %244

244:                                              ; preds = %241
  %245 = load ptr, ptr %6, align 8, !tbaa !63
  %246 = invoke noundef i32 @_ZNK25SectionBasedConfiguration17resolveConfigNameEPKc(ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %245)
          to label %247 unwind label %233

247:                                              ; preds = %244
  store i32 %246, ptr %5, align 4, !tbaa !104
  %248 = icmp eq i32 %246, -1
  %249 = select i1 %248, i32 3, i32 0
  br label %250

250:                                              ; preds = %247, %241
  %251 = phi i32 [ 3, %241 ], [ %249, %247 ]
  %252 = load ptr, ptr %6, align 8, !tbaa !63
  %253 = icmp eq ptr %252, %40
  br i1 %253, label %254, label %257

254:                                              ; preds = %250
  %255 = load i64, ptr %41, align 8, !tbaa !13
  %256 = icmp ult i64 %255, 16
  call void @llvm.assume(i1 %256)
  br label %258

257:                                              ; preds = %250
  call void @_ZdlPv(ptr noundef %252) #26
  br label %258

258:                                              ; preds = %257, %254
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #28
  %259 = icmp eq i32 %251, 0
  br i1 %259, label %43, label %262

260:                                              ; preds = %229, %231, %240, %237, %227
  %261 = phi { ptr, i32 } [ %228, %227 ], [ %234, %237 ], [ %234, %240 ], [ %230, %229 ], [ %232, %231 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #28
  br label %263

262:                                              ; preds = %258
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #28
  ret void

263:                                              ; preds = %223, %225, %127, %129, %260, %131
  %264 = phi { ptr, i32 } [ %132, %131 ], [ %261, %260 ], [ %128, %127 ], [ %130, %129 ], [ %224, %223 ], [ %226, %225 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #28
  br label %265

265:                                              ; preds = %123, %125, %263
  %266 = phi { ptr, i32 } [ %264, %263 ], [ %124, %123 ], [ %126, %125 ]
  %267 = load ptr, ptr %0, align 8, !tbaa !95
  %268 = icmp eq ptr %267, null
  br i1 %268, label %270, label %269

269:                                              ; preds = %265
  call void @_ZdlPv(ptr noundef nonnull %267) #26
  br label %270

270:                                              ; preds = %269, %265
  resume { ptr, i32 } %266

271:                                              ; preds = %122
  unreachable
}

; Function Attrs: sspstrong uwtable
define dso_local noundef i32 @_ZNK25SectionBasedConfiguration20internalGetSectionIdEPKc(ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %0, ptr noundef %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !25
  %5 = load ptr, ptr %4, align 8, !tbaa !9
  %6 = getelementptr inbounds ptr, ptr %5, i64 5
  %7 = load ptr, ptr %6, align 8
  %8 = tail call noundef i32 %7(ptr noundef nonnull align 8 dereferenceable(8) %4)
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %27

10:                                               ; preds = %2, %19
  %11 = phi i32 [ %20, %19 ], [ 0, %2 ]
  %12 = load ptr, ptr %3, align 8, !tbaa !25
  %13 = load ptr, ptr %12, align 8, !tbaa !9
  %14 = getelementptr inbounds ptr, ptr %13, i64 6
  %15 = load ptr, ptr %14, align 8
  %16 = tail call noundef ptr %15(ptr noundef nonnull align 8 dereferenceable(8) %12, i32 noundef %11)
  %17 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %1, ptr noundef nonnull dereferenceable(1) %16) #29
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %32, label %19

19:                                               ; preds = %10
  %20 = add nuw nsw i32 %11, 1
  %21 = load ptr, ptr %3, align 8, !tbaa !25
  %22 = load ptr, ptr %21, align 8, !tbaa !9
  %23 = getelementptr inbounds ptr, ptr %22, i64 5
  %24 = load ptr, ptr %23, align 8
  %25 = tail call noundef i32 %24(ptr noundef nonnull align 8 dereferenceable(8) %21)
  %26 = icmp slt i32 %20, %25
  br i1 %26, label %10, label %27

27:                                               ; preds = %19, %2
  %28 = tail call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %28, ptr noundef nonnull @.str.66, ptr noundef %1)
          to label %29 unwind label %30

29:                                               ; preds = %27
  tail call void @__cxa_throw(ptr nonnull %28, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
  unreachable

30:                                               ; preds = %27
  %31 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_free_exception(ptr %28) #28
  resume { ptr, i32 } %31

32:                                               ; preds = %10
  ret i32 %11
}

declare noundef zeroext i1 @_ZN14PatternMatcher17containsWildcardsEPKc(ptr noundef) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(80) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration9KeyValue1ESt4lessIS5_ESaISt4pairIKS5_S7_EEEixERSB_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::KeyValue1>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::KeyValue1> >, std::less<std::__cxx11::basic_string<char> > >::_Alloc_node", align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.std::pair.88", align 8
  %8 = alloca %"class.SectionBasedConfiguration::KeyValue1", align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 16
  %10 = load ptr, ptr %9, align 8, !tbaa !21
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  %12 = icmp eq ptr %10, null
  %13 = load ptr, ptr %1, align 8
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %15 = load i64, ptr %14, align 8, !tbaa !13
  br i1 %12, label %62, label %16

16:                                               ; preds = %2, %33
  %17 = phi ptr [ %40, %33 ], [ %10, %2 ]
  %18 = phi ptr [ %38, %33 ], [ %11, %2 ]
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %17, i64 0, i32 1, i32 0, i32 1
  %20 = load i64, ptr %19, align 8, !tbaa !13
  %21 = tail call i64 @llvm.umin.i64(i64 %15, i64 %20)
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %17, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !63
  %26 = tail call i32 @memcmp(ptr noundef %25, ptr noundef %13, i64 noundef %21) #28
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %23, %16
  %29 = sub i64 %20, %15
  %30 = tail call i64 @llvm.smax.i64(i64 %29, i64 -2147483648)
  %31 = tail call i64 @llvm.smin.i64(i64 %30, i64 2147483647)
  %32 = trunc i64 %31 to i32
  br label %33

33:                                               ; preds = %28, %23
  %34 = phi i32 [ %26, %23 ], [ %32, %28 ]
  %35 = icmp slt i32 %34, 0
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %17, i64 0, i32 3
  %37 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %17, i64 0, i32 2
  %38 = select i1 %35, ptr %18, ptr %17
  %39 = select i1 %35, ptr %36, ptr %37
  %40 = load ptr, ptr %39, align 8, !tbaa !5
  %41 = icmp eq ptr %40, null
  br i1 %41, label %42, label %16

42:                                               ; preds = %33
  %43 = icmp eq ptr %38, %11
  br i1 %43, label %62, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %38, i64 0, i32 1, i32 0, i32 1
  %46 = load i64, ptr %45, align 8, !tbaa !13
  %47 = tail call i64 @llvm.umin.i64(i64 %46, i64 %15)
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %38, i64 0, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !63
  %52 = tail call i32 @memcmp(ptr noundef %13, ptr noundef %51, i64 noundef %47) #28
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %49, %44
  %55 = sub i64 %15, %46
  %56 = tail call i64 @llvm.smax.i64(i64 %55, i64 -2147483648)
  %57 = tail call i64 @llvm.smin.i64(i64 %56, i64 2147483647)
  %58 = trunc i64 %57 to i32
  br label %59

59:                                               ; preds = %49, %54
  %60 = phi i32 [ %52, %49 ], [ %58, %54 ]
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %62, label %190

62:                                               ; preds = %2, %42, %59
  %63 = phi ptr [ %38, %59 ], [ %11, %42 ], [ %11, %2 ]
  call void @llvm.lifetime.start.p0(i64 112, ptr nonnull %7) #28
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %8) #28
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !9
  %64 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 2
  %65 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 2, i32 2
  store ptr %65, ptr %64, align 8, !tbaa !11
  %66 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 2, i32 1
  store i64 0, ptr %66, align 8, !tbaa !13
  store i8 0, ptr %65, align 8, !tbaa !16
  %67 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 3
  %68 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 3, i32 2
  store ptr %68, ptr %67, align 8, !tbaa !11
  %69 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 3, i32 1
  store i64 0, ptr %69, align 8, !tbaa !13
  store i8 0, ptr %68, align 8, !tbaa !16
  %70 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 1
  store ptr @_ZN25SectionBasedConfiguration9KeyValue111nullbasedirB5cxx11E, ptr %70, align 8, !tbaa !85
  %71 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  store ptr %71, ptr %7, align 8, !tbaa !11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #28
  store i64 %15, ptr %6, align 8, !tbaa !87
  %72 = icmp ugt i64 %15, 15
  br i1 %72, label %73, label %77

73:                                               ; preds = %62
  %74 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %7, ptr noundef nonnull align 8 dereferenceable(8) %6, i64 noundef 0)
          to label %75 unwind label %183

75:                                               ; preds = %73
  store ptr %74, ptr %7, align 8, !tbaa !63
  %76 = load i64, ptr %6, align 8, !tbaa !87
  store i64 %76, ptr %71, align 8, !tbaa !16
  br label %77

77:                                               ; preds = %75, %62
  %78 = phi ptr [ %74, %75 ], [ %71, %62 ]
  switch i64 %15, label %81 [
    i64 1, label %79
    i64 0, label %82
  ]

79:                                               ; preds = %77
  %80 = load i8, ptr %13, align 1, !tbaa !16
  store i8 %80, ptr %78, align 1, !tbaa !16
  br label %82

81:                                               ; preds = %77
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %78, ptr align 1 %13, i64 %15, i1 false)
  br label %82

82:                                               ; preds = %81, %79, %77
  %83 = load i64, ptr %6, align 8, !tbaa !87
  %84 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 1
  store i64 %83, ptr %84, align 8, !tbaa !13
  %85 = load ptr, ptr %7, align 8, !tbaa !63
  %86 = getelementptr inbounds i8, ptr %85, i64 %83
  store i8 0, ptr %86, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #28
  %87 = getelementptr inbounds %"struct.std::pair.88", ptr %7, i64 0, i32 1
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %87, align 8, !tbaa !9
  %88 = getelementptr inbounds %"struct.std::pair.88", ptr %7, i64 0, i32 1, i32 1
  %89 = load ptr, ptr %70, align 8, !tbaa !85
  store ptr %89, ptr %88, align 8, !tbaa !85
  %90 = getelementptr inbounds %"struct.std::pair.88", ptr %7, i64 0, i32 1, i32 2
  %91 = getelementptr inbounds %"struct.std::pair.88", ptr %7, i64 0, i32 1, i32 2, i32 2
  store ptr %91, ptr %90, align 8, !tbaa !11
  %92 = load ptr, ptr %64, align 8, !tbaa !63
  %93 = load i64, ptr %66, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %93, ptr %4, align 8, !tbaa !87
  %94 = icmp ugt i64 %93, 15
  br i1 %94, label %95, label %99

95:                                               ; preds = %82
  %96 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %90, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %97 unwind label %131

97:                                               ; preds = %95
  store ptr %96, ptr %90, align 8, !tbaa !63
  %98 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %98, ptr %91, align 8, !tbaa !16
  br label %99

99:                                               ; preds = %97, %82
  %100 = phi ptr [ %96, %97 ], [ %91, %82 ]
  switch i64 %93, label %103 [
    i64 1, label %101
    i64 0, label %104
  ]

101:                                              ; preds = %99
  %102 = load i8, ptr %92, align 1, !tbaa !16
  store i8 %102, ptr %100, align 1, !tbaa !16
  br label %104

103:                                              ; preds = %99
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %100, ptr align 1 %92, i64 %93, i1 false)
  br label %104

104:                                              ; preds = %103, %101, %99
  %105 = load i64, ptr %4, align 8, !tbaa !87
  %106 = getelementptr inbounds %"struct.std::pair.88", ptr %7, i64 0, i32 1, i32 2, i32 1
  store i64 %105, ptr %106, align 8, !tbaa !13
  %107 = load ptr, ptr %90, align 8, !tbaa !63
  %108 = getelementptr inbounds i8, ptr %107, i64 %105
  store i8 0, ptr %108, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %109 = getelementptr inbounds %"struct.std::pair.88", ptr %7, i64 0, i32 1, i32 3
  %110 = getelementptr inbounds %"struct.std::pair.88", ptr %7, i64 0, i32 1, i32 3, i32 2
  store ptr %110, ptr %109, align 8, !tbaa !11
  %111 = load ptr, ptr %67, align 8, !tbaa !63
  %112 = load i64, ptr %69, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #28
  store i64 %112, ptr %3, align 8, !tbaa !87
  %113 = icmp ugt i64 %112, 15
  br i1 %113, label %114, label %118

114:                                              ; preds = %104
  %115 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %109, ptr noundef nonnull align 8 dereferenceable(8) %3, i64 noundef 0)
          to label %116 unwind label %123

116:                                              ; preds = %114
  store ptr %115, ptr %109, align 8, !tbaa !63
  %117 = load i64, ptr %3, align 8, !tbaa !87
  store i64 %117, ptr %110, align 8, !tbaa !16
  br label %118

118:                                              ; preds = %116, %104
  %119 = phi ptr [ %115, %116 ], [ %110, %104 ]
  switch i64 %112, label %122 [
    i64 1, label %120
    i64 0, label %141
  ]

120:                                              ; preds = %118
  %121 = load i8, ptr %111, align 1, !tbaa !16
  store i8 %121, ptr %119, align 1, !tbaa !16
  br label %141

122:                                              ; preds = %118
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %119, ptr align 1 %111, i64 %112, i1 false)
  br label %141

123:                                              ; preds = %114
  %124 = landingpad { ptr, i32 }
          cleanup
  %125 = load ptr, ptr %90, align 8, !tbaa !63
  %126 = icmp eq ptr %125, %91
  br i1 %126, label %127, label %130

127:                                              ; preds = %123
  %128 = load i64, ptr %106, align 8, !tbaa !13
  %129 = icmp ult i64 %128, 16
  call void @llvm.assume(i1 %129)
  br label %133

130:                                              ; preds = %123
  call void @_ZdlPv(ptr noundef %125) #26
  br label %133

131:                                              ; preds = %95
  %132 = landingpad { ptr, i32 }
          cleanup
  br label %133

133:                                              ; preds = %127, %130, %131
  %134 = phi { ptr, i32 } [ %132, %131 ], [ %124, %130 ], [ %124, %127 ]
  %135 = load ptr, ptr %7, align 8, !tbaa !63
  %136 = icmp eq ptr %135, %71
  br i1 %136, label %137, label %140

137:                                              ; preds = %133
  %138 = load i64, ptr %84, align 8, !tbaa !13
  %139 = icmp ult i64 %138, 16
  call void @llvm.assume(i1 %139)
  br label %187

140:                                              ; preds = %133
  call void @_ZdlPv(ptr noundef %135) #26
  br label %187

141:                                              ; preds = %118, %120, %122
  %142 = load i64, ptr %3, align 8, !tbaa !87
  %143 = getelementptr inbounds %"struct.std::pair.88", ptr %7, i64 0, i32 1, i32 3, i32 1
  store i64 %142, ptr %143, align 8, !tbaa !13
  %144 = load ptr, ptr %109, align 8, !tbaa !63
  %145 = getelementptr inbounds i8, ptr %144, i64 %142
  store i8 0, ptr %145, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #28
  store ptr %0, ptr %5, align 8, !tbaa !5
  %146 = invoke ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_insert_unique_INSG_11_Alloc_nodeEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_ERKSA_RT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %63, ptr noundef nonnull align 8 dereferenceable(112) %7, ptr noundef nonnull align 8 dereferenceable(8) %5)
          to label %147 unwind label %185

147:                                              ; preds = %141
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #28
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %87, align 8, !tbaa !9
  %148 = load ptr, ptr %109, align 8, !tbaa !63
  %149 = icmp eq ptr %148, %110
  br i1 %149, label %150, label %153

150:                                              ; preds = %147
  %151 = load i64, ptr %143, align 8, !tbaa !13
  %152 = icmp ult i64 %151, 16
  call void @llvm.assume(i1 %152)
  br label %154

153:                                              ; preds = %147
  call void @_ZdlPv(ptr noundef %148) #26
  br label %154

154:                                              ; preds = %153, %150
  %155 = load ptr, ptr %90, align 8, !tbaa !63
  %156 = icmp eq ptr %155, %91
  br i1 %156, label %157, label %160

157:                                              ; preds = %154
  %158 = load i64, ptr %106, align 8, !tbaa !13
  %159 = icmp ult i64 %158, 16
  call void @llvm.assume(i1 %159)
  br label %161

160:                                              ; preds = %154
  call void @_ZdlPv(ptr noundef %155) #26
  br label %161

161:                                              ; preds = %160, %157
  %162 = load ptr, ptr %7, align 8, !tbaa !63
  %163 = icmp eq ptr %162, %71
  br i1 %163, label %164, label %167

164:                                              ; preds = %161
  %165 = load i64, ptr %84, align 8, !tbaa !13
  %166 = icmp ult i64 %165, 16
  call void @llvm.assume(i1 %166)
  br label %168

167:                                              ; preds = %161
  call void @_ZdlPv(ptr noundef %162) #26
  br label %168

168:                                              ; preds = %167, %164
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !9
  %169 = load ptr, ptr %67, align 8, !tbaa !63
  %170 = icmp eq ptr %169, %68
  br i1 %170, label %171, label %174

171:                                              ; preds = %168
  %172 = load i64, ptr %69, align 8, !tbaa !13
  %173 = icmp ult i64 %172, 16
  call void @llvm.assume(i1 %173)
  br label %175

174:                                              ; preds = %168
  call void @_ZdlPv(ptr noundef %169) #26
  br label %175

175:                                              ; preds = %174, %171
  %176 = load ptr, ptr %64, align 8, !tbaa !63
  %177 = icmp eq ptr %176, %65
  br i1 %177, label %178, label %181

178:                                              ; preds = %175
  %179 = load i64, ptr %66, align 8, !tbaa !13
  %180 = icmp ult i64 %179, 16
  call void @llvm.assume(i1 %180)
  br label %182

181:                                              ; preds = %175
  call void @_ZdlPv(ptr noundef %176) #26
  br label %182

182:                                              ; preds = %178, %181
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %8) #28
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %7) #28
  br label %190

183:                                              ; preds = %73
  %184 = landingpad { ptr, i32 }
          cleanup
  br label %187

185:                                              ; preds = %141
  %186 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration9KeyValue1EED2Ev(ptr noundef nonnull align 8 dereferenceable(112) %7)
          to label %187 unwind label %193

187:                                              ; preds = %183, %140, %137, %185
  %188 = phi { ptr, i32 } [ %186, %185 ], [ %184, %183 ], [ %134, %140 ], [ %134, %137 ]
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1D2Ev(ptr noundef nonnull align 8 dereferenceable(80) %8)
          to label %189 unwind label %193

189:                                              ; preds = %187
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %8) #28
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %7) #28
  resume { ptr, i32 } %188

190:                                              ; preds = %182, %59
  %191 = phi ptr [ %146, %182 ], [ %38, %59 ]
  %192 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %191, i64 0, i32 1, i32 1
  ret ptr %192

193:                                              ; preds = %187, %185
  %194 = landingpad { ptr, i32 }
          catch ptr null
  %195 = extractvalue { ptr, i32 } %194, 0
  call void @__clang_call_terminate(ptr %195) #27
  unreachable
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZN25SectionBasedConfiguration8splitKeyEPKcRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_(ptr noundef %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #28
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 2
  store ptr %6, ptr %5, align 8, !tbaa !11
  %7 = icmp eq ptr %0, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  call void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
  unreachable

9:                                                ; preds = %3
  %10 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %10, ptr %4, align 8, !tbaa !87
  %11 = icmp ugt i64 %10, 15
  br i1 %11, label %12, label %15

12:                                               ; preds = %9
  %13 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
  store ptr %13, ptr %5, align 8, !tbaa !63
  %14 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %14, ptr %6, align 8, !tbaa !16
  br label %15

15:                                               ; preds = %12, %9
  %16 = phi ptr [ %13, %12 ], [ %6, %9 ]
  switch i64 %10, label %19 [
    i64 1, label %17
    i64 0, label %20
  ]

17:                                               ; preds = %15
  %18 = load i8, ptr %0, align 1, !tbaa !16
  store i8 %18, ptr %16, align 1, !tbaa !16
  br label %20

19:                                               ; preds = %15
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %16, ptr nonnull align 1 %0, i64 %10, i1 false)
  br label %20

20:                                               ; preds = %19, %17, %15
  %21 = load i64, ptr %4, align 8, !tbaa !87
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 1
  store i64 %21, ptr %22, align 8, !tbaa !13
  %23 = load ptr, ptr %5, align 8, !tbaa !63
  %24 = getelementptr inbounds i8, ptr %23, i64 %21
  store i8 0, ptr %24, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %25 = call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %0, i32 noundef 46) #29
  %26 = icmp eq ptr %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = call noundef ptr @strstr(ptr noundef nonnull dereferenceable(1) %25, ptr noundef nonnull dereferenceable(1) @.str.64) #29
  %29 = icmp ne ptr %28, null
  %30 = or i1 %26, %29
  br i1 %30, label %31, label %55

31:                                               ; preds = %20, %27
  %32 = phi ptr [ null, %20 ], [ %28, %27 ]
  br label %33

33:                                               ; preds = %31, %36
  %34 = phi ptr [ %38, %36 ], [ %32, %31 ]
  %35 = icmp eq ptr %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, ptr %34, i64 1
  %38 = call noundef ptr @strstr(ptr noundef nonnull dereferenceable(1) %37, ptr noundef nonnull dereferenceable(1) @.str.64) #29
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %33

40:                                               ; preds = %33, %36
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %42 = load i64, ptr %41, align 8, !tbaa !13
  %43 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %1, i64 noundef 0, i64 noundef %42, ptr noundef nonnull @.str.14, i64 noundef 0)
          to label %44 unwind label %47

44:                                               ; preds = %40
  %45 = getelementptr inbounds i8, ptr %34, i64 1
  %46 = select i1 %35, ptr @.str.65, ptr %45
  br label %64

47:                                               ; preds = %64, %55, %40
  %48 = landingpad { ptr, i32 }
          cleanup
  %49 = load ptr, ptr %5, align 8, !tbaa !63
  %50 = icmp eq ptr %49, %6
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  %52 = load i64, ptr %22, align 8, !tbaa !13
  %53 = icmp ult i64 %52, 16
  call void @llvm.assume(i1 %53)
  br label %78

54:                                               ; preds = %47
  call void @_ZdlPv(ptr noundef %49) #26
  br label %78

55:                                               ; preds = %27
  %56 = ptrtoint ptr %25 to i64
  %57 = ptrtoint ptr %0 to i64
  %58 = sub i64 %56, %57
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %60 = load i64, ptr %59, align 8, !tbaa !13
  %61 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %1, i64 noundef 0, i64 noundef %60, ptr noundef nonnull %0, i64 noundef %58)
          to label %62 unwind label %47

62:                                               ; preds = %55
  %63 = getelementptr inbounds i8, ptr %25, i64 1
  br label %64

64:                                               ; preds = %44, %62
  %65 = phi ptr [ %46, %44 ], [ %63, %62 ]
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %67 = load i64, ptr %66, align 8, !tbaa !13
  %68 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %65) #28
  %69 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef 0, i64 noundef %67, ptr noundef nonnull %65, i64 noundef %68)
          to label %70 unwind label %47

70:                                               ; preds = %64
  %71 = load ptr, ptr %5, align 8, !tbaa !63
  %72 = icmp eq ptr %71, %6
  br i1 %72, label %73, label %76

73:                                               ; preds = %70
  %74 = load i64, ptr %22, align 8, !tbaa !13
  %75 = icmp ult i64 %74, 16
  call void @llvm.assume(i1 %75)
  br label %77

76:                                               ; preds = %70
  call void @_ZdlPv(ptr noundef %71) #26
  br label %77

77:                                               ; preds = %73, %76
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #28
  ret void

78:                                               ; preds = %54, %51
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #28
  resume { ptr, i32 } %48
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #12

declare void @_ZN14PatternMatcherC1EPKcbbb(ptr noundef nonnull align 8 dereferenceable(64), ptr noundef, i1 noundef zeroext, i1 noundef zeroext, i1 noundef zeroext) unnamed_addr #1

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration5GroupESt4lessIS5_ESaISt4pairIKS5_S7_EEEixERSB_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::Group>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, SectionBasedConfiguration::Group> >, std::less<std::__cxx11::basic_string<char> > >::_Alloc_node", align 8
  %4 = alloca i64, align 8
  %5 = alloca %"struct.std::pair.72", align 8
  %6 = alloca %"struct.SectionBasedConfiguration::Group", align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 16
  %8 = load ptr, ptr %7, align 8, !tbaa !21
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = icmp eq ptr %8, null
  %11 = load ptr, ptr %1, align 8
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %13 = load i64, ptr %12, align 8, !tbaa !13
  br i1 %10, label %60, label %14

14:                                               ; preds = %2, %31
  %15 = phi ptr [ %38, %31 ], [ %8, %2 ]
  %16 = phi ptr [ %36, %31 ], [ %9, %2 ]
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %15, i64 0, i32 1, i32 0, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !13
  %19 = tail call i64 @llvm.umin.i64(i64 %13, i64 %18)
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %15, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !63
  %24 = tail call i32 @memcmp(ptr noundef %23, ptr noundef %11, i64 noundef %19) #28
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %21, %14
  %27 = sub i64 %18, %13
  %28 = tail call i64 @llvm.smax.i64(i64 %27, i64 -2147483648)
  %29 = tail call i64 @llvm.smin.i64(i64 %28, i64 2147483647)
  %30 = trunc i64 %29 to i32
  br label %31

31:                                               ; preds = %26, %21
  %32 = phi i32 [ %24, %21 ], [ %30, %26 ]
  %33 = icmp slt i32 %32, 0
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %15, i64 0, i32 3
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %15, i64 0, i32 2
  %36 = select i1 %33, ptr %16, ptr %15
  %37 = select i1 %33, ptr %34, ptr %35
  %38 = load ptr, ptr %37, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %14

40:                                               ; preds = %31
  %41 = icmp eq ptr %36, %9
  br i1 %41, label %60, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %36, i64 0, i32 1, i32 0, i32 1
  %44 = load i64, ptr %43, align 8, !tbaa !13
  %45 = tail call i64 @llvm.umin.i64(i64 %44, i64 %13)
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %36, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !63
  %50 = tail call i32 @memcmp(ptr noundef %11, ptr noundef %49, i64 noundef %45) #28
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %47, %42
  %53 = sub i64 %13, %44
  %54 = tail call i64 @llvm.smax.i64(i64 %53, i64 -2147483648)
  %55 = tail call i64 @llvm.smin.i64(i64 %54, i64 2147483647)
  %56 = trunc i64 %55 to i32
  br label %57

57:                                               ; preds = %47, %52
  %58 = phi i32 [ %50, %47 ], [ %56, %52 ]
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %60, label %159

60:                                               ; preds = %2, %40, %57
  %61 = phi ptr [ %36, %57 ], [ %9, %40 ], [ %9, %2 ]
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %5) #28
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #28
  %62 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  store ptr %62, ptr %5, align 8, !tbaa !11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %13, ptr %4, align 8, !tbaa !87
  %63 = icmp ugt i64 %13, 15
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %66 unwind label %152

66:                                               ; preds = %64
  store ptr %65, ptr %5, align 8, !tbaa !63
  %67 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %67, ptr %62, align 8, !tbaa !16
  br label %68

68:                                               ; preds = %66, %60
  %69 = phi ptr [ %65, %66 ], [ %62, %60 ]
  switch i64 %13, label %72 [
    i64 1, label %70
    i64 0, label %73
  ]

70:                                               ; preds = %68
  %71 = load i8, ptr %11, align 1, !tbaa !16
  store i8 %71, ptr %69, align 1, !tbaa !16
  br label %73

72:                                               ; preds = %68
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %69, ptr align 1 %11, i64 %13, i1 false)
  br label %73

73:                                               ; preds = %72, %70, %68
  %74 = load i64, ptr %4, align 8, !tbaa !87
  %75 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 1
  store i64 %74, ptr %75, align 8, !tbaa !13
  %76 = load ptr, ptr %5, align 8, !tbaa !63
  %77 = getelementptr inbounds i8, ptr %76, i64 %74
  store i8 0, ptr %77, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %78 = getelementptr inbounds %"struct.std::pair.72", ptr %5, i64 0, i32 1
  invoke void @_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue2ESaIS1_EEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %78, ptr noundef nonnull align 8 dereferenceable(24) %6)
          to label %87 unwind label %79

79:                                               ; preds = %73
  %80 = landingpad { ptr, i32 }
          cleanup
  %81 = load ptr, ptr %5, align 8, !tbaa !63
  %82 = icmp eq ptr %81, %62
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = load i64, ptr %75, align 8, !tbaa !13
  %85 = icmp ult i64 %84, 16
  call void @llvm.assume(i1 %85)
  br label %156

86:                                               ; preds = %79
  call void @_ZdlPv(ptr noundef %81) #26
  br label %156

87:                                               ; preds = %73
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #28
  store ptr %0, ptr %3, align 8, !tbaa !5
  %88 = invoke ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_insert_unique_INSG_11_Alloc_nodeEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_ERKSA_RT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %61, ptr noundef nonnull align 8 dereferenceable(56) %5, ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %89 unwind label %154

89:                                               ; preds = %87
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  %90 = load ptr, ptr %78, align 8, !tbaa !64
  %91 = getelementptr inbounds %"struct.std::pair.72", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !65
  %93 = icmp eq ptr %90, %92
  br i1 %93, label %103, label %94

94:                                               ; preds = %89, %98
  %95 = phi ptr [ %99, %98 ], [ %90, %89 ]
  %96 = load ptr, ptr %95, align 8, !tbaa !9
  %97 = load ptr, ptr %96, align 8
  invoke void %97(ptr noundef nonnull align 8 dereferenceable(104) %95)
          to label %98 unwind label %107

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %95, i64 1
  %100 = icmp eq ptr %99, %92
  br i1 %100, label %101, label %94

101:                                              ; preds = %98
  %102 = load ptr, ptr %78, align 8, !tbaa !64
  br label %103

103:                                              ; preds = %101, %89
  %104 = phi ptr [ %102, %101 ], [ %90, %89 ]
  %105 = icmp eq ptr %104, null
  br i1 %105, label %112, label %106

106:                                              ; preds = %103
  call void @_ZdlPv(ptr noundef nonnull %104) #26
  br label %112

107:                                              ; preds = %94
  %108 = landingpad { ptr, i32 }
          cleanup
  %109 = load ptr, ptr %78, align 8, !tbaa !64
  %110 = icmp eq ptr %109, null
  br i1 %110, label %119, label %111

111:                                              ; preds = %107
  call void @_ZdlPv(ptr noundef nonnull %109) #26
  br label %119

112:                                              ; preds = %106, %103
  %113 = load ptr, ptr %5, align 8, !tbaa !63
  %114 = icmp eq ptr %113, %62
  br i1 %114, label %115, label %118

115:                                              ; preds = %112
  %116 = load i64, ptr %75, align 8, !tbaa !13
  %117 = icmp ult i64 %116, 16
  call void @llvm.assume(i1 %117)
  br label %126

118:                                              ; preds = %112
  call void @_ZdlPv(ptr noundef %113) #26
  br label %126

119:                                              ; preds = %111, %107
  %120 = load ptr, ptr %5, align 8, !tbaa !63
  %121 = icmp eq ptr %120, %62
  br i1 %121, label %122, label %125

122:                                              ; preds = %119
  %123 = load i64, ptr %75, align 8, !tbaa !13
  %124 = icmp ult i64 %123, 16
  call void @llvm.assume(i1 %124)
  br label %156

125:                                              ; preds = %119
  call void @_ZdlPv(ptr noundef %120) #26
  br label %156

126:                                              ; preds = %118, %115
  %127 = load ptr, ptr %6, align 8, !tbaa !64
  %128 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl_data", ptr %6, i64 0, i32 1
  %129 = load ptr, ptr %128, align 8, !tbaa !65
  %130 = icmp eq ptr %127, %129
  br i1 %130, label %140, label %131

131:                                              ; preds = %126, %135
  %132 = phi ptr [ %136, %135 ], [ %127, %126 ]
  %133 = load ptr, ptr %132, align 8, !tbaa !9
  %134 = load ptr, ptr %133, align 8
  invoke void %134(ptr noundef nonnull align 8 dereferenceable(104) %132)
          to label %135 unwind label %144

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %132, i64 1
  %137 = icmp eq ptr %136, %129
  br i1 %137, label %138, label %131

138:                                              ; preds = %135
  %139 = load ptr, ptr %6, align 8, !tbaa !64
  br label %140

140:                                              ; preds = %138, %126
  %141 = phi ptr [ %139, %138 ], [ %127, %126 ]
  %142 = icmp eq ptr %141, null
  br i1 %142, label %151, label %143

143:                                              ; preds = %140
  call void @_ZdlPv(ptr noundef nonnull %141) #26
  br label %151

144:                                              ; preds = %131
  %145 = landingpad { ptr, i32 }
          cleanup
  %146 = load ptr, ptr %6, align 8, !tbaa !64
  %147 = icmp eq ptr %146, null
  br i1 %147, label %149, label %148

148:                                              ; preds = %144
  call void @_ZdlPv(ptr noundef nonnull %146) #26
  br label %149

149:                                              ; preds = %144, %148, %158
  %150 = phi { ptr, i32 } [ %157, %158 ], [ %145, %148 ], [ %145, %144 ]
  resume { ptr, i32 } %150

151:                                              ; preds = %140, %143
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #28
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %5) #28
  br label %159

152:                                              ; preds = %64
  %153 = landingpad { ptr, i32 }
          cleanup
  br label %156

154:                                              ; preds = %87
  %155 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration5GroupEED2Ev(ptr noundef nonnull align 8 dereferenceable(56) %5)
          to label %156 unwind label %162

156:                                              ; preds = %86, %83, %122, %125, %152, %154
  %157 = phi { ptr, i32 } [ %155, %154 ], [ %80, %86 ], [ %80, %83 ], [ %153, %152 ], [ %108, %125 ], [ %108, %122 ]
  invoke void @_ZN25SectionBasedConfiguration5GroupD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %6)
          to label %158 unwind label %162

158:                                              ; preds = %156
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #28
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %5) #28
  br label %149

159:                                              ; preds = %151, %57
  %160 = phi ptr [ %88, %151 ], [ %36, %57 ]
  %161 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %160, i64 0, i32 1, i32 1
  ret ptr %161

162:                                              ; preds = %156, %154
  %163 = landingpad { ptr, i32 }
          catch ptr null
  %164 = extractvalue { ptr, i32 } %163, 0
  call void @__clang_call_terminate(ptr %164) #27
  unreachable
}

declare noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64), ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN25SectionBasedConfiguration9KeyValue1D2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !9
  %2 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  %4 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3, i32 2
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !13
  %9 = icmp ult i64 %8, 16
  tail call void @llvm.assume(i1 %9)
  br label %11

10:                                               ; preds = %1
  tail call void @_ZdlPv(ptr noundef %3) #26
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !63
  %14 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2, i32 2
  %15 = icmp eq ptr %13, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !13
  %19 = icmp ult i64 %18, 16
  tail call void @llvm.assume(i1 %19)
  br label %21

20:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef %13) #26
  br label %21

21:                                               ; preds = %20, %16
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #13

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK25SectionBasedConfiguration8validateEPKc(ptr nocapture noundef nonnull readonly align 8 dereferenceable(416) %0, ptr noundef %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %class.StringTokenizer, align 8
  %4 = alloca %class.PatternMatcher, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.StringTokenizer, align 8
  %7 = alloca %class.PatternMatcher, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::set", align 8
  %11 = alloca %"class.std::__cxx11::basic_string", align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.std::__cxx11::basic_string", align 8
  %14 = alloca %"class.std::vector.36", align 8
  %15 = alloca %"class.std::__cxx11::basic_string", align 8
  %16 = alloca %"class.std::__cxx11::basic_string", align 8
  %17 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !25
  %19 = load ptr, ptr %18, align 8, !tbaa !9
  %20 = getelementptr inbounds ptr, ptr %19, i64 5
  %21 = load ptr, ptr %20, align 8
  %22 = tail call noundef i32 %21(ptr noundef nonnull align 8 dereferenceable(8) %18)
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %70, %2
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %10) #28
  %25 = getelementptr inbounds i8, ptr %10, i64 8
  store i32 0, ptr %25, align 8, !tbaa !17
  %26 = getelementptr inbounds i8, ptr %10, i64 16
  store ptr null, ptr %26, align 8, !tbaa !21
  %27 = getelementptr inbounds i8, ptr %10, i64 24
  store ptr %25, ptr %27, align 8, !tbaa !22
  %28 = getelementptr inbounds i8, ptr %10, i64 32
  store ptr %25, ptr %28, align 8, !tbaa !23
  %29 = getelementptr inbounds i8, ptr %10, i64 40
  store i64 0, ptr %29, align 8, !tbaa !24
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 2
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 1
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 1
  br label %192

34:                                               ; preds = %2, %70
  %35 = phi i32 [ %71, %70 ], [ 0, %2 ]
  %36 = load ptr, ptr %17, align 8, !tbaa !25
  %37 = load ptr, ptr %36, align 8, !tbaa !9
  %38 = getelementptr inbounds ptr, ptr %37, i64 6
  %39 = load ptr, ptr %38, align 8
  %40 = tail call noundef ptr %39(ptr noundef nonnull align 8 dereferenceable(8) %36, i32 noundef %35)
  %41 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %40, ptr noundef nonnull dereferenceable(11) @.str.67) #29
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %34
  %44 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %40, ptr noundef nonnull dereferenceable(7) @.str.68) #29
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %43
  %47 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %40, ptr noundef nonnull dereferenceable(6) @.str.69) #29
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %58, label %49

49:                                               ; preds = %46
  %50 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %40, ptr noundef nonnull dereferenceable(11) @.str.70) #29
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %49
  %53 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %40, ptr noundef nonnull dereferenceable(13) @.str.71) #29
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  %56 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %40, ptr noundef nonnull dereferenceable(15) @.str.72) #29
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %34, %43, %46, %49, %52, %55
  %59 = tail call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %59, ptr noundef nonnull @.str.105, ptr noundef %40)
          to label %60 unwind label %61

60:                                               ; preds = %58
  tail call void @__cxa_throw(ptr nonnull %59, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
  unreachable

61:                                               ; preds = %58
  %62 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_free_exception(ptr %59) #28
  br label %743

63:                                               ; preds = %55
  %64 = load ptr, ptr %17, align 8, !tbaa !25
  %65 = load ptr, ptr %64, align 8, !tbaa !9
  %66 = getelementptr inbounds ptr, ptr %65, i64 7
  %67 = load ptr, ptr %66, align 8
  %68 = tail call noundef i32 %67(ptr noundef nonnull align 8 dereferenceable(8) %64, i32 noundef %35)
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %189, %63
  %71 = add nuw nsw i32 %35, 1
  %72 = load ptr, ptr %17, align 8, !tbaa !25
  %73 = load ptr, ptr %72, align 8, !tbaa !9
  %74 = getelementptr inbounds ptr, ptr %73, i64 5
  %75 = load ptr, ptr %74, align 8
  %76 = tail call noundef i32 %75(ptr noundef nonnull align 8 dereferenceable(8) %72)
  %77 = icmp slt i32 %71, %76
  br i1 %77, label %34, label %24

78:                                               ; preds = %63, %189
  %79 = phi i32 [ %190, %189 ], [ 0, %63 ]
  %80 = load ptr, ptr %17, align 8, !tbaa !25
  %81 = load ptr, ptr %80, align 8, !tbaa !9
  %82 = getelementptr inbounds ptr, ptr %81, i64 8
  %83 = load ptr, ptr %82, align 8
  %84 = tail call noundef nonnull align 8 dereferenceable(8) ptr %83(ptr noundef nonnull align 8 dereferenceable(8) %80, i32 noundef %35, i32 noundef %79)
  %85 = load ptr, ptr %84, align 8, !tbaa !9
  %86 = getelementptr inbounds ptr, ptr %85, i64 2
  %87 = load ptr, ptr %86, align 8
  %88 = tail call noundef ptr %87(ptr noundef nonnull align 8 dereferenceable(8) %84)
  %89 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(10) @.str.73) #29
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %184, label %91

91:                                               ; preds = %78
  %92 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(21) @.str.74) #29
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %184, label %94

94:                                               ; preds = %91
  %95 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(14) @.str.75) #29
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %184, label %97

97:                                               ; preds = %94
  %98 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(13) @.str.76) #29
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %184, label %100

100:                                              ; preds = %97
  %101 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(14) @.str.77) #29
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %184, label %103

103:                                              ; preds = %100
  %104 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(16) @.str.78) #29
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %184, label %106

106:                                              ; preds = %103
  %107 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(12) @.str.79) #29
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %184, label %109

109:                                              ; preds = %106
  %110 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(20) @.str.80) #29
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %184, label %112

112:                                              ; preds = %109
  %113 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(16) @.str.81) #29
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %184, label %115

115:                                              ; preds = %112
  %116 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(17) @.str.82) #29
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %184, label %118

118:                                              ; preds = %115
  %119 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(17) @.str.83) #29
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %184, label %121

121:                                              ; preds = %118
  %122 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(18) @.str.84) #29
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %184, label %124

124:                                              ; preds = %121
  %125 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(24) @.str.85) #29
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %184, label %127

127:                                              ; preds = %124
  %128 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(20) @.str.86) #29
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %184, label %130

130:                                              ; preds = %127
  %131 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(19) @.str.87) #29
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %184, label %133

133:                                              ; preds = %130
  %134 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(16) @.str.88) #29
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %184, label %136

136:                                              ; preds = %133
  %137 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(12) @.str.89) #29
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %184, label %139

139:                                              ; preds = %136
  %140 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(23) @.str.90) #29
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %184, label %142

142:                                              ; preds = %139
  %143 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(11) @.str.91) #29
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %184, label %145

145:                                              ; preds = %142
  %146 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(18) @.str.92) #29
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %184, label %148

148:                                              ; preds = %145
  %149 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(19) @.str.93) #29
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %184, label %151

151:                                              ; preds = %148
  %152 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(13) @.str.94) #29
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %184, label %154

154:                                              ; preds = %151
  %155 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(12) @.str.95) #29
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %184, label %157

157:                                              ; preds = %154
  %158 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(14) @.str.96) #29
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %184, label %160

160:                                              ; preds = %157
  %161 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(18) @.str.97) #29
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %184, label %163

163:                                              ; preds = %160
  %164 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(13) @.str.98) #29
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %184, label %166

166:                                              ; preds = %163
  %167 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(15) @.str.99) #29
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %184, label %169

169:                                              ; preds = %166
  %170 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(15) @.str.100) #29
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %184, label %172

172:                                              ; preds = %169
  %173 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(20) @.str.101) #29
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %172
  %176 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(17) @.str.102) #29
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %184, label %178

178:                                              ; preds = %175
  %179 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(15) @.str.103) #29
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %184, label %181

181:                                              ; preds = %178
  %182 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %88, ptr noundef nonnull dereferenceable(17) @.str.104) #29
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %189

184:                                              ; preds = %118, %121, %124, %127, %130, %133, %136, %139, %142, %145, %148, %151, %154, %157, %160, %163, %166, %169, %172, %175, %178, %181, %78, %91, %94, %97, %100, %103, %106, %109, %112, %115
  %185 = tail call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %185, ptr noundef nonnull @.str.106, ptr noundef %88)
          to label %186 unwind label %187

186:                                              ; preds = %184
  tail call void @__cxa_throw(ptr nonnull %185, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
  unreachable

187:                                              ; preds = %184
  %188 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_free_exception(ptr %185) #28
  br label %743

189:                                              ; preds = %181
  %190 = add nuw nsw i32 %79, 1
  %191 = icmp eq i32 %190, %68
  br i1 %191, label %70, label %78

192:                                              ; preds = %402, %24
  %193 = phi i32 [ 0, %24 ], [ %403, %402 ]
  %194 = load ptr, ptr %17, align 8, !tbaa !25
  %195 = load ptr, ptr %194, align 8, !tbaa !9
  %196 = getelementptr inbounds ptr, ptr %195, i64 5
  %197 = load ptr, ptr %196, align 8
  %198 = invoke noundef i32 %197(ptr noundef nonnull align 8 dereferenceable(8) %194)
          to label %199 unwind label %210

199:                                              ; preds = %192
  %200 = icmp slt i32 %193, %198
  br i1 %200, label %212, label %201

201:                                              ; preds = %199
  %202 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 2
  %203 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 1
  %204 = icmp eq ptr %1, null
  %205 = select i1 %204, ptr @.str.14, ptr %1
  %206 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 2
  %207 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 1
  %208 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 2
  %209 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 1
  br label %404

210:                                              ; preds = %192
  %211 = landingpad { ptr, i32 }
          cleanup
  br label %739

212:                                              ; preds = %199
  %213 = load ptr, ptr %17, align 8, !tbaa !25
  %214 = load ptr, ptr %213, align 8, !tbaa !9
  %215 = getelementptr inbounds ptr, ptr %214, i64 6
  %216 = load ptr, ptr %215, align 8
  %217 = invoke noundef ptr %216(ptr noundef nonnull align 8 dereferenceable(8) %213, i32 noundef %193)
          to label %218 unwind label %221

218:                                              ; preds = %212
  %219 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %217, ptr noundef nonnull dereferenceable(8) @.str.17) #29
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %402, label %223

221:                                              ; preds = %212
  %222 = landingpad { ptr, i32 }
          cleanup
  br label %739

223:                                              ; preds = %218
  %224 = call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %217, ptr noundef nonnull dereferenceable(8) @.str.18, i64 noundef 7) #29
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %232, label %226

226:                                              ; preds = %223
  %227 = call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %227, ptr noundef nonnull @.str.107, ptr noundef %217)
          to label %358 unwind label %228

228:                                              ; preds = %226
  %229 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %227) #28
  br label %739

230:                                              ; preds = %358
  %231 = landingpad { ptr, i32 }
          cleanup
  br label %739

232:                                              ; preds = %223
  %233 = getelementptr inbounds i8, ptr %217, i64 7
  %234 = load i8, ptr %233, align 1, !tbaa !16
  %235 = icmp eq i8 %234, 32
  br i1 %235, label %236, label %240

236:                                              ; preds = %232
  %237 = call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %237, ptr noundef nonnull @.str.108, ptr noundef nonnull %217)
          to label %358 unwind label %238

238:                                              ; preds = %236
  %239 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %237) #28
  br label %739

240:                                              ; preds = %232
  %241 = zext i8 %234 to i32
  %242 = call i32 @isalpha(i32 noundef %241) #29
  %243 = icmp ne i32 %242, 0
  %244 = icmp eq i8 %234, 95
  %245 = or i1 %244, %243
  br i1 %245, label %246, label %248

246:                                              ; preds = %240
  %247 = icmp eq i8 %234, 0
  br i1 %247, label %252, label %264

248:                                              ; preds = %240
  %249 = call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %249, ptr noundef nonnull @.str.109, ptr noundef nonnull %217)
          to label %358 unwind label %250

250:                                              ; preds = %248
  %251 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %249) #28
  br label %739

252:                                              ; preds = %283, %246
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %11) #28
  store ptr %30, ptr %11, align 8, !tbaa !11
  %253 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %233) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #28
  store i64 %253, ptr %9, align 8, !tbaa !87
  %254 = icmp ugt i64 %253, 15
  br i1 %254, label %255, label %259

255:                                              ; preds = %252
  %256 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %11, ptr noundef nonnull align 8 dereferenceable(8) %9, i64 noundef 0)
          to label %257 unwind label %361

257:                                              ; preds = %255
  store ptr %256, ptr %11, align 8, !tbaa !63
  %258 = load i64, ptr %9, align 8, !tbaa !87
  store i64 %258, ptr %30, align 8, !tbaa !16
  br label %259

259:                                              ; preds = %257, %252
  %260 = phi ptr [ %256, %257 ], [ %30, %252 ]
  switch i64 %253, label %263 [
    i64 1, label %261
    i64 0, label %287
  ]

261:                                              ; preds = %259
  %262 = load i8, ptr %233, align 1, !tbaa !16
  store i8 %262, ptr %260, align 1, !tbaa !16
  br label %287

263:                                              ; preds = %259
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %260, ptr nonnull align 1 %233, i64 %253, i1 false)
  br label %287

264:                                              ; preds = %246, %283
  %265 = phi i8 [ %285, %283 ], [ %234, %246 ]
  %266 = phi ptr [ %284, %283 ], [ %233, %246 ]
  %267 = zext i8 %265 to i32
  %268 = call i32 @isalnum(i32 noundef %267) #29
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %283

270:                                              ; preds = %264
  %271 = sext i8 %265 to i32
  %272 = call ptr @memchr(ptr noundef nonnull dereferenceable(1) @.str.110, i32 %271, i64 4)
  %273 = icmp eq ptr %272, null
  br i1 %273, label %274, label %283

274:                                              ; preds = %270
  %275 = call ptr @__cxa_allocate_exception(i64 128) #28
  %276 = load i8, ptr %266, align 1, !tbaa !16
  %277 = sext i8 %276 to i32
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %275, ptr noundef nonnull @.str.111, ptr noundef %217, i32 noundef %277)
          to label %278 unwind label %281

278:                                              ; preds = %274
  invoke void @__cxa_throw(ptr nonnull %275, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %748 unwind label %279

279:                                              ; preds = %278
  %280 = landingpad { ptr, i32 }
          cleanup
  br label %739

281:                                              ; preds = %274
  %282 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %275) #28
  br label %739

283:                                              ; preds = %264, %270
  %284 = getelementptr inbounds i8, ptr %266, i64 1
  %285 = load i8, ptr %284, align 1, !tbaa !16
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %252, label %264

287:                                              ; preds = %263, %261, %259
  %288 = load i64, ptr %9, align 8, !tbaa !87
  store i64 %288, ptr %31, align 8, !tbaa !13
  %289 = load ptr, ptr %11, align 8, !tbaa !63
  %290 = getelementptr inbounds i8, ptr %289, i64 %288
  store i8 0, ptr %290, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #28
  %291 = load ptr, ptr %26, align 8, !tbaa !21
  %292 = icmp eq ptr %291, null
  %293 = load ptr, ptr %11, align 8
  br i1 %292, label %347, label %294

294:                                              ; preds = %287
  %295 = load i64, ptr %31, align 8, !tbaa !13
  br label %296

296:                                              ; preds = %313, %294
  %297 = phi ptr [ %291, %294 ], [ %320, %313 ]
  %298 = phi ptr [ %25, %294 ], [ %318, %313 ]
  %299 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %297, i64 0, i32 1, i32 1
  %300 = load i64, ptr %299, align 8, !tbaa !13
  %301 = call i64 @llvm.umin.i64(i64 %295, i64 %300)
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %308, label %303

303:                                              ; preds = %296
  %304 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %297, i64 0, i32 1
  %305 = load ptr, ptr %304, align 8, !tbaa !63
  %306 = call i32 @memcmp(ptr noundef %305, ptr noundef %293, i64 noundef %301) #28
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %313

308:                                              ; preds = %303, %296
  %309 = sub i64 %300, %295
  %310 = call i64 @llvm.smax.i64(i64 %309, i64 -2147483648)
  %311 = call i64 @llvm.smin.i64(i64 %310, i64 2147483647)
  %312 = trunc i64 %311 to i32
  br label %313

313:                                              ; preds = %308, %303
  %314 = phi i32 [ %306, %303 ], [ %312, %308 ]
  %315 = icmp slt i32 %314, 0
  %316 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %297, i64 0, i32 3
  %317 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %297, i64 0, i32 2
  %318 = select i1 %315, ptr %298, ptr %297
  %319 = select i1 %315, ptr %316, ptr %317
  %320 = load ptr, ptr %319, align 8, !tbaa !5
  %321 = icmp eq ptr %320, null
  br i1 %321, label %322, label %296

322:                                              ; preds = %313
  %323 = icmp eq ptr %318, %25
  br i1 %323, label %347, label %324

324:                                              ; preds = %322
  %325 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %297, i64 0, i32 1, i32 1
  %326 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %298, i64 0, i32 1, i32 1
  %327 = select i1 %315, ptr %326, ptr %325
  %328 = load i64, ptr %327, align 8, !tbaa !13
  %329 = call i64 @llvm.umin.i64(i64 %328, i64 %295)
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %338, label %331

331:                                              ; preds = %324
  %332 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %298, i64 0, i32 1
  %333 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %297, i64 0, i32 1
  %334 = select i1 %315, ptr %332, ptr %333
  %335 = load ptr, ptr %334, align 8, !tbaa !63
  %336 = call i32 @memcmp(ptr noundef %293, ptr noundef %335, i64 noundef %329) #28
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %343

338:                                              ; preds = %331, %324
  %339 = sub i64 %295, %328
  %340 = call i64 @llvm.smax.i64(i64 %339, i64 -2147483648)
  %341 = call i64 @llvm.smin.i64(i64 %340, i64 2147483647)
  %342 = trunc i64 %341 to i32
  br label %343

343:                                              ; preds = %338, %331
  %344 = phi i32 [ %336, %331 ], [ %342, %338 ]
  %345 = icmp slt i32 %344, 0
  %346 = select i1 %345, ptr %25, ptr %318
  br label %347

347:                                              ; preds = %287, %322, %343
  %348 = phi ptr [ %25, %322 ], [ %25, %287 ], [ %346, %343 ]
  %349 = icmp eq ptr %348, %25
  %350 = icmp eq ptr %293, %30
  br i1 %350, label %351, label %354

351:                                              ; preds = %347
  %352 = load i64, ptr %31, align 8, !tbaa !13
  %353 = icmp ult i64 %352, 16
  call void @llvm.assume(i1 %353)
  br label %355

354:                                              ; preds = %347
  call void @_ZdlPv(ptr noundef %293) #26
  br label %355

355:                                              ; preds = %354, %351
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #28
  br i1 %349, label %365, label %356

356:                                              ; preds = %355
  %357 = call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %357, ptr noundef nonnull @.str.112, ptr noundef nonnull %233, ptr noundef %217)
          to label %358 unwind label %363

358:                                              ; preds = %226, %356, %248, %236
  %359 = phi ptr [ %237, %236 ], [ %249, %248 ], [ %357, %356 ], [ %227, %226 ]
  invoke void @__cxa_throw(ptr nonnull %359, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %360 unwind label %230

360:                                              ; preds = %358
  unreachable

361:                                              ; preds = %255
  %362 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #28
  br label %739

363:                                              ; preds = %356
  %364 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %357) #28
  br label %739

365:                                              ; preds = %355
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #28
  store ptr %32, ptr %12, align 8, !tbaa !11
  %366 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %233) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #28
  store i64 %366, ptr %8, align 8, !tbaa !87
  %367 = icmp ugt i64 %366, 15
  br i1 %367, label %368, label %372

368:                                              ; preds = %365
  %369 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef nonnull align 8 dereferenceable(8) %8, i64 noundef 0)
          to label %370 unwind label %390

370:                                              ; preds = %368
  store ptr %369, ptr %12, align 8, !tbaa !63
  %371 = load i64, ptr %8, align 8, !tbaa !87
  store i64 %371, ptr %32, align 8, !tbaa !16
  br label %372

372:                                              ; preds = %370, %365
  %373 = phi ptr [ %369, %370 ], [ %32, %365 ]
  switch i64 %366, label %376 [
    i64 1, label %374
    i64 0, label %377
  ]

374:                                              ; preds = %372
  %375 = load i8, ptr %233, align 1, !tbaa !16
  store i8 %375, ptr %373, align 1, !tbaa !16
  br label %377

376:                                              ; preds = %372
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %373, ptr nonnull align 1 %233, i64 %366, i1 false)
  br label %377

377:                                              ; preds = %376, %374, %372
  %378 = load i64, ptr %8, align 8, !tbaa !87
  store i64 %378, ptr %33, align 8, !tbaa !13
  %379 = load ptr, ptr %12, align 8, !tbaa !63
  %380 = getelementptr inbounds i8, ptr %379, i64 %378
  store i8 0, ptr %380, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #28
  %381 = invoke { ptr, i8 } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueERKS5_(ptr noundef nonnull align 8 dereferenceable(48) %10, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %382 unwind label %392

382:                                              ; preds = %377
  %383 = load ptr, ptr %12, align 8, !tbaa !63
  %384 = icmp eq ptr %383, %32
  br i1 %384, label %385, label %388

385:                                              ; preds = %382
  %386 = load i64, ptr %33, align 8, !tbaa !13
  %387 = icmp ult i64 %386, 16
  call void @llvm.assume(i1 %387)
  br label %389

388:                                              ; preds = %382
  call void @_ZdlPv(ptr noundef %383) #26
  br label %389

389:                                              ; preds = %388, %385
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #28
  br label %402

390:                                              ; preds = %368
  %391 = landingpad { ptr, i32 }
          cleanup
  br label %400

392:                                              ; preds = %377
  %393 = landingpad { ptr, i32 }
          cleanup
  %394 = load ptr, ptr %12, align 8, !tbaa !63
  %395 = icmp eq ptr %394, %32
  br i1 %395, label %396, label %399

396:                                              ; preds = %392
  %397 = load i64, ptr %33, align 8, !tbaa !13
  %398 = icmp ult i64 %397, 16
  call void @llvm.assume(i1 %398)
  br label %400

399:                                              ; preds = %392
  call void @_ZdlPv(ptr noundef %394) #26
  br label %400

400:                                              ; preds = %399, %396, %390
  %401 = phi { ptr, i32 } [ %391, %390 ], [ %393, %396 ], [ %393, %399 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #28
  br label %739

402:                                              ; preds = %218, %389
  %403 = add nuw nsw i32 %193, 1
  br label %192

404:                                              ; preds = %201, %431
  %405 = phi i32 [ %432, %431 ], [ 0, %201 ]
  %406 = load ptr, ptr %17, align 8, !tbaa !25
  %407 = load ptr, ptr %406, align 8, !tbaa !9
  %408 = getelementptr inbounds ptr, ptr %407, i64 5
  %409 = load ptr, ptr %408, align 8
  %410 = invoke noundef i32 %409(ptr noundef nonnull align 8 dereferenceable(8) %406)
          to label %411 unwind label %415

411:                                              ; preds = %404
  %412 = icmp slt i32 %405, %410
  br i1 %412, label %417, label %413

413:                                              ; preds = %411
  %414 = load ptr, ptr %26, align 8, !tbaa !21
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %10, ptr noundef %414)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %10) #28
  ret void

415:                                              ; preds = %404
  %416 = landingpad { ptr, i32 }
          cleanup
  br label %739

417:                                              ; preds = %411
  %418 = load ptr, ptr %17, align 8, !tbaa !25
  %419 = load ptr, ptr %418, align 8, !tbaa !9
  %420 = getelementptr inbounds ptr, ptr %419, i64 6
  %421 = load ptr, ptr %420, align 8
  %422 = invoke noundef ptr %421(ptr noundef nonnull align 8 dereferenceable(8) %418, i32 noundef %405)
          to label %423 unwind label %433

423:                                              ; preds = %417
  %424 = load ptr, ptr %17, align 8, !tbaa !25
  %425 = load ptr, ptr %424, align 8, !tbaa !9
  %426 = getelementptr inbounds ptr, ptr %425, i64 7
  %427 = load ptr, ptr %426, align 8
  %428 = invoke noundef i32 %427(ptr noundef nonnull align 8 dereferenceable(8) %424, i32 noundef %405)
          to label %429 unwind label %435

429:                                              ; preds = %423
  %430 = icmp sgt i32 %428, 0
  br i1 %430, label %437, label %431

431:                                              ; preds = %736, %429
  %432 = add nuw nsw i32 %405, 1
  br label %404

433:                                              ; preds = %417
  %434 = landingpad { ptr, i32 }
          cleanup
  br label %739

435:                                              ; preds = %423
  %436 = landingpad { ptr, i32 }
          cleanup
  br label %739

437:                                              ; preds = %429, %736
  %438 = phi i32 [ %737, %736 ], [ 0, %429 ]
  %439 = load ptr, ptr %17, align 8, !tbaa !25
  %440 = load ptr, ptr %439, align 8, !tbaa !9
  %441 = getelementptr inbounds ptr, ptr %440, i64 8
  %442 = load ptr, ptr %441, align 8
  %443 = invoke noundef nonnull align 8 dereferenceable(8) ptr %442(ptr noundef nonnull align 8 dereferenceable(8) %439, i32 noundef %405, i32 noundef %438)
          to label %444 unwind label %486

444:                                              ; preds = %437
  %445 = load ptr, ptr %443, align 8, !tbaa !9
  %446 = getelementptr inbounds ptr, ptr %445, i64 2
  %447 = load ptr, ptr %446, align 8
  %448 = invoke noundef ptr %447(ptr noundef nonnull align 8 dereferenceable(8) %443)
          to label %449 unwind label %486

449:                                              ; preds = %444
  %450 = call noundef ptr @strchr(ptr noundef nonnull dereferenceable(1) %448, i32 noundef 46) #29
  %451 = icmp eq ptr %450, null
  br i1 %451, label %452, label %652

452:                                              ; preds = %449
  %453 = invoke noundef zeroext i1 @_ZN14PatternMatcher17containsWildcardsEPKc(ptr noundef %448)
          to label %454 unwind label %488

454:                                              ; preds = %452
  br i1 %453, label %652, label %455

455:                                              ; preds = %454
  %456 = invoke noundef ptr @_ZN25SectionBasedConfiguration18lookupConfigOptionEPKc(ptr noundef %448)
          to label %457 unwind label %490

457:                                              ; preds = %455
  %458 = icmp eq ptr %456, null
  br i1 %458, label %459, label %501

459:                                              ; preds = %457
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %6) #28
  invoke void @_ZN15StringTokenizerC1EPKcS1_(ptr noundef nonnull align 8 dereferenceable(48) %6, ptr noundef nonnull %205, ptr noundef null)
          to label %460 unwind label %490

460:                                              ; preds = %459, %469
  %461 = invoke noundef zeroext i1 @_ZN15StringTokenizer13hasMoreTokensEv(ptr noundef nonnull align 8 dereferenceable(48) %6)
          to label %462 unwind label %470

462:                                              ; preds = %460
  br i1 %461, label %463, label %478

463:                                              ; preds = %462
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %7) #28
  %464 = invoke noundef ptr @_ZN15StringTokenizer9nextTokenEv(ptr noundef nonnull align 8 dereferenceable(48) %6)
          to label %465 unwind label %472

465:                                              ; preds = %463
  invoke void @_ZN14PatternMatcherC1EPKcbbb(ptr noundef nonnull align 8 dereferenceable(64) %7, ptr noundef %464, i1 noundef zeroext true, i1 noundef zeroext true, i1 noundef zeroext true)
          to label %466 unwind label %472

466:                                              ; preds = %465
  %467 = invoke noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64) %7, ptr noundef %448)
          to label %468 unwind label %474

468:                                              ; preds = %466
  invoke void @_ZN14PatternMatcherD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %7)
          to label %469 unwind label %472

469:                                              ; preds = %468
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %7) #28
  br i1 %467, label %478, label %460

470:                                              ; preds = %460
  %471 = landingpad { ptr, i32 }
          cleanup
  br label %479

472:                                              ; preds = %468, %465, %463
  %473 = landingpad { ptr, i32 }
          cleanup
  br label %476

474:                                              ; preds = %466
  %475 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN14PatternMatcherD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %7)
          to label %476 unwind label %482

476:                                              ; preds = %474, %472
  %477 = phi { ptr, i32 } [ %473, %472 ], [ %475, %474 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %7) #28
  br label %479

478:                                              ; preds = %469, %462
  invoke void @_ZN15StringTokenizerD1Ev(ptr noundef nonnull align 8 dereferenceable(48) %6)
          to label %485 unwind label %490

479:                                              ; preds = %476, %470
  %480 = phi { ptr, i32 } [ %477, %476 ], [ %471, %470 ]
  invoke void @_ZN15StringTokenizerD1Ev(ptr noundef nonnull align 8 dereferenceable(48) %6)
          to label %481 unwind label %482

481:                                              ; preds = %479
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %6) #28
  br label %739

482:                                              ; preds = %479, %474
  %483 = landingpad { ptr, i32 }
          catch ptr null
  %484 = extractvalue { ptr, i32 } %483, 0
  call void @__clang_call_terminate(ptr %484) #27
  unreachable

485:                                              ; preds = %478
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %6) #28
  br i1 %461, label %736, label %494

486:                                              ; preds = %444, %437
  %487 = landingpad { ptr, i32 }
          cleanup
  br label %739

488:                                              ; preds = %452
  %489 = landingpad { ptr, i32 }
          cleanup
  br label %739

490:                                              ; preds = %455, %520, %459, %478
  %491 = landingpad { ptr, i32 }
          cleanup
  br label %739

492:                                              ; preds = %496
  %493 = landingpad { ptr, i32 }
          cleanup
  br label %739

494:                                              ; preds = %485
  %495 = call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %495, ptr noundef nonnull @.str.113, ptr noundef %448)
          to label %496 unwind label %499

496:                                              ; preds = %532, %516, %505, %494
  %497 = phi ptr [ %495, %494 ], [ %506, %505 ], [ %517, %516 ], [ %533, %532 ]
  invoke void @__cxa_throw(ptr nonnull %497, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %498 unwind label %492

498:                                              ; preds = %496
  unreachable

499:                                              ; preds = %494
  %500 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %495) #28
  br label %739

501:                                              ; preds = %457
  %502 = getelementptr inbounds %class.cConfigOption, ptr %456, i64 0, i32 1
  %503 = load i8, ptr %502, align 4, !tbaa !68, !range !76, !noundef !77
  %504 = icmp eq i8 %503, 0
  br i1 %504, label %509, label %505

505:                                              ; preds = %501
  %506 = call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %506, ptr noundef nonnull @.str.114, ptr noundef %448, ptr noundef %448)
          to label %496 unwind label %507

507:                                              ; preds = %505
  %508 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %506) #28
  br label %739

509:                                              ; preds = %501
  %510 = getelementptr inbounds %class.cConfigOption, ptr %456, i64 0, i32 2
  %511 = load i8, ptr %510, align 1, !tbaa !221, !range !76, !noundef !77
  %512 = icmp eq i8 %511, 0
  br i1 %512, label %520, label %513

513:                                              ; preds = %509
  %514 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %422, ptr noundef nonnull dereferenceable(8) @.str.17) #29
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %520, label %516

516:                                              ; preds = %513
  %517 = call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %517, ptr noundef nonnull @.str.115, ptr noundef %448)
          to label %496 unwind label %518

518:                                              ; preds = %516
  %519 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %517) #28
  br label %739

520:                                              ; preds = %513, %509
  %521 = load ptr, ptr @CFGID_EXTENDS, align 8, !tbaa !5
  %522 = load ptr, ptr %521, align 8, !tbaa !9
  %523 = getelementptr inbounds ptr, ptr %522, i64 6
  %524 = load ptr, ptr %523, align 8
  %525 = invoke noundef ptr %524(ptr noundef nonnull align 8 dereferenceable(20) %521)
          to label %526 unwind label %490

526:                                              ; preds = %520
  %527 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %448, ptr noundef nonnull dereferenceable(1) %525) #29
  %528 = icmp eq i32 %527, 0
  br i1 %528, label %529, label %736

529:                                              ; preds = %526
  %530 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %422, ptr noundef nonnull dereferenceable(8) @.str.17) #29
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %536

532:                                              ; preds = %529
  %533 = call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %533, ptr noundef nonnull @.str.116)
          to label %496 unwind label %534

534:                                              ; preds = %532
  %535 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %533) #28
  br label %739

536:                                              ; preds = %529
  %537 = load ptr, ptr %17, align 8, !tbaa !25
  %538 = load ptr, ptr %537, align 8, !tbaa !9
  %539 = getelementptr inbounds ptr, ptr %538, i64 8
  %540 = load ptr, ptr %539, align 8
  %541 = invoke noundef nonnull align 8 dereferenceable(8) ptr %540(ptr noundef nonnull align 8 dereferenceable(8) %537, i32 noundef %405, i32 noundef %438)
          to label %542 unwind label %635

542:                                              ; preds = %536
  %543 = load ptr, ptr %541, align 8, !tbaa !9
  %544 = getelementptr inbounds ptr, ptr %543, i64 3
  %545 = load ptr, ptr %544, align 8
  %546 = invoke noundef ptr %545(ptr noundef nonnull align 8 dereferenceable(8) %541)
          to label %547 unwind label %635

547:                                              ; preds = %542
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #28
  store ptr %202, ptr %13, align 8, !tbaa !11
  %548 = icmp eq ptr %546, null
  br i1 %548, label %549, label %551

549:                                              ; preds = %547
  invoke void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
          to label %550 unwind label %641

550:                                              ; preds = %549
  unreachable

551:                                              ; preds = %547
  %552 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %546) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #28
  store i64 %552, ptr %5, align 8, !tbaa !87
  %553 = icmp ugt i64 %552, 15
  br i1 %553, label %554, label %558

554:                                              ; preds = %551
  %555 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(8) %5, i64 noundef 0)
          to label %556 unwind label %639

556:                                              ; preds = %554
  store ptr %555, ptr %13, align 8, !tbaa !63
  %557 = load i64, ptr %5, align 8, !tbaa !87
  store i64 %557, ptr %202, align 8, !tbaa !16
  br label %558

558:                                              ; preds = %556, %551
  %559 = phi ptr [ %555, %556 ], [ %202, %551 ]
  switch i64 %552, label %562 [
    i64 1, label %560
    i64 0, label %563
  ]

560:                                              ; preds = %558
  %561 = load i8, ptr %546, align 1, !tbaa !16
  store i8 %561, ptr %559, align 1, !tbaa !16
  br label %563

562:                                              ; preds = %558
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %559, ptr nonnull align 1 %546, i64 %552, i1 false)
  br label %563

563:                                              ; preds = %562, %560, %558
  %564 = load i64, ptr %5, align 8, !tbaa !87
  store i64 %564, ptr %203, align 8, !tbaa !13
  %565 = load ptr, ptr %13, align 8, !tbaa !63
  %566 = getelementptr inbounds i8, ptr %565, i64 %564
  store i8 0, ptr %566, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #28
  %567 = load ptr, ptr %26, align 8, !tbaa !21
  %568 = icmp eq ptr %567, null
  %569 = load ptr, ptr %13, align 8
  br i1 %568, label %623, label %570

570:                                              ; preds = %563
  %571 = load i64, ptr %203, align 8, !tbaa !13
  br label %572

572:                                              ; preds = %589, %570
  %573 = phi ptr [ %567, %570 ], [ %596, %589 ]
  %574 = phi ptr [ %25, %570 ], [ %594, %589 ]
  %575 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %573, i64 0, i32 1, i32 1
  %576 = load i64, ptr %575, align 8, !tbaa !13
  %577 = call i64 @llvm.umin.i64(i64 %571, i64 %576)
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %584, label %579

579:                                              ; preds = %572
  %580 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %573, i64 0, i32 1
  %581 = load ptr, ptr %580, align 8, !tbaa !63
  %582 = call i32 @memcmp(ptr noundef %581, ptr noundef %569, i64 noundef %577) #28
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %584, label %589

584:                                              ; preds = %579, %572
  %585 = sub i64 %576, %571
  %586 = call i64 @llvm.smax.i64(i64 %585, i64 -2147483648)
  %587 = call i64 @llvm.smin.i64(i64 %586, i64 2147483647)
  %588 = trunc i64 %587 to i32
  br label %589

589:                                              ; preds = %584, %579
  %590 = phi i32 [ %582, %579 ], [ %588, %584 ]
  %591 = icmp slt i32 %590, 0
  %592 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %573, i64 0, i32 3
  %593 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %573, i64 0, i32 2
  %594 = select i1 %591, ptr %574, ptr %573
  %595 = select i1 %591, ptr %592, ptr %593
  %596 = load ptr, ptr %595, align 8, !tbaa !5
  %597 = icmp eq ptr %596, null
  br i1 %597, label %598, label %572

598:                                              ; preds = %589
  %599 = icmp eq ptr %594, %25
  br i1 %599, label %623, label %600

600:                                              ; preds = %598
  %601 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %573, i64 0, i32 1, i32 1
  %602 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %574, i64 0, i32 1, i32 1
  %603 = select i1 %591, ptr %602, ptr %601
  %604 = load i64, ptr %603, align 8, !tbaa !13
  %605 = call i64 @llvm.umin.i64(i64 %604, i64 %571)
  %606 = icmp eq i64 %605, 0
  br i1 %606, label %614, label %607

607:                                              ; preds = %600
  %608 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %574, i64 0, i32 1
  %609 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %573, i64 0, i32 1
  %610 = select i1 %591, ptr %608, ptr %609
  %611 = load ptr, ptr %610, align 8, !tbaa !63
  %612 = call i32 @memcmp(ptr noundef %569, ptr noundef %611, i64 noundef %605) #28
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %614, label %619

614:                                              ; preds = %607, %600
  %615 = sub i64 %571, %604
  %616 = call i64 @llvm.smax.i64(i64 %615, i64 -2147483648)
  %617 = call i64 @llvm.smin.i64(i64 %616, i64 2147483647)
  %618 = trunc i64 %617 to i32
  br label %619

619:                                              ; preds = %614, %607
  %620 = phi i32 [ %612, %607 ], [ %618, %614 ]
  %621 = icmp slt i32 %620, 0
  %622 = select i1 %621, ptr %25, ptr %594
  br label %623

623:                                              ; preds = %563, %598, %619
  %624 = phi ptr [ %25, %598 ], [ %25, %563 ], [ %622, %619 ]
  %625 = icmp eq ptr %624, %25
  %626 = icmp eq ptr %569, %202
  br i1 %626, label %627, label %630

627:                                              ; preds = %623
  %628 = load i64, ptr %203, align 8, !tbaa !13
  %629 = icmp ult i64 %628, 16
  call void @llvm.assume(i1 %629)
  br label %631

630:                                              ; preds = %623
  call void @_ZdlPv(ptr noundef %569) #26
  br label %631

631:                                              ; preds = %630, %627
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #28
  br i1 %625, label %632, label %647

632:                                              ; preds = %631
  %633 = call ptr @__cxa_allocate_exception(i64 128) #28
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %633, ptr noundef nonnull @.str.19, ptr noundef nonnull %546)
          to label %634 unwind label %645

634:                                              ; preds = %632
  invoke void @__cxa_throw(ptr nonnull %633, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %748 unwind label %637

635:                                              ; preds = %536, %542, %647
  %636 = landingpad { ptr, i32 }
          cleanup
  br label %739

637:                                              ; preds = %634
  %638 = landingpad { ptr, i32 }
          cleanup
  br label %739

639:                                              ; preds = %554
  %640 = landingpad { ptr, i32 }
          cleanup
  br label %643

641:                                              ; preds = %549
  %642 = landingpad { ptr, i32 }
          cleanup
  br label %643

643:                                              ; preds = %641, %639
  %644 = phi { ptr, i32 } [ %640, %639 ], [ %642, %641 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #28
  br label %739

645:                                              ; preds = %632
  %646 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %633) #28
  br label %739

647:                                              ; preds = %631
  invoke void @_ZNK25SectionBasedConfiguration19resolveSectionChainEPKc(ptr nonnull sret(%"class.std::vector.36") align 8 %14, ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %422)
          to label %648 unwind label %635

648:                                              ; preds = %647
  %649 = load ptr, ptr %14, align 8, !tbaa !95
  %650 = icmp eq ptr %649, null
  br i1 %650, label %736, label %651

651:                                              ; preds = %648
  call void @_ZdlPv(ptr noundef nonnull %649) #26
  br label %736

652:                                              ; preds = %454, %449
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #28
  store ptr %206, ptr %15, align 8, !tbaa !11
  store i64 0, ptr %207, align 8, !tbaa !13
  store i8 0, ptr %206, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %16) #28
  store ptr %208, ptr %16, align 8, !tbaa !11
  store i64 0, ptr %209, align 8, !tbaa !13
  store i8 0, ptr %208, align 8, !tbaa !16
  invoke void @_ZN25SectionBasedConfiguration8splitKeyEPKcRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_(ptr noundef %448, ptr noundef nonnull align 8 dereferenceable(32) %15, ptr noundef nonnull align 8 dereferenceable(32) %16)
          to label %653 unwind label %689

653:                                              ; preds = %652
  %654 = load ptr, ptr %16, align 8, !tbaa !63
  %655 = call noundef ptr @strchr(ptr noundef nonnull dereferenceable(1) %654, i32 noundef 45) #29
  %656 = icmp eq ptr %655, null
  br i1 %656, label %705, label %657

657:                                              ; preds = %653
  %658 = invoke noundef ptr @_ZN25SectionBasedConfiguration18lookupConfigOptionEPKc(ptr noundef %654)
          to label %659 unwind label %691

659:                                              ; preds = %657
  %660 = icmp eq ptr %658, null
  br i1 %660, label %661, label %695

661:                                              ; preds = %659
  %662 = load ptr, ptr %16, align 8, !tbaa !63
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #28
  invoke void @_ZN15StringTokenizerC1EPKcS1_(ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull %205, ptr noundef null)
          to label %663 unwind label %691

663:                                              ; preds = %661, %672
  %664 = invoke noundef zeroext i1 @_ZN15StringTokenizer13hasMoreTokensEv(ptr noundef nonnull align 8 dereferenceable(48) %3)
          to label %665 unwind label %673

665:                                              ; preds = %663
  br i1 %664, label %666, label %681

666:                                              ; preds = %665
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %4) #28
  %667 = invoke noundef ptr @_ZN15StringTokenizer9nextTokenEv(ptr noundef nonnull align 8 dereferenceable(48) %3)
          to label %668 unwind label %675

668:                                              ; preds = %666
  invoke void @_ZN14PatternMatcherC1EPKcbbb(ptr noundef nonnull align 8 dereferenceable(64) %4, ptr noundef %667, i1 noundef zeroext true, i1 noundef zeroext true, i1 noundef zeroext true)
          to label %669 unwind label %675

669:                                              ; preds = %668
  %670 = invoke noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64) %4, ptr noundef %662)
          to label %671 unwind label %677

671:                                              ; preds = %669
  invoke void @_ZN14PatternMatcherD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %4)
          to label %672 unwind label %675

672:                                              ; preds = %671
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #28
  br i1 %670, label %681, label %663

673:                                              ; preds = %663
  %674 = landingpad { ptr, i32 }
          cleanup
  br label %682

675:                                              ; preds = %671, %668, %666
  %676 = landingpad { ptr, i32 }
          cleanup
  br label %679

677:                                              ; preds = %669
  %678 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN14PatternMatcherD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %4)
          to label %679 unwind label %685

679:                                              ; preds = %677, %675
  %680 = phi { ptr, i32 } [ %676, %675 ], [ %678, %677 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #28
  br label %682

681:                                              ; preds = %672, %665
  invoke void @_ZN15StringTokenizerD1Ev(ptr noundef nonnull align 8 dereferenceable(48) %3)
          to label %688 unwind label %691

682:                                              ; preds = %679, %673
  %683 = phi { ptr, i32 } [ %680, %679 ], [ %674, %673 ]
  invoke void @_ZN15StringTokenizerD1Ev(ptr noundef nonnull align 8 dereferenceable(48) %3)
          to label %684 unwind label %685

684:                                              ; preds = %682
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #28
  br label %720

685:                                              ; preds = %682, %677
  %686 = landingpad { ptr, i32 }
          catch ptr null
  %687 = extractvalue { ptr, i32 } %686, 0
  call void @__clang_call_terminate(ptr %687) #27
  unreachable

688:                                              ; preds = %681
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #28
  br i1 %664, label %705, label %699

689:                                              ; preds = %652
  %690 = landingpad { ptr, i32 }
          cleanup
  br label %720

691:                                              ; preds = %657, %661, %681
  %692 = landingpad { ptr, i32 }
          cleanup
  br label %720

693:                                              ; preds = %702
  %694 = landingpad { ptr, i32 }
          cleanup
  br label %720

695:                                              ; preds = %659
  %696 = getelementptr inbounds %class.cConfigOption, ptr %658, i64 0, i32 1
  %697 = load i8, ptr %696, align 4, !tbaa !68, !range !76, !noundef !77
  %698 = icmp eq i8 %697, 0
  br i1 %698, label %699, label %705

699:                                              ; preds = %688, %695
  %700 = call ptr @__cxa_allocate_exception(i64 128) #28
  %701 = load ptr, ptr %16, align 8, !tbaa !63
  invoke void (ptr, ptr, ...) @_ZN13cRuntimeErrorC1EPKcz(ptr noundef nonnull align 8 dereferenceable(124) %700, ptr noundef nonnull @.str.117, ptr noundef %701, ptr noundef %448)
          to label %702 unwind label %703

702:                                              ; preds = %699
  invoke void @__cxa_throw(ptr nonnull %700, ptr nonnull @_ZTI13cRuntimeError, ptr nonnull @_ZN10cExceptionD2Ev) #30
          to label %748 unwind label %693

703:                                              ; preds = %699
  %704 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %700) #28
  br label %720

705:                                              ; preds = %688, %653, %695
  %706 = load ptr, ptr %16, align 8, !tbaa !63
  %707 = icmp eq ptr %706, %208
  br i1 %707, label %708, label %711

708:                                              ; preds = %705
  %709 = load i64, ptr %209, align 8, !tbaa !13
  %710 = icmp ult i64 %709, 16
  call void @llvm.assume(i1 %710)
  br label %712

711:                                              ; preds = %705
  call void @_ZdlPv(ptr noundef %706) #26
  br label %712

712:                                              ; preds = %711, %708
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #28
  %713 = load ptr, ptr %15, align 8, !tbaa !63
  %714 = icmp eq ptr %713, %206
  br i1 %714, label %715, label %718

715:                                              ; preds = %712
  %716 = load i64, ptr %207, align 8, !tbaa !13
  %717 = icmp ult i64 %716, 16
  call void @llvm.assume(i1 %717)
  br label %719

718:                                              ; preds = %712
  call void @_ZdlPv(ptr noundef %713) #26
  br label %719

719:                                              ; preds = %718, %715
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #28
  br label %736

720:                                              ; preds = %691, %693, %684, %703, %689
  %721 = phi { ptr, i32 } [ %690, %689 ], [ %704, %703 ], [ %683, %684 ], [ %692, %691 ], [ %694, %693 ]
  %722 = load ptr, ptr %16, align 8, !tbaa !63
  %723 = icmp eq ptr %722, %208
  br i1 %723, label %724, label %727

724:                                              ; preds = %720
  %725 = load i64, ptr %209, align 8, !tbaa !13
  %726 = icmp ult i64 %725, 16
  call void @llvm.assume(i1 %726)
  br label %728

727:                                              ; preds = %720
  call void @_ZdlPv(ptr noundef %722) #26
  br label %728

728:                                              ; preds = %727, %724
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #28
  %729 = load ptr, ptr %15, align 8, !tbaa !63
  %730 = icmp eq ptr %729, %206
  br i1 %730, label %731, label %734

731:                                              ; preds = %728
  %732 = load i64, ptr %207, align 8, !tbaa !13
  %733 = icmp ult i64 %732, 16
  call void @llvm.assume(i1 %733)
  br label %735

734:                                              ; preds = %728
  call void @_ZdlPv(ptr noundef %729) #26
  br label %735

735:                                              ; preds = %734, %731
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #28
  br label %739

736:                                              ; preds = %651, %648, %719, %485, %526
  %737 = add nuw nsw i32 %438, 1
  %738 = icmp eq i32 %737, %428
  br i1 %738, label %431, label %437

739:                                              ; preds = %635, %637, %490, %492, %481, %415, %435, %488, %735, %643, %645, %534, %518, %507, %499, %486, %433, %210, %228, %230, %238, %250, %361, %363, %400, %281, %279, %221
  %740 = phi { ptr, i32 } [ %211, %210 ], [ %222, %221 ], [ %231, %230 ], [ %239, %238 ], [ %364, %363 ], [ %401, %400 ], [ %362, %361 ], [ %251, %250 ], [ %229, %228 ], [ %280, %279 ], [ %282, %281 ], [ %416, %415 ], [ %434, %433 ], [ %436, %435 ], [ %487, %486 ], [ %721, %735 ], [ %489, %488 ], [ %508, %507 ], [ %519, %518 ], [ %535, %534 ], [ %500, %499 ], [ %646, %645 ], [ %644, %643 ], [ %480, %481 ], [ %491, %490 ], [ %493, %492 ], [ %636, %635 ], [ %638, %637 ]
  %741 = load ptr, ptr %26, align 8, !tbaa !21
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %10, ptr noundef %741)
          to label %742 unwind label %745

742:                                              ; preds = %739
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %10) #28
  br label %743

743:                                              ; preds = %61, %187, %742
  %744 = phi { ptr, i32 } [ %740, %742 ], [ %62, %61 ], [ %188, %187 ]
  resume { ptr, i32 } %744

745:                                              ; preds = %739
  %746 = landingpad { ptr, i32 }
          catch ptr null
  %747 = extractvalue { ptr, i32 } %746, 0
  call void @__clang_call_terminate(ptr %747) #27
  unreachable

748:                                              ; preds = %702, %634, %278
  unreachable
}

; Function Attrs: sspstrong uwtable
define dso_local noundef zeroext i1 @_ZN25SectionBasedConfiguration20isIgnorableConfigKeyEPKcS1_(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %class.StringTokenizer, align 8
  %4 = alloca %class.PatternMatcher, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #28
  %5 = icmp eq ptr %0, null
  %6 = select i1 %5, ptr @.str.14, ptr %0
  call void @_ZN15StringTokenizerC1EPKcS1_(ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull %6, ptr noundef null)
  br label %7

7:                                                ; preds = %16, %2
  %8 = invoke noundef zeroext i1 @_ZN15StringTokenizer13hasMoreTokensEv(ptr noundef nonnull align 8 dereferenceable(48) %3)
          to label %9 unwind label %17

9:                                                ; preds = %7
  br i1 %8, label %10, label %25

10:                                               ; preds = %9
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %4) #28
  %11 = invoke noundef ptr @_ZN15StringTokenizer9nextTokenEv(ptr noundef nonnull align 8 dereferenceable(48) %3)
          to label %12 unwind label %19

12:                                               ; preds = %10
  invoke void @_ZN14PatternMatcherC1EPKcbbb(ptr noundef nonnull align 8 dereferenceable(64) %4, ptr noundef %11, i1 noundef zeroext true, i1 noundef zeroext true, i1 noundef zeroext true)
          to label %13 unwind label %19

13:                                               ; preds = %12
  %14 = invoke noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64) %4, ptr noundef %1)
          to label %15 unwind label %21

15:                                               ; preds = %13
  invoke void @_ZN14PatternMatcherD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %4)
          to label %16 unwind label %19

16:                                               ; preds = %15
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #28
  br i1 %14, label %25, label %7

17:                                               ; preds = %7
  %18 = landingpad { ptr, i32 }
          cleanup
  br label %26

19:                                               ; preds = %15, %12, %10
  %20 = landingpad { ptr, i32 }
          cleanup
  br label %23

21:                                               ; preds = %13
  %22 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN14PatternMatcherD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %4)
          to label %23 unwind label %29

23:                                               ; preds = %21, %19
  %24 = phi { ptr, i32 } [ %20, %19 ], [ %22, %21 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #28
  br label %26

25:                                               ; preds = %9, %16
  call void @_ZN15StringTokenizerD1Ev(ptr noundef nonnull align 8 dereferenceable(48) %3)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #28
  ret i1 %8

26:                                               ; preds = %23, %17
  %27 = phi { ptr, i32 } [ %24, %23 ], [ %18, %17 ]
  invoke void @_ZN15StringTokenizerD1Ev(ptr noundef nonnull align 8 dereferenceable(48) %3)
          to label %28 unwind label %29

28:                                               ; preds = %26
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #28
  resume { ptr, i32 } %27

29:                                               ; preds = %26, %21
  %30 = landingpad { ptr, i32 }
          catch ptr null
  %31 = extractvalue { ptr, i32 } %30, 0
  call void @__clang_call_terminate(ptr %31) #27
  unreachable
}

declare noundef ptr @_ZN23cGlobalRegistrationList11getInstanceEv(ptr noundef nonnull align 8 dereferenceable(16)) local_unnamed_addr #1

declare void @_Z20opp_replacesubstringB5cxx11PKcS0_S0_b(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

declare void @_ZN14PatternMatcherD1Ev(ptr noundef nonnull align 8 dereferenceable(64)) unnamed_addr #1

declare void @_ZN15StringTokenizerC1EPKcS1_(ptr noundef nonnull align 8 dereferenceable(48), ptr noundef, ptr noundef) unnamed_addr #1

declare noundef zeroext i1 @_ZN15StringTokenizer13hasMoreTokensEv(ptr noundef nonnull align 8 dereferenceable(48)) local_unnamed_addr #1

declare noundef ptr @_ZN15StringTokenizer9nextTokenEv(ptr noundef nonnull align 8 dereferenceable(48)) local_unnamed_addr #1

declare void @_ZN15StringTokenizerD1Ev(ptr noundef nonnull align 8 dereferenceable(48)) unnamed_addr #1

; Function Attrs: sspstrong uwtable
define dso_local noundef ptr @_ZNK25SectionBasedConfiguration14getConfigValueEPKc(ptr noundef nonnull readonly align 8 dereferenceable(416) %0, ptr noundef readonly %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #28
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 2
  store ptr %5, ptr %4, align 8, !tbaa !11
  %6 = icmp eq ptr %1, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  call void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
  unreachable

8:                                                ; preds = %2
  %9 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #28
  store i64 %9, ptr %3, align 8, !tbaa !87
  %10 = icmp ugt i64 %9, 15
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef nonnull align 8 dereferenceable(8) %3, i64 noundef 0)
  store ptr %12, ptr %4, align 8, !tbaa !63
  %13 = load i64, ptr %3, align 8, !tbaa !87
  store i64 %13, ptr %5, align 8, !tbaa !16
  br label %14

14:                                               ; preds = %11, %8
  %15 = phi ptr [ %12, %11 ], [ %5, %8 ]
  switch i64 %9, label %18 [
    i64 1, label %16
    i64 0, label %19
  ]

16:                                               ; preds = %14
  %17 = load i8, ptr %1, align 1, !tbaa !16
  store i8 %17, ptr %15, align 1, !tbaa !16
  br label %19

18:                                               ; preds = %14
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %15, ptr nonnull align 1 %1, i64 %9, i1 false)
  br label %19

19:                                               ; preds = %18, %16, %14
  %20 = load i64, ptr %3, align 8, !tbaa !87
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 1
  store i64 %20, ptr %21, align 8, !tbaa !13
  %22 = load ptr, ptr %4, align 8, !tbaa !63
  %23 = getelementptr inbounds i8, ptr %22, i64 %20
  store i8 0, ptr %23, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  %24 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !21
  %26 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %27 = icmp eq ptr %25, null
  %28 = load ptr, ptr %4, align 8
  br i1 %27, label %78, label %29

29:                                               ; preds = %19
  %30 = load i64, ptr %21, align 8, !tbaa !13
  br label %31

31:                                               ; preds = %48, %29
  %32 = phi ptr [ %25, %29 ], [ %55, %48 ]
  %33 = phi ptr [ %26, %29 ], [ %53, %48 ]
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %32, i64 0, i32 1, i32 0, i32 1
  %35 = load i64, ptr %34, align 8, !tbaa !13
  %36 = call i64 @llvm.umin.i64(i64 %30, i64 %35)
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %32, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !63
  %41 = call i32 @memcmp(ptr noundef %40, ptr noundef %28, i64 noundef %36) #28
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %38, %31
  %44 = sub i64 %35, %30
  %45 = call i64 @llvm.smax.i64(i64 %44, i64 -2147483648)
  %46 = call i64 @llvm.smin.i64(i64 %45, i64 2147483647)
  %47 = trunc i64 %46 to i32
  br label %48

48:                                               ; preds = %43, %38
  %49 = phi i32 [ %41, %38 ], [ %47, %43 ]
  %50 = icmp slt i32 %49, 0
  %51 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %32, i64 0, i32 3
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %32, i64 0, i32 2
  %53 = select i1 %50, ptr %33, ptr %32
  %54 = select i1 %50, ptr %51, ptr %52
  %55 = load ptr, ptr %54, align 8, !tbaa !5
  %56 = icmp eq ptr %55, null
  br i1 %56, label %57, label %31

57:                                               ; preds = %48
  %58 = icmp eq ptr %53, %26
  br i1 %58, label %78, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %53, i64 0, i32 1, i32 0, i32 1
  %61 = load i64, ptr %60, align 8, !tbaa !13
  %62 = call i64 @llvm.umin.i64(i64 %61, i64 %30)
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %53, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !63
  %67 = call i32 @memcmp(ptr noundef %28, ptr noundef %66, i64 noundef %62) #28
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %74

69:                                               ; preds = %64, %59
  %70 = sub i64 %30, %61
  %71 = call i64 @llvm.smax.i64(i64 %70, i64 -2147483648)
  %72 = call i64 @llvm.smin.i64(i64 %71, i64 2147483647)
  %73 = trunc i64 %72 to i32
  br label %74

74:                                               ; preds = %69, %64
  %75 = phi i32 [ %67, %64 ], [ %73, %69 ]
  %76 = icmp slt i32 %75, 0
  %77 = select i1 %76, ptr %26, ptr %53
  br label %78

78:                                               ; preds = %74, %57, %19
  %79 = phi ptr [ %26, %57 ], [ %26, %19 ], [ %77, %74 ]
  %80 = icmp eq ptr %28, %5
  br i1 %80, label %81, label %84

81:                                               ; preds = %78
  %82 = load i64, ptr %21, align 8, !tbaa !13
  %83 = icmp ult i64 %82, 16
  call void @llvm.assume(i1 %83)
  br label %85

84:                                               ; preds = %78
  call void @_ZdlPv(ptr noundef %28) #26
  br label %85

85:                                               ; preds = %84, %81
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #28
  %86 = icmp eq ptr %79, %26
  br i1 %86, label %90, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %79, i64 0, i32 1, i32 1, i32 3
  %89 = load ptr, ptr %88, align 8, !tbaa !63
  br label %90

90:                                               ; preds = %85, %87
  %91 = phi ptr [ %89, %87 ], [ null, %85 ]
  ret ptr %91
}

; Function Attrs: sspstrong uwtable
define dso_local noundef nonnull align 8 dereferenceable(8) ptr @_ZNK25SectionBasedConfiguration14getConfigEntryEPKc(ptr noundef nonnull readonly align 8 dereferenceable(416) %0, ptr noundef readonly %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #28
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 2
  store ptr %5, ptr %4, align 8, !tbaa !11
  %6 = icmp eq ptr %1, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  call void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
  unreachable

8:                                                ; preds = %2
  %9 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #28
  store i64 %9, ptr %3, align 8, !tbaa !87
  %10 = icmp ugt i64 %9, 15
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef nonnull align 8 dereferenceable(8) %3, i64 noundef 0)
  store ptr %12, ptr %4, align 8, !tbaa !63
  %13 = load i64, ptr %3, align 8, !tbaa !87
  store i64 %13, ptr %5, align 8, !tbaa !16
  br label %14

14:                                               ; preds = %11, %8
  %15 = phi ptr [ %12, %11 ], [ %5, %8 ]
  switch i64 %9, label %18 [
    i64 1, label %16
    i64 0, label %19
  ]

16:                                               ; preds = %14
  %17 = load i8, ptr %1, align 1, !tbaa !16
  store i8 %17, ptr %15, align 1, !tbaa !16
  br label %19

18:                                               ; preds = %14
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %15, ptr nonnull align 1 %1, i64 %9, i1 false)
  br label %19

19:                                               ; preds = %18, %16, %14
  %20 = load i64, ptr %3, align 8, !tbaa !87
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 1
  store i64 %20, ptr %21, align 8, !tbaa !13
  %22 = load ptr, ptr %4, align 8, !tbaa !63
  %23 = getelementptr inbounds i8, ptr %22, i64 %20
  store i8 0, ptr %23, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  %24 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !21
  %26 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %27 = icmp eq ptr %25, null
  %28 = load ptr, ptr %4, align 8
  br i1 %27, label %78, label %29

29:                                               ; preds = %19
  %30 = load i64, ptr %21, align 8, !tbaa !13
  br label %31

31:                                               ; preds = %48, %29
  %32 = phi ptr [ %25, %29 ], [ %55, %48 ]
  %33 = phi ptr [ %26, %29 ], [ %53, %48 ]
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %32, i64 0, i32 1, i32 0, i32 1
  %35 = load i64, ptr %34, align 8, !tbaa !13
  %36 = call i64 @llvm.umin.i64(i64 %30, i64 %35)
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %32, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !63
  %41 = call i32 @memcmp(ptr noundef %40, ptr noundef %28, i64 noundef %36) #28
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %38, %31
  %44 = sub i64 %35, %30
  %45 = call i64 @llvm.smax.i64(i64 %44, i64 -2147483648)
  %46 = call i64 @llvm.smin.i64(i64 %45, i64 2147483647)
  %47 = trunc i64 %46 to i32
  br label %48

48:                                               ; preds = %43, %38
  %49 = phi i32 [ %41, %38 ], [ %47, %43 ]
  %50 = icmp slt i32 %49, 0
  %51 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %32, i64 0, i32 3
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %32, i64 0, i32 2
  %53 = select i1 %50, ptr %33, ptr %32
  %54 = select i1 %50, ptr %51, ptr %52
  %55 = load ptr, ptr %54, align 8, !tbaa !5
  %56 = icmp eq ptr %55, null
  br i1 %56, label %57, label %31

57:                                               ; preds = %48
  %58 = icmp eq ptr %53, %26
  br i1 %58, label %78, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %53, i64 0, i32 1, i32 0, i32 1
  %61 = load i64, ptr %60, align 8, !tbaa !13
  %62 = call i64 @llvm.umin.i64(i64 %61, i64 %30)
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %53, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !63
  %67 = call i32 @memcmp(ptr noundef %28, ptr noundef %66, i64 noundef %62) #28
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %74

69:                                               ; preds = %64, %59
  %70 = sub i64 %30, %61
  %71 = call i64 @llvm.smax.i64(i64 %70, i64 -2147483648)
  %72 = call i64 @llvm.smin.i64(i64 %71, i64 2147483647)
  %73 = trunc i64 %72 to i32
  br label %74

74:                                               ; preds = %69, %64
  %75 = phi i32 [ %67, %64 ], [ %73, %69 ]
  %76 = icmp slt i32 %75, 0
  %77 = select i1 %76, ptr %26, ptr %53
  br label %78

78:                                               ; preds = %74, %57, %19
  %79 = phi ptr [ %26, %57 ], [ %26, %19 ], [ %77, %74 ]
  %80 = icmp eq ptr %28, %5
  br i1 %80, label %81, label %84

81:                                               ; preds = %78
  %82 = load i64, ptr %21, align 8, !tbaa !13
  %83 = icmp ult i64 %82, 16
  call void @llvm.assume(i1 %83)
  br label %85

84:                                               ; preds = %78
  call void @_ZdlPv(ptr noundef %28) #26
  br label %85

85:                                               ; preds = %84, %81
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #28
  %86 = icmp eq ptr %79, %26
  %87 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10
  %88 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %79, i64 0, i32 1, i32 1
  %89 = select i1 %86, ptr %87, ptr %88
  ret ptr %89
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK25SectionBasedConfiguration21getMatchingConfigKeysEPKc(ptr noalias sret(%"class.std::vector.61") align 8 %0, ptr noundef nonnull readonly align 8 dereferenceable(416) %1, ptr noundef %2) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %class.PatternMatcher, align 8
  %5 = alloca ptr, align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %4) #28
  invoke void @_ZN14PatternMatcherC1EPKcbbb(ptr noundef nonnull align 8 dereferenceable(64) %4, ptr noundef %2, i1 noundef zeroext true, i1 noundef zeroext true, i1 noundef zeroext true)
          to label %6 unwind label %15

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !22
  %9 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 7, i32 0, i32 0, i32 1
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  br label %19

14:                                               ; preds = %37, %6
  invoke void @_ZN14PatternMatcherD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %4)
          to label %42 unwind label %15

15:                                               ; preds = %14, %3
  %16 = landingpad { ptr, i32 }
          cleanup
  br label %43

17:                                               ; preds = %19
  %18 = landingpad { ptr, i32 }
          cleanup
  br label %40

19:                                               ; preds = %11, %37
  %20 = phi ptr [ %8, %11 ], [ %38, %37 ]
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %20, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !63
  %23 = invoke noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64) %4, ptr noundef %22)
          to label %24 unwind label %17

24:                                               ; preds = %19
  br i1 %23, label %25, label %37

25:                                               ; preds = %24
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #28
  %26 = load ptr, ptr %21, align 8, !tbaa !63
  store ptr %26, ptr %5, align 8, !tbaa !5
  %27 = load ptr, ptr %12, align 8, !tbaa !5
  %28 = load ptr, ptr %13, align 8, !tbaa !214
  %29 = icmp eq ptr %27, %28
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  store ptr %26, ptr %27, align 8, !tbaa !5
  %31 = load ptr, ptr %12, align 8, !tbaa !216
  %32 = getelementptr inbounds ptr, ptr %31, i64 1
  store ptr %32, ptr %12, align 8, !tbaa !216
  br label %34

33:                                               ; preds = %25
  invoke void @_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %27, ptr noundef nonnull align 8 dereferenceable(8) %5)
          to label %34 unwind label %35

34:                                               ; preds = %30, %33
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #28
  br label %37

35:                                               ; preds = %33
  %36 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #28
  br label %40

37:                                               ; preds = %24, %34
  %38 = call noundef ptr @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(ptr noundef nonnull %20) #29
  %39 = icmp eq ptr %38, %9
  br i1 %39, label %14, label %19

40:                                               ; preds = %35, %17
  %41 = phi { ptr, i32 } [ %36, %35 ], [ %18, %17 ]
  invoke void @_ZN14PatternMatcherD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %4)
          to label %43 unwind label %49

42:                                               ; preds = %14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #28
  ret void

43:                                               ; preds = %40, %15
  %44 = phi { ptr, i32 } [ %41, %40 ], [ %16, %15 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #28
  %45 = load ptr, ptr %0, align 8, !tbaa !217
  %46 = icmp eq ptr %45, null
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(ptr noundef nonnull %45) #26
  br label %48

48:                                               ; preds = %47, %43
  resume { ptr, i32 } %44

49:                                               ; preds = %40
  %50 = landingpad { ptr, i32 }
          catch ptr null
  %51 = extractvalue { ptr, i32 } %50, 0
  call void @__clang_call_terminate(ptr %51) #27
  unreachable
}

; Function Attrs: sspstrong uwtable
define dso_local noundef ptr @_ZNK25SectionBasedConfiguration17getParameterValueEPKcS1_b(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %1, ptr noundef %2, i1 noundef zeroext %3) unnamed_addr #0 align 2 {
  %5 = load ptr, ptr %0, align 8, !tbaa !9
  %6 = getelementptr inbounds ptr, ptr %5, i64 58
  %7 = load ptr, ptr %6, align 8
  %8 = tail call noundef nonnull align 8 dereferenceable(8) ptr %7(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %1, ptr noundef %2, i1 noundef zeroext %3)
  %9 = load ptr, ptr %8, align 8, !tbaa !9
  %10 = getelementptr inbounds ptr, ptr %9, i64 2
  %11 = load ptr, ptr %10, align 8
  %12 = tail call noundef ptr %11(ptr noundef nonnull align 8 dereferenceable(80) %8)
  %13 = icmp eq ptr %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %8, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !63
  br label %17

17:                                               ; preds = %4, %14
  %18 = phi ptr [ %16, %14 ], [ null, %4 ]
  ret ptr %18
}

; Function Attrs: sspstrong uwtable
define dso_local noundef nonnull align 8 dereferenceable(8) ptr @_ZNK25SectionBasedConfiguration17getParameterEntryEPKcS1_b(ptr noundef nonnull readonly align 8 dereferenceable(416) %0, ptr noundef %1, ptr noundef %2, i1 noundef zeroext %3) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #28
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 2
  store ptr %7, ptr %6, align 8, !tbaa !11
  %8 = icmp eq ptr %2, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  call void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
  unreachable

10:                                               ; preds = %4
  %11 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %2) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #28
  store i64 %11, ptr %5, align 8, !tbaa !87
  %12 = icmp ugt i64 %11, 15
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %6, ptr noundef nonnull align 8 dereferenceable(8) %5, i64 noundef 0)
  store ptr %14, ptr %6, align 8, !tbaa !63
  %15 = load i64, ptr %5, align 8, !tbaa !87
  store i64 %15, ptr %7, align 8, !tbaa !16
  br label %16

16:                                               ; preds = %13, %10
  %17 = phi ptr [ %14, %13 ], [ %7, %10 ]
  switch i64 %11, label %20 [
    i64 1, label %18
    i64 0, label %21
  ]

18:                                               ; preds = %16
  %19 = load i8, ptr %2, align 1, !tbaa !16
  store i8 %19, ptr %17, align 1, !tbaa !16
  br label %21

20:                                               ; preds = %16
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %17, ptr nonnull align 1 %2, i64 %11, i1 false)
  br label %21

21:                                               ; preds = %20, %18, %16
  %22 = load i64, ptr %5, align 8, !tbaa !87
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 1
  store i64 %22, ptr %23, align 8, !tbaa !13
  %24 = load ptr, ptr %6, align 8, !tbaa !63
  %25 = getelementptr inbounds i8, ptr %24, i64 %22
  store i8 0, ptr %25, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #28
  %26 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !21
  %28 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %29 = icmp eq ptr %27, null
  %30 = load ptr, ptr %6, align 8
  br i1 %29, label %80, label %31

31:                                               ; preds = %21
  %32 = load i64, ptr %23, align 8, !tbaa !13
  br label %33

33:                                               ; preds = %50, %31
  %34 = phi ptr [ %27, %31 ], [ %57, %50 ]
  %35 = phi ptr [ %28, %31 ], [ %55, %50 ]
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %34, i64 0, i32 1, i32 0, i32 1
  %37 = load i64, ptr %36, align 8, !tbaa !13
  %38 = call i64 @llvm.umin.i64(i64 %32, i64 %37)
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %34, i64 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !63
  %43 = call i32 @memcmp(ptr noundef %42, ptr noundef %30, i64 noundef %38) #28
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40, %33
  %46 = sub i64 %37, %32
  %47 = call i64 @llvm.smax.i64(i64 %46, i64 -2147483648)
  %48 = call i64 @llvm.smin.i64(i64 %47, i64 2147483647)
  %49 = trunc i64 %48 to i32
  br label %50

50:                                               ; preds = %45, %40
  %51 = phi i32 [ %43, %40 ], [ %49, %45 ]
  %52 = icmp slt i32 %51, 0
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %34, i64 0, i32 3
  %54 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %34, i64 0, i32 2
  %55 = select i1 %52, ptr %35, ptr %34
  %56 = select i1 %52, ptr %53, ptr %54
  %57 = load ptr, ptr %56, align 8, !tbaa !5
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %33

59:                                               ; preds = %50
  %60 = icmp eq ptr %55, %28
  br i1 %60, label %80, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %55, i64 0, i32 1, i32 0, i32 1
  %63 = load i64, ptr %62, align 8, !tbaa !13
  %64 = call i64 @llvm.umin.i64(i64 %63, i64 %32)
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %55, i64 0, i32 1
  %68 = load ptr, ptr %67, align 8, !tbaa !63
  %69 = call i32 @memcmp(ptr noundef %30, ptr noundef %68, i64 noundef %64) #28
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %66, %61
  %72 = sub i64 %32, %63
  %73 = call i64 @llvm.smax.i64(i64 %72, i64 -2147483648)
  %74 = call i64 @llvm.smin.i64(i64 %73, i64 2147483647)
  %75 = trunc i64 %74 to i32
  br label %76

76:                                               ; preds = %71, %66
  %77 = phi i32 [ %69, %66 ], [ %75, %71 ]
  %78 = icmp slt i32 %77, 0
  %79 = select i1 %78, ptr %28, ptr %55
  br label %80

80:                                               ; preds = %76, %59, %21
  %81 = phi ptr [ %28, %59 ], [ %28, %21 ], [ %79, %76 ]
  %82 = icmp eq ptr %30, %7
  br i1 %82, label %83, label %86

83:                                               ; preds = %80
  %84 = load i64, ptr %23, align 8, !tbaa !13
  %85 = icmp ult i64 %84, 16
  call void @llvm.assume(i1 %85)
  br label %87

86:                                               ; preds = %80
  call void @_ZdlPv(ptr noundef %30) #26
  br label %87

87:                                               ; preds = %86, %83
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #28
  %88 = icmp eq ptr %81, %28
  %89 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 9
  %90 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %81, i64 0, i32 1, i32 1
  %91 = select i1 %88, ptr %89, ptr %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl_data", ptr %91, i64 0, i32 1
  %93 = load ptr, ptr %92, align 8, !tbaa !65
  %94 = load ptr, ptr %91, align 8, !tbaa !64
  %95 = ptrtoint ptr %93 to i64
  %96 = ptrtoint ptr %94 to i64
  %97 = sub i64 %95, %96
  %98 = sdiv exact i64 %97, 104
  %99 = trunc i64 %98 to i32
  %100 = icmp sgt i32 %99, 0
  br i1 %100, label %101, label %144

101:                                              ; preds = %87
  br i1 %3, label %102, label %119

102:                                              ; preds = %101
  %103 = call noundef zeroext i1 @_ZN25SectionBasedConfiguration12entryMatchesERKNS_9KeyValue2EPKcS4_(ptr noundef nonnull align 8 dereferenceable(104) %94, ptr noundef %1, ptr noundef nonnull %2)
  br i1 %103, label %146, label %107

104:                                              ; preds = %107
  %105 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %111, i64 %109
  %106 = call noundef zeroext i1 @_ZN25SectionBasedConfiguration12entryMatchesERKNS_9KeyValue2EPKcS4_(ptr noundef nonnull align 8 dereferenceable(104) %105, ptr noundef %1, ptr noundef nonnull %2)
  br i1 %106, label %146, label %107

107:                                              ; preds = %102, %104
  %108 = phi i64 [ %109, %104 ], [ 0, %102 ]
  %109 = add nuw nsw i64 %108, 1
  %110 = load ptr, ptr %92, align 8, !tbaa !65
  %111 = load ptr, ptr %91, align 8, !tbaa !64
  %112 = ptrtoint ptr %110 to i64
  %113 = ptrtoint ptr %111 to i64
  %114 = sub i64 %112, %113
  %115 = sdiv exact i64 %114, 104
  %116 = shl i64 %115, 32
  %117 = ashr exact i64 %116, 32
  %118 = icmp slt i64 %109, %117
  br i1 %118, label %104, label %144

119:                                              ; preds = %101, %133
  %120 = phi i64 [ %134, %133 ], [ 0, %101 ]
  %121 = phi ptr [ %136, %133 ], [ %94, %101 ]
  %122 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %121, i64 %120
  %123 = call noundef zeroext i1 @_ZN25SectionBasedConfiguration12entryMatchesERKNS_9KeyValue2EPKcS4_(ptr noundef nonnull align 8 dereferenceable(104) %122, ptr noundef %1, ptr noundef nonnull %2)
  br i1 %123, label %124, label %133

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %122, i64 0, i32 3, i32 1
  %126 = load i64, ptr %125, align 8, !tbaa !13
  %127 = icmp eq i64 %126, 7
  br i1 %127, label %128, label %146

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %122, i64 0, i32 3
  %130 = load ptr, ptr %129, align 8, !tbaa !63
  %131 = call i32 @bcmp(ptr noundef nonnull dereferenceable(7) %130, ptr noundef nonnull dereferenceable(7) @.str.120, i64 7)
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %146

133:                                              ; preds = %128, %119
  %134 = add nuw nsw i64 %120, 1
  %135 = load ptr, ptr %92, align 8, !tbaa !65
  %136 = load ptr, ptr %91, align 8, !tbaa !64
  %137 = ptrtoint ptr %135 to i64
  %138 = ptrtoint ptr %136 to i64
  %139 = sub i64 %137, %138
  %140 = sdiv exact i64 %139, 104
  %141 = shl i64 %140, 32
  %142 = ashr exact i64 %141, 32
  %143 = icmp slt i64 %134, %142
  br i1 %143, label %119, label %144

144:                                              ; preds = %133, %107, %87
  %145 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10
  br label %146

146:                                              ; preds = %124, %128, %104, %102, %144
  %147 = phi ptr [ %145, %144 ], [ %94, %102 ], [ %105, %104 ], [ %122, %128 ], [ %122, %124 ]
  ret ptr %147
}

; Function Attrs: sspstrong uwtable
define dso_local noundef zeroext i1 @_ZN25SectionBasedConfiguration12entryMatchesERKNS_9KeyValue2EPKcS4_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(104) %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %0, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !161
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %0, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !159
  %14 = tail call noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64) %13, ptr noundef %1)
  br i1 %14, label %15, label %153

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !162
  %18 = icmp eq ptr %17, null
  br i1 %18, label %153, label %19

19:                                               ; preds = %15
  %20 = tail call noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64) %17, ptr noundef %2)
  br label %153

21:                                               ; preds = %3
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #28
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  store ptr %22, ptr %7, align 8, !tbaa !11
  %23 = icmp eq ptr %1, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  invoke void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
          to label %25 unwind label %124

25:                                               ; preds = %24
  unreachable

26:                                               ; preds = %21
  %27 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %27, ptr %4, align 8, !tbaa !87
  %28 = icmp ugt i64 %27, 15
  br i1 %28, label %29, label %33

29:                                               ; preds = %26
  %30 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %7, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %31 unwind label %124

31:                                               ; preds = %29
  store ptr %30, ptr %7, align 8, !tbaa !63
  %32 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %32, ptr %22, align 8, !tbaa !16
  br label %33

33:                                               ; preds = %31, %26
  %34 = phi ptr [ %30, %31 ], [ %22, %26 ]
  switch i64 %27, label %37 [
    i64 1, label %35
    i64 0, label %38
  ]

35:                                               ; preds = %33
  %36 = load i8, ptr %1, align 1, !tbaa !16
  store i8 %36, ptr %34, align 1, !tbaa !16
  br label %38

37:                                               ; preds = %33
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %34, ptr nonnull align 1 %1, i64 %27, i1 false)
  br label %38

38:                                               ; preds = %37, %35, %33
  %39 = load i64, ptr %4, align 8, !tbaa !87
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 1
  store i64 %39, ptr %40, align 8, !tbaa !13
  %41 = load ptr, ptr %7, align 8, !tbaa !63
  %42 = getelementptr inbounds i8, ptr %41, i64 %39
  store i8 0, ptr %42, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  call void @llvm.experimental.noalias.scope.decl(metadata !222)
  %43 = load ptr, ptr %7, align 8, !tbaa !63, !noalias !222
  %44 = load i64, ptr %40, align 8, !tbaa !13, !noalias !222
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 2
  store ptr %45, ptr %6, align 8, !tbaa !11, !alias.scope !225
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 1
  store i64 0, ptr %46, align 8, !tbaa !13, !alias.scope !225
  store i8 0, ptr %45, align 8, !tbaa !16, !alias.scope !225
  %47 = add i64 %44, 1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %6, i64 noundef %47)
          to label %48 unwind label %61

48:                                               ; preds = %38
  %49 = load i64, ptr %46, align 8, !tbaa !13, !alias.scope !225
  %50 = sub i64 4611686018427387903, %49
  %51 = icmp ult i64 %50, %44
  br i1 %51, label %57, label %52

52:                                               ; preds = %48
  %53 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %6, ptr noundef %43, i64 noundef %44)
          to label %54 unwind label %61

54:                                               ; preds = %52
  %55 = load i64, ptr %46, align 8, !tbaa !13, !alias.scope !225
  %56 = icmp eq i64 %55, 4611686018427387903
  br i1 %56, label %57, label %59

57:                                               ; preds = %54, %48
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %58 unwind label %61

58:                                               ; preds = %57
  unreachable

59:                                               ; preds = %54
  %60 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %6, ptr noundef nonnull @.str.121, i64 noundef 1)
          to label %69 unwind label %61

61:                                               ; preds = %59, %57, %52, %38
  %62 = landingpad { ptr, i32 }
          cleanup
  %63 = load ptr, ptr %6, align 8, !tbaa !63, !alias.scope !225
  %64 = icmp eq ptr %63, %45
  br i1 %64, label %65, label %68

65:                                               ; preds = %61
  %66 = load i64, ptr %46, align 8, !tbaa !13, !alias.scope !225
  %67 = icmp ult i64 %66, 16
  call void @llvm.assume(i1 %67)
  br label %133

68:                                               ; preds = %61
  call void @_ZdlPv(ptr noundef %63) #26
  br label %133

69:                                               ; preds = %59
  call void @llvm.experimental.noalias.scope.decl(metadata !228)
  %70 = load ptr, ptr %6, align 8, !tbaa !63, !noalias !228
  %71 = load i64, ptr %46, align 8, !tbaa !13, !noalias !228
  %72 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %2) #28, !noalias !228
  %73 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 2
  store ptr %73, ptr %5, align 8, !tbaa !11, !alias.scope !231
  %74 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 1
  store i64 0, ptr %74, align 8, !tbaa !13, !alias.scope !231
  store i8 0, ptr %73, align 8, !tbaa !16, !alias.scope !231
  %75 = add i64 %72, %71
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %75)
          to label %76 unwind label %90

76:                                               ; preds = %69
  %77 = load i64, ptr %74, align 8, !tbaa !13, !alias.scope !231
  %78 = sub i64 4611686018427387903, %77
  %79 = icmp ult i64 %78, %71
  br i1 %79, label %86, label %80

80:                                               ; preds = %76
  %81 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef %70, i64 noundef %71)
          to label %82 unwind label %90

82:                                               ; preds = %80
  %83 = load i64, ptr %74, align 8, !tbaa !13, !alias.scope !231
  %84 = sub i64 4611686018427387903, %83
  %85 = icmp ult i64 %84, %72
  br i1 %85, label %86, label %88

86:                                               ; preds = %82, %76
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %87 unwind label %90

87:                                               ; preds = %86
  unreachable

88:                                               ; preds = %82
  %89 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef %2, i64 noundef %72)
          to label %98 unwind label %90

90:                                               ; preds = %88, %86, %80, %69
  %91 = landingpad { ptr, i32 }
          cleanup
  %92 = load ptr, ptr %5, align 8, !tbaa !63, !alias.scope !231
  %93 = icmp eq ptr %92, %73
  br i1 %93, label %94, label %97

94:                                               ; preds = %90
  %95 = load i64, ptr %74, align 8, !tbaa !13, !alias.scope !231
  %96 = icmp ult i64 %95, 16
  call void @llvm.assume(i1 %96)
  br label %126

97:                                               ; preds = %90
  call void @_ZdlPv(ptr noundef %92) #26
  br label %126

98:                                               ; preds = %88
  %99 = load ptr, ptr %6, align 8, !tbaa !63
  %100 = icmp eq ptr %99, %45
  br i1 %100, label %101, label %104

101:                                              ; preds = %98
  %102 = load i64, ptr %46, align 8, !tbaa !13
  %103 = icmp ult i64 %102, 16
  call void @llvm.assume(i1 %103)
  br label %105

104:                                              ; preds = %98
  call void @_ZdlPv(ptr noundef %99) #26
  br label %105

105:                                              ; preds = %104, %101
  %106 = load ptr, ptr %7, align 8, !tbaa !63
  %107 = icmp eq ptr %106, %22
  br i1 %107, label %108, label %111

108:                                              ; preds = %105
  %109 = load i64, ptr %40, align 8, !tbaa !13
  %110 = icmp ult i64 %109, 16
  call void @llvm.assume(i1 %110)
  br label %112

111:                                              ; preds = %105
  call void @_ZdlPv(ptr noundef %106) #26
  br label %112

112:                                              ; preds = %111, %108
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #28
  %113 = load ptr, ptr %8, align 8, !tbaa !161
  %114 = load ptr, ptr %5, align 8, !tbaa !63
  %115 = invoke noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64) %113, ptr noundef %114)
          to label %116 unwind label %143

116:                                              ; preds = %112
  %117 = load ptr, ptr %5, align 8, !tbaa !63
  %118 = icmp eq ptr %117, %73
  br i1 %118, label %119, label %122

119:                                              ; preds = %116
  %120 = load i64, ptr %74, align 8, !tbaa !13
  %121 = icmp ult i64 %120, 16
  call void @llvm.assume(i1 %121)
  br label %123

122:                                              ; preds = %116
  call void @_ZdlPv(ptr noundef %117) #26
  br label %123

123:                                              ; preds = %119, %122
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #28
  br label %153

124:                                              ; preds = %29, %24
  %125 = landingpad { ptr, i32 }
          cleanup
  br label %141

126:                                              ; preds = %94, %97
  %127 = load ptr, ptr %6, align 8, !tbaa !63
  %128 = icmp eq ptr %127, %45
  br i1 %128, label %129, label %132

129:                                              ; preds = %126
  %130 = load i64, ptr %46, align 8, !tbaa !13
  %131 = icmp ult i64 %130, 16
  call void @llvm.assume(i1 %131)
  br label %133

132:                                              ; preds = %126
  call void @_ZdlPv(ptr noundef %127) #26
  br label %133

133:                                              ; preds = %132, %129, %68, %65
  %134 = phi { ptr, i32 } [ %62, %68 ], [ %62, %65 ], [ %91, %129 ], [ %91, %132 ]
  %135 = load ptr, ptr %7, align 8, !tbaa !63
  %136 = icmp eq ptr %135, %22
  br i1 %136, label %137, label %140

137:                                              ; preds = %133
  %138 = load i64, ptr %40, align 8, !tbaa !13
  %139 = icmp ult i64 %138, 16
  call void @llvm.assume(i1 %139)
  br label %141

140:                                              ; preds = %133
  call void @_ZdlPv(ptr noundef %135) #26
  br label %141

141:                                              ; preds = %140, %137, %124
  %142 = phi { ptr, i32 } [ %125, %124 ], [ %134, %137 ], [ %134, %140 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #28
  br label %151

143:                                              ; preds = %112
  %144 = landingpad { ptr, i32 }
          cleanup
  %145 = load ptr, ptr %5, align 8, !tbaa !63
  %146 = icmp eq ptr %145, %73
  br i1 %146, label %147, label %150

147:                                              ; preds = %143
  %148 = load i64, ptr %74, align 8, !tbaa !13
  %149 = icmp ult i64 %148, 16
  call void @llvm.assume(i1 %149)
  br label %151

150:                                              ; preds = %143
  call void @_ZdlPv(ptr noundef %145) #26
  br label %151

151:                                              ; preds = %150, %147, %141
  %152 = phi { ptr, i32 } [ %142, %141 ], [ %144, %147 ], [ %144, %150 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #28
  resume { ptr, i32 } %152

153:                                              ; preds = %11, %19, %15, %123
  %154 = phi i1 [ %115, %123 ], [ false, %11 ], [ true, %15 ], [ %20, %19 ]
  ret i1 %154
}

; Function Attrs: mustprogress nofree nosync nounwind sspstrong willreturn memory(argmem: write) uwtable
define dso_local void @_ZNK25SectionBasedConfiguration25getParameterKeyValuePairsEv(ptr noalias nocapture writeonly sret(%"class.std::vector.61") align 8 %0, ptr nocapture nonnull readnone align 8 %1) unnamed_addr #14 align 2 personality ptr @__gxx_personality_v0 {
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: sspstrong uwtable
define dso_local noundef ptr @_ZNK25SectionBasedConfiguration23getPerObjectConfigValueEPKcS1_(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %1, ptr noundef %2) unnamed_addr #0 align 2 {
  %4 = load ptr, ptr %0, align 8, !tbaa !9
  %5 = getelementptr inbounds ptr, ptr %4, i64 23
  %6 = load ptr, ptr %5, align 8
  %7 = tail call noundef nonnull align 8 dereferenceable(8) ptr %6(ptr noundef nonnull align 8 dereferenceable(416) %0, ptr noundef %1, ptr noundef %2)
  %8 = load ptr, ptr %7, align 8, !tbaa !9
  %9 = getelementptr inbounds ptr, ptr %8, i64 2
  %10 = load ptr, ptr %9, align 8
  %11 = tail call noundef ptr %10(ptr noundef nonnull align 8 dereferenceable(80) %7)
  %12 = icmp eq ptr %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %7, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !63
  br label %16

16:                                               ; preds = %3, %13
  %17 = phi ptr [ %15, %13 ], [ null, %3 ]
  ret ptr %17
}

; Function Attrs: sspstrong uwtable
define dso_local noundef nonnull align 8 dereferenceable(8) ptr @_ZNK25SectionBasedConfiguration23getPerObjectConfigEntryEPKcS1_(ptr noundef nonnull readonly align 8 dereferenceable(416) %0, ptr noundef %1, ptr noundef %2) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #28
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 2
  store ptr %6, ptr %5, align 8, !tbaa !11
  %7 = icmp eq ptr %2, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  call void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
  unreachable

9:                                                ; preds = %3
  %10 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %2) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %10, ptr %4, align 8, !tbaa !87
  %11 = icmp ugt i64 %10, 15
  br i1 %11, label %12, label %15

12:                                               ; preds = %9
  %13 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
  store ptr %13, ptr %5, align 8, !tbaa !63
  %14 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %14, ptr %6, align 8, !tbaa !16
  br label %15

15:                                               ; preds = %12, %9
  %16 = phi ptr [ %13, %12 ], [ %6, %9 ]
  switch i64 %10, label %19 [
    i64 1, label %17
    i64 0, label %20
  ]

17:                                               ; preds = %15
  %18 = load i8, ptr %2, align 1, !tbaa !16
  store i8 %18, ptr %16, align 1, !tbaa !16
  br label %20

19:                                               ; preds = %15
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %16, ptr nonnull align 1 %2, i64 %10, i1 false)
  br label %20

20:                                               ; preds = %19, %17, %15
  %21 = load i64, ptr %4, align 8, !tbaa !87
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 1
  store i64 %21, ptr %22, align 8, !tbaa !13
  %23 = load ptr, ptr %5, align 8, !tbaa !63
  %24 = getelementptr inbounds i8, ptr %23, i64 %21
  store i8 0, ptr %24, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %25 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !21
  %27 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %28 = icmp eq ptr %26, null
  %29 = load ptr, ptr %5, align 8
  br i1 %28, label %79, label %30

30:                                               ; preds = %20
  %31 = load i64, ptr %22, align 8, !tbaa !13
  br label %32

32:                                               ; preds = %49, %30
  %33 = phi ptr [ %26, %30 ], [ %56, %49 ]
  %34 = phi ptr [ %27, %30 ], [ %54, %49 ]
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %33, i64 0, i32 1, i32 0, i32 1
  %36 = load i64, ptr %35, align 8, !tbaa !13
  %37 = call i64 @llvm.umin.i64(i64 %31, i64 %36)
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %33, i64 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !63
  %42 = call i32 @memcmp(ptr noundef %41, ptr noundef %29, i64 noundef %37) #28
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %39, %32
  %45 = sub i64 %36, %31
  %46 = call i64 @llvm.smax.i64(i64 %45, i64 -2147483648)
  %47 = call i64 @llvm.smin.i64(i64 %46, i64 2147483647)
  %48 = trunc i64 %47 to i32
  br label %49

49:                                               ; preds = %44, %39
  %50 = phi i32 [ %42, %39 ], [ %48, %44 ]
  %51 = icmp slt i32 %50, 0
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %33, i64 0, i32 3
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %33, i64 0, i32 2
  %54 = select i1 %51, ptr %34, ptr %33
  %55 = select i1 %51, ptr %52, ptr %53
  %56 = load ptr, ptr %55, align 8, !tbaa !5
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %32

58:                                               ; preds = %49
  %59 = icmp eq ptr %54, %27
  br i1 %59, label %79, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %54, i64 0, i32 1, i32 0, i32 1
  %62 = load i64, ptr %61, align 8, !tbaa !13
  %63 = call i64 @llvm.umin.i64(i64 %62, i64 %31)
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %54, i64 0, i32 1
  %67 = load ptr, ptr %66, align 8, !tbaa !63
  %68 = call i32 @memcmp(ptr noundef %29, ptr noundef %67, i64 noundef %63) #28
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %65, %60
  %71 = sub i64 %31, %62
  %72 = call i64 @llvm.smax.i64(i64 %71, i64 -2147483648)
  %73 = call i64 @llvm.smin.i64(i64 %72, i64 2147483647)
  %74 = trunc i64 %73 to i32
  br label %75

75:                                               ; preds = %70, %65
  %76 = phi i32 [ %68, %65 ], [ %74, %70 ]
  %77 = icmp slt i32 %76, 0
  %78 = select i1 %77, ptr %27, ptr %54
  br label %79

79:                                               ; preds = %75, %58, %20
  %80 = phi ptr [ %27, %58 ], [ %27, %20 ], [ %78, %75 ]
  %81 = icmp eq ptr %29, %6
  br i1 %81, label %82, label %85

82:                                               ; preds = %79
  %83 = load i64, ptr %22, align 8, !tbaa !13
  %84 = icmp ult i64 %83, 16
  call void @llvm.assume(i1 %84)
  br label %86

85:                                               ; preds = %79
  call void @_ZdlPv(ptr noundef %29) #26
  br label %86

86:                                               ; preds = %85, %82
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #28
  %87 = icmp eq ptr %80, %27
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10
  br label %119

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %80, i64 0, i32 1, i32 1
  %92 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %80, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load ptr, ptr %92, align 8, !tbaa !65
  %94 = load ptr, ptr %91, align 8, !tbaa !64
  %95 = ptrtoint ptr %93 to i64
  %96 = ptrtoint ptr %94 to i64
  %97 = sub i64 %95, %96
  %98 = sdiv exact i64 %97, 104
  %99 = trunc i64 %98 to i32
  %100 = icmp sgt i32 %99, 0
  br i1 %100, label %112, label %117

101:                                              ; preds = %112
  %102 = add nuw nsw i64 %113, 1
  %103 = load ptr, ptr %92, align 8, !tbaa !65
  %104 = load ptr, ptr %91, align 8, !tbaa !64
  %105 = ptrtoint ptr %103 to i64
  %106 = ptrtoint ptr %104 to i64
  %107 = sub i64 %105, %106
  %108 = sdiv exact i64 %107, 104
  %109 = shl i64 %108, 32
  %110 = ashr exact i64 %109, 32
  %111 = icmp slt i64 %102, %110
  br i1 %111, label %112, label %117

112:                                              ; preds = %90, %101
  %113 = phi i64 [ %102, %101 ], [ 0, %90 ]
  %114 = phi ptr [ %104, %101 ], [ %94, %90 ]
  %115 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %114, i64 %113
  %116 = call noundef zeroext i1 @_ZN25SectionBasedConfiguration12entryMatchesERKNS_9KeyValue2EPKcS4_(ptr noundef nonnull align 8 dereferenceable(104) %115, ptr noundef %1, ptr noundef nonnull %2)
  br i1 %116, label %119, label %101

117:                                              ; preds = %101, %90
  %118 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 10
  br label %119

119:                                              ; preds = %112, %117, %88
  %120 = phi ptr [ %89, %88 ], [ %118, %117 ], [ %115, %112 ]
  ret ptr %120
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK25SectionBasedConfiguration30getMatchingPerObjectConfigKeysEPKcS1_(ptr noalias nocapture sret(%"class.std::vector.61") align 8 %0, ptr noundef nonnull readonly align 8 dereferenceable(416) %1, ptr noundef %2, ptr noundef %3) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %class.PatternMatcher, align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %5) #28
  invoke void @_ZN14PatternMatcherC1EPKcbbb(ptr noundef nonnull align 8 dereferenceable(64) %5, ptr noundef %3, i1 noundef zeroext true, i1 noundef zeroext true, i1 noundef zeroext true)
          to label %6 unwind label %15

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !22
  %9 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  br label %19

14:                                               ; preds = %130, %6
  invoke void @_ZN14PatternMatcherD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %5)
          to label %137 unwind label %15

15:                                               ; preds = %14, %4
  %16 = landingpad { ptr, i32 }
          cleanup
  br label %138

17:                                               ; preds = %19
  %18 = landingpad { ptr, i32 }
          cleanup
  br label %135

19:                                               ; preds = %11, %130
  %20 = phi ptr [ null, %11 ], [ %131, %130 ]
  %21 = phi ptr [ null, %11 ], [ %132, %130 ]
  %22 = phi ptr [ %8, %11 ], [ %133, %130 ]
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !63
  %25 = invoke noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64) %5, ptr noundef %24)
          to label %26 unwind label %17

26:                                               ; preds = %19
  br i1 %25, label %27, label %130

27:                                               ; preds = %26
  %28 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %22, i64 0, i32 1, i32 1
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %22, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !65
  %31 = load ptr, ptr %28, align 8, !tbaa !64
  %32 = ptrtoint ptr %30 to i64
  %33 = ptrtoint ptr %31 to i64
  %34 = sub i64 %32, %33
  %35 = sdiv exact i64 %34, 104
  %36 = trunc i64 %35 to i32
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %130

38:                                               ; preds = %27, %116
  %39 = phi ptr [ %117, %116 ], [ %20, %27 ]
  %40 = phi ptr [ %118, %116 ], [ %21, %27 ]
  %41 = phi i64 [ %120, %116 ], [ 0, %27 ]
  %42 = phi ptr [ %122, %116 ], [ %31, %27 ]
  %43 = phi ptr [ %119, %116 ], [ %21, %27 ]
  %44 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %42, i64 %41
  %45 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %42, i64 %41, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !159
  %47 = invoke noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64) %46, ptr noundef %2)
          to label %48 unwind label %110

48:                                               ; preds = %38
  br i1 %47, label %49, label %116

49:                                               ; preds = %48
  %50 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %42, i64 %41, i32 2
  %51 = load ptr, ptr %50, align 8, !tbaa !162
  %52 = icmp eq ptr %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %44, i64 0, i32 2
  %55 = load ptr, ptr %54, align 8, !tbaa !63
  %56 = call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %55, i32 noundef 46) #29
  %57 = icmp eq ptr %56, null
  %58 = getelementptr inbounds i8, ptr %56, i64 1
  %59 = select i1 %57, ptr null, ptr %58
  %60 = invoke noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64) %5, ptr noundef %59)
          to label %61 unwind label %110

61:                                               ; preds = %53
  br i1 %60, label %66, label %62

62:                                               ; preds = %61
  %63 = load ptr, ptr %50, align 8, !tbaa !162
  %64 = invoke noundef zeroext i1 @_ZN14PatternMatcher7matchesEPKc(ptr noundef nonnull align 8 dereferenceable(64) %63, ptr noundef %3)
          to label %65 unwind label %110

65:                                               ; preds = %62
  br i1 %64, label %66, label %116

66:                                               ; preds = %65, %61, %49
  %67 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %44, i64 0, i32 2
  %68 = load ptr, ptr %67, align 8, !tbaa !63
  %69 = load ptr, ptr %13, align 8, !tbaa !214
  %70 = icmp eq ptr %39, %69
  br i1 %70, label %73, label %71

71:                                               ; preds = %66
  store ptr %68, ptr %39, align 8, !tbaa !5
  %72 = getelementptr inbounds ptr, ptr %39, i64 1
  store ptr %72, ptr %12, align 8, !tbaa !216
  br label %116

73:                                               ; preds = %66
  %74 = ptrtoint ptr %39 to i64
  %75 = ptrtoint ptr %43 to i64
  %76 = sub i64 %74, %75
  %77 = icmp eq i64 %76, 9223372036854775800
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.167) #30
          to label %79 unwind label %114

79:                                               ; preds = %78
  unreachable

80:                                               ; preds = %73
  %81 = ashr exact i64 %76, 3
  %82 = call i64 @llvm.umax.i64(i64 %81, i64 1)
  %83 = add i64 %82, %81
  %84 = icmp ult i64 %83, %81
  %85 = icmp ugt i64 %83, 1152921504606846975
  %86 = or i1 %84, %85
  %87 = select i1 %86, i64 1152921504606846975, i64 %83
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %80
  %90 = shl nuw nsw i64 %87, 3
  %91 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %90) #25
          to label %92 unwind label %112

92:                                               ; preds = %89, %80
  %93 = phi ptr [ null, %80 ], [ %91, %89 ]
  %94 = getelementptr inbounds ptr, ptr %93, i64 %81
  store ptr %68, ptr %94, align 8, !tbaa !5
  %95 = icmp sgt i64 %76, 8
  br i1 %95, label %96, label %97, !prof !234

96:                                               ; preds = %92
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %93, ptr align 8 %43, i64 %76, i1 false)
  br label %102

97:                                               ; preds = %92
  %98 = icmp eq i64 %76, 8
  br i1 %98, label %99, label %102

99:                                               ; preds = %97
  %100 = load ptr, ptr %43, align 8, !tbaa !5
  store ptr %100, ptr %93, align 8, !tbaa !5
  %101 = getelementptr inbounds ptr, ptr %94, i64 1
  br label %105

102:                                              ; preds = %97, %96
  %103 = getelementptr inbounds ptr, ptr %94, i64 1
  %104 = icmp eq ptr %43, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %99, %102
  %106 = phi ptr [ %101, %99 ], [ %103, %102 ]
  call void @_ZdlPv(ptr noundef nonnull %43) #26
  br label %107

107:                                              ; preds = %105, %102
  %108 = phi ptr [ %103, %102 ], [ %106, %105 ]
  store ptr %93, ptr %0, align 8, !tbaa !217
  store ptr %108, ptr %12, align 8, !tbaa !216
  %109 = getelementptr inbounds ptr, ptr %93, i64 %87
  store ptr %109, ptr %13, align 8, !tbaa !214
  br label %116

110:                                              ; preds = %62, %53, %38
  %111 = landingpad { ptr, i32 }
          cleanup
  br label %135

112:                                              ; preds = %89
  %113 = landingpad { ptr, i32 }
          cleanup
  br label %135

114:                                              ; preds = %78
  %115 = landingpad { ptr, i32 }
          cleanup
  br label %135

116:                                              ; preds = %71, %107, %65, %48
  %117 = phi ptr [ %72, %71 ], [ %108, %107 ], [ %39, %65 ], [ %39, %48 ]
  %118 = phi ptr [ %40, %71 ], [ %93, %107 ], [ %40, %65 ], [ %40, %48 ]
  %119 = phi ptr [ %43, %71 ], [ %93, %107 ], [ %43, %65 ], [ %43, %48 ]
  %120 = add nuw nsw i64 %41, 1
  %121 = load ptr, ptr %29, align 8, !tbaa !65
  %122 = load ptr, ptr %28, align 8, !tbaa !64
  %123 = ptrtoint ptr %121 to i64
  %124 = ptrtoint ptr %122 to i64
  %125 = sub i64 %123, %124
  %126 = sdiv exact i64 %125, 104
  %127 = shl i64 %126, 32
  %128 = ashr exact i64 %127, 32
  %129 = icmp slt i64 %120, %128
  br i1 %129, label %38, label %130

130:                                              ; preds = %116, %27, %26
  %131 = phi ptr [ %20, %27 ], [ %20, %26 ], [ %117, %116 ]
  %132 = phi ptr [ %21, %27 ], [ %21, %26 ], [ %118, %116 ]
  %133 = call noundef ptr @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(ptr noundef nonnull %22) #29
  %134 = icmp eq ptr %133, %9
  br i1 %134, label %14, label %19

135:                                              ; preds = %112, %114, %110, %17
  %136 = phi { ptr, i32 } [ %18, %17 ], [ %111, %110 ], [ %113, %112 ], [ %115, %114 ]
  invoke void @_ZN14PatternMatcherD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %5)
          to label %138 unwind label %144

137:                                              ; preds = %14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %5) #28
  ret void

138:                                              ; preds = %135, %15
  %139 = phi { ptr, i32 } [ %136, %135 ], [ %16, %15 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %5) #28
  %140 = load ptr, ptr %0, align 8, !tbaa !217
  %141 = icmp eq ptr %140, null
  br i1 %141, label %143, label %142

142:                                              ; preds = %138
  call void @_ZdlPv(ptr noundef nonnull %140) #26
  br label %143

143:                                              ; preds = %142, %138
  resume { ptr, i32 } %139

144:                                              ; preds = %135
  %145 = landingpad { ptr, i32 }
          catch ptr null
  %146 = extractvalue { ptr, i32 } %145, 0
  call void @__clang_call_terminate(ptr %146) #27
  unreachable
}

; Function Attrs: sspstrong uwtable
define dso_local void @_ZNK25SectionBasedConfiguration37getMatchingPerObjectConfigKeySuffixesEPKcS1_(ptr noalias sret(%"class.std::vector.61") align 8 %0, ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %2, ptr noundef %3) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %5 = load ptr, ptr %1, align 8, !tbaa !9
  %6 = getelementptr inbounds ptr, ptr %5, i64 60
  %7 = load ptr, ptr %6, align 8
  tail call void %7(ptr sret(%"class.std::vector.61") align 8 %0, ptr noundef nonnull align 8 dereferenceable(416) %1, ptr noundef %2, ptr noundef %3)
  %8 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !216
  %10 = load ptr, ptr %0, align 8, !tbaa !217
  %11 = ptrtoint ptr %9 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = lshr exact i64 %13, 3
  %15 = trunc i64 %14 to i32
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %35

17:                                               ; preds = %4, %17
  %18 = phi i64 [ %26, %17 ], [ 0, %4 ]
  %19 = phi ptr [ %28, %17 ], [ %10, %4 ]
  %20 = getelementptr inbounds ptr, ptr %19, i64 %18
  %21 = load ptr, ptr %20, align 8, !tbaa !5
  %22 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %21, i32 noundef 46) #29
  %23 = icmp eq ptr %22, null
  %24 = getelementptr inbounds i8, ptr %22, i64 1
  %25 = select i1 %23, ptr null, ptr %24
  store ptr %25, ptr %20, align 8, !tbaa !5
  %26 = add nuw nsw i64 %18, 1
  %27 = load ptr, ptr %8, align 8, !tbaa !216
  %28 = load ptr, ptr %0, align 8, !tbaa !217
  %29 = ptrtoint ptr %27 to i64
  %30 = ptrtoint ptr %28 to i64
  %31 = sub i64 %29, %30
  %32 = shl i64 %31, 29
  %33 = ashr i64 %32, 32
  %34 = icmp slt i64 %26, %33
  br i1 %34, label %17, label %35

35:                                               ; preds = %17, %4
  ret void
}

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local void @_ZNK25SectionBasedConfiguration4dumpEv(ptr noundef nonnull readonly align 8 dereferenceable(416) %0) unnamed_addr #15 align 2 {
  %2 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str)
  %3 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !22
  %5 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %7, label %12

7:                                                ; preds = %12, %1
  %8 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !22
  %10 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %11 = icmp eq ptr %9, %10
  br i1 %11, label %21, label %33

12:                                               ; preds = %1, %12
  %13 = phi ptr [ %19, %12 ], [ %4, %1 ]
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !63
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %13, i64 0, i32 1, i32 1, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !63
  %18 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.123, ptr noundef %15, ptr noundef %17)
  %19 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(ptr noundef %13) #29
  %20 = icmp eq ptr %19, %5
  br i1 %20, label %7, label %12

21:                                               ; preds = %48, %7
  %22 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.170)
  %23 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 9
  %24 = getelementptr inbounds %class.SectionBasedConfiguration, ptr %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !65
  %26 = load ptr, ptr %23, align 8, !tbaa !64
  %27 = ptrtoint ptr %25 to i64
  %28 = ptrtoint ptr %26 to i64
  %29 = sub i64 %27, %28
  %30 = sdiv exact i64 %29, 104
  %31 = trunc i64 %30 to i32
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %71, label %70

33:                                               ; preds = %7, %48
  %34 = phi ptr [ %49, %48 ], [ %9, %7 ]
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %34, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %34, i64 0, i32 1, i32 1
  %37 = load ptr, ptr %35, align 8, !tbaa !63
  %38 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.124, ptr noundef %37)
  %39 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %34, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !65
  %41 = load ptr, ptr %36, align 8, !tbaa !64
  %42 = ptrtoint ptr %40 to i64
  %43 = ptrtoint ptr %41 to i64
  %44 = sub i64 %42, %43
  %45 = sdiv exact i64 %44, 104
  %46 = trunc i64 %45 to i32
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %51, %33
  %49 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(ptr noundef nonnull %34) #29
  %50 = icmp eq ptr %49, %10
  br i1 %50, label %21, label %33

51:                                               ; preds = %33, %51
  %52 = phi i64 [ %60, %51 ], [ 0, %33 ]
  %53 = phi ptr [ %62, %51 ], [ %41, %33 ]
  %54 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %53, i64 %52
  %55 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %54, i64 0, i32 2
  %56 = load ptr, ptr %55, align 8, !tbaa !63
  %57 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %54, i64 0, i32 3
  %58 = load ptr, ptr %57, align 8, !tbaa !63
  %59 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.123, ptr noundef %56, ptr noundef %58)
  %60 = add nuw nsw i64 %52, 1
  %61 = load ptr, ptr %39, align 8, !tbaa !65
  %62 = load ptr, ptr %36, align 8, !tbaa !64
  %63 = ptrtoint ptr %61 to i64
  %64 = ptrtoint ptr %62 to i64
  %65 = sub i64 %63, %64
  %66 = sdiv exact i64 %65, 104
  %67 = shl i64 %66, 32
  %68 = ashr exact i64 %67, 32
  %69 = icmp slt i64 %60, %68
  br i1 %69, label %51, label %48

70:                                               ; preds = %71, %21
  ret void

71:                                               ; preds = %21, %71
  %72 = phi i64 [ %80, %71 ], [ 0, %21 ]
  %73 = phi ptr [ %82, %71 ], [ %26, %21 ]
  %74 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %73, i64 %72
  %75 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %74, i64 0, i32 2
  %76 = load ptr, ptr %75, align 8, !tbaa !63
  %77 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %74, i64 0, i32 3
  %78 = load ptr, ptr %77, align 8, !tbaa !63
  %79 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.123, ptr noundef %76, ptr noundef %78)
  %80 = add nuw nsw i64 %72, 1
  %81 = load ptr, ptr %24, align 8, !tbaa !65
  %82 = load ptr, ptr %23, align 8, !tbaa !64
  %83 = ptrtoint ptr %81 to i64
  %84 = ptrtoint ptr %82 to i64
  %85 = sub i64 %83, %84
  %86 = sdiv exact i64 %85, 104
  %87 = shl i64 %86, 32
  %88 = ashr exact i64 %87, 32
  %89 = icmp slt i64 %80, %88
  br i1 %89, label %71, label %70
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #16

declare noundef ptr @_ZN7cObject13getDescriptorEv(ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #1

declare void @_ZN7cObject18ownedObjectDeletedEP12cOwnedObject(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef) unnamed_addr #1

declare void @_ZN7cObject14yieldOwnershipEP12cOwnedObjectPS_(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, ptr noundef) unnamed_addr #1

declare noundef ptr @_ZNK7cObject12getClassNameEv(ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNK7cObject7getNameEv(ptr noundef nonnull align 8 dereferenceable(8) %0) unnamed_addr #17 comdat align 2 {
  ret ptr @.str.14
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNK7cObject11getFullNameEv(ptr noundef nonnull align 8 dereferenceable(8) %0) unnamed_addr #0 comdat align 2 {
  %2 = load ptr, ptr %0, align 8, !tbaa !9
  %3 = getelementptr inbounds ptr, ptr %2, i64 6
  %4 = load ptr, ptr %3, align 8
  %5 = tail call noundef ptr %4(ptr noundef nonnull align 8 dereferenceable(8) %0)
  ret ptr %5
}

declare void @_ZNK7cObject11getFullPathB5cxx11Ev(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #1

declare void @_ZNK7cObject4infoB5cxx11Ev(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #1

declare void @_ZNK7cObject12detailedInfoB5cxx11Ev(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #1

declare noundef ptr @_ZNK7cObject3dupEv(ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #1

declare void @_ZN7cObject4takeEP12cOwnedObject(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef) unnamed_addr #1

declare void @_ZN7cObject4dropEP12cOwnedObject(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef) unnamed_addr #1

declare void @_ZN7cObject10parsimPackEP11cCommBuffer(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef) unnamed_addr #1

declare void @_ZN7cObject12parsimUnpackEP11cCommBuffer(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef) unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNK7cObject8getOwnerEv(ptr noundef nonnull align 8 dereferenceable(8) %0) unnamed_addr #17 comdat align 2 {
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZNK7cObject13isOwnedObjectEv(ptr noundef nonnull align 8 dereferenceable(8) %0) unnamed_addr #17 comdat align 2 {
  ret i1 false
}

declare void @_ZN7cObject12forEachChildEP8cVisitor(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef) unnamed_addr #1

declare noundef ptr @_ZN14cConfiguration11getAsCustomEP13cConfigOptionPKc(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, ptr noundef) unnamed_addr #1

declare noundef zeroext i1 @_ZN14cConfiguration9getAsBoolEP13cConfigOptionb(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, i1 noundef zeroext) unnamed_addr #1

declare noundef i64 @_ZN14cConfiguration8getAsIntEP13cConfigOptionl(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, i64 noundef) unnamed_addr #1

declare noundef double @_ZN14cConfiguration11getAsDoubleEP13cConfigOptiond(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, double noundef) unnamed_addr #1

declare void @_ZN14cConfiguration11getAsStringB5cxx11EP13cConfigOptionPKc(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, ptr noundef) unnamed_addr #1

declare void @_ZN14cConfiguration13getAsFilenameB5cxx11EP13cConfigOption(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef nonnull align 8 dereferenceable(8), ptr noundef) unnamed_addr #1

declare void @_ZN14cConfiguration14getAsFilenamesB5cxx11EP13cConfigOption(ptr sret(%"class.std::vector.31") align 8, ptr noundef nonnull align 8 dereferenceable(8), ptr noundef) unnamed_addr #1

declare void @_ZN14cConfiguration9getAsPathB5cxx11EP13cConfigOption(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef nonnull align 8 dereferenceable(8), ptr noundef) unnamed_addr #1

declare noundef ptr @_ZN14cConfiguration11getAsCustomEPKcP13cConfigOptionS1_(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, ptr noundef, ptr noundef) unnamed_addr #1

declare noundef zeroext i1 @_ZN14cConfiguration9getAsBoolEPKcP13cConfigOptionb(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, ptr noundef, i1 noundef zeroext) unnamed_addr #1

declare noundef i64 @_ZN14cConfiguration8getAsIntEPKcP13cConfigOptionl(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, ptr noundef, i64 noundef) unnamed_addr #1

declare noundef double @_ZN14cConfiguration11getAsDoubleEPKcP13cConfigOptiond(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, ptr noundef, double noundef) unnamed_addr #1

declare void @_ZN14cConfiguration11getAsStringB5cxx11EPKcP13cConfigOptionS1_(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, ptr noundef, ptr noundef) unnamed_addr #1

declare void @_ZN14cConfiguration13getAsFilenameB5cxx11EPKcP13cConfigOption(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, ptr noundef) unnamed_addr #1

declare void @_ZN14cConfiguration14getAsFilenamesB5cxx11EPKcP13cConfigOption(ptr sret(%"class.std::vector.31") align 8, ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, ptr noundef) unnamed_addr #1

declare void @_ZN14cConfiguration9getAsPathB5cxx11EPKcP13cConfigOption(ptr sret(%"class.std::__cxx11::basic_string") align 8, ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, ptr noundef) unnamed_addr #1

declare void @_ZN13cConfigOptionC1EPKcbbNS_4TypeES1_S1_S1_(ptr noundef nonnull align 8 dereferenceable(144), ptr noundef, i1 noundef zeroext, i1 noundef zeroext, i32 noundef, ptr noundef, ptr noundef, ptr noundef) unnamed_addr #1

declare noundef ptr @_Z12opp_typenameRKSt9type_info(ptr noundef nonnull align 8 dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: sspstrong uwtable
define internal noundef nonnull ptr @_ZL15__uniquename_55v() #0 personality ptr @__gxx_personality_v0 {
  %1 = tail call noalias noundef nonnull dereferenceable(416) ptr @_Znwm(i64 noundef 416) #25
  invoke void @_ZN25SectionBasedConfigurationC2Ev(ptr noundef nonnull align 8 dereferenceable(416) %1)
          to label %2 unwind label %3

2:                                                ; preds = %0
  ret ptr %1

3:                                                ; preds = %0
  %4 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %1) #26
  resume { ptr, i32 } %4
}

declare void @_ZN13cClassFactoryC1EPKcPFP7cObjectvES1_(ptr noundef nonnull align 8 dereferenceable(80), ptr noundef, ptr noundef, ptr noundef) unnamed_addr #1

declare void @_ZN7cObjectD2Ev(ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN25SectionBasedConfiguration12NullKeyValueD0Ev(ptr noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration12NullKeyValueE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !9
  %2 = getelementptr inbounds %"class.SectionBasedConfiguration::NullKeyValue", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  %4 = getelementptr inbounds %"class.SectionBasedConfiguration::NullKeyValue", ptr %0, i64 0, i32 1, i32 2
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.SectionBasedConfiguration::NullKeyValue", ptr %0, i64 0, i32 1, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !13
  %9 = icmp ult i64 %8, 16
  tail call void @llvm.assume(i1 %9)
  br label %11

10:                                               ; preds = %1
  tail call void @_ZdlPv(ptr noundef %3) #26
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #26
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNK25SectionBasedConfiguration12NullKeyValue6getKeyEv(ptr noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #17 comdat align 2 {
  ret ptr null
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNK25SectionBasedConfiguration12NullKeyValue8getValueEv(ptr noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #17 comdat align 2 {
  ret ptr null
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNK25SectionBasedConfiguration12NullKeyValue16getBaseDirectoryEv(ptr noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SectionBasedConfiguration::NullKeyValue", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  ret ptr %3
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %31, label %4

4:                                                ; preds = %2, %29
  %5 = phi ptr [ %9, %29 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !177
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %7)
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !176
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %5, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %5, i64 0, i32 1, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !63
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %5, i64 0, i32 1, i32 1, i32 2
  %14 = icmp eq ptr %12, %13
  br i1 %14, label %15, label %19

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %5, i64 0, i32 1, i32 1, i32 1
  %17 = load i64, ptr %16, align 8, !tbaa !13
  %18 = icmp ult i64 %17, 16
  tail call void @llvm.assume(i1 %18)
  br label %20

19:                                               ; preds = %4
  tail call void @_ZdlPv(ptr noundef %12) #26
  br label %20

20:                                               ; preds = %19, %15
  %21 = load ptr, ptr %10, align 8, !tbaa !63
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %5, i64 0, i32 1, i32 0, i32 2
  %23 = icmp eq ptr %21, %22
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %5, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !13
  %27 = icmp ult i64 %26, 16
  tail call void @llvm.assume(i1 %27)
  br label %29

28:                                               ; preds = %20
  tail call void @_ZdlPv(ptr noundef %21) #26
  br label %29

29:                                               ; preds = %24, %28
  tail call void @_ZdlPv(ptr noundef nonnull %5) #26
  %30 = icmp eq ptr %9, null
  br i1 %30, label %31, label %4

31:                                               ; preds = %29, %2
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev(ptr noundef nonnull align 8 dereferenceable(64) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  %4 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 0, i32 1, i32 2
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 0, i32 1, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !13
  %9 = icmp ult i64 %8, 16
  tail call void @llvm.assume(i1 %9)
  br label %11

10:                                               ; preds = %1
  tail call void @_ZdlPv(ptr noundef %3) #26
  br label %11

11:                                               ; preds = %10, %6
  %12 = load ptr, ptr %0, align 8, !tbaa !63
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  %14 = icmp eq ptr %12, %13
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %17 = load i64, ptr %16, align 8, !tbaa !13
  %18 = icmp ult i64 %17, 16
  tail call void @llvm.assume(i1 %18)
  br label %20

19:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef %12) #26
  br label %20

20:                                               ; preds = %15, %19
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2, %4
  %5 = phi ptr [ %9, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !177
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %7)
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !176
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %5)
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %4

11:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %1, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %1, i64 0, i32 1, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !64
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %1, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !65
  %8 = icmp eq ptr %5, %7
  br i1 %8, label %18, label %9

9:                                                ; preds = %2, %13
  %10 = phi ptr [ %14, %13 ], [ %5, %2 ]
  %11 = load ptr, ptr %10, align 8, !tbaa !9
  %12 = load ptr, ptr %11, align 8
  invoke void %12(ptr noundef nonnull align 8 dereferenceable(104) %10)
          to label %13 unwind label %22

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %10, i64 1
  %15 = icmp eq ptr %14, %7
  br i1 %15, label %16, label %9

16:                                               ; preds = %13
  %17 = load ptr, ptr %4, align 8, !tbaa !64
  br label %18

18:                                               ; preds = %16, %2
  %19 = phi ptr [ %17, %16 ], [ %5, %2 ]
  %20 = icmp eq ptr %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %18
  tail call void @_ZdlPv(ptr noundef nonnull %19) #26
  br label %27

22:                                               ; preds = %9
  %23 = landingpad { ptr, i32 }
          cleanup
  %24 = load ptr, ptr %4, align 8, !tbaa !64
  %25 = icmp eq ptr %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %22
  tail call void @_ZdlPv(ptr noundef nonnull %24) #26
  br label %36

27:                                               ; preds = %21, %18
  %28 = load ptr, ptr %3, align 8, !tbaa !63
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %1, i64 0, i32 1, i32 0, i32 2
  %30 = icmp eq ptr %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %1, i64 0, i32 1, i32 0, i32 1
  %33 = load i64, ptr %32, align 8, !tbaa !13
  %34 = icmp ult i64 %33, 16
  tail call void @llvm.assume(i1 %34)
  br label %46

35:                                               ; preds = %27
  tail call void @_ZdlPv(ptr noundef %28) #26
  br label %46

36:                                               ; preds = %26, %22
  %37 = load ptr, ptr %3, align 8, !tbaa !63
  %38 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %1, i64 0, i32 1, i32 0, i32 2
  %39 = icmp eq ptr %37, %38
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %1, i64 0, i32 1, i32 0, i32 1
  %42 = load i64, ptr %41, align 8, !tbaa !13
  %43 = icmp ult i64 %42, 16
  tail call void @llvm.assume(i1 %43)
  br label %45

44:                                               ; preds = %36
  tail call void @_ZdlPv(ptr noundef %37) #26
  br label %45

45:                                               ; preds = %44, %40
  resume { ptr, i32 } %23

46:                                               ; preds = %31, %35
  tail call void @_ZdlPv(ptr noundef nonnull %1) #26
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration5GroupEED2Ev(ptr noundef nonnull align 8 dereferenceable(56) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.std::pair.72", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !64
  %4 = getelementptr inbounds %"struct.std::pair.72", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !65
  %6 = icmp eq ptr %3, %5
  br i1 %6, label %16, label %7

7:                                                ; preds = %1, %11
  %8 = phi ptr [ %12, %11 ], [ %3, %1 ]
  %9 = load ptr, ptr %8, align 8, !tbaa !9
  %10 = load ptr, ptr %9, align 8
  invoke void %10(ptr noundef nonnull align 8 dereferenceable(104) %8)
          to label %11 unwind label %20

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %8, i64 1
  %13 = icmp eq ptr %12, %5
  br i1 %13, label %14, label %7

14:                                               ; preds = %11
  %15 = load ptr, ptr %2, align 8, !tbaa !64
  br label %16

16:                                               ; preds = %14, %1
  %17 = phi ptr [ %15, %14 ], [ %3, %1 ]
  %18 = icmp eq ptr %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  tail call void @_ZdlPv(ptr noundef nonnull %17) #26
  br label %25

20:                                               ; preds = %7
  %21 = landingpad { ptr, i32 }
          cleanup
  %22 = load ptr, ptr %2, align 8, !tbaa !64
  %23 = icmp eq ptr %22, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %20
  tail call void @_ZdlPv(ptr noundef nonnull %22) #26
  br label %35

25:                                               ; preds = %19, %16
  %26 = load ptr, ptr %0, align 8, !tbaa !63
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %31 = load i64, ptr %30, align 8, !tbaa !13
  %32 = icmp ult i64 %31, 16
  tail call void @llvm.assume(i1 %32)
  br label %34

33:                                               ; preds = %25
  tail call void @_ZdlPv(ptr noundef %26) #26
  br label %34

34:                                               ; preds = %29, %33
  ret void

35:                                               ; preds = %20, %24
  %36 = load ptr, ptr %0, align 8, !tbaa !63
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  %38 = icmp eq ptr %36, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %41 = load i64, ptr %40, align 8, !tbaa !13
  %42 = icmp ult i64 %41, 16
  tail call void @llvm.assume(i1 %42)
  br label %44

43:                                               ; preds = %35
  tail call void @_ZdlPv(ptr noundef %36) #26
  br label %44

44:                                               ; preds = %43, %39
  resume { ptr, i32 } %21
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %42, label %4

4:                                                ; preds = %2, %40
  %5 = phi ptr [ %9, %40 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !177
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %7)
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !176
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %5, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %5, i64 0, i32 1, i32 1
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !9
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %5, i64 0, i32 1, i32 1, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !63
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %5, i64 0, i32 1, i32 1, i32 3, i32 2
  %15 = icmp eq ptr %13, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %5, i64 0, i32 1, i32 1, i32 3, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !13
  %19 = icmp ult i64 %18, 16
  tail call void @llvm.assume(i1 %19)
  br label %21

20:                                               ; preds = %4
  tail call void @_ZdlPv(ptr noundef %13) #26
  br label %21

21:                                               ; preds = %20, %16
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %5, i64 0, i32 1, i32 1, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !63
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %5, i64 0, i32 1, i32 1, i32 2, i32 2
  %25 = icmp eq ptr %23, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %5, i64 0, i32 1, i32 1, i32 2, i32 1
  %28 = load i64, ptr %27, align 8, !tbaa !13
  %29 = icmp ult i64 %28, 16
  tail call void @llvm.assume(i1 %29)
  br label %31

30:                                               ; preds = %21
  tail call void @_ZdlPv(ptr noundef %23) #26
  br label %31

31:                                               ; preds = %30, %26
  %32 = load ptr, ptr %10, align 8, !tbaa !63
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %5, i64 0, i32 1, i32 0, i32 2
  %34 = icmp eq ptr %32, %33
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %5, i64 0, i32 1, i32 0, i32 1
  %37 = load i64, ptr %36, align 8, !tbaa !13
  %38 = icmp ult i64 %37, 16
  tail call void @llvm.assume(i1 %38)
  br label %40

39:                                               ; preds = %31
  tail call void @_ZdlPv(ptr noundef %32) #26
  br label %40

40:                                               ; preds = %35, %39
  tail call void @_ZdlPv(ptr noundef nonnull %5) #26
  %41 = icmp eq ptr %9, null
  br i1 %41, label %42, label %4

42:                                               ; preds = %40, %2
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration9KeyValue1EED2Ev(ptr noundef nonnull align 8 dereferenceable(112) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.std::pair.88", ptr %0, i64 0, i32 1
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !9
  %3 = getelementptr inbounds %"struct.std::pair.88", ptr %0, i64 0, i32 1, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !63
  %5 = getelementptr inbounds %"struct.std::pair.88", ptr %0, i64 0, i32 1, i32 3, i32 2
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.std::pair.88", ptr %0, i64 0, i32 1, i32 3, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !13
  %10 = icmp ult i64 %9, 16
  tail call void @llvm.assume(i1 %10)
  br label %12

11:                                               ; preds = %1
  tail call void @_ZdlPv(ptr noundef %4) #26
  br label %12

12:                                               ; preds = %11, %7
  %13 = getelementptr inbounds %"struct.std::pair.88", ptr %0, i64 0, i32 1, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !63
  %15 = getelementptr inbounds %"struct.std::pair.88", ptr %0, i64 0, i32 1, i32 2, i32 2
  %16 = icmp eq ptr %14, %15
  br i1 %16, label %17, label %21

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.std::pair.88", ptr %0, i64 0, i32 1, i32 2, i32 1
  %19 = load i64, ptr %18, align 8, !tbaa !13
  %20 = icmp ult i64 %19, 16
  tail call void @llvm.assume(i1 %20)
  br label %22

21:                                               ; preds = %12
  tail call void @_ZdlPv(ptr noundef %14) #26
  br label %22

22:                                               ; preds = %21, %17
  %23 = load ptr, ptr %0, align 8, !tbaa !63
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  %25 = icmp eq ptr %23, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %28 = load i64, ptr %27, align 8, !tbaa !13
  %29 = icmp ult i64 %28, 16
  tail call void @llvm.assume(i1 %29)
  br label %31

30:                                               ; preds = %22
  tail call void @_ZdlPv(ptr noundef %23) #26
  br label %31

31:                                               ; preds = %26, %30
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2, %19
  %5 = phi ptr [ %9, %19 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !177
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %7)
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !176
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %5, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !63
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %5, i64 0, i32 1, i32 2
  %13 = icmp eq ptr %11, %12
  br i1 %13, label %14, label %18

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %5, i64 0, i32 1, i32 1
  %16 = load i64, ptr %15, align 8, !tbaa !13
  %17 = icmp ult i64 %16, 16
  tail call void @llvm.assume(i1 %17)
  br label %19

18:                                               ; preds = %4
  tail call void @_ZdlPv(ptr noundef %11) #26
  br label %19

19:                                               ; preds = %14, %18
  tail call void @_ZdlPv(ptr noundef nonnull %5) #26
  %20 = icmp eq ptr %9, null
  br i1 %20, label %21, label %4

21:                                               ; preds = %19, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt9exceptionD2Ev(ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #18

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN10cExceptionD2Ev(ptr noundef nonnull align 8 dereferenceable(124) %0) unnamed_addr #17 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [13 x ptr] }, ptr @_ZTV10cException, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !9
  %2 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  %4 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 7, i32 2
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 7, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !13
  %9 = icmp ult i64 %8, 16
  tail call void @llvm.assume(i1 %9)
  br label %11

10:                                               ; preds = %1
  tail call void @_ZdlPv(ptr noundef %3) #26
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 6
  %13 = load ptr, ptr %12, align 8, !tbaa !63
  %14 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 6, i32 2
  %15 = icmp eq ptr %13, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 6, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !13
  %19 = icmp ult i64 %18, 16
  tail call void @llvm.assume(i1 %19)
  br label %21

20:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef %13) #26
  br label %21

21:                                               ; preds = %20, %16
  %22 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !63
  %24 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 3, i32 2
  %25 = icmp eq ptr %23, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 3, i32 1
  %28 = load i64, ptr %27, align 8, !tbaa !13
  %29 = icmp ult i64 %28, 16
  tail call void @llvm.assume(i1 %29)
  br label %31

30:                                               ; preds = %21
  tail call void @_ZdlPv(ptr noundef %23) #26
  br label %31

31:                                               ; preds = %30, %26
  tail call void @_ZNSt9exceptionD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %0) #28
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN10cExceptionD0Ev(ptr noundef nonnull align 8 dereferenceable(124) %0) unnamed_addr #17 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [13 x ptr] }, ptr @_ZTV10cException, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !9
  %2 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  %4 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 7, i32 2
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 7, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !13
  %9 = icmp ult i64 %8, 16
  tail call void @llvm.assume(i1 %9)
  br label %11

10:                                               ; preds = %1
  tail call void @_ZdlPv(ptr noundef %3) #26
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 6
  %13 = load ptr, ptr %12, align 8, !tbaa !63
  %14 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 6, i32 2
  %15 = icmp eq ptr %13, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 6, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !13
  %19 = icmp ult i64 %18, 16
  tail call void @llvm.assume(i1 %19)
  br label %21

20:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef %13) #26
  br label %21

21:                                               ; preds = %20, %16
  %22 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !63
  %24 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 3, i32 2
  %25 = icmp eq ptr %23, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 3, i32 1
  %28 = load i64, ptr %27, align 8, !tbaa !13
  %29 = icmp ult i64 %28, 16
  tail call void @llvm.assume(i1 %29)
  br label %31

30:                                               ; preds = %21
  tail call void @_ZdlPv(ptr noundef %23) #26
  br label %31

31:                                               ; preds = %26, %30
  tail call void @_ZNSt9exceptionD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %0) #28
  tail call void @_ZdlPv(ptr noundef nonnull %0) #26
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNK10cException4whatEv(ptr noundef nonnull align 8 dereferenceable(124) %0) unnamed_addr #17 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  ret ptr %3
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNK10cException3dupEv(ptr noundef nonnull align 8 dereferenceable(124) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = tail call noalias noundef nonnull dereferenceable(128) ptr @_Znwm(i64 noundef 128) #25
  invoke void @_ZN10cExceptionC1ERKS_(ptr noundef nonnull align 8 dereferenceable(124) %2, ptr noundef nonnull align 8 dereferenceable(124) %0)
          to label %3 unwind label %4

3:                                                ; preds = %1
  ret ptr %2

4:                                                ; preds = %1
  %5 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %2) #26
  resume { ptr, i32 } %5
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local noundef i32 @_ZNK10cException12getErrorCodeEv(ptr noundef nonnull align 8 dereferenceable(124) %0) unnamed_addr #17 comdat align 2 {
  %2 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !235
  ret i32 %3
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN10cException10setMessageEPKc(ptr noundef nonnull align 8 dereferenceable(124) %0, ptr noundef %1) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 3, i32 1
  %5 = load i64, ptr %4, align 8, !tbaa !13
  %6 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #28
  %7 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef 0, i64 noundef %5, ptr noundef %1, i64 noundef %6)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN10cException14prependMessageEPKc(ptr noundef nonnull align 8 dereferenceable(124) %0, ptr noundef %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #28
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #28
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 2
  store ptr %7, ptr %6, align 8, !tbaa !11
  %8 = icmp eq ptr %1, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  call void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.165) #30
  unreachable

10:                                               ; preds = %2
  %11 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #28
  store i64 %11, ptr %3, align 8, !tbaa !87
  %12 = icmp ugt i64 %11, 15
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %6, ptr noundef nonnull align 8 dereferenceable(8) %3, i64 noundef 0)
  store ptr %14, ptr %6, align 8, !tbaa !63
  %15 = load i64, ptr %3, align 8, !tbaa !87
  store i64 %15, ptr %7, align 8, !tbaa !16
  br label %16

16:                                               ; preds = %13, %10
  %17 = phi ptr [ %14, %13 ], [ %7, %10 ]
  switch i64 %11, label %20 [
    i64 1, label %18
    i64 0, label %21
  ]

18:                                               ; preds = %16
  %19 = load i8, ptr %1, align 1, !tbaa !16
  store i8 %19, ptr %17, align 1, !tbaa !16
  br label %21

20:                                               ; preds = %16
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %17, ptr nonnull align 1 %1, i64 %11, i1 false)
  br label %21

21:                                               ; preds = %20, %18, %16
  %22 = load i64, ptr %3, align 8, !tbaa !87
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 1
  store i64 %22, ptr %23, align 8, !tbaa !13
  %24 = load ptr, ptr %6, align 8, !tbaa !63
  %25 = getelementptr inbounds i8, ptr %24, i64 %22
  store i8 0, ptr %25, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  call void @llvm.experimental.noalias.scope.decl(metadata !238)
  %26 = load ptr, ptr %6, align 8, !tbaa !63, !noalias !238
  %27 = load i64, ptr %23, align 8, !tbaa !13, !noalias !238
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 2
  store ptr %28, ptr %5, align 8, !tbaa !11, !alias.scope !241
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 1
  store i64 0, ptr %29, align 8, !tbaa !13, !alias.scope !241
  store i8 0, ptr %28, align 8, !tbaa !16, !alias.scope !241
  %30 = add i64 %27, 2
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %30)
          to label %31 unwind label %45

31:                                               ; preds = %21
  %32 = load i64, ptr %29, align 8, !tbaa !13, !alias.scope !241
  %33 = sub i64 4611686018427387903, %32
  %34 = icmp ult i64 %33, %27
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  %36 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef %26, i64 noundef %27)
          to label %37 unwind label %45

37:                                               ; preds = %35
  %38 = load i64, ptr %29, align 8, !tbaa !13, !alias.scope !241
  %39 = and i64 %38, -2
  %40 = icmp eq i64 %39, 4611686018427387902
  br i1 %40, label %41, label %43

41:                                               ; preds = %37, %31
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %42 unwind label %45

42:                                               ; preds = %41
  unreachable

43:                                               ; preds = %37
  %44 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull @.str.149, i64 noundef 2)
          to label %53 unwind label %45

45:                                               ; preds = %43, %41, %35, %21
  %46 = landingpad { ptr, i32 }
          cleanup
  %47 = load ptr, ptr %5, align 8, !tbaa !63, !alias.scope !241
  %48 = icmp eq ptr %47, %28
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  %50 = load i64, ptr %29, align 8, !tbaa !13, !alias.scope !241
  %51 = icmp ult i64 %50, 16
  call void @llvm.assume(i1 %51)
  br label %124

52:                                               ; preds = %45
  call void @_ZdlPv(ptr noundef %47) #26
  br label %124

53:                                               ; preds = %43
  %54 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 3
  call void @llvm.experimental.noalias.scope.decl(metadata !244)
  %55 = load ptr, ptr %5, align 8, !tbaa !63, !noalias !244
  %56 = load i64, ptr %29, align 8, !tbaa !13, !noalias !244
  %57 = load ptr, ptr %54, align 8, !tbaa !63, !noalias !244
  %58 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 3, i32 1
  %59 = load i64, ptr %58, align 8, !tbaa !13, !noalias !244
  %60 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 2
  store ptr %60, ptr %4, align 8, !tbaa !11, !alias.scope !247
  %61 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 1
  store i64 0, ptr %61, align 8, !tbaa !13, !alias.scope !247
  store i8 0, ptr %60, align 8, !tbaa !16, !alias.scope !247
  %62 = add i64 %59, %56
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %62)
          to label %63 unwind label %77

63:                                               ; preds = %53
  %64 = load i64, ptr %61, align 8, !tbaa !13, !alias.scope !247
  %65 = sub i64 4611686018427387903, %64
  %66 = icmp ult i64 %65, %56
  br i1 %66, label %73, label %67

67:                                               ; preds = %63
  %68 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef %55, i64 noundef %56)
          to label %69 unwind label %77

69:                                               ; preds = %67
  %70 = load i64, ptr %61, align 8, !tbaa !13, !alias.scope !247
  %71 = sub i64 4611686018427387903, %70
  %72 = icmp ult i64 %71, %59
  br i1 %72, label %73, label %75

73:                                               ; preds = %69, %63
  invoke void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.166) #30
          to label %74 unwind label %77

74:                                               ; preds = %73
  unreachable

75:                                               ; preds = %69
  %76 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef %57, i64 noundef %59)
          to label %85 unwind label %77

77:                                               ; preds = %75, %73, %67, %53
  %78 = landingpad { ptr, i32 }
          cleanup
  %79 = load ptr, ptr %4, align 8, !tbaa !63, !alias.scope !247
  %80 = icmp eq ptr %79, %60
  br i1 %80, label %81, label %84

81:                                               ; preds = %77
  %82 = load i64, ptr %61, align 8, !tbaa !13, !alias.scope !247
  %83 = icmp ult i64 %82, 16
  call void @llvm.assume(i1 %83)
  br label %116

84:                                               ; preds = %77
  call void @_ZdlPv(ptr noundef %79) #26
  br label %116

85:                                               ; preds = %75
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %54, ptr noundef nonnull align 8 dereferenceable(32) %4)
          to label %86 unwind label %108

86:                                               ; preds = %85
  %87 = load ptr, ptr %4, align 8, !tbaa !63
  %88 = icmp eq ptr %87, %60
  br i1 %88, label %89, label %92

89:                                               ; preds = %86
  %90 = load i64, ptr %61, align 8, !tbaa !13
  %91 = icmp ult i64 %90, 16
  call void @llvm.assume(i1 %91)
  br label %93

92:                                               ; preds = %86
  call void @_ZdlPv(ptr noundef %87) #26
  br label %93

93:                                               ; preds = %92, %89
  %94 = load ptr, ptr %5, align 8, !tbaa !63
  %95 = icmp eq ptr %94, %28
  br i1 %95, label %96, label %99

96:                                               ; preds = %93
  %97 = load i64, ptr %29, align 8, !tbaa !13
  %98 = icmp ult i64 %97, 16
  call void @llvm.assume(i1 %98)
  br label %100

99:                                               ; preds = %93
  call void @_ZdlPv(ptr noundef %94) #26
  br label %100

100:                                              ; preds = %99, %96
  %101 = load ptr, ptr %6, align 8, !tbaa !63
  %102 = icmp eq ptr %101, %7
  br i1 %102, label %103, label %106

103:                                              ; preds = %100
  %104 = load i64, ptr %23, align 8, !tbaa !13
  %105 = icmp ult i64 %104, 16
  call void @llvm.assume(i1 %105)
  br label %107

106:                                              ; preds = %100
  call void @_ZdlPv(ptr noundef %101) #26
  br label %107

107:                                              ; preds = %106, %103
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #28
  ret void

108:                                              ; preds = %85
  %109 = landingpad { ptr, i32 }
          cleanup
  %110 = load ptr, ptr %4, align 8, !tbaa !63
  %111 = icmp eq ptr %110, %60
  br i1 %111, label %112, label %115

112:                                              ; preds = %108
  %113 = load i64, ptr %61, align 8, !tbaa !13
  %114 = icmp ult i64 %113, 16
  call void @llvm.assume(i1 %114)
  br label %116

115:                                              ; preds = %108
  call void @_ZdlPv(ptr noundef %110) #26
  br label %116

116:                                              ; preds = %115, %112, %84, %81
  %117 = phi { ptr, i32 } [ %78, %84 ], [ %78, %81 ], [ %109, %112 ], [ %109, %115 ]
  %118 = load ptr, ptr %5, align 8, !tbaa !63
  %119 = icmp eq ptr %118, %28
  br i1 %119, label %120, label %123

120:                                              ; preds = %116
  %121 = load i64, ptr %29, align 8, !tbaa !13
  %122 = icmp ult i64 %121, 16
  call void @llvm.assume(i1 %122)
  br label %124

123:                                              ; preds = %116
  call void @_ZdlPv(ptr noundef %118) #26
  br label %124

124:                                              ; preds = %123, %120, %52, %49
  %125 = phi { ptr, i32 } [ %46, %52 ], [ %46, %49 ], [ %117, %120 ], [ %117, %123 ]
  %126 = load ptr, ptr %6, align 8, !tbaa !63
  %127 = icmp eq ptr %126, %7
  br i1 %127, label %128, label %131

128:                                              ; preds = %124
  %129 = load i64, ptr %23, align 8, !tbaa !13
  %130 = icmp ult i64 %129, 16
  call void @llvm.assume(i1 %130)
  br label %132

131:                                              ; preds = %124
  call void @_ZdlPv(ptr noundef %126) #26
  br label %132

132:                                              ; preds = %131, %128
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #28
  resume { ptr, i32 } %125
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZNK10cException10hasContextEv(ptr noundef nonnull align 8 dereferenceable(124) %0) unnamed_addr #17 comdat align 2 {
  %2 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 4
  %3 = load i8, ptr %2, align 8, !tbaa !250, !range !76, !noundef !77
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNK10cException19getContextClassNameEv(ptr noundef nonnull align 8 dereferenceable(124) %0) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 6
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  ret ptr %3
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNK10cException18getContextFullPathEv(ptr noundef nonnull align 8 dereferenceable(124) %0) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local noundef i32 @_ZNK10cException11getModuleIDEv(ptr noundef nonnull align 8 dereferenceable(124) %0) unnamed_addr #17 comdat align 2 {
  %2 = getelementptr inbounds %class.cException, ptr %0, i64 0, i32 8
  %3 = load i32, ptr %2, align 8, !tbaa !251
  ret i32 %3
}

declare void @_ZN10cExceptionC1ERKS_(ptr noundef nonnull align 8 dereferenceable(124), ptr noundef nonnull align 8 dereferenceable(124)) unnamed_addr #1

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN25SectionBasedConfiguration9KeyValue1D0Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !9
  %2 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  %4 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3, i32 2
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !13
  %9 = icmp ult i64 %8, 16
  tail call void @llvm.assume(i1 %9)
  br label %11

10:                                               ; preds = %1
  tail call void @_ZdlPv(ptr noundef %3) #26
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !63
  %14 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2, i32 2
  %15 = icmp eq ptr %13, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !13
  %19 = icmp ult i64 %18, 16
  tail call void @llvm.assume(i1 %19)
  br label %21

20:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef %13) #26
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZdlPv(ptr noundef nonnull %0) #26
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNK25SectionBasedConfiguration9KeyValue16getKeyEv(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  ret ptr %3
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNK25SectionBasedConfiguration9KeyValue18getValueEv(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  ret ptr %3
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNK25SectionBasedConfiguration9KeyValue116getBaseDirectoryEv(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !85
  %4 = load ptr, ptr %3, align 8, !tbaa !63
  ret ptr %4
}

declare noundef ptr @_ZN13cClassFactory9createOneEPKc(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind
declare i64 @__isoc23_strtol(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #18

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare i32 @isspace(i32 noundef) local_unnamed_addr #19

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare i32 @isalpha(i32 noundef) local_unnamed_addr #19

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare i32 @isalnum(i32 noundef) local_unnamed_addr #19

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN25SectionBasedConfiguration9KeyValue2D0Ev(ptr noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !9
  %2 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !63
  %4 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3, i32 2
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !13
  %9 = icmp ult i64 %8, 16
  tail call void @llvm.assume(i1 %9)
  br label %11

10:                                               ; preds = %1
  tail call void @_ZdlPv(ptr noundef %3) #26
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !63
  %14 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2, i32 2
  %15 = icmp eq ptr %13, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !13
  %19 = icmp ult i64 %18, 16
  tail call void @llvm.assume(i1 %19)
  br label %21

20:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef %13) #26
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZdlPv(ptr noundef nonnull %0) #26
  ret void
}

; Function Attrs: noreturn
declare void @_ZSt19__throw_logic_errorPKc(ptr noundef) local_unnamed_addr #20

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #7

declare noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #1

declare noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32), i64 noundef, i64 noundef, ptr noundef, i64 noundef) local_unnamed_addr #1

declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32), i64 noundef) local_unnamed_addr #1

declare noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(ptr noundef) local_unnamed_addr #20

declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef nonnull align 8 dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare noundef ptr @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(ptr noundef) local_unnamed_addr #19

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue1ESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(80) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue1, std::allocator<SectionBasedConfiguration::KeyValue1> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !67
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 9223372036854775760
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.167) #30
  unreachable

12:                                               ; preds = %3
  %13 = sdiv exact i64 %9, 80
  %14 = tail call i64 @llvm.umax.i64(i64 %13, i64 1)
  %15 = add i64 %14, %13
  %16 = icmp ult i64 %15, %13
  %17 = icmp ugt i64 %15, 115292150460684697
  %18 = or i1 %16, %17
  %19 = select i1 %18, i64 115292150460684697, i64 %15
  %20 = ptrtoint ptr %1 to i64
  %21 = sub i64 %20, %8
  %22 = sdiv exact i64 %21, 80
  %23 = icmp eq i64 %19, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %12
  %25 = mul nuw nsw i64 %19, 80
  %26 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %25) #25
  br label %27

27:                                               ; preds = %12, %24
  %28 = phi ptr [ %26, %24 ], [ null, %12 ]
  %29 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %28, i64 %22
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1C2ERKS0_(ptr noundef nonnull align 8 dereferenceable(80) %29, ptr noundef nonnull align 8 dereferenceable(80) %2)
          to label %30 unwind label %120

30:                                               ; preds = %27
  %31 = icmp eq ptr %6, %1
  br i1 %31, label %65, label %32

32:                                               ; preds = %30, %35
  %33 = phi ptr [ %37, %35 ], [ %28, %30 ]
  %34 = phi ptr [ %36, %35 ], [ %6, %30 ]
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1C2ERKS0_(ptr noundef nonnull align 8 dereferenceable(80) %33, ptr noundef nonnull align 8 dereferenceable(80) %34)
          to label %35 unwind label %39

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %34, i64 1
  %37 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %33, i64 1
  %38 = icmp eq ptr %36, %1
  br i1 %38, label %65, label %32

39:                                               ; preds = %32
  %40 = landingpad { ptr, i32 }
          catch ptr null
  %41 = extractvalue { ptr, i32 } %40, 0
  %42 = tail call ptr @__cxa_begin_catch(ptr %41) #28
  %43 = icmp eq ptr %33, %28
  br i1 %43, label %51, label %44

44:                                               ; preds = %39, %48
  %45 = phi ptr [ %49, %48 ], [ %28, %39 ]
  %46 = load ptr, ptr %45, align 8, !tbaa !9
  %47 = load ptr, ptr %46, align 8
  invoke void %47(ptr noundef nonnull align 8 dereferenceable(80) %45)
          to label %48 unwind label %52

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %45, i64 1
  %50 = icmp eq ptr %49, %33
  br i1 %50, label %51, label %44

51:                                               ; preds = %48, %39
  invoke void @__cxa_rethrow() #30
          to label %64 unwind label %54

52:                                               ; preds = %44
  %53 = landingpad { ptr, i32 }
          catch ptr null
  br label %56

54:                                               ; preds = %51
  %55 = landingpad { ptr, i32 }
          catch ptr null
  br label %56

56:                                               ; preds = %54, %52
  %57 = phi { ptr, i32 } [ %53, %52 ], [ %55, %54 ]
  invoke void @__cxa_end_catch()
          to label %58 unwind label %61

58:                                               ; preds = %56
  %59 = extractvalue { ptr, i32 } %57, 0
  %60 = tail call ptr @__cxa_begin_catch(ptr %59) #28
  br label %125

61:                                               ; preds = %56
  %62 = landingpad { ptr, i32 }
          catch ptr null
  %63 = extractvalue { ptr, i32 } %62, 0
  tail call void @__clang_call_terminate(ptr %63) #27
  unreachable

64:                                               ; preds = %51
  unreachable

65:                                               ; preds = %35, %30
  %66 = phi ptr [ %28, %30 ], [ %37, %35 ]
  %67 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %66, i64 1
  %68 = icmp eq ptr %5, %1
  br i1 %68, label %105, label %69

69:                                               ; preds = %65, %73
  %70 = phi i64 [ %75, %73 ], [ 1, %65 ]
  %71 = phi ptr [ %74, %73 ], [ %1, %65 ]
  %72 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %66, i64 %70
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1C2ERKS0_(ptr noundef nonnull align 8 dereferenceable(80) %72, ptr noundef nonnull align 8 dereferenceable(80) %71)
          to label %73 unwind label %77

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %71, i64 1
  %75 = add nuw nsw i64 %70, 1
  %76 = icmp eq ptr %74, %5
  br i1 %76, label %103, label %69

77:                                               ; preds = %69
  %78 = landingpad { ptr, i32 }
          catch ptr null
  %79 = extractvalue { ptr, i32 } %78, 0
  %80 = tail call ptr @__cxa_begin_catch(ptr %79) #28
  %81 = icmp eq i64 %70, 1
  br i1 %81, label %89, label %82

82:                                               ; preds = %77, %86
  %83 = phi ptr [ %87, %86 ], [ %67, %77 ]
  %84 = load ptr, ptr %83, align 8, !tbaa !9
  %85 = load ptr, ptr %84, align 8
  invoke void %85(ptr noundef nonnull align 8 dereferenceable(80) %83)
          to label %86 unwind label %90

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %83, i64 1
  %88 = icmp eq ptr %87, %72
  br i1 %88, label %89, label %82

89:                                               ; preds = %86, %77
  invoke void @__cxa_rethrow() #30
          to label %102 unwind label %92

90:                                               ; preds = %82
  %91 = landingpad { ptr, i32 }
          catch ptr null
  br label %94

92:                                               ; preds = %89
  %93 = landingpad { ptr, i32 }
          catch ptr null
  br label %94

94:                                               ; preds = %92, %90
  %95 = phi { ptr, i32 } [ %91, %90 ], [ %93, %92 ]
  invoke void @__cxa_end_catch()
          to label %96 unwind label %99

96:                                               ; preds = %94
  %97 = extractvalue { ptr, i32 } %95, 0
  %98 = tail call ptr @__cxa_begin_catch(ptr %97) #28
  br label %134

99:                                               ; preds = %94
  %100 = landingpad { ptr, i32 }
          catch ptr null
  %101 = extractvalue { ptr, i32 } %100, 0
  tail call void @__clang_call_terminate(ptr %101) #27
  unreachable

102:                                              ; preds = %89
  unreachable

103:                                              ; preds = %73
  %104 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %66, i64 %75
  br label %105

105:                                              ; preds = %103, %65
  %106 = phi ptr [ %67, %65 ], [ %104, %103 ]
  %107 = icmp eq ptr %6, %5
  br i1 %107, label %114, label %108

108:                                              ; preds = %105, %108
  %109 = phi ptr [ %112, %108 ], [ %6, %105 ]
  %110 = load ptr, ptr %109, align 8, !tbaa !9
  %111 = load ptr, ptr %110, align 8
  tail call void %111(ptr noundef nonnull align 8 dereferenceable(80) %109)
  %112 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %109, i64 1
  %113 = icmp eq ptr %112, %5
  br i1 %113, label %114, label %108

114:                                              ; preds = %108, %105
  %115 = icmp eq ptr %6, null
  br i1 %115, label %117, label %116

116:                                              ; preds = %114
  tail call void @_ZdlPv(ptr noundef nonnull %6) #26
  br label %117

117:                                              ; preds = %114, %116
  %118 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue1, std::allocator<SectionBasedConfiguration::KeyValue1> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %28, ptr %0, align 8, !tbaa !66
  store ptr %106, ptr %4, align 8, !tbaa !67
  %119 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %28, i64 %19
  store ptr %119, ptr %118, align 8, !tbaa !84
  ret void

120:                                              ; preds = %27
  %121 = landingpad { ptr, i32 }
          catch ptr null
  %122 = extractvalue { ptr, i32 } %121, 0
  %123 = tail call ptr @__cxa_begin_catch(ptr %122) #28
  %124 = icmp eq ptr %28, null
  br i1 %124, label %125, label %134

125:                                              ; preds = %58, %120
  %126 = load ptr, ptr %29, align 8, !tbaa !9
  %127 = load ptr, ptr %126, align 8
  invoke void %127(ptr noundef nonnull align 8 dereferenceable(80) %29)
          to label %146 unwind label %130

128:                                              ; preds = %137
  %129 = landingpad { ptr, i32 }
          cleanup
  br label %132

130:                                              ; preds = %147, %125
  %131 = landingpad { ptr, i32 }
          cleanup
  br label %132

132:                                              ; preds = %130, %128
  %133 = phi { ptr, i32 } [ %129, %128 ], [ %131, %130 ]
  invoke void @__cxa_end_catch()
          to label %148 unwind label %149

134:                                              ; preds = %96, %120
  %135 = phi ptr [ %67, %96 ], [ %28, %120 ]
  %136 = icmp eq ptr %28, %135
  br i1 %136, label %144, label %137

137:                                              ; preds = %134, %141
  %138 = phi ptr [ %142, %141 ], [ %28, %134 ]
  %139 = load ptr, ptr %138, align 8, !tbaa !9
  %140 = load ptr, ptr %139, align 8
  invoke void %140(ptr noundef nonnull align 8 dereferenceable(80) %138)
          to label %141 unwind label %128

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %138, i64 1
  %143 = icmp eq ptr %142, %135
  br i1 %143, label %144, label %137

144:                                              ; preds = %141, %134
  %145 = icmp eq ptr %28, null
  br i1 %145, label %147, label %146

146:                                              ; preds = %125, %144
  tail call void @_ZdlPv(ptr noundef nonnull %28) #26
  br label %147

147:                                              ; preds = %146, %144
  invoke void @__cxa_rethrow() #30
          to label %152 unwind label %130

148:                                              ; preds = %132
  resume { ptr, i32 } %133

149:                                              ; preds = %132
  %150 = landingpad { ptr, i32 }
          catch ptr null
  %151 = extractvalue { ptr, i32 } %150, 0
  tail call void @__clang_call_terminate(ptr %151) #27
  unreachable

152:                                              ; preds = %147
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN25SectionBasedConfiguration9KeyValue1C2ERKS0_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %1) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue1E, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !9
  %5 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !85
  store ptr %7, ptr %5, align 8, !tbaa !85
  %8 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %1, i64 0, i32 2
  %10 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2, i32 2
  store ptr %10, ptr %8, align 8, !tbaa !11
  %11 = load ptr, ptr %9, align 8, !tbaa !63
  %12 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %1, i64 0, i32 2, i32 1
  %13 = load i64, ptr %12, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %13, ptr %4, align 8, !tbaa !87
  %14 = icmp ugt i64 %13, 15
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %8, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
  store ptr %16, ptr %8, align 8, !tbaa !63
  %17 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %17, ptr %10, align 8, !tbaa !16
  br label %18

18:                                               ; preds = %15, %2
  %19 = phi ptr [ %16, %15 ], [ %10, %2 ]
  switch i64 %13, label %22 [
    i64 1, label %20
    i64 0, label %23
  ]

20:                                               ; preds = %18
  %21 = load i8, ptr %11, align 1, !tbaa !16
  store i8 %21, ptr %19, align 1, !tbaa !16
  br label %23

22:                                               ; preds = %18
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %19, ptr align 1 %11, i64 %13, i1 false)
  br label %23

23:                                               ; preds = %22, %20, %18
  %24 = load i64, ptr %4, align 8, !tbaa !87
  %25 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 2, i32 1
  store i64 %24, ptr %25, align 8, !tbaa !13
  %26 = load ptr, ptr %8, align 8, !tbaa !63
  %27 = getelementptr inbounds i8, ptr %26, i64 %24
  store i8 0, ptr %27, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %28 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3
  %29 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %1, i64 0, i32 3
  %30 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3, i32 2
  store ptr %30, ptr %28, align 8, !tbaa !11
  %31 = load ptr, ptr %29, align 8, !tbaa !63
  %32 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %1, i64 0, i32 3, i32 1
  %33 = load i64, ptr %32, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #28
  store i64 %33, ptr %3, align 8, !tbaa !87
  %34 = icmp ugt i64 %33, 15
  br i1 %34, label %35, label %39

35:                                               ; preds = %23
  %36 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %28, ptr noundef nonnull align 8 dereferenceable(8) %3, i64 noundef 0)
          to label %37 unwind label %49

37:                                               ; preds = %35
  store ptr %36, ptr %28, align 8, !tbaa !63
  %38 = load i64, ptr %3, align 8, !tbaa !87
  store i64 %38, ptr %30, align 8, !tbaa !16
  br label %39

39:                                               ; preds = %37, %23
  %40 = phi ptr [ %36, %37 ], [ %30, %23 ]
  switch i64 %33, label %43 [
    i64 1, label %41
    i64 0, label %44
  ]

41:                                               ; preds = %39
  %42 = load i8, ptr %31, align 1, !tbaa !16
  store i8 %42, ptr %40, align 1, !tbaa !16
  br label %44

43:                                               ; preds = %39
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %40, ptr align 1 %31, i64 %33, i1 false)
  br label %44

44:                                               ; preds = %43, %41, %39
  %45 = load i64, ptr %3, align 8, !tbaa !87
  %46 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue1", ptr %0, i64 0, i32 3, i32 1
  store i64 %45, ptr %46, align 8, !tbaa !13
  %47 = load ptr, ptr %28, align 8, !tbaa !63
  %48 = getelementptr inbounds i8, ptr %47, i64 %45
  store i8 0, ptr %48, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  ret void

49:                                               ; preds = %35
  %50 = landingpad { ptr, i32 }
          cleanup
  %51 = load ptr, ptr %8, align 8, !tbaa !63
  %52 = icmp eq ptr %51, %10
  br i1 %52, label %53, label %56

53:                                               ; preds = %49
  %54 = load i64, ptr %25, align 8, !tbaa !13
  %55 = icmp ult i64 %54, 16
  call void @llvm.assume(i1 %55)
  br label %57

56:                                               ; preds = %49
  call void @_ZdlPv(ptr noundef %51) #26
  br label %57

57:                                               ; preds = %56, %53
  resume { ptr, i32 } %50
}

declare void @__cxa_rethrow() local_unnamed_addr

; Function Attrs: noreturn
declare void @_ZSt28__throw_bad_array_new_lengthv() local_unnamed_addr #20

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !90
  %7 = load ptr, ptr %0, align 8, !tbaa !5
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 9223372036854775776
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.167) #30
  unreachable

13:                                               ; preds = %3
  %14 = ashr exact i64 %10, 5
  %15 = tail call i64 @llvm.umax.i64(i64 %14, i64 1)
  %16 = add i64 %15, %14
  %17 = icmp ult i64 %16, %14
  %18 = icmp ugt i64 %16, 288230376151711743
  %19 = or i1 %17, %18
  %20 = select i1 %19, i64 288230376151711743, i64 %16
  %21 = ptrtoint ptr %1 to i64
  %22 = sub i64 %21, %9
  %23 = ashr exact i64 %22, 5
  %24 = icmp eq i64 %20, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %13
  %26 = shl nuw nsw i64 %20, 5
  %27 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %26) #25
  br label %28

28:                                               ; preds = %13, %25
  %29 = phi ptr [ %27, %25 ], [ null, %13 ]
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 %23
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 %23, i32 2
  store ptr %31, ptr %30, align 8, !tbaa !11
  %32 = load ptr, ptr %2, align 8, !tbaa !63
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %34 = load i64, ptr %33, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %34, ptr %4, align 8, !tbaa !87
  %35 = icmp ugt i64 %34, 15
  br i1 %35, label %36, label %40

36:                                               ; preds = %28
  %37 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %30, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %38 unwind label %87

38:                                               ; preds = %36
  store ptr %37, ptr %30, align 8, !tbaa !63
  %39 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %39, ptr %31, align 8, !tbaa !16
  br label %40

40:                                               ; preds = %38, %28
  %41 = phi ptr [ %37, %38 ], [ %31, %28 ]
  switch i64 %34, label %44 [
    i64 1, label %42
    i64 0, label %45
  ]

42:                                               ; preds = %40
  %43 = load i8, ptr %32, align 1, !tbaa !16
  store i8 %43, ptr %41, align 1, !tbaa !16
  br label %45

44:                                               ; preds = %40
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %41, ptr align 1 %32, i64 %34, i1 false)
  br label %45

45:                                               ; preds = %44, %42, %40
  %46 = load i64, ptr %4, align 8, !tbaa !87
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 %23, i32 1
  store i64 %46, ptr %47, align 8, !tbaa !13
  %48 = load ptr, ptr %30, align 8, !tbaa !63
  %49 = getelementptr inbounds i8, ptr %48, i64 %46
  store i8 0, ptr %49, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %50 = invoke noundef ptr @_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_(ptr noundef %7, ptr noundef %1, ptr noundef nonnull %29)
          to label %51 unwind label %75

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %50, i64 1
  %53 = invoke noundef ptr @_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_(ptr noundef %1, ptr noundef %6, ptr noundef nonnull %52)
          to label %54 unwind label %87

54:                                               ; preds = %51
  %55 = icmp eq ptr %7, %6
  br i1 %55, label %69, label %56

56:                                               ; preds = %54, %66
  %57 = phi ptr [ %67, %66 ], [ %7, %54 ]
  %58 = load ptr, ptr %57, align 8, !tbaa !63
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %57, i64 0, i32 2
  %60 = icmp eq ptr %58, %59
  br i1 %60, label %61, label %65

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %57, i64 0, i32 1
  %63 = load i64, ptr %62, align 8, !tbaa !13
  %64 = icmp ult i64 %63, 16
  call void @llvm.assume(i1 %64)
  br label %66

65:                                               ; preds = %56
  call void @_ZdlPv(ptr noundef %58) #26
  br label %66

66:                                               ; preds = %65, %61
  %67 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %57, i64 1
  %68 = icmp eq ptr %67, %6
  br i1 %68, label %69, label %56

69:                                               ; preds = %66, %54
  %70 = icmp eq ptr %7, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %69
  call void @_ZdlPv(ptr noundef nonnull %7) #26
  br label %72

72:                                               ; preds = %69, %71
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %29, ptr %0, align 8, !tbaa !91
  store ptr %53, ptr %5, align 8, !tbaa !90
  %74 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 %20
  store ptr %74, ptr %73, align 8, !tbaa !88
  ret void

75:                                               ; preds = %45
  %76 = landingpad { ptr, i32 }
          catch ptr null
  %77 = extractvalue { ptr, i32 } %76, 0
  %78 = call ptr @__cxa_begin_catch(ptr %77) #28
  %79 = load ptr, ptr %30, align 8, !tbaa !63
  %80 = icmp eq ptr %79, %31
  br i1 %80, label %81, label %84

81:                                               ; preds = %75
  %82 = load i64, ptr %47, align 8, !tbaa !13
  %83 = icmp ult i64 %82, 16
  call void @llvm.assume(i1 %83)
  br label %108

84:                                               ; preds = %75
  call void @_ZdlPv(ptr noundef %79) #26
  br label %108

85:                                               ; preds = %109
  %86 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %110 unwind label %111

87:                                               ; preds = %36, %51
  %88 = phi ptr [ %52, %51 ], [ %29, %36 ]
  %89 = landingpad { ptr, i32 }
          catch ptr null
  %90 = extractvalue { ptr, i32 } %89, 0
  %91 = call ptr @__cxa_begin_catch(ptr %90) #28
  %92 = icmp eq ptr %29, %88
  br i1 %92, label %108, label %93

93:                                               ; preds = %87, %103
  %94 = phi ptr [ %104, %103 ], [ %29, %87 ]
  %95 = load ptr, ptr %94, align 8, !tbaa !63
  %96 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %94, i64 0, i32 2
  %97 = icmp eq ptr %95, %96
  br i1 %97, label %98, label %102

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %94, i64 0, i32 1
  %100 = load i64, ptr %99, align 8, !tbaa !13
  %101 = icmp ult i64 %100, 16
  call void @llvm.assume(i1 %101)
  br label %103

102:                                              ; preds = %93
  call void @_ZdlPv(ptr noundef %95) #26
  br label %103

103:                                              ; preds = %102, %98
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %94, i64 1
  %105 = icmp eq ptr %104, %88
  br i1 %105, label %106, label %93

106:                                              ; preds = %103
  %107 = icmp eq ptr %29, null
  br i1 %107, label %109, label %108

108:                                              ; preds = %81, %84, %87, %106
  call void @_ZdlPv(ptr noundef nonnull %29) #26
  br label %109

109:                                              ; preds = %108, %106
  invoke void @__cxa_rethrow() #30
          to label %114 unwind label %85

110:                                              ; preds = %85
  resume { ptr, i32 } %86

111:                                              ; preds = %85
  %112 = landingpad { ptr, i32 }
          catch ptr null
  %113 = extractvalue { ptr, i32 } %112, 0
  call void @__clang_call_terminate(ptr %113) #27
  unreachable

114:                                              ; preds = %109
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZSt16__do_uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ET0_T_S8_S7_(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = icmp eq ptr %0, %1
  br i1 %5, label %50, label %6

6:                                                ; preds = %3, %23
  %7 = phi ptr [ %29, %23 ], [ %2, %3 ]
  %8 = phi ptr [ %28, %23 ], [ %0, %3 ]
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  store ptr %9, ptr %7, align 8, !tbaa !11
  %10 = load ptr, ptr %8, align 8, !tbaa !63
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 1
  %12 = load i64, ptr %11, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %12, ptr %4, align 8, !tbaa !87
  %13 = icmp ugt i64 %12, 15
  br i1 %13, label %14, label %18

14:                                               ; preds = %6
  %15 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %7, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %16 unwind label %31

16:                                               ; preds = %14
  store ptr %15, ptr %7, align 8, !tbaa !63
  %17 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %17, ptr %9, align 8, !tbaa !16
  br label %18

18:                                               ; preds = %16, %6
  %19 = phi ptr [ %15, %16 ], [ %9, %6 ]
  switch i64 %12, label %22 [
    i64 1, label %20
    i64 0, label %23
  ]

20:                                               ; preds = %18
  %21 = load i8, ptr %10, align 1, !tbaa !16
  store i8 %21, ptr %19, align 1, !tbaa !16
  br label %23

22:                                               ; preds = %18
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %19, ptr align 1 %10, i64 %12, i1 false)
  br label %23

23:                                               ; preds = %22, %20, %18
  %24 = load i64, ptr %4, align 8, !tbaa !87
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 1
  store i64 %24, ptr %25, align 8, !tbaa !13
  %26 = load ptr, ptr %7, align 8, !tbaa !63
  %27 = getelementptr inbounds i8, ptr %26, i64 %24
  store i8 0, ptr %27, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 1
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 1
  %30 = icmp eq ptr %28, %1
  br i1 %30, label %50, label %6

31:                                               ; preds = %14
  %32 = landingpad { ptr, i32 }
          catch ptr null
  %33 = extractvalue { ptr, i32 } %32, 0
  %34 = call ptr @__cxa_begin_catch(ptr %33) #28
  %35 = icmp eq ptr %7, %2
  br i1 %35, label %49, label %36

36:                                               ; preds = %31, %46
  %37 = phi ptr [ %47, %46 ], [ %2, %31 ]
  %38 = load ptr, ptr %37, align 8, !tbaa !63
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %37, i64 0, i32 2
  %40 = icmp eq ptr %38, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %37, i64 0, i32 1
  %43 = load i64, ptr %42, align 8, !tbaa !13
  %44 = icmp ult i64 %43, 16
  call void @llvm.assume(i1 %44)
  br label %46

45:                                               ; preds = %36
  call void @_ZdlPv(ptr noundef %38) #26
  br label %46

46:                                               ; preds = %45, %41
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %37, i64 1
  %48 = icmp eq ptr %47, %7
  br i1 %48, label %49, label %36

49:                                               ; preds = %46, %31
  invoke void @__cxa_rethrow() #30
          to label %58 unwind label %52

50:                                               ; preds = %23, %3
  %51 = phi ptr [ %2, %3 ], [ %29, %23 ]
  ret ptr %51

52:                                               ; preds = %49
  %53 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %54 unwind label %55

54:                                               ; preds = %52
  resume { ptr, i32 } %53

55:                                               ; preds = %52
  %56 = landingpad { ptr, i32 }
          catch ptr null
  %57 = extractvalue { ptr, i32 } %56, 0
  call void @__clang_call_terminate(ptr %57) #27
  unreachable

58:                                               ; preds = %49
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERS6_S8_(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %6, ptr %0, align 8, !tbaa !11
  %7 = load ptr, ptr %1, align 8, !tbaa !63
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #28
  store i64 %9, ptr %5, align 8, !tbaa !87
  %10 = icmp ugt i64 %9, 15
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(8) %5, i64 noundef 0)
  store ptr %12, ptr %0, align 8, !tbaa !63
  %13 = load i64, ptr %5, align 8, !tbaa !87
  store i64 %13, ptr %6, align 8, !tbaa !16
  br label %14

14:                                               ; preds = %11, %3
  %15 = phi ptr [ %12, %11 ], [ %6, %3 ]
  switch i64 %9, label %18 [
    i64 1, label %16
    i64 0, label %19
  ]

16:                                               ; preds = %14
  %17 = load i8, ptr %7, align 1, !tbaa !16
  store i8 %17, ptr %15, align 1, !tbaa !16
  br label %19

18:                                               ; preds = %14
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %15, ptr align 1 %7, i64 %9, i1 false)
  br label %19

19:                                               ; preds = %14, %16, %18
  %20 = load i64, ptr %5, align 8, !tbaa !87
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %20, ptr %21, align 8, !tbaa !13
  %22 = load ptr, ptr %0, align 8, !tbaa !63
  %23 = getelementptr inbounds i8, ptr %22, i64 %20
  store i8 0, ptr %23, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #28
  %24 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 0, i32 1, i32 2
  store ptr %25, ptr %24, align 8, !tbaa !11
  %26 = load ptr, ptr %2, align 8, !tbaa !63
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %28 = load i64, ptr %27, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %28, ptr %4, align 8, !tbaa !87
  %29 = icmp ugt i64 %28, 15
  br i1 %29, label %30, label %34

30:                                               ; preds = %19
  %31 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %24, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %32 unwind label %44

32:                                               ; preds = %30
  store ptr %31, ptr %24, align 8, !tbaa !63
  %33 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %33, ptr %25, align 8, !tbaa !16
  br label %34

34:                                               ; preds = %32, %19
  %35 = phi ptr [ %31, %32 ], [ %25, %19 ]
  switch i64 %28, label %38 [
    i64 1, label %36
    i64 0, label %39
  ]

36:                                               ; preds = %34
  %37 = load i8, ptr %26, align 1, !tbaa !16
  store i8 %37, ptr %35, align 1, !tbaa !16
  br label %39

38:                                               ; preds = %34
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %35, ptr align 1 %26, i64 %28, i1 false)
  br label %39

39:                                               ; preds = %38, %36, %34
  %40 = load i64, ptr %4, align 8, !tbaa !87
  %41 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 0, i32 1, i32 1
  store i64 %40, ptr %41, align 8, !tbaa !13
  %42 = load ptr, ptr %24, align 8, !tbaa !63
  %43 = getelementptr inbounds i8, ptr %42, i64 %40
  store i8 0, ptr %43, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  ret void

44:                                               ; preds = %30
  %45 = landingpad { ptr, i32 }
          cleanup
  %46 = load ptr, ptr %0, align 8, !tbaa !63
  %47 = icmp eq ptr %46, %6
  br i1 %47, label %48, label %51

48:                                               ; preds = %44
  %49 = load i64, ptr %21, align 8, !tbaa !13
  %50 = icmp ult i64 %49, 16
  call void @llvm.assume(i1 %50)
  br label %52

51:                                               ; preds = %44
  call void @_ZdlPv(ptr noundef %46) #26
  br label %52

52:                                               ; preds = %51, %48
  resume { ptr, i32 } %45
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @memcmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #7

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = icmp eq ptr %4, %1
  br i1 %5, label %6, label %37

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, ptr %0, i64 40
  %8 = load i64, ptr %7, align 8, !tbaa !24
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %33, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, ptr %0, i64 32
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %12, i64 0, i32 1, i32 0, i32 1
  %14 = load i64, ptr %13, align 8, !tbaa !13
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %16 = load i64, ptr %15, align 8, !tbaa !13
  %17 = tail call i64 @llvm.umin.i64(i64 %16, i64 %14)
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %12, i64 0, i32 1
  %21 = load ptr, ptr %2, align 8, !tbaa !63
  %22 = load ptr, ptr %20, align 8, !tbaa !63
  %23 = tail call i32 @memcmp(ptr noundef %22, ptr noundef %21, i64 noundef %17) #28
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %19, %10
  %26 = sub i64 %14, %16
  %27 = tail call i64 @llvm.smax.i64(i64 %26, i64 -2147483648)
  %28 = tail call i64 @llvm.smin.i64(i64 %27, i64 2147483647)
  %29 = trunc i64 %28 to i32
  br label %30

30:                                               ; preds = %19, %25
  %31 = phi i32 [ %23, %19 ], [ %29, %25 ]
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %143, label %33

33:                                               ; preds = %30, %6
  %34 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2)
  %35 = extractvalue { ptr, ptr } %34, 0
  %36 = extractvalue { ptr, ptr } %34, 1
  br label %143

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %39 = load i64, ptr %38, align 8, !tbaa !13
  %40 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1, i64 0, i32 1, i32 0, i32 1
  %41 = load i64, ptr %40, align 8, !tbaa !13
  %42 = tail call i64 @llvm.umin.i64(i64 %41, i64 %39)
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !63
  %47 = load ptr, ptr %2, align 8, !tbaa !63
  %48 = tail call i32 @memcmp(ptr noundef %47, ptr noundef %46, i64 noundef %42) #28
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %56, label %62

50:                                               ; preds = %37
  %51 = sub i64 %39, %41
  %52 = tail call i64 @llvm.smax.i64(i64 %51, i64 -2147483648)
  %53 = tail call i64 @llvm.smin.i64(i64 %52, i64 2147483647)
  %54 = and i64 %53, 2147483648
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %101, label %64

56:                                               ; preds = %44
  %57 = sub i64 %39, %41
  %58 = tail call i64 @llvm.smax.i64(i64 %57, i64 -2147483648)
  %59 = tail call i64 @llvm.smin.i64(i64 %58, i64 2147483647)
  %60 = and i64 %59, 2147483648
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %98, label %64

62:                                               ; preds = %44
  %63 = icmp slt i32 %48, 0
  br i1 %63, label %64, label %98

64:                                               ; preds = %56, %62, %50
  %65 = getelementptr inbounds i8, ptr %0, i64 24
  %66 = load ptr, ptr %65, align 8, !tbaa !5
  %67 = icmp eq ptr %66, %1
  br i1 %67, label %143, label %68

68:                                               ; preds = %64
  %69 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1) #29
  %70 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %69, i64 0, i32 1, i32 0, i32 1
  %71 = load i64, ptr %70, align 8, !tbaa !13
  %72 = tail call i64 @llvm.umin.i64(i64 %39, i64 %71)
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %69, i64 0, i32 1
  %76 = load ptr, ptr %2, align 8, !tbaa !63
  %77 = load ptr, ptr %75, align 8, !tbaa !63
  %78 = tail call i32 @memcmp(ptr noundef %77, ptr noundef %76, i64 noundef %72) #28
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %74, %68
  %81 = sub i64 %71, %39
  %82 = tail call i64 @llvm.smax.i64(i64 %81, i64 -2147483648)
  %83 = tail call i64 @llvm.smin.i64(i64 %82, i64 2147483647)
  %84 = trunc i64 %83 to i32
  br label %85

85:                                               ; preds = %74, %80
  %86 = phi i32 [ %78, %74 ], [ %84, %80 ]
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %88, label %94

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %69, i64 0, i32 3
  %90 = load ptr, ptr %89, align 8, !tbaa !177
  %91 = icmp eq ptr %90, null
  %92 = select i1 %91, ptr null, ptr %1
  %93 = select i1 %91, ptr %69, ptr %1
  br label %143

94:                                               ; preds = %85
  %95 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2)
  %96 = extractvalue { ptr, ptr } %95, 0
  %97 = extractvalue { ptr, ptr } %95, 1
  br label %143

98:                                               ; preds = %56, %62
  %99 = tail call i32 @memcmp(ptr noundef %46, ptr noundef %47, i64 noundef %42) #28
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %106

101:                                              ; preds = %50, %98
  %102 = sub i64 %41, %39
  %103 = tail call i64 @llvm.smax.i64(i64 %102, i64 -2147483648)
  %104 = tail call i64 @llvm.smin.i64(i64 %103, i64 2147483647)
  %105 = trunc i64 %104 to i32
  br label %106

106:                                              ; preds = %98, %101
  %107 = phi i32 [ %99, %98 ], [ %105, %101 ]
  %108 = icmp slt i32 %107, 0
  br i1 %108, label %109, label %143

109:                                              ; preds = %106
  %110 = getelementptr inbounds i8, ptr %0, i64 32
  %111 = load ptr, ptr %110, align 8, !tbaa !5
  %112 = icmp eq ptr %111, %1
  br i1 %112, label %143, label %113

113:                                              ; preds = %109
  %114 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1) #29
  %115 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %114, i64 0, i32 1, i32 0, i32 1
  %116 = load i64, ptr %115, align 8, !tbaa !13
  %117 = tail call i64 @llvm.umin.i64(i64 %116, i64 %39)
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %114, i64 0, i32 1
  %121 = load ptr, ptr %120, align 8, !tbaa !63
  %122 = load ptr, ptr %2, align 8, !tbaa !63
  %123 = tail call i32 @memcmp(ptr noundef %122, ptr noundef %121, i64 noundef %117) #28
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %130

125:                                              ; preds = %119, %113
  %126 = sub i64 %39, %116
  %127 = tail call i64 @llvm.smax.i64(i64 %126, i64 -2147483648)
  %128 = tail call i64 @llvm.smin.i64(i64 %127, i64 2147483647)
  %129 = trunc i64 %128 to i32
  br label %130

130:                                              ; preds = %119, %125
  %131 = phi i32 [ %123, %119 ], [ %129, %125 ]
  %132 = icmp slt i32 %131, 0
  br i1 %132, label %133, label %139

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %135 = load ptr, ptr %134, align 8, !tbaa !177
  %136 = icmp eq ptr %135, null
  %137 = select i1 %136, ptr null, ptr %114
  %138 = select i1 %136, ptr %1, ptr %114
  br label %143

139:                                              ; preds = %130
  %140 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2)
  %141 = extractvalue { ptr, ptr } %140, 0
  %142 = extractvalue { ptr, ptr } %140, 1
  br label %143

143:                                              ; preds = %133, %88, %106, %139, %109, %94, %64, %30, %33
  %144 = phi ptr [ %35, %33 ], [ null, %30 ], [ %96, %94 ], [ %1, %64 ], [ %141, %139 ], [ null, %109 ], [ %1, %106 ], [ %92, %88 ], [ %137, %133 ]
  %145 = phi ptr [ %36, %33 ], [ %12, %30 ], [ %97, %94 ], [ %1, %64 ], [ %142, %139 ], [ %1, %109 ], [ null, %106 ], [ %93, %88 ], [ %138, %133 ]
  %146 = insertvalue { ptr, ptr } poison, ptr %144, 0
  %147 = insertvalue { ptr, ptr } %146, ptr %145, 1
  ret { ptr, ptr } %147
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_M_insert_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_EPSt18_Rb_tree_node_baseSK_RKS8_RT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(64) %3, ptr noundef nonnull align 8 dereferenceable(8) %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = icmp ne ptr %1, null
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  %8 = icmp eq ptr %7, %2
  %9 = select i1 %6, i1 true, i1 %8
  br i1 %9, label %31, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  %12 = load i64, ptr %11, align 8, !tbaa !13
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %2, i64 0, i32 1, i32 0, i32 1
  %14 = load i64, ptr %13, align 8, !tbaa !13
  %15 = tail call i64 @llvm.umin.i64(i64 %14, i64 %12)
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %2, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !63
  %20 = load ptr, ptr %3, align 8, !tbaa !63
  %21 = tail call i32 @memcmp(ptr noundef %20, ptr noundef %19, i64 noundef %15) #28
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %17, %10
  %24 = sub i64 %12, %14
  %25 = tail call i64 @llvm.smax.i64(i64 %24, i64 -2147483648)
  %26 = tail call i64 @llvm.smin.i64(i64 %25, i64 2147483647)
  %27 = trunc i64 %26 to i32
  br label %28

28:                                               ; preds = %17, %23
  %29 = phi i32 [ %21, %17 ], [ %27, %23 ]
  %30 = icmp slt i32 %29, 0
  br label %31

31:                                               ; preds = %28, %5
  %32 = phi i1 [ true, %5 ], [ %30, %28 ]
  %33 = tail call noalias noundef nonnull dereferenceable(96) ptr @_Znwm(i64 noundef 96) #25
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %33, i64 0, i32 1
  invoke void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS7_(ptr noundef nonnull align 8 dereferenceable(64) %34, ptr noundef nonnull align 8 dereferenceable(64) %3)
          to label %46 unwind label %35

35:                                               ; preds = %31
  %36 = landingpad { ptr, i32 }
          catch ptr null
  %37 = extractvalue { ptr, i32 } %36, 0
  %38 = tail call ptr @__cxa_begin_catch(ptr %37) #28
  tail call void @_ZdlPv(ptr noundef nonnull %33) #26
  invoke void @__cxa_rethrow() #30
          to label %45 unwind label %39

39:                                               ; preds = %35
  %40 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %41 unwind label %42

41:                                               ; preds = %39
  resume { ptr, i32 } %40

42:                                               ; preds = %39
  %43 = landingpad { ptr, i32 }
          catch ptr null
  %44 = extractvalue { ptr, i32 } %43, 0
  tail call void @__clang_call_terminate(ptr %44) #27
  unreachable

45:                                               ; preds = %35
  unreachable

46:                                               ; preds = %31
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %32, ptr noundef nonnull %33, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(32) %7) #28
  %47 = getelementptr inbounds i8, ptr %0, i64 40
  %48 = load i64, ptr %47, align 8, !tbaa !24
  %49 = add i64 %48, 1
  store i64 %49, ptr %47, align 8, !tbaa !24
  ret ptr %33
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = load ptr, ptr %3, align 8, !tbaa !5
  %6 = icmp eq ptr %5, null
  br i1 %6, label %36, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !13
  %10 = load ptr, ptr %1, align 8
  br label %11

11:                                               ; preds = %7, %27
  %12 = phi ptr [ %5, %7 ], [ %33, %27 ]
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %12, i64 0, i32 1, i32 0, i32 1
  %14 = load i64, ptr %13, align 8, !tbaa !13
  %15 = tail call i64 @llvm.umin.i64(i64 %14, i64 %9)
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %12, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !63
  %20 = tail call i32 @memcmp(ptr noundef %10, ptr noundef %19, i64 noundef %15) #28
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %17, %11
  %23 = sub i64 %9, %14
  %24 = tail call i64 @llvm.smax.i64(i64 %23, i64 -2147483648)
  %25 = tail call i64 @llvm.smin.i64(i64 %24, i64 2147483647)
  %26 = trunc i64 %25 to i32
  br label %27

27:                                               ; preds = %17, %22
  %28 = phi i32 [ %20, %17 ], [ %26, %22 ]
  %29 = icmp slt i32 %28, 0
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %12, i64 0, i32 2
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %12, i64 0, i32 3
  %32 = select i1 %29, ptr %30, ptr %31
  %33 = load ptr, ptr %32, align 8, !tbaa !5
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %11

35:                                               ; preds = %27
  br i1 %29, label %36, label %43

36:                                               ; preds = %2, %35
  %37 = phi ptr [ %12, %35 ], [ %4, %2 ]
  %38 = getelementptr inbounds i8, ptr %0, i64 24
  %39 = load ptr, ptr %38, align 8, !tbaa !22
  %40 = icmp eq ptr %37, %39
  br i1 %40, label %68, label %41

41:                                               ; preds = %36
  %42 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %37) #29
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi ptr [ %37, %41 ], [ %12, %35 ]
  %45 = phi ptr [ %42, %41 ], [ %12, %35 ]
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %45, i64 0, i32 1, i32 0, i32 1
  %47 = load i64, ptr %46, align 8, !tbaa !13
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %49 = load i64, ptr %48, align 8, !tbaa !13
  %50 = tail call i64 @llvm.umin.i64(i64 %49, i64 %47)
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %45, i64 0, i32 1
  %54 = load ptr, ptr %1, align 8, !tbaa !63
  %55 = load ptr, ptr %53, align 8, !tbaa !63
  %56 = tail call i32 @memcmp(ptr noundef %55, ptr noundef %54, i64 noundef %50) #28
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %52, %43
  %59 = sub i64 %47, %49
  %60 = tail call i64 @llvm.smax.i64(i64 %59, i64 -2147483648)
  %61 = tail call i64 @llvm.smin.i64(i64 %60, i64 2147483647)
  %62 = trunc i64 %61 to i32
  br label %63

63:                                               ; preds = %52, %58
  %64 = phi i32 [ %56, %52 ], [ %62, %58 ]
  %65 = icmp slt i32 %64, 0
  %66 = select i1 %65, ptr null, ptr %45
  %67 = select i1 %65, ptr %44, ptr null
  br label %68

68:                                               ; preds = %63, %36
  %69 = phi ptr [ null, %36 ], [ %66, %63 ]
  %70 = phi ptr [ %37, %36 ], [ %67, %63 ]
  %71 = insertvalue { ptr, ptr } poison, ptr %69, 0
  %72 = insertvalue { ptr, ptr } %71, ptr %70, 1
  ret { ptr, ptr } %72
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef) local_unnamed_addr #19

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef) local_unnamed_addr #19

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext, ptr noundef, ptr noundef, ptr noundef nonnull align 8 dereferenceable(32)) local_unnamed_addr #18

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS7_(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %1) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %5, ptr %0, align 8, !tbaa !11
  %6 = load ptr, ptr %1, align 8, !tbaa !63
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %8, ptr %4, align 8, !tbaa !87
  %9 = icmp ugt i64 %8, 15
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
  store ptr %11, ptr %0, align 8, !tbaa !63
  %12 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %12, ptr %5, align 8, !tbaa !16
  br label %13

13:                                               ; preds = %10, %2
  %14 = phi ptr [ %11, %10 ], [ %5, %2 ]
  switch i64 %8, label %17 [
    i64 1, label %15
    i64 0, label %18
  ]

15:                                               ; preds = %13
  %16 = load i8, ptr %6, align 1, !tbaa !16
  store i8 %16, ptr %14, align 1, !tbaa !16
  br label %18

17:                                               ; preds = %13
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %14, ptr align 1 %6, i64 %8, i1 false)
  br label %18

18:                                               ; preds = %13, %15, %17
  %19 = load i64, ptr %4, align 8, !tbaa !87
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %19, ptr %20, align 8, !tbaa !13
  %21 = load ptr, ptr %0, align 8, !tbaa !63
  %22 = getelementptr inbounds i8, ptr %21, i64 %19
  store i8 0, ptr %22, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %23 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.std::pair", ptr %1, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 0, i32 1, i32 2
  store ptr %25, ptr %23, align 8, !tbaa !11
  %26 = load ptr, ptr %24, align 8, !tbaa !63
  %27 = getelementptr inbounds %"struct.std::pair", ptr %1, i64 0, i32 1, i32 1
  %28 = load i64, ptr %27, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #28
  store i64 %28, ptr %3, align 8, !tbaa !87
  %29 = icmp ugt i64 %28, 15
  br i1 %29, label %30, label %34

30:                                               ; preds = %18
  %31 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %23, ptr noundef nonnull align 8 dereferenceable(8) %3, i64 noundef 0)
          to label %32 unwind label %44

32:                                               ; preds = %30
  store ptr %31, ptr %23, align 8, !tbaa !63
  %33 = load i64, ptr %3, align 8, !tbaa !87
  store i64 %33, ptr %25, align 8, !tbaa !16
  br label %34

34:                                               ; preds = %32, %18
  %35 = phi ptr [ %31, %32 ], [ %25, %18 ]
  switch i64 %28, label %38 [
    i64 1, label %36
    i64 0, label %39
  ]

36:                                               ; preds = %34
  %37 = load i8, ptr %26, align 1, !tbaa !16
  store i8 %37, ptr %35, align 1, !tbaa !16
  br label %39

38:                                               ; preds = %34
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %35, ptr align 1 %26, i64 %28, i1 false)
  br label %39

39:                                               ; preds = %38, %36, %34
  %40 = load i64, ptr %3, align 8, !tbaa !87
  %41 = getelementptr inbounds %"struct.std::pair", ptr %0, i64 0, i32 1, i32 1
  store i64 %40, ptr %41, align 8, !tbaa !13
  %42 = load ptr, ptr %23, align 8, !tbaa !63
  %43 = getelementptr inbounds i8, ptr %42, i64 %40
  store i8 0, ptr %43, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  ret void

44:                                               ; preds = %30
  %45 = landingpad { ptr, i32 }
          cleanup
  %46 = load ptr, ptr %0, align 8, !tbaa !63
  %47 = icmp eq ptr %46, %5
  br i1 %47, label %48, label %51

48:                                               ; preds = %44
  %49 = load i64, ptr %20, align 8, !tbaa !13
  %50 = icmp ult i64 %49, 16
  call void @llvm.assume(i1 %50)
  br label %52

51:                                               ; preds = %44
  call void @_ZdlPv(ptr noundef %46) #26
  br label %52

52:                                               ; preds = %51, %48
  resume { ptr, i32 } %45
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(8) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1, i64 0, i32 1
  %6 = tail call noalias noundef nonnull dereferenceable(96) ptr @_Znwm(i64 noundef 96) #25
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %6, i64 0, i32 1
  invoke void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS7_(ptr noundef nonnull align 8 dereferenceable(64) %7, ptr noundef nonnull align 8 dereferenceable(64) %5)
          to label %20 unwind label %8

8:                                                ; preds = %4
  %9 = landingpad { ptr, i32 }
          catch ptr null
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = tail call ptr @__cxa_begin_catch(ptr %10) #28
  tail call void @_ZdlPv(ptr noundef nonnull %6) #26
  invoke void @__cxa_rethrow() #30
          to label %19 unwind label %12

12:                                               ; preds = %8
  %13 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %14 unwind label %16

14:                                               ; preds = %77, %12
  %15 = phi { ptr, i32 } [ %13, %12 ], [ %78, %77 ]
  resume { ptr, i32 } %15

16:                                               ; preds = %12
  %17 = landingpad { ptr, i32 }
          catch ptr null
  %18 = extractvalue { ptr, i32 } %17, 0
  tail call void @__clang_call_terminate(ptr %18) #27
  unreachable

19:                                               ; preds = %8
  unreachable

20:                                               ; preds = %4
  %21 = load i32, ptr %1, align 8, !tbaa !252
  store i32 %21, ptr %6, align 8, !tbaa !252
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %6, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, i8 0, i64 16, i1 false)
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %6, i64 0, i32 1
  store ptr %2, ptr %23, align 8, !tbaa !253
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8, !tbaa !177
  %26 = icmp eq ptr %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %20
  %28 = invoke noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %25, ptr noundef nonnull %6, ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %29 unwind label %31

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %6, i64 0, i32 3
  store ptr %28, ptr %30, align 8, !tbaa !177
  br label %33

31:                                               ; preds = %27
  %32 = landingpad { ptr, i32 }
          catch ptr null
  br label %68

33:                                               ; preds = %29, %20
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !176
  %36 = icmp eq ptr %35, null
  br i1 %36, label %79, label %37

37:                                               ; preds = %33, %73
  %38 = phi ptr [ %75, %73 ], [ %35, %33 ]
  %39 = phi ptr [ %40, %73 ], [ %6, %33 ]
  %40 = invoke noalias noundef nonnull dereferenceable(96) ptr @_Znwm(i64 noundef 96) #25
          to label %41 unwind label %66

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %38, i64 0, i32 1
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %40, i64 0, i32 1
  invoke void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS7_(ptr noundef nonnull align 8 dereferenceable(64) %43, ptr noundef nonnull align 8 dereferenceable(64) %42)
          to label %54 unwind label %44

44:                                               ; preds = %41
  %45 = landingpad { ptr, i32 }
          catch ptr null
  %46 = extractvalue { ptr, i32 } %45, 0
  %47 = tail call ptr @__cxa_begin_catch(ptr %46) #28
  tail call void @_ZdlPv(ptr noundef nonnull %40) #26
  invoke void @__cxa_rethrow() #30
          to label %53 unwind label %48

48:                                               ; preds = %44
  %49 = landingpad { ptr, i32 }
          catch ptr null
  invoke void @__cxa_end_catch()
          to label %68 unwind label %50

50:                                               ; preds = %48
  %51 = landingpad { ptr, i32 }
          catch ptr null
  %52 = extractvalue { ptr, i32 } %51, 0
  tail call void @__clang_call_terminate(ptr %52) #27
  unreachable

53:                                               ; preds = %44
  unreachable

54:                                               ; preds = %41
  %55 = load i32, ptr %38, align 8, !tbaa !252
  store i32 %55, ptr %40, align 8, !tbaa !252
  %56 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %40, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %56, i8 0, i64 16, i1 false)
  %57 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %39, i64 0, i32 2
  store ptr %40, ptr %57, align 8, !tbaa !176
  %58 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %40, i64 0, i32 1
  store ptr %39, ptr %58, align 8, !tbaa !253
  %59 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %38, i64 0, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !177
  %61 = icmp eq ptr %60, null
  br i1 %61, label %73, label %62

62:                                               ; preds = %54
  %63 = invoke noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %60, ptr noundef nonnull %40, ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %64 unwind label %66

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %40, i64 0, i32 3
  store ptr %63, ptr %65, align 8, !tbaa !177
  br label %73

66:                                               ; preds = %37, %62
  %67 = landingpad { ptr, i32 }
          catch ptr null
  br label %68

68:                                               ; preds = %66, %48, %31
  %69 = phi { ptr, i32 } [ %32, %31 ], [ %67, %66 ], [ %49, %48 ]
  %70 = extractvalue { ptr, i32 } %69, 0
  %71 = tail call ptr @__cxa_begin_catch(ptr %70) #28
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %6)
          to label %72 unwind label %77

72:                                               ; preds = %68
  invoke void @__cxa_rethrow() #30
          to label %83 unwind label %77

73:                                               ; preds = %64, %54
  %74 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %38, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8, !tbaa !176
  %76 = icmp eq ptr %75, null
  br i1 %76, label %79, label %37

77:                                               ; preds = %72, %68
  %78 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %14 unwind label %80

79:                                               ; preds = %73, %33
  ret ptr %6

80:                                               ; preds = %77
  %81 = landingpad { ptr, i32 }
          catch ptr null
  %82 = extractvalue { ptr, i32 } %81, 0
  tail call void @__clang_call_terminate(ptr %82) #27
  unreachable

83:                                               ; preds = %72
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(48) ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEaSERKSE_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> > >::_Reuse_or_alloc_node", align 8
  %4 = icmp eq ptr %0, %1
  br i1 %4, label %53, label %5

5:                                                ; preds = %2
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #28
  %6 = getelementptr inbounds i8, ptr %0, i64 16
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  store ptr %7, ptr %3, align 8, !tbaa !254
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> > >::_Reuse_or_alloc_node", ptr %3, i64 0, i32 1
  %9 = getelementptr inbounds i8, ptr %0, i64 32
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  store ptr %10, ptr %8, align 8, !tbaa !256
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> > >::_Reuse_or_alloc_node", ptr %3, i64 0, i32 2
  store ptr %0, ptr %11, align 8, !tbaa !5
  %12 = icmp eq ptr %7, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %7, i64 0, i32 1
  store ptr null, ptr %14, align 8, !tbaa !253
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %10, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !176
  %17 = icmp eq ptr %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %13, %5
  %19 = phi ptr [ %16, %13 ], [ null, %5 ]
  store ptr %19, ptr %8, align 8, !tbaa !256
  br label %20

20:                                               ; preds = %13, %18
  %21 = getelementptr inbounds i8, ptr %0, i64 8
  store ptr null, ptr %6, align 8, !tbaa !21
  %22 = getelementptr inbounds i8, ptr %0, i64 24
  store ptr %21, ptr %22, align 8, !tbaa !22
  store ptr %21, ptr %9, align 8, !tbaa !23
  %23 = getelementptr inbounds i8, ptr %0, i64 40
  store i64 0, ptr %23, align 8, !tbaa !24
  %24 = getelementptr inbounds i8, ptr %1, i64 16
  %25 = load ptr, ptr %24, align 8, !tbaa !21
  %26 = icmp eq ptr %25, null
  br i1 %26, label %49, label %27

27:                                               ; preds = %20
  %28 = invoke noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %25, ptr noundef nonnull %21, ptr noundef nonnull align 8 dereferenceable(24) %3)
          to label %29 unwind label %45

29:                                               ; preds = %27, %29
  %30 = phi ptr [ %32, %29 ], [ %28, %27 ]
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %30, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !176
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %29

34:                                               ; preds = %29
  store ptr %30, ptr %22, align 8, !tbaa !5
  br label %35

35:                                               ; preds = %35, %34
  %36 = phi ptr [ %28, %34 ], [ %38, %35 ]
  %37 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %36, i64 0, i32 3
  %38 = load ptr, ptr %37, align 8, !tbaa !177
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %35

40:                                               ; preds = %35
  store ptr %36, ptr %9, align 8, !tbaa !5
  %41 = getelementptr inbounds i8, ptr %1, i64 40
  %42 = load i64, ptr %41, align 8, !tbaa !24
  store i64 %42, ptr %23, align 8, !tbaa !24
  store ptr %28, ptr %6, align 8, !tbaa !5
  %43 = load ptr, ptr %11, align 8, !tbaa !257
  %44 = load ptr, ptr %3, align 8, !tbaa !254
  br label %49

45:                                               ; preds = %27
  %46 = landingpad { ptr, i32 }
          cleanup
  %47 = load ptr, ptr %11, align 8, !tbaa !257
  %48 = load ptr, ptr %3, align 8, !tbaa !254
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %47, ptr noundef %48)
          to label %52 unwind label %54

49:                                               ; preds = %40, %20
  %50 = phi ptr [ %44, %40 ], [ %7, %20 ]
  %51 = phi ptr [ %43, %40 ], [ %0, %20 ]
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %51, ptr noundef %50)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #28
  br label %53

52:                                               ; preds = %45
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #28
  resume { ptr, i32 } %46

53:                                               ; preds = %49, %2
  ret ptr %0

54:                                               ; preds = %45
  %55 = landingpad { ptr, i32 }
          catch ptr null
  %56 = extractvalue { ptr, i32 } %55, 0
  call void @__clang_call_terminate(ptr %56) #27
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1, i64 0, i32 1
  %6 = tail call noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIS8_EEPSt13_Rb_tree_nodeIS8_ERKT_(ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(64) %5)
  %7 = load i32, ptr %1, align 8, !tbaa !252
  store i32 %7, ptr %6, align 8, !tbaa !252
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %6, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, i8 0, i64 16, i1 false)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %6, i64 0, i32 1
  store ptr %2, ptr %9, align 8, !tbaa !253
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !177
  %12 = icmp eq ptr %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %4
  %14 = invoke noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %11, ptr noundef nonnull %6, ptr noundef nonnull align 8 dereferenceable(24) %3)
          to label %15 unwind label %17

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %6, i64 0, i32 3
  store ptr %14, ptr %16, align 8, !tbaa !177
  br label %19

17:                                               ; preds = %13
  %18 = landingpad { ptr, i32 }
          catch ptr null
  br label %42

19:                                               ; preds = %15, %4
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !176
  %22 = icmp eq ptr %21, null
  br i1 %22, label %54, label %23

23:                                               ; preds = %19, %47
  %24 = phi ptr [ %49, %47 ], [ %21, %19 ]
  %25 = phi ptr [ %27, %47 ], [ %6, %19 ]
  %26 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %24, i64 0, i32 1
  %27 = invoke noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIS8_EEPSt13_Rb_tree_nodeIS8_ERKT_(ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(64) %26)
          to label %28 unwind label %40

28:                                               ; preds = %23
  %29 = load i32, ptr %24, align 8, !tbaa !252
  store i32 %29, ptr %27, align 8, !tbaa !252
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %27, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %30, i8 0, i64 16, i1 false)
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %25, i64 0, i32 2
  store ptr %27, ptr %31, align 8, !tbaa !176
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %27, i64 0, i32 1
  store ptr %25, ptr %32, align 8, !tbaa !253
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %24, i64 0, i32 3
  %34 = load ptr, ptr %33, align 8, !tbaa !177
  %35 = icmp eq ptr %34, null
  br i1 %35, label %47, label %36

36:                                               ; preds = %28
  %37 = invoke noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyILb0ENSE_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS8_ESJ_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %34, ptr noundef nonnull %27, ptr noundef nonnull align 8 dereferenceable(24) %3)
          to label %38 unwind label %40

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %27, i64 0, i32 3
  store ptr %37, ptr %39, align 8, !tbaa !177
  br label %47

40:                                               ; preds = %23, %36
  %41 = landingpad { ptr, i32 }
          catch ptr null
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi { ptr, i32 } [ %41, %40 ], [ %18, %17 ]
  %44 = extractvalue { ptr, i32 } %43, 0
  %45 = tail call ptr @__cxa_begin_catch(ptr %44) #28
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %6)
          to label %46 unwind label %51

46:                                               ; preds = %42
  invoke void @__cxa_rethrow() #30
          to label %58 unwind label %51

47:                                               ; preds = %38, %28
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %24, i64 0, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !176
  %50 = icmp eq ptr %49, null
  br i1 %50, label %54, label %23

51:                                               ; preds = %46, %42
  %52 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %53 unwind label %55

53:                                               ; preds = %51
  resume { ptr, i32 } %52

54:                                               ; preds = %47, %19
  ret ptr %6

55:                                               ; preds = %51
  %56 = landingpad { ptr, i32 }
          catch ptr null
  %57 = extractvalue { ptr, i32 } %56, 0
  tail call void @__clang_call_terminate(ptr %57) #27
  unreachable

58:                                               ; preds = %46
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeclIS8_EEPSt13_Rb_tree_nodeIS8_ERKT_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(64) %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> > >::_Reuse_or_alloc_node", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !256
  %5 = icmp eq ptr %4, null
  br i1 %5, label %64, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %4, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !253
  store ptr %8, ptr %3, align 8, !tbaa !256
  %9 = icmp eq ptr %8, null
  br i1 %9, label %25, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !177
  %13 = icmp eq ptr %12, %4
  br i1 %13, label %14, label %23

14:                                               ; preds = %10
  store ptr null, ptr %11, align 8, !tbaa !177
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !176
  %17 = icmp eq ptr %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14, %18
  %19 = phi ptr [ %21, %18 ], [ %16, %14 ]
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %19, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !177
  %22 = icmp eq ptr %21, null
  br i1 %22, label %26, label %18

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 2
  store ptr null, ptr %24, align 8, !tbaa !176
  br label %31

25:                                               ; preds = %6
  store ptr null, ptr %0, align 8, !tbaa !254
  br label %31

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %19, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !176
  %29 = icmp eq ptr %28, null
  %30 = select i1 %29, ptr %19, ptr %28
  store ptr %30, ptr %3, align 8
  br label %31

31:                                               ; preds = %26, %25, %23, %14
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %4, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %4, i64 0, i32 1, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !63
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %4, i64 0, i32 1, i32 1, i32 2
  %36 = icmp eq ptr %34, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %4, i64 0, i32 1, i32 1, i32 1
  %39 = load i64, ptr %38, align 8, !tbaa !13
  %40 = icmp ult i64 %39, 16
  tail call void @llvm.assume(i1 %40)
  br label %42

41:                                               ; preds = %31
  tail call void @_ZdlPv(ptr noundef %34) #26
  br label %42

42:                                               ; preds = %41, %37
  %43 = load ptr, ptr %32, align 8, !tbaa !63
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %4, i64 0, i32 1, i32 0, i32 2
  %45 = icmp eq ptr %43, %44
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %4, i64 0, i32 1, i32 0, i32 1
  %48 = load i64, ptr %47, align 8, !tbaa !13
  %49 = icmp ult i64 %48, 16
  tail call void @llvm.assume(i1 %49)
  br label %51

50:                                               ; preds = %42
  tail call void @_ZdlPv(ptr noundef %43) #26
  br label %51

51:                                               ; preds = %46, %50
  invoke void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS7_(ptr noundef nonnull align 8 dereferenceable(64) %32, ptr noundef nonnull align 8 dereferenceable(64) %1)
          to label %77 unwind label %52

52:                                               ; preds = %51
  %53 = landingpad { ptr, i32 }
          catch ptr null
  %54 = extractvalue { ptr, i32 } %53, 0
  %55 = tail call ptr @__cxa_begin_catch(ptr %54) #28
  tail call void @_ZdlPv(ptr noundef nonnull %4) #26
  invoke void @__cxa_rethrow() #30
          to label %63 unwind label %56

56:                                               ; preds = %52
  %57 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %58 unwind label %60

58:                                               ; preds = %71, %56
  %59 = phi { ptr, i32 } [ %57, %56 ], [ %72, %71 ]
  resume { ptr, i32 } %59

60:                                               ; preds = %56
  %61 = landingpad { ptr, i32 }
          catch ptr null
  %62 = extractvalue { ptr, i32 } %61, 0
  tail call void @__clang_call_terminate(ptr %62) #27
  unreachable

63:                                               ; preds = %52
  unreachable

64:                                               ; preds = %2
  %65 = tail call noalias noundef nonnull dereferenceable(96) ptr @_Znwm(i64 noundef 96) #25
  %66 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %65, i64 0, i32 1
  invoke void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EC2ERKS7_(ptr noundef nonnull align 8 dereferenceable(64) %66, ptr noundef nonnull align 8 dereferenceable(64) %1)
          to label %77 unwind label %67

67:                                               ; preds = %64
  %68 = landingpad { ptr, i32 }
          catch ptr null
  %69 = extractvalue { ptr, i32 } %68, 0
  %70 = tail call ptr @__cxa_begin_catch(ptr %69) #28
  tail call void @_ZdlPv(ptr noundef nonnull %65) #26
  invoke void @__cxa_rethrow() #30
          to label %76 unwind label %71

71:                                               ; preds = %67
  %72 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %58 unwind label %73

73:                                               ; preds = %71
  %74 = landingpad { ptr, i32 }
          catch ptr null
  %75 = extractvalue { ptr, i32 } %74, 0
  tail call void @__clang_call_terminate(ptr %75) #27
  unreachable

76:                                               ; preds = %67
  unreachable

77:                                               ; preds = %64, %51
  %78 = phi ptr [ %4, %51 ], [ %65, %64 ]
  ret ptr %78
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN25SectionBasedConfiguration17IterationVariableESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(128) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !110
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 9223372036854775680
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.167) #30
  unreachable

12:                                               ; preds = %3
  %13 = ashr exact i64 %9, 7
  %14 = tail call i64 @llvm.umax.i64(i64 %13, i64 1)
  %15 = add i64 %14, %13
  %16 = icmp ult i64 %15, %13
  %17 = icmp ugt i64 %15, 72057594037927935
  %18 = or i1 %16, %17
  %19 = select i1 %18, i64 72057594037927935, i64 %15
  %20 = ptrtoint ptr %1 to i64
  %21 = sub i64 %20, %8
  %22 = ashr exact i64 %21, 7
  %23 = icmp eq i64 %19, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %12
  %25 = shl nuw nsw i64 %19, 7
  %26 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %25) #25
  br label %27

27:                                               ; preds = %12, %24
  %28 = phi ptr [ %26, %24 ], [ null, %12 ]
  %29 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %28, i64 %22
  invoke void @_ZN25SectionBasedConfiguration17IterationVariableC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(128) %29, ptr noundef nonnull align 8 dereferenceable(128) %2)
          to label %30 unwind label %94

30:                                               ; preds = %27
  %31 = invoke noundef ptr @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN25SectionBasedConfiguration17IterationVariableES4_EET0_T_S6_S5_(ptr noundef %6, ptr noundef %1, ptr noundef %28)
          to label %36 unwind label %32

32:                                               ; preds = %30
  %33 = landingpad { ptr, i32 }
          catch ptr null
  %34 = extractvalue { ptr, i32 } %33, 0
  %35 = tail call ptr @__cxa_begin_catch(ptr %34) #28
  br label %99

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %31, i64 1
  %38 = invoke noundef ptr @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN25SectionBasedConfiguration17IterationVariableES4_EET0_T_S6_S5_(ptr noundef %1, ptr noundef %5, ptr noundef nonnull %37)
          to label %43 unwind label %39

39:                                               ; preds = %36
  %40 = landingpad { ptr, i32 }
          catch ptr null
  %41 = extractvalue { ptr, i32 } %40, 0
  %42 = tail call ptr @__cxa_begin_catch(ptr %41) #28
  br label %140

43:                                               ; preds = %36
  %44 = icmp eq ptr %6, %5
  br i1 %44, label %88, label %45

45:                                               ; preds = %43, %85
  %46 = phi ptr [ %86, %85 ], [ %6, %43 ]
  %47 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %46, i64 0, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !63
  %49 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %46, i64 0, i32 3, i32 2
  %50 = icmp eq ptr %48, %49
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %46, i64 0, i32 3, i32 1
  %53 = load i64, ptr %52, align 8, !tbaa !13
  %54 = icmp ult i64 %53, 16
  tail call void @llvm.assume(i1 %54)
  br label %56

55:                                               ; preds = %45
  tail call void @_ZdlPv(ptr noundef %48) #26
  br label %56

56:                                               ; preds = %55, %51
  %57 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %46, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !63
  %59 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %46, i64 0, i32 2, i32 2
  %60 = icmp eq ptr %58, %59
  br i1 %60, label %61, label %65

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %46, i64 0, i32 2, i32 1
  %63 = load i64, ptr %62, align 8, !tbaa !13
  %64 = icmp ult i64 %63, 16
  tail call void @llvm.assume(i1 %64)
  br label %66

65:                                               ; preds = %56
  tail call void @_ZdlPv(ptr noundef %58) #26
  br label %66

66:                                               ; preds = %65, %61
  %67 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %46, i64 0, i32 1
  %68 = load ptr, ptr %67, align 8, !tbaa !63
  %69 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %46, i64 0, i32 1, i32 2
  %70 = icmp eq ptr %68, %69
  br i1 %70, label %71, label %75

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %46, i64 0, i32 1, i32 1
  %73 = load i64, ptr %72, align 8, !tbaa !13
  %74 = icmp ult i64 %73, 16
  tail call void @llvm.assume(i1 %74)
  br label %76

75:                                               ; preds = %66
  tail call void @_ZdlPv(ptr noundef %68) #26
  br label %76

76:                                               ; preds = %75, %71
  %77 = load ptr, ptr %46, align 8, !tbaa !63
  %78 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %46, i64 0, i32 2
  %79 = icmp eq ptr %77, %78
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %46, i64 0, i32 1
  %82 = load i64, ptr %81, align 8, !tbaa !13
  %83 = icmp ult i64 %82, 16
  tail call void @llvm.assume(i1 %83)
  br label %85

84:                                               ; preds = %76
  tail call void @_ZdlPv(ptr noundef %77) #26
  br label %85

85:                                               ; preds = %84, %80
  %86 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %46, i64 1
  %87 = icmp eq ptr %86, %5
  br i1 %87, label %88, label %45

88:                                               ; preds = %85, %43
  %89 = icmp eq ptr %6, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %88
  tail call void @_ZdlPv(ptr noundef nonnull %6) #26
  br label %91

91:                                               ; preds = %88, %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::IterationVariable, std::allocator<SectionBasedConfiguration::IterationVariable> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %28, ptr %0, align 8, !tbaa !108
  store ptr %38, ptr %4, align 8, !tbaa !110
  %93 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %28, i64 %19
  store ptr %93, ptr %92, align 8, !tbaa !113
  ret void

94:                                               ; preds = %27
  %95 = landingpad { ptr, i32 }
          catch ptr null
  %96 = extractvalue { ptr, i32 } %95, 0
  %97 = tail call ptr @__cxa_begin_catch(ptr %96) #28
  %98 = icmp eq ptr %28, null
  br i1 %98, label %99, label %140

99:                                               ; preds = %32, %94
  %100 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %28, i64 %22, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !63
  %102 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %28, i64 %22, i32 3, i32 2
  %103 = icmp eq ptr %101, %102
  br i1 %103, label %104, label %108

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %28, i64 %22, i32 3, i32 1
  %106 = load i64, ptr %105, align 8, !tbaa !13
  %107 = icmp ult i64 %106, 16
  tail call void @llvm.assume(i1 %107)
  br label %109

108:                                              ; preds = %99
  tail call void @_ZdlPv(ptr noundef %101) #26
  br label %109

109:                                              ; preds = %108, %104
  %110 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %28, i64 %22, i32 2
  %111 = load ptr, ptr %110, align 8, !tbaa !63
  %112 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %28, i64 %22, i32 2, i32 2
  %113 = icmp eq ptr %111, %112
  br i1 %113, label %114, label %118

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %28, i64 %22, i32 2, i32 1
  %116 = load i64, ptr %115, align 8, !tbaa !13
  %117 = icmp ult i64 %116, 16
  tail call void @llvm.assume(i1 %117)
  br label %119

118:                                              ; preds = %109
  tail call void @_ZdlPv(ptr noundef %111) #26
  br label %119

119:                                              ; preds = %118, %114
  %120 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %28, i64 %22, i32 1
  %121 = load ptr, ptr %120, align 8, !tbaa !63
  %122 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %28, i64 %22, i32 1, i32 2
  %123 = icmp eq ptr %121, %122
  br i1 %123, label %124, label %128

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %28, i64 %22, i32 1, i32 1
  %126 = load i64, ptr %125, align 8, !tbaa !13
  %127 = icmp ult i64 %126, 16
  tail call void @llvm.assume(i1 %127)
  br label %129

128:                                              ; preds = %119
  tail call void @_ZdlPv(ptr noundef %121) #26
  br label %129

129:                                              ; preds = %128, %124
  %130 = load ptr, ptr %29, align 8, !tbaa !63
  %131 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 2
  %132 = icmp eq ptr %130, %131
  br i1 %132, label %133, label %137

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 1
  %135 = load i64, ptr %134, align 8, !tbaa !13
  %136 = icmp ult i64 %135, 16
  tail call void @llvm.assume(i1 %136)
  br label %188

137:                                              ; preds = %129
  tail call void @_ZdlPv(ptr noundef %130) #26
  br label %188

138:                                              ; preds = %189
  %139 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %190 unwind label %191

140:                                              ; preds = %39, %94
  %141 = phi ptr [ %37, %39 ], [ %28, %94 ]
  %142 = icmp eq ptr %28, %141
  br i1 %142, label %186, label %143

143:                                              ; preds = %140, %183
  %144 = phi ptr [ %184, %183 ], [ %28, %140 ]
  %145 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %144, i64 0, i32 3
  %146 = load ptr, ptr %145, align 8, !tbaa !63
  %147 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %144, i64 0, i32 3, i32 2
  %148 = icmp eq ptr %146, %147
  br i1 %148, label %149, label %153

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %144, i64 0, i32 3, i32 1
  %151 = load i64, ptr %150, align 8, !tbaa !13
  %152 = icmp ult i64 %151, 16
  tail call void @llvm.assume(i1 %152)
  br label %154

153:                                              ; preds = %143
  tail call void @_ZdlPv(ptr noundef %146) #26
  br label %154

154:                                              ; preds = %153, %149
  %155 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %144, i64 0, i32 2
  %156 = load ptr, ptr %155, align 8, !tbaa !63
  %157 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %144, i64 0, i32 2, i32 2
  %158 = icmp eq ptr %156, %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %144, i64 0, i32 2, i32 1
  %161 = load i64, ptr %160, align 8, !tbaa !13
  %162 = icmp ult i64 %161, 16
  tail call void @llvm.assume(i1 %162)
  br label %164

163:                                              ; preds = %154
  tail call void @_ZdlPv(ptr noundef %156) #26
  br label %164

164:                                              ; preds = %163, %159
  %165 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %144, i64 0, i32 1
  %166 = load ptr, ptr %165, align 8, !tbaa !63
  %167 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %144, i64 0, i32 1, i32 2
  %168 = icmp eq ptr %166, %167
  br i1 %168, label %169, label %173

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %144, i64 0, i32 1, i32 1
  %171 = load i64, ptr %170, align 8, !tbaa !13
  %172 = icmp ult i64 %171, 16
  tail call void @llvm.assume(i1 %172)
  br label %174

173:                                              ; preds = %164
  tail call void @_ZdlPv(ptr noundef %166) #26
  br label %174

174:                                              ; preds = %173, %169
  %175 = load ptr, ptr %144, align 8, !tbaa !63
  %176 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %144, i64 0, i32 2
  %177 = icmp eq ptr %175, %176
  br i1 %177, label %178, label %182

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %144, i64 0, i32 1
  %180 = load i64, ptr %179, align 8, !tbaa !13
  %181 = icmp ult i64 %180, 16
  tail call void @llvm.assume(i1 %181)
  br label %183

182:                                              ; preds = %174
  tail call void @_ZdlPv(ptr noundef %175) #26
  br label %183

183:                                              ; preds = %182, %178
  %184 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %144, i64 1
  %185 = icmp eq ptr %184, %141
  br i1 %185, label %186, label %143

186:                                              ; preds = %183, %140
  %187 = icmp eq ptr %28, null
  br i1 %187, label %189, label %188

188:                                              ; preds = %133, %137, %186
  tail call void @_ZdlPv(ptr noundef nonnull %28) #26
  br label %189

189:                                              ; preds = %188, %186
  invoke void @__cxa_rethrow() #30
          to label %194 unwind label %138

190:                                              ; preds = %138
  resume { ptr, i32 } %139

191:                                              ; preds = %138
  %192 = landingpad { ptr, i32 }
          catch ptr null
  %193 = extractvalue { ptr, i32 } %192, 0
  tail call void @__clang_call_terminate(ptr %193) #27
  unreachable

194:                                              ; preds = %189
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN25SectionBasedConfiguration17IterationVariableC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %1) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %7, ptr %0, align 8, !tbaa !11
  %8 = load ptr, ptr %1, align 8, !tbaa !63
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %10 = load i64, ptr %9, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #28
  store i64 %10, ptr %6, align 8, !tbaa !87
  %11 = icmp ugt i64 %10, 15
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(8) %6, i64 noundef 0)
  store ptr %13, ptr %0, align 8, !tbaa !63
  %14 = load i64, ptr %6, align 8, !tbaa !87
  store i64 %14, ptr %7, align 8, !tbaa !16
  br label %15

15:                                               ; preds = %12, %2
  %16 = phi ptr [ %13, %12 ], [ %7, %2 ]
  switch i64 %10, label %19 [
    i64 1, label %17
    i64 0, label %20
  ]

17:                                               ; preds = %15
  %18 = load i8, ptr %8, align 1, !tbaa !16
  store i8 %18, ptr %16, align 1, !tbaa !16
  br label %20

19:                                               ; preds = %15
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %16, ptr align 1 %8, i64 %10, i1 false)
  br label %20

20:                                               ; preds = %15, %17, %19
  %21 = load i64, ptr %6, align 8, !tbaa !87
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %21, ptr %22, align 8, !tbaa !13
  %23 = load ptr, ptr %0, align 8, !tbaa !63
  %24 = getelementptr inbounds i8, ptr %23, i64 %21
  store i8 0, ptr %24, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #28
  %25 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %1, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 1, i32 2
  store ptr %27, ptr %25, align 8, !tbaa !11
  %28 = load ptr, ptr %26, align 8, !tbaa !63
  %29 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %1, i64 0, i32 1, i32 1
  %30 = load i64, ptr %29, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #28
  store i64 %30, ptr %5, align 8, !tbaa !87
  %31 = icmp ugt i64 %30, 15
  br i1 %31, label %32, label %36

32:                                               ; preds = %20
  %33 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %25, ptr noundef nonnull align 8 dereferenceable(8) %5, i64 noundef 0)
          to label %34 unwind label %88

34:                                               ; preds = %32
  store ptr %33, ptr %25, align 8, !tbaa !63
  %35 = load i64, ptr %5, align 8, !tbaa !87
  store i64 %35, ptr %27, align 8, !tbaa !16
  br label %36

36:                                               ; preds = %34, %20
  %37 = phi ptr [ %33, %34 ], [ %27, %20 ]
  switch i64 %30, label %40 [
    i64 1, label %38
    i64 0, label %41
  ]

38:                                               ; preds = %36
  %39 = load i8, ptr %28, align 1, !tbaa !16
  store i8 %39, ptr %37, align 1, !tbaa !16
  br label %41

40:                                               ; preds = %36
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %37, ptr align 1 %28, i64 %30, i1 false)
  br label %41

41:                                               ; preds = %40, %38, %36
  %42 = load i64, ptr %5, align 8, !tbaa !87
  %43 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 1, i32 1
  store i64 %42, ptr %43, align 8, !tbaa !13
  %44 = load ptr, ptr %25, align 8, !tbaa !63
  %45 = getelementptr inbounds i8, ptr %44, i64 %42
  store i8 0, ptr %45, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #28
  %46 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 2
  %47 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %1, i64 0, i32 2
  %48 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 2, i32 2
  store ptr %48, ptr %46, align 8, !tbaa !11
  %49 = load ptr, ptr %47, align 8, !tbaa !63
  %50 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %1, i64 0, i32 2, i32 1
  %51 = load i64, ptr %50, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %51, ptr %4, align 8, !tbaa !87
  %52 = icmp ugt i64 %51, 15
  br i1 %52, label %53, label %57

53:                                               ; preds = %41
  %54 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %46, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %55 unwind label %90

55:                                               ; preds = %53
  store ptr %54, ptr %46, align 8, !tbaa !63
  %56 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %56, ptr %48, align 8, !tbaa !16
  br label %57

57:                                               ; preds = %55, %41
  %58 = phi ptr [ %54, %55 ], [ %48, %41 ]
  switch i64 %51, label %61 [
    i64 1, label %59
    i64 0, label %62
  ]

59:                                               ; preds = %57
  %60 = load i8, ptr %49, align 1, !tbaa !16
  store i8 %60, ptr %58, align 1, !tbaa !16
  br label %62

61:                                               ; preds = %57
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %58, ptr align 1 %49, i64 %51, i1 false)
  br label %62

62:                                               ; preds = %61, %59, %57
  %63 = load i64, ptr %4, align 8, !tbaa !87
  %64 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 2, i32 1
  store i64 %63, ptr %64, align 8, !tbaa !13
  %65 = load ptr, ptr %46, align 8, !tbaa !63
  %66 = getelementptr inbounds i8, ptr %65, i64 %63
  store i8 0, ptr %66, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %67 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 3
  %68 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %1, i64 0, i32 3
  %69 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 3, i32 2
  store ptr %69, ptr %67, align 8, !tbaa !11
  %70 = load ptr, ptr %68, align 8, !tbaa !63
  %71 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %1, i64 0, i32 3, i32 1
  %72 = load i64, ptr %71, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #28
  store i64 %72, ptr %3, align 8, !tbaa !87
  %73 = icmp ugt i64 %72, 15
  br i1 %73, label %74, label %78

74:                                               ; preds = %62
  %75 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %67, ptr noundef nonnull align 8 dereferenceable(8) %3, i64 noundef 0)
          to label %76 unwind label %92

76:                                               ; preds = %74
  store ptr %75, ptr %67, align 8, !tbaa !63
  %77 = load i64, ptr %3, align 8, !tbaa !87
  store i64 %77, ptr %69, align 8, !tbaa !16
  br label %78

78:                                               ; preds = %76, %62
  %79 = phi ptr [ %75, %76 ], [ %69, %62 ]
  switch i64 %72, label %82 [
    i64 1, label %80
    i64 0, label %83
  ]

80:                                               ; preds = %78
  %81 = load i8, ptr %70, align 1, !tbaa !16
  store i8 %81, ptr %79, align 1, !tbaa !16
  br label %83

82:                                               ; preds = %78
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %79, ptr align 1 %70, i64 %72, i1 false)
  br label %83

83:                                               ; preds = %82, %80, %78
  %84 = load i64, ptr %3, align 8, !tbaa !87
  %85 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %0, i64 0, i32 3, i32 1
  store i64 %84, ptr %85, align 8, !tbaa !13
  %86 = load ptr, ptr %67, align 8, !tbaa !63
  %87 = getelementptr inbounds i8, ptr %86, i64 %84
  store i8 0, ptr %87, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #28
  ret void

88:                                               ; preds = %32
  %89 = landingpad { ptr, i32 }
          cleanup
  br label %108

90:                                               ; preds = %53
  %91 = landingpad { ptr, i32 }
          cleanup
  br label %100

92:                                               ; preds = %74
  %93 = landingpad { ptr, i32 }
          cleanup
  %94 = load ptr, ptr %46, align 8, !tbaa !63
  %95 = icmp eq ptr %94, %48
  br i1 %95, label %96, label %99

96:                                               ; preds = %92
  %97 = load i64, ptr %64, align 8, !tbaa !13
  %98 = icmp ult i64 %97, 16
  call void @llvm.assume(i1 %98)
  br label %100

99:                                               ; preds = %92
  call void @_ZdlPv(ptr noundef %94) #26
  br label %100

100:                                              ; preds = %99, %96, %90
  %101 = phi { ptr, i32 } [ %91, %90 ], [ %93, %96 ], [ %93, %99 ]
  %102 = load ptr, ptr %25, align 8, !tbaa !63
  %103 = icmp eq ptr %102, %27
  br i1 %103, label %104, label %107

104:                                              ; preds = %100
  %105 = load i64, ptr %43, align 8, !tbaa !13
  %106 = icmp ult i64 %105, 16
  call void @llvm.assume(i1 %106)
  br label %108

107:                                              ; preds = %100
  call void @_ZdlPv(ptr noundef %102) #26
  br label %108

108:                                              ; preds = %107, %104, %88
  %109 = phi { ptr, i32 } [ %89, %88 ], [ %101, %104 ], [ %101, %107 ]
  %110 = load ptr, ptr %0, align 8, !tbaa !63
  %111 = icmp eq ptr %110, %7
  br i1 %111, label %112, label %115

112:                                              ; preds = %108
  %113 = load i64, ptr %22, align 8, !tbaa !13
  %114 = icmp ult i64 %113, 16
  call void @llvm.assume(i1 %114)
  br label %116

115:                                              ; preds = %108
  call void @_ZdlPv(ptr noundef %110) #26
  br label %116

116:                                              ; preds = %115, %112
  resume { ptr, i32 } %109
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN25SectionBasedConfiguration17IterationVariableES4_EET0_T_S6_S5_(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = icmp eq ptr %0, %1
  br i1 %4, label %68, label %5

5:                                                ; preds = %3, %8
  %6 = phi ptr [ %10, %8 ], [ %2, %3 ]
  %7 = phi ptr [ %9, %8 ], [ %0, %3 ]
  invoke void @_ZN25SectionBasedConfiguration17IterationVariableC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(128) %6, ptr noundef nonnull align 8 dereferenceable(128) %7)
          to label %8 unwind label %12

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %7, i64 1
  %10 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %6, i64 1
  %11 = icmp eq ptr %9, %1
  br i1 %11, label %68, label %5

12:                                               ; preds = %5
  %13 = landingpad { ptr, i32 }
          catch ptr null
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = tail call ptr @__cxa_begin_catch(ptr %14) #28
  %16 = icmp eq ptr %6, %2
  br i1 %16, label %60, label %17

17:                                               ; preds = %12, %57
  %18 = phi ptr [ %58, %57 ], [ %2, %12 ]
  %19 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %18, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !63
  %21 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %18, i64 0, i32 3, i32 2
  %22 = icmp eq ptr %20, %21
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %18, i64 0, i32 3, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !13
  %26 = icmp ult i64 %25, 16
  tail call void @llvm.assume(i1 %26)
  br label %28

27:                                               ; preds = %17
  tail call void @_ZdlPv(ptr noundef %20) #26
  br label %28

28:                                               ; preds = %27, %23
  %29 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %18, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !63
  %31 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %18, i64 0, i32 2, i32 2
  %32 = icmp eq ptr %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %18, i64 0, i32 2, i32 1
  %35 = load i64, ptr %34, align 8, !tbaa !13
  %36 = icmp ult i64 %35, 16
  tail call void @llvm.assume(i1 %36)
  br label %38

37:                                               ; preds = %28
  tail call void @_ZdlPv(ptr noundef %30) #26
  br label %38

38:                                               ; preds = %37, %33
  %39 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %18, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !63
  %41 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %18, i64 0, i32 1, i32 2
  %42 = icmp eq ptr %40, %41
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %18, i64 0, i32 1, i32 1
  %45 = load i64, ptr %44, align 8, !tbaa !13
  %46 = icmp ult i64 %45, 16
  tail call void @llvm.assume(i1 %46)
  br label %48

47:                                               ; preds = %38
  tail call void @_ZdlPv(ptr noundef %40) #26
  br label %48

48:                                               ; preds = %47, %43
  %49 = load ptr, ptr %18, align 8, !tbaa !63
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %18, i64 0, i32 2
  %51 = icmp eq ptr %49, %50
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %18, i64 0, i32 1
  %54 = load i64, ptr %53, align 8, !tbaa !13
  %55 = icmp ult i64 %54, 16
  tail call void @llvm.assume(i1 %55)
  br label %57

56:                                               ; preds = %48
  tail call void @_ZdlPv(ptr noundef %49) #26
  br label %57

57:                                               ; preds = %56, %52
  %58 = getelementptr inbounds %"struct.SectionBasedConfiguration::IterationVariable", ptr %18, i64 1
  %59 = icmp eq ptr %58, %6
  br i1 %59, label %60, label %17

60:                                               ; preds = %57, %12
  invoke void @__cxa_rethrow() #30
          to label %67 unwind label %61

61:                                               ; preds = %60
  %62 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %63 unwind label %64

63:                                               ; preds = %61
  resume { ptr, i32 } %62

64:                                               ; preds = %61
  %65 = landingpad { ptr, i32 }
          catch ptr null
  %66 = extractvalue { ptr, i32 } %65, 0
  tail call void @__clang_call_terminate(ptr %66) #27
  unreachable

67:                                               ; preds = %60
  unreachable

68:                                               ; preds = %8, %3
  %69 = phi ptr [ %2, %3 ], [ %10, %8 ]
  ret ptr %69
}

; Function Attrs: noreturn
declare void @_ZSt24__throw_out_of_range_fmtPKcz(ptr noundef, ...) local_unnamed_addr #20

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(8) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !216
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 9223372036854775800
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.167) #30
  unreachable

12:                                               ; preds = %3
  %13 = ashr exact i64 %9, 3
  %14 = tail call i64 @llvm.umax.i64(i64 %13, i64 1)
  %15 = add i64 %14, %13
  %16 = icmp ult i64 %15, %13
  %17 = icmp ugt i64 %15, 1152921504606846975
  %18 = or i1 %16, %17
  %19 = select i1 %18, i64 1152921504606846975, i64 %15
  %20 = ptrtoint ptr %1 to i64
  %21 = sub i64 %20, %8
  %22 = ashr exact i64 %21, 3
  %23 = icmp eq i64 %19, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %12
  %25 = shl nuw nsw i64 %19, 3
  %26 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %25) #25
  br label %27

27:                                               ; preds = %24, %12
  %28 = phi ptr [ %26, %24 ], [ null, %12 ]
  %29 = getelementptr inbounds ptr, ptr %28, i64 %22
  %30 = load ptr, ptr %2, align 8, !tbaa !5
  store ptr %30, ptr %29, align 8, !tbaa !5
  %31 = icmp sgt i64 %21, 8
  br i1 %31, label %32, label %33, !prof !234

32:                                               ; preds = %27
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %28, ptr align 8 %6, i64 %21, i1 false)
  br label %37

33:                                               ; preds = %27
  %34 = icmp eq i64 %21, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = load ptr, ptr %6, align 8, !tbaa !5
  store ptr %36, ptr %28, align 8, !tbaa !5
  br label %37

37:                                               ; preds = %35, %33, %32
  %38 = getelementptr inbounds ptr, ptr %29, i64 1
  %39 = sub i64 %7, %20
  %40 = icmp sgt i64 %39, 8
  br i1 %40, label %41, label %42, !prof !234

41:                                               ; preds = %37
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %38, ptr align 8 %1, i64 %39, i1 false)
  br label %46

42:                                               ; preds = %37
  %43 = icmp eq i64 %39, 8
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = load ptr, ptr %1, align 8, !tbaa !5
  store ptr %45, ptr %38, align 8, !tbaa !5
  br label %46

46:                                               ; preds = %44, %42, %41
  %47 = icmp eq ptr %6, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %46
  tail call void @_ZdlPv(ptr noundef nonnull %6) #26
  br label %49

49:                                               ; preds = %46, %48
  %50 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %51 = ashr exact i64 %39, 3
  %52 = getelementptr inbounds ptr, ptr %38, i64 %51
  store ptr %28, ptr %0, align 8, !tbaa !217
  store ptr %52, ptr %4, align 8, !tbaa !216
  %53 = getelementptr inbounds ptr, ptr %28, i64 %19
  store ptr %53, ptr %50, align 8, !tbaa !214
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #13

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EERKi(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr noundef nonnull align 4 dereferenceable(4) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !103
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 9223372036854775804
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.167) #30
  unreachable

12:                                               ; preds = %3
  %13 = ashr exact i64 %9, 2
  %14 = tail call i64 @llvm.umax.i64(i64 %13, i64 1)
  %15 = add i64 %14, %13
  %16 = icmp ult i64 %15, %13
  %17 = icmp ugt i64 %15, 2305843009213693951
  %18 = or i1 %16, %17
  %19 = select i1 %18, i64 2305843009213693951, i64 %15
  %20 = ptrtoint ptr %1 to i64
  %21 = sub i64 %20, %8
  %22 = ashr exact i64 %21, 2
  %23 = icmp eq i64 %19, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %12
  %25 = shl nuw nsw i64 %19, 2
  %26 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %25) #25
  br label %27

27:                                               ; preds = %24, %12
  %28 = phi ptr [ %26, %24 ], [ null, %12 ]
  %29 = getelementptr inbounds i32, ptr %28, i64 %22
  %30 = load i32, ptr %2, align 4, !tbaa !104
  store i32 %30, ptr %29, align 4, !tbaa !104
  %31 = icmp sgt i64 %21, 4
  br i1 %31, label %32, label %33, !prof !234

32:                                               ; preds = %27
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %28, ptr align 4 %6, i64 %21, i1 false)
  br label %37

33:                                               ; preds = %27
  %34 = icmp eq i64 %21, 4
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = load i32, ptr %6, align 4, !tbaa !104
  store i32 %36, ptr %28, align 4, !tbaa !104
  br label %37

37:                                               ; preds = %35, %33, %32
  %38 = getelementptr inbounds i32, ptr %29, i64 1
  %39 = sub i64 %7, %20
  %40 = icmp sgt i64 %39, 4
  br i1 %40, label %41, label %42, !prof !234

41:                                               ; preds = %37
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %38, ptr align 4 %1, i64 %39, i1 false)
  br label %46

42:                                               ; preds = %37
  %43 = icmp eq i64 %39, 4
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = load i32, ptr %1, align 4, !tbaa !104
  store i32 %45, ptr %38, align 4, !tbaa !104
  br label %46

46:                                               ; preds = %44, %42, %41
  %47 = icmp eq ptr %6, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %46
  tail call void @_ZdlPv(ptr noundef nonnull %6) #26
  br label %49

49:                                               ; preds = %46, %48
  %50 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %51 = ashr exact i64 %39, 2
  %52 = getelementptr inbounds i32, ptr %38, i64 %51
  store ptr %28, ptr %0, align 8, !tbaa !95
  store ptr %52, ptr %4, align 8, !tbaa !103
  %53 = getelementptr inbounds i32, ptr %28, i64 %19
  store ptr %53, ptr %50, align 8, !tbaa !220
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_insert_unique_INSG_11_Alloc_nodeEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_ERKSA_RT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(112) %2, ptr noundef nonnull align 8 dereferenceable(8) %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %2)
  %6 = extractvalue { ptr, ptr } %5, 0
  %7 = extractvalue { ptr, ptr } %5, 1
  %8 = icmp eq ptr %7, null
  br i1 %8, label %42, label %9

9:                                                ; preds = %4
  %10 = icmp ne ptr %6, null
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  %12 = icmp eq ptr %11, %7
  %13 = select i1 %10, i1 true, i1 %12
  br i1 %13, label %35, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %16 = load i64, ptr %15, align 8, !tbaa !13
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %7, i64 0, i32 1, i32 0, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !13
  %19 = tail call i64 @llvm.umin.i64(i64 %18, i64 %16)
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %7, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !63
  %24 = load ptr, ptr %2, align 8, !tbaa !63
  %25 = tail call i32 @memcmp(ptr noundef %24, ptr noundef %23, i64 noundef %19) #28
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %21, %14
  %28 = sub i64 %16, %18
  %29 = tail call i64 @llvm.smax.i64(i64 %28, i64 -2147483648)
  %30 = tail call i64 @llvm.smin.i64(i64 %29, i64 2147483647)
  %31 = trunc i64 %30 to i32
  br label %32

32:                                               ; preds = %27, %21
  %33 = phi i32 [ %25, %21 ], [ %31, %27 ]
  %34 = icmp slt i32 %33, 0
  br label %35

35:                                               ; preds = %9, %32
  %36 = phi i1 [ true, %9 ], [ %34, %32 ]
  %37 = load ptr, ptr %3, align 8, !tbaa !258
  %38 = tail call noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #25
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeEPSt13_Rb_tree_nodeISA_ERKSA_(ptr noundef nonnull align 8 dereferenceable(48) %37, ptr noundef nonnull %38, ptr noundef nonnull align 8 dereferenceable(112) %2)
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %36, ptr noundef nonnull %38, ptr noundef nonnull %7, ptr noundef nonnull align 8 dereferenceable(32) %11) #28
  %39 = getelementptr inbounds i8, ptr %0, i64 40
  %40 = load i64, ptr %39, align 8, !tbaa !24
  %41 = add i64 %40, 1
  store i64 %41, ptr %39, align 8, !tbaa !24
  br label %42

42:                                               ; preds = %4, %35
  %43 = phi ptr [ %38, %35 ], [ %6, %4 ]
  ret ptr %43
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = icmp eq ptr %4, %1
  br i1 %5, label %6, label %37

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, ptr %0, i64 40
  %8 = load i64, ptr %7, align 8, !tbaa !24
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %33, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, ptr %0, i64 32
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %12, i64 0, i32 1, i32 0, i32 1
  %14 = load i64, ptr %13, align 8, !tbaa !13
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %16 = load i64, ptr %15, align 8, !tbaa !13
  %17 = tail call i64 @llvm.umin.i64(i64 %16, i64 %14)
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %12, i64 0, i32 1
  %21 = load ptr, ptr %2, align 8, !tbaa !63
  %22 = load ptr, ptr %20, align 8, !tbaa !63
  %23 = tail call i32 @memcmp(ptr noundef %22, ptr noundef %21, i64 noundef %17) #28
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %19, %10
  %26 = sub i64 %14, %16
  %27 = tail call i64 @llvm.smax.i64(i64 %26, i64 -2147483648)
  %28 = tail call i64 @llvm.smin.i64(i64 %27, i64 2147483647)
  %29 = trunc i64 %28 to i32
  br label %30

30:                                               ; preds = %19, %25
  %31 = phi i32 [ %23, %19 ], [ %29, %25 ]
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %143, label %33

33:                                               ; preds = %30, %6
  %34 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2)
  %35 = extractvalue { ptr, ptr } %34, 0
  %36 = extractvalue { ptr, ptr } %34, 1
  br label %143

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %39 = load i64, ptr %38, align 8, !tbaa !13
  %40 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %1, i64 0, i32 1, i32 0, i32 1
  %41 = load i64, ptr %40, align 8, !tbaa !13
  %42 = tail call i64 @llvm.umin.i64(i64 %41, i64 %39)
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %1, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !63
  %47 = load ptr, ptr %2, align 8, !tbaa !63
  %48 = tail call i32 @memcmp(ptr noundef %47, ptr noundef %46, i64 noundef %42) #28
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %56, label %62

50:                                               ; preds = %37
  %51 = sub i64 %39, %41
  %52 = tail call i64 @llvm.smax.i64(i64 %51, i64 -2147483648)
  %53 = tail call i64 @llvm.smin.i64(i64 %52, i64 2147483647)
  %54 = and i64 %53, 2147483648
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %101, label %64

56:                                               ; preds = %44
  %57 = sub i64 %39, %41
  %58 = tail call i64 @llvm.smax.i64(i64 %57, i64 -2147483648)
  %59 = tail call i64 @llvm.smin.i64(i64 %58, i64 2147483647)
  %60 = and i64 %59, 2147483648
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %98, label %64

62:                                               ; preds = %44
  %63 = icmp slt i32 %48, 0
  br i1 %63, label %64, label %98

64:                                               ; preds = %56, %62, %50
  %65 = getelementptr inbounds i8, ptr %0, i64 24
  %66 = load ptr, ptr %65, align 8, !tbaa !5
  %67 = icmp eq ptr %66, %1
  br i1 %67, label %143, label %68

68:                                               ; preds = %64
  %69 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1) #29
  %70 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %69, i64 0, i32 1, i32 0, i32 1
  %71 = load i64, ptr %70, align 8, !tbaa !13
  %72 = tail call i64 @llvm.umin.i64(i64 %39, i64 %71)
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %69, i64 0, i32 1
  %76 = load ptr, ptr %2, align 8, !tbaa !63
  %77 = load ptr, ptr %75, align 8, !tbaa !63
  %78 = tail call i32 @memcmp(ptr noundef %77, ptr noundef %76, i64 noundef %72) #28
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %74, %68
  %81 = sub i64 %71, %39
  %82 = tail call i64 @llvm.smax.i64(i64 %81, i64 -2147483648)
  %83 = tail call i64 @llvm.smin.i64(i64 %82, i64 2147483647)
  %84 = trunc i64 %83 to i32
  br label %85

85:                                               ; preds = %74, %80
  %86 = phi i32 [ %78, %74 ], [ %84, %80 ]
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %88, label %94

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %69, i64 0, i32 3
  %90 = load ptr, ptr %89, align 8, !tbaa !177
  %91 = icmp eq ptr %90, null
  %92 = select i1 %91, ptr null, ptr %1
  %93 = select i1 %91, ptr %69, ptr %1
  br label %143

94:                                               ; preds = %85
  %95 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2)
  %96 = extractvalue { ptr, ptr } %95, 0
  %97 = extractvalue { ptr, ptr } %95, 1
  br label %143

98:                                               ; preds = %56, %62
  %99 = tail call i32 @memcmp(ptr noundef %46, ptr noundef %47, i64 noundef %42) #28
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %106

101:                                              ; preds = %50, %98
  %102 = sub i64 %41, %39
  %103 = tail call i64 @llvm.smax.i64(i64 %102, i64 -2147483648)
  %104 = tail call i64 @llvm.smin.i64(i64 %103, i64 2147483647)
  %105 = trunc i64 %104 to i32
  br label %106

106:                                              ; preds = %98, %101
  %107 = phi i32 [ %99, %98 ], [ %105, %101 ]
  %108 = icmp slt i32 %107, 0
  br i1 %108, label %109, label %143

109:                                              ; preds = %106
  %110 = getelementptr inbounds i8, ptr %0, i64 32
  %111 = load ptr, ptr %110, align 8, !tbaa !5
  %112 = icmp eq ptr %111, %1
  br i1 %112, label %143, label %113

113:                                              ; preds = %109
  %114 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1) #29
  %115 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %114, i64 0, i32 1, i32 0, i32 1
  %116 = load i64, ptr %115, align 8, !tbaa !13
  %117 = tail call i64 @llvm.umin.i64(i64 %116, i64 %39)
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %114, i64 0, i32 1
  %121 = load ptr, ptr %120, align 8, !tbaa !63
  %122 = load ptr, ptr %2, align 8, !tbaa !63
  %123 = tail call i32 @memcmp(ptr noundef %122, ptr noundef %121, i64 noundef %117) #28
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %130

125:                                              ; preds = %119, %113
  %126 = sub i64 %39, %116
  %127 = tail call i64 @llvm.smax.i64(i64 %126, i64 -2147483648)
  %128 = tail call i64 @llvm.smin.i64(i64 %127, i64 2147483647)
  %129 = trunc i64 %128 to i32
  br label %130

130:                                              ; preds = %119, %125
  %131 = phi i32 [ %123, %119 ], [ %129, %125 ]
  %132 = icmp slt i32 %131, 0
  br i1 %132, label %133, label %139

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %135 = load ptr, ptr %134, align 8, !tbaa !177
  %136 = icmp eq ptr %135, null
  %137 = select i1 %136, ptr null, ptr %114
  %138 = select i1 %136, ptr %1, ptr %114
  br label %143

139:                                              ; preds = %130
  %140 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2)
  %141 = extractvalue { ptr, ptr } %140, 0
  %142 = extractvalue { ptr, ptr } %140, 1
  br label %143

143:                                              ; preds = %133, %88, %106, %139, %109, %94, %64, %30, %33
  %144 = phi ptr [ %35, %33 ], [ null, %30 ], [ %96, %94 ], [ %1, %64 ], [ %141, %139 ], [ null, %109 ], [ %1, %106 ], [ %92, %88 ], [ %137, %133 ]
  %145 = phi ptr [ %36, %33 ], [ %12, %30 ], [ %97, %94 ], [ %1, %64 ], [ %142, %139 ], [ %1, %109 ], [ null, %106 ], [ %93, %88 ], [ %138, %133 ]
  %146 = insertvalue { ptr, ptr } poison, ptr %144, 0
  %147 = insertvalue { ptr, ptr } %146, ptr %145, 1
  ret { ptr, ptr } %147
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = load ptr, ptr %3, align 8, !tbaa !5
  %6 = icmp eq ptr %5, null
  br i1 %6, label %36, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !13
  %10 = load ptr, ptr %1, align 8
  br label %11

11:                                               ; preds = %7, %27
  %12 = phi ptr [ %5, %7 ], [ %33, %27 ]
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %12, i64 0, i32 1, i32 0, i32 1
  %14 = load i64, ptr %13, align 8, !tbaa !13
  %15 = tail call i64 @llvm.umin.i64(i64 %14, i64 %9)
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %12, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !63
  %20 = tail call i32 @memcmp(ptr noundef %10, ptr noundef %19, i64 noundef %15) #28
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %17, %11
  %23 = sub i64 %9, %14
  %24 = tail call i64 @llvm.smax.i64(i64 %23, i64 -2147483648)
  %25 = tail call i64 @llvm.smin.i64(i64 %24, i64 2147483647)
  %26 = trunc i64 %25 to i32
  br label %27

27:                                               ; preds = %17, %22
  %28 = phi i32 [ %20, %17 ], [ %26, %22 ]
  %29 = icmp slt i32 %28, 0
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %12, i64 0, i32 2
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %12, i64 0, i32 3
  %32 = select i1 %29, ptr %30, ptr %31
  %33 = load ptr, ptr %32, align 8, !tbaa !5
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %11

35:                                               ; preds = %27
  br i1 %29, label %36, label %43

36:                                               ; preds = %2, %35
  %37 = phi ptr [ %12, %35 ], [ %4, %2 ]
  %38 = getelementptr inbounds i8, ptr %0, i64 24
  %39 = load ptr, ptr %38, align 8, !tbaa !22
  %40 = icmp eq ptr %37, %39
  br i1 %40, label %68, label %41

41:                                               ; preds = %36
  %42 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %37) #29
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi ptr [ %37, %41 ], [ %12, %35 ]
  %45 = phi ptr [ %42, %41 ], [ %12, %35 ]
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %45, i64 0, i32 1, i32 0, i32 1
  %47 = load i64, ptr %46, align 8, !tbaa !13
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %49 = load i64, ptr %48, align 8, !tbaa !13
  %50 = tail call i64 @llvm.umin.i64(i64 %49, i64 %47)
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %45, i64 0, i32 1
  %54 = load ptr, ptr %1, align 8, !tbaa !63
  %55 = load ptr, ptr %53, align 8, !tbaa !63
  %56 = tail call i32 @memcmp(ptr noundef %55, ptr noundef %54, i64 noundef %50) #28
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %52, %43
  %59 = sub i64 %47, %49
  %60 = tail call i64 @llvm.smax.i64(i64 %59, i64 -2147483648)
  %61 = tail call i64 @llvm.smin.i64(i64 %60, i64 2147483647)
  %62 = trunc i64 %61 to i32
  br label %63

63:                                               ; preds = %52, %58
  %64 = phi i32 [ %56, %52 ], [ %62, %58 ]
  %65 = icmp slt i32 %64, 0
  %66 = select i1 %65, ptr null, ptr %45
  %67 = select i1 %65, ptr %44, ptr null
  br label %68

68:                                               ; preds = %63, %36
  %69 = phi ptr [ null, %36 ], [ %66, %63 ]
  %70 = phi ptr [ %37, %36 ], [ %67, %63 ]
  %71 = insertvalue { ptr, ptr } poison, ptr %69, 0
  %72 = insertvalue { ptr, ptr } %71, ptr %70, 1
  ret { ptr, ptr } %72
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeEPSt13_Rb_tree_nodeISA_ERKSA_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(112) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %1, i64 0, i32 1, i32 0, i32 2
  store ptr %6, ptr %5, align 8, !tbaa !11
  %7 = load ptr, ptr %2, align 8, !tbaa !63
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %9, ptr %4, align 8, !tbaa !87
  %10 = icmp ugt i64 %9, 15
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %13 unwind label %36

13:                                               ; preds = %11
  store ptr %12, ptr %5, align 8, !tbaa !63
  %14 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %14, ptr %6, align 8, !tbaa !16
  br label %15

15:                                               ; preds = %13, %3
  %16 = phi ptr [ %12, %13 ], [ %6, %3 ]
  switch i64 %9, label %19 [
    i64 1, label %17
    i64 0, label %20
  ]

17:                                               ; preds = %15
  %18 = load i8, ptr %7, align 1, !tbaa !16
  store i8 %18, ptr %16, align 1, !tbaa !16
  br label %20

19:                                               ; preds = %15
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %16, ptr align 1 %7, i64 %9, i1 false)
  br label %20

20:                                               ; preds = %19, %17, %15
  %21 = load i64, ptr %4, align 8, !tbaa !87
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %1, i64 0, i32 1, i32 0, i32 1
  store i64 %21, ptr %22, align 8, !tbaa !13
  %23 = load ptr, ptr %5, align 8, !tbaa !63
  %24 = getelementptr inbounds i8, ptr %23, i64 %21
  store i8 0, ptr %24, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_node.98", ptr %1, i64 0, i32 1, i32 1
  %26 = getelementptr inbounds %"struct.std::pair.88", ptr %2, i64 0, i32 1
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1C2ERKS0_(ptr noundef nonnull align 8 dereferenceable(80) %25, ptr noundef nonnull align 8 dereferenceable(80) %26)
          to label %35 unwind label %27

27:                                               ; preds = %20
  %28 = landingpad { ptr, i32 }
          catch ptr null
  %29 = load ptr, ptr %5, align 8, !tbaa !63
  %30 = icmp eq ptr %29, %6
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = load i64, ptr %22, align 8, !tbaa !13
  %33 = icmp ult i64 %32, 16
  call void @llvm.assume(i1 %33)
  br label %38

34:                                               ; preds = %27
  call void @_ZdlPv(ptr noundef %29) #26
  br label %38

35:                                               ; preds = %20
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          catch ptr null
  br label %38

38:                                               ; preds = %31, %34, %36
  %39 = phi { ptr, i32 } [ %37, %36 ], [ %28, %34 ], [ %28, %31 ]
  %40 = extractvalue { ptr, i32 } %39, 0
  %41 = call ptr @__cxa_begin_catch(ptr %40) #28
  call void @_ZdlPv(ptr noundef nonnull %1) #26
  invoke void @__cxa_rethrow() #30
          to label %48 unwind label %42

42:                                               ; preds = %38
  %43 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %44 unwind label %45

44:                                               ; preds = %42
  resume { ptr, i32 } %43

45:                                               ; preds = %42
  %46 = landingpad { ptr, i32 }
          catch ptr null
  %47 = extractvalue { ptr, i32 } %46, 0
  call void @__clang_call_terminate(ptr %47) #27
  unreachable

48:                                               ; preds = %38
  unreachable
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #21

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_insert_unique_INSG_11_Alloc_nodeEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_ERKSA_RT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(56) %2, ptr noundef nonnull align 8 dereferenceable(8) %3) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %2)
  %6 = extractvalue { ptr, ptr } %5, 0
  %7 = extractvalue { ptr, ptr } %5, 1
  %8 = icmp eq ptr %7, null
  br i1 %8, label %42, label %9

9:                                                ; preds = %4
  %10 = icmp ne ptr %6, null
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  %12 = icmp eq ptr %11, %7
  %13 = select i1 %10, i1 true, i1 %12
  br i1 %13, label %35, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %16 = load i64, ptr %15, align 8, !tbaa !13
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %7, i64 0, i32 1, i32 0, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !13
  %19 = tail call i64 @llvm.umin.i64(i64 %18, i64 %16)
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %7, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !63
  %24 = load ptr, ptr %2, align 8, !tbaa !63
  %25 = tail call i32 @memcmp(ptr noundef %24, ptr noundef %23, i64 noundef %19) #28
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %21, %14
  %28 = sub i64 %16, %18
  %29 = tail call i64 @llvm.smax.i64(i64 %28, i64 -2147483648)
  %30 = tail call i64 @llvm.smin.i64(i64 %29, i64 2147483647)
  %31 = trunc i64 %30 to i32
  br label %32

32:                                               ; preds = %27, %21
  %33 = phi i32 [ %25, %21 ], [ %31, %27 ]
  %34 = icmp slt i32 %33, 0
  br label %35

35:                                               ; preds = %9, %32
  %36 = phi i1 [ true, %9 ], [ %34, %32 ]
  %37 = load ptr, ptr %3, align 8, !tbaa !260
  %38 = tail call noalias noundef nonnull dereferenceable(88) ptr @_Znwm(i64 noundef 88) #25
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeEPSt13_Rb_tree_nodeISA_ERKSA_(ptr noundef nonnull align 8 dereferenceable(48) %37, ptr noundef nonnull %38, ptr noundef nonnull align 8 dereferenceable(56) %2)
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %36, ptr noundef nonnull %38, ptr noundef nonnull %7, ptr noundef nonnull align 8 dereferenceable(32) %11) #28
  %39 = getelementptr inbounds i8, ptr %0, i64 40
  %40 = load i64, ptr %39, align 8, !tbaa !24
  %41 = add i64 %40, 1
  store i64 %41, ptr %39, align 8, !tbaa !24
  br label %42

42:                                               ; preds = %4, %35
  %43 = phi ptr [ %38, %35 ], [ %6, %4 ]
  ret ptr %43
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = icmp eq ptr %4, %1
  br i1 %5, label %6, label %37

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, ptr %0, i64 40
  %8 = load i64, ptr %7, align 8, !tbaa !24
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %33, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, ptr %0, i64 32
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %12, i64 0, i32 1, i32 0, i32 1
  %14 = load i64, ptr %13, align 8, !tbaa !13
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %16 = load i64, ptr %15, align 8, !tbaa !13
  %17 = tail call i64 @llvm.umin.i64(i64 %16, i64 %14)
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %12, i64 0, i32 1
  %21 = load ptr, ptr %2, align 8, !tbaa !63
  %22 = load ptr, ptr %20, align 8, !tbaa !63
  %23 = tail call i32 @memcmp(ptr noundef %22, ptr noundef %21, i64 noundef %17) #28
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %19, %10
  %26 = sub i64 %14, %16
  %27 = tail call i64 @llvm.smax.i64(i64 %26, i64 -2147483648)
  %28 = tail call i64 @llvm.smin.i64(i64 %27, i64 2147483647)
  %29 = trunc i64 %28 to i32
  br label %30

30:                                               ; preds = %19, %25
  %31 = phi i32 [ %23, %19 ], [ %29, %25 ]
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %143, label %33

33:                                               ; preds = %30, %6
  %34 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2)
  %35 = extractvalue { ptr, ptr } %34, 0
  %36 = extractvalue { ptr, ptr } %34, 1
  br label %143

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %39 = load i64, ptr %38, align 8, !tbaa !13
  %40 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %1, i64 0, i32 1, i32 0, i32 1
  %41 = load i64, ptr %40, align 8, !tbaa !13
  %42 = tail call i64 @llvm.umin.i64(i64 %41, i64 %39)
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %1, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !63
  %47 = load ptr, ptr %2, align 8, !tbaa !63
  %48 = tail call i32 @memcmp(ptr noundef %47, ptr noundef %46, i64 noundef %42) #28
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %56, label %62

50:                                               ; preds = %37
  %51 = sub i64 %39, %41
  %52 = tail call i64 @llvm.smax.i64(i64 %51, i64 -2147483648)
  %53 = tail call i64 @llvm.smin.i64(i64 %52, i64 2147483647)
  %54 = and i64 %53, 2147483648
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %101, label %64

56:                                               ; preds = %44
  %57 = sub i64 %39, %41
  %58 = tail call i64 @llvm.smax.i64(i64 %57, i64 -2147483648)
  %59 = tail call i64 @llvm.smin.i64(i64 %58, i64 2147483647)
  %60 = and i64 %59, 2147483648
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %98, label %64

62:                                               ; preds = %44
  %63 = icmp slt i32 %48, 0
  br i1 %63, label %64, label %98

64:                                               ; preds = %56, %62, %50
  %65 = getelementptr inbounds i8, ptr %0, i64 24
  %66 = load ptr, ptr %65, align 8, !tbaa !5
  %67 = icmp eq ptr %66, %1
  br i1 %67, label %143, label %68

68:                                               ; preds = %64
  %69 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1) #29
  %70 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %69, i64 0, i32 1, i32 0, i32 1
  %71 = load i64, ptr %70, align 8, !tbaa !13
  %72 = tail call i64 @llvm.umin.i64(i64 %39, i64 %71)
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %69, i64 0, i32 1
  %76 = load ptr, ptr %2, align 8, !tbaa !63
  %77 = load ptr, ptr %75, align 8, !tbaa !63
  %78 = tail call i32 @memcmp(ptr noundef %77, ptr noundef %76, i64 noundef %72) #28
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %74, %68
  %81 = sub i64 %71, %39
  %82 = tail call i64 @llvm.smax.i64(i64 %81, i64 -2147483648)
  %83 = tail call i64 @llvm.smin.i64(i64 %82, i64 2147483647)
  %84 = trunc i64 %83 to i32
  br label %85

85:                                               ; preds = %74, %80
  %86 = phi i32 [ %78, %74 ], [ %84, %80 ]
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %88, label %94

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %69, i64 0, i32 3
  %90 = load ptr, ptr %89, align 8, !tbaa !177
  %91 = icmp eq ptr %90, null
  %92 = select i1 %91, ptr null, ptr %1
  %93 = select i1 %91, ptr %69, ptr %1
  br label %143

94:                                               ; preds = %85
  %95 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2)
  %96 = extractvalue { ptr, ptr } %95, 0
  %97 = extractvalue { ptr, ptr } %95, 1
  br label %143

98:                                               ; preds = %56, %62
  %99 = tail call i32 @memcmp(ptr noundef %46, ptr noundef %47, i64 noundef %42) #28
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %106

101:                                              ; preds = %50, %98
  %102 = sub i64 %41, %39
  %103 = tail call i64 @llvm.smax.i64(i64 %102, i64 -2147483648)
  %104 = tail call i64 @llvm.smin.i64(i64 %103, i64 2147483647)
  %105 = trunc i64 %104 to i32
  br label %106

106:                                              ; preds = %98, %101
  %107 = phi i32 [ %99, %98 ], [ %105, %101 ]
  %108 = icmp slt i32 %107, 0
  br i1 %108, label %109, label %143

109:                                              ; preds = %106
  %110 = getelementptr inbounds i8, ptr %0, i64 32
  %111 = load ptr, ptr %110, align 8, !tbaa !5
  %112 = icmp eq ptr %111, %1
  br i1 %112, label %143, label %113

113:                                              ; preds = %109
  %114 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1) #29
  %115 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %114, i64 0, i32 1, i32 0, i32 1
  %116 = load i64, ptr %115, align 8, !tbaa !13
  %117 = tail call i64 @llvm.umin.i64(i64 %116, i64 %39)
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %114, i64 0, i32 1
  %121 = load ptr, ptr %120, align 8, !tbaa !63
  %122 = load ptr, ptr %2, align 8, !tbaa !63
  %123 = tail call i32 @memcmp(ptr noundef %122, ptr noundef %121, i64 noundef %117) #28
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %130

125:                                              ; preds = %119, %113
  %126 = sub i64 %39, %116
  %127 = tail call i64 @llvm.smax.i64(i64 %126, i64 -2147483648)
  %128 = tail call i64 @llvm.smin.i64(i64 %127, i64 2147483647)
  %129 = trunc i64 %128 to i32
  br label %130

130:                                              ; preds = %119, %125
  %131 = phi i32 [ %123, %119 ], [ %129, %125 ]
  %132 = icmp slt i32 %131, 0
  br i1 %132, label %133, label %139

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %135 = load ptr, ptr %134, align 8, !tbaa !177
  %136 = icmp eq ptr %135, null
  %137 = select i1 %136, ptr null, ptr %114
  %138 = select i1 %136, ptr %1, ptr %114
  br label %143

139:                                              ; preds = %130
  %140 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2)
  %141 = extractvalue { ptr, ptr } %140, 0
  %142 = extractvalue { ptr, ptr } %140, 1
  br label %143

143:                                              ; preds = %133, %88, %106, %139, %109, %94, %64, %30, %33
  %144 = phi ptr [ %35, %33 ], [ null, %30 ], [ %96, %94 ], [ %1, %64 ], [ %141, %139 ], [ null, %109 ], [ %1, %106 ], [ %92, %88 ], [ %137, %133 ]
  %145 = phi ptr [ %36, %33 ], [ %12, %30 ], [ %97, %94 ], [ %1, %64 ], [ %142, %139 ], [ %1, %109 ], [ null, %106 ], [ %93, %88 ], [ %138, %133 ]
  %146 = insertvalue { ptr, ptr } poison, ptr %144, 0
  %147 = insertvalue { ptr, ptr } %146, ptr %145, 1
  ret { ptr, ptr } %147
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = load ptr, ptr %3, align 8, !tbaa !5
  %6 = icmp eq ptr %5, null
  br i1 %6, label %36, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !13
  %10 = load ptr, ptr %1, align 8
  br label %11

11:                                               ; preds = %7, %27
  %12 = phi ptr [ %5, %7 ], [ %33, %27 ]
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %12, i64 0, i32 1, i32 0, i32 1
  %14 = load i64, ptr %13, align 8, !tbaa !13
  %15 = tail call i64 @llvm.umin.i64(i64 %14, i64 %9)
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %12, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !63
  %20 = tail call i32 @memcmp(ptr noundef %10, ptr noundef %19, i64 noundef %15) #28
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %17, %11
  %23 = sub i64 %9, %14
  %24 = tail call i64 @llvm.smax.i64(i64 %23, i64 -2147483648)
  %25 = tail call i64 @llvm.smin.i64(i64 %24, i64 2147483647)
  %26 = trunc i64 %25 to i32
  br label %27

27:                                               ; preds = %17, %22
  %28 = phi i32 [ %20, %17 ], [ %26, %22 ]
  %29 = icmp slt i32 %28, 0
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %12, i64 0, i32 2
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %12, i64 0, i32 3
  %32 = select i1 %29, ptr %30, ptr %31
  %33 = load ptr, ptr %32, align 8, !tbaa !5
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %11

35:                                               ; preds = %27
  br i1 %29, label %36, label %43

36:                                               ; preds = %2, %35
  %37 = phi ptr [ %12, %35 ], [ %4, %2 ]
  %38 = getelementptr inbounds i8, ptr %0, i64 24
  %39 = load ptr, ptr %38, align 8, !tbaa !22
  %40 = icmp eq ptr %37, %39
  br i1 %40, label %68, label %41

41:                                               ; preds = %36
  %42 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %37) #29
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi ptr [ %37, %41 ], [ %12, %35 ]
  %45 = phi ptr [ %42, %41 ], [ %12, %35 ]
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %45, i64 0, i32 1, i32 0, i32 1
  %47 = load i64, ptr %46, align 8, !tbaa !13
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %49 = load i64, ptr %48, align 8, !tbaa !13
  %50 = tail call i64 @llvm.umin.i64(i64 %49, i64 %47)
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %45, i64 0, i32 1
  %54 = load ptr, ptr %1, align 8, !tbaa !63
  %55 = load ptr, ptr %53, align 8, !tbaa !63
  %56 = tail call i32 @memcmp(ptr noundef %55, ptr noundef %54, i64 noundef %50) #28
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %52, %43
  %59 = sub i64 %47, %49
  %60 = tail call i64 @llvm.smax.i64(i64 %59, i64 -2147483648)
  %61 = tail call i64 @llvm.smin.i64(i64 %60, i64 2147483647)
  %62 = trunc i64 %61 to i32
  br label %63

63:                                               ; preds = %52, %58
  %64 = phi i32 [ %56, %52 ], [ %62, %58 ]
  %65 = icmp slt i32 %64, 0
  %66 = select i1 %65, ptr null, ptr %45
  %67 = select i1 %65, ptr %44, ptr null
  br label %68

68:                                               ; preds = %63, %36
  %69 = phi ptr [ null, %36 ], [ %66, %63 ]
  %70 = phi ptr [ %37, %36 ], [ %67, %63 ]
  %71 = insertvalue { ptr, ptr } poison, ptr %69, 0
  %72 = insertvalue { ptr, ptr } %71, ptr %70, 1
  ret { ptr, ptr } %72
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeEPSt13_Rb_tree_nodeISA_ERKSA_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(56) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %1, i64 0, i32 1, i32 0, i32 2
  store ptr %6, ptr %5, align 8, !tbaa !11
  %7 = load ptr, ptr %2, align 8, !tbaa !63
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %9, ptr %4, align 8, !tbaa !87
  %10 = icmp ugt i64 %9, 15
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %13 unwind label %36

13:                                               ; preds = %11
  store ptr %12, ptr %5, align 8, !tbaa !63
  %14 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %14, ptr %6, align 8, !tbaa !16
  br label %15

15:                                               ; preds = %13, %3
  %16 = phi ptr [ %12, %13 ], [ %6, %3 ]
  switch i64 %9, label %19 [
    i64 1, label %17
    i64 0, label %20
  ]

17:                                               ; preds = %15
  %18 = load i8, ptr %7, align 1, !tbaa !16
  store i8 %18, ptr %16, align 1, !tbaa !16
  br label %20

19:                                               ; preds = %15
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %16, ptr align 1 %7, i64 %9, i1 false)
  br label %20

20:                                               ; preds = %19, %17, %15
  %21 = load i64, ptr %4, align 8, !tbaa !87
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %1, i64 0, i32 1, i32 0, i32 1
  store i64 %21, ptr %22, align 8, !tbaa !13
  %23 = load ptr, ptr %5, align 8, !tbaa !63
  %24 = getelementptr inbounds i8, ptr %23, i64 %21
  store i8 0, ptr %24, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_node.94", ptr %1, i64 0, i32 1, i32 1
  %26 = getelementptr inbounds %"struct.std::pair.72", ptr %2, i64 0, i32 1
  invoke void @_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue2ESaIS1_EEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %25, ptr noundef nonnull align 8 dereferenceable(24) %26)
          to label %35 unwind label %27

27:                                               ; preds = %20
  %28 = landingpad { ptr, i32 }
          catch ptr null
  %29 = load ptr, ptr %5, align 8, !tbaa !63
  %30 = icmp eq ptr %29, %6
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = load i64, ptr %22, align 8, !tbaa !13
  %33 = icmp ult i64 %32, 16
  call void @llvm.assume(i1 %33)
  br label %38

34:                                               ; preds = %27
  call void @_ZdlPv(ptr noundef %29) #26
  br label %38

35:                                               ; preds = %20
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          catch ptr null
  br label %38

38:                                               ; preds = %31, %34, %36
  %39 = phi { ptr, i32 } [ %37, %36 ], [ %28, %34 ], [ %28, %31 ]
  %40 = extractvalue { ptr, i32 } %39, 0
  %41 = call ptr @__cxa_begin_catch(ptr %40) #28
  call void @_ZdlPv(ptr noundef nonnull %1) #26
  invoke void @__cxa_rethrow() #30
          to label %48 unwind label %42

42:                                               ; preds = %38
  %43 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %44 unwind label %45

44:                                               ; preds = %42
  resume { ptr, i32 } %43

45:                                               ; preds = %42
  %46 = landingpad { ptr, i32 }
          catch ptr null
  %47 = extractvalue { ptr, i32 } %46, 0
  call void @__clang_call_terminate(ptr %47) #27
  unreachable

48:                                               ; preds = %38
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue2ESaIS1_EEC2ERKS3_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl_data", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !65
  %5 = load ptr, ptr %1, align 8, !tbaa !64
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = sdiv exact i64 %8, 104
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %10 = icmp eq ptr %4, %5
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = icmp ugt i64 %9, 88686269585142075
  br i1 %12, label %13, label %14, !prof !262

13:                                               ; preds = %11
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #30
  unreachable

14:                                               ; preds = %11
  %15 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %8) #25
  br label %16

16:                                               ; preds = %2, %14
  %17 = phi ptr [ null, %2 ], [ %15, %14 ]
  store ptr %17, ptr %0, align 8, !tbaa !64
  %18 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !65
  %19 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %17, i64 %9
  %20 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %19, ptr %20, align 8, !tbaa !163
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = load ptr, ptr %3, align 8, !tbaa !5
  %23 = icmp eq ptr %21, %22
  br i1 %23, label %60, label %24

24:                                               ; preds = %16, %27
  %25 = phi ptr [ %35, %27 ], [ %17, %16 ]
  %26 = phi ptr [ %34, %27 ], [ %21, %16 ]
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1C2ERKS0_(ptr noundef nonnull align 8 dereferenceable(80) %25, ptr noundef nonnull align 8 dereferenceable(80) %26)
          to label %27 unwind label %37

27:                                               ; preds = %24
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue2E, i64 0, inrange i32 0, i64 2), ptr %25, align 8, !tbaa !9
  %28 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %26, i64 0, i32 1
  %29 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %25, i64 0, i32 1
  %30 = load <2 x ptr>, ptr %28, align 8, !tbaa !5
  store <2 x ptr> %30, ptr %29, align 8, !tbaa !5
  %31 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %26, i64 0, i32 3
  %32 = load ptr, ptr %31, align 8, !tbaa !161
  %33 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %25, i64 0, i32 3
  store ptr %32, ptr %33, align 8, !tbaa !161
  %34 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %26, i64 1
  %35 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %25, i64 1
  %36 = icmp eq ptr %34, %22
  br i1 %36, label %60, label %24

37:                                               ; preds = %24
  %38 = landingpad { ptr, i32 }
          catch ptr null
  %39 = extractvalue { ptr, i32 } %38, 0
  %40 = tail call ptr @__cxa_begin_catch(ptr %39) #28
  %41 = icmp eq ptr %25, %17
  br i1 %41, label %49, label %42

42:                                               ; preds = %37, %46
  %43 = phi ptr [ %47, %46 ], [ %17, %37 ]
  %44 = load ptr, ptr %43, align 8, !tbaa !9
  %45 = load ptr, ptr %44, align 8
  invoke void %45(ptr noundef nonnull align 8 dereferenceable(104) %43)
          to label %46 unwind label %50

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %43, i64 1
  %48 = icmp eq ptr %47, %25
  br i1 %48, label %49, label %42

49:                                               ; preds = %46, %37
  invoke void @__cxa_rethrow() #30
          to label %59 unwind label %52

50:                                               ; preds = %42
  %51 = landingpad { ptr, i32 }
          cleanup
  br label %54

52:                                               ; preds = %49
  %53 = landingpad { ptr, i32 }
          cleanup
  br label %54

54:                                               ; preds = %52, %50
  %55 = phi { ptr, i32 } [ %51, %50 ], [ %53, %52 ]
  invoke void @__cxa_end_catch()
          to label %62 unwind label %56

56:                                               ; preds = %54
  %57 = landingpad { ptr, i32 }
          catch ptr null
  %58 = extractvalue { ptr, i32 } %57, 0
  tail call void @__clang_call_terminate(ptr %58) #27
  unreachable

59:                                               ; preds = %49
  unreachable

60:                                               ; preds = %27, %16
  %61 = phi ptr [ %17, %16 ], [ %35, %27 ]
  store ptr %61, ptr %18, align 8, !tbaa !65
  ret void

62:                                               ; preds = %54
  %63 = load ptr, ptr %0, align 8, !tbaa !64
  %64 = icmp eq ptr %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %62
  tail call void @_ZdlPv(ptr noundef nonnull %63) #26
  br label %66

66:                                               ; preds = %65, %62
  resume { ptr, i32 } %55
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN25SectionBasedConfiguration9KeyValue2ESaIS1_EE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(104) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !65
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 9223372036854775800
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.167) #30
  unreachable

12:                                               ; preds = %3
  %13 = sdiv exact i64 %9, 104
  %14 = tail call i64 @llvm.umax.i64(i64 %13, i64 1)
  %15 = add i64 %14, %13
  %16 = icmp ult i64 %15, %13
  %17 = icmp ugt i64 %15, 88686269585142075
  %18 = or i1 %16, %17
  %19 = select i1 %18, i64 88686269585142075, i64 %15
  %20 = ptrtoint ptr %1 to i64
  %21 = sub i64 %20, %8
  %22 = sdiv exact i64 %21, 104
  %23 = icmp eq i64 %19, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %12
  %25 = mul nuw nsw i64 %19, 104
  %26 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %25) #25
  br label %27

27:                                               ; preds = %12, %24
  %28 = phi ptr [ %26, %24 ], [ null, %12 ]
  %29 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %28, i64 %22
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1C2ERKS0_(ptr noundef nonnull align 8 dereferenceable(80) %29, ptr noundef nonnull align 8 dereferenceable(80) %2)
          to label %30 unwind label %138

30:                                               ; preds = %27
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue2E, i64 0, inrange i32 0, i64 2), ptr %29, align 8, !tbaa !9
  %31 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %2, i64 0, i32 1
  %32 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %28, i64 %22, i32 1
  %33 = load <2 x ptr>, ptr %31, align 8, !tbaa !5
  store <2 x ptr> %33, ptr %32, align 8, !tbaa !5
  %34 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %2, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !161
  %36 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %28, i64 %22, i32 3
  store ptr %35, ptr %36, align 8, !tbaa !161
  %37 = icmp eq ptr %6, %1
  br i1 %37, label %77, label %38

38:                                               ; preds = %30, %41
  %39 = phi ptr [ %49, %41 ], [ %28, %30 ]
  %40 = phi ptr [ %48, %41 ], [ %6, %30 ]
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1C2ERKS0_(ptr noundef nonnull align 8 dereferenceable(80) %39, ptr noundef nonnull align 8 dereferenceable(80) %40)
          to label %41 unwind label %51

41:                                               ; preds = %38
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue2E, i64 0, inrange i32 0, i64 2), ptr %39, align 8, !tbaa !9
  %42 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %40, i64 0, i32 1
  %43 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %39, i64 0, i32 1
  %44 = load <2 x ptr>, ptr %42, align 8, !tbaa !5
  store <2 x ptr> %44, ptr %43, align 8, !tbaa !5
  %45 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %40, i64 0, i32 3
  %46 = load ptr, ptr %45, align 8, !tbaa !161
  %47 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %39, i64 0, i32 3
  store ptr %46, ptr %47, align 8, !tbaa !161
  %48 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %40, i64 1
  %49 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %39, i64 1
  %50 = icmp eq ptr %48, %1
  br i1 %50, label %77, label %38

51:                                               ; preds = %38
  %52 = landingpad { ptr, i32 }
          catch ptr null
  %53 = extractvalue { ptr, i32 } %52, 0
  %54 = tail call ptr @__cxa_begin_catch(ptr %53) #28
  %55 = icmp eq ptr %39, %28
  br i1 %55, label %63, label %56

56:                                               ; preds = %51, %60
  %57 = phi ptr [ %61, %60 ], [ %28, %51 ]
  %58 = load ptr, ptr %57, align 8, !tbaa !9
  %59 = load ptr, ptr %58, align 8
  invoke void %59(ptr noundef nonnull align 8 dereferenceable(104) %57)
          to label %60 unwind label %64

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %57, i64 1
  %62 = icmp eq ptr %61, %39
  br i1 %62, label %63, label %56

63:                                               ; preds = %60, %51
  invoke void @__cxa_rethrow() #30
          to label %76 unwind label %66

64:                                               ; preds = %56
  %65 = landingpad { ptr, i32 }
          catch ptr null
  br label %68

66:                                               ; preds = %63
  %67 = landingpad { ptr, i32 }
          catch ptr null
  br label %68

68:                                               ; preds = %66, %64
  %69 = phi { ptr, i32 } [ %65, %64 ], [ %67, %66 ]
  invoke void @__cxa_end_catch()
          to label %70 unwind label %73

70:                                               ; preds = %68
  %71 = extractvalue { ptr, i32 } %69, 0
  %72 = tail call ptr @__cxa_begin_catch(ptr %71) #28
  br label %143

73:                                               ; preds = %68
  %74 = landingpad { ptr, i32 }
          catch ptr null
  %75 = extractvalue { ptr, i32 } %74, 0
  tail call void @__clang_call_terminate(ptr %75) #27
  unreachable

76:                                               ; preds = %63
  unreachable

77:                                               ; preds = %41, %30
  %78 = phi ptr [ %28, %30 ], [ %49, %41 ]
  %79 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %78, i64 1
  %80 = icmp eq ptr %5, %1
  br i1 %80, label %123, label %81

81:                                               ; preds = %77, %85
  %82 = phi i64 [ %93, %85 ], [ 1, %77 ]
  %83 = phi ptr [ %92, %85 ], [ %1, %77 ]
  %84 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %78, i64 %82
  invoke void @_ZN25SectionBasedConfiguration9KeyValue1C2ERKS0_(ptr noundef nonnull align 8 dereferenceable(80) %84, ptr noundef nonnull align 8 dereferenceable(80) %83)
          to label %85 unwind label %95

85:                                               ; preds = %81
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN25SectionBasedConfiguration9KeyValue2E, i64 0, inrange i32 0, i64 2), ptr %84, align 8, !tbaa !9
  %86 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %83, i64 0, i32 1
  %87 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %78, i64 %82, i32 1
  %88 = load <2 x ptr>, ptr %86, align 8, !tbaa !5
  store <2 x ptr> %88, ptr %87, align 8, !tbaa !5
  %89 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %83, i64 0, i32 3
  %90 = load ptr, ptr %89, align 8, !tbaa !161
  %91 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %78, i64 %82, i32 3
  store ptr %90, ptr %91, align 8, !tbaa !161
  %92 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %83, i64 1
  %93 = add nuw nsw i64 %82, 1
  %94 = icmp eq ptr %92, %5
  br i1 %94, label %121, label %81

95:                                               ; preds = %81
  %96 = landingpad { ptr, i32 }
          catch ptr null
  %97 = extractvalue { ptr, i32 } %96, 0
  %98 = tail call ptr @__cxa_begin_catch(ptr %97) #28
  %99 = icmp eq i64 %82, 1
  br i1 %99, label %107, label %100

100:                                              ; preds = %95, %104
  %101 = phi ptr [ %105, %104 ], [ %79, %95 ]
  %102 = load ptr, ptr %101, align 8, !tbaa !9
  %103 = load ptr, ptr %102, align 8
  invoke void %103(ptr noundef nonnull align 8 dereferenceable(104) %101)
          to label %104 unwind label %108

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %101, i64 1
  %106 = icmp eq ptr %105, %84
  br i1 %106, label %107, label %100

107:                                              ; preds = %104, %95
  invoke void @__cxa_rethrow() #30
          to label %120 unwind label %110

108:                                              ; preds = %100
  %109 = landingpad { ptr, i32 }
          catch ptr null
  br label %112

110:                                              ; preds = %107
  %111 = landingpad { ptr, i32 }
          catch ptr null
  br label %112

112:                                              ; preds = %110, %108
  %113 = phi { ptr, i32 } [ %109, %108 ], [ %111, %110 ]
  invoke void @__cxa_end_catch()
          to label %114 unwind label %117

114:                                              ; preds = %112
  %115 = extractvalue { ptr, i32 } %113, 0
  %116 = tail call ptr @__cxa_begin_catch(ptr %115) #28
  br label %152

117:                                              ; preds = %112
  %118 = landingpad { ptr, i32 }
          catch ptr null
  %119 = extractvalue { ptr, i32 } %118, 0
  tail call void @__clang_call_terminate(ptr %119) #27
  unreachable

120:                                              ; preds = %107
  unreachable

121:                                              ; preds = %85
  %122 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %78, i64 %93
  br label %123

123:                                              ; preds = %121, %77
  %124 = phi ptr [ %79, %77 ], [ %122, %121 ]
  %125 = icmp eq ptr %6, %5
  br i1 %125, label %132, label %126

126:                                              ; preds = %123, %126
  %127 = phi ptr [ %130, %126 ], [ %6, %123 ]
  %128 = load ptr, ptr %127, align 8, !tbaa !9
  %129 = load ptr, ptr %128, align 8
  tail call void %129(ptr noundef nonnull align 8 dereferenceable(104) %127)
  %130 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %127, i64 1
  %131 = icmp eq ptr %130, %5
  br i1 %131, label %132, label %126

132:                                              ; preds = %126, %123
  %133 = icmp eq ptr %6, null
  br i1 %133, label %135, label %134

134:                                              ; preds = %132
  tail call void @_ZdlPv(ptr noundef nonnull %6) #26
  br label %135

135:                                              ; preds = %132, %134
  %136 = getelementptr inbounds %"struct.std::_Vector_base<SectionBasedConfiguration::KeyValue2, std::allocator<SectionBasedConfiguration::KeyValue2> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %28, ptr %0, align 8, !tbaa !64
  store ptr %124, ptr %4, align 8, !tbaa !65
  %137 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %28, i64 %19
  store ptr %137, ptr %136, align 8, !tbaa !163
  ret void

138:                                              ; preds = %27
  %139 = landingpad { ptr, i32 }
          catch ptr null
  %140 = extractvalue { ptr, i32 } %139, 0
  %141 = tail call ptr @__cxa_begin_catch(ptr %140) #28
  %142 = icmp eq ptr %28, null
  br i1 %142, label %143, label %152

143:                                              ; preds = %70, %138
  %144 = load ptr, ptr %29, align 8, !tbaa !9
  %145 = load ptr, ptr %144, align 8
  invoke void %145(ptr noundef nonnull align 8 dereferenceable(104) %29)
          to label %164 unwind label %148

146:                                              ; preds = %155
  %147 = landingpad { ptr, i32 }
          cleanup
  br label %150

148:                                              ; preds = %165, %143
  %149 = landingpad { ptr, i32 }
          cleanup
  br label %150

150:                                              ; preds = %148, %146
  %151 = phi { ptr, i32 } [ %147, %146 ], [ %149, %148 ]
  invoke void @__cxa_end_catch()
          to label %166 unwind label %167

152:                                              ; preds = %114, %138
  %153 = phi ptr [ %79, %114 ], [ %28, %138 ]
  %154 = icmp eq ptr %28, %153
  br i1 %154, label %162, label %155

155:                                              ; preds = %152, %159
  %156 = phi ptr [ %160, %159 ], [ %28, %152 ]
  %157 = load ptr, ptr %156, align 8, !tbaa !9
  %158 = load ptr, ptr %157, align 8
  invoke void %158(ptr noundef nonnull align 8 dereferenceable(104) %156)
          to label %159 unwind label %146

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.SectionBasedConfiguration::KeyValue2", ptr %156, i64 1
  %161 = icmp eq ptr %160, %153
  br i1 %161, label %162, label %155

162:                                              ; preds = %159, %152
  %163 = icmp eq ptr %28, null
  br i1 %163, label %165, label %164

164:                                              ; preds = %143, %162
  tail call void @_ZdlPv(ptr noundef nonnull %28) #26
  br label %165

165:                                              ; preds = %164, %162
  invoke void @__cxa_rethrow() #30
          to label %170 unwind label %148

166:                                              ; preds = %150
  resume { ptr, i32 } %151

167:                                              ; preds = %150
  %168 = landingpad { ptr, i32 }
          catch ptr null
  %169 = extractvalue { ptr, i32 } %168, 0
  tail call void @__clang_call_terminate(ptr %169) #27
  unreachable

170:                                              ; preds = %165
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local { ptr, i8 } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueERKS5_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1)
  %4 = extractvalue { ptr, ptr } %3, 0
  %5 = extractvalue { ptr, ptr } %3, 1
  %6 = icmp eq ptr %5, null
  br i1 %6, label %39, label %7

7:                                                ; preds = %2
  %8 = icmp ne ptr %4, null
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = icmp eq ptr %9, %5
  %11 = select i1 %8, i1 true, i1 %10
  br i1 %11, label %33, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %14 = load i64, ptr %13, align 8, !tbaa !13
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %5, i64 0, i32 1, i32 1
  %16 = load i64, ptr %15, align 8, !tbaa !13
  %17 = tail call i64 @llvm.umin.i64(i64 %16, i64 %14)
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %5, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !63
  %22 = load ptr, ptr %1, align 8, !tbaa !63
  %23 = tail call i32 @memcmp(ptr noundef %22, ptr noundef %21, i64 noundef %17) #28
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %19, %12
  %26 = sub i64 %14, %16
  %27 = tail call i64 @llvm.smax.i64(i64 %26, i64 -2147483648)
  %28 = tail call i64 @llvm.smin.i64(i64 %27, i64 2147483647)
  %29 = trunc i64 %28 to i32
  br label %30

30:                                               ; preds = %25, %19
  %31 = phi i32 [ %23, %19 ], [ %29, %25 ]
  %32 = icmp slt i32 %31, 0
  br label %33

33:                                               ; preds = %7, %30
  %34 = phi i1 [ true, %7 ], [ %32, %30 ]
  %35 = tail call noalias noundef nonnull dereferenceable(64) ptr @_Znwm(i64 noundef 64) #25
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeEPSt13_Rb_tree_nodeIS5_ERKS5_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %35, ptr noundef nonnull align 8 dereferenceable(32) %1)
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %34, ptr noundef nonnull %35, ptr noundef nonnull %5, ptr noundef nonnull align 8 dereferenceable(32) %9) #28
  %36 = getelementptr inbounds i8, ptr %0, i64 40
  %37 = load i64, ptr %36, align 8, !tbaa !24
  %38 = add i64 %37, 1
  store i64 %38, ptr %36, align 8, !tbaa !24
  br label %39

39:                                               ; preds = %2, %33
  %40 = phi ptr [ %35, %33 ], [ %4, %2 ]
  %41 = phi i8 [ 1, %33 ], [ 0, %2 ]
  %42 = insertvalue { ptr, i8 } poison, ptr %40, 0
  %43 = insertvalue { ptr, i8 } %42, i8 %41, 1
  ret { ptr, i8 } %43
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = load ptr, ptr %3, align 8, !tbaa !5
  %6 = icmp eq ptr %5, null
  br i1 %6, label %36, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !13
  %10 = load ptr, ptr %1, align 8
  br label %11

11:                                               ; preds = %7, %27
  %12 = phi ptr [ %5, %7 ], [ %33, %27 ]
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %12, i64 0, i32 1, i32 1
  %14 = load i64, ptr %13, align 8, !tbaa !13
  %15 = tail call i64 @llvm.umin.i64(i64 %14, i64 %9)
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %12, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !63
  %20 = tail call i32 @memcmp(ptr noundef %10, ptr noundef %19, i64 noundef %15) #28
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %17, %11
  %23 = sub i64 %9, %14
  %24 = tail call i64 @llvm.smax.i64(i64 %23, i64 -2147483648)
  %25 = tail call i64 @llvm.smin.i64(i64 %24, i64 2147483647)
  %26 = trunc i64 %25 to i32
  br label %27

27:                                               ; preds = %17, %22
  %28 = phi i32 [ %20, %17 ], [ %26, %22 ]
  %29 = icmp slt i32 %28, 0
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %12, i64 0, i32 2
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %12, i64 0, i32 3
  %32 = select i1 %29, ptr %30, ptr %31
  %33 = load ptr, ptr %32, align 8, !tbaa !5
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %11

35:                                               ; preds = %27
  br i1 %29, label %36, label %43

36:                                               ; preds = %2, %35
  %37 = phi ptr [ %12, %35 ], [ %4, %2 ]
  %38 = getelementptr inbounds i8, ptr %0, i64 24
  %39 = load ptr, ptr %38, align 8, !tbaa !22
  %40 = icmp eq ptr %37, %39
  br i1 %40, label %68, label %41

41:                                               ; preds = %36
  %42 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %37) #29
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi ptr [ %37, %41 ], [ %12, %35 ]
  %45 = phi ptr [ %42, %41 ], [ %12, %35 ]
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %45, i64 0, i32 1, i32 1
  %47 = load i64, ptr %46, align 8, !tbaa !13
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %49 = load i64, ptr %48, align 8, !tbaa !13
  %50 = tail call i64 @llvm.umin.i64(i64 %49, i64 %47)
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %45, i64 0, i32 1
  %54 = load ptr, ptr %1, align 8, !tbaa !63
  %55 = load ptr, ptr %53, align 8, !tbaa !63
  %56 = tail call i32 @memcmp(ptr noundef %55, ptr noundef %54, i64 noundef %50) #28
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %52, %43
  %59 = sub i64 %47, %49
  %60 = tail call i64 @llvm.smax.i64(i64 %59, i64 -2147483648)
  %61 = tail call i64 @llvm.smin.i64(i64 %60, i64 2147483647)
  %62 = trunc i64 %61 to i32
  br label %63

63:                                               ; preds = %52, %58
  %64 = phi i32 [ %56, %52 ], [ %62, %58 ]
  %65 = icmp slt i32 %64, 0
  %66 = select i1 %65, ptr null, ptr %45
  %67 = select i1 %65, ptr %44, ptr null
  br label %68

68:                                               ; preds = %63, %36
  %69 = phi ptr [ null, %36 ], [ %66, %63 ]
  %70 = phi ptr [ %37, %36 ], [ %67, %63 ]
  %71 = insertvalue { ptr, ptr } poison, ptr %69, 0
  %72 = insertvalue { ptr, ptr } %71, ptr %70, 1
  ret { ptr, ptr } %72
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeEPSt13_Rb_tree_nodeIS5_ERKS5_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %1, i64 0, i32 1, i32 2
  store ptr %6, ptr %5, align 8, !tbaa !11
  %7 = load ptr, ptr %2, align 8, !tbaa !63
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #28
  store i64 %9, ptr %4, align 8, !tbaa !87
  %10 = icmp ugt i64 %9, 15
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = invoke noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0)
          to label %13 unwind label %25

13:                                               ; preds = %11
  store ptr %12, ptr %5, align 8, !tbaa !63
  %14 = load i64, ptr %4, align 8, !tbaa !87
  store i64 %14, ptr %6, align 8, !tbaa !16
  br label %15

15:                                               ; preds = %13, %3
  %16 = phi ptr [ %12, %13 ], [ %6, %3 ]
  switch i64 %9, label %19 [
    i64 1, label %17
    i64 0, label %20
  ]

17:                                               ; preds = %15
  %18 = load i8, ptr %7, align 1, !tbaa !16
  store i8 %18, ptr %16, align 1, !tbaa !16
  br label %20

19:                                               ; preds = %15
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %16, ptr align 1 %7, i64 %9, i1 false)
  br label %20

20:                                               ; preds = %19, %17, %15
  %21 = load i64, ptr %4, align 8, !tbaa !87
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node.102", ptr %1, i64 0, i32 1, i32 1
  store i64 %21, ptr %22, align 8, !tbaa !13
  %23 = load ptr, ptr %5, align 8, !tbaa !63
  %24 = getelementptr inbounds i8, ptr %23, i64 %21
  store i8 0, ptr %24, align 1, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #28
  ret void

25:                                               ; preds = %11
  %26 = landingpad { ptr, i32 }
          catch ptr null
  %27 = extractvalue { ptr, i32 } %26, 0
  %28 = call ptr @__cxa_begin_catch(ptr %27) #28
  call void @_ZdlPv(ptr noundef nonnull %1) #26
  invoke void @__cxa_rethrow() #30
          to label %35 unwind label %29

29:                                               ; preds = %25
  %30 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %31 unwind label %32

31:                                               ; preds = %29
  resume { ptr, i32 } %30

32:                                               ; preds = %29
  %33 = landingpad { ptr, i32 }
          catch ptr null
  %34 = extractvalue { ptr, i32 } %33, 0
  call void @__clang_call_terminate(ptr %34) #27
  unreachable

35:                                               ; preds = %25
  unreachable
}

; Function Attrs: sspstrong uwtable
define internal void @_GLOBAL__sub_I_sectionbasedconfig.cc() #0 section ".text.startup" personality ptr @__gxx_personality_v0 {
  tail call void @_ZN16ExecuteOnStartupC1EPFvvE(ptr noundef nonnull align 8 dereferenceable(16) @_ZN12_GLOBAL__N_118__onstartup_obj_41E, ptr noundef nonnull @_ZN12_GLOBAL__N_119__onstartup_func_41Ev)
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN16ExecuteOnStartupD1Ev, ptr nonnull @_ZN12_GLOBAL__N_118__onstartup_obj_41E, ptr nonnull @__dso_handle) #28
  tail call void @_ZN16ExecuteOnStartupC1EPFvvE(ptr noundef nonnull align 8 dereferenceable(16) @_ZN12_GLOBAL__N_118__onstartup_obj_42E, ptr noundef nonnull @_ZN12_GLOBAL__N_119__onstartup_func_42Ev)
  %2 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN16ExecuteOnStartupD1Ev, ptr nonnull @_ZN12_GLOBAL__N_118__onstartup_obj_42E, ptr nonnull @__dso_handle) #28
  tail call void @_ZN16ExecuteOnStartupC1EPFvvE(ptr noundef nonnull align 8 dereferenceable(16) @_ZN12_GLOBAL__N_118__onstartup_obj_43E, ptr noundef nonnull @_ZN12_GLOBAL__N_119__onstartup_func_43Ev)
  %3 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN16ExecuteOnStartupD1Ev, ptr nonnull @_ZN12_GLOBAL__N_118__onstartup_obj_43E, ptr nonnull @__dso_handle) #28
  tail call void @_ZN16ExecuteOnStartupC1EPFvvE(ptr noundef nonnull align 8 dereferenceable(16) @_ZN12_GLOBAL__N_118__onstartup_obj_44E, ptr noundef nonnull @_ZN12_GLOBAL__N_119__onstartup_func_44Ev)
  %4 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN16ExecuteOnStartupD1Ev, ptr nonnull @_ZN12_GLOBAL__N_118__onstartup_obj_44E, ptr nonnull @__dso_handle) #28
  tail call void @_ZN16ExecuteOnStartupC1EPFvvE(ptr noundef nonnull align 8 dereferenceable(16) @_ZN12_GLOBAL__N_118__onstartup_obj_45E, ptr noundef nonnull @_ZN12_GLOBAL__N_119__onstartup_func_45Ev)
  %5 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN16ExecuteOnStartupD1Ev, ptr nonnull @_ZN12_GLOBAL__N_118__onstartup_obj_45E, ptr nonnull @__dso_handle) #28
  tail call void @_ZN16ExecuteOnStartupC1EPFvvE(ptr noundef nonnull align 8 dereferenceable(16) @_ZN12_GLOBAL__N_118__onstartup_obj_46E, ptr noundef nonnull @_ZN12_GLOBAL__N_119__onstartup_func_46Ev)
  %6 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN16ExecuteOnStartupD1Ev, ptr nonnull @_ZN12_GLOBAL__N_118__onstartup_obj_46E, ptr nonnull @__dso_handle) #28
  tail call void @_ZN16ExecuteOnStartupC1EPFvvE(ptr noundef nonnull align 8 dereferenceable(16) @_ZN12_GLOBAL__N_118__onstartup_obj_47E, ptr noundef nonnull @_ZN12_GLOBAL__N_119__onstartup_func_47Ev)
  %7 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN16ExecuteOnStartupD1Ev, ptr nonnull @_ZN12_GLOBAL__N_118__onstartup_obj_47E, ptr nonnull @__dso_handle) #28
  tail call void @_ZN16ExecuteOnStartupC1EPFvvE(ptr noundef nonnull align 8 dereferenceable(16) @_ZN12_GLOBAL__N_118__onstartup_obj_48E, ptr noundef nonnull @_ZN12_GLOBAL__N_119__onstartup_func_48Ev)
  %8 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN16ExecuteOnStartupD1Ev, ptr nonnull @_ZN12_GLOBAL__N_118__onstartup_obj_48E, ptr nonnull @__dso_handle) #28
  tail call void @_ZN16ExecuteOnStartupC1EPFvvE(ptr noundef nonnull align 8 dereferenceable(16) @_ZN12_GLOBAL__N_118__onstartup_obj_49E, ptr noundef nonnull @_ZN12_GLOBAL__N_119__onstartup_func_49Ev)
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN16ExecuteOnStartupD1Ev, ptr nonnull @_ZN12_GLOBAL__N_118__onstartup_obj_49E, ptr nonnull @__dso_handle) #28
  tail call void @_ZN16ExecuteOnStartupC1EPFvvE(ptr noundef nonnull align 8 dereferenceable(16) @_ZN12_GLOBAL__N_118__onstartup_obj_55E, ptr noundef nonnull @_ZN12_GLOBAL__N_119__onstartup_func_55Ev)
  %10 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN16ExecuteOnStartupD1Ev, ptr nonnull @_ZN12_GLOBAL__N_118__onstartup_obj_55E, ptr nonnull @__dso_handle) #28
  store ptr getelementptr inbounds (%"class.std::__cxx11::basic_string", ptr @_ZN25SectionBasedConfiguration9KeyValue111nullbasedirB5cxx11E, i64 0, i32 2), ptr @_ZN25SectionBasedConfiguration9KeyValue111nullbasedirB5cxx11E, align 8, !tbaa !11
  store i64 0, ptr getelementptr inbounds (%"class.std::__cxx11::basic_string", ptr @_ZN25SectionBasedConfiguration9KeyValue111nullbasedirB5cxx11E, i64 0, i32 1), align 8, !tbaa !13
  store i8 0, ptr getelementptr inbounds (%"class.std::__cxx11::basic_string", ptr @_ZN25SectionBasedConfiguration9KeyValue111nullbasedirB5cxx11E, i64 0, i32 2), align 8, !tbaa !16
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev, ptr nonnull @_ZN25SectionBasedConfiguration9KeyValue111nullbasedirB5cxx11E, ptr nonnull @__dso_handle) #28
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #22

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare ptr @memchr(ptr, i32, i64) local_unnamed_addr #23

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #22

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #24

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #24

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #24

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #24

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare i32 @bcmp(ptr nocapture, ptr nocapture, i64) local_unnamed_addr #23

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #24

attributes #0 = { sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #1 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { noinline noreturn nounwind sspstrong uwtable "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #4 = { inlinehint sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #5 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #6 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #8 = { nofree nounwind memory(read) }
attributes #9 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #10 = { nofree nosync nounwind memory(none) }
attributes #11 = { nofree nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #12 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #13 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #14 = { mustprogress nofree nosync nounwind sspstrong willreturn memory(argmem: write) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #15 = { nofree nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #16 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #17 = { nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #18 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #19 = { mustprogress nofree nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #20 = { noreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #21 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #22 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #23 = { nofree nounwind willreturn memory(argmem: read) }
attributes #24 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #25 = { builtin allocsize(0) }
attributes #26 = { builtin nounwind }
attributes #27 = { noreturn nounwind }
attributes #28 = { nounwind }
attributes #29 = { nounwind willreturn memory(read) }
attributes #30 = { noreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"vtable pointer", !8, i64 0}
!11 = !{!12, !6, i64 0}
!12 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !6, i64 0}
!13 = !{!14, !15, i64 8}
!14 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !12, i64 0, !15, i64 8, !7, i64 16}
!15 = !{!"long", !7, i64 0}
!16 = !{!7, !7, i64 0}
!17 = !{!18, !20, i64 0}
!18 = !{!"_ZTSSt15_Rb_tree_header", !19, i64 0, !15, i64 32}
!19 = !{!"_ZTSSt18_Rb_tree_node_base", !20, i64 0, !6, i64 8, !6, i64 16, !6, i64 24}
!20 = !{!"_ZTSSt14_Rb_tree_color", !7, i64 0}
!21 = !{!18, !6, i64 8}
!22 = !{!18, !6, i64 16}
!23 = !{!18, !6, i64 24}
!24 = !{!18, !15, i64 32}
!25 = !{!26, !6, i64 8}
!26 = !{!"_ZTS25SectionBasedConfiguration", !27, i64 0, !6, i64 8, !30, i64 16, !14, i64 40, !34, i64 72, !14, i64 80, !35, i64 112, !40, i64 160, !43, i64 208, !46, i64 256, !51, i64 280, !53, i64 320, !56, i64 368}
!27 = !{!"_ZTS16cConfigurationEx", !28, i64 0}
!28 = !{!"_ZTS14cConfiguration", !29, i64 0}
!29 = !{!"_ZTS7cObject"}
!30 = !{!"_ZTSSt6vectorIN25SectionBasedConfiguration9KeyValue1ESaIS1_EE", !31, i64 0}
!31 = !{!"_ZTSSt12_Vector_baseIN25SectionBasedConfiguration9KeyValue1ESaIS1_EE", !32, i64 0}
!32 = !{!"_ZTSNSt12_Vector_baseIN25SectionBasedConfiguration9KeyValue1ESaIS1_EE12_Vector_implE", !33, i64 0}
!33 = !{!"_ZTSNSt12_Vector_baseIN25SectionBasedConfiguration9KeyValue1ESaIS1_EE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!34 = !{!"int", !7, i64 0}
!35 = !{!"_ZTSSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE", !36, i64 0}
!36 = !{!"_ZTSSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE", !37, i64 0}
!37 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb0EEE", !38, i64 0, !18, i64 8}
!38 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE", !39, i64 0}
!39 = !{!"_ZTSSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE"}
!40 = !{!"_ZTSSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration9KeyValue1ESt4lessIS5_ESaISt4pairIKS5_S7_EEE", !41, i64 0}
!41 = !{!"_ZTSSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE", !42, i64 0}
!42 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE13_Rb_tree_implISE_Lb0EEE", !38, i64 0, !18, i64 8}
!43 = !{!"_ZTSSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN25SectionBasedConfiguration5GroupESt4lessIS5_ESaISt4pairIKS5_S7_EEE", !44, i64 0}
!44 = !{!"_ZTSSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE", !45, i64 0}
!45 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE13_Rb_tree_implISE_Lb0EEE", !38, i64 0, !18, i64 8}
!46 = !{!"_ZTSN25SectionBasedConfiguration5GroupE", !47, i64 0}
!47 = !{!"_ZTSSt6vectorIN25SectionBasedConfiguration9KeyValue2ESaIS1_EE", !48, i64 0}
!48 = !{!"_ZTSSt12_Vector_baseIN25SectionBasedConfiguration9KeyValue2ESaIS1_EE", !49, i64 0}
!49 = !{!"_ZTSNSt12_Vector_baseIN25SectionBasedConfiguration9KeyValue2ESaIS1_EE12_Vector_implE", !50, i64 0}
!50 = !{!"_ZTSNSt12_Vector_baseIN25SectionBasedConfiguration9KeyValue2ESaIS1_EE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!51 = !{!"_ZTSN25SectionBasedConfiguration12NullKeyValueE", !52, i64 0, !14, i64 8}
!52 = !{!"_ZTSN14cConfiguration8KeyValueE"}
!53 = !{!"_ZTSSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St4lessIS5_ESaISt4pairIKS5_S5_EEE", !54, i64 0}
!54 = !{!"_ZTSSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE", !55, i64 0}
!55 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb0EEE", !38, i64 0, !18, i64 8}
!56 = !{!"_ZTS16CommonStringPool", !57, i64 0}
!57 = !{!"_ZTSSt3setIPcN16CommonStringPool7strlessESaIS0_EE", !58, i64 0}
!58 = !{!"_ZTSSt8_Rb_treeIPcS0_St9_IdentityIS0_EN16CommonStringPool7strlessESaIS0_EE", !59, i64 0}
!59 = !{!"_ZTSNSt8_Rb_treeIPcS0_St9_IdentityIS0_EN16CommonStringPool7strlessESaIS0_EE13_Rb_tree_implIS4_Lb1EEE", !60, i64 0, !18, i64 8}
!60 = !{!"_ZTSSt20_Rb_tree_key_compareIN16CommonStringPool7strlessEE", !61, i64 0}
!61 = !{!"_ZTSN16CommonStringPool7strlessE"}
!62 = !{!26, !34, i64 72}
!63 = !{!14, !6, i64 0}
!64 = !{!50, !6, i64 0}
!65 = !{!50, !6, i64 8}
!66 = !{!33, !6, i64 0}
!67 = !{!33, !6, i64 8}
!68 = !{!69, !74, i64 36}
!69 = !{!"_ZTS13cConfigOption", !70, i64 0, !74, i64 36, !74, i64 37, !75, i64 40, !14, i64 48, !14, i64 80, !14, i64 112}
!70 = !{!"_ZTS23cNoncopyableOwnedObject", !71, i64 0}
!71 = !{!"_ZTS12cOwnedObject", !72, i64 0, !6, i64 24, !34, i64 32}
!72 = !{!"_ZTS12cNamedObject", !29, i64 0, !6, i64 8, !73, i64 16, !73, i64 18}
!73 = !{!"short", !7, i64 0}
!74 = !{!"bool", !7, i64 0}
!75 = !{!"_ZTSN13cConfigOption4TypeE", !7, i64 0}
!76 = !{i8 0, i8 2}
!77 = !{}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: argument 0"}
!80 = distinct !{!80, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!81 = !{!82, !79}
!82 = distinct !{!82, !83, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!83 = distinct !{!83, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!84 = !{!33, !6, i64 16}
!85 = !{!86, !6, i64 8}
!86 = !{!"_ZTSN25SectionBasedConfiguration9KeyValue1E", !52, i64 0, !6, i64 8, !14, i64 16, !14, i64 48}
!87 = !{!15, !15, i64 0}
!88 = !{!89, !6, i64 16}
!89 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!90 = !{!89, !6, i64 8}
!91 = !{!89, !6, i64 0}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZNK25SectionBasedConfiguration19resolveSectionChainEi: argument 0"}
!94 = distinct !{!94, !"_ZNK25SectionBasedConfiguration19resolveSectionChainEi"}
!95 = !{!96, !6, i64 0}
!96 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: argument 0"}
!99 = distinct !{!99, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!100 = !{!101, !98}
!101 = distinct !{!101, !102, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!102 = distinct !{!102, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!103 = !{!96, !6, i64 8}
!104 = !{!34, !34, i64 0}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZNK25SectionBasedConfiguration19resolveSectionChainEi: argument 0"}
!107 = distinct !{!107, !"_ZNK25SectionBasedConfiguration19resolveSectionChainEi"}
!108 = !{!109, !6, i64 0}
!109 = !{!"_ZTSNSt12_Vector_baseIN25SectionBasedConfiguration17IterationVariableESaIS1_EE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!110 = !{!109, !6, i64 8}
!111 = !{!112, !6, i64 0}
!112 = !{!"_ZTS20ConfigVarDescription", !6, i64 0, !6, i64 8}
!113 = !{!109, !6, i64 16}
!114 = !{!115, !6, i64 0}
!115 = !{!"_ZTS8Scenario", !6, i64 0, !6, i64 8, !116, i64 16, !120, i64 40}
!116 = !{!"_ZTSSt6vectorI13ValueIteratorSaIS0_EE", !117, i64 0}
!117 = !{!"_ZTSSt12_Vector_baseI13ValueIteratorSaIS0_EE", !118, i64 0}
!118 = !{!"_ZTSNSt12_Vector_baseI13ValueIteratorSaIS0_EE12_Vector_implE", !119, i64 0}
!119 = !{!"_ZTSNSt12_Vector_baseI13ValueIteratorSaIS0_EE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!120 = !{!"_ZTSSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP13ValueIteratorSt4lessIS5_ESaISt4pairIKS5_S7_EEE", !121, i64 0}
!121 = !{!"_ZTSSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P13ValueIteratorESt10_Select1stISA_ESt4lessIS5_ESaISA_EE", !122, i64 0}
!122 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P13ValueIteratorESt10_Select1stISA_ESt4lessIS5_ESaISA_EE13_Rb_tree_implISE_Lb0EEE", !38, i64 0, !18, i64 8}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: argument 0"}
!125 = distinct !{!125, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!126 = !{!127, !124}
!127 = distinct !{!127, !128, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!128 = distinct !{!128, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_: argument 0"}
!131 = distinct !{!131, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_"}
!132 = !{!133, !130}
!133 = distinct !{!133, !134, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!134 = distinct !{!134, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: argument 0"}
!137 = distinct !{!137, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!138 = !{!139, !136}
!139 = distinct !{!139, !140, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!140 = distinct !{!140, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!141 = !{!142}
!142 = distinct !{!142, !143, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!143 = distinct !{!143, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!144 = !{!145, !142}
!145 = distinct !{!145, !146, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!146 = distinct !{!146, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!149 = distinct !{!149, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!150 = !{!151, !148}
!151 = distinct !{!151, !152, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!152 = distinct !{!152, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!153 = !{!154}
!154 = distinct !{!154, !155, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!155 = distinct !{!155, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!156 = !{!157, !154}
!157 = distinct !{!157, !158, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!158 = distinct !{!158, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!159 = !{!160, !6, i64 80}
!160 = !{!"_ZTSN25SectionBasedConfiguration9KeyValue2E", !86, i64 0, !6, i64 80, !6, i64 88, !6, i64 96}
!161 = !{!160, !6, i64 96}
!162 = !{!160, !6, i64 88}
!163 = !{!50, !6, i64 16}
!164 = !{!165}
!165 = distinct !{!165, !166, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!166 = distinct !{!166, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!167 = !{!168, !165}
!168 = distinct !{!168, !169, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!169 = distinct !{!169, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!170 = !{!171}
!171 = distinct !{!171, !172, !"_ZNK25SectionBasedConfiguration19resolveSectionChainEi: argument 0"}
!172 = distinct !{!172, !"_ZNK25SectionBasedConfiguration19resolveSectionChainEi"}
!173 = !{!174}
!174 = distinct !{!174, !175, !"_ZNK25SectionBasedConfiguration19resolveSectionChainEi: argument 0"}
!175 = distinct !{!175, !"_ZNK25SectionBasedConfiguration19resolveSectionChainEi"}
!176 = !{!19, !6, i64 16}
!177 = !{!19, !6, i64 24}
!178 = !{!179}
!179 = distinct !{!179, !180, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!180 = distinct !{!180, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!181 = !{!182, !179}
!182 = distinct !{!182, !183, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!183 = distinct !{!183, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!184 = !{!185}
!185 = distinct !{!185, !186, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: argument 0"}
!186 = distinct !{!186, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!187 = !{!188, !185}
!188 = distinct !{!188, !189, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!189 = distinct !{!189, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!190 = !{!191}
!191 = distinct !{!191, !192, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: argument 0"}
!192 = distinct !{!192, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!193 = !{!194, !191}
!194 = distinct !{!194, !195, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!195 = distinct !{!195, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!196 = !{!197}
!197 = distinct !{!197, !198, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: argument 0"}
!198 = distinct !{!198, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!199 = !{!200, !197}
!200 = distinct !{!200, !201, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!201 = distinct !{!201, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!202 = !{!203}
!203 = distinct !{!203, !204, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!204 = distinct !{!204, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!205 = !{!206, !203}
!206 = distinct !{!206, !207, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!207 = distinct !{!207, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!208 = !{!209}
!209 = distinct !{!209, !210, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: argument 0"}
!210 = distinct !{!210, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!211 = !{!212, !209}
!212 = distinct !{!212, !213, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!213 = distinct !{!213, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!214 = !{!215, !6, i64 16}
!215 = !{!"_ZTSNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!216 = !{!215, !6, i64 8}
!217 = !{!215, !6, i64 0}
!218 = !{!112, !6, i64 8}
!219 = !{i32 0, i32 -1}
!220 = !{!96, !6, i64 16}
!221 = !{!69, !74, i64 37}
!222 = !{!223}
!223 = distinct !{!223, !224, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: argument 0"}
!224 = distinct !{!224, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!225 = !{!226, !223}
!226 = distinct !{!226, !227, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!227 = distinct !{!227, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!228 = !{!229}
!229 = distinct !{!229, !230, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: argument 0"}
!230 = distinct !{!230, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!231 = !{!232, !229}
!232 = distinct !{!232, !233, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!233 = distinct !{!233, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!234 = !{!"branch_weights", i32 2000, i32 1}
!235 = !{!236, !34, i64 8}
!236 = !{!"_ZTS10cException", !237, i64 0, !34, i64 8, !14, i64 16, !74, i64 48, !14, i64 56, !14, i64 88, !34, i64 120}
!237 = !{!"_ZTSSt9exception"}
!238 = !{!239}
!239 = distinct !{!239, !240, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: argument 0"}
!240 = distinct !{!240, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!241 = !{!242, !239}
!242 = distinct !{!242, !243, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!243 = distinct !{!243, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!244 = !{!245}
!245 = distinct !{!245, !246, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_: argument 0"}
!246 = distinct !{!246, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_"}
!247 = !{!248, !245}
!248 = distinct !{!248, !249, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: argument 0"}
!249 = distinct !{!249, !"_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE"}
!250 = !{!236, !74, i64 48}
!251 = !{!236, !34, i64 120}
!252 = !{!19, !20, i64 0}
!253 = !{!19, !6, i64 8}
!254 = !{!255, !6, i64 0}
!255 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE20_Reuse_or_alloc_nodeE", !6, i64 0, !6, i64 8, !6, i64 16}
!256 = !{!255, !6, i64 8}
!257 = !{!255, !6, i64 16}
!258 = !{!259, !6, i64 0}
!259 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration9KeyValue1EESt10_Select1stISA_ESt4lessIS5_ESaISA_EE11_Alloc_nodeE", !6, i64 0}
!260 = !{!261, !6, i64 0}
!261 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N25SectionBasedConfiguration5GroupEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE11_Alloc_nodeE", !6, i64 0}
!262 = !{!"branch_weights", i32 1, i32 2000}
