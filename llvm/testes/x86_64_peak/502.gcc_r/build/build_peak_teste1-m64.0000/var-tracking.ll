; ModuleID = 'var-tracking.c'
source_filename = "var-tracking.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32 }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, ptr, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, ptr, ptr, ptr }
%struct.emit_status = type { i32, i32, ptr, ptr, ptr, i32, i32, i32, i32, ptr }
%struct.varasm_status = type { ptr, i32 }
%struct.incoming_args = type { i32, i32, i32, ptr, %struct.ix86_args, ptr }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { ptr, ptr, ptr, ptr, ptr }
%struct.rtl_eh = type { ptr, ptr, ptr, ptr, ptr, ptr, [2 x ptr] }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.addr_space, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, %struct.calls, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, ptr, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { ptr, ptr, ptr, %struct.asm_int_op, %struct.asm_int_op, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.asm_int_op = type { ptr, ptr, ptr, ptr }
%struct.sched = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.vectorize = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.addr_space = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.calls = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.c = type { ptr }
%struct.cxx = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.emutls = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8 }
%struct.target_option_hooks = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct._IO_FILE = type { i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i64, i16, i8, [1 x i8], ptr, i64, ptr, ptr, ptr, ptr, i64, i32, [20 x i8] }
%struct.dataflow_set_def = type { i64, [53 x ptr], ptr, ptr }
%struct.function = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, ptr, i32 }
%struct.basic_block_def = type { ptr, ptr, ptr, ptr, [2 x ptr], ptr, ptr, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%union.basic_block_il_dependent = type { ptr }
%struct.control_flow_graph = type { ptr, ptr, ptr, i32, i32, i32, ptr, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], ptr, i64 }
%union.rtunion_def = type { ptr }
%struct.rtl_bb_info = type { ptr, ptr, ptr, ptr, i32 }
%struct.variable_tracking_info_def = type { ptr, %struct.dataflow_set_def, %struct.dataflow_set_def, ptr, i8, i8 }
%struct.VEC_rtx_base = type { i32, i32, [1 x ptr] }
%struct.cselib_val_struct = type { i32, i32, ptr, ptr, ptr, ptr }
%struct.elt_loc_list = type { ptr, ptr, ptr }
%struct.attrs_def = type { ptr, ptr, ptr, i64 }
%struct.shared_hash_def = type { i32, ptr }
%struct.VEC_micro_operation_base = type { i32, i32, [1 x %struct.micro_operation_def] }
%struct.micro_operation_def = type { i32, ptr, %union.anon.0 }
%union.anon.0 = type { ptr }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, ptr, ptr }
%struct.tree_common = type { %struct.tree_base, ptr, ptr }
%struct.tree_base = type { i64 }
%struct.reg_attrs = type { ptr, i64 }
%struct.adjust_mem_data = type { i8, i32, i64, ptr }
%struct.edge_iterator = type { i32, ptr }
%struct.VEC_edge_base = type { i32, i32, [1 x ptr] }
%struct.edge_def = type { ptr, ptr, %union.edge_def_insns, ptr, ptr, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { ptr }
%struct.rtvec_def = type { i32, [1 x ptr] }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, ptr, i40, i32, ptr, ptr, ptr, ptr, ptr }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, ptr, ptr, ptr, ptr }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, ptr, ptr, ptr, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, ptr }
%struct.tree_parm_decl = type { %struct.tree_decl_with_rtl, ptr, ptr }
%struct.mem_attrs = type { ptr, ptr, ptr, i32, i32, i8 }
%struct.dfset_post_merge = type { ptr, ptr }
%struct.dfset_merge = type { ptr, ptr, ptr, i32 }
%struct.param_info = type { ptr, i32, i8, i32, i32, ptr }
%struct.simple_bitmap_def = type { ptr, i32, i32, [1 x i64] }
%struct.variable_def = type { ptr, i32, i8, i8, i8, [1 x %struct.variable_part_def] }
%struct.variable_part_def = type { ptr, ptr, i64 }
%struct.value_chain_def = type { ptr, ptr, i32 }
%struct.count_use_info = type { ptr, ptr, ptr, i32, i8 }
%struct.location_chain_def = type { ptr, ptr, ptr, i32 }
%struct.cselib_set = type { ptr, ptr, ptr, ptr }
%struct.variable_union_info = type { ptr, i32, i32 }
%struct.tree_type = type { %struct.tree_common, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, ptr, %union.tree_type_symtab, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%union.tree_type_symtab = type { ptr }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { ptr, i32, i32 }
%struct.emit_note_data_def = type { ptr, i32, ptr }
%struct.VEC_variable_base = type { i32, i32, [1 x ptr] }
%struct.expand_loc_callback_data = type { ptr, i8, i8 }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }

@stdout = external local_unnamed_addr global ptr, align 8
@stdin = external local_unnamed_addr global ptr, align 8
@flag_var_tracking_assignments = external local_unnamed_addr global i32, align 4
@.str = private unnamed_addr constant [9 x i8] c"vartrack\00", align 1
@pass_variable_tracking = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, ptr @.str, ptr @gate_handle_var_tracking, ptr @variable_tracking_main, ptr null, ptr null, i32 0, i32 167, i32 0, i32 0, i32 0, i32 0, i32 1025 } }, align 8
@cfun = external local_unnamed_addr global ptr, align 8
@.str.1 = private unnamed_addr constant [15 x i8] c"var-tracking.c\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@dump_file = external local_unnamed_addr global ptr, align 8
@dump_flags = external local_unnamed_addr global i32, align 4
@.str.3 = private unnamed_addr constant [15 x i8] c"attrs_def pool\00", align 1
@attrs_pool = internal unnamed_addr global ptr null, align 8
@.str.4 = private unnamed_addr constant [18 x i8] c"variable_def pool\00", align 1
@var_pool = internal unnamed_addr global ptr null, align 8
@.str.5 = private unnamed_addr constant [24 x i8] c"location_chain_def pool\00", align 1
@loc_chain_pool = internal unnamed_addr global ptr null, align 8
@.str.6 = private unnamed_addr constant [21 x i8] c"shared_hash_def pool\00", align 1
@shared_hash_pool = internal unnamed_addr global ptr null, align 8
@empty_shared_hash = internal unnamed_addr global ptr null, align 8
@changed_variables = internal unnamed_addr global ptr null, align 8
@.str.7 = private unnamed_addr constant [21 x i8] c"value_chain_def pool\00", align 1
@value_chain_pool = internal unnamed_addr global ptr null, align 8
@value_chains = internal unnamed_addr global ptr null, align 8
@scratch_regs = internal unnamed_addr global ptr null, align 8
@.str.8 = private unnamed_addr constant [24 x i8] c"small variable_def pool\00", align 1
@valvar_pool = internal unnamed_addr global ptr null, align 8
@preserved_values = internal unnamed_addr global ptr null, align 8
@x_rtl = external local_unnamed_addr global %struct.rtl_data, align 8
@global_rtl = external local_unnamed_addr global [11 x ptr], align 16
@hard_frame_pointer_adjustment = internal unnamed_addr global i64 -1, align 8
@cselib_record_sets_hook = external local_unnamed_addr global ptr, align 8
@.str.9 = private unnamed_addr constant [17 x i8] c"first value: %i\0A\00", align 1
@cselib_hook_called = internal unnamed_addr global i1 false, align 1
@cfa_base_rtx = internal unnamed_addr global ptr null, align 8
@.str.10 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@fixed_regs = external local_unnamed_addr global [53 x i8], align 16
@tree_code_type = external local_unnamed_addr constant [0 x i32], align 4
@flag_var_tracking_uninit = external local_unnamed_addr global i32, align 4
@emit_notes = internal unnamed_addr global i1 false, align 1
@rtx_format = external local_unnamed_addr constant [139 x ptr], align 16
@rtx_length = external local_unnamed_addr constant [139 x i8], align 16
@dst_can_be_shared = internal unnamed_addr global i1 false, align 1
@rtx_class = external local_unnamed_addr constant [139 x i32], align 16
@const_int_rtx = external local_unnamed_addr global [129 x ptr], align 16
@tree_contains_struct = external local_unnamed_addr global [191 x [64 x i8]], align 16
@mode_size = external local_unnamed_addr global [87 x i8], align 16
@regno_reg_rtx = external local_unnamed_addr global ptr, align 8
@mode_class = external local_unnamed_addr constant [87 x i8], align 16
@hard_regno_nregs = external local_unnamed_addr global [53 x [87 x i8]], align 16
@targetm = external local_unnamed_addr global %struct.gcc_target, align 8
@.str.11 = private unnamed_addr constant [24 x i8] c"bb %i op %i insn %i %s \00", align 1
@micro_operation_type_name = internal unnamed_addr constant [10 x ptr] [ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21], align 16
@.str.12 = private unnamed_addr constant [7 x i8] c"MO_USE\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"MO_USE_NO_VAR\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"MO_VAL_USE\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"MO_VAL_LOC\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"MO_VAL_SET\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"MO_SET\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"MO_COPY\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"MO_CLOBBER\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"MO_CALL\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"MO_ADJUST\00", align 1
@current_function_decl = external local_unnamed_addr global ptr, align 8
@vui_vec = internal unnamed_addr global ptr null, align 8
@vui_allocated = internal unnamed_addr global i32 0, align 4
@compiler_params = external local_unnamed_addr global ptr, align 8
@.str.22 = private unnamed_addr constant [88 x i8] c"variable tracking size limit exceeded with -fvar-tracking-assignments, retrying without\00", align 1
@.str.23 = private unnamed_addr constant [38 x i8] c"variable tracking size limit exceeded\00", align 1
@.str.24 = private unnamed_addr constant [61 x i8] c"BB %i: in %i (was %i), out %i (was %i), rem %i + %i, tsz %i\0A\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"BB %i IN:\0A\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"BB %i OUT:\0A\00", align 1
@.str.27 = private unnamed_addr constant [36 x i8] c"Created new value %u:%u for reg %i\0A\00", align 1
@regs_invalidated_by_call = external local_unnamed_addr global i64, align 8
@.str.28 = private unnamed_addr constant [5 x i8] c"%i: \00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"head: \00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c" is at \00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c" stored in \00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"\0A%i: \00", align 1
@dataflow_set_different_value = internal unnamed_addr global i1 false, align 1
@.str.34 = private unnamed_addr constant [40 x i8] c"dataflow difference found: removal of:\0A\00", align 1
@.str.35 = private unnamed_addr constant [48 x i8] c"dataflow difference found: old and new follow:\0A\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"  name: %s\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"D.%u\00", align 1
@.str.38 = private unnamed_addr constant [13 x i8] c"  name: D#%u\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"  name: D.%u\00", align 1
@.str.40 = private unnamed_addr constant [16 x i8] c"    offset %ld\0A\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"      \00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"[uninit]\00", align 1
@.str.43 = private unnamed_addr constant [23 x i8] c"Stack adjustment: %ld\0A\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"Reg %d:\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"+%ld\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"Variables:\0A\00", align 1
@.str.47 = private unnamed_addr constant [18 x i8] c"\0ABasic block %d:\0A\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"IN:\0A\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"OUT:\0A\00", align 1
@changed_variables_stack = internal unnamed_addr global ptr null, align 8
@changed_values_stack = internal unnamed_addr global ptr null, align 8
@mode_wider = external local_unnamed_addr constant [87 x i8], align 16
@flag_var_tracking = external local_unnamed_addr global i32, align 4

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @vprintf(ptr noalias nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = load ptr, ptr @stdout, align 8, !tbaa !5
  %4 = tail call i32 @vfprintf(ptr noundef %3, ptr noundef %0, ptr noundef %1)
  ret i32 %4
}

; Function Attrs: nofree nounwind
declare noundef i32 @vfprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 {
  %1 = load ptr, ptr @stdin, align 8, !tbaa !5
  %2 = tail call i32 @getc(ptr noundef %1)
  ret i32 %2
}

; Function Attrs: nofree nounwind
declare noundef i32 @getc(ptr nocapture noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @fgetc_unlocked(ptr noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !14
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !15

7:                                                ; preds = %1
  %8 = tail call i32 @__uflow(ptr noundef nonnull %0) #21
  br label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !9
  %11 = load i8, ptr %3, align 1, !tbaa !16
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

declare i32 @__uflow(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @getc_unlocked(ptr noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !14
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !15

7:                                                ; preds = %1
  %8 = tail call i32 @__uflow(ptr noundef nonnull %0) #21
  br label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !9
  %11 = load i8, ptr %3, align 1, !tbaa !16
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #2 {
  %1 = load ptr, ptr @stdin, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !14
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !15

7:                                                ; preds = %0
  %8 = tail call i32 @__uflow(ptr noundef nonnull %1) #21
  br label %13

9:                                                ; preds = %0
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !9
  %11 = load i8, ptr %3, align 1, !tbaa !16
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @putchar(i32 noundef %0) local_unnamed_addr #0 {
  %2 = load ptr, ptr @stdout, align 8, !tbaa !5
  %3 = tail call i32 @putc(i32 noundef %0, ptr noundef %2)
  ret i32 %3
}

; Function Attrs: nofree nounwind
declare noundef i32 @putc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @fputc_unlocked(i32 noundef %0, ptr noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !18
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !15

8:                                                ; preds = %2
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %1, i32 noundef %9) #21
  br label %15

11:                                               ; preds = %2
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !17
  store i8 %12, ptr %4, align 1, !tbaa !16
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

declare i32 @__overflow(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @putc_unlocked(i32 noundef %0, ptr noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !18
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !15

8:                                                ; preds = %2
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %1, i32 noundef %9) #21
  br label %15

11:                                               ; preds = %2
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !17
  store i8 %12, ptr %4, align 1, !tbaa !16
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @putchar_unlocked(i32 noundef %0) local_unnamed_addr #2 {
  %2 = load ptr, ptr @stdout, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %2, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %2, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !18
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !15

8:                                                ; preds = %1
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %2, i32 noundef %9) #21
  br label %15

11:                                               ; preds = %1
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !17
  store i8 %12, ptr %4, align 1, !tbaa !16
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @getline(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #2 {
  %4 = tail call i64 @__getdelim(ptr noundef %0, ptr noundef %1, i32 noundef 10, ptr noundef %2) #21
  ret i64 %4
}

declare i64 @__getdelim(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @feof_unlocked(ptr nocapture noundef readonly %0) local_unnamed_addr #4 {
  %2 = load i32, ptr %0, align 8, !tbaa !19
  %3 = lshr i32 %2, 4
  %4 = and i32 %3, 1
  ret i32 %4
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ferror_unlocked(ptr nocapture noundef readonly %0) local_unnamed_addr #4 {
  %2 = load i32, ptr %0, align 8, !tbaa !19
  %3 = lshr i32 %2, 5
  %4 = and i32 %3, 1
  ret i32 %4
}

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable
define dso_local i32 @tolower(i32 noundef %0) local_unnamed_addr #5 {
  %2 = add i32 %0, 128
  %3 = icmp ult i32 %2, 384
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = tail call ptr @__ctype_tolower_loc() #21
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds i32, ptr %6, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !20
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi i32 [ %9, %4 ], [ %0, %1 ]
  ret i32 %11
}

declare ptr @__ctype_tolower_loc() local_unnamed_addr #3

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable
define dso_local i32 @toupper(i32 noundef %0) local_unnamed_addr #5 {
  %2 = add i32 %0, 128
  %3 = icmp ult i32 %2, 384
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = tail call ptr @__ctype_toupper_loc() #21
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds i32, ptr %6, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !20
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi i32 [ %9, %4 ], [ %0, %1 ]
  ret i32 %11
}

declare ptr @__ctype_toupper_loc() local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @atoi(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtol(ptr noundef %0, ptr noundef null, i32 noundef 10) #21
  %3 = trunc i64 %2 to i32
  ret i32 %3
}

declare i64 @__isoc23_strtol(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @atol(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtol(ptr noundef %0, ptr noundef null, i32 noundef 10) #21
  ret i64 %2
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @atoll(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtoll(ptr noundef %0, ptr noundef null, i32 noundef 10) #21
  ret i64 %2
}

declare i64 @__isoc23_strtoll(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local ptr @bsearch(ptr noundef %0, ptr noundef %1, i64 noundef %2, i64 noundef %3, ptr nocapture noundef readonly %4) local_unnamed_addr #2 {
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %5, %20
  %8 = phi i64 [ %22, %20 ], [ 0, %5 ]
  %9 = phi i64 [ %21, %20 ], [ %2, %5 ]
  %10 = add i64 %8, %9
  %11 = lshr i64 %10, 1
  %12 = mul i64 %11, %3
  %13 = getelementptr inbounds i8, ptr %1, i64 %12
  %14 = tail call i32 %4(ptr noundef %0, ptr noundef %13) #21
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %7
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %11, 1
  br label %20

20:                                               ; preds = %7, %18
  %21 = phi i64 [ %9, %18 ], [ %11, %7 ]
  %22 = phi i64 [ %19, %18 ], [ %8, %7 ]
  %23 = icmp ult i64 %22, %21
  br i1 %23, label %7, label %24, !llvm.loop !21

24:                                               ; preds = %16, %20, %5
  %25 = phi ptr [ null, %5 ], [ null, %20 ], [ %13, %16 ]
  ret ptr %25
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn uwtable
define dso_local nofpclass(nan inf) double @atof(ptr nocapture noundef readonly %0) local_unnamed_addr #7 {
  %2 = tail call fast nofpclass(nan inf) double @strtod(ptr nocapture noundef %0, ptr noundef null)
  ret double %2
}

; Function Attrs: mustprogress nofree nounwind willreturn
declare nofpclass(nan inf) double @strtod(ptr noundef readonly, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @debug_dv(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = load i64, ptr %0, align 8
  %5 = and i64 %4, 65535
  %6 = icmp eq i64 %5, 1
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @debug_rtx(ptr noundef nonnull %0) #21
  br label %9

8:                                                ; preds = %1, %3
  tail call void @debug_generic_stmt(ptr noundef %0) #21
  br label %9

9:                                                ; preds = %8, %7
  ret void
}

declare void @debug_rtx(ptr noundef) local_unnamed_addr #3

declare void @debug_generic_stmt(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @variable_tracking_main() #9 {
  %1 = alloca %struct.dataflow_set_def, align 8
  %2 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %3 = icmp slt i32 %2, 0
  %4 = load ptr, ptr @cfun, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.function, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !23
  br i1 %3, label %7, label %50

7:                                                ; preds = %0
  %8 = load ptr, ptr %6, align 8, !tbaa !25
  %9 = getelementptr inbounds %struct.basic_block_def, ptr %8, i64 0, i32 6
  %10 = load ptr, ptr %9, align 8, !tbaa !27
  %11 = getelementptr inbounds %struct.control_flow_graph, ptr %6, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !29
  %13 = icmp eq ptr %10, %12
  br i1 %13, label %1107, label %14

14:                                               ; preds = %7, %41
  %15 = phi ptr [ %42, %41 ], [ %4, %7 ]
  %16 = phi ptr [ %44, %41 ], [ %10, %7 ]
  %17 = getelementptr inbounds %struct.basic_block_def, ptr %16, i64 0, i32 7
  %18 = load ptr, ptr %17, align 8, !tbaa !16
  %19 = load ptr, ptr %18, align 8, !tbaa !30
  %20 = icmp eq ptr %19, null
  br i1 %20, label %41, label %21

21:                                               ; preds = %14, %37
  %22 = phi ptr [ %24, %37 ], [ %19, %14 ]
  %23 = getelementptr inbounds %struct.rtx_def, ptr %22, i64 0, i32 1, i32 0, i32 0, i64 2
  %24 = load ptr, ptr %23, align 8, !tbaa !16
  %25 = load ptr, ptr %17, align 8, !tbaa !16
  %26 = getelementptr inbounds %struct.rtl_bb_info, ptr %25, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !32
  %28 = getelementptr inbounds %struct.rtx_def, ptr %27, i64 0, i32 1, i32 0, i32 0, i64 2
  %29 = load ptr, ptr %28, align 8, !tbaa !16
  %30 = icmp eq ptr %22, %29
  br i1 %30, label %39, label %31

31:                                               ; preds = %21
  %32 = load i32, ptr %22, align 8
  %33 = and i32 %32, 65535
  %34 = icmp eq i32 %33, 7
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = tail call ptr @delete_insn(ptr noundef nonnull %22) #21
  br label %37

37:                                               ; preds = %35, %31
  %38 = icmp eq ptr %24, null
  br i1 %38, label %39, label %21, !llvm.loop !33

39:                                               ; preds = %37, %21
  %40 = load ptr, ptr @cfun, align 8, !tbaa !5
  br label %41

41:                                               ; preds = %39, %14
  %42 = phi ptr [ %40, %39 ], [ %15, %14 ]
  %43 = getelementptr inbounds %struct.basic_block_def, ptr %16, i64 0, i32 6
  %44 = load ptr, ptr %43, align 8, !tbaa !27
  %45 = getelementptr inbounds %struct.function, ptr %42, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !23
  %47 = getelementptr inbounds %struct.control_flow_graph, ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !29
  %49 = icmp eq ptr %44, %48
  br i1 %49, label %1107, label %14, !llvm.loop !34

50:                                               ; preds = %0
  %51 = getelementptr inbounds %struct.control_flow_graph, ptr %6, i64 0, i32 3
  %52 = load i32, ptr %51, align 8, !tbaa !35
  %53 = icmp sgt i32 %52, 500
  br i1 %53, label %54, label %104

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.control_flow_graph, ptr %6, i64 0, i32 4
  %56 = load i32, ptr %55, align 4, !tbaa !36
  %57 = sdiv i32 %56, %52
  %58 = icmp sgt i32 %57, 19
  br i1 %58, label %59, label %104

59:                                               ; preds = %54
  %60 = icmp eq i32 %2, 0
  br i1 %60, label %1107, label %61

61:                                               ; preds = %59
  %62 = load ptr, ptr %6, align 8, !tbaa !25
  %63 = getelementptr inbounds %struct.basic_block_def, ptr %62, i64 0, i32 6
  %64 = load ptr, ptr %63, align 8, !tbaa !27
  %65 = getelementptr inbounds %struct.control_flow_graph, ptr %6, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !29
  %67 = icmp eq ptr %64, %66
  br i1 %67, label %1107, label %68

68:                                               ; preds = %61, %95
  %69 = phi ptr [ %96, %95 ], [ %4, %61 ]
  %70 = phi ptr [ %98, %95 ], [ %64, %61 ]
  %71 = getelementptr inbounds %struct.basic_block_def, ptr %70, i64 0, i32 7
  %72 = load ptr, ptr %71, align 8, !tbaa !16
  %73 = load ptr, ptr %72, align 8, !tbaa !30
  %74 = icmp eq ptr %73, null
  br i1 %74, label %95, label %75

75:                                               ; preds = %68, %91
  %76 = phi ptr [ %78, %91 ], [ %73, %68 ]
  %77 = getelementptr inbounds %struct.rtx_def, ptr %76, i64 0, i32 1, i32 0, i32 0, i64 2
  %78 = load ptr, ptr %77, align 8, !tbaa !16
  %79 = load ptr, ptr %71, align 8, !tbaa !16
  %80 = getelementptr inbounds %struct.rtl_bb_info, ptr %79, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8, !tbaa !32
  %82 = getelementptr inbounds %struct.rtx_def, ptr %81, i64 0, i32 1, i32 0, i32 0, i64 2
  %83 = load ptr, ptr %82, align 8, !tbaa !16
  %84 = icmp eq ptr %76, %83
  br i1 %84, label %93, label %85

85:                                               ; preds = %75
  %86 = load i32, ptr %76, align 8
  %87 = and i32 %86, 65535
  %88 = icmp eq i32 %87, 7
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = tail call ptr @delete_insn(ptr noundef nonnull %76) #21
  br label %91

91:                                               ; preds = %89, %85
  %92 = icmp eq ptr %78, null
  br i1 %92, label %93, label %75, !llvm.loop !33

93:                                               ; preds = %91, %75
  %94 = load ptr, ptr @cfun, align 8, !tbaa !5
  br label %95

95:                                               ; preds = %93, %68
  %96 = phi ptr [ %94, %93 ], [ %69, %68 ]
  %97 = getelementptr inbounds %struct.basic_block_def, ptr %70, i64 0, i32 6
  %98 = load ptr, ptr %97, align 8, !tbaa !27
  %99 = getelementptr inbounds %struct.function, ptr %96, i64 0, i32 1
  %100 = load ptr, ptr %99, align 8, !tbaa !23
  %101 = getelementptr inbounds %struct.control_flow_graph, ptr %100, i64 0, i32 1
  %102 = load ptr, ptr %101, align 8, !tbaa !29
  %103 = icmp eq ptr %98, %102
  br i1 %103, label %1107, label %68, !llvm.loop !34

104:                                              ; preds = %54, %50
  %105 = tail call zeroext i8 @mark_dfs_back_edges() #21
  %106 = tail call fastcc zeroext i8 @vt_initialize(), !range !37
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %157

108:                                              ; preds = %104
  tail call fastcc void @vt_finalize()
  %109 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %1107, label %111

111:                                              ; preds = %108
  %112 = load ptr, ptr @cfun, align 8, !tbaa !5
  %113 = getelementptr inbounds %struct.function, ptr %112, i64 0, i32 1
  %114 = load ptr, ptr %113, align 8, !tbaa !23
  %115 = load ptr, ptr %114, align 8, !tbaa !25
  %116 = getelementptr inbounds %struct.basic_block_def, ptr %115, i64 0, i32 6
  %117 = load ptr, ptr %116, align 8, !tbaa !27
  %118 = getelementptr inbounds %struct.control_flow_graph, ptr %114, i64 0, i32 1
  %119 = load ptr, ptr %118, align 8, !tbaa !29
  %120 = icmp eq ptr %117, %119
  br i1 %120, label %1107, label %121

121:                                              ; preds = %111, %148
  %122 = phi ptr [ %149, %148 ], [ %112, %111 ]
  %123 = phi ptr [ %151, %148 ], [ %117, %111 ]
  %124 = getelementptr inbounds %struct.basic_block_def, ptr %123, i64 0, i32 7
  %125 = load ptr, ptr %124, align 8, !tbaa !16
  %126 = load ptr, ptr %125, align 8, !tbaa !30
  %127 = icmp eq ptr %126, null
  br i1 %127, label %148, label %128

128:                                              ; preds = %121, %144
  %129 = phi ptr [ %131, %144 ], [ %126, %121 ]
  %130 = getelementptr inbounds %struct.rtx_def, ptr %129, i64 0, i32 1, i32 0, i32 0, i64 2
  %131 = load ptr, ptr %130, align 8, !tbaa !16
  %132 = load ptr, ptr %124, align 8, !tbaa !16
  %133 = getelementptr inbounds %struct.rtl_bb_info, ptr %132, i64 0, i32 1
  %134 = load ptr, ptr %133, align 8, !tbaa !32
  %135 = getelementptr inbounds %struct.rtx_def, ptr %134, i64 0, i32 1, i32 0, i32 0, i64 2
  %136 = load ptr, ptr %135, align 8, !tbaa !16
  %137 = icmp eq ptr %129, %136
  br i1 %137, label %146, label %138

138:                                              ; preds = %128
  %139 = load i32, ptr %129, align 8
  %140 = and i32 %139, 65535
  %141 = icmp eq i32 %140, 7
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = tail call ptr @delete_insn(ptr noundef nonnull %129) #21
  br label %144

144:                                              ; preds = %142, %138
  %145 = icmp eq ptr %131, null
  br i1 %145, label %146, label %128, !llvm.loop !33

146:                                              ; preds = %144, %128
  %147 = load ptr, ptr @cfun, align 8, !tbaa !5
  br label %148

148:                                              ; preds = %146, %121
  %149 = phi ptr [ %147, %146 ], [ %122, %121 ]
  %150 = getelementptr inbounds %struct.basic_block_def, ptr %123, i64 0, i32 6
  %151 = load ptr, ptr %150, align 8, !tbaa !27
  %152 = getelementptr inbounds %struct.function, ptr %149, i64 0, i32 1
  %153 = load ptr, ptr %152, align 8, !tbaa !23
  %154 = getelementptr inbounds %struct.control_flow_graph, ptr %153, i64 0, i32 1
  %155 = load ptr, ptr %154, align 8, !tbaa !29
  %156 = icmp eq ptr %151, %155
  br i1 %156, label %1107, label %121, !llvm.loop !34

157:                                              ; preds = %104
  %158 = tail call fastcc zeroext i8 @vt_find_locations(), !range !37
  %159 = icmp eq i8 %158, 0
  %160 = load i32, ptr @flag_var_tracking_assignments, align 4
  %161 = icmp sgt i32 %160, 0
  %162 = select i1 %159, i1 %161, i1 false
  br i1 %162, label %163, label %218

163:                                              ; preds = %157
  tail call fastcc void @vt_finalize()
  %164 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %212, label %166

166:                                              ; preds = %163
  %167 = load ptr, ptr @cfun, align 8, !tbaa !5
  %168 = getelementptr inbounds %struct.function, ptr %167, i64 0, i32 1
  %169 = load ptr, ptr %168, align 8, !tbaa !23
  %170 = load ptr, ptr %169, align 8, !tbaa !25
  %171 = getelementptr inbounds %struct.basic_block_def, ptr %170, i64 0, i32 6
  %172 = load ptr, ptr %171, align 8, !tbaa !27
  %173 = getelementptr inbounds %struct.control_flow_graph, ptr %169, i64 0, i32 1
  %174 = load ptr, ptr %173, align 8, !tbaa !29
  %175 = icmp eq ptr %172, %174
  br i1 %175, label %212, label %176

176:                                              ; preds = %166, %203
  %177 = phi ptr [ %204, %203 ], [ %167, %166 ]
  %178 = phi ptr [ %206, %203 ], [ %172, %166 ]
  %179 = getelementptr inbounds %struct.basic_block_def, ptr %178, i64 0, i32 7
  %180 = load ptr, ptr %179, align 8, !tbaa !16
  %181 = load ptr, ptr %180, align 8, !tbaa !30
  %182 = icmp eq ptr %181, null
  br i1 %182, label %203, label %183

183:                                              ; preds = %176, %199
  %184 = phi ptr [ %186, %199 ], [ %181, %176 ]
  %185 = getelementptr inbounds %struct.rtx_def, ptr %184, i64 0, i32 1, i32 0, i32 0, i64 2
  %186 = load ptr, ptr %185, align 8, !tbaa !16
  %187 = load ptr, ptr %179, align 8, !tbaa !16
  %188 = getelementptr inbounds %struct.rtl_bb_info, ptr %187, i64 0, i32 1
  %189 = load ptr, ptr %188, align 8, !tbaa !32
  %190 = getelementptr inbounds %struct.rtx_def, ptr %189, i64 0, i32 1, i32 0, i32 0, i64 2
  %191 = load ptr, ptr %190, align 8, !tbaa !16
  %192 = icmp eq ptr %184, %191
  br i1 %192, label %201, label %193

193:                                              ; preds = %183
  %194 = load i32, ptr %184, align 8
  %195 = and i32 %194, 65535
  %196 = icmp eq i32 %195, 7
  br i1 %196, label %197, label %199

197:                                              ; preds = %193
  %198 = tail call ptr @delete_insn(ptr noundef nonnull %184) #21
  br label %199

199:                                              ; preds = %197, %193
  %200 = icmp eq ptr %186, null
  br i1 %200, label %201, label %183, !llvm.loop !33

201:                                              ; preds = %199, %183
  %202 = load ptr, ptr @cfun, align 8, !tbaa !5
  br label %203

203:                                              ; preds = %201, %176
  %204 = phi ptr [ %202, %201 ], [ %177, %176 ]
  %205 = getelementptr inbounds %struct.basic_block_def, ptr %178, i64 0, i32 6
  %206 = load ptr, ptr %205, align 8, !tbaa !27
  %207 = getelementptr inbounds %struct.function, ptr %204, i64 0, i32 1
  %208 = load ptr, ptr %207, align 8, !tbaa !23
  %209 = getelementptr inbounds %struct.control_flow_graph, ptr %208, i64 0, i32 1
  %210 = load ptr, ptr %209, align 8, !tbaa !29
  %211 = icmp eq ptr %206, %210
  br i1 %211, label %212, label %176, !llvm.loop !34

212:                                              ; preds = %203, %166, %163
  store i32 0, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %213 = tail call fastcc zeroext i8 @vt_initialize(), !range !37
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %212
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 8468, ptr noundef nonnull @.str.2) #21
  br label %216

216:                                              ; preds = %215, %212
  %217 = tail call fastcc zeroext i8 @vt_find_locations(), !range !37
  br label %218

218:                                              ; preds = %216, %157
  %219 = phi i8 [ %217, %216 ], [ %158, %157 ]
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %221, label %270

221:                                              ; preds = %218
  tail call fastcc void @vt_finalize()
  %222 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %1107, label %224

224:                                              ; preds = %221
  %225 = load ptr, ptr @cfun, align 8, !tbaa !5
  %226 = getelementptr inbounds %struct.function, ptr %225, i64 0, i32 1
  %227 = load ptr, ptr %226, align 8, !tbaa !23
  %228 = load ptr, ptr %227, align 8, !tbaa !25
  %229 = getelementptr inbounds %struct.basic_block_def, ptr %228, i64 0, i32 6
  %230 = load ptr, ptr %229, align 8, !tbaa !27
  %231 = getelementptr inbounds %struct.control_flow_graph, ptr %227, i64 0, i32 1
  %232 = load ptr, ptr %231, align 8, !tbaa !29
  %233 = icmp eq ptr %230, %232
  br i1 %233, label %1107, label %234

234:                                              ; preds = %224, %261
  %235 = phi ptr [ %262, %261 ], [ %225, %224 ]
  %236 = phi ptr [ %264, %261 ], [ %230, %224 ]
  %237 = getelementptr inbounds %struct.basic_block_def, ptr %236, i64 0, i32 7
  %238 = load ptr, ptr %237, align 8, !tbaa !16
  %239 = load ptr, ptr %238, align 8, !tbaa !30
  %240 = icmp eq ptr %239, null
  br i1 %240, label %261, label %241

241:                                              ; preds = %234, %257
  %242 = phi ptr [ %244, %257 ], [ %239, %234 ]
  %243 = getelementptr inbounds %struct.rtx_def, ptr %242, i64 0, i32 1, i32 0, i32 0, i64 2
  %244 = load ptr, ptr %243, align 8, !tbaa !16
  %245 = load ptr, ptr %237, align 8, !tbaa !16
  %246 = getelementptr inbounds %struct.rtl_bb_info, ptr %245, i64 0, i32 1
  %247 = load ptr, ptr %246, align 8, !tbaa !32
  %248 = getelementptr inbounds %struct.rtx_def, ptr %247, i64 0, i32 1, i32 0, i32 0, i64 2
  %249 = load ptr, ptr %248, align 8, !tbaa !16
  %250 = icmp eq ptr %242, %249
  br i1 %250, label %259, label %251

251:                                              ; preds = %241
  %252 = load i32, ptr %242, align 8
  %253 = and i32 %252, 65535
  %254 = icmp eq i32 %253, 7
  br i1 %254, label %255, label %257

255:                                              ; preds = %251
  %256 = tail call ptr @delete_insn(ptr noundef nonnull %242) #21
  br label %257

257:                                              ; preds = %255, %251
  %258 = icmp eq ptr %244, null
  br i1 %258, label %259, label %241, !llvm.loop !33

259:                                              ; preds = %257, %241
  %260 = load ptr, ptr @cfun, align 8, !tbaa !5
  br label %261

261:                                              ; preds = %259, %234
  %262 = phi ptr [ %260, %259 ], [ %235, %234 ]
  %263 = getelementptr inbounds %struct.basic_block_def, ptr %236, i64 0, i32 6
  %264 = load ptr, ptr %263, align 8, !tbaa !27
  %265 = getelementptr inbounds %struct.function, ptr %262, i64 0, i32 1
  %266 = load ptr, ptr %265, align 8, !tbaa !23
  %267 = getelementptr inbounds %struct.control_flow_graph, ptr %266, i64 0, i32 1
  %268 = load ptr, ptr %267, align 8, !tbaa !29
  %269 = icmp eq ptr %264, %268
  br i1 %269, label %1107, label %234, !llvm.loop !34

270:                                              ; preds = %218
  %271 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %272 = icmp eq ptr %271, null
  br i1 %272, label %316, label %273

273:                                              ; preds = %270
  %274 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %275 = and i32 %274, 8
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %316, label %277

277:                                              ; preds = %273
  %278 = load ptr, ptr @cfun, align 8, !tbaa !5
  %279 = getelementptr inbounds %struct.function, ptr %278, i64 0, i32 1
  %280 = load ptr, ptr %279, align 8, !tbaa !23
  %281 = load ptr, ptr %280, align 8, !tbaa !25
  %282 = getelementptr inbounds %struct.basic_block_def, ptr %281, i64 0, i32 6
  %283 = load ptr, ptr %282, align 8, !tbaa !27
  %284 = getelementptr inbounds %struct.control_flow_graph, ptr %280, i64 0, i32 1
  %285 = load ptr, ptr %284, align 8, !tbaa !29
  %286 = icmp eq ptr %283, %285
  br i1 %286, label %313, label %287

287:                                              ; preds = %277, %287
  %288 = phi ptr [ %303, %287 ], [ %283, %277 ]
  %289 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %290 = getelementptr inbounds %struct.basic_block_def, ptr %288, i64 0, i32 9
  %291 = load i32, ptr %290, align 8, !tbaa !38
  %292 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %289, ptr noundef nonnull @.str.47, i32 noundef %291)
  %293 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %294 = tail call i64 @fwrite(ptr nonnull @.str.48, i64 4, i64 1, ptr %293)
  %295 = getelementptr inbounds %struct.basic_block_def, ptr %288, i64 0, i32 2
  %296 = load ptr, ptr %295, align 8, !tbaa !39
  %297 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %296, i64 0, i32 1
  tail call fastcc void @dump_dataflow_set(ptr noundef nonnull %297)
  %298 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %299 = tail call i64 @fwrite(ptr nonnull @.str.49, i64 5, i64 1, ptr %298)
  %300 = load ptr, ptr %295, align 8, !tbaa !39
  %301 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %300, i64 0, i32 2
  tail call fastcc void @dump_dataflow_set(ptr noundef nonnull %301)
  %302 = getelementptr inbounds %struct.basic_block_def, ptr %288, i64 0, i32 6
  %303 = load ptr, ptr %302, align 8, !tbaa !27
  %304 = load ptr, ptr @cfun, align 8, !tbaa !5
  %305 = getelementptr inbounds %struct.function, ptr %304, i64 0, i32 1
  %306 = load ptr, ptr %305, align 8, !tbaa !23
  %307 = getelementptr inbounds %struct.control_flow_graph, ptr %306, i64 0, i32 1
  %308 = load ptr, ptr %307, align 8, !tbaa !29
  %309 = icmp eq ptr %303, %308
  br i1 %309, label %310, label %287, !llvm.loop !40

310:                                              ; preds = %287
  %311 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %312 = load i32, ptr @dump_flags, align 4, !tbaa !20
  br label %313

313:                                              ; preds = %310, %277
  %314 = phi i32 [ %312, %310 ], [ %274, %277 ]
  %315 = phi ptr [ %311, %310 ], [ %271, %277 ]
  tail call void @dump_flow_info(ptr noundef %315, i32 noundef %314) #21
  br label %316

316:                                              ; preds = %313, %273, %270
  call void @llvm.lifetime.start.p0(i64 448, ptr nonnull %1) #21
  %317 = load ptr, ptr @changed_variables, align 8, !tbaa !5
  %318 = tail call i64 @htab_elements(ptr noundef %317) #21
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %321, label %320

320:                                              ; preds = %316
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 7851, ptr noundef nonnull @.str.2) #21
  br label %321

321:                                              ; preds = %320, %316
  %322 = load ptr, ptr @cfun, align 8, !tbaa !5
  %323 = getelementptr inbounds %struct.function, ptr %322, i64 0, i32 1
  %324 = load ptr, ptr %323, align 8, !tbaa !23
  %325 = load ptr, ptr %324, align 8, !tbaa !25
  %326 = getelementptr inbounds %struct.basic_block_def, ptr %325, i64 0, i32 6
  %327 = load ptr, ptr %326, align 8, !tbaa !27
  %328 = getelementptr inbounds %struct.control_flow_graph, ptr %324, i64 0, i32 1
  %329 = load ptr, ptr %328, align 8, !tbaa !29
  %330 = icmp eq ptr %327, %329
  br i1 %330, label %344, label %331

331:                                              ; preds = %321, %331
  %332 = phi ptr [ %337, %331 ], [ %327, %321 ]
  %333 = getelementptr inbounds %struct.basic_block_def, ptr %332, i64 0, i32 2
  %334 = load ptr, ptr %333, align 8, !tbaa !39
  %335 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %334, i64 0, i32 2
  tail call fastcc void @dataflow_set_clear(ptr noundef nonnull %335)
  %336 = getelementptr inbounds %struct.basic_block_def, ptr %332, i64 0, i32 6
  %337 = load ptr, ptr %336, align 8, !tbaa !27
  %338 = load ptr, ptr @cfun, align 8, !tbaa !5
  %339 = getelementptr inbounds %struct.function, ptr %338, i64 0, i32 1
  %340 = load ptr, ptr %339, align 8, !tbaa !23
  %341 = getelementptr inbounds %struct.control_flow_graph, ptr %340, i64 0, i32 1
  %342 = load ptr, ptr %341, align 8, !tbaa !29
  %343 = icmp eq ptr %337, %342
  br i1 %343, label %344, label %331, !llvm.loop !41

344:                                              ; preds = %331, %321
  %345 = phi ptr [ %322, %321 ], [ %338, %331 ]
  store i1 true, ptr @emit_notes, align 1
  %346 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %393, label %348

348:                                              ; preds = %344
  %349 = load ptr, ptr @preserved_values, align 8
  %350 = icmp eq ptr %349, null
  br i1 %350, label %389, label %351

351:                                              ; preds = %348, %385
  %352 = phi ptr [ %386, %385 ], [ %349, %348 ]
  %353 = phi i32 [ %387, %385 ], [ 0, %348 ]
  %354 = load i32, ptr %352, align 8, !tbaa !42
  %355 = icmp ugt i32 %354, %353
  br i1 %355, label %356, label %389

356:                                              ; preds = %351
  %357 = zext i32 %353 to i64
  %358 = getelementptr inbounds %struct.VEC_rtx_base, ptr %352, i64 0, i32 2, i64 %357
  %359 = load ptr, ptr %358, align 8, !tbaa !5
  %360 = getelementptr inbounds %struct.rtx_def, ptr %359, i64 0, i32 1
  %361 = load ptr, ptr %360, align 8, !tbaa !16
  %362 = getelementptr inbounds %struct.cselib_val_struct, ptr %361, i64 0, i32 3
  %363 = load ptr, ptr %362, align 8, !tbaa !5
  %364 = icmp eq ptr %363, null
  br i1 %364, label %385, label %365

365:                                              ; preds = %356, %379
  %366 = phi ptr [ %380, %379 ], [ %363, %356 ]
  %367 = phi ptr [ %381, %379 ], [ %362, %356 ]
  %368 = getelementptr inbounds %struct.elt_loc_list, ptr %366, i64 0, i32 1
  %369 = load ptr, ptr %368, align 8, !tbaa !44
  %370 = load i32, ptr %369, align 8
  %371 = and i32 %370, 65535
  %372 = icmp eq i32 %371, 17
  br i1 %372, label %373, label %375

373:                                              ; preds = %365
  %374 = load ptr, ptr %366, align 8, !tbaa !46
  store ptr %374, ptr %367, align 8, !tbaa !5
  br label %379

375:                                              ; preds = %365
  %376 = tail call i32 @for_each_rtx(ptr noundef nonnull %368, ptr noundef nonnull @add_value_chain, ptr noundef %359) #21
  %377 = load ptr, ptr %367, align 8, !tbaa !5
  %378 = load ptr, ptr %377, align 8, !tbaa !5
  br label %379

379:                                              ; preds = %375, %373
  %380 = phi ptr [ %374, %373 ], [ %378, %375 ]
  %381 = phi ptr [ %367, %373 ], [ %377, %375 ]
  %382 = icmp eq ptr %380, null
  br i1 %382, label %383, label %365, !llvm.loop !47

383:                                              ; preds = %379
  %384 = load ptr, ptr @preserved_values, align 8
  br label %385

385:                                              ; preds = %383, %356
  %386 = phi ptr [ %384, %383 ], [ %352, %356 ]
  %387 = add i32 %353, 1
  %388 = icmp eq ptr %386, null
  br i1 %388, label %389, label %351, !llvm.loop !48

389:                                              ; preds = %385, %351, %348
  %390 = tail call ptr @vec_heap_p_reserve_exact(ptr noundef null, i32 noundef 40) #21
  store ptr %390, ptr @changed_variables_stack, align 8, !tbaa !5
  %391 = tail call ptr @vec_heap_p_reserve_exact(ptr noundef null, i32 noundef 40) #21
  store ptr %391, ptr @changed_values_stack, align 8, !tbaa !5
  %392 = load ptr, ptr @cfun, align 8, !tbaa !5
  br label %393

393:                                              ; preds = %389, %344
  %394 = phi ptr [ %392, %389 ], [ %345, %344 ]
  %395 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(424) %395, i8 0, i64 424, i1 false), !tbaa !5
  %396 = load ptr, ptr @empty_shared_hash, align 8, !tbaa !5
  %397 = load i32, ptr %396, align 8, !tbaa !49
  %398 = add nsw i32 %397, 1
  store i32 %398, ptr %396, align 8, !tbaa !49
  %399 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 2
  store ptr %396, ptr %399, align 8, !tbaa !51
  store i64 0, ptr %1, align 8, !tbaa !53
  %400 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 3
  store ptr null, ptr %400, align 8, !tbaa !54
  %401 = getelementptr inbounds %struct.function, ptr %394, i64 0, i32 1
  %402 = load ptr, ptr %401, align 8, !tbaa !23
  %403 = load ptr, ptr %402, align 8, !tbaa !25
  %404 = getelementptr inbounds %struct.basic_block_def, ptr %403, i64 0, i32 6
  %405 = load ptr, ptr %404, align 8, !tbaa !27
  %406 = getelementptr inbounds %struct.control_flow_graph, ptr %402, i64 0, i32 1
  %407 = load ptr, ptr %406, align 8, !tbaa !29
  %408 = icmp eq ptr %405, %407
  br i1 %408, label %1018, label %409

409:                                              ; preds = %393, %1007
  %410 = phi ptr [ %1011, %1007 ], [ %405, %393 ]
  %411 = getelementptr inbounds %struct.basic_block_def, ptr %410, i64 0, i32 7
  %412 = load ptr, ptr %411, align 8, !tbaa !16
  %413 = load ptr, ptr %412, align 8, !tbaa !30
  %414 = getelementptr inbounds %struct.basic_block_def, ptr %410, i64 0, i32 2
  %415 = load ptr, ptr %414, align 8, !tbaa !39
  %416 = load ptr, ptr %399, align 8, !tbaa !51
  %417 = getelementptr i8, ptr %416, i64 8
  %418 = load ptr, ptr %417, align 8, !tbaa !55
  %419 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %415, i64 0, i32 1, i32 2
  %420 = load ptr, ptr %419, align 8, !tbaa !51
  %421 = getelementptr i8, ptr %420, i64 8
  %422 = load ptr, ptr %421, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %418, ptr noundef nonnull @emit_notes_for_differences_1, ptr noundef %422) #21
  %423 = load ptr, ptr %419, align 8, !tbaa !51
  %424 = getelementptr i8, ptr %423, i64 8
  %425 = load ptr, ptr %424, align 8, !tbaa !55
  %426 = load ptr, ptr %399, align 8, !tbaa !51
  %427 = getelementptr i8, ptr %426, i64 8
  %428 = load ptr, ptr %427, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %425, ptr noundef nonnull @emit_notes_for_differences_2, ptr noundef %428) #21
  %429 = load ptr, ptr %419, align 8, !tbaa !51
  %430 = getelementptr i8, ptr %429, i64 8
  %431 = load ptr, ptr %430, align 8, !tbaa !55
  call fastcc void @emit_notes_for_changes(ptr noundef %413, i32 noundef 0, ptr %431)
  call fastcc void @dataflow_set_clear(ptr noundef nonnull %1)
  %432 = load ptr, ptr %414, align 8, !tbaa !39
  br label %433

433:                                              ; preds = %460, %409
  %434 = phi i64 [ 0, %409 ], [ %461, %460 ]
  %435 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 1, i64 %434
  %436 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %432, i64 0, i32 1, i32 1, i64 %434
  %437 = load ptr, ptr %436, align 8, !tbaa !5
  %438 = load ptr, ptr %435, align 8, !tbaa !5
  %439 = icmp eq ptr %438, null
  br i1 %439, label %445, label %440

440:                                              ; preds = %433, %440
  %441 = phi ptr [ %442, %440 ], [ %438, %433 ]
  %442 = load ptr, ptr %441, align 8, !tbaa !56
  %443 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %443, ptr noundef nonnull %441) #21
  %444 = icmp eq ptr %442, null
  br i1 %444, label %445, label %440, !llvm.loop !58

445:                                              ; preds = %440, %433
  store ptr null, ptr %435, align 8, !tbaa !5
  %446 = icmp eq ptr %437, null
  br i1 %446, label %460, label %447

447:                                              ; preds = %445, %447
  %448 = phi ptr [ %458, %447 ], [ %437, %445 ]
  %449 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  %450 = call ptr @pool_alloc(ptr noundef %449) #21
  %451 = getelementptr inbounds %struct.attrs_def, ptr %448, i64 0, i32 1
  %452 = getelementptr inbounds %struct.attrs_def, ptr %450, i64 0, i32 1
  %453 = load <2 x ptr>, ptr %451, align 8, !tbaa !5
  store <2 x ptr> %453, ptr %452, align 8, !tbaa !5
  %454 = getelementptr inbounds %struct.attrs_def, ptr %448, i64 0, i32 3
  %455 = load i64, ptr %454, align 8, !tbaa !59
  %456 = getelementptr inbounds %struct.attrs_def, ptr %450, i64 0, i32 3
  store i64 %455, ptr %456, align 8, !tbaa !59
  %457 = load ptr, ptr %435, align 8, !tbaa !5
  store ptr %457, ptr %450, align 8, !tbaa !56
  store ptr %450, ptr %435, align 8, !tbaa !5
  %458 = load ptr, ptr %448, align 8, !tbaa !56
  %459 = icmp eq ptr %458, null
  br i1 %459, label %460, label %447, !llvm.loop !60

460:                                              ; preds = %447, %445
  %461 = add nuw nsw i64 %434, 1
  %462 = icmp eq i64 %461, 53
  br i1 %462, label %463, label %433, !llvm.loop !61

463:                                              ; preds = %460
  %464 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %432, i64 0, i32 1
  %465 = load ptr, ptr %399, align 8, !tbaa !51
  %466 = load i32, ptr %465, align 8, !tbaa !49
  %467 = icmp sgt i32 %466, 0
  br i1 %467, label %470, label %468

468:                                              ; preds = %463
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %469 = load i32, ptr %465, align 8, !tbaa !49
  br label %470

470:                                              ; preds = %468, %463
  %471 = phi i32 [ %466, %463 ], [ %469, %468 ]
  %472 = add nsw i32 %471, -1
  store i32 %472, ptr %465, align 8, !tbaa !49
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %474, label %478

474:                                              ; preds = %470
  %475 = getelementptr inbounds %struct.shared_hash_def, ptr %465, i64 0, i32 1
  %476 = load ptr, ptr %475, align 8, !tbaa !55
  call void @htab_delete(ptr noundef %476) #21
  %477 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %477, ptr noundef nonnull %465) #21
  br label %478

478:                                              ; preds = %474, %470
  %479 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %432, i64 0, i32 1, i32 2
  %480 = load ptr, ptr %479, align 8, !tbaa !51
  %481 = load i32, ptr %480, align 8, !tbaa !49
  %482 = add nsw i32 %481, 1
  store i32 %482, ptr %480, align 8, !tbaa !49
  store ptr %480, ptr %399, align 8, !tbaa !51
  %483 = load i64, ptr %464, align 8, !tbaa !53
  store i64 %483, ptr %1, align 8, !tbaa !53
  %484 = load ptr, ptr %414, align 8, !tbaa !39
  %485 = load ptr, ptr %484, align 8, !tbaa !62
  %486 = icmp eq ptr %485, null
  br i1 %486, label %1007, label %487

487:                                              ; preds = %478
  %488 = load i32, ptr %485, align 8, !tbaa !64
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %1007, label %495

490:                                              ; preds = %1003
  %491 = add nuw nsw i64 %496, 1
  %492 = load i32, ptr %1005, align 8, !tbaa !64
  %493 = zext i32 %492 to i64
  %494 = icmp ult i64 %491, %493
  br i1 %494, label %495, label %1007, !llvm.loop !66

495:                                              ; preds = %487, %490
  %496 = phi i64 [ %491, %490 ], [ 0, %487 ]
  %497 = phi ptr [ %1005, %490 ], [ %485, %487 ]
  %498 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %497, i64 0, i32 2, i64 %496
  %499 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %497, i64 0, i32 2, i64 %496, i32 1
  %500 = load ptr, ptr %499, align 8, !tbaa !67
  %501 = load i32, ptr %498, align 8, !tbaa !69
  switch i32 %501, label %1003 [
    i32 8, label %502
    i32 0, label %564
    i32 3, label %586
    i32 2, label %705
    i32 4, label %751
    i32 5, label %919
    i32 6, label %945
    i32 1, label %972
    i32 7, label %984
    i32 9, label %998
  ]

502:                                              ; preds = %495, %546
  %503 = phi i64 [ %547, %546 ], [ 0, %495 ]
  %504 = load i64, ptr @regs_invalidated_by_call, align 8, !tbaa !70
  %505 = shl nuw nsw i64 1, %503
  %506 = and i64 %504, %505
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %546, label %508

508:                                              ; preds = %502
  %509 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 1, i64 %503
  %510 = load ptr, ptr %509, align 8, !tbaa !5
  %511 = icmp eq ptr %510, null
  br i1 %511, label %545, label %512

512:                                              ; preds = %508, %542
  %513 = phi ptr [ %514, %542 ], [ %510, %508 ]
  %514 = load ptr, ptr %513, align 8, !tbaa !56
  %515 = getelementptr inbounds %struct.attrs_def, ptr %513, i64 0, i32 1
  %516 = load ptr, ptr %515, align 8, !tbaa !71
  %517 = getelementptr inbounds %struct.attrs_def, ptr %513, i64 0, i32 2
  %518 = load ptr, ptr %517, align 8, !tbaa !72
  %519 = getelementptr inbounds %struct.attrs_def, ptr %513, i64 0, i32 3
  %520 = load i64, ptr %519, align 8, !tbaa !59
  %521 = load ptr, ptr %399, align 8, !tbaa !51
  %522 = icmp eq ptr %518, null
  br i1 %522, label %531, label %523

523:                                              ; preds = %512
  %524 = load i64, ptr %518, align 8
  %525 = and i64 %524, 65535
  %526 = icmp eq i64 %525, 1
  br i1 %526, label %527, label %531

527:                                              ; preds = %523
  %528 = getelementptr inbounds %struct.rtx_def, ptr %518, i64 0, i32 1
  %529 = load ptr, ptr %528, align 8, !tbaa !16
  %530 = getelementptr inbounds %struct.cselib_val_struct, ptr %529, i64 0, i32 1
  br label %533

531:                                              ; preds = %523, %512
  %532 = getelementptr inbounds %struct.tree_decl_minimal, ptr %518, i64 0, i32 2
  br label %533

533:                                              ; preds = %531, %527
  %534 = phi ptr [ %530, %527 ], [ %532, %531 ]
  %535 = load i32, ptr %534, align 4, !tbaa !16
  %536 = getelementptr i8, ptr %521, i64 8
  %537 = load ptr, ptr %536, align 8, !tbaa !55
  %538 = call ptr @htab_find_slot_with_hash(ptr noundef %537, ptr noundef %518, i32 noundef %535, i32 noundef 0) #21
  %539 = icmp eq ptr %538, null
  br i1 %539, label %542, label %540

540:                                              ; preds = %533
  %541 = call fastcc ptr @delete_slot_part(ptr noundef nonnull %1, ptr noundef %516, ptr noundef nonnull %538, i64 noundef %520)
  br label %542

542:                                              ; preds = %540, %533
  %543 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %543, ptr noundef nonnull %513) #21
  %544 = icmp eq ptr %514, null
  br i1 %544, label %545, label %512, !llvm.loop !73

545:                                              ; preds = %542, %508
  store ptr null, ptr %509, align 8, !tbaa !5
  br label %546

546:                                              ; preds = %545, %502
  %547 = add nuw nsw i64 %503, 1
  %548 = icmp eq i64 %547, 53
  br i1 %548, label %549, label %502, !llvm.loop !74

549:                                              ; preds = %546
  %550 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %551 = icmp eq i32 %550, 0
  %552 = load ptr, ptr %399, align 8, !tbaa !51
  br i1 %551, label %560, label %553

553:                                              ; preds = %549
  store ptr %552, ptr %400, align 8, !tbaa !54
  %554 = getelementptr i8, ptr %552, i64 8
  %555 = load ptr, ptr %554, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %555, ptr noundef nonnull @dataflow_set_preserve_mem_locs, ptr noundef nonnull %1) #21
  %556 = load ptr, ptr %399, align 8, !tbaa !51
  store ptr %556, ptr %400, align 8, !tbaa !54
  %557 = getelementptr i8, ptr %556, i64 8
  %558 = load ptr, ptr %557, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %558, ptr noundef nonnull @dataflow_set_remove_mem_locs, ptr noundef nonnull %1) #21
  store ptr null, ptr %400, align 8, !tbaa !54
  %559 = load ptr, ptr %399, align 8, !tbaa !51
  br label %560

560:                                              ; preds = %553, %549
  %561 = phi ptr [ %552, %549 ], [ %559, %553 ]
  %562 = getelementptr i8, ptr %561, i64 8
  %563 = load ptr, ptr %562, align 8, !tbaa !55
  call fastcc void @emit_notes_for_changes(ptr noundef %500, i32 noundef 2, ptr %563)
  br label %1003

564:                                              ; preds = %495
  %565 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %497, i64 0, i32 2, i64 %496, i32 2
  %566 = load ptr, ptr %565, align 8, !tbaa !16
  %567 = load i32, ptr %566, align 8
  %568 = and i32 %567, 65535
  %569 = icmp eq i32 %568, 37
  br i1 %569, label %570, label %581

570:                                              ; preds = %564
  %571 = getelementptr inbounds %struct.rtx_def, ptr %566, i64 0, i32 1, i32 0, i32 0, i64 2
  %572 = load ptr, ptr %571, align 8, !tbaa !16
  %573 = icmp eq ptr %572, null
  br i1 %573, label %578, label %574

574:                                              ; preds = %570
  %575 = load ptr, ptr %572, align 8, !tbaa !75
  %576 = getelementptr inbounds %struct.reg_attrs, ptr %572, i64 0, i32 1
  %577 = load i64, ptr %576, align 8, !tbaa !77
  br label %578

578:                                              ; preds = %574, %570
  %579 = phi ptr [ %575, %574 ], [ null, %570 ]
  %580 = phi i64 [ %577, %574 ], [ 0, %570 ]
  call fastcc void @var_reg_decl_set(ptr noundef nonnull %1, ptr noundef nonnull %566, i32 noundef 1, ptr noundef %579, i64 noundef %580, ptr noundef null, i32 noundef 1)
  br label %582

581:                                              ; preds = %564
  call fastcc void @var_mem_set(ptr noundef nonnull %1, ptr noundef nonnull %566, i32 noundef 1, ptr noundef null)
  br label %582

582:                                              ; preds = %581, %578
  %583 = load ptr, ptr %399, align 8, !tbaa !51
  %584 = getelementptr i8, ptr %583, i64 8
  %585 = load ptr, ptr %584, align 8, !tbaa !55
  call fastcc void @emit_notes_for_changes(ptr noundef %500, i32 noundef 1, ptr %585)
  br label %1003

586:                                              ; preds = %495
  %587 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %497, i64 0, i32 2, i64 %496, i32 2
  %588 = load ptr, ptr %587, align 8, !tbaa !16
  %589 = load i32, ptr %588, align 8
  %590 = and i32 %589, 65535
  %591 = icmp eq i32 %590, 41
  br i1 %591, label %592, label %597

592:                                              ; preds = %586
  %593 = getelementptr inbounds %struct.rtx_def, ptr %588, i64 0, i32 1
  %594 = load ptr, ptr %593, align 8, !tbaa !16
  %595 = getelementptr inbounds %struct.rtx_def, ptr %588, i64 0, i32 1, i32 0, i32 0, i64 1
  %596 = load ptr, ptr %595, align 8, !tbaa !16
  br label %597

597:                                              ; preds = %592, %586
  %598 = phi ptr [ %596, %592 ], [ %588, %586 ]
  %599 = phi ptr [ %594, %592 ], [ null, %586 ]
  %600 = getelementptr inbounds %struct.rtx_def, ptr %598, i64 0, i32 1
  %601 = load ptr, ptr %600, align 8, !tbaa !16
  %602 = icmp eq ptr %601, null
  br i1 %602, label %627, label %603

603:                                              ; preds = %597
  %604 = load i64, ptr %601, align 8
  %605 = and i64 %604, 65535
  %606 = icmp eq i64 %605, 1
  br i1 %606, label %611, label %607

607:                                              ; preds = %603
  %608 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %605
  %609 = load i32, ptr %608, align 4, !tbaa !16
  %610 = icmp eq i32 %609, 3
  br i1 %610, label %615, label %627

611:                                              ; preds = %603
  %612 = getelementptr inbounds %struct.rtx_def, ptr %601, i64 0, i32 1
  %613 = load ptr, ptr %612, align 8, !tbaa !16
  %614 = getelementptr inbounds %struct.cselib_val_struct, ptr %613, i64 0, i32 1
  br label %617

615:                                              ; preds = %607
  %616 = getelementptr inbounds %struct.tree_decl_minimal, ptr %601, i64 0, i32 2
  br label %617

617:                                              ; preds = %615, %611
  %618 = phi ptr [ %614, %611 ], [ %616, %615 ]
  %619 = load ptr, ptr %399, align 8, !tbaa !51
  %620 = load i32, ptr %618, align 4, !tbaa !16
  %621 = getelementptr i8, ptr %619, i64 8
  %622 = load ptr, ptr %621, align 8, !tbaa !55
  %623 = call ptr @htab_find_slot_with_hash(ptr noundef %622, ptr noundef nonnull %601, i32 noundef %620, i32 noundef 0) #21
  %624 = icmp eq ptr %623, null
  br i1 %624, label %627, label %625

625:                                              ; preds = %617
  %626 = call fastcc ptr @clobber_slot_part(ptr noundef nonnull %1, ptr noundef null, ptr noundef nonnull %623, i64 noundef 0, ptr noundef null)
  br label %627

627:                                              ; preds = %625, %617, %607, %597
  %628 = icmp eq ptr %599, null
  br i1 %628, label %663, label %629

629:                                              ; preds = %627
  %630 = load i32, ptr %588, align 8
  %631 = and i32 %630, 134217728
  %632 = icmp eq i32 %631, 0
  br i1 %632, label %636, label %633

633:                                              ; preds = %629
  %634 = getelementptr inbounds %struct.rtx_def, ptr %598, i64 0, i32 1, i32 0, i32 0, i64 1
  %635 = load ptr, ptr %634, align 8, !tbaa !16
  call fastcc void @val_resolve(ptr noundef nonnull %1, ptr noundef nonnull %599, ptr noundef %635, ptr noundef %500)
  br label %636

636:                                              ; preds = %633, %629
  %637 = load ptr, ptr %399, align 8, !tbaa !51
  br i1 %602, label %646, label %638

638:                                              ; preds = %636
  %639 = load i64, ptr %601, align 8
  %640 = and i64 %639, 65535
  %641 = icmp eq i64 %640, 1
  br i1 %641, label %642, label %646

642:                                              ; preds = %638
  %643 = getelementptr inbounds %struct.rtx_def, ptr %601, i64 0, i32 1
  %644 = load ptr, ptr %643, align 8, !tbaa !16
  %645 = getelementptr inbounds %struct.cselib_val_struct, ptr %644, i64 0, i32 1
  br label %648

646:                                              ; preds = %638, %636
  %647 = getelementptr inbounds %struct.tree_decl_minimal, ptr %601, i64 0, i32 2
  br label %648

648:                                              ; preds = %646, %642
  %649 = phi ptr [ %645, %642 ], [ %647, %646 ]
  %650 = load i32, ptr %649, align 4, !tbaa !16
  %651 = load i32, ptr %637, align 8, !tbaa !49
  %652 = getelementptr i8, ptr %637, i64 8
  %653 = load ptr, ptr %652, align 8, !tbaa !55
  %654 = icmp slt i32 %651, 2
  %655 = zext i1 %654 to i32
  %656 = call ptr @htab_find_slot_with_hash(ptr noundef %653, ptr noundef %601, i32 noundef %650, i32 noundef %655) #21
  %657 = icmp eq ptr %656, null
  br i1 %657, label %658, label %660

658:                                              ; preds = %648
  %659 = call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %399, ptr noundef %601, i32 noundef 1)
  br label %660

660:                                              ; preds = %658, %648
  %661 = phi ptr [ %656, %648 ], [ %659, %658 ]
  %662 = call fastcc ptr @set_slot_part(ptr noundef nonnull %1, ptr noundef nonnull %599, ptr noundef %661, ptr noundef %601, i64 noundef 0, i32 noundef 2, ptr noundef null)
  br label %701

663:                                              ; preds = %627
  %664 = getelementptr inbounds %struct.rtx_def, ptr %598, i64 0, i32 1, i32 0, i32 0, i64 1
  %665 = load ptr, ptr %664, align 8, !tbaa !16
  %666 = load i32, ptr %665, align 8
  %667 = and i32 %666, 65535
  %668 = icmp eq i32 %667, 25
  br i1 %668, label %669, label %674

669:                                              ; preds = %663
  %670 = getelementptr inbounds %struct.rtx_def, ptr %665, i64 0, i32 1
  %671 = load ptr, ptr %670, align 8, !tbaa !16
  %672 = load ptr, ptr getelementptr inbounds ([129 x ptr], ptr @const_int_rtx, i64 0, i64 64), align 16, !tbaa !5
  %673 = icmp eq ptr %671, %672
  br i1 %673, label %701, label %674

674:                                              ; preds = %669, %663
  %675 = load ptr, ptr %399, align 8, !tbaa !51
  br i1 %602, label %684, label %676

676:                                              ; preds = %674
  %677 = load i64, ptr %601, align 8
  %678 = and i64 %677, 65535
  %679 = icmp eq i64 %678, 1
  br i1 %679, label %680, label %684

680:                                              ; preds = %676
  %681 = getelementptr inbounds %struct.rtx_def, ptr %601, i64 0, i32 1
  %682 = load ptr, ptr %681, align 8, !tbaa !16
  %683 = getelementptr inbounds %struct.cselib_val_struct, ptr %682, i64 0, i32 1
  br label %686

684:                                              ; preds = %676, %674
  %685 = getelementptr inbounds %struct.tree_decl_minimal, ptr %601, i64 0, i32 2
  br label %686

686:                                              ; preds = %684, %680
  %687 = phi ptr [ %683, %680 ], [ %685, %684 ]
  %688 = load i32, ptr %687, align 4, !tbaa !16
  %689 = load i32, ptr %675, align 8, !tbaa !49
  %690 = getelementptr i8, ptr %675, i64 8
  %691 = load ptr, ptr %690, align 8, !tbaa !55
  %692 = icmp slt i32 %689, 2
  %693 = zext i1 %692 to i32
  %694 = call ptr @htab_find_slot_with_hash(ptr noundef %691, ptr noundef %601, i32 noundef %688, i32 noundef %693) #21
  %695 = icmp eq ptr %694, null
  br i1 %695, label %696, label %698

696:                                              ; preds = %686
  %697 = call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %399, ptr noundef %601, i32 noundef 1)
  br label %698

698:                                              ; preds = %696, %686
  %699 = phi ptr [ %694, %686 ], [ %697, %696 ]
  %700 = call fastcc ptr @set_slot_part(ptr noundef nonnull %1, ptr noundef nonnull %665, ptr noundef %699, ptr noundef %601, i64 noundef 0, i32 noundef 2, ptr noundef null)
  br label %701

701:                                              ; preds = %698, %669, %660
  %702 = load ptr, ptr %399, align 8, !tbaa !51
  %703 = getelementptr i8, ptr %702, i64 8
  %704 = load ptr, ptr %703, align 8, !tbaa !55
  call fastcc void @emit_notes_for_changes(ptr noundef %500, i32 noundef 1, ptr %704)
  br label %1003

705:                                              ; preds = %495
  %706 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %497, i64 0, i32 2, i64 %496, i32 2
  %707 = load ptr, ptr %706, align 8, !tbaa !16
  %708 = getelementptr inbounds %struct.rtx_def, ptr %707, i64 0, i32 1
  %709 = getelementptr inbounds %struct.rtx_def, ptr %707, i64 0, i32 1, i32 0, i32 0, i64 1
  %710 = load ptr, ptr %709, align 8, !tbaa !16
  %711 = load ptr, ptr %708, align 8, !tbaa !16
  %712 = load i32, ptr %711, align 8
  %713 = and i32 %712, 65535
  %714 = icmp eq i32 %713, 41
  br i1 %714, label %715, label %720

715:                                              ; preds = %705
  %716 = getelementptr inbounds %struct.rtx_def, ptr %711, i64 0, i32 1
  %717 = getelementptr inbounds %struct.rtx_def, ptr %711, i64 0, i32 1, i32 0, i32 0, i64 1
  %718 = load ptr, ptr %717, align 8, !tbaa !16
  %719 = load ptr, ptr %716, align 8, !tbaa !16
  br label %720

720:                                              ; preds = %715, %705
  %721 = phi ptr [ %718, %715 ], [ %710, %705 ]
  %722 = phi ptr [ %719, %715 ], [ %711, %705 ]
  %723 = load i32, ptr %707, align 8
  %724 = and i32 %723, 134217728
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %727, label %726

726:                                              ; preds = %720
  call fastcc void @val_resolve(ptr noundef nonnull %1, ptr noundef %722, ptr noundef %710, ptr noundef %500)
  br label %728

727:                                              ; preds = %720
  call fastcc void @val_store(ptr noundef nonnull %1, ptr noundef %722, ptr noundef %721, ptr noundef %500, i8 noundef zeroext 0)
  br label %728

728:                                              ; preds = %727, %726
  %729 = load i32, ptr %707, align 8
  %730 = and i32 %729, 536870912
  %731 = icmp eq i32 %730, 0
  br i1 %731, label %747, label %732

732:                                              ; preds = %728
  %733 = load i32, ptr %721, align 8
  %734 = trunc i32 %733 to i16
  switch i16 %734, label %747 [
    i16 37, label %735
    i16 43, label %746
  ]

735:                                              ; preds = %732
  %736 = getelementptr inbounds %struct.rtx_def, ptr %721, i64 0, i32 1, i32 0, i32 0, i64 2
  %737 = load ptr, ptr %736, align 8, !tbaa !16
  %738 = icmp eq ptr %737, null
  br i1 %738, label %743, label %739

739:                                              ; preds = %735
  %740 = load ptr, ptr %737, align 8, !tbaa !75
  %741 = getelementptr inbounds %struct.reg_attrs, ptr %737, i64 0, i32 1
  %742 = load i64, ptr %741, align 8, !tbaa !77
  br label %743

743:                                              ; preds = %739, %735
  %744 = phi ptr [ %740, %739 ], [ null, %735 ]
  %745 = phi i64 [ %742, %739 ], [ 0, %735 ]
  call fastcc void @var_reg_decl_set(ptr noundef nonnull %1, ptr noundef nonnull %721, i32 noundef 1, ptr noundef %744, i64 noundef %745, ptr noundef null, i32 noundef 1)
  br label %747

746:                                              ; preds = %732
  call fastcc void @var_mem_set(ptr noundef nonnull %1, ptr noundef nonnull %721, i32 noundef 1, ptr noundef null)
  br label %747

747:                                              ; preds = %746, %743, %732, %728
  %748 = load ptr, ptr %399, align 8, !tbaa !51
  %749 = getelementptr i8, ptr %748, i64 8
  %750 = load ptr, ptr %749, align 8, !tbaa !55
  call fastcc void @emit_notes_for_changes(ptr noundef %500, i32 noundef 0, ptr %750)
  br label %1003

751:                                              ; preds = %495
  %752 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %497, i64 0, i32 2, i64 %496, i32 2
  %753 = load ptr, ptr %752, align 8, !tbaa !16
  %754 = load i32, ptr %753, align 8
  %755 = icmp sgt i32 %754, -1
  br i1 %755, label %761, label %756

756:                                              ; preds = %751
  %757 = getelementptr inbounds %struct.rtx_def, ptr %753, i64 0, i32 1
  %758 = getelementptr inbounds %struct.rtx_def, ptr %753, i64 0, i32 1, i32 0, i32 0, i64 1
  %759 = load ptr, ptr %758, align 8, !tbaa !16
  %760 = load ptr, ptr %757, align 8, !tbaa !16
  br label %761

761:                                              ; preds = %756, %751
  %762 = phi ptr [ %760, %756 ], [ %753, %751 ]
  %763 = phi ptr [ %759, %756 ], [ null, %751 ]
  %764 = getelementptr inbounds %struct.rtx_def, ptr %762, i64 0, i32 1
  %765 = getelementptr inbounds %struct.rtx_def, ptr %762, i64 0, i32 1, i32 0, i32 0, i64 1
  %766 = load ptr, ptr %765, align 8, !tbaa !16
  %767 = load ptr, ptr %764, align 8, !tbaa !16
  %768 = load i32, ptr %767, align 8
  %769 = and i32 %768, 65535
  %770 = icmp eq i32 %769, 41
  br i1 %770, label %771, label %776

771:                                              ; preds = %761
  %772 = getelementptr inbounds %struct.rtx_def, ptr %767, i64 0, i32 1
  %773 = getelementptr inbounds %struct.rtx_def, ptr %767, i64 0, i32 1, i32 0, i32 0, i64 1
  %774 = load ptr, ptr %773, align 8, !tbaa !16
  %775 = load ptr, ptr %772, align 8, !tbaa !16
  br label %776

776:                                              ; preds = %771, %761
  %777 = phi ptr [ %775, %771 ], [ %767, %761 ]
  %778 = phi ptr [ %774, %771 ], [ %766, %761 ]
  %779 = load i32, ptr %778, align 8
  %780 = and i32 %779, 65535
  %781 = icmp eq i32 %780, 23
  br i1 %781, label %782, label %803

782:                                              ; preds = %776
  %783 = getelementptr inbounds %struct.rtx_def, ptr %778, i64 0, i32 1
  %784 = getelementptr inbounds %struct.rtx_def, ptr %778, i64 0, i32 1, i32 0, i32 0, i64 1
  %785 = load ptr, ptr %784, align 8, !tbaa !16
  %786 = icmp eq ptr %777, %785
  br i1 %786, label %787, label %789

787:                                              ; preds = %782
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 7693, ptr noundef nonnull @.str.2) #21
  %788 = load i32, ptr %753, align 8
  br label %789

789:                                              ; preds = %787, %782
  %790 = phi i32 [ %754, %782 ], [ %788, %787 ]
  %791 = icmp ne ptr %778, %766
  %792 = and i32 %790, 134217728
  %793 = icmp eq i32 %792, 0
  %794 = select i1 %791, i1 %793, i1 false
  br i1 %794, label %795, label %798

795:                                              ; preds = %789
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 7694, ptr noundef nonnull @.str.2) #21
  %796 = load i32, ptr %753, align 8
  %797 = and i32 %796, 134217728
  br label %798

798:                                              ; preds = %795, %789
  %799 = phi i32 [ %797, %795 ], [ %792, %789 ]
  %800 = phi i32 [ %796, %795 ], [ %790, %789 ]
  %801 = load ptr, ptr %783, align 8, !tbaa !16
  %802 = icmp eq i32 %799, 0
  br i1 %802, label %823, label %819

803:                                              ; preds = %776
  %804 = and i32 %754, 134217728
  %805 = icmp eq i32 %804, 0
  br i1 %805, label %823, label %806

806:                                              ; preds = %803
  %807 = load i32, ptr %766, align 8
  %808 = and i32 %807, 65535
  %809 = icmp eq i32 %808, 23
  br i1 %809, label %810, label %816

810:                                              ; preds = %806
  %811 = getelementptr inbounds %struct.rtx_def, ptr %766, i64 0, i32 1, i32 0, i32 0, i64 1
  %812 = load ptr, ptr %811, align 8, !tbaa !16
  %813 = load i32, ptr %812, align 8
  %814 = and i32 %813, 65535
  %815 = icmp eq i32 %814, 37
  br i1 %815, label %819, label %816

816:                                              ; preds = %810, %806
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 7704, ptr noundef nonnull @.str.2) #21
  %817 = getelementptr inbounds %struct.rtx_def, ptr %766, i64 0, i32 1, i32 0, i32 0, i64 1
  %818 = load ptr, ptr %817, align 8, !tbaa !16
  br label %819

819:                                              ; preds = %816, %810, %798
  %820 = phi ptr [ %785, %798 ], [ %812, %810 ], [ %818, %816 ]
  %821 = phi ptr [ %801, %798 ], [ %778, %810 ], [ %778, %816 ]
  call fastcc void @val_resolve(ptr noundef nonnull %1, ptr noundef %777, ptr noundef %820, ptr noundef %500)
  %822 = load i32, ptr %753, align 8
  br label %823

823:                                              ; preds = %819, %803, %798
  %824 = phi i32 [ %754, %803 ], [ %800, %798 ], [ %822, %819 ]
  %825 = phi ptr [ %778, %803 ], [ %801, %798 ], [ %821, %819 ]
  %826 = and i32 %824, 536870912
  %827 = icmp eq i32 %826, 0
  br i1 %827, label %861, label %828

828:                                              ; preds = %823
  %829 = and i32 %824, 67108864
  %830 = icmp eq i32 %829, 0
  %831 = load i32, ptr %766, align 8
  br i1 %830, label %836, label %832

832:                                              ; preds = %828
  %833 = trunc i32 %831 to i16
  switch i16 %833, label %906 [
    i16 37, label %834
    i16 43, label %835
  ]

834:                                              ; preds = %832
  call fastcc void @var_reg_delete(ptr noundef nonnull %1, ptr noundef nonnull %766, i8 noundef zeroext 1)
  br label %906

835:                                              ; preds = %832
  call fastcc void @var_mem_delete(ptr noundef nonnull %1, ptr noundef nonnull %766, i8 noundef zeroext 1)
  br label %906

836:                                              ; preds = %828
  %837 = and i32 %831, 65535
  %838 = icmp eq i32 %837, 23
  br i1 %838, label %839, label %844

839:                                              ; preds = %836
  %840 = getelementptr inbounds %struct.rtx_def, ptr %766, i64 0, i32 1
  %841 = getelementptr inbounds %struct.rtx_def, ptr %766, i64 0, i32 1, i32 0, i32 0, i64 1
  %842 = load ptr, ptr %841, align 8, !tbaa !16
  %843 = load ptr, ptr %840, align 8, !tbaa !16
  br label %844

844:                                              ; preds = %839, %836
  %845 = phi ptr [ %843, %839 ], [ %766, %836 ]
  %846 = phi ptr [ %842, %839 ], [ null, %836 ]
  %847 = and i32 %824, 16777216
  %848 = icmp eq i32 %847, 0
  br i1 %848, label %852, label %849

849:                                              ; preds = %844
  %850 = call fastcc i32 @find_src_status(ptr noundef nonnull %1, ptr noundef %846)
  %851 = call fastcc ptr @find_src_set_src(ptr noundef nonnull %1, ptr noundef %846)
  br label %852

852:                                              ; preds = %849, %844
  %853 = phi ptr [ %851, %849 ], [ %846, %844 ]
  %854 = phi i32 [ %850, %849 ], [ 2, %844 ]
  %855 = load i32, ptr %845, align 8
  %856 = trunc i32 %855 to i16
  switch i16 %856, label %906 [
    i16 37, label %857
    i16 43, label %859
  ]

857:                                              ; preds = %852
  %858 = zext i1 %848 to i8
  call fastcc void @var_reg_delete_and_set(ptr noundef nonnull %1, ptr noundef nonnull %845, i8 noundef zeroext %858, i32 noundef %854, ptr noundef %853)
  br label %906

859:                                              ; preds = %852
  %860 = zext i1 %848 to i8
  call fastcc void @var_mem_delete_and_set(ptr noundef nonnull %1, ptr noundef nonnull %845, i8 noundef zeroext %860, i32 noundef %854, ptr noundef %853)
  br label %906

861:                                              ; preds = %823
  %862 = load i32, ptr %766, align 8
  %863 = and i32 %862, 65535
  %864 = icmp eq i32 %863, 37
  br i1 %864, label %865, label %906

865:                                              ; preds = %861
  %866 = getelementptr i8, ptr %766, i64 8
  %867 = load i32, ptr %866, align 8, !tbaa !16
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 1, i64 %868
  %870 = load ptr, ptr %869, align 8, !tbaa !5
  %871 = icmp eq ptr %870, null
  br i1 %871, label %905, label %872

872:                                              ; preds = %865, %902
  %873 = phi ptr [ %874, %902 ], [ %870, %865 ]
  %874 = load ptr, ptr %873, align 8, !tbaa !56
  %875 = getelementptr inbounds %struct.attrs_def, ptr %873, i64 0, i32 1
  %876 = load ptr, ptr %875, align 8, !tbaa !71
  %877 = getelementptr inbounds %struct.attrs_def, ptr %873, i64 0, i32 2
  %878 = load ptr, ptr %877, align 8, !tbaa !72
  %879 = getelementptr inbounds %struct.attrs_def, ptr %873, i64 0, i32 3
  %880 = load i64, ptr %879, align 8, !tbaa !59
  %881 = load ptr, ptr %399, align 8, !tbaa !51
  %882 = icmp eq ptr %878, null
  br i1 %882, label %891, label %883

883:                                              ; preds = %872
  %884 = load i64, ptr %878, align 8
  %885 = and i64 %884, 65535
  %886 = icmp eq i64 %885, 1
  br i1 %886, label %887, label %891

887:                                              ; preds = %883
  %888 = getelementptr inbounds %struct.rtx_def, ptr %878, i64 0, i32 1
  %889 = load ptr, ptr %888, align 8, !tbaa !16
  %890 = getelementptr inbounds %struct.cselib_val_struct, ptr %889, i64 0, i32 1
  br label %893

891:                                              ; preds = %883, %872
  %892 = getelementptr inbounds %struct.tree_decl_minimal, ptr %878, i64 0, i32 2
  br label %893

893:                                              ; preds = %891, %887
  %894 = phi ptr [ %890, %887 ], [ %892, %891 ]
  %895 = load i32, ptr %894, align 4, !tbaa !16
  %896 = getelementptr i8, ptr %881, i64 8
  %897 = load ptr, ptr %896, align 8, !tbaa !55
  %898 = call ptr @htab_find_slot_with_hash(ptr noundef %897, ptr noundef %878, i32 noundef %895, i32 noundef 0) #21
  %899 = icmp eq ptr %898, null
  br i1 %899, label %902, label %900

900:                                              ; preds = %893
  %901 = call fastcc ptr @delete_slot_part(ptr noundef nonnull %1, ptr noundef %876, ptr noundef nonnull %898, i64 noundef %880)
  br label %902

902:                                              ; preds = %900, %893
  %903 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %903, ptr noundef nonnull %873) #21
  %904 = icmp eq ptr %874, null
  br i1 %904, label %905, label %872, !llvm.loop !73

905:                                              ; preds = %902, %865
  store ptr null, ptr %869, align 8, !tbaa !5
  br label %906

906:                                              ; preds = %905, %861, %859, %857, %852, %835, %834, %832
  call fastcc void @val_store(ptr noundef nonnull %1, ptr noundef %777, ptr noundef %825, ptr noundef %500, i8 noundef zeroext 1)
  %907 = icmp eq ptr %763, null
  br i1 %907, label %913, label %908

908:                                              ; preds = %906
  %909 = getelementptr inbounds %struct.rtx_def, ptr %763, i64 0, i32 1
  %910 = load ptr, ptr %909, align 8, !tbaa !16
  %911 = getelementptr inbounds %struct.rtx_def, ptr %763, i64 0, i32 1, i32 0, i32 0, i64 1
  %912 = load ptr, ptr %911, align 8, !tbaa !16
  call fastcc void @val_store(ptr noundef nonnull %1, ptr noundef %910, ptr noundef %912, ptr noundef %500, i8 noundef zeroext 0)
  br label %913

913:                                              ; preds = %908, %906
  %914 = getelementptr inbounds %struct.rtx_def, ptr %500, i64 0, i32 1, i32 0, i32 0, i64 2
  %915 = load ptr, ptr %914, align 8, !tbaa !16
  %916 = load ptr, ptr %399, align 8, !tbaa !51
  %917 = getelementptr i8, ptr %916, i64 8
  %918 = load ptr, ptr %917, align 8, !tbaa !55
  call fastcc void @emit_notes_for_changes(ptr noundef %915, i32 noundef 0, ptr %918)
  br label %1003

919:                                              ; preds = %495
  %920 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %497, i64 0, i32 2, i64 %496, i32 2
  %921 = load ptr, ptr %920, align 8, !tbaa !16
  %922 = load i32, ptr %921, align 8
  %923 = and i32 %922, 65535
  %924 = icmp eq i32 %923, 23
  br i1 %924, label %925, label %931

925:                                              ; preds = %919
  %926 = getelementptr inbounds %struct.rtx_def, ptr %921, i64 0, i32 1
  %927 = getelementptr inbounds %struct.rtx_def, ptr %921, i64 0, i32 1, i32 0, i32 0, i64 1
  %928 = load ptr, ptr %927, align 8, !tbaa !16
  %929 = load ptr, ptr %926, align 8, !tbaa !16
  %930 = load i32, ptr %929, align 8
  br label %931

931:                                              ; preds = %925, %919
  %932 = phi i32 [ %930, %925 ], [ %922, %919 ]
  %933 = phi ptr [ %929, %925 ], [ %921, %919 ]
  %934 = phi ptr [ %928, %925 ], [ null, %919 ]
  %935 = and i32 %932, 65535
  %936 = icmp eq i32 %935, 37
  br i1 %936, label %937, label %938

937:                                              ; preds = %931
  call fastcc void @var_reg_delete_and_set(ptr noundef nonnull %1, ptr noundef nonnull %933, i8 noundef zeroext 1, i32 noundef 2, ptr noundef %934)
  br label %939

938:                                              ; preds = %931
  call fastcc void @var_mem_delete_and_set(ptr noundef nonnull %1, ptr noundef nonnull %933, i8 noundef zeroext 1, i32 noundef 2, ptr noundef %934)
  br label %939

939:                                              ; preds = %938, %937
  %940 = getelementptr inbounds %struct.rtx_def, ptr %500, i64 0, i32 1, i32 0, i32 0, i64 2
  %941 = load ptr, ptr %940, align 8, !tbaa !16
  %942 = load ptr, ptr %399, align 8, !tbaa !51
  %943 = getelementptr i8, ptr %942, i64 8
  %944 = load ptr, ptr %943, align 8, !tbaa !55
  call fastcc void @emit_notes_for_changes(ptr noundef %941, i32 noundef 0, ptr %944)
  br label %1003

945:                                              ; preds = %495
  %946 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %497, i64 0, i32 2, i64 %496, i32 2
  %947 = load ptr, ptr %946, align 8, !tbaa !16
  %948 = load i32, ptr %947, align 8
  %949 = and i32 %948, 65535
  %950 = icmp eq i32 %949, 23
  br i1 %950, label %951, label %956

951:                                              ; preds = %945
  %952 = getelementptr inbounds %struct.rtx_def, ptr %947, i64 0, i32 1
  %953 = getelementptr inbounds %struct.rtx_def, ptr %947, i64 0, i32 1, i32 0, i32 0, i64 1
  %954 = load ptr, ptr %953, align 8, !tbaa !16
  %955 = load ptr, ptr %952, align 8, !tbaa !16
  br label %956

956:                                              ; preds = %951, %945
  %957 = phi ptr [ %955, %951 ], [ %947, %945 ]
  %958 = phi ptr [ %954, %951 ], [ null, %945 ]
  %959 = call fastcc i32 @find_src_status(ptr noundef nonnull %1, ptr noundef %958)
  %960 = call fastcc ptr @find_src_set_src(ptr noundef nonnull %1, ptr noundef %958)
  %961 = load i32, ptr %957, align 8
  %962 = and i32 %961, 65535
  %963 = icmp eq i32 %962, 37
  br i1 %963, label %964, label %965

964:                                              ; preds = %956
  call fastcc void @var_reg_delete_and_set(ptr noundef nonnull %1, ptr noundef nonnull %957, i8 noundef zeroext 0, i32 noundef %959, ptr noundef %960)
  br label %966

965:                                              ; preds = %956
  call fastcc void @var_mem_delete_and_set(ptr noundef nonnull %1, ptr noundef nonnull %957, i8 noundef zeroext 0, i32 noundef %959, ptr noundef %960)
  br label %966

966:                                              ; preds = %965, %964
  %967 = getelementptr inbounds %struct.rtx_def, ptr %500, i64 0, i32 1, i32 0, i32 0, i64 2
  %968 = load ptr, ptr %967, align 8, !tbaa !16
  %969 = load ptr, ptr %399, align 8, !tbaa !51
  %970 = getelementptr i8, ptr %969, i64 8
  %971 = load ptr, ptr %970, align 8, !tbaa !55
  call fastcc void @emit_notes_for_changes(ptr noundef %968, i32 noundef 0, ptr %971)
  br label %1003

972:                                              ; preds = %495
  %973 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %497, i64 0, i32 2, i64 %496, i32 2
  %974 = load ptr, ptr %973, align 8, !tbaa !16
  %975 = load i32, ptr %974, align 8
  %976 = and i32 %975, 65535
  %977 = icmp eq i32 %976, 37
  br i1 %977, label %978, label %979

978:                                              ; preds = %972
  call fastcc void @var_reg_delete(ptr noundef nonnull %1, ptr noundef nonnull %974, i8 noundef zeroext 0)
  br label %980

979:                                              ; preds = %972
  call fastcc void @var_mem_delete(ptr noundef nonnull %1, ptr noundef nonnull %974, i8 noundef zeroext 0)
  br label %980

980:                                              ; preds = %979, %978
  %981 = load ptr, ptr %399, align 8, !tbaa !51
  %982 = getelementptr i8, ptr %981, i64 8
  %983 = load ptr, ptr %982, align 8, !tbaa !55
  call fastcc void @emit_notes_for_changes(ptr noundef %500, i32 noundef 1, ptr %983)
  br label %1003

984:                                              ; preds = %495
  %985 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %497, i64 0, i32 2, i64 %496, i32 2
  %986 = load ptr, ptr %985, align 8, !tbaa !16
  %987 = load i32, ptr %986, align 8
  %988 = and i32 %987, 65535
  %989 = icmp eq i32 %988, 37
  br i1 %989, label %990, label %991

990:                                              ; preds = %984
  call fastcc void @var_reg_delete(ptr noundef nonnull %1, ptr noundef nonnull %986, i8 noundef zeroext 1)
  br label %992

991:                                              ; preds = %984
  call fastcc void @var_mem_delete(ptr noundef nonnull %1, ptr noundef nonnull %986, i8 noundef zeroext 1)
  br label %992

992:                                              ; preds = %991, %990
  %993 = getelementptr inbounds %struct.rtx_def, ptr %500, i64 0, i32 1, i32 0, i32 0, i64 2
  %994 = load ptr, ptr %993, align 8, !tbaa !16
  %995 = load ptr, ptr %399, align 8, !tbaa !51
  %996 = getelementptr i8, ptr %995, i64 8
  %997 = load ptr, ptr %996, align 8, !tbaa !55
  call fastcc void @emit_notes_for_changes(ptr noundef %994, i32 noundef 0, ptr %997)
  br label %1003

998:                                              ; preds = %495
  %999 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %497, i64 0, i32 2, i64 %496, i32 2
  %1000 = load i64, ptr %999, align 8, !tbaa !16
  %1001 = load i64, ptr %1, align 8, !tbaa !53
  %1002 = add nsw i64 %1001, %1000
  store i64 %1002, ptr %1, align 8, !tbaa !53
  br label %1003

1003:                                             ; preds = %998, %992, %980, %966, %939, %913, %747, %701, %582, %560, %495
  %1004 = load ptr, ptr %414, align 8, !tbaa !39
  %1005 = load ptr, ptr %1004, align 8, !tbaa !62
  %1006 = icmp eq ptr %1005, null
  br i1 %1006, label %1007, label %490, !llvm.loop !66

1007:                                             ; preds = %1003, %490, %487, %478
  %1008 = phi ptr [ %484, %478 ], [ %484, %487 ], [ %1004, %490 ], [ %1004, %1003 ]
  %1009 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1008, i64 0, i32 1
  call fastcc void @dataflow_set_clear(ptr noundef nonnull %1009)
  %1010 = getelementptr inbounds %struct.basic_block_def, ptr %410, i64 0, i32 6
  %1011 = load ptr, ptr %1010, align 8, !tbaa !27
  %1012 = load ptr, ptr @cfun, align 8, !tbaa !5
  %1013 = getelementptr inbounds %struct.function, ptr %1012, i64 0, i32 1
  %1014 = load ptr, ptr %1013, align 8, !tbaa !23
  %1015 = getelementptr inbounds %struct.control_flow_graph, ptr %1014, i64 0, i32 1
  %1016 = load ptr, ptr %1015, align 8, !tbaa !29
  %1017 = icmp eq ptr %1011, %1016
  br i1 %1017, label %1018, label %409, !llvm.loop !78

1018:                                             ; preds = %1007, %393
  br label %1019

1019:                                             ; preds = %1018, %1029
  %1020 = phi i64 [ %1030, %1029 ], [ 0, %1018 ]
  %1021 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 1, i64 %1020
  %1022 = load ptr, ptr %1021, align 8, !tbaa !5
  %1023 = icmp eq ptr %1022, null
  br i1 %1023, label %1029, label %1024

1024:                                             ; preds = %1019, %1024
  %1025 = phi ptr [ %1026, %1024 ], [ %1022, %1019 ]
  %1026 = load ptr, ptr %1025, align 8, !tbaa !56
  %1027 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %1027, ptr noundef nonnull %1025) #21
  %1028 = icmp eq ptr %1026, null
  br i1 %1028, label %1029, label %1024, !llvm.loop !58

1029:                                             ; preds = %1024, %1019
  store ptr null, ptr %1021, align 8, !tbaa !5
  %1030 = add nuw nsw i64 %1020, 1
  %1031 = icmp eq i64 %1030, 53
  br i1 %1031, label %1032, label %1019, !llvm.loop !79

1032:                                             ; preds = %1029
  %1033 = load ptr, ptr %399, align 8, !tbaa !51
  %1034 = load i32, ptr %1033, align 8, !tbaa !49
  %1035 = icmp sgt i32 %1034, 0
  br i1 %1035, label %1038, label %1036

1036:                                             ; preds = %1032
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %1037 = load i32, ptr %1033, align 8, !tbaa !49
  br label %1038

1038:                                             ; preds = %1036, %1032
  %1039 = phi i32 [ %1034, %1032 ], [ %1037, %1036 ]
  %1040 = add nsw i32 %1039, -1
  store i32 %1040, ptr %1033, align 8, !tbaa !49
  %1041 = icmp eq i32 %1040, 0
  br i1 %1041, label %1042, label %1046

1042:                                             ; preds = %1038
  %1043 = getelementptr inbounds %struct.shared_hash_def, ptr %1033, i64 0, i32 1
  %1044 = load ptr, ptr %1043, align 8, !tbaa !55
  call void @htab_delete(ptr noundef %1044) #21
  %1045 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %1045, ptr noundef nonnull %1033) #21
  br label %1046

1046:                                             ; preds = %1042, %1038
  store ptr null, ptr %399, align 8, !tbaa !51
  %1047 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %1048 = icmp eq i32 %1047, 0
  br i1 %1048, label %1058, label %1049

1049:                                             ; preds = %1046
  %1050 = load ptr, ptr @changed_variables_stack, align 8, !tbaa !5
  %1051 = icmp eq ptr %1050, null
  br i1 %1051, label %1053, label %1052

1052:                                             ; preds = %1049
  call void @free(ptr noundef nonnull %1050)
  br label %1053

1053:                                             ; preds = %1052, %1049
  store ptr null, ptr @changed_variables_stack, align 8, !tbaa !5
  %1054 = load ptr, ptr @changed_values_stack, align 8, !tbaa !5
  %1055 = icmp eq ptr %1054, null
  br i1 %1055, label %1057, label %1056

1056:                                             ; preds = %1053
  call void @free(ptr noundef nonnull %1054)
  br label %1057

1057:                                             ; preds = %1056, %1053
  store ptr null, ptr @changed_values_stack, align 8, !tbaa !5
  br label %1058

1058:                                             ; preds = %1057, %1046
  store i1 false, ptr @emit_notes, align 1
  call void @llvm.lifetime.end.p0(i64 448, ptr nonnull %1) #21
  call fastcc void @vt_finalize()
  %1059 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %1060 = icmp eq i32 %1059, 0
  br i1 %1060, label %1107, label %1061

1061:                                             ; preds = %1058
  %1062 = load ptr, ptr @cfun, align 8, !tbaa !5
  %1063 = getelementptr inbounds %struct.function, ptr %1062, i64 0, i32 1
  %1064 = load ptr, ptr %1063, align 8, !tbaa !23
  %1065 = load ptr, ptr %1064, align 8, !tbaa !25
  %1066 = getelementptr inbounds %struct.basic_block_def, ptr %1065, i64 0, i32 6
  %1067 = load ptr, ptr %1066, align 8, !tbaa !27
  %1068 = getelementptr inbounds %struct.control_flow_graph, ptr %1064, i64 0, i32 1
  %1069 = load ptr, ptr %1068, align 8, !tbaa !29
  %1070 = icmp eq ptr %1067, %1069
  br i1 %1070, label %1107, label %1071

1071:                                             ; preds = %1061, %1098
  %1072 = phi ptr [ %1099, %1098 ], [ %1062, %1061 ]
  %1073 = phi ptr [ %1101, %1098 ], [ %1067, %1061 ]
  %1074 = getelementptr inbounds %struct.basic_block_def, ptr %1073, i64 0, i32 7
  %1075 = load ptr, ptr %1074, align 8, !tbaa !16
  %1076 = load ptr, ptr %1075, align 8, !tbaa !30
  %1077 = icmp eq ptr %1076, null
  br i1 %1077, label %1098, label %1078

1078:                                             ; preds = %1071, %1094
  %1079 = phi ptr [ %1081, %1094 ], [ %1076, %1071 ]
  %1080 = getelementptr inbounds %struct.rtx_def, ptr %1079, i64 0, i32 1, i32 0, i32 0, i64 2
  %1081 = load ptr, ptr %1080, align 8, !tbaa !16
  %1082 = load ptr, ptr %1074, align 8, !tbaa !16
  %1083 = getelementptr inbounds %struct.rtl_bb_info, ptr %1082, i64 0, i32 1
  %1084 = load ptr, ptr %1083, align 8, !tbaa !32
  %1085 = getelementptr inbounds %struct.rtx_def, ptr %1084, i64 0, i32 1, i32 0, i32 0, i64 2
  %1086 = load ptr, ptr %1085, align 8, !tbaa !16
  %1087 = icmp eq ptr %1079, %1086
  br i1 %1087, label %1096, label %1088

1088:                                             ; preds = %1078
  %1089 = load i32, ptr %1079, align 8
  %1090 = and i32 %1089, 65535
  %1091 = icmp eq i32 %1090, 7
  br i1 %1091, label %1092, label %1094

1092:                                             ; preds = %1088
  %1093 = call ptr @delete_insn(ptr noundef nonnull %1079) #21
  br label %1094

1094:                                             ; preds = %1092, %1088
  %1095 = icmp eq ptr %1081, null
  br i1 %1095, label %1096, label %1078, !llvm.loop !33

1096:                                             ; preds = %1094, %1078
  %1097 = load ptr, ptr @cfun, align 8, !tbaa !5
  br label %1098

1098:                                             ; preds = %1096, %1071
  %1099 = phi ptr [ %1097, %1096 ], [ %1072, %1071 ]
  %1100 = getelementptr inbounds %struct.basic_block_def, ptr %1073, i64 0, i32 6
  %1101 = load ptr, ptr %1100, align 8, !tbaa !27
  %1102 = getelementptr inbounds %struct.function, ptr %1099, i64 0, i32 1
  %1103 = load ptr, ptr %1102, align 8, !tbaa !23
  %1104 = getelementptr inbounds %struct.control_flow_graph, ptr %1103, i64 0, i32 1
  %1105 = load ptr, ptr %1104, align 8, !tbaa !29
  %1106 = icmp eq ptr %1101, %1105
  br i1 %1106, label %1107, label %1071, !llvm.loop !34

1107:                                             ; preds = %1098, %261, %148, %95, %41, %7, %59, %61, %108, %111, %221, %224, %1058, %1061
  store i32 %2, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define internal zeroext i8 @gate_handle_var_tracking() #10 {
  %1 = load i32, ptr @flag_var_tracking, align 4, !tbaa !20
  %2 = trunc i32 %1 to i8
  ret i8 %2
}

declare zeroext i8 @mark_dfs_back_edges() local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @vt_initialize() unnamed_addr #9 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca %struct.adjust_mem_data, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  tail call void @alloc_aux_for_blocks(i32 noundef 920) #21
  %6 = tail call ptr @create_alloc_pool(ptr noundef nonnull @.str.3, i64 noundef 32, i64 noundef 1024) #21
  store ptr %6, ptr @attrs_pool, align 8, !tbaa !5
  %7 = tail call ptr @create_alloc_pool(ptr noundef nonnull @.str.4, i64 noundef 400, i64 noundef 64) #21
  store ptr %7, ptr @var_pool, align 8, !tbaa !5
  %8 = tail call ptr @create_alloc_pool(ptr noundef nonnull @.str.5, i64 noundef 32, i64 noundef 1024) #21
  store ptr %8, ptr @loc_chain_pool, align 8, !tbaa !5
  %9 = tail call ptr @create_alloc_pool(ptr noundef nonnull @.str.6, i64 noundef 16, i64 noundef 256) #21
  store ptr %9, ptr @shared_hash_pool, align 8, !tbaa !5
  %10 = tail call ptr @pool_alloc(ptr noundef %9) #21
  store ptr %10, ptr @empty_shared_hash, align 8, !tbaa !5
  store i32 1, ptr %10, align 8, !tbaa !49
  %11 = tail call ptr @htab_create(i64 noundef 1, ptr noundef nonnull @variable_htab_hash, ptr noundef nonnull @variable_htab_eq, ptr noundef nonnull @variable_htab_free) #21
  %12 = load ptr, ptr @empty_shared_hash, align 8, !tbaa !5
  %13 = getelementptr inbounds %struct.shared_hash_def, ptr %12, i64 0, i32 1
  store ptr %11, ptr %13, align 8, !tbaa !55
  %14 = tail call ptr @htab_create(i64 noundef 10, ptr noundef nonnull @variable_htab_hash, ptr noundef nonnull @variable_htab_eq, ptr noundef nonnull @variable_htab_free) #21
  store ptr %14, ptr @changed_variables, align 8, !tbaa !5
  %15 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %0
  %18 = tail call ptr @create_alloc_pool(ptr noundef nonnull @.str.7, i64 noundef 24, i64 noundef 1024) #21
  store ptr %18, ptr @value_chain_pool, align 8, !tbaa !5
  %19 = tail call ptr @htab_create(i64 noundef 32, ptr noundef nonnull @value_chain_htab_hash, ptr noundef nonnull @value_chain_htab_eq, ptr noundef null) #21
  store ptr %19, ptr @value_chains, align 8, !tbaa !5
  br label %20

20:                                               ; preds = %17, %0
  %21 = load ptr, ptr @cfun, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.function, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !23
  %24 = load ptr, ptr %23, align 8, !tbaa !5
  %25 = icmp eq ptr %24, null
  br i1 %25, label %52, label %26

26:                                               ; preds = %20
  %27 = load ptr, ptr @empty_shared_hash, align 8, !tbaa !5
  %28 = load i32, ptr %27, align 8, !tbaa !49
  br label %29

29:                                               ; preds = %26, %29
  %30 = phi i32 [ %28, %26 ], [ %43, %29 ]
  %31 = phi ptr [ %24, %26 ], [ %49, %29 ]
  %32 = getelementptr inbounds %struct.basic_block_def, ptr %31, i64 0, i32 2
  %33 = load ptr, ptr %32, align 8, !tbaa !39
  %34 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %33, i64 0, i32 4
  store i8 0, ptr %34, align 8, !tbaa !80
  %35 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %33, i64 0, i32 5
  store i8 0, ptr %35, align 1, !tbaa !81
  %36 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %33, i64 0, i32 1
  %37 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %33, i64 0, i32 1, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(424) %37, i8 0, i64 424, i1 false), !tbaa !5
  %38 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %33, i64 0, i32 1, i32 2
  store ptr %27, ptr %38, align 8, !tbaa !51
  store i64 0, ptr %36, align 8, !tbaa !53
  %39 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %33, i64 0, i32 1, i32 3
  store ptr null, ptr %39, align 8, !tbaa !54
  %40 = load ptr, ptr %32, align 8, !tbaa !39
  %41 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %40, i64 0, i32 2
  %42 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %40, i64 0, i32 2, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(424) %42, i8 0, i64 424, i1 false), !tbaa !5
  %43 = add nsw i32 %30, 2
  %44 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %40, i64 0, i32 2, i32 2
  store ptr %27, ptr %44, align 8, !tbaa !51
  store i64 0, ptr %41, align 8, !tbaa !53
  %45 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %40, i64 0, i32 2, i32 3
  store ptr null, ptr %45, align 8, !tbaa !54
  %46 = load ptr, ptr %32, align 8, !tbaa !39
  %47 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %46, i64 0, i32 3
  store ptr null, ptr %47, align 8, !tbaa !82
  %48 = getelementptr inbounds %struct.basic_block_def, ptr %31, i64 0, i32 6
  %49 = load ptr, ptr %48, align 8, !tbaa !5
  %50 = icmp eq ptr %49, null
  br i1 %50, label %51, label %29, !llvm.loop !83

51:                                               ; preds = %29
  store i32 %43, ptr %27, align 8, !tbaa !49
  br label %52

52:                                               ; preds = %51, %20
  %53 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %52
  tail call void @cselib_init(i32 noundef 3) #21
  %56 = tail call ptr @bitmap_obstack_alloc_stat(ptr noundef null) #21
  store ptr %56, ptr @scratch_regs, align 8, !tbaa !5
  %57 = tail call ptr @create_alloc_pool(ptr noundef nonnull @.str.8, i64 noundef 40, i64 noundef 256) #21
  store ptr %57, ptr @valvar_pool, align 8, !tbaa !5
  %58 = tail call ptr @vec_heap_p_reserve_exact(ptr noundef null, i32 noundef 256) #21
  store ptr %58, ptr @preserved_values, align 8, !tbaa !5
  br label %60

59:                                               ; preds = %52
  store ptr null, ptr @scratch_regs, align 8, !tbaa !5
  store ptr null, ptr @valvar_pool, align 8, !tbaa !5
  br label %60

60:                                               ; preds = %59, %55
  %61 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 41), align 1, !tbaa !84
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %385

63:                                               ; preds = %60
  %64 = load ptr, ptr @cfun, align 8, !tbaa !5
  %65 = getelementptr inbounds %struct.function, ptr %64, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !23
  %67 = load ptr, ptr %66, align 8, !tbaa !25
  %68 = getelementptr inbounds %struct.basic_block_def, ptr %67, i64 0, i32 2
  %69 = load ptr, ptr %68, align 8, !tbaa !39
  %70 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %69, i64 0, i32 4
  store i8 1, ptr %70, align 8, !tbaa !80
  %71 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %69, i64 0, i32 1
  store i64 4, ptr %71, align 8, !tbaa !93
  %72 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %69, i64 0, i32 2
  store i64 4, ptr %72, align 8, !tbaa !94
  %73 = getelementptr inbounds %struct.control_flow_graph, ptr %66, i64 0, i32 3
  %74 = load i32, ptr %73, align 8, !tbaa !35
  %75 = add nsw i32 %74, 1
  %76 = sext i32 %75 to i64
  %77 = shl nsw i64 %76, 4
  %78 = tail call ptr @xmalloc(i64 noundef %77) #21
  %79 = load ptr, ptr @cfun, align 8, !tbaa !5
  %80 = getelementptr inbounds %struct.function, ptr %79, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8, !tbaa !23
  %82 = load ptr, ptr %81, align 8, !tbaa !25
  %83 = getelementptr inbounds %struct.basic_block_def, ptr %82, i64 0, i32 1
  store i32 0, ptr %78, align 8, !tbaa.struct !95
  %84 = getelementptr inbounds i8, ptr %78, i64 8
  store ptr %83, ptr %84, align 8, !tbaa.struct !96
  br label %85

85:                                               ; preds = %366, %63
  %86 = phi i32 [ 1, %63 ], [ %367, %366 ]
  %87 = add nsw i32 %86, -1
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.edge_iterator, ptr %78, i64 %88
  %90 = load i32, ptr %89, align 8, !tbaa.struct !95
  %91 = getelementptr inbounds i8, ptr %89, i64 8
  %92 = load ptr, ptr %91, align 8, !tbaa.struct !96
  %93 = icmp eq ptr %92, null
  br i1 %93, label %94, label %95

94:                                               ; preds = %85
  tail call void @fancy_abort(ptr noundef nonnull @.str.10, i32 noundef 687, ptr noundef nonnull @.str.2) #21
  br label %95

95:                                               ; preds = %94, %85
  %96 = load ptr, ptr %92, align 8, !tbaa !5, !nonnull !97, !noundef !97
  %97 = zext i32 %90 to i64
  %98 = getelementptr inbounds %struct.VEC_edge_base, ptr %96, i64 0, i32 2, i64 %97
  %99 = load ptr, ptr %98, align 8, !tbaa !5
  %100 = load ptr, ptr %99, align 8, !tbaa !98
  %101 = getelementptr inbounds %struct.edge_def, ptr %99, i64 0, i32 1
  %102 = load ptr, ptr %101, align 8, !tbaa !100
  %103 = getelementptr inbounds %struct.basic_block_def, ptr %102, i64 0, i32 2
  %104 = load ptr, ptr %103, align 8, !tbaa !39
  %105 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %104, i64 0, i32 4
  %106 = load i8, ptr %105, align 8, !tbaa !80
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %331

108:                                              ; preds = %95
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #21
  store i8 1, ptr %105, align 8, !tbaa !80
  %109 = getelementptr inbounds %struct.basic_block_def, ptr %100, i64 0, i32 2
  %110 = load ptr, ptr %109, align 8, !tbaa !39
  %111 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %110, i64 0, i32 2
  %112 = load i64, ptr %111, align 8, !tbaa !94
  %113 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %104, i64 0, i32 1
  store i64 %112, ptr %113, align 8, !tbaa !93
  %114 = load ptr, ptr @cfun, align 8, !tbaa !5
  %115 = getelementptr inbounds %struct.function, ptr %114, i64 0, i32 1
  %116 = load ptr, ptr %115, align 8, !tbaa !23
  %117 = getelementptr inbounds %struct.control_flow_graph, ptr %116, i64 0, i32 1
  %118 = load ptr, ptr %117, align 8, !tbaa !29
  %119 = icmp eq ptr %102, %118
  br i1 %119, label %314, label %120

120:                                              ; preds = %108
  %121 = getelementptr inbounds %struct.basic_block_def, ptr %102, i64 0, i32 7
  %122 = load ptr, ptr %121, align 8, !tbaa !16
  %123 = load ptr, ptr %122, align 8, !tbaa !16
  %124 = getelementptr inbounds %struct.rtl_bb_info, ptr %122, i64 0, i32 1
  %125 = load ptr, ptr %124, align 8, !tbaa !32
  %126 = getelementptr inbounds %struct.rtx_def, ptr %125, i64 0, i32 1, i32 0, i32 0, i64 2
  %127 = load ptr, ptr %126, align 8, !tbaa !16
  %128 = icmp eq ptr %123, %127
  br i1 %128, label %314, label %129

129:                                              ; preds = %120, %302
  %130 = phi ptr [ %303, %302 ], [ %122, %120 ]
  %131 = phi ptr [ %306, %302 ], [ %123, %120 ]
  %132 = phi i64 [ %304, %302 ], [ %112, %120 ]
  %133 = load i32, ptr %131, align 8
  %134 = and i32 %133, 65535
  %135 = add nsw i32 %134, -7
  %136 = icmp ult i32 %135, 4
  br i1 %136, label %137, label %302

137:                                              ; preds = %129
  store i64 0, ptr %4, align 8, !tbaa !70
  store i64 0, ptr %5, align 8, !tbaa !70
  %138 = getelementptr inbounds %struct.rtx_def, ptr %131, i64 1
  %139 = load ptr, ptr %138, align 8, !tbaa !16
  %140 = and i32 %133, 1073741824
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %148, label %142

142:                                              ; preds = %137
  %143 = tail call ptr @find_reg_note(ptr noundef nonnull %131, i32 noundef 17, ptr noundef null) #21
  %144 = icmp eq ptr %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %struct.rtx_def, ptr %143, i64 0, i32 1
  %147 = load ptr, ptr %146, align 8, !tbaa !16
  br label %148

148:                                              ; preds = %145, %142, %137
  %149 = phi ptr [ %139, %137 ], [ %147, %145 ], [ %139, %142 ]
  %150 = load i32, ptr %149, align 8
  %151 = trunc i32 %150 to i16
  switch i16 %151, label %296 [
    i16 23, label %152
    i16 15, label %159
    i16 5, label %159
  ]

152:                                              ; preds = %148
  %153 = getelementptr i8, ptr %149, i64 8
  %154 = load ptr, ptr %153, align 8, !tbaa !16
  %155 = getelementptr i8, ptr %149, i64 16
  %156 = load ptr, ptr %155, align 8, !tbaa !16
  call fastcc void @stack_adjust_offset_pre_post(ptr %154, ptr %156, ptr noundef nonnull %4, ptr noundef nonnull %5)
  %157 = load i64, ptr %4, align 8, !tbaa !70
  %158 = load i64, ptr %5, align 8, !tbaa !70
  br label %296

159:                                              ; preds = %148, %148
  %160 = getelementptr inbounds %struct.rtx_def, ptr %149, i64 0, i32 1
  %161 = load ptr, ptr %160, align 8, !tbaa !16
  %162 = load i32, ptr %161, align 8, !tbaa !101
  %163 = icmp sgt i32 %162, 0
  br i1 %163, label %164, label %296

164:                                              ; preds = %159
  %165 = zext i32 %162 to i64
  br label %166

166:                                              ; preds = %291, %164
  %167 = phi i64 [ 0, %164 ], [ %292, %291 ]
  %168 = phi i64 [ 0, %164 ], [ %293, %291 ]
  %169 = phi i64 [ %165, %164 ], [ %170, %291 ]
  %170 = add nsw i64 %169, -1
  %171 = load ptr, ptr %160, align 8, !tbaa !16
  %172 = and i64 %170, 4294967295
  %173 = getelementptr inbounds %struct.rtvec_def, ptr %171, i64 0, i32 1, i64 %172
  %174 = load ptr, ptr %173, align 8, !tbaa !5
  %175 = load i32, ptr %174, align 8
  %176 = and i32 %175, 65535
  %177 = icmp eq i32 %176, 23
  br i1 %177, label %178, label %291

178:                                              ; preds = %166
  %179 = getelementptr i8, ptr %174, i64 8
  %180 = load ptr, ptr %179, align 8, !tbaa !16
  %181 = getelementptr i8, ptr %174, i64 16
  %182 = load ptr, ptr %181, align 8, !tbaa !16
  %183 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 2), align 16, !tbaa !5
  %184 = icmp eq ptr %183, %180
  br i1 %184, label %185, label %208

185:                                              ; preds = %178
  %186 = load i32, ptr %182, align 8
  %187 = and i32 %186, 65535
  %188 = icmp eq i32 %187, 50
  %189 = add nsw i32 %187, -49
  %190 = icmp ult i32 %189, 2
  br i1 %190, label %191, label %291

191:                                              ; preds = %185
  %192 = getelementptr inbounds %struct.rtx_def, ptr %182, i64 0, i32 1
  %193 = load ptr, ptr %192, align 8, !tbaa !16
  %194 = icmp eq ptr %193, %180
  br i1 %194, label %195, label %291

195:                                              ; preds = %191
  %196 = getelementptr inbounds %struct.rtx_def, ptr %182, i64 0, i32 1, i32 0, i32 0, i64 1
  %197 = load ptr, ptr %196, align 8, !tbaa !16
  %198 = load i32, ptr %197, align 8
  %199 = and i32 %198, 65535
  %200 = icmp eq i32 %199, 30
  br i1 %200, label %201, label %291

201:                                              ; preds = %195
  %202 = getelementptr inbounds %struct.rtx_def, ptr %197, i64 0, i32 1
  %203 = load i64, ptr %202, align 8, !tbaa !16
  br i1 %188, label %204, label %206

204:                                              ; preds = %201
  %205 = add nsw i64 %203, %168
  br label %291

206:                                              ; preds = %201
  %207 = sub nsw i64 %168, %203
  br label %291

208:                                              ; preds = %178
  %209 = load i32, ptr %180, align 8
  %210 = and i32 %209, 65535
  %211 = icmp eq i32 %210, 43
  br i1 %211, label %212, label %291

212:                                              ; preds = %208
  %213 = getelementptr inbounds %struct.rtx_def, ptr %180, i64 0, i32 1
  %214 = load ptr, ptr %213, align 8, !tbaa !16
  %215 = load i32, ptr %214, align 8
  %216 = and i32 %215, 65535
  %217 = trunc i32 %215 to i16
  switch i16 %217, label %291 [
    i16 78, label %218
    i16 79, label %218
    i16 74, label %243
    i16 76, label %255
    i16 75, label %267
    i16 77, label %279
  ]

218:                                              ; preds = %212, %212
  %219 = getelementptr inbounds %struct.rtx_def, ptr %214, i64 0, i32 1
  %220 = load ptr, ptr %219, align 8, !tbaa !16
  %221 = icmp eq ptr %220, %183
  br i1 %221, label %222, label %291

222:                                              ; preds = %218
  %223 = getelementptr inbounds %struct.rtx_def, ptr %214, i64 0, i32 1, i32 0, i32 0, i64 1
  %224 = load ptr, ptr %223, align 8, !tbaa !16
  %225 = getelementptr inbounds %struct.rtx_def, ptr %224, i64 0, i32 1, i32 0, i32 0, i64 1
  %226 = load ptr, ptr %225, align 8, !tbaa !16
  %227 = load i32, ptr %224, align 8
  %228 = and i32 %227, 65535
  %229 = icmp eq i32 %228, 49
  br i1 %229, label %230, label %234

230:                                              ; preds = %222
  %231 = load i32, ptr %226, align 8
  %232 = and i32 %231, 65535
  %233 = icmp eq i32 %232, 30
  br i1 %233, label %235, label %234

234:                                              ; preds = %230, %222
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 537, ptr noundef nonnull @.str.2) #21
  br label %235

235:                                              ; preds = %234, %230
  %236 = icmp eq i32 %216, 78
  %237 = getelementptr inbounds %struct.rtx_def, ptr %226, i64 0, i32 1
  %238 = load i64, ptr %237, align 8, !tbaa !16
  br i1 %236, label %239, label %241

239:                                              ; preds = %235
  %240 = sub nsw i64 %167, %238
  br label %291

241:                                              ; preds = %235
  %242 = sub nsw i64 %168, %238
  br label %291

243:                                              ; preds = %212
  %244 = getelementptr inbounds %struct.rtx_def, ptr %214, i64 0, i32 1
  %245 = load ptr, ptr %244, align 8, !tbaa !16
  %246 = icmp eq ptr %245, %183
  br i1 %246, label %247, label %291

247:                                              ; preds = %243
  %248 = lshr i32 %209, 16
  %249 = and i32 %248, 255
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %250
  %252 = load i8, ptr %251, align 1, !tbaa !16
  %253 = zext i8 %252 to i64
  %254 = add nsw i64 %167, %253
  br label %291

255:                                              ; preds = %212
  %256 = getelementptr inbounds %struct.rtx_def, ptr %214, i64 0, i32 1
  %257 = load ptr, ptr %256, align 8, !tbaa !16
  %258 = icmp eq ptr %257, %183
  br i1 %258, label %259, label %291

259:                                              ; preds = %255
  %260 = lshr i32 %209, 16
  %261 = and i32 %260, 255
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %262
  %264 = load i8, ptr %263, align 1, !tbaa !16
  %265 = zext i8 %264 to i64
  %266 = add nsw i64 %168, %265
  br label %291

267:                                              ; preds = %212
  %268 = getelementptr inbounds %struct.rtx_def, ptr %214, i64 0, i32 1
  %269 = load ptr, ptr %268, align 8, !tbaa !16
  %270 = icmp eq ptr %269, %183
  br i1 %270, label %271, label %291

271:                                              ; preds = %267
  %272 = lshr i32 %209, 16
  %273 = and i32 %272, 255
  %274 = zext i32 %273 to i64
  %275 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %274
  %276 = load i8, ptr %275, align 1, !tbaa !16
  %277 = zext i8 %276 to i64
  %278 = sub nsw i64 %167, %277
  br label %291

279:                                              ; preds = %212
  %280 = getelementptr inbounds %struct.rtx_def, ptr %214, i64 0, i32 1
  %281 = load ptr, ptr %280, align 8, !tbaa !16
  %282 = icmp eq ptr %281, %183
  br i1 %282, label %283, label %291

283:                                              ; preds = %279
  %284 = lshr i32 %209, 16
  %285 = and i32 %284, 255
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %286
  %288 = load i8, ptr %287, align 1, !tbaa !16
  %289 = zext i8 %288 to i64
  %290 = sub nsw i64 %168, %289
  br label %291

291:                                              ; preds = %283, %279, %271, %267, %259, %255, %247, %243, %241, %239, %218, %212, %208, %206, %204, %195, %191, %185, %166
  %292 = phi i64 [ %167, %283 ], [ %167, %279 ], [ %278, %271 ], [ %167, %267 ], [ %167, %259 ], [ %167, %255 ], [ %254, %247 ], [ %167, %243 ], [ %167, %241 ], [ %240, %239 ], [ %167, %218 ], [ %167, %212 ], [ %167, %208 ], [ %167, %206 ], [ %167, %204 ], [ %167, %195 ], [ %167, %191 ], [ %167, %185 ], [ %167, %166 ]
  %293 = phi i64 [ %290, %283 ], [ %168, %279 ], [ %168, %271 ], [ %168, %267 ], [ %266, %259 ], [ %168, %255 ], [ %168, %247 ], [ %168, %243 ], [ %242, %241 ], [ %168, %239 ], [ %168, %218 ], [ %168, %212 ], [ %168, %208 ], [ %207, %206 ], [ %205, %204 ], [ %168, %195 ], [ %168, %191 ], [ %168, %185 ], [ %168, %166 ]
  %294 = icmp ugt i64 %169, 1
  br i1 %294, label %166, label %295, !llvm.loop !103

295:                                              ; preds = %291
  store i64 %293, ptr %5, align 8, !tbaa !70
  store i64 %292, ptr %4, align 8, !tbaa !70
  br label %296

296:                                              ; preds = %295, %159, %152, %148
  %297 = phi i64 [ %293, %295 ], [ 0, %148 ], [ %158, %152 ], [ 0, %159 ]
  %298 = phi i64 [ %292, %295 ], [ 0, %148 ], [ %157, %152 ], [ 0, %159 ]
  %299 = add i64 %297, %132
  %300 = add i64 %299, %298
  %301 = load ptr, ptr %121, align 8, !tbaa !16
  br label %302

302:                                              ; preds = %296, %129
  %303 = phi ptr [ %301, %296 ], [ %130, %129 ]
  %304 = phi i64 [ %300, %296 ], [ %132, %129 ]
  %305 = getelementptr inbounds %struct.rtx_def, ptr %131, i64 0, i32 1, i32 0, i32 0, i64 2
  %306 = load ptr, ptr %305, align 8, !tbaa !16
  %307 = getelementptr inbounds %struct.rtl_bb_info, ptr %303, i64 0, i32 1
  %308 = load ptr, ptr %307, align 8, !tbaa !32
  %309 = getelementptr inbounds %struct.rtx_def, ptr %308, i64 0, i32 1, i32 0, i32 0, i64 2
  %310 = load ptr, ptr %309, align 8, !tbaa !16
  %311 = icmp eq ptr %306, %310
  br i1 %311, label %312, label %129, !llvm.loop !104

312:                                              ; preds = %302
  %313 = load ptr, ptr %103, align 8, !tbaa !39
  br label %314

314:                                              ; preds = %312, %120, %108
  %315 = phi ptr [ %104, %108 ], [ %104, %120 ], [ %313, %312 ]
  %316 = phi i64 [ %112, %108 ], [ %112, %120 ], [ %304, %312 ]
  %317 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %315, i64 0, i32 2
  store i64 %316, ptr %317, align 8, !tbaa !94
  %318 = getelementptr inbounds %struct.basic_block_def, ptr %102, i64 0, i32 1
  %319 = load ptr, ptr %318, align 8, !tbaa !105
  %320 = icmp eq ptr %319, null
  br i1 %320, label %329, label %321

321:                                              ; preds = %314
  %322 = load i32, ptr %319, align 8, !tbaa !106
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %329, label %324

324:                                              ; preds = %321
  %325 = add nsw i32 %86, 1
  %326 = sext i32 %86 to i64
  %327 = getelementptr inbounds %struct.edge_iterator, ptr %78, i64 %326
  store i32 0, ptr %327, align 8, !tbaa.struct !95
  %328 = getelementptr inbounds i8, ptr %327, i64 8
  store ptr %318, ptr %328, align 8, !tbaa.struct !96
  br label %329

329:                                              ; preds = %324, %321, %314
  %330 = phi i32 [ %325, %324 ], [ %86, %321 ], [ %86, %314 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #21
  br label %366

331:                                              ; preds = %95
  %332 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %104, i64 0, i32 1
  %333 = load i64, ptr %332, align 8, !tbaa !93
  %334 = getelementptr inbounds %struct.basic_block_def, ptr %100, i64 0, i32 2
  %335 = load ptr, ptr %334, align 8, !tbaa !39
  %336 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %335, i64 0, i32 2
  %337 = load i64, ptr %336, align 8, !tbaa !94
  %338 = icmp eq i64 %333, %337
  br i1 %338, label %340, label %339

339:                                              ; preds = %331
  tail call void @free(ptr noundef nonnull %78)
  br label %1590

340:                                              ; preds = %331
  %341 = load i32, ptr %96, align 8, !tbaa !106
  %342 = add i32 %90, 1
  %343 = icmp eq i32 %342, %341
  br i1 %343, label %366, label %344

344:                                              ; preds = %340
  %345 = load i32, ptr %89, align 8
  %346 = load ptr, ptr %91, align 8
  %347 = icmp eq ptr %346, null
  br i1 %347, label %348, label %349

348:                                              ; preds = %344
  tail call void @fancy_abort(ptr noundef nonnull @.str.10, i32 noundef 687, ptr noundef nonnull @.str.2) #21
  br label %349

349:                                              ; preds = %348, %344
  %350 = load ptr, ptr %346, align 8, !tbaa !5
  %351 = icmp eq ptr %350, null
  br i1 %351, label %362, label %352

352:                                              ; preds = %349
  %353 = load ptr, ptr %91, align 8
  %354 = icmp eq ptr %353, null
  br i1 %354, label %355, label %356

355:                                              ; preds = %352
  tail call void @fancy_abort(ptr noundef nonnull @.str.10, i32 noundef 687, ptr noundef nonnull @.str.2) #21
  br label %356

356:                                              ; preds = %355, %352
  %357 = load ptr, ptr %353, align 8, !tbaa !5
  %358 = icmp eq ptr %357, null
  br i1 %358, label %362, label %359

359:                                              ; preds = %356
  %360 = load i32, ptr %357, align 8, !tbaa !106
  %361 = icmp ult i32 %345, %360
  br i1 %361, label %363, label %362

362:                                              ; preds = %359, %356, %349
  tail call void @fancy_abort(ptr noundef nonnull @.str.10, i32 noundef 738, ptr noundef nonnull @.str.2) #21
  br label %363

363:                                              ; preds = %362, %359
  %364 = load i32, ptr %89, align 8, !tbaa !108
  %365 = add i32 %364, 1
  store i32 %365, ptr %89, align 8, !tbaa !108
  br label %366

366:                                              ; preds = %363, %340, %329
  %367 = phi i32 [ %86, %363 ], [ %330, %329 ], [ %87, %340 ]
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %85, !llvm.loop !110

369:                                              ; preds = %366
  tail call void @free(ptr noundef %78)
  %370 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 5), align 8, !tbaa !5
  %371 = tail call ptr @eliminate_regs(ptr noundef %370, i32 noundef 0, ptr noundef null) #21
  %372 = icmp eq ptr %371, %370
  br i1 %372, label %430, label %373

373:                                              ; preds = %369
  %374 = load i32, ptr %371, align 8
  %375 = and i32 %374, 65535
  %376 = icmp eq i32 %375, 49
  br i1 %376, label %377, label %380

377:                                              ; preds = %373
  %378 = getelementptr inbounds %struct.rtx_def, ptr %371, i64 0, i32 1
  %379 = load ptr, ptr %378, align 8, !tbaa !16
  br label %380

380:                                              ; preds = %377, %373
  %381 = phi ptr [ %379, %377 ], [ %371, %373 ]
  %382 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 2), align 16, !tbaa !5
  %383 = icmp eq ptr %381, %382
  br i1 %383, label %384, label %430

384:                                              ; preds = %380
  tail call fastcc void @vt_init_cfa_base()
  br label %430

385:                                              ; preds = %60
  %386 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 44), align 8, !tbaa !111
  %387 = icmp eq i8 %386, 0
  br i1 %387, label %388, label %430

388:                                              ; preds = %385
  %389 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 5), align 8, !tbaa !5
  %390 = load i32, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 3, i32 2), align 8, !tbaa !112
  %391 = sext i32 %390 to i64
  %392 = tail call ptr @eliminate_regs(ptr noundef %389, i32 noundef 0, ptr noundef null) #21
  %393 = icmp eq ptr %392, %389
  br i1 %393, label %430, label %394

394:                                              ; preds = %388
  %395 = load i32, ptr %392, align 8
  %396 = and i32 %395, 65535
  %397 = icmp eq i32 %396, 49
  br i1 %397, label %398, label %406

398:                                              ; preds = %394
  %399 = getelementptr inbounds %struct.rtx_def, ptr %392, i64 0, i32 1
  %400 = getelementptr inbounds %struct.rtx_def, ptr %392, i64 0, i32 1, i32 0, i32 0, i64 1
  %401 = load ptr, ptr %400, align 8, !tbaa !16
  %402 = getelementptr inbounds %struct.rtx_def, ptr %401, i64 0, i32 1
  %403 = load i64, ptr %402, align 8, !tbaa !16
  %404 = sub nsw i64 %391, %403
  %405 = load ptr, ptr %399, align 8, !tbaa !16
  br label %406

406:                                              ; preds = %398, %394
  %407 = phi ptr [ %405, %398 ], [ %392, %394 ]
  %408 = phi i64 [ %404, %398 ], [ %391, %394 ]
  %409 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 4), align 16, !tbaa !5
  %410 = icmp eq ptr %407, %409
  br i1 %410, label %411, label %430

411:                                              ; preds = %406
  %412 = load ptr, ptr @cfun, align 8, !tbaa !5
  %413 = getelementptr inbounds %struct.function, ptr %412, i64 0, i32 1
  %414 = load ptr, ptr %413, align 8, !tbaa !23
  %415 = load ptr, ptr %414, align 8, !tbaa !25
  %416 = getelementptr i8, ptr %415, i64 8
  %417 = load ptr, ptr %416, align 8, !tbaa !105
  %418 = icmp eq ptr %417, null
  br i1 %418, label %422, label %419

419:                                              ; preds = %411
  %420 = load i32, ptr %417, align 8, !tbaa !106
  %421 = icmp eq i32 %420, 1
  br i1 %421, label %424, label %422

422:                                              ; preds = %419, %411
  tail call void @fancy_abort(ptr noundef nonnull @.str.10, i32 noundef 645, ptr noundef nonnull @.str.2) #21
  %423 = load ptr, ptr %416, align 8, !tbaa !105
  br label %424

424:                                              ; preds = %419, %422
  %425 = phi ptr [ %417, %419 ], [ %423, %422 ]
  %426 = getelementptr inbounds %struct.VEC_edge_base, ptr %425, i64 0, i32 2, i64 0
  %427 = load ptr, ptr %426, align 8, !tbaa !5
  %428 = getelementptr inbounds %struct.edge_def, ptr %427, i64 0, i32 1
  %429 = load ptr, ptr %428, align 8, !tbaa !100
  br label %430

430:                                              ; preds = %380, %384, %369, %388, %424, %406, %385
  %431 = phi i64 [ -1, %385 ], [ %408, %424 ], [ %391, %388 ], [ -1, %406 ], [ -1, %369 ], [ -1, %384 ], [ -1, %380 ]
  %432 = phi ptr [ null, %385 ], [ %429, %424 ], [ null, %388 ], [ null, %406 ], [ null, %369 ], [ null, %384 ], [ null, %380 ]
  store i64 -1, ptr @hard_frame_pointer_adjustment, align 8, !tbaa !70
  %433 = load ptr, ptr @cfun, align 8, !tbaa !5
  %434 = getelementptr inbounds %struct.function, ptr %433, i64 0, i32 1
  %435 = load ptr, ptr %434, align 8, !tbaa !23
  %436 = load ptr, ptr %435, align 8, !tbaa !25
  %437 = getelementptr inbounds %struct.basic_block_def, ptr %436, i64 0, i32 6
  %438 = load ptr, ptr %437, align 8, !tbaa !27
  %439 = getelementptr inbounds %struct.control_flow_graph, ptr %435, i64 0, i32 1
  %440 = load ptr, ptr %439, align 8, !tbaa !29
  %441 = icmp eq ptr %438, %440
  br i1 %441, label %1302, label %442

442:                                              ; preds = %430
  %443 = getelementptr inbounds %struct.adjust_mem_data, ptr %3, i64 0, i32 1
  %444 = getelementptr inbounds %struct.adjust_mem_data, ptr %3, i64 0, i32 2
  %445 = getelementptr inbounds %struct.adjust_mem_data, ptr %3, i64 0, i32 3
  %446 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  br label %447

447:                                              ; preds = %442, %1291
  %448 = phi ptr [ %433, %442 ], [ %1294, %1291 ]
  %449 = phi i32 [ %446, %442 ], [ %1293, %1291 ]
  %450 = phi ptr [ %438, %442 ], [ %1292, %1291 ]
  %451 = icmp eq i32 %449, 0
  br i1 %451, label %463, label %452

452:                                              ; preds = %447
  store ptr @add_with_sets, ptr @cselib_record_sets_hook, align 8, !tbaa !5
  %453 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %454 = icmp eq ptr %453, null
  br i1 %454, label %463, label %455

455:                                              ; preds = %452
  %456 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %457 = and i32 %456, 8
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %463, label %459

459:                                              ; preds = %455
  %460 = call i32 @cselib_get_next_uid() #21
  %461 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %453, ptr noundef nonnull @.str.9, i32 noundef %460)
  %462 = load ptr, ptr @cfun, align 8, !tbaa !5
  br label %463

463:                                              ; preds = %452, %455, %459, %447
  %464 = phi ptr [ %448, %452 ], [ %448, %455 ], [ %462, %459 ], [ %448, %447 ]
  %465 = getelementptr inbounds %struct.basic_block_def, ptr %450, i64 0, i32 6
  %466 = load ptr, ptr %465, align 8, !tbaa !27
  %467 = getelementptr inbounds %struct.function, ptr %464, i64 0, i32 1
  %468 = load ptr, ptr %467, align 8, !tbaa !23
  %469 = getelementptr inbounds %struct.control_flow_graph, ptr %468, i64 0, i32 1
  %470 = load ptr, ptr %469, align 8, !tbaa !29
  %471 = icmp eq ptr %466, %470
  br i1 %471, label %499, label %472

472:                                              ; preds = %463, %490
  %473 = phi ptr [ %493, %490 ], [ %466, %463 ]
  %474 = phi ptr [ %492, %490 ], [ %465, %463 ]
  %475 = phi ptr [ %491, %490 ], [ %450, %463 ]
  %476 = load ptr, ptr %473, align 8, !tbaa !113
  %477 = icmp eq ptr %476, null
  br i1 %477, label %499, label %478

478:                                              ; preds = %472
  %479 = load i32, ptr %476, align 8, !tbaa !106
  %480 = icmp eq i32 %479, 1
  br i1 %480, label %481, label %499

481:                                              ; preds = %478
  %482 = call ptr @find_edge(ptr noundef nonnull %475, ptr noundef nonnull %473) #21
  %483 = icmp eq ptr %482, null
  %484 = load ptr, ptr @cfun, align 8, !tbaa !5
  br i1 %483, label %499, label %485

485:                                              ; preds = %481
  %486 = getelementptr inbounds %struct.edge_def, ptr %482, i64 0, i32 7
  %487 = load i32, ptr %486, align 8, !tbaa !114
  %488 = and i32 %487, 1
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %499, label %490

490:                                              ; preds = %485
  %491 = load ptr, ptr %474, align 8, !tbaa !27
  %492 = getelementptr inbounds %struct.basic_block_def, ptr %491, i64 0, i32 6
  %493 = load ptr, ptr %492, align 8, !tbaa !27
  %494 = getelementptr inbounds %struct.function, ptr %484, i64 0, i32 1
  %495 = load ptr, ptr %494, align 8, !tbaa !23
  %496 = getelementptr inbounds %struct.control_flow_graph, ptr %495, i64 0, i32 1
  %497 = load ptr, ptr %496, align 8, !tbaa !29
  %498 = icmp eq ptr %493, %497
  br i1 %498, label %499, label %472

499:                                              ; preds = %472, %481, %485, %490, %478, %463
  %500 = phi ptr [ %450, %463 ], [ %475, %472 ], [ %475, %481 ], [ %475, %485 ], [ %491, %490 ], [ %475, %478 ]
  %501 = getelementptr inbounds %struct.basic_block_def, ptr %500, i64 0, i32 6
  %502 = load ptr, ptr %501, align 8, !tbaa !27
  %503 = icmp eq ptr %450, %502
  br i1 %503, label %1283, label %504

504:                                              ; preds = %499, %1278
  %505 = phi ptr [ %1280, %1278 ], [ %450, %499 ]
  %506 = phi i64 [ %1275, %1278 ], [ 0, %499 ]
  %507 = getelementptr %struct.basic_block_def, ptr %505, i64 0, i32 2
  %508 = load ptr, ptr %507, align 8, !tbaa !39
  %509 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %508, i64 0, i32 2
  %510 = load i64, ptr %509, align 8, !tbaa !94
  %511 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %508, i64 0, i32 1
  %512 = load i64, ptr %511, align 8, !tbaa !93
  store i64 %512, ptr %509, align 8, !tbaa !94
  %513 = getelementptr inbounds %struct.basic_block_def, ptr %505, i64 0, i32 7
  %514 = load ptr, ptr %513, align 8, !tbaa !16
  %515 = load ptr, ptr %514, align 8, !tbaa !16
  %516 = getelementptr inbounds %struct.rtl_bb_info, ptr %514, i64 0, i32 1
  %517 = load ptr, ptr %516, align 8, !tbaa !32
  %518 = getelementptr inbounds %struct.rtx_def, ptr %517, i64 0, i32 1, i32 0, i32 0, i64 2
  %519 = load ptr, ptr %518, align 8, !tbaa !16
  %520 = icmp eq ptr %515, %519
  br i1 %520, label %1273, label %521

521:                                              ; preds = %504
  %522 = getelementptr i8, ptr %505, i64 80
  %523 = icmp eq ptr %505, %432
  br label %524

524:                                              ; preds = %521, %1259
  %525 = phi ptr [ %515, %521 ], [ %1262, %1259 ]
  %526 = phi i64 [ %506, %521 ], [ %1260, %1259 ]
  %527 = load i32, ptr %525, align 8
  %528 = and i32 %527, 65535
  %529 = add nsw i32 %528, -7
  %530 = icmp ult i32 %529, 4
  br i1 %530, label %531, label %1259

531:                                              ; preds = %524
  %532 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 41), align 1, !tbaa !84
  %533 = icmp eq i8 %532, 0
  br i1 %533, label %534, label %840

534:                                              ; preds = %531
  %535 = getelementptr inbounds %struct.rtx_def, ptr %525, i64 1
  %536 = load ptr, ptr %535, align 8, !tbaa !16
  %537 = and i32 %527, 1073741824
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %545, label %539

539:                                              ; preds = %534
  %540 = call ptr @find_reg_note(ptr noundef nonnull %525, i32 noundef 17, ptr noundef null) #21
  %541 = icmp eq ptr %540, null
  br i1 %541, label %545, label %542

542:                                              ; preds = %539
  %543 = getelementptr inbounds %struct.rtx_def, ptr %540, i64 0, i32 1
  %544 = load ptr, ptr %543, align 8, !tbaa !16
  br label %545

545:                                              ; preds = %542, %539, %534
  %546 = phi ptr [ %536, %534 ], [ %544, %542 ], [ %536, %539 ]
  %547 = load i32, ptr %546, align 8
  %548 = trunc i32 %547 to i16
  switch i16 %548, label %840 [
    i16 23, label %549
    i16 15, label %655
    i16 5, label %655
  ]

549:                                              ; preds = %545
  %550 = getelementptr i8, ptr %546, i64 8
  %551 = load ptr, ptr %550, align 8, !tbaa !16
  %552 = getelementptr i8, ptr %546, i64 16
  %553 = load ptr, ptr %552, align 8, !tbaa !16
  %554 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 2), align 16, !tbaa !5
  %555 = icmp eq ptr %554, %551
  br i1 %555, label %556, label %577

556:                                              ; preds = %549
  %557 = load i32, ptr %553, align 8
  %558 = and i32 %557, 65535
  %559 = icmp eq i32 %558, 50
  %560 = add nsw i32 %558, -49
  %561 = icmp ult i32 %560, 2
  br i1 %561, label %562, label %840

562:                                              ; preds = %556
  %563 = getelementptr inbounds %struct.rtx_def, ptr %553, i64 0, i32 1
  %564 = load ptr, ptr %563, align 8, !tbaa !16
  %565 = icmp eq ptr %564, %551
  br i1 %565, label %566, label %840

566:                                              ; preds = %562
  %567 = getelementptr inbounds %struct.rtx_def, ptr %553, i64 0, i32 1, i32 0, i32 0, i64 1
  %568 = load ptr, ptr %567, align 8, !tbaa !16
  %569 = load i32, ptr %568, align 8
  %570 = and i32 %569, 65535
  %571 = icmp eq i32 %570, 30
  br i1 %571, label %572, label %840

572:                                              ; preds = %566
  %573 = getelementptr inbounds %struct.rtx_def, ptr %568, i64 0, i32 1
  %574 = load i64, ptr %573, align 8, !tbaa !16
  %575 = sub nsw i64 0, %574
  %576 = select i1 %559, i64 %574, i64 %575
  br label %840

577:                                              ; preds = %549
  %578 = load i32, ptr %551, align 8
  %579 = and i32 %578, 65535
  %580 = icmp eq i32 %579, 43
  br i1 %580, label %581, label %840

581:                                              ; preds = %577
  %582 = getelementptr inbounds %struct.rtx_def, ptr %551, i64 0, i32 1
  %583 = load ptr, ptr %582, align 8, !tbaa !16
  %584 = load i32, ptr %583, align 8
  %585 = and i32 %584, 65535
  %586 = trunc i32 %584 to i16
  switch i16 %586, label %840 [
    i16 78, label %587
    i16 79, label %587
    i16 74, label %609
    i16 76, label %620
    i16 75, label %631
    i16 77, label %643
  ]

587:                                              ; preds = %581, %581
  %588 = getelementptr inbounds %struct.rtx_def, ptr %583, i64 0, i32 1
  %589 = load ptr, ptr %588, align 8, !tbaa !16
  %590 = icmp eq ptr %589, %554
  br i1 %590, label %591, label %840

591:                                              ; preds = %587
  %592 = getelementptr inbounds %struct.rtx_def, ptr %583, i64 0, i32 1, i32 0, i32 0, i64 1
  %593 = load ptr, ptr %592, align 8, !tbaa !16
  %594 = getelementptr inbounds %struct.rtx_def, ptr %593, i64 0, i32 1, i32 0, i32 0, i64 1
  %595 = load ptr, ptr %594, align 8, !tbaa !16
  %596 = load i32, ptr %593, align 8
  %597 = and i32 %596, 65535
  %598 = icmp eq i32 %597, 49
  br i1 %598, label %599, label %603

599:                                              ; preds = %591
  %600 = load i32, ptr %595, align 8
  %601 = and i32 %600, 65535
  %602 = icmp eq i32 %601, 30
  br i1 %602, label %604, label %603

603:                                              ; preds = %599, %591
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 537, ptr noundef nonnull @.str.2) #21
  br label %604

604:                                              ; preds = %603, %599
  %605 = icmp eq i32 %585, 78
  %606 = getelementptr inbounds %struct.rtx_def, ptr %595, i64 0, i32 1
  %607 = load i64, ptr %606, align 8, !tbaa !16
  %608 = sub nsw i64 0, %607
  br i1 %605, label %791, label %840

609:                                              ; preds = %581
  %610 = getelementptr inbounds %struct.rtx_def, ptr %583, i64 0, i32 1
  %611 = load ptr, ptr %610, align 8, !tbaa !16
  %612 = icmp eq ptr %611, %554
  br i1 %612, label %613, label %840

613:                                              ; preds = %609
  %614 = lshr i32 %578, 16
  %615 = and i32 %614, 255
  %616 = zext i32 %615 to i64
  %617 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %616
  %618 = load i8, ptr %617, align 1, !tbaa !16
  %619 = zext i8 %618 to i64
  br label %791

620:                                              ; preds = %581
  %621 = getelementptr inbounds %struct.rtx_def, ptr %583, i64 0, i32 1
  %622 = load ptr, ptr %621, align 8, !tbaa !16
  %623 = icmp eq ptr %622, %554
  br i1 %623, label %624, label %840

624:                                              ; preds = %620
  %625 = lshr i32 %578, 16
  %626 = and i32 %625, 255
  %627 = zext i32 %626 to i64
  %628 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %627
  %629 = load i8, ptr %628, align 1, !tbaa !16
  %630 = zext i8 %629 to i64
  br label %840

631:                                              ; preds = %581
  %632 = getelementptr inbounds %struct.rtx_def, ptr %583, i64 0, i32 1
  %633 = load ptr, ptr %632, align 8, !tbaa !16
  %634 = icmp eq ptr %633, %554
  br i1 %634, label %635, label %840

635:                                              ; preds = %631
  %636 = lshr i32 %578, 16
  %637 = and i32 %636, 255
  %638 = zext i32 %637 to i64
  %639 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %638
  %640 = load i8, ptr %639, align 1, !tbaa !16
  %641 = zext i8 %640 to i64
  %642 = sub nsw i64 0, %641
  br label %791

643:                                              ; preds = %581
  %644 = getelementptr inbounds %struct.rtx_def, ptr %583, i64 0, i32 1
  %645 = load ptr, ptr %644, align 8, !tbaa !16
  %646 = icmp eq ptr %645, %554
  br i1 %646, label %647, label %840

647:                                              ; preds = %643
  %648 = lshr i32 %578, 16
  %649 = and i32 %648, 255
  %650 = zext i32 %649 to i64
  %651 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %650
  %652 = load i8, ptr %651, align 1, !tbaa !16
  %653 = zext i8 %652 to i64
  %654 = sub nsw i64 0, %653
  br label %840

655:                                              ; preds = %545, %545
  %656 = getelementptr inbounds %struct.rtx_def, ptr %546, i64 0, i32 1
  %657 = load ptr, ptr %656, align 8, !tbaa !16
  %658 = load i32, ptr %657, align 8, !tbaa !101
  %659 = icmp sgt i32 %658, 0
  br i1 %659, label %660, label %840

660:                                              ; preds = %655
  %661 = zext i32 %658 to i64
  br label %662

662:                                              ; preds = %787, %660
  %663 = phi i64 [ 0, %660 ], [ %788, %787 ]
  %664 = phi i64 [ 0, %660 ], [ %789, %787 ]
  %665 = phi i64 [ %661, %660 ], [ %666, %787 ]
  %666 = add nsw i64 %665, -1
  %667 = load ptr, ptr %656, align 8, !tbaa !16
  %668 = and i64 %666, 4294967295
  %669 = getelementptr inbounds %struct.rtvec_def, ptr %667, i64 0, i32 1, i64 %668
  %670 = load ptr, ptr %669, align 8, !tbaa !5
  %671 = load i32, ptr %670, align 8
  %672 = and i32 %671, 65535
  %673 = icmp eq i32 %672, 23
  br i1 %673, label %674, label %787

674:                                              ; preds = %662
  %675 = getelementptr i8, ptr %670, i64 8
  %676 = load ptr, ptr %675, align 8, !tbaa !16
  %677 = getelementptr i8, ptr %670, i64 16
  %678 = load ptr, ptr %677, align 8, !tbaa !16
  %679 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 2), align 16, !tbaa !5
  %680 = icmp eq ptr %679, %676
  br i1 %680, label %681, label %704

681:                                              ; preds = %674
  %682 = load i32, ptr %678, align 8
  %683 = and i32 %682, 65535
  %684 = icmp eq i32 %683, 50
  %685 = add nsw i32 %683, -49
  %686 = icmp ult i32 %685, 2
  br i1 %686, label %687, label %787

687:                                              ; preds = %681
  %688 = getelementptr inbounds %struct.rtx_def, ptr %678, i64 0, i32 1
  %689 = load ptr, ptr %688, align 8, !tbaa !16
  %690 = icmp eq ptr %689, %676
  br i1 %690, label %691, label %787

691:                                              ; preds = %687
  %692 = getelementptr inbounds %struct.rtx_def, ptr %678, i64 0, i32 1, i32 0, i32 0, i64 1
  %693 = load ptr, ptr %692, align 8, !tbaa !16
  %694 = load i32, ptr %693, align 8
  %695 = and i32 %694, 65535
  %696 = icmp eq i32 %695, 30
  br i1 %696, label %697, label %787

697:                                              ; preds = %691
  %698 = getelementptr inbounds %struct.rtx_def, ptr %693, i64 0, i32 1
  %699 = load i64, ptr %698, align 8, !tbaa !16
  br i1 %684, label %700, label %702

700:                                              ; preds = %697
  %701 = add nsw i64 %699, %663
  br label %787

702:                                              ; preds = %697
  %703 = sub nsw i64 %663, %699
  br label %787

704:                                              ; preds = %674
  %705 = load i32, ptr %676, align 8
  %706 = and i32 %705, 65535
  %707 = icmp eq i32 %706, 43
  br i1 %707, label %708, label %787

708:                                              ; preds = %704
  %709 = getelementptr inbounds %struct.rtx_def, ptr %676, i64 0, i32 1
  %710 = load ptr, ptr %709, align 8, !tbaa !16
  %711 = load i32, ptr %710, align 8
  %712 = and i32 %711, 65535
  %713 = trunc i32 %711 to i16
  switch i16 %713, label %787 [
    i16 78, label %714
    i16 79, label %714
    i16 74, label %739
    i16 76, label %751
    i16 75, label %763
    i16 77, label %775
  ]

714:                                              ; preds = %708, %708
  %715 = getelementptr inbounds %struct.rtx_def, ptr %710, i64 0, i32 1
  %716 = load ptr, ptr %715, align 8, !tbaa !16
  %717 = icmp eq ptr %716, %679
  br i1 %717, label %718, label %787

718:                                              ; preds = %714
  %719 = getelementptr inbounds %struct.rtx_def, ptr %710, i64 0, i32 1, i32 0, i32 0, i64 1
  %720 = load ptr, ptr %719, align 8, !tbaa !16
  %721 = getelementptr inbounds %struct.rtx_def, ptr %720, i64 0, i32 1, i32 0, i32 0, i64 1
  %722 = load ptr, ptr %721, align 8, !tbaa !16
  %723 = load i32, ptr %720, align 8
  %724 = and i32 %723, 65535
  %725 = icmp eq i32 %724, 49
  br i1 %725, label %726, label %730

726:                                              ; preds = %718
  %727 = load i32, ptr %722, align 8
  %728 = and i32 %727, 65535
  %729 = icmp eq i32 %728, 30
  br i1 %729, label %731, label %730

730:                                              ; preds = %726, %718
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 537, ptr noundef nonnull @.str.2) #21
  br label %731

731:                                              ; preds = %730, %726
  %732 = icmp eq i32 %712, 78
  %733 = getelementptr inbounds %struct.rtx_def, ptr %722, i64 0, i32 1
  %734 = load i64, ptr %733, align 8, !tbaa !16
  br i1 %732, label %735, label %737

735:                                              ; preds = %731
  %736 = sub nsw i64 %664, %734
  br label %787

737:                                              ; preds = %731
  %738 = sub nsw i64 %663, %734
  br label %787

739:                                              ; preds = %708
  %740 = getelementptr inbounds %struct.rtx_def, ptr %710, i64 0, i32 1
  %741 = load ptr, ptr %740, align 8, !tbaa !16
  %742 = icmp eq ptr %741, %679
  br i1 %742, label %743, label %787

743:                                              ; preds = %739
  %744 = lshr i32 %705, 16
  %745 = and i32 %744, 255
  %746 = zext i32 %745 to i64
  %747 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %746
  %748 = load i8, ptr %747, align 1, !tbaa !16
  %749 = zext i8 %748 to i64
  %750 = add nsw i64 %664, %749
  br label %787

751:                                              ; preds = %708
  %752 = getelementptr inbounds %struct.rtx_def, ptr %710, i64 0, i32 1
  %753 = load ptr, ptr %752, align 8, !tbaa !16
  %754 = icmp eq ptr %753, %679
  br i1 %754, label %755, label %787

755:                                              ; preds = %751
  %756 = lshr i32 %705, 16
  %757 = and i32 %756, 255
  %758 = zext i32 %757 to i64
  %759 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %758
  %760 = load i8, ptr %759, align 1, !tbaa !16
  %761 = zext i8 %760 to i64
  %762 = add nsw i64 %663, %761
  br label %787

763:                                              ; preds = %708
  %764 = getelementptr inbounds %struct.rtx_def, ptr %710, i64 0, i32 1
  %765 = load ptr, ptr %764, align 8, !tbaa !16
  %766 = icmp eq ptr %765, %679
  br i1 %766, label %767, label %787

767:                                              ; preds = %763
  %768 = lshr i32 %705, 16
  %769 = and i32 %768, 255
  %770 = zext i32 %769 to i64
  %771 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %770
  %772 = load i8, ptr %771, align 1, !tbaa !16
  %773 = zext i8 %772 to i64
  %774 = sub nsw i64 %664, %773
  br label %787

775:                                              ; preds = %708
  %776 = getelementptr inbounds %struct.rtx_def, ptr %710, i64 0, i32 1
  %777 = load ptr, ptr %776, align 8, !tbaa !16
  %778 = icmp eq ptr %777, %679
  br i1 %778, label %779, label %787

779:                                              ; preds = %775
  %780 = lshr i32 %705, 16
  %781 = and i32 %780, 255
  %782 = zext i32 %781 to i64
  %783 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %782
  %784 = load i8, ptr %783, align 1, !tbaa !16
  %785 = zext i8 %784 to i64
  %786 = sub nsw i64 %663, %785
  br label %787

787:                                              ; preds = %779, %775, %767, %763, %755, %751, %743, %739, %737, %735, %714, %708, %704, %702, %700, %691, %687, %681, %662
  %788 = phi i64 [ %663, %662 ], [ %701, %700 ], [ %703, %702 ], [ %663, %691 ], [ %663, %687 ], [ %663, %681 ], [ %663, %708 ], [ %786, %779 ], [ %663, %775 ], [ %663, %767 ], [ %663, %763 ], [ %762, %755 ], [ %663, %751 ], [ %663, %743 ], [ %663, %739 ], [ %663, %735 ], [ %738, %737 ], [ %663, %714 ], [ %663, %704 ]
  %789 = phi i64 [ %664, %662 ], [ %664, %700 ], [ %664, %702 ], [ %664, %691 ], [ %664, %687 ], [ %664, %681 ], [ %664, %708 ], [ %664, %779 ], [ %664, %775 ], [ %774, %767 ], [ %664, %763 ], [ %664, %755 ], [ %664, %751 ], [ %750, %743 ], [ %664, %739 ], [ %736, %735 ], [ %664, %737 ], [ %664, %714 ], [ %664, %704 ]
  %790 = icmp ugt i64 %665, 1
  br i1 %790, label %662, label %791, !llvm.loop !103

791:                                              ; preds = %787, %604, %635, %613
  %792 = phi i64 [ 0, %635 ], [ 0, %613 ], [ 0, %604 ], [ %788, %787 ]
  %793 = phi i64 [ %642, %635 ], [ %619, %613 ], [ %608, %604 ], [ %789, %787 ]
  %794 = icmp eq i64 %793, 0
  br i1 %794, label %840, label %795

795:                                              ; preds = %791
  %796 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %797 = icmp eq ptr %796, null
  br i1 %797, label %816, label %798

798:                                              ; preds = %795
  %799 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %800 = and i32 %799, 8
  %801 = icmp eq i32 %800, 0
  br i1 %801, label %816, label %802

802:                                              ; preds = %798
  %803 = load ptr, ptr %535, align 8, !tbaa !16
  %804 = load ptr, ptr %507, align 8, !tbaa !39
  %805 = load i32, ptr %522, align 8, !tbaa !38
  %806 = load ptr, ptr %804, align 8, !tbaa !62
  %807 = icmp eq ptr %806, null
  br i1 %807, label %810, label %808

808:                                              ; preds = %802
  %809 = load i32, ptr %806, align 8, !tbaa !64
  br label %810

810:                                              ; preds = %802, %808
  %811 = phi i32 [ %809, %808 ], [ 0, %802 ]
  %812 = getelementptr inbounds %struct.rtx_def, ptr %525, i64 0, i32 1
  %813 = load i32, ptr %812, align 8, !tbaa !16
  %814 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %796, ptr noundef nonnull @.str.11, i32 noundef %805, i32 noundef %811, i32 noundef %813, ptr noundef nonnull @.str.21)
  call void @print_inline_rtx(ptr noundef nonnull %796, ptr noundef %803, i32 noundef 2) #21
  %815 = call i32 @fputc(i32 noundef 10, ptr noundef nonnull %796)
  br label %816

816:                                              ; preds = %810, %798, %795
  %817 = load ptr, ptr %507, align 8, !tbaa !39
  %818 = load ptr, ptr %817, align 8, !tbaa !5
  %819 = icmp eq ptr %818, null
  br i1 %819, label %825, label %820

820:                                              ; preds = %816
  %821 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %818, i64 0, i32 1
  %822 = load i32, ptr %821, align 4, !tbaa !115
  %823 = load i32, ptr %818, align 8, !tbaa !64
  %824 = icmp eq i32 %822, %823
  br i1 %824, label %825, label %828

825:                                              ; preds = %820, %816
  %826 = call ptr @vec_heap_o_reserve(ptr noundef %818, i32 noundef 1, i64 noundef 8, i64 noundef 24) #21
  store ptr %826, ptr %817, align 8, !tbaa !5
  %827 = load i32, ptr %826, align 8, !tbaa !64
  br label %828

828:                                              ; preds = %820, %825
  %829 = phi i32 [ %823, %820 ], [ %827, %825 ]
  %830 = phi ptr [ %818, %820 ], [ %826, %825 ]
  %831 = add i32 %829, 1
  store i32 %831, ptr %830, align 8, !tbaa !64
  %832 = zext i32 %829 to i64
  %833 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %830, i64 0, i32 2, i64 %832
  store i32 9, ptr %833, align 8, !tbaa.struct !116
  %834 = getelementptr inbounds i8, ptr %833, i64 8
  store ptr %525, ptr %834, align 8, !tbaa.struct !117
  %835 = getelementptr inbounds i8, ptr %833, i64 16
  store i64 %793, ptr %835, align 8, !tbaa.struct !118
  %836 = load ptr, ptr %507, align 8, !tbaa !39
  %837 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %836, i64 0, i32 2
  %838 = load i64, ptr %837, align 8, !tbaa !94
  %839 = add nsw i64 %838, %793
  store i64 %839, ptr %837, align 8, !tbaa !94
  br label %840

840:                                              ; preds = %604, %572, %577, %587, %609, %620, %624, %631, %643, %647, %581, %556, %562, %566, %655, %545, %791, %828, %531
  %841 = phi i64 [ %792, %791 ], [ %792, %828 ], [ %526, %531 ], [ 0, %577 ], [ 0, %587 ], [ 0, %609 ], [ 0, %620 ], [ %630, %624 ], [ 0, %631 ], [ 0, %643 ], [ %654, %647 ], [ 0, %581 ], [ 0, %556 ], [ 0, %562 ], [ 0, %566 ], [ 0, %655 ], [ 0, %545 ], [ %576, %572 ], [ %608, %604 ]
  store i1 false, ptr @cselib_hook_called, align 1
  %842 = load ptr, ptr %507, align 8, !tbaa !39
  %843 = getelementptr i8, ptr %842, i64 456
  %844 = load i64, ptr %843, align 8, !tbaa !94
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #21
  store i32 0, ptr %443, align 4, !tbaa !119
  %845 = sub nsw i64 0, %844
  store i64 %845, ptr %444, align 8, !tbaa !121
  store ptr null, ptr %445, align 8, !tbaa !122
  store i8 1, ptr %3, align 8, !tbaa !123
  %846 = getelementptr inbounds %struct.rtx_def, ptr %525, i64 1
  %847 = load ptr, ptr %846, align 8, !tbaa !16
  call void @note_stores(ptr noundef %847, ptr noundef nonnull @adjust_mem_stores, ptr noundef nonnull %3) #21
  store i8 0, ptr %3, align 8, !tbaa !123
  call void @note_uses(ptr noundef nonnull %846, ptr noundef nonnull @adjust_mem_uses, ptr noundef nonnull %3) #21
  %848 = load i32, ptr %525, align 8
  %849 = and i32 %848, 65535
  %850 = add nsw i32 %849, -7
  %851 = icmp ult i32 %850, 4
  br i1 %851, label %852, label %881

852:                                              ; preds = %840
  %853 = load ptr, ptr %846, align 8, !tbaa !16
  %854 = load i32, ptr %853, align 8
  %855 = and i32 %854, 65535
  %856 = icmp eq i32 %855, 23
  br i1 %856, label %860, label %857

857:                                              ; preds = %852
  %858 = call ptr @single_set_2(ptr noundef nonnull %525, ptr noundef nonnull %853) #21
  %859 = icmp eq ptr %858, null
  br i1 %859, label %881, label %860

860:                                              ; preds = %857, %852
  %861 = phi ptr [ %858, %857 ], [ %853, %852 ]
  %862 = getelementptr inbounds %struct.rtx_def, ptr %861, i64 0, i32 1, i32 0, i32 0, i64 1
  %863 = load ptr, ptr %862, align 8, !tbaa !16
  %864 = load i32, ptr %863, align 8
  %865 = and i32 %864, 67174399
  %866 = icmp eq i32 %865, 67108907
  br i1 %866, label %867, label %881

867:                                              ; preds = %860
  %868 = call ptr @find_reg_equal_equiv_note(ptr noundef nonnull %525) #21
  %869 = icmp eq ptr %868, null
  br i1 %869, label %881, label %870

870:                                              ; preds = %867
  %871 = getelementptr inbounds %struct.rtx_def, ptr %868, i64 0, i32 1
  %872 = load ptr, ptr %871, align 8, !tbaa !16
  %873 = load i32, ptr %872, align 8
  %874 = and i32 %873, 65535
  %875 = zext i32 %874 to i64
  %876 = getelementptr inbounds [139 x i32], ptr @rtx_class, i64 0, i64 %875
  %877 = load i32, ptr %876, align 4, !tbaa !16
  %878 = icmp eq i32 %877, 9
  br i1 %878, label %879, label %881

879:                                              ; preds = %870
  %880 = call zeroext i8 @validate_change(ptr noundef null, ptr noundef nonnull %862, ptr noundef nonnull %872, i8 noundef zeroext 1) #21
  br label %881

881:                                              ; preds = %879, %870, %867, %860, %857, %840
  %882 = load ptr, ptr %445, align 8, !tbaa !122
  %883 = icmp eq ptr %882, null
  br i1 %883, label %979, label %884

884:                                              ; preds = %881
  %885 = load ptr, ptr %846, align 8, !tbaa !5
  %886 = load i32, ptr %885, align 8
  %887 = and i32 %886, 65535
  %888 = icmp eq i32 %887, 14
  %889 = getelementptr inbounds %struct.rtx_def, ptr %885, i64 0, i32 1, i32 0, i32 0, i64 1
  %890 = select i1 %888, ptr %889, ptr %846
  %891 = load ptr, ptr %890, align 8, !tbaa !5
  %892 = load i32, ptr %891, align 8
  %893 = and i32 %892, 65535
  %894 = icmp eq i32 %893, 15
  br i1 %894, label %895, label %899

895:                                              ; preds = %884
  %896 = getelementptr inbounds %struct.rtx_def, ptr %891, i64 0, i32 1
  %897 = load ptr, ptr %896, align 8, !tbaa !16
  %898 = load i32, ptr %897, align 8, !tbaa !101
  br label %899

899:                                              ; preds = %895, %884
  %900 = phi i32 [ %898, %895 ], [ 1, %884 ]
  br label %901

901:                                              ; preds = %901, %899
  %902 = phi i32 [ 0, %899 ], [ %906, %901 ]
  %903 = phi ptr [ %882, %899 ], [ %905, %901 ]
  %904 = getelementptr inbounds %struct.rtx_def, ptr %903, i64 0, i32 1, i32 0, i32 0, i64 1
  %905 = load ptr, ptr %904, align 8, !tbaa !16
  %906 = add nuw nsw i32 %902, 1
  %907 = icmp eq ptr %905, null
  br i1 %907, label %908, label %901, !llvm.loop !124

908:                                              ; preds = %901
  %909 = add nsw i32 %906, %900
  %910 = call ptr @rtvec_alloc(i32 noundef %909) #21
  %911 = call ptr @gen_rtx_fmt_E_stat(i32 noundef 15, i32 noundef 0, ptr noundef %910) #21
  %912 = load ptr, ptr %890, align 8, !tbaa !5
  %913 = load i32, ptr %912, align 8
  %914 = and i32 %913, 65535
  %915 = icmp eq i32 %914, 15
  br i1 %915, label %916, label %946

916:                                              ; preds = %908
  %917 = icmp sgt i32 %900, 0
  br i1 %917, label %918, label %961

918:                                              ; preds = %916
  %919 = getelementptr inbounds %struct.rtx_def, ptr %911, i64 0, i32 1
  %920 = zext i32 %900 to i64
  %921 = and i64 %920, 1
  %922 = icmp eq i32 %900, 1
  br i1 %922, label %950, label %923

923:                                              ; preds = %918
  %924 = and i64 %920, 4294967294
  br label %925

925:                                              ; preds = %925, %923
  %926 = phi i64 [ 0, %923 ], [ %943, %925 ]
  %927 = phi i64 [ 0, %923 ], [ %944, %925 ]
  %928 = load ptr, ptr %890, align 8, !tbaa !5
  %929 = getelementptr inbounds %struct.rtx_def, ptr %928, i64 0, i32 1
  %930 = load ptr, ptr %929, align 8, !tbaa !16
  %931 = getelementptr inbounds %struct.rtvec_def, ptr %930, i64 0, i32 1, i64 %926
  %932 = load ptr, ptr %931, align 8, !tbaa !5
  %933 = load ptr, ptr %919, align 8, !tbaa !16
  %934 = getelementptr inbounds %struct.rtvec_def, ptr %933, i64 0, i32 1, i64 %926
  store ptr %932, ptr %934, align 8, !tbaa !5
  %935 = or i64 %926, 1
  %936 = load ptr, ptr %890, align 8, !tbaa !5
  %937 = getelementptr inbounds %struct.rtx_def, ptr %936, i64 0, i32 1
  %938 = load ptr, ptr %937, align 8, !tbaa !16
  %939 = getelementptr inbounds %struct.rtvec_def, ptr %938, i64 0, i32 1, i64 %935
  %940 = load ptr, ptr %939, align 8, !tbaa !5
  %941 = load ptr, ptr %919, align 8, !tbaa !16
  %942 = getelementptr inbounds %struct.rtvec_def, ptr %941, i64 0, i32 1, i64 %935
  store ptr %940, ptr %942, align 8, !tbaa !5
  %943 = add nuw nsw i64 %926, 2
  %944 = add i64 %927, 2
  %945 = icmp eq i64 %944, %924
  br i1 %945, label %950, label %925, !llvm.loop !125

946:                                              ; preds = %908
  %947 = getelementptr inbounds %struct.rtx_def, ptr %911, i64 0, i32 1
  %948 = load ptr, ptr %947, align 8, !tbaa !16
  %949 = getelementptr inbounds %struct.rtvec_def, ptr %948, i64 0, i32 1
  store ptr %912, ptr %949, align 8, !tbaa !5
  br label %961

950:                                              ; preds = %925, %918
  %951 = phi i64 [ 0, %918 ], [ %943, %925 ]
  %952 = icmp eq i64 %921, 0
  br i1 %952, label %961, label %953

953:                                              ; preds = %950
  %954 = load ptr, ptr %890, align 8, !tbaa !5
  %955 = getelementptr inbounds %struct.rtx_def, ptr %954, i64 0, i32 1
  %956 = load ptr, ptr %955, align 8, !tbaa !16
  %957 = getelementptr inbounds %struct.rtvec_def, ptr %956, i64 0, i32 1, i64 %951
  %958 = load ptr, ptr %957, align 8, !tbaa !5
  %959 = load ptr, ptr %919, align 8, !tbaa !16
  %960 = getelementptr inbounds %struct.rtvec_def, ptr %959, i64 0, i32 1, i64 %951
  store ptr %958, ptr %960, align 8, !tbaa !5
  br label %961

961:                                              ; preds = %953, %950, %946, %916
  %962 = load ptr, ptr %445, align 8, !tbaa !122
  %963 = getelementptr inbounds %struct.rtx_def, ptr %911, i64 0, i32 1
  %964 = sext i32 %900 to i64
  %965 = sext i32 %909 to i64
  br label %966

966:                                              ; preds = %966, %961
  %967 = phi i64 [ %964, %961 ], [ %973, %966 ]
  %968 = phi ptr [ %962, %961 ], [ %975, %966 ]
  %969 = getelementptr inbounds %struct.rtx_def, ptr %968, i64 0, i32 1
  %970 = load ptr, ptr %969, align 8, !tbaa !16
  %971 = load ptr, ptr %963, align 8, !tbaa !16
  %972 = getelementptr inbounds %struct.rtvec_def, ptr %971, i64 0, i32 1, i64 %967
  store ptr %970, ptr %972, align 8, !tbaa !5
  %973 = add nsw i64 %967, 1
  %974 = getelementptr inbounds %struct.rtx_def, ptr %968, i64 0, i32 1, i32 0, i32 0, i64 1
  %975 = load ptr, ptr %974, align 8, !tbaa !16
  %976 = icmp slt i64 %973, %965
  br i1 %976, label %966, label %977, !llvm.loop !126

977:                                              ; preds = %966
  call void @free_EXPR_LIST_list(ptr noundef nonnull %445) #21
  %978 = call zeroext i8 @validate_change(ptr noundef null, ptr noundef nonnull %890, ptr noundef nonnull %911, i8 noundef zeroext 1) #21
  br label %979

979:                                              ; preds = %881, %977
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #21
  %980 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %981 = icmp eq i32 %980, 0
  br i1 %981, label %992, label %982

982:                                              ; preds = %979
  call void @cselib_process_insn(ptr noundef nonnull %525) #21
  %983 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %984 = icmp eq ptr %983, null
  br i1 %984, label %992, label %985

985:                                              ; preds = %982
  %986 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %987 = and i32 %986, 8
  %988 = icmp eq i32 %987, 0
  br i1 %988, label %992, label %989

989:                                              ; preds = %985
  %990 = call i32 @print_rtl_single(ptr noundef nonnull %983, ptr noundef nonnull %525) #21
  %991 = load ptr, ptr @dump_file, align 8, !tbaa !5
  call void @dump_cselib_table(ptr noundef %991) #21
  br label %992

992:                                              ; preds = %982, %985, %989, %979
  %993 = load i1, ptr @cselib_hook_called, align 1
  br i1 %993, label %995, label %994

994:                                              ; preds = %992
  call void @add_with_sets(ptr noundef nonnull %525, ptr noundef null, i32 noundef 0)
  br label %995

995:                                              ; preds = %994, %992
  call void @cancel_changes(i32 noundef 0) #21
  %996 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 41), align 1, !tbaa !84
  %997 = icmp eq i8 %996, 0
  %998 = icmp ne i64 %841, 0
  %999 = select i1 %997, i1 %998, i1 false
  br i1 %999, label %1000, label %1045

1000:                                             ; preds = %995
  %1001 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %1002 = icmp eq ptr %1001, null
  br i1 %1002, label %1021, label %1003

1003:                                             ; preds = %1000
  %1004 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %1005 = and i32 %1004, 8
  %1006 = icmp eq i32 %1005, 0
  br i1 %1006, label %1021, label %1007

1007:                                             ; preds = %1003
  %1008 = load ptr, ptr %846, align 8, !tbaa !16
  %1009 = load ptr, ptr %507, align 8, !tbaa !39
  %1010 = load i32, ptr %522, align 8, !tbaa !38
  %1011 = load ptr, ptr %1009, align 8, !tbaa !62
  %1012 = icmp eq ptr %1011, null
  br i1 %1012, label %1015, label %1013

1013:                                             ; preds = %1007
  %1014 = load i32, ptr %1011, align 8, !tbaa !64
  br label %1015

1015:                                             ; preds = %1007, %1013
  %1016 = phi i32 [ %1014, %1013 ], [ 0, %1007 ]
  %1017 = getelementptr inbounds %struct.rtx_def, ptr %525, i64 0, i32 1
  %1018 = load i32, ptr %1017, align 8, !tbaa !16
  %1019 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %1001, ptr noundef nonnull @.str.11, i32 noundef %1010, i32 noundef %1016, i32 noundef %1018, ptr noundef nonnull @.str.21)
  call void @print_inline_rtx(ptr noundef nonnull %1001, ptr noundef %1008, i32 noundef 2) #21
  %1020 = call i32 @fputc(i32 noundef 10, ptr noundef nonnull %1001)
  br label %1021

1021:                                             ; preds = %1015, %1003, %1000
  %1022 = load ptr, ptr %507, align 8, !tbaa !39
  %1023 = load ptr, ptr %1022, align 8, !tbaa !5
  %1024 = icmp eq ptr %1023, null
  br i1 %1024, label %1030, label %1025

1025:                                             ; preds = %1021
  %1026 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %1023, i64 0, i32 1
  %1027 = load i32, ptr %1026, align 4, !tbaa !115
  %1028 = load i32, ptr %1023, align 8, !tbaa !64
  %1029 = icmp eq i32 %1027, %1028
  br i1 %1029, label %1030, label %1033

1030:                                             ; preds = %1025, %1021
  %1031 = call ptr @vec_heap_o_reserve(ptr noundef %1023, i32 noundef 1, i64 noundef 8, i64 noundef 24) #21
  store ptr %1031, ptr %1022, align 8, !tbaa !5
  %1032 = load i32, ptr %1031, align 8, !tbaa !64
  br label %1033

1033:                                             ; preds = %1025, %1030
  %1034 = phi i32 [ %1028, %1025 ], [ %1032, %1030 ]
  %1035 = phi ptr [ %1023, %1025 ], [ %1031, %1030 ]
  %1036 = add i32 %1034, 1
  store i32 %1036, ptr %1035, align 8, !tbaa !64
  %1037 = zext i32 %1034 to i64
  %1038 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %1035, i64 0, i32 2, i64 %1037
  store i32 9, ptr %1038, align 8, !tbaa.struct !116
  %1039 = getelementptr inbounds i8, ptr %1038, i64 8
  store ptr %525, ptr %1039, align 8, !tbaa.struct !117
  %1040 = getelementptr inbounds i8, ptr %1038, i64 16
  store i64 %841, ptr %1040, align 8, !tbaa.struct !118
  %1041 = load ptr, ptr %507, align 8, !tbaa !39
  %1042 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1041, i64 0, i32 2
  %1043 = load i64, ptr %1042, align 8, !tbaa !94
  %1044 = add nsw i64 %1043, %841
  store i64 %1044, ptr %1042, align 8, !tbaa !94
  br label %1045

1045:                                             ; preds = %1033, %995
  %1046 = load i64, ptr @hard_frame_pointer_adjustment, align 8
  %1047 = icmp eq i64 %1046, -1
  %1048 = select i1 %523, i1 %1047, i1 false
  br i1 %1048, label %1049, label %1259

1049:                                             ; preds = %1045
  %1050 = load i32, ptr %525, align 8
  %1051 = and i32 %1050, 1073741824
  %1052 = icmp eq i32 %1051, 0
  br i1 %1052, label %1259, label %1053

1053:                                             ; preds = %1049
  %1054 = load ptr, ptr %846, align 8, !tbaa !16
  %1055 = call ptr @find_reg_note(ptr noundef nonnull %525, i32 noundef 17, ptr noundef null) #21
  %1056 = icmp eq ptr %1055, null
  br i1 %1056, label %1060, label %1057

1057:                                             ; preds = %1053
  %1058 = getelementptr inbounds %struct.rtx_def, ptr %1055, i64 0, i32 1
  %1059 = load ptr, ptr %1058, align 8, !tbaa !16
  br label %1060

1060:                                             ; preds = %1057, %1053
  %1061 = phi ptr [ %1059, %1057 ], [ %1054, %1053 ]
  %1062 = load i32, ptr %1061, align 8
  %1063 = trunc i32 %1062 to i16
  switch i16 %1063, label %1259 [
    i16 23, label %1087
    i16 15, label %1064
  ]

1064:                                             ; preds = %1060
  %1065 = getelementptr inbounds %struct.rtx_def, ptr %1061, i64 0, i32 1
  %1066 = load ptr, ptr %1065, align 8, !tbaa !16
  %1067 = load i32, ptr %1066, align 8, !tbaa !101
  %1068 = icmp slt i32 %1067, 1
  br i1 %1068, label %1259, label %1069

1069:                                             ; preds = %1064
  %1070 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 4), align 16
  %1071 = zext i32 %1067 to i64
  br label %1072

1072:                                             ; preds = %1085, %1069
  %1073 = phi i64 [ %1071, %1069 ], [ %1074, %1085 ]
  %1074 = add nsw i64 %1073, -1
  %1075 = and i64 %1074, 4294967295
  %1076 = getelementptr inbounds %struct.rtvec_def, ptr %1066, i64 0, i32 1, i64 %1075
  %1077 = load ptr, ptr %1076, align 8, !tbaa !5
  %1078 = load i32, ptr %1077, align 8
  %1079 = and i32 %1078, 65535
  %1080 = icmp eq i32 %1079, 23
  br i1 %1080, label %1081, label %1085

1081:                                             ; preds = %1072
  %1082 = getelementptr inbounds %struct.rtx_def, ptr %1077, i64 0, i32 1
  %1083 = load ptr, ptr %1082, align 8, !tbaa !16
  %1084 = icmp eq ptr %1083, %1070
  br i1 %1084, label %1092, label %1085

1085:                                             ; preds = %1081, %1072
  %1086 = icmp ult i64 %1073, 2
  br i1 %1086, label %1259, label %1072, !llvm.loop !127

1087:                                             ; preds = %1060
  %1088 = getelementptr inbounds %struct.rtx_def, ptr %1061, i64 0, i32 1
  %1089 = load ptr, ptr %1088, align 8, !tbaa !16
  %1090 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 4), align 16, !tbaa !5
  %1091 = icmp eq ptr %1089, %1090
  br i1 %1091, label %1092, label %1259

1092:                                             ; preds = %1081, %1087
  %1093 = phi ptr [ %1089, %1087 ], [ %1070, %1081 ]
  %1094 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 5), align 8, !tbaa !5
  store ptr %1094, ptr @cfa_base_rtx, align 8, !tbaa !5
  %1095 = icmp eq ptr %1094, %1093
  br i1 %1095, label %1103, label %1096

1096:                                             ; preds = %1092
  %1097 = getelementptr i8, ptr %1094, i64 8
  %1098 = load i32, ptr %1097, align 8, !tbaa !16
  %1099 = zext i32 %1098 to i64
  %1100 = getelementptr inbounds [53 x i8], ptr @fixed_regs, i64 0, i64 %1099
  %1101 = load i8, ptr %1100, align 1, !tbaa !16
  %1102 = icmp eq i8 %1101, 0
  br i1 %1102, label %1103, label %1104

1103:                                             ; preds = %1096, %1092
  store ptr null, ptr @cfa_base_rtx, align 8, !tbaa !5
  br label %1258

1104:                                             ; preds = %1096
  %1105 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %1106 = icmp eq i32 %1105, 0
  br i1 %1106, label %1258, label %1107

1107:                                             ; preds = %1104
  %1108 = load i32, ptr %1094, align 8
  %1109 = lshr i32 %1108, 16
  %1110 = and i32 %1109, 255
  %1111 = call ptr @get_insns() #21
  %1112 = call ptr @cselib_lookup_from_insn(ptr noundef nonnull %1094, i32 noundef %1110, i32 noundef 1, ptr noundef %1111) #21
  call void @cselib_preserve_value(ptr noundef %1112) #21
  %1113 = getelementptr inbounds %struct.cselib_val_struct, ptr %1112, i64 0, i32 2
  %1114 = load ptr, ptr %1113, align 8, !tbaa !128
  %1115 = load ptr, ptr @preserved_values, align 8, !tbaa !5
  %1116 = icmp eq ptr %1115, null
  br i1 %1116, label %1122, label %1117

1117:                                             ; preds = %1107
  %1118 = getelementptr inbounds %struct.VEC_rtx_base, ptr %1115, i64 0, i32 1
  %1119 = load i32, ptr %1118, align 4, !tbaa !130
  %1120 = load i32, ptr %1115, align 8, !tbaa !42
  %1121 = icmp eq i32 %1119, %1120
  br i1 %1121, label %1122, label %1125

1122:                                             ; preds = %1117, %1107
  %1123 = call ptr @vec_heap_p_reserve(ptr noundef %1115, i32 noundef 1) #21
  store ptr %1123, ptr @preserved_values, align 8, !tbaa !5
  %1124 = load i32, ptr %1123, align 8, !tbaa !42
  br label %1125

1125:                                             ; preds = %1122, %1117
  %1126 = phi i32 [ %1120, %1117 ], [ %1124, %1122 ]
  %1127 = phi ptr [ %1115, %1117 ], [ %1123, %1122 ]
  %1128 = add i32 %1126, 1
  store i32 %1128, ptr %1127, align 8, !tbaa !42
  %1129 = zext i32 %1126 to i64
  %1130 = getelementptr inbounds %struct.VEC_rtx_base, ptr %1127, i64 0, i32 2, i64 %1129
  store ptr %1114, ptr %1130, align 8, !tbaa !5
  call void @cselib_preserve_cfa_base_value(ptr noundef nonnull %1112) #21
  %1131 = load ptr, ptr @cfun, align 8, !tbaa !5
  %1132 = getelementptr inbounds %struct.function, ptr %1131, i64 0, i32 1
  %1133 = load ptr, ptr %1132, align 8, !tbaa !23
  %1134 = load ptr, ptr %1133, align 8, !tbaa !25
  %1135 = getelementptr inbounds %struct.basic_block_def, ptr %1134, i64 0, i32 2
  %1136 = load ptr, ptr %1135, align 8, !tbaa !39
  %1137 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1136, i64 0, i32 2
  %1138 = load ptr, ptr @cfa_base_rtx, align 8, !tbaa !5
  %1139 = load ptr, ptr %1113, align 8, !tbaa !128
  %1140 = icmp eq ptr %1139, null
  br i1 %1140, label %1166, label %1141

1141:                                             ; preds = %1125
  %1142 = load i64, ptr %1139, align 8
  %1143 = and i64 %1142, 65535
  %1144 = icmp eq i64 %1143, 1
  br i1 %1144, label %1166, label %1145

1145:                                             ; preds = %1141
  %1146 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %1143
  %1147 = load i32, ptr %1146, align 4, !tbaa !16
  %1148 = icmp eq i32 %1147, 3
  br i1 %1148, label %1149, label %1166

1149:                                             ; preds = %1145
  %1150 = getelementptr inbounds %struct.tree_decl_common, ptr %1139, i64 0, i32 2
  %1151 = load i64, ptr %1150, align 8
  %1152 = and i64 %1151, 16384
  %1153 = icmp eq i64 %1152, 0
  br i1 %1153, label %1166, label %1154

1154:                                             ; preds = %1149
  %1155 = call ptr @decl_debug_expr_lookup(ptr noundef nonnull %1139) #21
  %1156 = icmp eq ptr %1155, null
  br i1 %1156, label %1166, label %1157

1157:                                             ; preds = %1154
  %1158 = call ptr @decl_debug_expr_lookup(ptr noundef nonnull %1139) #21
  %1159 = load i64, ptr %1158, align 8
  %1160 = and i64 %1159, 65535
  %1161 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %1160
  %1162 = load i32, ptr %1161, align 4, !tbaa !16
  %1163 = icmp eq i32 %1162, 3
  br i1 %1163, label %1164, label %1166

1164:                                             ; preds = %1157
  %1165 = call ptr @decl_debug_expr_lookup(ptr noundef nonnull %1139) #21
  br label %1166

1166:                                             ; preds = %1164, %1157, %1154, %1149, %1145, %1141, %1125
  %1167 = phi ptr [ %1139, %1141 ], [ %1165, %1164 ], [ %1139, %1157 ], [ %1139, %1154 ], [ %1139, %1149 ], [ %1139, %1145 ], [ null, %1125 ]
  %1168 = getelementptr i8, ptr %1138, i64 8
  %1169 = load i32, ptr %1168, align 8, !tbaa !16
  %1170 = zext i32 %1169 to i64
  %1171 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1136, i64 0, i32 2, i32 1, i64 %1170
  %1172 = load ptr, ptr %1171, align 8, !tbaa !5
  %1173 = icmp eq ptr %1172, null
  br i1 %1173, label %1186, label %1174

1174:                                             ; preds = %1166, %1183
  %1175 = phi ptr [ %1184, %1183 ], [ %1172, %1166 ]
  %1176 = getelementptr inbounds %struct.attrs_def, ptr %1175, i64 0, i32 2
  %1177 = load ptr, ptr %1176, align 8, !tbaa !72
  %1178 = icmp eq ptr %1177, %1167
  br i1 %1178, label %1179, label %1183

1179:                                             ; preds = %1174
  %1180 = getelementptr inbounds %struct.attrs_def, ptr %1175, i64 0, i32 3
  %1181 = load i64, ptr %1180, align 8, !tbaa !59
  %1182 = icmp eq i64 %1181, 0
  br i1 %1182, label %1193, label %1183

1183:                                             ; preds = %1179, %1174
  %1184 = load ptr, ptr %1175, align 8, !tbaa !5
  %1185 = icmp eq ptr %1184, null
  br i1 %1185, label %1186, label %1174, !llvm.loop !131

1186:                                             ; preds = %1183, %1166
  %1187 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  %1188 = call ptr @pool_alloc(ptr noundef %1187) #21
  %1189 = getelementptr inbounds %struct.attrs_def, ptr %1188, i64 0, i32 1
  store ptr %1138, ptr %1189, align 8, !tbaa !71
  %1190 = getelementptr inbounds %struct.attrs_def, ptr %1188, i64 0, i32 2
  store ptr %1167, ptr %1190, align 8, !tbaa !72
  %1191 = getelementptr inbounds %struct.attrs_def, ptr %1188, i64 0, i32 3
  store i64 0, ptr %1191, align 8, !tbaa !59
  %1192 = load ptr, ptr %1171, align 8, !tbaa !5
  store ptr %1192, ptr %1188, align 8, !tbaa !56
  store ptr %1188, ptr %1171, align 8, !tbaa !5
  br label %1193

1193:                                             ; preds = %1179, %1186
  %1194 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1136, i64 0, i32 2, i32 2
  %1195 = load ptr, ptr %1194, align 8, !tbaa !51
  %1196 = icmp eq ptr %1167, null
  br i1 %1196, label %1205, label %1197

1197:                                             ; preds = %1193
  %1198 = load i64, ptr %1167, align 8
  %1199 = and i64 %1198, 65535
  %1200 = icmp eq i64 %1199, 1
  br i1 %1200, label %1201, label %1205

1201:                                             ; preds = %1197
  %1202 = getelementptr inbounds %struct.rtx_def, ptr %1167, i64 0, i32 1
  %1203 = load ptr, ptr %1202, align 8, !tbaa !16
  %1204 = getelementptr inbounds %struct.cselib_val_struct, ptr %1203, i64 0, i32 1
  br label %1207

1205:                                             ; preds = %1197, %1193
  %1206 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1167, i64 0, i32 2
  br label %1207

1207:                                             ; preds = %1205, %1201
  %1208 = phi ptr [ %1204, %1201 ], [ %1206, %1205 ]
  %1209 = load i32, ptr %1208, align 4, !tbaa !16
  %1210 = load i32, ptr %1195, align 8, !tbaa !49
  %1211 = getelementptr i8, ptr %1195, i64 8
  %1212 = load ptr, ptr %1211, align 8, !tbaa !55
  %1213 = icmp slt i32 %1210, 2
  %1214 = zext i1 %1213 to i32
  %1215 = call ptr @htab_find_slot_with_hash(ptr noundef %1212, ptr noundef %1167, i32 noundef %1209, i32 noundef %1214) #21
  %1216 = icmp eq ptr %1215, null
  br i1 %1216, label %1217, label %1255

1217:                                             ; preds = %1207
  br i1 %1196, label %1226, label %1218

1218:                                             ; preds = %1217
  %1219 = load i64, ptr %1167, align 8
  %1220 = and i64 %1219, 65535
  %1221 = icmp eq i64 %1220, 1
  br i1 %1221, label %1222, label %1226

1222:                                             ; preds = %1218
  %1223 = getelementptr inbounds %struct.rtx_def, ptr %1167, i64 0, i32 1
  %1224 = load ptr, ptr %1223, align 8, !tbaa !16
  %1225 = getelementptr inbounds %struct.cselib_val_struct, ptr %1224, i64 0, i32 1
  br label %1228

1226:                                             ; preds = %1218, %1217
  %1227 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1167, i64 0, i32 2
  br label %1228

1228:                                             ; preds = %1226, %1222
  %1229 = phi ptr [ %1225, %1222 ], [ %1227, %1226 ]
  %1230 = load i32, ptr %1229, align 4, !tbaa !16
  %1231 = load ptr, ptr %1194, align 8, !tbaa !5
  %1232 = load i32, ptr %1231, align 8, !tbaa !49
  %1233 = icmp slt i32 %1232, 2
  br i1 %1233, label %1250, label %1234

1234:                                             ; preds = %1228
  %1235 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  %1236 = call ptr @pool_alloc(ptr noundef %1235) #21
  %1237 = load i32, ptr %1231, align 8, !tbaa !49
  %1238 = icmp sgt i32 %1237, 1
  br i1 %1238, label %1240, label %1239

1239:                                             ; preds = %1234
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1353, ptr noundef nonnull @.str.2) #21
  br label %1240

1240:                                             ; preds = %1239, %1234
  store i32 1, ptr %1236, align 8, !tbaa !49
  %1241 = getelementptr inbounds %struct.shared_hash_def, ptr %1231, i64 0, i32 1
  %1242 = load ptr, ptr %1241, align 8, !tbaa !55
  %1243 = call i64 @htab_elements(ptr noundef %1242) #21
  %1244 = add i64 %1243, 3
  %1245 = call ptr @htab_create(i64 noundef %1244, ptr noundef nonnull @variable_htab_hash, ptr noundef nonnull @variable_htab_eq, ptr noundef nonnull @variable_htab_free) #21
  %1246 = getelementptr inbounds %struct.shared_hash_def, ptr %1236, i64 0, i32 1
  store ptr %1245, ptr %1246, align 8, !tbaa !55
  %1247 = load ptr, ptr %1241, align 8, !tbaa !55
  call void @htab_traverse_noresize(ptr noundef %1247, ptr noundef nonnull @vars_copy_1, ptr noundef %1245) #21
  %1248 = load i32, ptr %1231, align 8, !tbaa !49
  %1249 = add nsw i32 %1248, -1
  store i32 %1249, ptr %1231, align 8, !tbaa !49
  store ptr %1236, ptr %1194, align 8, !tbaa !5
  br label %1250

1250:                                             ; preds = %1228, %1240
  %1251 = phi ptr [ %1236, %1240 ], [ %1231, %1228 ]
  %1252 = getelementptr i8, ptr %1251, i64 8
  %1253 = load ptr, ptr %1252, align 8, !tbaa !55
  %1254 = call ptr @htab_find_slot_with_hash(ptr noundef %1253, ptr noundef %1167, i32 noundef %1230, i32 noundef 1) #21
  br label %1255

1255:                                             ; preds = %1207, %1250
  %1256 = phi ptr [ %1215, %1207 ], [ %1254, %1250 ]
  %1257 = call fastcc ptr @set_slot_part(ptr noundef nonnull %1137, ptr noundef %1138, ptr noundef %1256, ptr noundef %1167, i64 noundef 0, i32 noundef 2, ptr noundef null)
  br label %1258

1258:                                             ; preds = %1103, %1104, %1255
  store i64 %431, ptr @hard_frame_pointer_adjustment, align 8, !tbaa !70
  br label %1259

1259:                                             ; preds = %1085, %1064, %1060, %524, %1258, %1087, %1049, %1045
  %1260 = phi i64 [ %841, %1049 ], [ %841, %1087 ], [ %841, %1258 ], [ %841, %1045 ], [ %526, %524 ], [ %841, %1060 ], [ %841, %1064 ], [ %841, %1085 ]
  %1261 = getelementptr inbounds %struct.rtx_def, ptr %525, i64 0, i32 1, i32 0, i32 0, i64 2
  %1262 = load ptr, ptr %1261, align 8, !tbaa !16
  %1263 = load ptr, ptr %513, align 8, !tbaa !16
  %1264 = getelementptr inbounds %struct.rtl_bb_info, ptr %1263, i64 0, i32 1
  %1265 = load ptr, ptr %1264, align 8, !tbaa !32
  %1266 = getelementptr inbounds %struct.rtx_def, ptr %1265, i64 0, i32 1, i32 0, i32 0, i64 2
  %1267 = load ptr, ptr %1266, align 8, !tbaa !16
  %1268 = icmp eq ptr %1262, %1267
  br i1 %1268, label %1269, label %524, !llvm.loop !132

1269:                                             ; preds = %1259
  %1270 = load ptr, ptr %507, align 8, !tbaa !39
  %1271 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1270, i64 0, i32 2
  %1272 = load i64, ptr %1271, align 8, !tbaa !94
  br label %1273

1273:                                             ; preds = %1269, %504
  %1274 = phi i64 [ %512, %504 ], [ %1272, %1269 ]
  %1275 = phi i64 [ %506, %504 ], [ %1260, %1269 ]
  %1276 = icmp eq i64 %510, %1274
  br i1 %1276, label %1278, label %1277

1277:                                             ; preds = %1273
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 8330, ptr noundef nonnull @.str.2) #21
  br label %1278

1278:                                             ; preds = %1273, %1277
  %1279 = getelementptr inbounds %struct.basic_block_def, ptr %505, i64 0, i32 6
  %1280 = load ptr, ptr %1279, align 8, !tbaa !27
  %1281 = load ptr, ptr %501, align 8, !tbaa !27
  %1282 = icmp eq ptr %1280, %1281
  br i1 %1282, label %1283, label %504, !llvm.loop !133

1283:                                             ; preds = %1278, %499
  %1284 = phi ptr [ %450, %499 ], [ %1280, %1278 ]
  %1285 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %1286 = icmp eq i32 %1285, 0
  br i1 %1286, label %1291, label %1287

1287:                                             ; preds = %1283
  call void @cselib_preserve_only_values() #21
  %1288 = call i32 @cselib_get_next_uid() #21
  call void @cselib_reset_table(i32 noundef %1288) #21
  store ptr null, ptr @cselib_record_sets_hook, align 8, !tbaa !5
  %1289 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %1290 = load ptr, ptr %501, align 8, !tbaa !27
  br label %1291

1291:                                             ; preds = %1287, %1283
  %1292 = phi ptr [ %1290, %1287 ], [ %1284, %1283 ]
  %1293 = phi i32 [ %1289, %1287 ], [ 0, %1283 ]
  %1294 = load ptr, ptr @cfun, align 8, !tbaa !5
  %1295 = getelementptr inbounds %struct.function, ptr %1294, i64 0, i32 1
  %1296 = load ptr, ptr %1295, align 8, !tbaa !23
  %1297 = getelementptr inbounds %struct.control_flow_graph, ptr %1296, i64 0, i32 1
  %1298 = load ptr, ptr %1297, align 8, !tbaa !29
  %1299 = icmp eq ptr %1292, %1298
  br i1 %1299, label %1300, label %447, !llvm.loop !134

1300:                                             ; preds = %1291
  %1301 = load ptr, ptr %1296, align 8, !tbaa !25
  br label %1302

1302:                                             ; preds = %1300, %430
  %1303 = phi ptr [ %436, %430 ], [ %1301, %1300 ]
  store i64 -1, ptr @hard_frame_pointer_adjustment, align 8, !tbaa !70
  %1304 = getelementptr inbounds %struct.basic_block_def, ptr %1303, i64 0, i32 2
  %1305 = load ptr, ptr %1304, align 8, !tbaa !39
  %1306 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1305, i64 0, i32 5
  store i8 1, ptr %1306, align 1, !tbaa !81
  %1307 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %1308 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1307, i64 0, i32 2
  %1309 = load ptr, ptr %1308, align 8, !tbaa !16
  %1310 = icmp eq ptr %1309, null
  br i1 %1310, label %1584, label %1311

1311:                                             ; preds = %1302, %1580
  %1312 = phi ptr [ %1582, %1580 ], [ %1309, %1302 ]
  %1313 = load i64, ptr %1312, align 8
  %1314 = and i64 %1313, 65535
  %1315 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %1314, i64 11
  %1316 = load i8, ptr %1315, align 1, !tbaa !16
  %1317 = icmp eq i8 %1316, 0
  br i1 %1317, label %1321, label %1318

1318:                                             ; preds = %1311
  %1319 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %1312, i64 0, i32 1
  %1320 = load ptr, ptr %1319, align 8, !tbaa !16
  br label %1321

1321:                                             ; preds = %1318, %1311
  %1322 = phi ptr [ null, %1311 ], [ %1320, %1318 ]
  %1323 = getelementptr inbounds %struct.tree_parm_decl, ptr %1312, i64 0, i32 1
  %1324 = load ptr, ptr %1323, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %1) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  %1325 = icmp eq i64 %1314, 34
  br i1 %1325, label %1326, label %1580

1326:                                             ; preds = %1321
  %1327 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1312, i64 0, i32 3
  %1328 = load ptr, ptr %1327, align 8, !tbaa !16
  %1329 = icmp eq ptr %1328, null
  br i1 %1329, label %1580, label %1330

1330:                                             ; preds = %1326
  %1331 = icmp ne ptr %1322, null
  %1332 = icmp ne ptr %1324, null
  %1333 = select i1 %1331, i1 %1332, i1 false
  br i1 %1333, label %1334, label %1580

1334:                                             ; preds = %1330
  %1335 = load i32, ptr %1322, align 8
  %1336 = and i32 %1335, 16711680
  %1337 = icmp eq i32 %1336, 65536
  br i1 %1337, label %1580, label %1338

1338:                                             ; preds = %1334
  %1339 = load i32, ptr %1324, align 8
  %1340 = and i32 %1339, 16711680
  %1341 = icmp eq i32 %1340, 65536
  br i1 %1341, label %1580, label %1342

1342:                                             ; preds = %1338
  %1343 = trunc i32 %1339 to i16
  switch i16 %1343, label %1372 [
    i16 37, label %1344
    i16 43, label %1351
  ]

1344:                                             ; preds = %1342
  %1345 = getelementptr inbounds %struct.rtx_def, ptr %1324, i64 0, i32 1, i32 0, i32 0, i64 2
  %1346 = load ptr, ptr %1345, align 8, !tbaa !16
  %1347 = icmp eq ptr %1346, null
  br i1 %1347, label %1366, label %1348

1348:                                             ; preds = %1344
  %1349 = load ptr, ptr %1346, align 8, !tbaa !75
  %1350 = getelementptr inbounds %struct.reg_attrs, ptr %1346, i64 0, i32 1
  br label %1362

1351:                                             ; preds = %1342
  %1352 = getelementptr inbounds %struct.rtx_def, ptr %1324, i64 0, i32 1, i32 0, i32 0, i64 1
  %1353 = load ptr, ptr %1352, align 8, !tbaa !16
  %1354 = icmp eq ptr %1353, null
  br i1 %1354, label %1366, label %1355

1355:                                             ; preds = %1351
  %1356 = load ptr, ptr %1353, align 8, !tbaa !135
  %1357 = getelementptr inbounds %struct.mem_attrs, ptr %1353, i64 0, i32 1
  %1358 = load ptr, ptr %1357, align 8, !tbaa !137
  %1359 = icmp eq ptr %1358, null
  br i1 %1359, label %1409, label %1360

1360:                                             ; preds = %1355
  %1361 = getelementptr inbounds %struct.rtx_def, ptr %1358, i64 0, i32 1
  br label %1362

1362:                                             ; preds = %1360, %1348
  %1363 = phi ptr [ %1356, %1360 ], [ %1349, %1348 ]
  %1364 = phi ptr [ %1361, %1360 ], [ %1350, %1348 ]
  %1365 = load i64, ptr %1364, align 8, !tbaa !16
  br label %1409

1366:                                             ; preds = %1351, %1344
  store i64 0, ptr %2, align 8, !tbaa !70
  %1367 = load i32, ptr %1322, align 8
  %1368 = lshr i32 %1367, 16
  %1369 = and i32 %1368, 255
  %1370 = call ptr @gen_rtx_MEM(i32 noundef %1369, ptr noundef nonnull %1324) #21
  %1371 = load i64, ptr %2, align 8, !tbaa !70
  br label %1420

1372:                                             ; preds = %1342
  %1373 = trunc i32 %1335 to i16
  switch i16 %1373, label %1580 [
    i16 37, label %1374
    i16 43, label %1381
  ]

1374:                                             ; preds = %1372
  %1375 = getelementptr inbounds %struct.rtx_def, ptr %1322, i64 0, i32 1, i32 0, i32 0, i64 2
  %1376 = load ptr, ptr %1375, align 8, !tbaa !16
  %1377 = icmp eq ptr %1376, null
  br i1 %1377, label %1580, label %1378

1378:                                             ; preds = %1374
  %1379 = load ptr, ptr %1376, align 8, !tbaa !75
  %1380 = getelementptr inbounds %struct.reg_attrs, ptr %1376, i64 0, i32 1
  br label %1392

1381:                                             ; preds = %1372
  %1382 = getelementptr inbounds %struct.rtx_def, ptr %1322, i64 0, i32 1, i32 0, i32 0, i64 1
  %1383 = load ptr, ptr %1382, align 8, !tbaa !16
  %1384 = icmp eq ptr %1383, null
  br i1 %1384, label %1580, label %1385

1385:                                             ; preds = %1381
  %1386 = load ptr, ptr %1383, align 8, !tbaa !135
  %1387 = getelementptr inbounds %struct.mem_attrs, ptr %1383, i64 0, i32 1
  %1388 = load ptr, ptr %1387, align 8, !tbaa !137
  %1389 = icmp eq ptr %1388, null
  br i1 %1389, label %1396, label %1390

1390:                                             ; preds = %1385
  %1391 = getelementptr inbounds %struct.rtx_def, ptr %1388, i64 0, i32 1
  br label %1392

1392:                                             ; preds = %1390, %1378
  %1393 = phi ptr [ %1386, %1390 ], [ %1379, %1378 ]
  %1394 = phi ptr [ %1391, %1390 ], [ %1380, %1378 ]
  %1395 = load i64, ptr %1394, align 8, !tbaa !16
  br label %1396

1396:                                             ; preds = %1392, %1385
  %1397 = phi ptr [ %1386, %1385 ], [ %1393, %1392 ]
  %1398 = phi i64 [ 0, %1385 ], [ %1395, %1392 ]
  store i64 %1398, ptr %2, align 8, !tbaa !70
  %1399 = load i32, ptr %1324, align 8
  %1400 = lshr i32 %1399, 16
  %1401 = and i32 %1400, 255
  %1402 = load i32, ptr %1322, align 8
  %1403 = lshr i32 %1402, 16
  %1404 = and i32 %1403, 255
  %1405 = call i32 @byte_lowpart_offset(i32 noundef %1401, i32 noundef %1404) #21
  %1406 = sext i32 %1405 to i64
  %1407 = load i64, ptr %2, align 8, !tbaa !70
  %1408 = add nsw i64 %1407, %1406
  br label %1409

1409:                                             ; preds = %1396, %1362, %1355
  %1410 = phi i64 [ %1408, %1396 ], [ 0, %1355 ], [ %1365, %1362 ]
  %1411 = phi ptr [ %1397, %1396 ], [ %1356, %1355 ], [ %1363, %1362 ]
  store i64 %1410, ptr %2, align 8, !tbaa !70
  %1412 = icmp eq ptr %1411, null
  br i1 %1412, label %1580, label %1413

1413:                                             ; preds = %1409
  %1414 = icmp eq ptr %1312, %1411
  br i1 %1414, label %1420, label %1415

1415:                                             ; preds = %1413
  %1416 = call ptr @get_spill_slot_decl(i8 noundef zeroext 0) #21
  %1417 = icmp eq ptr %1411, %1416
  br i1 %1417, label %1419, label %1418

1418:                                             ; preds = %1415
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 8001, ptr noundef nonnull @.str.2) #21
  br label %1419

1419:                                             ; preds = %1418, %1415
  store i64 0, ptr %2, align 8, !tbaa !70
  br label %1420

1420:                                             ; preds = %1419, %1413, %1366
  %1421 = phi i64 [ %1371, %1366 ], [ 0, %1419 ], [ %1410, %1413 ]
  %1422 = phi ptr [ %1370, %1366 ], [ %1324, %1419 ], [ %1324, %1413 ]
  %1423 = call fastcc zeroext i8 @track_loc_p(ptr noundef %1422, ptr noundef nonnull %1312, i64 noundef %1421, ptr noundef nonnull %1, ptr noundef nonnull %2)
  %1424 = icmp eq i8 %1423, 0
  br i1 %1424, label %1580, label %1425

1425:                                             ; preds = %1420
  %1426 = load ptr, ptr @cfun, align 8, !tbaa !5
  %1427 = getelementptr inbounds %struct.function, ptr %1426, i64 0, i32 1
  %1428 = load ptr, ptr %1427, align 8, !tbaa !23
  %1429 = load ptr, ptr %1428, align 8, !tbaa !25
  %1430 = getelementptr inbounds %struct.basic_block_def, ptr %1429, i64 0, i32 2
  %1431 = load ptr, ptr %1430, align 8, !tbaa !39
  %1432 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1431, i64 0, i32 2
  %1433 = call ptr @target_for_debug_bind(ptr noundef nonnull %1312) #21
  %1434 = icmp eq ptr %1433, null
  br i1 %1434, label %1496, label %1435

1435:                                             ; preds = %1425
  %1436 = load i32, ptr %1422, align 8
  %1437 = and i32 %1436, 65535
  %1438 = icmp eq i32 %1437, 15
  br i1 %1438, label %1496, label %1439

1439:                                             ; preds = %1435
  %1440 = load i64, ptr %2, align 8, !tbaa !70
  %1441 = icmp eq i64 %1440, 0
  br i1 %1441, label %1442, label %1580

1442:                                             ; preds = %1439
  %1443 = load i32, ptr %1, align 4, !tbaa !16
  %1444 = call fastcc ptr @var_lowpart(i32 noundef %1443, ptr noundef nonnull %1422)
  %1445 = load i32, ptr %1, align 4, !tbaa !16
  %1446 = call ptr @cselib_lookup(ptr noundef %1444, i32 noundef %1445, i32 noundef 1) #21
  %1447 = icmp eq ptr %1446, null
  br i1 %1447, label %1496, label %1448

1448:                                             ; preds = %1442
  call void @cselib_preserve_value(ptr noundef nonnull %1446) #21
  %1449 = getelementptr inbounds %struct.cselib_val_struct, ptr %1446, i64 0, i32 2
  %1450 = load ptr, ptr %1449, align 8, !tbaa !128
  %1451 = load ptr, ptr @preserved_values, align 8, !tbaa !5
  %1452 = icmp eq ptr %1451, null
  br i1 %1452, label %1458, label %1453

1453:                                             ; preds = %1448
  %1454 = getelementptr inbounds %struct.VEC_rtx_base, ptr %1451, i64 0, i32 1
  %1455 = load i32, ptr %1454, align 4, !tbaa !130
  %1456 = load i32, ptr %1451, align 8, !tbaa !42
  %1457 = icmp eq i32 %1455, %1456
  br i1 %1457, label %1458, label %1461

1458:                                             ; preds = %1453, %1448
  %1459 = call ptr @vec_heap_p_reserve(ptr noundef %1451, i32 noundef 1) #21
  store ptr %1459, ptr @preserved_values, align 8, !tbaa !5
  %1460 = load i32, ptr %1459, align 8, !tbaa !42
  br label %1461

1461:                                             ; preds = %1458, %1453
  %1462 = phi i32 [ %1456, %1453 ], [ %1460, %1458 ]
  %1463 = phi ptr [ %1451, %1453 ], [ %1459, %1458 ]
  %1464 = add i32 %1462, 1
  store i32 %1464, ptr %1463, align 8, !tbaa !42
  %1465 = zext i32 %1462 to i64
  %1466 = getelementptr inbounds %struct.VEC_rtx_base, ptr %1463, i64 0, i32 2, i64 %1465
  store ptr %1450, ptr %1466, align 8, !tbaa !5
  %1467 = load ptr, ptr %1449, align 8, !tbaa !128
  %1468 = load i64, ptr %2, align 8, !tbaa !70
  %1469 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1431, i64 0, i32 2, i32 2
  %1470 = load ptr, ptr %1469, align 8, !tbaa !51
  %1471 = load i64, ptr %1312, align 8
  %1472 = and i64 %1471, 65535
  %1473 = icmp eq i64 %1472, 1
  br i1 %1473, label %1474, label %1478

1474:                                             ; preds = %1461
  %1475 = getelementptr inbounds %struct.rtx_def, ptr %1312, i64 0, i32 1
  %1476 = load ptr, ptr %1475, align 8, !tbaa !16
  %1477 = getelementptr inbounds %struct.cselib_val_struct, ptr %1476, i64 0, i32 1
  br label %1480

1478:                                             ; preds = %1461
  %1479 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1312, i64 0, i32 2
  br label %1480

1480:                                             ; preds = %1478, %1474
  %1481 = phi ptr [ %1477, %1474 ], [ %1479, %1478 ]
  %1482 = load i32, ptr %1481, align 4, !tbaa !16
  %1483 = load i32, ptr %1470, align 8, !tbaa !49
  %1484 = getelementptr i8, ptr %1470, i64 8
  %1485 = load ptr, ptr %1484, align 8, !tbaa !55
  %1486 = icmp slt i32 %1483, 2
  %1487 = zext i1 %1486 to i32
  %1488 = call ptr @htab_find_slot_with_hash(ptr noundef %1485, ptr noundef nonnull %1312, i32 noundef %1482, i32 noundef %1487) #21
  %1489 = icmp eq ptr %1488, null
  br i1 %1489, label %1490, label %1492

1490:                                             ; preds = %1480
  %1491 = call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %1469, ptr noundef nonnull %1312, i32 noundef 1)
  br label %1492

1492:                                             ; preds = %1490, %1480
  %1493 = phi ptr [ %1488, %1480 ], [ %1491, %1490 ]
  %1494 = call fastcc ptr @set_slot_part(ptr noundef nonnull %1432, ptr noundef %1467, ptr noundef %1493, ptr noundef nonnull %1312, i64 noundef %1468, i32 noundef 2, ptr noundef null)
  %1495 = load ptr, ptr %1449, align 8, !tbaa !128
  br label %1496

1496:                                             ; preds = %1492, %1442, %1435, %1425
  %1497 = phi ptr [ %1312, %1435 ], [ %1312, %1425 ], [ %1312, %1442 ], [ %1495, %1492 ]
  %1498 = load i32, ptr %1422, align 8
  %1499 = trunc i32 %1498 to i16
  switch i16 %1499, label %1580 [
    i16 37, label %1500
    i16 43, label %1548
  ]

1500:                                             ; preds = %1496
  %1501 = load i32, ptr %1, align 4, !tbaa !16
  %1502 = call fastcc ptr @var_lowpart(i32 noundef %1501, ptr noundef nonnull %1422)
  %1503 = getelementptr i8, ptr %1502, i64 8
  %1504 = load i32, ptr %1503, align 8, !tbaa !16
  %1505 = icmp ult i32 %1504, 53
  br i1 %1505, label %1508, label %1506

1506:                                             ; preds = %1500
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 8044, ptr noundef nonnull @.str.2) #21
  %1507 = load i32, ptr %1503, align 8, !tbaa !16
  br label %1508

1508:                                             ; preds = %1506, %1500
  %1509 = phi i32 [ %1504, %1500 ], [ %1507, %1506 ]
  %1510 = zext i32 %1509 to i64
  %1511 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1431, i64 0, i32 2, i32 1, i64 %1510
  %1512 = load i64, ptr %2, align 8, !tbaa !70
  %1513 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  %1514 = call ptr @pool_alloc(ptr noundef %1513) #21
  %1515 = getelementptr inbounds %struct.attrs_def, ptr %1514, i64 0, i32 1
  store ptr %1502, ptr %1515, align 8, !tbaa !71
  %1516 = getelementptr inbounds %struct.attrs_def, ptr %1514, i64 0, i32 2
  store ptr %1497, ptr %1516, align 8, !tbaa !72
  %1517 = getelementptr inbounds %struct.attrs_def, ptr %1514, i64 0, i32 3
  store i64 %1512, ptr %1517, align 8, !tbaa !59
  %1518 = load ptr, ptr %1511, align 8, !tbaa !5
  store ptr %1518, ptr %1514, align 8, !tbaa !56
  store ptr %1514, ptr %1511, align 8, !tbaa !5
  %1519 = load i64, ptr %2, align 8, !tbaa !70
  %1520 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1431, i64 0, i32 2, i32 2
  %1521 = load ptr, ptr %1520, align 8, !tbaa !51
  %1522 = icmp eq ptr %1497, null
  br i1 %1522, label %1531, label %1523

1523:                                             ; preds = %1508
  %1524 = load i64, ptr %1497, align 8
  %1525 = and i64 %1524, 65535
  %1526 = icmp eq i64 %1525, 1
  br i1 %1526, label %1527, label %1531

1527:                                             ; preds = %1523
  %1528 = getelementptr inbounds %struct.rtx_def, ptr %1497, i64 0, i32 1
  %1529 = load ptr, ptr %1528, align 8, !tbaa !16
  %1530 = getelementptr inbounds %struct.cselib_val_struct, ptr %1529, i64 0, i32 1
  br label %1533

1531:                                             ; preds = %1523, %1508
  %1532 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1497, i64 0, i32 2
  br label %1533

1533:                                             ; preds = %1531, %1527
  %1534 = phi ptr [ %1530, %1527 ], [ %1532, %1531 ]
  %1535 = load i32, ptr %1534, align 4, !tbaa !16
  %1536 = load i32, ptr %1521, align 8, !tbaa !49
  %1537 = getelementptr i8, ptr %1521, i64 8
  %1538 = load ptr, ptr %1537, align 8, !tbaa !55
  %1539 = icmp slt i32 %1536, 2
  %1540 = zext i1 %1539 to i32
  %1541 = call ptr @htab_find_slot_with_hash(ptr noundef %1538, ptr noundef %1497, i32 noundef %1535, i32 noundef %1540) #21
  %1542 = icmp eq ptr %1541, null
  br i1 %1542, label %1543, label %1545

1543:                                             ; preds = %1533
  %1544 = call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %1520, ptr noundef %1497, i32 noundef 1)
  br label %1545

1545:                                             ; preds = %1543, %1533
  %1546 = phi ptr [ %1541, %1533 ], [ %1544, %1543 ]
  %1547 = call fastcc ptr @set_slot_part(ptr noundef nonnull %1432, ptr noundef nonnull %1502, ptr noundef %1546, ptr noundef %1497, i64 noundef %1519, i32 noundef 2, ptr noundef null)
  br label %1580

1548:                                             ; preds = %1496
  %1549 = load i32, ptr %1, align 4, !tbaa !16
  %1550 = call fastcc ptr @var_lowpart(i32 noundef %1549, ptr noundef nonnull %1422)
  %1551 = load i64, ptr %2, align 8, !tbaa !70
  %1552 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1431, i64 0, i32 2, i32 2
  %1553 = load ptr, ptr %1552, align 8, !tbaa !51
  %1554 = icmp eq ptr %1497, null
  br i1 %1554, label %1563, label %1555

1555:                                             ; preds = %1548
  %1556 = load i64, ptr %1497, align 8
  %1557 = and i64 %1556, 65535
  %1558 = icmp eq i64 %1557, 1
  br i1 %1558, label %1559, label %1563

1559:                                             ; preds = %1555
  %1560 = getelementptr inbounds %struct.rtx_def, ptr %1497, i64 0, i32 1
  %1561 = load ptr, ptr %1560, align 8, !tbaa !16
  %1562 = getelementptr inbounds %struct.cselib_val_struct, ptr %1561, i64 0, i32 1
  br label %1565

1563:                                             ; preds = %1555, %1548
  %1564 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1497, i64 0, i32 2
  br label %1565

1565:                                             ; preds = %1563, %1559
  %1566 = phi ptr [ %1562, %1559 ], [ %1564, %1563 ]
  %1567 = load i32, ptr %1566, align 4, !tbaa !16
  %1568 = load i32, ptr %1553, align 8, !tbaa !49
  %1569 = getelementptr i8, ptr %1553, i64 8
  %1570 = load ptr, ptr %1569, align 8, !tbaa !55
  %1571 = icmp slt i32 %1568, 2
  %1572 = zext i1 %1571 to i32
  %1573 = call ptr @htab_find_slot_with_hash(ptr noundef %1570, ptr noundef %1497, i32 noundef %1567, i32 noundef %1572) #21
  %1574 = icmp eq ptr %1573, null
  br i1 %1574, label %1575, label %1577

1575:                                             ; preds = %1565
  %1576 = call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %1552, ptr noundef %1497, i32 noundef 1)
  br label %1577

1577:                                             ; preds = %1575, %1565
  %1578 = phi ptr [ %1573, %1565 ], [ %1576, %1575 ]
  %1579 = call fastcc ptr @set_slot_part(ptr noundef nonnull %1432, ptr noundef %1550, ptr noundef %1578, ptr noundef %1497, i64 noundef %1551, i32 noundef 2, ptr noundef null)
  br label %1580

1580:                                             ; preds = %1577, %1545, %1496, %1439, %1420, %1409, %1381, %1374, %1372, %1338, %1334, %1330, %1326, %1321
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %1) #21
  %1581 = getelementptr inbounds %struct.tree_common, ptr %1312, i64 0, i32 1
  %1582 = load ptr, ptr %1581, align 8, !tbaa !16
  %1583 = icmp eq ptr %1582, null
  br i1 %1583, label %1584, label %1311, !llvm.loop !138

1584:                                             ; preds = %1580, %1302
  %1585 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %1586 = icmp eq i32 %1585, 0
  br i1 %1586, label %1589, label %1587

1587:                                             ; preds = %1584
  call void @cselib_preserve_only_values() #21
  %1588 = call i32 @cselib_get_next_uid() #21
  call void @cselib_reset_table(i32 noundef %1588) #21
  br label %1589

1589:                                             ; preds = %1584, %1587
  store ptr null, ptr @cfa_base_rtx, align 8, !tbaa !5
  br label %1590

1590:                                             ; preds = %339, %1589
  %1591 = phi i8 [ 1, %1589 ], [ 0, %339 ]
  ret i8 %1591
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @vt_finalize() unnamed_addr #9 {
  %1 = load ptr, ptr @cfun, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.function, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !23
  %4 = load ptr, ptr %3, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.basic_block_def, ptr %4, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !27
  %7 = getelementptr inbounds %struct.control_flow_graph, ptr %3, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !29
  %9 = icmp eq ptr %6, %8
  br i1 %9, label %13, label %15

10:                                               ; preds = %22
  %11 = load ptr, ptr %27, align 8, !tbaa !5
  %12 = icmp eq ptr %11, null
  br i1 %12, label %134, label %13

13:                                               ; preds = %0, %10
  %14 = phi ptr [ %4, %0 ], [ %11, %10 ]
  br label %31

15:                                               ; preds = %0, %22
  %16 = phi ptr [ %24, %22 ], [ %6, %0 ]
  %17 = getelementptr inbounds %struct.basic_block_def, ptr %16, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !39
  %19 = load ptr, ptr %18, align 8, !tbaa !5
  %20 = icmp eq ptr %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %15
  tail call void @free(ptr noundef nonnull %19)
  br label %22

22:                                               ; preds = %15, %21
  store ptr null, ptr %18, align 8, !tbaa !5
  %23 = getelementptr inbounds %struct.basic_block_def, ptr %16, i64 0, i32 6
  %24 = load ptr, ptr %23, align 8, !tbaa !27
  %25 = load ptr, ptr @cfun, align 8, !tbaa !5
  %26 = getelementptr inbounds %struct.function, ptr %25, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !23
  %28 = getelementptr inbounds %struct.control_flow_graph, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !29
  %30 = icmp eq ptr %24, %29
  br i1 %30, label %10, label %15, !llvm.loop !139

31:                                               ; preds = %13, %130
  %32 = phi ptr [ %132, %130 ], [ %14, %13 ]
  %33 = getelementptr inbounds %struct.basic_block_def, ptr %32, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !39
  br label %35

35:                                               ; preds = %45, %31
  %36 = phi i64 [ 0, %31 ], [ %46, %45 ]
  %37 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %34, i64 0, i32 1, i32 1, i64 %36
  %38 = load ptr, ptr %37, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %35, %40
  %41 = phi ptr [ %42, %40 ], [ %38, %35 ]
  %42 = load ptr, ptr %41, align 8, !tbaa !56
  %43 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %43, ptr noundef nonnull %41) #21
  %44 = icmp eq ptr %42, null
  br i1 %44, label %45, label %40, !llvm.loop !58

45:                                               ; preds = %40, %35
  store ptr null, ptr %37, align 8, !tbaa !5
  %46 = add nuw nsw i64 %36, 1
  %47 = icmp eq i64 %46, 53
  br i1 %47, label %48, label %35, !llvm.loop !79

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %34, i64 0, i32 1, i32 2
  %50 = load ptr, ptr %49, align 8, !tbaa !51
  %51 = load i32, ptr %50, align 8, !tbaa !49
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %54 = load i32, ptr %50, align 8, !tbaa !49
  br label %55

55:                                               ; preds = %53, %48
  %56 = phi i32 [ %51, %48 ], [ %54, %53 ]
  %57 = add nsw i32 %56, -1
  store i32 %57, ptr %50, align 8, !tbaa !49
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.shared_hash_def, ptr %50, i64 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !55
  tail call void @htab_delete(ptr noundef %61) #21
  %62 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %62, ptr noundef nonnull %50) #21
  br label %63

63:                                               ; preds = %55, %59
  store ptr null, ptr %49, align 8, !tbaa !51
  %64 = load ptr, ptr %33, align 8, !tbaa !39
  br label %65

65:                                               ; preds = %75, %63
  %66 = phi i64 [ 0, %63 ], [ %76, %75 ]
  %67 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %64, i64 0, i32 2, i32 1, i64 %66
  %68 = load ptr, ptr %67, align 8, !tbaa !5
  %69 = icmp eq ptr %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65, %70
  %71 = phi ptr [ %72, %70 ], [ %68, %65 ]
  %72 = load ptr, ptr %71, align 8, !tbaa !56
  %73 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %73, ptr noundef nonnull %71) #21
  %74 = icmp eq ptr %72, null
  br i1 %74, label %75, label %70, !llvm.loop !58

75:                                               ; preds = %70, %65
  store ptr null, ptr %67, align 8, !tbaa !5
  %76 = add nuw nsw i64 %66, 1
  %77 = icmp eq i64 %76, 53
  br i1 %77, label %78, label %65, !llvm.loop !79

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %64, i64 0, i32 2, i32 2
  %80 = load ptr, ptr %79, align 8, !tbaa !51
  %81 = load i32, ptr %80, align 8, !tbaa !49
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %78
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %84 = load i32, ptr %80, align 8, !tbaa !49
  br label %85

85:                                               ; preds = %83, %78
  %86 = phi i32 [ %81, %78 ], [ %84, %83 ]
  %87 = add nsw i32 %86, -1
  store i32 %87, ptr %80, align 8, !tbaa !49
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.shared_hash_def, ptr %80, i64 0, i32 1
  %91 = load ptr, ptr %90, align 8, !tbaa !55
  tail call void @htab_delete(ptr noundef %91) #21
  %92 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %92, ptr noundef nonnull %80) #21
  br label %93

93:                                               ; preds = %85, %89
  store ptr null, ptr %79, align 8, !tbaa !51
  %94 = load ptr, ptr %33, align 8, !tbaa !39
  %95 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %94, i64 0, i32 3
  %96 = load ptr, ptr %95, align 8, !tbaa !82
  %97 = icmp eq ptr %96, null
  br i1 %97, label %130, label %98

98:                                               ; preds = %93, %108
  %99 = phi i64 [ %109, %108 ], [ 0, %93 ]
  %100 = getelementptr inbounds %struct.dataflow_set_def, ptr %96, i64 0, i32 1, i64 %99
  %101 = load ptr, ptr %100, align 8, !tbaa !5
  %102 = icmp eq ptr %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %98, %103
  %104 = phi ptr [ %105, %103 ], [ %101, %98 ]
  %105 = load ptr, ptr %104, align 8, !tbaa !56
  %106 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %106, ptr noundef nonnull %104) #21
  %107 = icmp eq ptr %105, null
  br i1 %107, label %108, label %103, !llvm.loop !58

108:                                              ; preds = %103, %98
  store ptr null, ptr %100, align 8, !tbaa !5
  %109 = add nuw nsw i64 %99, 1
  %110 = icmp eq i64 %109, 53
  br i1 %110, label %111, label %98, !llvm.loop !79

111:                                              ; preds = %108
  %112 = getelementptr inbounds %struct.dataflow_set_def, ptr %96, i64 0, i32 2
  %113 = load ptr, ptr %112, align 8, !tbaa !51
  %114 = load i32, ptr %113, align 8, !tbaa !49
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %111
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %117 = load i32, ptr %113, align 8, !tbaa !49
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i32 [ %114, %111 ], [ %117, %116 ]
  %120 = add nsw i32 %119, -1
  store i32 %120, ptr %113, align 8, !tbaa !49
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %126

122:                                              ; preds = %118
  %123 = getelementptr inbounds %struct.shared_hash_def, ptr %113, i64 0, i32 1
  %124 = load ptr, ptr %123, align 8, !tbaa !55
  tail call void @htab_delete(ptr noundef %124) #21
  %125 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %125, ptr noundef nonnull %113) #21
  br label %126

126:                                              ; preds = %118, %122
  store ptr null, ptr %112, align 8, !tbaa !51
  %127 = load ptr, ptr %33, align 8, !tbaa !39
  %128 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %127, i64 0, i32 3
  %129 = load ptr, ptr %128, align 8, !tbaa !82
  tail call void @free(ptr noundef %129)
  br label %130

130:                                              ; preds = %93, %126
  %131 = getelementptr inbounds %struct.basic_block_def, ptr %32, i64 0, i32 6
  %132 = load ptr, ptr %131, align 8, !tbaa !5
  %133 = icmp eq ptr %132, null
  br i1 %133, label %134, label %31, !llvm.loop !140

134:                                              ; preds = %130, %10
  tail call void @free_aux_for_blocks() #21
  %135 = load ptr, ptr @empty_shared_hash, align 8, !tbaa !5
  %136 = getelementptr inbounds %struct.shared_hash_def, ptr %135, i64 0, i32 1
  %137 = load ptr, ptr %136, align 8, !tbaa !55
  tail call void @htab_delete(ptr noundef %137) #21
  %138 = load ptr, ptr @changed_variables, align 8, !tbaa !5
  tail call void @htab_delete(ptr noundef %138) #21
  %139 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  tail call void @free_alloc_pool(ptr noundef %139) #21
  %140 = load ptr, ptr @var_pool, align 8, !tbaa !5
  tail call void @free_alloc_pool(ptr noundef %140) #21
  %141 = load ptr, ptr @loc_chain_pool, align 8, !tbaa !5
  tail call void @free_alloc_pool(ptr noundef %141) #21
  %142 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  tail call void @free_alloc_pool(ptr noundef %142) #21
  %143 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %154, label %145

145:                                              ; preds = %134
  %146 = load ptr, ptr @value_chains, align 8, !tbaa !5
  tail call void @htab_delete(ptr noundef %146) #21
  %147 = load ptr, ptr @value_chain_pool, align 8, !tbaa !5
  tail call void @free_alloc_pool(ptr noundef %147) #21
  %148 = load ptr, ptr @valvar_pool, align 8, !tbaa !5
  tail call void @free_alloc_pool(ptr noundef %148) #21
  %149 = load ptr, ptr @preserved_values, align 8, !tbaa !5
  %150 = icmp eq ptr %149, null
  br i1 %150, label %152, label %151

151:                                              ; preds = %145
  tail call void @free(ptr noundef nonnull %149)
  br label %152

152:                                              ; preds = %145, %151
  store ptr null, ptr @preserved_values, align 8, !tbaa !5
  tail call void @cselib_finish() #21
  %153 = load ptr, ptr @scratch_regs, align 8, !tbaa !5
  tail call void @bitmap_obstack_free(ptr noundef %153) #21
  store ptr null, ptr @scratch_regs, align 8, !tbaa !5
  br label %154

154:                                              ; preds = %152, %134
  %155 = load ptr, ptr @vui_vec, align 8, !tbaa !5
  %156 = icmp eq ptr %155, null
  br i1 %156, label %158, label %157

157:                                              ; preds = %154
  tail call void @free(ptr noundef nonnull %155)
  br label %158

158:                                              ; preds = %157, %154
  store ptr null, ptr @vui_vec, align 8, !tbaa !5
  store i32 0, ptr @vui_allocated, align 4, !tbaa !20
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @vt_find_locations() unnamed_addr #9 {
  %1 = alloca [87 x ptr], align 16
  %2 = alloca %struct.dataflow_set_def, align 8
  %3 = alloca %struct.dfset_post_merge, align 8
  %4 = alloca %struct.dataflow_set_def, align 8
  %5 = alloca %struct.dfset_merge, align 8
  %6 = load ptr, ptr @compiler_params, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.param_info, ptr %6, i64 116, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !141
  %9 = load ptr, ptr @cfun, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.function, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !23
  %12 = getelementptr inbounds %struct.control_flow_graph, ptr %11, i64 0, i32 3
  %13 = load i32, ptr %12, align 8, !tbaa !35
  %14 = add nsw i32 %13, -2
  %15 = sext i32 %14 to i64
  %16 = shl nsw i64 %15, 2
  %17 = tail call ptr @xmalloc(i64 noundef %16) #21
  %18 = load ptr, ptr @cfun, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.function, ptr %18, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !23
  %21 = getelementptr inbounds %struct.control_flow_graph, ptr %20, i64 0, i32 5
  %22 = load i32, ptr %21, align 8, !tbaa !143
  %23 = sext i32 %22 to i64
  %24 = shl nsw i64 %23, 2
  %25 = tail call ptr @xmalloc(i64 noundef %24) #21
  %26 = tail call i32 @pre_and_rev_post_order_compute(ptr noundef null, ptr noundef %17, i8 noundef zeroext 0) #21
  %27 = load ptr, ptr @cfun, align 8, !tbaa !5
  %28 = getelementptr inbounds %struct.function, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !23
  %30 = getelementptr inbounds %struct.control_flow_graph, ptr %29, i64 0, i32 3
  %31 = load i32, ptr %30, align 8, !tbaa !35
  %32 = icmp sgt i32 %31, 2
  br i1 %32, label %33, label %45

33:                                               ; preds = %0, %33
  %34 = phi i64 [ %40, %33 ], [ 0, %0 ]
  %35 = getelementptr inbounds i32, ptr %17, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !20
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, ptr %25, i64 %37
  %39 = trunc i64 %34 to i32
  store i32 %39, ptr %38, align 4, !tbaa !20
  %40 = add nuw nsw i64 %34, 1
  %41 = load i32, ptr %30, align 8, !tbaa !35
  %42 = add nsw i32 %41, -2
  %43 = sext i32 %42 to i64
  %44 = icmp slt i64 %40, %43
  br i1 %44, label %33, label %45, !llvm.loop !144

45:                                               ; preds = %33, %0
  tail call void @free(ptr noundef %17)
  %46 = tail call ptr @fibheap_new() #21
  %47 = tail call ptr @fibheap_new() #21
  %48 = load ptr, ptr @cfun, align 8, !tbaa !5
  %49 = getelementptr inbounds %struct.function, ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !23
  %51 = getelementptr inbounds %struct.control_flow_graph, ptr %50, i64 0, i32 5
  %52 = load i32, ptr %51, align 8, !tbaa !143
  %53 = tail call ptr @sbitmap_alloc(i32 noundef %52) #21
  %54 = load ptr, ptr @cfun, align 8, !tbaa !5
  %55 = getelementptr inbounds %struct.function, ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !23
  %57 = getelementptr inbounds %struct.control_flow_graph, ptr %56, i64 0, i32 5
  %58 = load i32, ptr %57, align 8, !tbaa !143
  %59 = tail call ptr @sbitmap_alloc(i32 noundef %58) #21
  %60 = load ptr, ptr @cfun, align 8, !tbaa !5
  %61 = getelementptr inbounds %struct.function, ptr %60, i64 0, i32 1
  %62 = load ptr, ptr %61, align 8, !tbaa !23
  %63 = getelementptr inbounds %struct.control_flow_graph, ptr %62, i64 0, i32 5
  %64 = load i32, ptr %63, align 8, !tbaa !143
  %65 = tail call ptr @sbitmap_alloc(i32 noundef %64) #21
  tail call void @sbitmap_zero(ptr noundef %59) #21
  %66 = load ptr, ptr @cfun, align 8, !tbaa !5
  %67 = getelementptr inbounds %struct.function, ptr %66, i64 0, i32 1
  %68 = load ptr, ptr %67, align 8, !tbaa !23
  %69 = load ptr, ptr %68, align 8, !tbaa !25
  %70 = getelementptr inbounds %struct.basic_block_def, ptr %69, i64 0, i32 6
  %71 = load ptr, ptr %70, align 8, !tbaa !27
  %72 = getelementptr inbounds %struct.control_flow_graph, ptr %68, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8, !tbaa !29
  %74 = icmp eq ptr %71, %73
  br i1 %74, label %92, label %75

75:                                               ; preds = %45, %75
  %76 = phi ptr [ %85, %75 ], [ %71, %45 ]
  %77 = getelementptr inbounds %struct.basic_block_def, ptr %76, i64 0, i32 9
  %78 = load i32, ptr %77, align 8, !tbaa !38
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i32, ptr %25, i64 %79
  %81 = load i32, ptr %80, align 4, !tbaa !20
  %82 = sext i32 %81 to i64
  %83 = tail call ptr @fibheap_insert(ptr noundef %47, i64 noundef %82, ptr noundef %76) #21
  %84 = getelementptr inbounds %struct.basic_block_def, ptr %76, i64 0, i32 6
  %85 = load ptr, ptr %84, align 8, !tbaa !27
  %86 = load ptr, ptr @cfun, align 8, !tbaa !5
  %87 = getelementptr inbounds %struct.function, ptr %86, i64 0, i32 1
  %88 = load ptr, ptr %87, align 8, !tbaa !23
  %89 = getelementptr inbounds %struct.control_flow_graph, ptr %88, i64 0, i32 1
  %90 = load ptr, ptr %89, align 8, !tbaa !29
  %91 = icmp eq ptr %85, %90
  br i1 %91, label %92, label %75, !llvm.loop !145

92:                                               ; preds = %75, %45
  tail call void @sbitmap_ones(ptr noundef %65) #21
  %93 = getelementptr inbounds %struct.dataflow_set_def, ptr %4, i64 0, i32 2
  %94 = getelementptr inbounds %struct.dfset_merge, ptr %5, i64 0, i32 2
  %95 = getelementptr inbounds %struct.dfset_merge, ptr %5, i64 0, i32 1
  %96 = getelementptr inbounds %struct.dfset_merge, ptr %5, i64 0, i32 3
  %97 = getelementptr inbounds %struct.dfset_post_merge, ptr %3, i64 0, i32 1
  %98 = getelementptr inbounds %struct.dataflow_set_def, ptr %2, i64 0, i32 1
  %99 = getelementptr inbounds %struct.dataflow_set_def, ptr %2, i64 0, i32 2
  %100 = getelementptr inbounds %struct.dataflow_set_def, ptr %2, i64 0, i32 3
  %101 = icmp ne i32 %8, 0
  %102 = tail call i32 @fibheap_empty(ptr noundef %47) #21
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %1681

104:                                              ; preds = %92, %1677
  %105 = phi i32 [ %1678, %1677 ], [ 0, %92 ]
  %106 = phi ptr [ %107, %1677 ], [ %65, %92 ]
  %107 = phi ptr [ %106, %1677 ], [ %59, %92 ]
  %108 = phi ptr [ %109, %1677 ], [ %47, %92 ]
  %109 = phi ptr [ %108, %1677 ], [ %46, %92 ]
  call void @sbitmap_zero(ptr noundef %53) #21
  %110 = call i32 @fibheap_empty(ptr noundef %108) #21
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %1677

112:                                              ; preds = %104, %1673
  %113 = phi i32 [ %1674, %1673 ], [ %105, %104 ]
  %114 = call ptr @fibheap_extract_min(ptr noundef %108) #21
  %115 = getelementptr inbounds %struct.basic_block_def, ptr %114, i64 0, i32 9
  %116 = load i32, ptr %115, align 8, !tbaa !38
  %117 = load ptr, ptr %106, align 8, !tbaa !146
  %118 = icmp eq ptr %117, null
  br i1 %118, label %119, label %125

119:                                              ; preds = %112
  %120 = and i32 %116, 63
  %121 = zext i32 %120 to i64
  %122 = shl nuw i64 1, %121
  %123 = lshr i32 %116, 6
  %124 = zext i32 %123 to i64
  br label %145

125:                                              ; preds = %112
  %126 = lshr i32 %116, 6
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %struct.simple_bitmap_def, ptr %106, i64 0, i32 3, i64 %127
  %129 = load i64, ptr %128, align 8, !tbaa !70
  %130 = and i32 %116, 63
  %131 = zext i32 %130 to i64
  %132 = shl nuw i64 1, %131
  %133 = and i64 %129, %132
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %145, label %135

135:                                              ; preds = %125
  %136 = getelementptr inbounds i8, ptr %117, i64 %127
  %137 = load i8, ptr %136, align 1, !tbaa !16
  %138 = add i8 %137, -1
  store i8 %138, ptr %136, align 1, !tbaa !16
  %139 = load i32, ptr %115, align 8, !tbaa !38
  %140 = lshr i32 %139, 6
  %141 = zext i32 %140 to i64
  %142 = and i32 %139, 63
  %143 = zext i32 %142 to i64
  %144 = shl nuw i64 1, %143
  br label %145

145:                                              ; preds = %119, %125, %135
  %146 = phi i64 [ %122, %119 ], [ %132, %125 ], [ %144, %135 ]
  %147 = phi i64 [ %124, %119 ], [ %127, %125 ], [ %141, %135 ]
  %148 = phi i64 [ %124, %119 ], [ %127, %125 ], [ %127, %135 ]
  %149 = phi i64 [ %122, %119 ], [ %132, %125 ], [ %132, %135 ]
  %150 = xor i64 %149, -1
  %151 = getelementptr inbounds %struct.simple_bitmap_def, ptr %106, i64 0, i32 3, i64 %148
  %152 = load i64, ptr %151, align 8, !tbaa !70
  %153 = and i64 %152, %150
  store i64 %153, ptr %151, align 8, !tbaa !70
  %154 = getelementptr inbounds %struct.simple_bitmap_def, ptr %53, i64 0, i32 3, i64 %147
  %155 = load i64, ptr %154, align 8, !tbaa !70
  %156 = and i64 %146, %155
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %1673

158:                                              ; preds = %145
  %159 = load ptr, ptr %53, align 8, !tbaa !146
  %160 = icmp eq ptr %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds i8, ptr %159, i64 %147
  %163 = load i8, ptr %162, align 1, !tbaa !16
  %164 = add i8 %163, 1
  store i8 %164, ptr %162, align 1, !tbaa !16
  %165 = load i64, ptr %154, align 8, !tbaa !70
  br label %166

166:                                              ; preds = %158, %161
  %167 = phi i64 [ %155, %158 ], [ %165, %161 ]
  %168 = or i64 %167, %146
  store i64 %168, ptr %154, align 8, !tbaa !70
  %169 = getelementptr inbounds %struct.basic_block_def, ptr %114, i64 0, i32 2
  %170 = load ptr, ptr %169, align 8, !tbaa !39
  %171 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %170, i64 0, i32 1, i32 2
  %172 = load ptr, ptr %171, align 8, !tbaa !148
  %173 = icmp eq ptr %172, null
  br i1 %173, label %201, label %174

174:                                              ; preds = %166
  %175 = getelementptr i8, ptr %172, i64 8
  %176 = load ptr, ptr %175, align 8, !tbaa !55
  %177 = call i64 @htab_size(ptr noundef %176) #21
  %178 = load ptr, ptr %169, align 8, !tbaa !39
  %179 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %178, i64 0, i32 2, i32 2
  %180 = load ptr, ptr %179, align 8, !tbaa !149
  %181 = getelementptr i8, ptr %180, i64 8
  %182 = load ptr, ptr %181, align 8, !tbaa !55
  %183 = call i64 @htab_size(ptr noundef %182) #21
  %184 = add i64 %183, %177
  %185 = trunc i64 %184 to i32
  %186 = sub i32 %113, %185
  %187 = load ptr, ptr %169, align 8, !tbaa !39
  %188 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %187, i64 0, i32 1, i32 2
  %189 = load ptr, ptr %188, align 8, !tbaa !148
  %190 = getelementptr i8, ptr %189, i64 8
  %191 = load ptr, ptr %190, align 8, !tbaa !55
  %192 = call i64 @htab_elements(ptr noundef %191) #21
  %193 = trunc i64 %192 to i32
  %194 = load ptr, ptr %169, align 8, !tbaa !39
  %195 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %194, i64 0, i32 2, i32 2
  %196 = load ptr, ptr %195, align 8, !tbaa !149
  %197 = getelementptr i8, ptr %196, i64 8
  %198 = load ptr, ptr %197, align 8, !tbaa !55
  %199 = call i64 @htab_elements(ptr noundef %198) #21
  %200 = trunc i64 %199 to i32
  br label %201

201:                                              ; preds = %166, %174
  %202 = phi i32 [ %200, %174 ], [ 0, %166 ]
  %203 = phi i32 [ %193, %174 ], [ 0, %166 ]
  %204 = phi i32 [ %186, %174 ], [ %113, %166 ]
  %205 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %206 = icmp eq i32 %205, 0
  %207 = load ptr, ptr %169, align 8, !tbaa !39
  br i1 %206, label %562, label %208

208:                                              ; preds = %201, %218
  %209 = phi i64 [ %219, %218 ], [ 0, %201 ]
  %210 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %207, i64 0, i32 1, i32 1, i64 %209
  %211 = load ptr, ptr %210, align 8, !tbaa !5
  %212 = icmp eq ptr %211, null
  br i1 %212, label %218, label %213

213:                                              ; preds = %208, %213
  %214 = phi ptr [ %215, %213 ], [ %211, %208 ]
  %215 = load ptr, ptr %214, align 8, !tbaa !56
  %216 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %216, ptr noundef nonnull %214) #21
  %217 = icmp eq ptr %215, null
  br i1 %217, label %218, label %213, !llvm.loop !58

218:                                              ; preds = %213, %208
  store ptr null, ptr %210, align 8, !tbaa !5
  %219 = add nuw nsw i64 %209, 1
  %220 = icmp eq i64 %219, 53
  br i1 %220, label %221, label %208, !llvm.loop !150

221:                                              ; preds = %218
  %222 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %207, i64 0, i32 1
  %223 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %207, i64 0, i32 1, i32 2
  %224 = load ptr, ptr %223, align 8, !tbaa !51
  %225 = load i32, ptr %224, align 8, !tbaa !49
  %226 = icmp sgt i32 %225, 0
  br i1 %226, label %229, label %227

227:                                              ; preds = %221
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %228 = load i32, ptr %224, align 8, !tbaa !49
  br label %229

229:                                              ; preds = %227, %221
  %230 = phi i32 [ %225, %221 ], [ %228, %227 ]
  %231 = add nsw i32 %230, -1
  store i32 %231, ptr %224, align 8, !tbaa !49
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %237

233:                                              ; preds = %229
  %234 = getelementptr inbounds %struct.shared_hash_def, ptr %224, i64 0, i32 1
  %235 = load ptr, ptr %234, align 8, !tbaa !55
  call void @htab_delete(ptr noundef %235) #21
  %236 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %236, ptr noundef nonnull %224) #21
  br label %237

237:                                              ; preds = %229, %233
  %238 = load ptr, ptr @empty_shared_hash, align 8, !tbaa !5
  %239 = load i32, ptr %238, align 8, !tbaa !49
  %240 = add nsw i32 %239, 1
  store i32 %240, ptr %238, align 8, !tbaa !49
  store ptr %238, ptr %223, align 8, !tbaa !51
  store i1 true, ptr @dst_can_be_shared, align 1
  %241 = icmp eq ptr %114, null
  %242 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %207, i64 0, i32 1, i32 1
  %243 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %207, i64 0, i32 1, i32 3
  br label %244

244:                                              ; preds = %515, %237
  %245 = phi i32 [ 0, %237 ], [ %516, %515 ]
  %246 = phi ptr [ null, %237 ], [ %506, %515 ]
  %247 = phi i8 [ 1, %237 ], [ %507, %515 ]
  %248 = phi i8 [ 0, %237 ], [ %508, %515 ]
  br i1 %241, label %249, label %250

249:                                              ; preds = %244
  call void @fancy_abort(ptr noundef nonnull @.str.10, i32 noundef 687, ptr noundef nonnull @.str.2) #21
  br label %250

250:                                              ; preds = %249, %244
  %251 = load ptr, ptr %114, align 8, !tbaa !5
  %252 = icmp eq ptr %251, null
  br i1 %252, label %255, label %253

253:                                              ; preds = %250
  %254 = load i32, ptr %251, align 8, !tbaa !106
  br label %255

255:                                              ; preds = %253, %250
  %256 = phi i32 [ %254, %253 ], [ 0, %250 ]
  %257 = icmp eq i32 %256, %245
  br i1 %257, label %517, label %258

258:                                              ; preds = %255
  %259 = zext i32 %245 to i64
  %260 = getelementptr inbounds %struct.VEC_edge_base, ptr %251, i64 0, i32 2, i64 %259
  %261 = load ptr, ptr %260, align 8, !tbaa !5
  %262 = load ptr, ptr %261, align 8, !tbaa !98
  %263 = getelementptr inbounds %struct.basic_block_def, ptr %262, i64 0, i32 2
  %264 = load ptr, ptr %263, align 8, !tbaa !39
  %265 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %264, i64 0, i32 5
  %266 = load i8, ptr %265, align 1, !tbaa !81
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %268, label %280

268:                                              ; preds = %258
  %269 = load i32, ptr %115, align 8, !tbaa !38
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i32, ptr %25, i64 %270
  %272 = load i32, ptr %271, align 4, !tbaa !20
  %273 = getelementptr inbounds %struct.basic_block_def, ptr %262, i64 0, i32 9
  %274 = load i32, ptr %273, align 8, !tbaa !38
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds i32, ptr %25, i64 %275
  %277 = load i32, ptr %276, align 4, !tbaa !20
  %278 = icmp sgt i32 %272, %277
  br i1 %278, label %279, label %505

279:                                              ; preds = %268
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 6014, ptr noundef nonnull @.str.2) #21
  br label %505

280:                                              ; preds = %258
  %281 = icmp eq i8 %247, 0
  br i1 %281, label %337, label %282

282:                                              ; preds = %280, %309
  %283 = phi i64 [ %310, %309 ], [ 0, %280 ]
  %284 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %207, i64 0, i32 1, i32 1, i64 %283
  %285 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %264, i64 0, i32 2, i32 1, i64 %283
  %286 = load ptr, ptr %285, align 8, !tbaa !5
  %287 = load ptr, ptr %284, align 8, !tbaa !5
  %288 = icmp eq ptr %287, null
  br i1 %288, label %294, label %289

289:                                              ; preds = %282, %289
  %290 = phi ptr [ %291, %289 ], [ %287, %282 ]
  %291 = load ptr, ptr %290, align 8, !tbaa !56
  %292 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %292, ptr noundef nonnull %290) #21
  %293 = icmp eq ptr %291, null
  br i1 %293, label %294, label %289, !llvm.loop !58

294:                                              ; preds = %289, %282
  store ptr null, ptr %284, align 8, !tbaa !5
  %295 = icmp eq ptr %286, null
  br i1 %295, label %309, label %296

296:                                              ; preds = %294, %296
  %297 = phi ptr [ %307, %296 ], [ %286, %294 ]
  %298 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  %299 = call ptr @pool_alloc(ptr noundef %298) #21
  %300 = getelementptr inbounds %struct.attrs_def, ptr %297, i64 0, i32 1
  %301 = getelementptr inbounds %struct.attrs_def, ptr %299, i64 0, i32 1
  %302 = load <2 x ptr>, ptr %300, align 8, !tbaa !5
  store <2 x ptr> %302, ptr %301, align 8, !tbaa !5
  %303 = getelementptr inbounds %struct.attrs_def, ptr %297, i64 0, i32 3
  %304 = load i64, ptr %303, align 8, !tbaa !59
  %305 = getelementptr inbounds %struct.attrs_def, ptr %299, i64 0, i32 3
  store i64 %304, ptr %305, align 8, !tbaa !59
  %306 = load ptr, ptr %284, align 8, !tbaa !5
  store ptr %306, ptr %299, align 8, !tbaa !56
  store ptr %299, ptr %284, align 8, !tbaa !5
  %307 = load ptr, ptr %297, align 8, !tbaa !56
  %308 = icmp eq ptr %307, null
  br i1 %308, label %309, label %296, !llvm.loop !60

309:                                              ; preds = %296, %294
  %310 = add nuw nsw i64 %283, 1
  %311 = icmp eq i64 %310, 53
  br i1 %311, label %312, label %282, !llvm.loop !61

312:                                              ; preds = %309
  %313 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %264, i64 0, i32 2
  %314 = load ptr, ptr %223, align 8, !tbaa !51
  %315 = load i32, ptr %314, align 8, !tbaa !49
  %316 = icmp sgt i32 %315, 0
  br i1 %316, label %319, label %317

317:                                              ; preds = %312
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %318 = load i32, ptr %314, align 8, !tbaa !49
  br label %319

319:                                              ; preds = %317, %312
  %320 = phi i32 [ %315, %312 ], [ %318, %317 ]
  %321 = add nsw i32 %320, -1
  store i32 %321, ptr %314, align 8, !tbaa !49
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %327

323:                                              ; preds = %319
  %324 = getelementptr inbounds %struct.shared_hash_def, ptr %314, i64 0, i32 1
  %325 = load ptr, ptr %324, align 8, !tbaa !55
  call void @htab_delete(ptr noundef %325) #21
  %326 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %326, ptr noundef nonnull %314) #21
  br label %327

327:                                              ; preds = %319, %323
  %328 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %264, i64 0, i32 2, i32 2
  %329 = load ptr, ptr %328, align 8, !tbaa !51
  %330 = load i32, ptr %329, align 8, !tbaa !49
  %331 = add nsw i32 %330, 1
  store i32 %331, ptr %329, align 8, !tbaa !49
  store ptr %329, ptr %223, align 8, !tbaa !51
  %332 = load i64, ptr %313, align 8, !tbaa !53
  store i64 %332, ptr %222, align 8, !tbaa !53
  %333 = load ptr, ptr %261, align 8, !tbaa !98
  %334 = getelementptr inbounds %struct.basic_block_def, ptr %333, i64 0, i32 2
  %335 = load ptr, ptr %334, align 8, !tbaa !39
  %336 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %335, i64 0, i32 2
  br label %505

337:                                              ; preds = %280
  %338 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %264, i64 0, i32 2
  call void @llvm.lifetime.start.p0(i64 448, ptr nonnull %4) #21
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(448) %4, ptr noundef nonnull align 8 dereferenceable(448) %222, i64 448, i1 false), !tbaa.struct !151
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #21
  %339 = load ptr, ptr %93, align 8, !tbaa !51
  %340 = getelementptr i8, ptr %339, i64 8
  %341 = load ptr, ptr %340, align 8, !tbaa !55
  %342 = call i64 @htab_elements(ptr noundef %341) #21
  %343 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %264, i64 0, i32 2, i32 2
  %344 = load ptr, ptr %343, align 8, !tbaa !51
  %345 = getelementptr i8, ptr %344, i64 8
  %346 = load ptr, ptr %345, align 8, !tbaa !55
  %347 = call i64 @htab_elements(ptr noundef %346) #21
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(424) %242, i8 0, i64 424, i1 false), !tbaa !5
  %348 = load ptr, ptr @empty_shared_hash, align 8, !tbaa !5
  %349 = load i32, ptr %348, align 8, !tbaa !49
  %350 = add nsw i32 %349, 1
  store i32 %350, ptr %348, align 8, !tbaa !49
  store ptr %348, ptr %223, align 8, !tbaa !51
  store ptr null, ptr %243, align 8, !tbaa !54
  %351 = load i64, ptr %4, align 8, !tbaa !53
  store i64 %351, ptr %222, align 8, !tbaa !53
  %352 = icmp sgt i32 %349, -1
  br i1 %352, label %356, label %353

353:                                              ; preds = %337
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %354 = load i32, ptr %348, align 8, !tbaa !49
  %355 = add nsw i32 %354, -1
  br label %356

356:                                              ; preds = %353, %337
  %357 = phi i32 [ %349, %337 ], [ %355, %353 ]
  store i32 %357, ptr %348, align 8, !tbaa !49
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %363

359:                                              ; preds = %356
  %360 = getelementptr inbounds %struct.shared_hash_def, ptr %348, i64 0, i32 1
  %361 = load ptr, ptr %360, align 8, !tbaa !55
  call void @htab_delete(ptr noundef %361) #21
  %362 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %362, ptr noundef nonnull %348) #21
  br label %363

363:                                              ; preds = %359, %356
  %364 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  %365 = call ptr @pool_alloc(ptr noundef %364) #21
  store ptr %365, ptr %223, align 8, !tbaa !51
  store i32 1, ptr %365, align 8, !tbaa !49
  %366 = call i64 @llvm.umax.i64(i64 %342, i64 %347)
  %367 = call ptr @htab_create(i64 noundef %366, ptr noundef nonnull @variable_htab_hash, ptr noundef nonnull @variable_htab_eq, ptr noundef nonnull @variable_htab_free) #21
  %368 = load ptr, ptr %223, align 8, !tbaa !51
  %369 = getelementptr inbounds %struct.shared_hash_def, ptr %368, i64 0, i32 1
  store ptr %367, ptr %369, align 8, !tbaa !55
  br label %370

370:                                              ; preds = %461, %363
  %371 = phi i64 [ 0, %363 ], [ %462, %461 ]
  %372 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %207, i64 0, i32 1, i32 1, i64 %371
  %373 = getelementptr inbounds %struct.dataflow_set_def, ptr %4, i64 0, i32 1, i64 %371
  %374 = load ptr, ptr %373, align 8, !tbaa !5
  %375 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %264, i64 0, i32 2, i32 1, i64 %371
  %376 = load ptr, ptr %375, align 8, !tbaa !5
  %377 = load ptr, ptr %372, align 8, !tbaa !5
  %378 = icmp eq ptr %377, null
  br i1 %378, label %380, label %379

379:                                              ; preds = %370
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1305, ptr noundef nonnull @.str.2) #21
  br label %380

380:                                              ; preds = %379, %370
  %381 = icmp eq ptr %374, null
  br i1 %381, label %382, label %384

382:                                              ; preds = %412, %380
  %383 = icmp eq ptr %376, null
  br i1 %383, label %461, label %415

384:                                              ; preds = %380, %412
  %385 = phi ptr [ %413, %412 ], [ %374, %380 ]
  %386 = getelementptr inbounds %struct.attrs_def, ptr %385, i64 0, i32 2
  %387 = load ptr, ptr %386, align 8, !tbaa !72
  %388 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %400, label %390

390:                                              ; preds = %384
  %391 = icmp eq ptr %387, null
  br i1 %391, label %412, label %392

392:                                              ; preds = %390
  %393 = load i64, ptr %387, align 8
  %394 = trunc i64 %393 to i16
  switch i16 %394, label %395 [
    i16 1, label %412
    i16 37, label %412
  ]

395:                                              ; preds = %392
  %396 = call ptr @target_for_debug_bind(ptr noundef nonnull %387) #21
  %397 = icmp eq ptr %396, null
  br i1 %397, label %398, label %412

398:                                              ; preds = %395
  %399 = load ptr, ptr %386, align 8, !tbaa !72
  br label %400

400:                                              ; preds = %398, %384
  %401 = phi ptr [ %399, %398 ], [ %387, %384 ]
  %402 = getelementptr inbounds %struct.attrs_def, ptr %385, i64 0, i32 3
  %403 = load i64, ptr %402, align 8, !tbaa !59
  %404 = getelementptr inbounds %struct.attrs_def, ptr %385, i64 0, i32 1
  %405 = load ptr, ptr %404, align 8, !tbaa !71
  %406 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  %407 = call ptr @pool_alloc(ptr noundef %406) #21
  %408 = getelementptr inbounds %struct.attrs_def, ptr %407, i64 0, i32 1
  store ptr %405, ptr %408, align 8, !tbaa !71
  %409 = getelementptr inbounds %struct.attrs_def, ptr %407, i64 0, i32 2
  store ptr %401, ptr %409, align 8, !tbaa !72
  %410 = getelementptr inbounds %struct.attrs_def, ptr %407, i64 0, i32 3
  store i64 %403, ptr %410, align 8, !tbaa !59
  %411 = load ptr, ptr %372, align 8, !tbaa !5
  store ptr %411, ptr %407, align 8, !tbaa !56
  store ptr %407, ptr %372, align 8, !tbaa !5
  br label %412

412:                                              ; preds = %400, %395, %392, %392, %390
  %413 = load ptr, ptr %385, align 8, !tbaa !56
  %414 = icmp eq ptr %413, null
  br i1 %414, label %382, label %384, !llvm.loop !152

415:                                              ; preds = %382, %458
  %416 = phi ptr [ %459, %458 ], [ %376, %382 ]
  %417 = getelementptr inbounds %struct.attrs_def, ptr %416, i64 0, i32 2
  %418 = load ptr, ptr %417, align 8, !tbaa !72
  %419 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %431, label %421

421:                                              ; preds = %415
  %422 = icmp eq ptr %418, null
  br i1 %422, label %458, label %423

423:                                              ; preds = %421
  %424 = load i64, ptr %418, align 8
  %425 = trunc i64 %424 to i16
  switch i16 %425, label %426 [
    i16 1, label %458
    i16 37, label %458
  ]

426:                                              ; preds = %423
  %427 = call ptr @target_for_debug_bind(ptr noundef nonnull %418) #21
  %428 = icmp eq ptr %427, null
  br i1 %428, label %429, label %458

429:                                              ; preds = %426
  %430 = load ptr, ptr %417, align 8, !tbaa !72
  br label %431

431:                                              ; preds = %429, %415
  %432 = phi ptr [ %430, %429 ], [ %418, %415 ]
  %433 = load ptr, ptr %372, align 8, !tbaa !5
  %434 = getelementptr inbounds %struct.attrs_def, ptr %416, i64 0, i32 3
  %435 = load i64, ptr %434, align 8, !tbaa !59
  %436 = icmp eq ptr %433, null
  br i1 %436, label %449, label %437

437:                                              ; preds = %431, %446
  %438 = phi ptr [ %447, %446 ], [ %433, %431 ]
  %439 = getelementptr inbounds %struct.attrs_def, ptr %438, i64 0, i32 2
  %440 = load ptr, ptr %439, align 8, !tbaa !72
  %441 = icmp eq ptr %440, %432
  br i1 %441, label %442, label %446

442:                                              ; preds = %437
  %443 = getelementptr inbounds %struct.attrs_def, ptr %438, i64 0, i32 3
  %444 = load i64, ptr %443, align 8, !tbaa !59
  %445 = icmp eq i64 %444, %435
  br i1 %445, label %458, label %446

446:                                              ; preds = %442, %437
  %447 = load ptr, ptr %438, align 8, !tbaa !56
  %448 = icmp eq ptr %447, null
  br i1 %448, label %449, label %437, !llvm.loop !153

449:                                              ; preds = %446, %431
  %450 = getelementptr inbounds %struct.attrs_def, ptr %416, i64 0, i32 1
  %451 = load ptr, ptr %450, align 8, !tbaa !71
  %452 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  %453 = call ptr @pool_alloc(ptr noundef %452) #21
  %454 = getelementptr inbounds %struct.attrs_def, ptr %453, i64 0, i32 1
  store ptr %451, ptr %454, align 8, !tbaa !71
  %455 = getelementptr inbounds %struct.attrs_def, ptr %453, i64 0, i32 2
  store ptr %432, ptr %455, align 8, !tbaa !72
  %456 = getelementptr inbounds %struct.attrs_def, ptr %453, i64 0, i32 3
  store i64 %435, ptr %456, align 8, !tbaa !59
  %457 = load ptr, ptr %372, align 8, !tbaa !5
  store ptr %457, ptr %453, align 8, !tbaa !56
  store ptr %453, ptr %372, align 8, !tbaa !5
  br label %458

458:                                              ; preds = %442, %449, %426, %423, %423, %421
  %459 = load ptr, ptr %416, align 8, !tbaa !56
  %460 = icmp eq ptr %459, null
  br i1 %460, label %461, label %415, !llvm.loop !154

461:                                              ; preds = %458, %382
  %462 = add nuw nsw i64 %371, 1
  %463 = icmp eq i64 %462, 53
  br i1 %463, label %464, label %370, !llvm.loop !155

464:                                              ; preds = %461
  store ptr %222, ptr %5, align 8, !tbaa !156
  store ptr %338, ptr %94, align 8, !tbaa !158
  store ptr %4, ptr %95, align 8, !tbaa !159
  store i32 0, ptr %96, align 8, !tbaa !160
  %465 = load ptr, ptr %343, align 8, !tbaa !51
  %466 = getelementptr i8, ptr %465, i64 8
  %467 = load ptr, ptr %466, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %467, ptr noundef nonnull @variable_merge_over_src, ptr noundef nonnull %5) #21
  %468 = load ptr, ptr %95, align 8, !tbaa !159
  %469 = getelementptr inbounds %struct.dataflow_set_def, ptr %468, i64 0, i32 2
  %470 = load ptr, ptr %469, align 8, !tbaa !51
  %471 = getelementptr i8, ptr %470, i64 8
  %472 = load ptr, ptr %471, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %472, ptr noundef nonnull @variable_merge_over_cur, ptr noundef nonnull %5) #21
  %473 = load i32, ptr %96, align 8, !tbaa !160
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %476, label %475

475:                                              ; preds = %464
  store i1 false, ptr @dst_can_be_shared, align 1
  br label %476

476:                                              ; preds = %475, %464
  br label %477

477:                                              ; preds = %476, %487
  %478 = phi i64 [ %488, %487 ], [ 0, %476 ]
  %479 = getelementptr inbounds %struct.dataflow_set_def, ptr %4, i64 0, i32 1, i64 %478
  %480 = load ptr, ptr %479, align 8, !tbaa !5
  %481 = icmp eq ptr %480, null
  br i1 %481, label %487, label %482

482:                                              ; preds = %477, %482
  %483 = phi ptr [ %484, %482 ], [ %480, %477 ]
  %484 = load ptr, ptr %483, align 8, !tbaa !56
  %485 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %485, ptr noundef nonnull %483) #21
  %486 = icmp eq ptr %484, null
  br i1 %486, label %487, label %482, !llvm.loop !58

487:                                              ; preds = %482, %477
  store ptr null, ptr %479, align 8, !tbaa !5
  %488 = add nuw nsw i64 %478, 1
  %489 = icmp eq i64 %488, 53
  br i1 %489, label %490, label %477, !llvm.loop !79

490:                                              ; preds = %487
  %491 = load ptr, ptr %93, align 8, !tbaa !51
  %492 = load i32, ptr %491, align 8, !tbaa !49
  %493 = icmp sgt i32 %492, 0
  br i1 %493, label %496, label %494

494:                                              ; preds = %490
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %495 = load i32, ptr %491, align 8, !tbaa !49
  br label %496

496:                                              ; preds = %494, %490
  %497 = phi i32 [ %492, %490 ], [ %495, %494 ]
  %498 = add nsw i32 %497, -1
  store i32 %498, ptr %491, align 8, !tbaa !49
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %504

500:                                              ; preds = %496
  %501 = getelementptr inbounds %struct.shared_hash_def, ptr %491, i64 0, i32 1
  %502 = load ptr, ptr %501, align 8, !tbaa !55
  call void @htab_delete(ptr noundef %502) #21
  %503 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %503, ptr noundef nonnull %491) #21
  br label %504

504:                                              ; preds = %496, %500
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 448, ptr nonnull %4) #21
  br label %505

505:                                              ; preds = %327, %504, %268, %279
  %506 = phi ptr [ %336, %327 ], [ %246, %504 ], [ %246, %268 ], [ %246, %279 ]
  %507 = phi i8 [ 0, %327 ], [ 0, %504 ], [ %247, %268 ], [ %247, %279 ]
  %508 = phi i8 [ %248, %327 ], [ 1, %504 ], [ %248, %268 ], [ %248, %279 ]
  %509 = load ptr, ptr %114, align 8, !tbaa !5
  %510 = icmp eq ptr %509, null
  br i1 %510, label %514, label %511

511:                                              ; preds = %505
  %512 = load i32, ptr %509, align 8, !tbaa !106
  %513 = icmp ult i32 %245, %512
  br i1 %513, label %515, label %514

514:                                              ; preds = %511, %505
  call void @fancy_abort(ptr noundef nonnull @.str.10, i32 noundef 738, ptr noundef nonnull @.str.2) #21
  br label %515

515:                                              ; preds = %511, %514
  %516 = add i32 %245, 1
  br label %244, !llvm.loop !161

517:                                              ; preds = %255
  %518 = icmp eq i8 %248, 0
  br i1 %518, label %559, label %519

519:                                              ; preds = %517
  %520 = load ptr, ptr %169, align 8, !tbaa !39
  %521 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %520, i64 0, i32 3
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #21
  store ptr %222, ptr %3, align 8, !tbaa !162
  store ptr %521, ptr %97, align 8, !tbaa !164
  %522 = load ptr, ptr %223, align 8, !tbaa !51
  %523 = getelementptr i8, ptr %522, i64 8
  %524 = load ptr, ptr %523, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %524, ptr noundef nonnull @variable_post_merge_new_vals, ptr noundef nonnull %3) #21
  %525 = load ptr, ptr %521, align 8, !tbaa !5
  %526 = icmp eq ptr %525, null
  br i1 %526, label %532, label %527

527:                                              ; preds = %519
  %528 = getelementptr inbounds %struct.dataflow_set_def, ptr %525, i64 0, i32 2
  %529 = load ptr, ptr %528, align 8, !tbaa !51
  %530 = getelementptr i8, ptr %529, i64 8
  %531 = load ptr, ptr %530, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %531, ptr noundef nonnull @variable_post_merge_perm_vals, ptr noundef nonnull %3) #21
  br label %532

532:                                              ; preds = %519, %527
  %533 = load ptr, ptr %223, align 8, !tbaa !51
  %534 = getelementptr i8, ptr %533, i64 8
  %535 = load ptr, ptr %534, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %535, ptr noundef nonnull @canonicalize_values_star, ptr noundef nonnull %222) #21
  %536 = load ptr, ptr %223, align 8, !tbaa !51
  %537 = getelementptr i8, ptr %536, i64 8
  %538 = load ptr, ptr %537, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %538, ptr noundef nonnull @canonicalize_vars_star, ptr noundef nonnull %222) #21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #21
  %539 = load i1, ptr @dst_can_be_shared, align 1
  br i1 %539, label %540, label %559

540:                                              ; preds = %532
  %541 = load ptr, ptr %223, align 8, !tbaa !51
  %542 = load i32, ptr %541, align 8, !tbaa !49
  %543 = icmp sgt i32 %542, 0
  br i1 %543, label %546, label %544

544:                                              ; preds = %540
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %545 = load i32, ptr %541, align 8, !tbaa !49
  br label %546

546:                                              ; preds = %544, %540
  %547 = phi i32 [ %542, %540 ], [ %545, %544 ]
  %548 = add nsw i32 %547, -1
  store i32 %548, ptr %541, align 8, !tbaa !49
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %550, label %554

550:                                              ; preds = %546
  %551 = getelementptr inbounds %struct.shared_hash_def, ptr %541, i64 0, i32 1
  %552 = load ptr, ptr %551, align 8, !tbaa !55
  call void @htab_delete(ptr noundef %552) #21
  %553 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %553, ptr noundef nonnull %541) #21
  br label %554

554:                                              ; preds = %546, %550
  %555 = getelementptr inbounds %struct.dataflow_set_def, ptr %246, i64 0, i32 2
  %556 = load ptr, ptr %555, align 8, !tbaa !51
  %557 = load i32, ptr %556, align 8, !tbaa !49
  %558 = add nsw i32 %557, 1
  store i32 %558, ptr %556, align 8, !tbaa !49
  store ptr %556, ptr %223, align 8, !tbaa !51
  br label %559

559:                                              ; preds = %532, %554, %517
  %560 = load ptr, ptr %169, align 8, !tbaa !39
  %561 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %560, i64 0, i32 5
  store i8 1, ptr %561, align 1, !tbaa !81
  br label %665

562:                                              ; preds = %201
  %563 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %207, i64 0, i32 1
  call fastcc void @dataflow_set_clear(ptr noundef nonnull %563)
  br label %564

564:                                              ; preds = %562, %661
  %565 = phi i32 [ 0, %562 ], [ %662, %661 ]
  %566 = load ptr, ptr %114, align 8, !tbaa !5
  %567 = icmp eq ptr %566, null
  br i1 %567, label %570, label %568

568:                                              ; preds = %564
  %569 = load i32, ptr %566, align 8, !tbaa !106
  br label %570

570:                                              ; preds = %568, %564
  %571 = phi i32 [ %569, %568 ], [ 0, %564 ]
  %572 = icmp eq i32 %571, %565
  br i1 %572, label %663, label %573

573:                                              ; preds = %570
  %574 = zext i32 %565 to i64
  %575 = getelementptr inbounds %struct.VEC_edge_base, ptr %566, i64 0, i32 2, i64 %574
  %576 = load ptr, ptr %575, align 8, !tbaa !5
  %577 = load ptr, ptr %169, align 8, !tbaa !39
  %578 = load ptr, ptr %576, align 8, !tbaa !98
  %579 = getelementptr inbounds %struct.basic_block_def, ptr %578, i64 0, i32 2
  %580 = load ptr, ptr %579, align 8, !tbaa !39
  br label %581

581:                                              ; preds = %622, %573
  %582 = phi i64 [ 0, %573 ], [ %623, %622 ]
  %583 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %577, i64 0, i32 1, i32 1, i64 %582
  %584 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %580, i64 0, i32 2, i32 1, i64 %582
  %585 = load ptr, ptr %584, align 8, !tbaa !5
  %586 = icmp eq ptr %585, null
  br i1 %586, label %622, label %587

587:                                              ; preds = %581
  %588 = load ptr, ptr %583, align 8, !tbaa !5
  br label %589

589:                                              ; preds = %618, %587
  %590 = phi ptr [ %619, %618 ], [ %588, %587 ]
  %591 = phi ptr [ %620, %618 ], [ %585, %587 ]
  %592 = getelementptr inbounds %struct.attrs_def, ptr %591, i64 0, i32 2
  %593 = load ptr, ptr %592, align 8, !tbaa !72
  %594 = getelementptr inbounds %struct.attrs_def, ptr %591, i64 0, i32 3
  %595 = load i64, ptr %594, align 8, !tbaa !59
  %596 = icmp eq ptr %590, null
  br i1 %596, label %609, label %597

597:                                              ; preds = %589, %606
  %598 = phi ptr [ %607, %606 ], [ %590, %589 ]
  %599 = getelementptr inbounds %struct.attrs_def, ptr %598, i64 0, i32 2
  %600 = load ptr, ptr %599, align 8, !tbaa !72
  %601 = icmp eq ptr %600, %593
  br i1 %601, label %602, label %606

602:                                              ; preds = %597
  %603 = getelementptr inbounds %struct.attrs_def, ptr %598, i64 0, i32 3
  %604 = load i64, ptr %603, align 8, !tbaa !59
  %605 = icmp eq i64 %604, %595
  br i1 %605, label %618, label %606

606:                                              ; preds = %602, %597
  %607 = load ptr, ptr %598, align 8, !tbaa !56
  %608 = icmp eq ptr %607, null
  br i1 %608, label %609, label %597, !llvm.loop !153

609:                                              ; preds = %606, %589
  %610 = getelementptr inbounds %struct.attrs_def, ptr %591, i64 0, i32 1
  %611 = load ptr, ptr %610, align 8, !tbaa !71
  %612 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  %613 = call ptr @pool_alloc(ptr noundef %612) #21
  %614 = getelementptr inbounds %struct.attrs_def, ptr %613, i64 0, i32 1
  store ptr %611, ptr %614, align 8, !tbaa !71
  %615 = getelementptr inbounds %struct.attrs_def, ptr %613, i64 0, i32 2
  store ptr %593, ptr %615, align 8, !tbaa !72
  %616 = getelementptr inbounds %struct.attrs_def, ptr %613, i64 0, i32 3
  store i64 %595, ptr %616, align 8, !tbaa !59
  %617 = load ptr, ptr %583, align 8, !tbaa !5
  store ptr %617, ptr %613, align 8, !tbaa !56
  store ptr %613, ptr %583, align 8, !tbaa !5
  br label %618

618:                                              ; preds = %602, %609
  %619 = phi ptr [ %613, %609 ], [ %590, %602 ]
  %620 = load ptr, ptr %591, align 8, !tbaa !56
  %621 = icmp eq ptr %620, null
  br i1 %621, label %622, label %589, !llvm.loop !165

622:                                              ; preds = %618, %581
  %623 = add nuw nsw i64 %582, 1
  %624 = icmp eq i64 %623, 53
  br i1 %624, label %625, label %581, !llvm.loop !166

625:                                              ; preds = %622
  %626 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %577, i64 0, i32 1, i32 2
  %627 = load ptr, ptr %626, align 8, !tbaa !51
  %628 = load ptr, ptr @empty_shared_hash, align 8, !tbaa !5
  %629 = icmp eq ptr %627, %628
  br i1 %629, label %630, label %648

630:                                              ; preds = %625
  %631 = load i32, ptr %627, align 8, !tbaa !49
  %632 = icmp sgt i32 %631, 0
  br i1 %632, label %635, label %633

633:                                              ; preds = %630
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %634 = load i32, ptr %627, align 8, !tbaa !49
  br label %635

635:                                              ; preds = %633, %630
  %636 = phi i32 [ %631, %630 ], [ %634, %633 ]
  %637 = add nsw i32 %636, -1
  store i32 %637, ptr %627, align 8, !tbaa !49
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %639, label %643

639:                                              ; preds = %635
  %640 = getelementptr inbounds %struct.shared_hash_def, ptr %627, i64 0, i32 1
  %641 = load ptr, ptr %640, align 8, !tbaa !55
  call void @htab_delete(ptr noundef %641) #21
  %642 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %642, ptr noundef nonnull %627) #21
  br label %643

643:                                              ; preds = %639, %635
  %644 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %580, i64 0, i32 2, i32 2
  %645 = load ptr, ptr %644, align 8, !tbaa !51
  %646 = load i32, ptr %645, align 8, !tbaa !49
  %647 = add nsw i32 %646, 1
  store i32 %647, ptr %645, align 8, !tbaa !49
  store ptr %645, ptr %626, align 8, !tbaa !51
  br label %654

648:                                              ; preds = %625
  %649 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %577, i64 0, i32 1
  %650 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %580, i64 0, i32 2, i32 2
  %651 = load ptr, ptr %650, align 8, !tbaa !51
  %652 = getelementptr i8, ptr %651, i64 8
  %653 = load ptr, ptr %652, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %653, ptr noundef nonnull @variable_union, ptr noundef nonnull %649) #21
  br label %654

654:                                              ; preds = %648, %643
  %655 = load ptr, ptr %114, align 8, !tbaa !5
  %656 = icmp eq ptr %655, null
  br i1 %656, label %660, label %657

657:                                              ; preds = %654
  %658 = load i32, ptr %655, align 8, !tbaa !106
  %659 = icmp ult i32 %565, %658
  br i1 %659, label %661, label %660

660:                                              ; preds = %657, %654
  call void @fancy_abort(ptr noundef nonnull @.str.10, i32 noundef 738, ptr noundef nonnull @.str.2) #21
  br label %661

661:                                              ; preds = %657, %660
  %662 = add i32 %565, 1
  br label %564, !llvm.loop !167

663:                                              ; preds = %570
  %664 = load ptr, ptr %169, align 8, !tbaa !39
  br label %665

665:                                              ; preds = %663, %559
  %666 = phi ptr [ %664, %663 ], [ %560, %559 ]
  call void @llvm.lifetime.start.p0(i64 448, ptr nonnull %2) #21
  %667 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %666, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(424) %98, i8 0, i64 424, i1 false), !tbaa !5
  %668 = load ptr, ptr @empty_shared_hash, align 8, !tbaa !5
  %669 = load i32, ptr %668, align 8, !tbaa !49
  %670 = add nsw i32 %669, 1
  store i32 %670, ptr %668, align 8, !tbaa !49
  store ptr %668, ptr %99, align 8, !tbaa !51
  store i64 0, ptr %2, align 8, !tbaa !53
  store ptr null, ptr %100, align 8, !tbaa !54
  br label %671

671:                                              ; preds = %698, %665
  %672 = phi i64 [ 0, %665 ], [ %699, %698 ]
  %673 = getelementptr inbounds %struct.dataflow_set_def, ptr %2, i64 0, i32 1, i64 %672
  %674 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %666, i64 0, i32 2, i32 1, i64 %672
  %675 = load ptr, ptr %674, align 8, !tbaa !5
  %676 = load ptr, ptr %673, align 8, !tbaa !5
  %677 = icmp eq ptr %676, null
  br i1 %677, label %683, label %678

678:                                              ; preds = %671, %678
  %679 = phi ptr [ %680, %678 ], [ %676, %671 ]
  %680 = load ptr, ptr %679, align 8, !tbaa !56
  %681 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %681, ptr noundef nonnull %679) #21
  %682 = icmp eq ptr %680, null
  br i1 %682, label %683, label %678, !llvm.loop !58

683:                                              ; preds = %678, %671
  store ptr null, ptr %673, align 8, !tbaa !5
  %684 = icmp eq ptr %675, null
  br i1 %684, label %698, label %685

685:                                              ; preds = %683, %685
  %686 = phi ptr [ %689, %685 ], [ null, %683 ]
  %687 = phi ptr [ %696, %685 ], [ %675, %683 ]
  %688 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  %689 = call ptr @pool_alloc(ptr noundef %688) #21
  %690 = getelementptr inbounds %struct.attrs_def, ptr %687, i64 0, i32 1
  %691 = getelementptr inbounds %struct.attrs_def, ptr %689, i64 0, i32 1
  %692 = load <2 x ptr>, ptr %690, align 8, !tbaa !5
  store <2 x ptr> %692, ptr %691, align 8, !tbaa !5
  %693 = getelementptr inbounds %struct.attrs_def, ptr %687, i64 0, i32 3
  %694 = load i64, ptr %693, align 8, !tbaa !59
  %695 = getelementptr inbounds %struct.attrs_def, ptr %689, i64 0, i32 3
  store i64 %694, ptr %695, align 8, !tbaa !59
  store ptr %686, ptr %689, align 8, !tbaa !56
  store ptr %689, ptr %673, align 8, !tbaa !5
  %696 = load ptr, ptr %687, align 8, !tbaa !56
  %697 = icmp eq ptr %696, null
  br i1 %697, label %698, label %685, !llvm.loop !60

698:                                              ; preds = %685, %683
  %699 = add nuw nsw i64 %672, 1
  %700 = icmp eq i64 %699, 53
  br i1 %700, label %701, label %671, !llvm.loop !61

701:                                              ; preds = %698
  %702 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %666, i64 0, i32 2
  %703 = load ptr, ptr %99, align 8, !tbaa !51
  %704 = load i32, ptr %703, align 8, !tbaa !49
  %705 = icmp sgt i32 %704, 0
  br i1 %705, label %708, label %706

706:                                              ; preds = %701
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %707 = load i32, ptr %703, align 8, !tbaa !49
  br label %708

708:                                              ; preds = %706, %701
  %709 = phi i32 [ %704, %701 ], [ %707, %706 ]
  %710 = add nsw i32 %709, -1
  store i32 %710, ptr %703, align 8, !tbaa !49
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %712, label %716

712:                                              ; preds = %708
  %713 = getelementptr inbounds %struct.shared_hash_def, ptr %703, i64 0, i32 1
  %714 = load ptr, ptr %713, align 8, !tbaa !55
  call void @htab_delete(ptr noundef %714) #21
  %715 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %715, ptr noundef nonnull %703) #21
  br label %716

716:                                              ; preds = %708, %712
  %717 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %666, i64 0, i32 2, i32 2
  %718 = load ptr, ptr %717, align 8, !tbaa !51
  %719 = load i32, ptr %718, align 8, !tbaa !49
  %720 = add nsw i32 %719, 1
  store i32 %720, ptr %718, align 8, !tbaa !49
  store ptr %718, ptr %99, align 8, !tbaa !51
  %721 = load i64, ptr %702, align 8, !tbaa !53
  store i64 %721, ptr %2, align 8, !tbaa !53
  br label %722

722:                                              ; preds = %749, %716
  %723 = phi i64 [ 0, %716 ], [ %750, %749 ]
  %724 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %666, i64 0, i32 2, i32 1, i64 %723
  %725 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %666, i64 0, i32 1, i32 1, i64 %723
  %726 = load ptr, ptr %725, align 8, !tbaa !5
  %727 = load ptr, ptr %724, align 8, !tbaa !5
  %728 = icmp eq ptr %727, null
  br i1 %728, label %734, label %729

729:                                              ; preds = %722, %729
  %730 = phi ptr [ %731, %729 ], [ %727, %722 ]
  %731 = load ptr, ptr %730, align 8, !tbaa !56
  %732 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %732, ptr noundef nonnull %730) #21
  %733 = icmp eq ptr %731, null
  br i1 %733, label %734, label %729, !llvm.loop !58

734:                                              ; preds = %729, %722
  store ptr null, ptr %724, align 8, !tbaa !5
  %735 = icmp eq ptr %726, null
  br i1 %735, label %749, label %736

736:                                              ; preds = %734, %736
  %737 = phi ptr [ %747, %736 ], [ %726, %734 ]
  %738 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  %739 = call ptr @pool_alloc(ptr noundef %738) #21
  %740 = getelementptr inbounds %struct.attrs_def, ptr %737, i64 0, i32 1
  %741 = getelementptr inbounds %struct.attrs_def, ptr %739, i64 0, i32 1
  %742 = load <2 x ptr>, ptr %740, align 8, !tbaa !5
  store <2 x ptr> %742, ptr %741, align 8, !tbaa !5
  %743 = getelementptr inbounds %struct.attrs_def, ptr %737, i64 0, i32 3
  %744 = load i64, ptr %743, align 8, !tbaa !59
  %745 = getelementptr inbounds %struct.attrs_def, ptr %739, i64 0, i32 3
  store i64 %744, ptr %745, align 8, !tbaa !59
  %746 = load ptr, ptr %724, align 8, !tbaa !5
  store ptr %746, ptr %739, align 8, !tbaa !56
  store ptr %739, ptr %724, align 8, !tbaa !5
  %747 = load ptr, ptr %737, align 8, !tbaa !56
  %748 = icmp eq ptr %747, null
  br i1 %748, label %749, label %736, !llvm.loop !60

749:                                              ; preds = %736, %734
  %750 = add nuw nsw i64 %723, 1
  %751 = icmp eq i64 %750, 53
  br i1 %751, label %752, label %722, !llvm.loop !61

752:                                              ; preds = %749
  %753 = load ptr, ptr %717, align 8, !tbaa !51
  %754 = load i32, ptr %753, align 8, !tbaa !49
  %755 = icmp sgt i32 %754, 0
  br i1 %755, label %758, label %756

756:                                              ; preds = %752
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %757 = load i32, ptr %753, align 8, !tbaa !49
  br label %758

758:                                              ; preds = %756, %752
  %759 = phi i32 [ %754, %752 ], [ %757, %756 ]
  %760 = add nsw i32 %759, -1
  store i32 %760, ptr %753, align 8, !tbaa !49
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %762, label %766

762:                                              ; preds = %758
  %763 = getelementptr inbounds %struct.shared_hash_def, ptr %753, i64 0, i32 1
  %764 = load ptr, ptr %763, align 8, !tbaa !55
  call void @htab_delete(ptr noundef %764) #21
  %765 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %765, ptr noundef nonnull %753) #21
  br label %766

766:                                              ; preds = %758, %762
  %767 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %666, i64 0, i32 1, i32 2
  %768 = load ptr, ptr %767, align 8, !tbaa !51
  %769 = load i32, ptr %768, align 8, !tbaa !49
  %770 = add nsw i32 %769, 1
  store i32 %770, ptr %768, align 8, !tbaa !49
  store ptr %768, ptr %717, align 8, !tbaa !51
  %771 = load i64, ptr %667, align 8, !tbaa !53
  store i64 %771, ptr %702, align 8, !tbaa !53
  %772 = load ptr, ptr %169, align 8, !tbaa !39
  %773 = load ptr, ptr %772, align 8, !tbaa !62
  %774 = icmp eq ptr %773, null
  br i1 %774, label %1260, label %775

775:                                              ; preds = %766
  %776 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %666, i64 0, i32 2, i32 3
  br label %777

777:                                              ; preds = %1255, %775
  %778 = phi ptr [ %773, %775 ], [ %1258, %1255 ]
  %779 = phi i32 [ 0, %775 ], [ %1256, %1255 ]
  %780 = load i32, ptr %778, align 8, !tbaa !64
  %781 = icmp ugt i32 %780, %779
  br i1 %781, label %782, label %1260

782:                                              ; preds = %777
  %783 = zext i32 %779 to i64
  %784 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %778, i64 0, i32 2, i64 %783
  %785 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %778, i64 0, i32 2, i64 %783, i32 1
  %786 = load ptr, ptr %785, align 8, !tbaa !67
  %787 = load i32, ptr %784, align 8, !tbaa !69
  switch i32 %787, label %1255 [
    i32 8, label %788
    i32 0, label %845
    i32 3, label %862
    i32 2, label %977
    i32 4, label %1019
    i32 5, label %1189
    i32 6, label %1208
    i32 1, label %1236
    i32 7, label %1243
    i32 9, label %1250
  ]

788:                                              ; preds = %782, %832
  %789 = phi i64 [ %833, %832 ], [ 0, %782 ]
  %790 = load i64, ptr @regs_invalidated_by_call, align 8, !tbaa !70
  %791 = shl nuw nsw i64 1, %789
  %792 = and i64 %790, %791
  %793 = icmp eq i64 %792, 0
  br i1 %793, label %832, label %794

794:                                              ; preds = %788
  %795 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %666, i64 0, i32 2, i32 1, i64 %789
  %796 = load ptr, ptr %795, align 8, !tbaa !5
  %797 = icmp eq ptr %796, null
  br i1 %797, label %831, label %798

798:                                              ; preds = %794, %828
  %799 = phi ptr [ %800, %828 ], [ %796, %794 ]
  %800 = load ptr, ptr %799, align 8, !tbaa !56
  %801 = getelementptr inbounds %struct.attrs_def, ptr %799, i64 0, i32 1
  %802 = load ptr, ptr %801, align 8, !tbaa !71
  %803 = getelementptr inbounds %struct.attrs_def, ptr %799, i64 0, i32 2
  %804 = load ptr, ptr %803, align 8, !tbaa !72
  %805 = getelementptr inbounds %struct.attrs_def, ptr %799, i64 0, i32 3
  %806 = load i64, ptr %805, align 8, !tbaa !59
  %807 = load ptr, ptr %717, align 8, !tbaa !51
  %808 = icmp eq ptr %804, null
  br i1 %808, label %817, label %809

809:                                              ; preds = %798
  %810 = load i64, ptr %804, align 8
  %811 = and i64 %810, 65535
  %812 = icmp eq i64 %811, 1
  br i1 %812, label %813, label %817

813:                                              ; preds = %809
  %814 = getelementptr inbounds %struct.rtx_def, ptr %804, i64 0, i32 1
  %815 = load ptr, ptr %814, align 8, !tbaa !16
  %816 = getelementptr inbounds %struct.cselib_val_struct, ptr %815, i64 0, i32 1
  br label %819

817:                                              ; preds = %809, %798
  %818 = getelementptr inbounds %struct.tree_decl_minimal, ptr %804, i64 0, i32 2
  br label %819

819:                                              ; preds = %817, %813
  %820 = phi ptr [ %816, %813 ], [ %818, %817 ]
  %821 = load i32, ptr %820, align 4, !tbaa !16
  %822 = getelementptr i8, ptr %807, i64 8
  %823 = load ptr, ptr %822, align 8, !tbaa !55
  %824 = call ptr @htab_find_slot_with_hash(ptr noundef %823, ptr noundef %804, i32 noundef %821, i32 noundef 0) #21
  %825 = icmp eq ptr %824, null
  br i1 %825, label %828, label %826

826:                                              ; preds = %819
  %827 = call fastcc ptr @delete_slot_part(ptr noundef nonnull %702, ptr noundef %802, ptr noundef nonnull %824, i64 noundef %806)
  br label %828

828:                                              ; preds = %826, %819
  %829 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %829, ptr noundef nonnull %799) #21
  %830 = icmp eq ptr %800, null
  br i1 %830, label %831, label %798, !llvm.loop !73

831:                                              ; preds = %828, %794
  store ptr null, ptr %795, align 8, !tbaa !5
  br label %832

832:                                              ; preds = %831, %788
  %833 = add nuw nsw i64 %789, 1
  %834 = icmp eq i64 %833, 53
  br i1 %834, label %835, label %788, !llvm.loop !74

835:                                              ; preds = %832
  %836 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %837 = icmp eq i32 %836, 0
  br i1 %837, label %1255, label %838

838:                                              ; preds = %835
  %839 = load ptr, ptr %717, align 8, !tbaa !51
  store ptr %839, ptr %776, align 8, !tbaa !54
  %840 = getelementptr i8, ptr %839, i64 8
  %841 = load ptr, ptr %840, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %841, ptr noundef nonnull @dataflow_set_preserve_mem_locs, ptr noundef nonnull %702) #21
  %842 = load ptr, ptr %717, align 8, !tbaa !51
  store ptr %842, ptr %776, align 8, !tbaa !54
  %843 = getelementptr i8, ptr %842, i64 8
  %844 = load ptr, ptr %843, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %844, ptr noundef nonnull @dataflow_set_remove_mem_locs, ptr noundef nonnull %702) #21
  store ptr null, ptr %776, align 8, !tbaa !54
  br label %1255

845:                                              ; preds = %782
  %846 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %778, i64 0, i32 2, i64 %783, i32 2
  %847 = load ptr, ptr %846, align 8, !tbaa !16
  %848 = load i32, ptr %847, align 8
  %849 = trunc i32 %848 to i16
  switch i16 %849, label %1255 [
    i16 37, label %850
    i16 43, label %861
  ]

850:                                              ; preds = %845
  %851 = getelementptr inbounds %struct.rtx_def, ptr %847, i64 0, i32 1, i32 0, i32 0, i64 2
  %852 = load ptr, ptr %851, align 8, !tbaa !16
  %853 = icmp eq ptr %852, null
  br i1 %853, label %858, label %854

854:                                              ; preds = %850
  %855 = load ptr, ptr %852, align 8, !tbaa !75
  %856 = getelementptr inbounds %struct.reg_attrs, ptr %852, i64 0, i32 1
  %857 = load i64, ptr %856, align 8, !tbaa !77
  br label %858

858:                                              ; preds = %854, %850
  %859 = phi ptr [ %855, %854 ], [ null, %850 ]
  %860 = phi i64 [ %857, %854 ], [ 0, %850 ]
  call fastcc void @var_reg_decl_set(ptr noundef nonnull %702, ptr noundef nonnull %847, i32 noundef 1, ptr noundef %859, i64 noundef %860, ptr noundef null, i32 noundef 1)
  br label %1255

861:                                              ; preds = %845
  call fastcc void @var_mem_set(ptr noundef nonnull %702, ptr noundef nonnull %847, i32 noundef 1, ptr noundef null)
  br label %1255

862:                                              ; preds = %782
  %863 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %778, i64 0, i32 2, i64 %783, i32 2
  %864 = load ptr, ptr %863, align 8, !tbaa !16
  %865 = load i32, ptr %864, align 8
  %866 = and i32 %865, 65535
  %867 = icmp eq i32 %866, 41
  br i1 %867, label %868, label %873

868:                                              ; preds = %862
  %869 = getelementptr inbounds %struct.rtx_def, ptr %864, i64 0, i32 1
  %870 = load ptr, ptr %869, align 8, !tbaa !16
  %871 = getelementptr inbounds %struct.rtx_def, ptr %864, i64 0, i32 1, i32 0, i32 0, i64 1
  %872 = load ptr, ptr %871, align 8, !tbaa !16
  br label %873

873:                                              ; preds = %868, %862
  %874 = phi ptr [ %872, %868 ], [ %864, %862 ]
  %875 = phi ptr [ %870, %868 ], [ null, %862 ]
  %876 = getelementptr inbounds %struct.rtx_def, ptr %874, i64 0, i32 1
  %877 = load ptr, ptr %876, align 8, !tbaa !16
  %878 = icmp eq ptr %877, null
  br i1 %878, label %903, label %879

879:                                              ; preds = %873
  %880 = load i64, ptr %877, align 8
  %881 = and i64 %880, 65535
  %882 = icmp eq i64 %881, 1
  br i1 %882, label %887, label %883

883:                                              ; preds = %879
  %884 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %881
  %885 = load i32, ptr %884, align 4, !tbaa !16
  %886 = icmp eq i32 %885, 3
  br i1 %886, label %891, label %903

887:                                              ; preds = %879
  %888 = getelementptr inbounds %struct.rtx_def, ptr %877, i64 0, i32 1
  %889 = load ptr, ptr %888, align 8, !tbaa !16
  %890 = getelementptr inbounds %struct.cselib_val_struct, ptr %889, i64 0, i32 1
  br label %893

891:                                              ; preds = %883
  %892 = getelementptr inbounds %struct.tree_decl_minimal, ptr %877, i64 0, i32 2
  br label %893

893:                                              ; preds = %891, %887
  %894 = phi ptr [ %890, %887 ], [ %892, %891 ]
  %895 = load ptr, ptr %717, align 8, !tbaa !51
  %896 = load i32, ptr %894, align 4, !tbaa !16
  %897 = getelementptr i8, ptr %895, i64 8
  %898 = load ptr, ptr %897, align 8, !tbaa !55
  %899 = call ptr @htab_find_slot_with_hash(ptr noundef %898, ptr noundef nonnull %877, i32 noundef %896, i32 noundef 0) #21
  %900 = icmp eq ptr %899, null
  br i1 %900, label %903, label %901

901:                                              ; preds = %893
  %902 = call fastcc ptr @clobber_slot_part(ptr noundef nonnull %702, ptr noundef null, ptr noundef nonnull %899, i64 noundef 0, ptr noundef null)
  br label %903

903:                                              ; preds = %901, %893, %883, %873
  %904 = icmp eq ptr %875, null
  br i1 %904, label %939, label %905

905:                                              ; preds = %903
  %906 = load i32, ptr %864, align 8
  %907 = and i32 %906, 134217728
  %908 = icmp eq i32 %907, 0
  br i1 %908, label %912, label %909

909:                                              ; preds = %905
  %910 = getelementptr inbounds %struct.rtx_def, ptr %874, i64 0, i32 1, i32 0, i32 0, i64 1
  %911 = load ptr, ptr %910, align 8, !tbaa !16
  call fastcc void @val_resolve(ptr noundef nonnull %702, ptr noundef nonnull %875, ptr noundef %911, ptr noundef %786)
  br label %912

912:                                              ; preds = %909, %905
  %913 = load ptr, ptr %717, align 8, !tbaa !51
  br i1 %878, label %922, label %914

914:                                              ; preds = %912
  %915 = load i64, ptr %877, align 8
  %916 = and i64 %915, 65535
  %917 = icmp eq i64 %916, 1
  br i1 %917, label %918, label %922

918:                                              ; preds = %914
  %919 = getelementptr inbounds %struct.rtx_def, ptr %877, i64 0, i32 1
  %920 = load ptr, ptr %919, align 8, !tbaa !16
  %921 = getelementptr inbounds %struct.cselib_val_struct, ptr %920, i64 0, i32 1
  br label %924

922:                                              ; preds = %914, %912
  %923 = getelementptr inbounds %struct.tree_decl_minimal, ptr %877, i64 0, i32 2
  br label %924

924:                                              ; preds = %922, %918
  %925 = phi ptr [ %921, %918 ], [ %923, %922 ]
  %926 = load i32, ptr %925, align 4, !tbaa !16
  %927 = load i32, ptr %913, align 8, !tbaa !49
  %928 = getelementptr i8, ptr %913, i64 8
  %929 = load ptr, ptr %928, align 8, !tbaa !55
  %930 = icmp slt i32 %927, 2
  %931 = zext i1 %930 to i32
  %932 = call ptr @htab_find_slot_with_hash(ptr noundef %929, ptr noundef %877, i32 noundef %926, i32 noundef %931) #21
  %933 = icmp eq ptr %932, null
  br i1 %933, label %934, label %936

934:                                              ; preds = %924
  %935 = call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %717, ptr noundef %877, i32 noundef 1)
  br label %936

936:                                              ; preds = %934, %924
  %937 = phi ptr [ %932, %924 ], [ %935, %934 ]
  %938 = call fastcc ptr @set_slot_part(ptr noundef nonnull %702, ptr noundef nonnull %875, ptr noundef %937, ptr noundef %877, i64 noundef 0, i32 noundef 2, ptr noundef null)
  br label %1255

939:                                              ; preds = %903
  %940 = getelementptr inbounds %struct.rtx_def, ptr %874, i64 0, i32 1, i32 0, i32 0, i64 1
  %941 = load ptr, ptr %940, align 8, !tbaa !16
  %942 = load i32, ptr %941, align 8
  %943 = and i32 %942, 65535
  %944 = icmp eq i32 %943, 25
  br i1 %944, label %945, label %950

945:                                              ; preds = %939
  %946 = getelementptr inbounds %struct.rtx_def, ptr %941, i64 0, i32 1
  %947 = load ptr, ptr %946, align 8, !tbaa !16
  %948 = load ptr, ptr getelementptr inbounds ([129 x ptr], ptr @const_int_rtx, i64 0, i64 64), align 16, !tbaa !5
  %949 = icmp eq ptr %947, %948
  br i1 %949, label %1255, label %950

950:                                              ; preds = %945, %939
  %951 = load ptr, ptr %717, align 8, !tbaa !51
  br i1 %878, label %960, label %952

952:                                              ; preds = %950
  %953 = load i64, ptr %877, align 8
  %954 = and i64 %953, 65535
  %955 = icmp eq i64 %954, 1
  br i1 %955, label %956, label %960

956:                                              ; preds = %952
  %957 = getelementptr inbounds %struct.rtx_def, ptr %877, i64 0, i32 1
  %958 = load ptr, ptr %957, align 8, !tbaa !16
  %959 = getelementptr inbounds %struct.cselib_val_struct, ptr %958, i64 0, i32 1
  br label %962

960:                                              ; preds = %952, %950
  %961 = getelementptr inbounds %struct.tree_decl_minimal, ptr %877, i64 0, i32 2
  br label %962

962:                                              ; preds = %960, %956
  %963 = phi ptr [ %959, %956 ], [ %961, %960 ]
  %964 = load i32, ptr %963, align 4, !tbaa !16
  %965 = load i32, ptr %951, align 8, !tbaa !49
  %966 = getelementptr i8, ptr %951, i64 8
  %967 = load ptr, ptr %966, align 8, !tbaa !55
  %968 = icmp slt i32 %965, 2
  %969 = zext i1 %968 to i32
  %970 = call ptr @htab_find_slot_with_hash(ptr noundef %967, ptr noundef %877, i32 noundef %964, i32 noundef %969) #21
  %971 = icmp eq ptr %970, null
  br i1 %971, label %972, label %974

972:                                              ; preds = %962
  %973 = call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %717, ptr noundef %877, i32 noundef 1)
  br label %974

974:                                              ; preds = %972, %962
  %975 = phi ptr [ %970, %962 ], [ %973, %972 ]
  %976 = call fastcc ptr @set_slot_part(ptr noundef nonnull %702, ptr noundef nonnull %941, ptr noundef %975, ptr noundef %877, i64 noundef 0, i32 noundef 2, ptr noundef null)
  br label %1255

977:                                              ; preds = %782
  %978 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %778, i64 0, i32 2, i64 %783, i32 2
  %979 = load ptr, ptr %978, align 8, !tbaa !16
  %980 = getelementptr inbounds %struct.rtx_def, ptr %979, i64 0, i32 1
  %981 = getelementptr inbounds %struct.rtx_def, ptr %979, i64 0, i32 1, i32 0, i32 0, i64 1
  %982 = load ptr, ptr %981, align 8, !tbaa !16
  %983 = load ptr, ptr %980, align 8, !tbaa !16
  %984 = load i32, ptr %983, align 8
  %985 = and i32 %984, 65535
  %986 = icmp eq i32 %985, 41
  br i1 %986, label %987, label %992

987:                                              ; preds = %977
  %988 = getelementptr inbounds %struct.rtx_def, ptr %983, i64 0, i32 1
  %989 = getelementptr inbounds %struct.rtx_def, ptr %983, i64 0, i32 1, i32 0, i32 0, i64 1
  %990 = load ptr, ptr %989, align 8, !tbaa !16
  %991 = load ptr, ptr %988, align 8, !tbaa !16
  br label %992

992:                                              ; preds = %987, %977
  %993 = phi ptr [ %990, %987 ], [ %982, %977 ]
  %994 = phi ptr [ %991, %987 ], [ %983, %977 ]
  %995 = load i32, ptr %979, align 8
  %996 = and i32 %995, 134217728
  %997 = icmp eq i32 %996, 0
  br i1 %997, label %999, label %998

998:                                              ; preds = %992
  call fastcc void @val_resolve(ptr noundef nonnull %702, ptr noundef %994, ptr noundef %982, ptr noundef %786)
  br label %1000

999:                                              ; preds = %992
  call fastcc void @val_store(ptr noundef nonnull %702, ptr noundef %994, ptr noundef %993, ptr noundef %786, i8 noundef zeroext 0)
  br label %1000

1000:                                             ; preds = %999, %998
  %1001 = load i32, ptr %979, align 8
  %1002 = and i32 %1001, 536870912
  %1003 = icmp eq i32 %1002, 0
  br i1 %1003, label %1255, label %1004

1004:                                             ; preds = %1000
  %1005 = load i32, ptr %993, align 8
  %1006 = trunc i32 %1005 to i16
  switch i16 %1006, label %1255 [
    i16 37, label %1007
    i16 43, label %1018
  ]

1007:                                             ; preds = %1004
  %1008 = getelementptr inbounds %struct.rtx_def, ptr %993, i64 0, i32 1, i32 0, i32 0, i64 2
  %1009 = load ptr, ptr %1008, align 8, !tbaa !16
  %1010 = icmp eq ptr %1009, null
  br i1 %1010, label %1015, label %1011

1011:                                             ; preds = %1007
  %1012 = load ptr, ptr %1009, align 8, !tbaa !75
  %1013 = getelementptr inbounds %struct.reg_attrs, ptr %1009, i64 0, i32 1
  %1014 = load i64, ptr %1013, align 8, !tbaa !77
  br label %1015

1015:                                             ; preds = %1011, %1007
  %1016 = phi ptr [ %1012, %1011 ], [ null, %1007 ]
  %1017 = phi i64 [ %1014, %1011 ], [ 0, %1007 ]
  call fastcc void @var_reg_decl_set(ptr noundef nonnull %702, ptr noundef nonnull %993, i32 noundef 1, ptr noundef %1016, i64 noundef %1017, ptr noundef null, i32 noundef 1)
  br label %1255

1018:                                             ; preds = %1004
  call fastcc void @var_mem_set(ptr noundef nonnull %702, ptr noundef nonnull %993, i32 noundef 1, ptr noundef null)
  br label %1255

1019:                                             ; preds = %782
  %1020 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %778, i64 0, i32 2, i64 %783, i32 2
  %1021 = load ptr, ptr %1020, align 8, !tbaa !16
  %1022 = load i32, ptr %1021, align 8
  %1023 = icmp sgt i32 %1022, -1
  br i1 %1023, label %1029, label %1024

1024:                                             ; preds = %1019
  %1025 = getelementptr inbounds %struct.rtx_def, ptr %1021, i64 0, i32 1
  %1026 = getelementptr inbounds %struct.rtx_def, ptr %1021, i64 0, i32 1, i32 0, i32 0, i64 1
  %1027 = load ptr, ptr %1026, align 8, !tbaa !16
  %1028 = load ptr, ptr %1025, align 8, !tbaa !16
  br label %1029

1029:                                             ; preds = %1024, %1019
  %1030 = phi ptr [ %1028, %1024 ], [ %1021, %1019 ]
  %1031 = phi ptr [ %1027, %1024 ], [ null, %1019 ]
  %1032 = getelementptr inbounds %struct.rtx_def, ptr %1030, i64 0, i32 1
  %1033 = getelementptr inbounds %struct.rtx_def, ptr %1030, i64 0, i32 1, i32 0, i32 0, i64 1
  %1034 = load ptr, ptr %1033, align 8, !tbaa !16
  %1035 = load ptr, ptr %1032, align 8, !tbaa !16
  %1036 = load i32, ptr %1035, align 8
  %1037 = and i32 %1036, 65535
  %1038 = icmp eq i32 %1037, 41
  br i1 %1038, label %1039, label %1044

1039:                                             ; preds = %1029
  %1040 = getelementptr inbounds %struct.rtx_def, ptr %1035, i64 0, i32 1
  %1041 = getelementptr inbounds %struct.rtx_def, ptr %1035, i64 0, i32 1, i32 0, i32 0, i64 1
  %1042 = load ptr, ptr %1041, align 8, !tbaa !16
  %1043 = load ptr, ptr %1040, align 8, !tbaa !16
  br label %1044

1044:                                             ; preds = %1039, %1029
  %1045 = phi ptr [ %1043, %1039 ], [ %1035, %1029 ]
  %1046 = phi ptr [ %1042, %1039 ], [ %1034, %1029 ]
  %1047 = load i32, ptr %1046, align 8
  %1048 = and i32 %1047, 65535
  %1049 = icmp eq i32 %1048, 23
  br i1 %1049, label %1050, label %1071

1050:                                             ; preds = %1044
  %1051 = getelementptr inbounds %struct.rtx_def, ptr %1046, i64 0, i32 1
  %1052 = getelementptr inbounds %struct.rtx_def, ptr %1046, i64 0, i32 1, i32 0, i32 0, i64 1
  %1053 = load ptr, ptr %1052, align 8, !tbaa !16
  %1054 = icmp eq ptr %1045, %1053
  br i1 %1054, label %1055, label %1057

1055:                                             ; preds = %1050
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 5764, ptr noundef nonnull @.str.2) #21
  %1056 = load i32, ptr %1021, align 8
  br label %1057

1057:                                             ; preds = %1055, %1050
  %1058 = phi i32 [ %1022, %1050 ], [ %1056, %1055 ]
  %1059 = icmp ne ptr %1046, %1034
  %1060 = and i32 %1058, 134217728
  %1061 = icmp eq i32 %1060, 0
  %1062 = select i1 %1059, i1 %1061, i1 false
  br i1 %1062, label %1063, label %1066

1063:                                             ; preds = %1057
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 5765, ptr noundef nonnull @.str.2) #21
  %1064 = load i32, ptr %1021, align 8
  %1065 = and i32 %1064, 134217728
  br label %1066

1066:                                             ; preds = %1063, %1057
  %1067 = phi i32 [ %1065, %1063 ], [ %1060, %1057 ]
  %1068 = phi i32 [ %1064, %1063 ], [ %1058, %1057 ]
  %1069 = load ptr, ptr %1051, align 8, !tbaa !16
  %1070 = icmp eq i32 %1067, 0
  br i1 %1070, label %1091, label %1087

1071:                                             ; preds = %1044
  %1072 = and i32 %1022, 134217728
  %1073 = icmp eq i32 %1072, 0
  br i1 %1073, label %1091, label %1074

1074:                                             ; preds = %1071
  %1075 = load i32, ptr %1034, align 8
  %1076 = and i32 %1075, 65535
  %1077 = icmp eq i32 %1076, 23
  br i1 %1077, label %1078, label %1084

1078:                                             ; preds = %1074
  %1079 = getelementptr inbounds %struct.rtx_def, ptr %1034, i64 0, i32 1, i32 0, i32 0, i64 1
  %1080 = load ptr, ptr %1079, align 8, !tbaa !16
  %1081 = load i32, ptr %1080, align 8
  %1082 = and i32 %1081, 65535
  %1083 = icmp eq i32 %1082, 37
  br i1 %1083, label %1087, label %1084

1084:                                             ; preds = %1078, %1074
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 5775, ptr noundef nonnull @.str.2) #21
  %1085 = getelementptr inbounds %struct.rtx_def, ptr %1034, i64 0, i32 1, i32 0, i32 0, i64 1
  %1086 = load ptr, ptr %1085, align 8, !tbaa !16
  br label %1087

1087:                                             ; preds = %1084, %1078, %1066
  %1088 = phi ptr [ %1053, %1066 ], [ %1080, %1078 ], [ %1086, %1084 ]
  %1089 = phi ptr [ %1069, %1066 ], [ %1046, %1078 ], [ %1046, %1084 ]
  call fastcc void @val_resolve(ptr noundef nonnull %702, ptr noundef %1045, ptr noundef %1088, ptr noundef %786)
  %1090 = load i32, ptr %1021, align 8
  br label %1091

1091:                                             ; preds = %1087, %1071, %1066
  %1092 = phi i32 [ %1022, %1071 ], [ %1068, %1066 ], [ %1090, %1087 ]
  %1093 = phi ptr [ %1046, %1071 ], [ %1069, %1066 ], [ %1089, %1087 ]
  %1094 = and i32 %1092, 536870912
  %1095 = icmp eq i32 %1094, 0
  br i1 %1095, label %1137, label %1096

1096:                                             ; preds = %1091
  %1097 = and i32 %1092, 67108864
  %1098 = icmp eq i32 %1097, 0
  %1099 = load i32, ptr %1034, align 8
  br i1 %1098, label %1104, label %1100

1100:                                             ; preds = %1096
  %1101 = trunc i32 %1099 to i16
  switch i16 %1101, label %1182 [
    i16 37, label %1102
    i16 43, label %1103
  ]

1102:                                             ; preds = %1100
  call fastcc void @var_reg_delete(ptr noundef nonnull %702, ptr noundef nonnull %1034, i8 noundef zeroext 1)
  br label %1182

1103:                                             ; preds = %1100
  call fastcc void @var_mem_delete(ptr noundef nonnull %702, ptr noundef nonnull %1034, i8 noundef zeroext 1)
  br label %1182

1104:                                             ; preds = %1096
  %1105 = and i32 %1099, 65535
  %1106 = icmp eq i32 %1105, 23
  br i1 %1106, label %1107, label %1112

1107:                                             ; preds = %1104
  %1108 = getelementptr inbounds %struct.rtx_def, ptr %1034, i64 0, i32 1
  %1109 = getelementptr inbounds %struct.rtx_def, ptr %1034, i64 0, i32 1, i32 0, i32 0, i64 1
  %1110 = load ptr, ptr %1109, align 8, !tbaa !16
  %1111 = load ptr, ptr %1108, align 8, !tbaa !16
  br label %1112

1112:                                             ; preds = %1107, %1104
  %1113 = phi ptr [ %1111, %1107 ], [ %1034, %1104 ]
  %1114 = phi ptr [ %1110, %1107 ], [ null, %1104 ]
  %1115 = and i32 %1092, 16777216
  %1116 = icmp eq i32 %1115, 0
  br i1 %1116, label %1128, label %1117

1117:                                             ; preds = %1112
  %1118 = load i32, ptr @flag_var_tracking_uninit, align 4, !tbaa !20
  %1119 = icmp eq i32 %1118, 0
  br i1 %1119, label %1125, label %1120

1120:                                             ; preds = %1117
  %1121 = call fastcc i32 @find_src_status(ptr noundef nonnull %667, ptr noundef %1114)
  %1122 = icmp eq i32 %1121, 0
  br i1 %1122, label %1123, label %1125

1123:                                             ; preds = %1120
  %1124 = call fastcc i32 @find_src_status(ptr noundef nonnull %702, ptr noundef %1114)
  br label %1125

1125:                                             ; preds = %1123, %1120, %1117
  %1126 = phi i32 [ %1124, %1123 ], [ %1121, %1120 ], [ 2, %1117 ]
  %1127 = call fastcc ptr @find_src_set_src(ptr noundef nonnull %667, ptr noundef %1114)
  br label %1128

1128:                                             ; preds = %1125, %1112
  %1129 = phi ptr [ %1127, %1125 ], [ %1114, %1112 ]
  %1130 = phi i32 [ %1126, %1125 ], [ 2, %1112 ]
  %1131 = load i32, ptr %1113, align 8
  %1132 = trunc i32 %1131 to i16
  switch i16 %1132, label %1182 [
    i16 37, label %1133
    i16 43, label %1135
  ]

1133:                                             ; preds = %1128
  %1134 = zext i1 %1116 to i8
  call fastcc void @var_reg_delete_and_set(ptr noundef nonnull %702, ptr noundef nonnull %1113, i8 noundef zeroext %1134, i32 noundef %1130, ptr noundef %1129)
  br label %1182

1135:                                             ; preds = %1128
  %1136 = zext i1 %1116 to i8
  call fastcc void @var_mem_delete_and_set(ptr noundef nonnull %702, ptr noundef nonnull %1113, i8 noundef zeroext %1136, i32 noundef %1130, ptr noundef %1129)
  br label %1182

1137:                                             ; preds = %1091
  %1138 = load i32, ptr %1034, align 8
  %1139 = and i32 %1138, 65535
  %1140 = icmp eq i32 %1139, 37
  br i1 %1140, label %1141, label %1182

1141:                                             ; preds = %1137
  %1142 = getelementptr i8, ptr %1034, i64 8
  %1143 = load i32, ptr %1142, align 8, !tbaa !16
  %1144 = sext i32 %1143 to i64
  %1145 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %666, i64 0, i32 2, i32 1, i64 %1144
  %1146 = load ptr, ptr %1145, align 8, !tbaa !5
  %1147 = icmp eq ptr %1146, null
  br i1 %1147, label %1181, label %1148

1148:                                             ; preds = %1141, %1178
  %1149 = phi ptr [ %1150, %1178 ], [ %1146, %1141 ]
  %1150 = load ptr, ptr %1149, align 8, !tbaa !56
  %1151 = getelementptr inbounds %struct.attrs_def, ptr %1149, i64 0, i32 1
  %1152 = load ptr, ptr %1151, align 8, !tbaa !71
  %1153 = getelementptr inbounds %struct.attrs_def, ptr %1149, i64 0, i32 2
  %1154 = load ptr, ptr %1153, align 8, !tbaa !72
  %1155 = getelementptr inbounds %struct.attrs_def, ptr %1149, i64 0, i32 3
  %1156 = load i64, ptr %1155, align 8, !tbaa !59
  %1157 = load ptr, ptr %717, align 8, !tbaa !51
  %1158 = icmp eq ptr %1154, null
  br i1 %1158, label %1167, label %1159

1159:                                             ; preds = %1148
  %1160 = load i64, ptr %1154, align 8
  %1161 = and i64 %1160, 65535
  %1162 = icmp eq i64 %1161, 1
  br i1 %1162, label %1163, label %1167

1163:                                             ; preds = %1159
  %1164 = getelementptr inbounds %struct.rtx_def, ptr %1154, i64 0, i32 1
  %1165 = load ptr, ptr %1164, align 8, !tbaa !16
  %1166 = getelementptr inbounds %struct.cselib_val_struct, ptr %1165, i64 0, i32 1
  br label %1169

1167:                                             ; preds = %1159, %1148
  %1168 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1154, i64 0, i32 2
  br label %1169

1169:                                             ; preds = %1167, %1163
  %1170 = phi ptr [ %1166, %1163 ], [ %1168, %1167 ]
  %1171 = load i32, ptr %1170, align 4, !tbaa !16
  %1172 = getelementptr i8, ptr %1157, i64 8
  %1173 = load ptr, ptr %1172, align 8, !tbaa !55
  %1174 = call ptr @htab_find_slot_with_hash(ptr noundef %1173, ptr noundef %1154, i32 noundef %1171, i32 noundef 0) #21
  %1175 = icmp eq ptr %1174, null
  br i1 %1175, label %1178, label %1176

1176:                                             ; preds = %1169
  %1177 = call fastcc ptr @delete_slot_part(ptr noundef nonnull %702, ptr noundef %1152, ptr noundef nonnull %1174, i64 noundef %1156)
  br label %1178

1178:                                             ; preds = %1176, %1169
  %1179 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %1179, ptr noundef nonnull %1149) #21
  %1180 = icmp eq ptr %1150, null
  br i1 %1180, label %1181, label %1148, !llvm.loop !73

1181:                                             ; preds = %1178, %1141
  store ptr null, ptr %1145, align 8, !tbaa !5
  br label %1182

1182:                                             ; preds = %1181, %1137, %1135, %1133, %1128, %1103, %1102, %1100
  call fastcc void @val_store(ptr noundef nonnull %702, ptr noundef %1045, ptr noundef %1093, ptr noundef %786, i8 noundef zeroext 1)
  %1183 = icmp eq ptr %1031, null
  br i1 %1183, label %1255, label %1184

1184:                                             ; preds = %1182
  %1185 = getelementptr inbounds %struct.rtx_def, ptr %1031, i64 0, i32 1
  %1186 = load ptr, ptr %1185, align 8, !tbaa !16
  %1187 = getelementptr inbounds %struct.rtx_def, ptr %1031, i64 0, i32 1, i32 0, i32 0, i64 1
  %1188 = load ptr, ptr %1187, align 8, !tbaa !16
  call fastcc void @val_store(ptr noundef nonnull %702, ptr noundef %1186, ptr noundef %1188, ptr noundef %786, i8 noundef zeroext 0)
  br label %1255

1189:                                             ; preds = %782
  %1190 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %778, i64 0, i32 2, i64 %783, i32 2
  %1191 = load ptr, ptr %1190, align 8, !tbaa !16
  %1192 = load i32, ptr %1191, align 8
  %1193 = and i32 %1192, 65535
  %1194 = icmp eq i32 %1193, 23
  br i1 %1194, label %1195, label %1201

1195:                                             ; preds = %1189
  %1196 = getelementptr inbounds %struct.rtx_def, ptr %1191, i64 0, i32 1
  %1197 = getelementptr inbounds %struct.rtx_def, ptr %1191, i64 0, i32 1, i32 0, i32 0, i64 1
  %1198 = load ptr, ptr %1197, align 8, !tbaa !16
  %1199 = load ptr, ptr %1196, align 8, !tbaa !16
  %1200 = load i32, ptr %1199, align 8
  br label %1201

1201:                                             ; preds = %1195, %1189
  %1202 = phi i32 [ %1200, %1195 ], [ %1192, %1189 ]
  %1203 = phi ptr [ %1199, %1195 ], [ %1191, %1189 ]
  %1204 = phi ptr [ %1198, %1195 ], [ null, %1189 ]
  %1205 = trunc i32 %1202 to i16
  switch i16 %1205, label %1255 [
    i16 37, label %1206
    i16 43, label %1207
  ]

1206:                                             ; preds = %1201
  call fastcc void @var_reg_delete_and_set(ptr noundef nonnull %702, ptr noundef nonnull %1203, i8 noundef zeroext 1, i32 noundef 2, ptr noundef %1204)
  br label %1255

1207:                                             ; preds = %1201
  call fastcc void @var_mem_delete_and_set(ptr noundef nonnull %702, ptr noundef nonnull %1203, i8 noundef zeroext 1, i32 noundef 2, ptr noundef %1204)
  br label %1255

1208:                                             ; preds = %782
  %1209 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %778, i64 0, i32 2, i64 %783, i32 2
  %1210 = load ptr, ptr %1209, align 8, !tbaa !16
  %1211 = load i32, ptr %1210, align 8
  %1212 = and i32 %1211, 65535
  %1213 = icmp eq i32 %1212, 23
  br i1 %1213, label %1214, label %1219

1214:                                             ; preds = %1208
  %1215 = getelementptr inbounds %struct.rtx_def, ptr %1210, i64 0, i32 1
  %1216 = getelementptr inbounds %struct.rtx_def, ptr %1210, i64 0, i32 1, i32 0, i32 0, i64 1
  %1217 = load ptr, ptr %1216, align 8, !tbaa !16
  %1218 = load ptr, ptr %1215, align 8, !tbaa !16
  br label %1219

1219:                                             ; preds = %1214, %1208
  %1220 = phi ptr [ %1218, %1214 ], [ %1210, %1208 ]
  %1221 = phi ptr [ %1217, %1214 ], [ null, %1208 ]
  %1222 = load i32, ptr @flag_var_tracking_uninit, align 4, !tbaa !20
  %1223 = icmp eq i32 %1222, 0
  br i1 %1223, label %1229, label %1224

1224:                                             ; preds = %1219
  %1225 = call fastcc i32 @find_src_status(ptr noundef nonnull %667, ptr noundef %1221)
  %1226 = icmp eq i32 %1225, 0
  br i1 %1226, label %1227, label %1229

1227:                                             ; preds = %1224
  %1228 = call fastcc i32 @find_src_status(ptr noundef nonnull %702, ptr noundef %1221)
  br label %1229

1229:                                             ; preds = %1227, %1224, %1219
  %1230 = phi i32 [ %1228, %1227 ], [ %1225, %1224 ], [ 2, %1219 ]
  %1231 = call fastcc ptr @find_src_set_src(ptr noundef nonnull %667, ptr noundef %1221)
  %1232 = load i32, ptr %1220, align 8
  %1233 = trunc i32 %1232 to i16
  switch i16 %1233, label %1255 [
    i16 37, label %1234
    i16 43, label %1235
  ]

1234:                                             ; preds = %1229
  call fastcc void @var_reg_delete_and_set(ptr noundef nonnull %702, ptr noundef nonnull %1220, i8 noundef zeroext 0, i32 noundef %1230, ptr noundef %1231)
  br label %1255

1235:                                             ; preds = %1229
  call fastcc void @var_mem_delete_and_set(ptr noundef nonnull %702, ptr noundef nonnull %1220, i8 noundef zeroext 0, i32 noundef %1230, ptr noundef %1231)
  br label %1255

1236:                                             ; preds = %782
  %1237 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %778, i64 0, i32 2, i64 %783, i32 2
  %1238 = load ptr, ptr %1237, align 8, !tbaa !16
  %1239 = load i32, ptr %1238, align 8
  %1240 = trunc i32 %1239 to i16
  switch i16 %1240, label %1255 [
    i16 37, label %1241
    i16 43, label %1242
  ]

1241:                                             ; preds = %1236
  call fastcc void @var_reg_delete(ptr noundef nonnull %702, ptr noundef nonnull %1238, i8 noundef zeroext 0)
  br label %1255

1242:                                             ; preds = %1236
  call fastcc void @var_mem_delete(ptr noundef nonnull %702, ptr noundef nonnull %1238, i8 noundef zeroext 0)
  br label %1255

1243:                                             ; preds = %782
  %1244 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %778, i64 0, i32 2, i64 %783, i32 2
  %1245 = load ptr, ptr %1244, align 8, !tbaa !16
  %1246 = load i32, ptr %1245, align 8
  %1247 = trunc i32 %1246 to i16
  switch i16 %1247, label %1255 [
    i16 37, label %1248
    i16 43, label %1249
  ]

1248:                                             ; preds = %1243
  call fastcc void @var_reg_delete(ptr noundef nonnull %702, ptr noundef nonnull %1245, i8 noundef zeroext 1)
  br label %1255

1249:                                             ; preds = %1243
  call fastcc void @var_mem_delete(ptr noundef nonnull %702, ptr noundef nonnull %1245, i8 noundef zeroext 1)
  br label %1255

1250:                                             ; preds = %782
  %1251 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %778, i64 0, i32 2, i64 %783, i32 2
  %1252 = load i64, ptr %1251, align 8, !tbaa !16
  %1253 = load i64, ptr %702, align 8, !tbaa !53
  %1254 = add nsw i64 %1253, %1252
  store i64 %1254, ptr %702, align 8, !tbaa !53
  br label %1255

1255:                                             ; preds = %838, %835, %1250, %1249, %1248, %1243, %1242, %1241, %1236, %1235, %1234, %1229, %1207, %1206, %1201, %1184, %1182, %1018, %1015, %1004, %1000, %974, %945, %936, %861, %858, %845, %782
  %1256 = add i32 %779, 1
  %1257 = load ptr, ptr %169, align 8, !tbaa !39
  %1258 = load ptr, ptr %1257, align 8, !tbaa !62
  %1259 = icmp eq ptr %1258, null
  br i1 %1259, label %1260, label %777, !llvm.loop !168

1260:                                             ; preds = %1255, %777, %766
  %1261 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %1262 = icmp eq i32 %1261, 0
  br i1 %1262, label %1459, label %1263

1263:                                             ; preds = %1260, %1449
  %1264 = phi i64 [ %1450, %1449 ], [ 0, %1260 ]
  call void @llvm.lifetime.start.p0(i64 696, ptr nonnull %1) #21
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(696) %1, i8 0, i64 696, i1 false)
  %1265 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %666, i64 0, i32 2, i32 1, i64 %1264
  %1266 = load ptr, ptr %1265, align 8, !tbaa !5
  %1267 = icmp eq ptr %1266, null
  br i1 %1267, label %1449, label %1268

1268:                                             ; preds = %1263, %1298
  %1269 = phi ptr [ %1299, %1298 ], [ %1266, %1263 ]
  %1270 = getelementptr inbounds %struct.attrs_def, ptr %1269, i64 0, i32 3
  %1271 = load i64, ptr %1270, align 8, !tbaa !59
  %1272 = icmp eq i64 %1271, 0
  br i1 %1272, label %1273, label %1298

1273:                                             ; preds = %1268
  %1274 = getelementptr inbounds %struct.attrs_def, ptr %1269, i64 0, i32 2
  %1275 = load ptr, ptr %1274, align 8, !tbaa !72
  %1276 = icmp eq ptr %1275, null
  br i1 %1276, label %1298, label %1277

1277:                                             ; preds = %1273
  %1278 = load i64, ptr %1275, align 8
  %1279 = and i64 %1278, 65535
  %1280 = icmp eq i64 %1279, 1
  br i1 %1280, label %1281, label %1298

1281:                                             ; preds = %1277
  %1282 = lshr i64 %1278, 16
  %1283 = and i64 %1282, 255
  %1284 = getelementptr inbounds [87 x ptr], ptr %1, i64 0, i64 %1283
  %1285 = load ptr, ptr %1284, align 8, !tbaa !5
  %1286 = icmp eq ptr %1285, null
  br i1 %1286, label %1297, label %1287

1287:                                             ; preds = %1281
  %1288 = getelementptr inbounds %struct.rtx_def, ptr %1275, i64 0, i32 1
  %1289 = load ptr, ptr %1288, align 8, !tbaa !16
  %1290 = getelementptr inbounds %struct.cselib_val_struct, ptr %1289, i64 0, i32 1
  %1291 = load i32, ptr %1290, align 4, !tbaa !169
  %1292 = getelementptr inbounds %struct.rtx_def, ptr %1285, i64 0, i32 1
  %1293 = load ptr, ptr %1292, align 8, !tbaa !16
  %1294 = getelementptr inbounds %struct.cselib_val_struct, ptr %1293, i64 0, i32 1
  %1295 = load i32, ptr %1294, align 4, !tbaa !169
  %1296 = icmp slt i32 %1291, %1295
  br i1 %1296, label %1297, label %1298

1297:                                             ; preds = %1287, %1281
  store ptr %1275, ptr %1284, align 8, !tbaa !5
  br label %1298

1298:                                             ; preds = %1297, %1287, %1277, %1273, %1268
  %1299 = load ptr, ptr %1269, align 8, !tbaa !5
  %1300 = icmp eq ptr %1299, null
  br i1 %1300, label %1304, label %1268, !llvm.loop !170

1301:                                             ; preds = %1384
  %1302 = load ptr, ptr %1265, align 8, !tbaa !5
  %1303 = icmp eq ptr %1302, null
  br i1 %1303, label %1449, label %1387

1304:                                             ; preds = %1298, %1384
  %1305 = phi ptr [ %1385, %1384 ], [ %1266, %1298 ]
  %1306 = getelementptr inbounds %struct.attrs_def, ptr %1305, i64 0, i32 3
  %1307 = load i64, ptr %1306, align 8, !tbaa !59
  %1308 = icmp eq i64 %1307, 0
  br i1 %1308, label %1309, label %1384

1309:                                             ; preds = %1304
  %1310 = getelementptr inbounds %struct.attrs_def, ptr %1305, i64 0, i32 2
  %1311 = load ptr, ptr %1310, align 8, !tbaa !72
  %1312 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %1313 = icmp eq i32 %1312, 0
  br i1 %1313, label %1384, label %1314

1314:                                             ; preds = %1309
  %1315 = icmp eq ptr %1311, null
  br i1 %1315, label %1322, label %1316

1316:                                             ; preds = %1314
  %1317 = load i64, ptr %1311, align 8
  %1318 = trunc i64 %1317 to i16
  switch i16 %1318, label %1319 [
    i16 1, label %1322
    i16 37, label %1322
  ]

1319:                                             ; preds = %1316
  %1320 = call ptr @target_for_debug_bind(ptr noundef nonnull %1311) #21
  %1321 = icmp eq ptr %1320, null
  br i1 %1321, label %1384, label %1322

1322:                                             ; preds = %1319, %1316, %1316, %1314
  %1323 = getelementptr inbounds %struct.attrs_def, ptr %1305, i64 0, i32 1
  %1324 = load ptr, ptr %1323, align 8, !tbaa !71
  %1325 = load i32, ptr %1324, align 8
  %1326 = lshr i32 %1325, 16
  %1327 = and i32 %1326, 255
  %1328 = zext i32 %1327 to i64
  %1329 = getelementptr inbounds [87 x ptr], ptr %1, i64 0, i64 %1328
  %1330 = load ptr, ptr %1329, align 8, !tbaa !5
  %1331 = icmp eq ptr %1330, null
  br i1 %1331, label %1384, label %1332

1332:                                             ; preds = %1322
  %1333 = load ptr, ptr %1310, align 8, !tbaa !72
  %1334 = icmp eq ptr %1333, null
  br i1 %1334, label %1361, label %1335

1335:                                             ; preds = %1332
  %1336 = load i64, ptr %1333, align 8
  %1337 = and i64 %1336, 65535
  %1338 = icmp eq i64 %1337, 1
  %1339 = trunc i64 %1336 to i32
  br i1 %1338, label %1340, label %1361

1340:                                             ; preds = %1335
  %1341 = icmp eq ptr %1333, %1330
  br i1 %1341, label %1384, label %1342

1342:                                             ; preds = %1340
  %1343 = or i32 %1339, 536870912
  store i32 %1343, ptr %1333, align 8
  %1344 = load ptr, ptr %717, align 8, !tbaa !51
  %1345 = load i64, ptr %1330, align 8
  %1346 = and i64 %1345, 65535
  %1347 = icmp eq i64 %1346, 1
  br i1 %1347, label %1348, label %1352

1348:                                             ; preds = %1342
  %1349 = getelementptr inbounds %struct.rtx_def, ptr %1330, i64 0, i32 1
  %1350 = load ptr, ptr %1349, align 8, !tbaa !16
  %1351 = getelementptr inbounds %struct.cselib_val_struct, ptr %1350, i64 0, i32 1
  br label %1354

1352:                                             ; preds = %1342
  %1353 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1330, i64 0, i32 2
  br label %1354

1354:                                             ; preds = %1352, %1348
  %1355 = phi ptr [ %1351, %1348 ], [ %1353, %1352 ]
  %1356 = load i32, ptr %1355, align 4, !tbaa !16
  %1357 = getelementptr i8, ptr %1344, i64 8
  %1358 = load ptr, ptr %1357, align 8, !tbaa !55
  %1359 = call ptr @htab_find_slot_with_hash(ptr noundef %1358, ptr noundef nonnull %1330, i32 noundef %1356, i32 noundef 0) #21
  %1360 = call fastcc ptr @set_slot_part(ptr noundef nonnull %702, ptr noundef nonnull %1333, ptr noundef %1359, ptr noundef nonnull %1330, i64 noundef 0, i32 noundef 2, ptr noundef null)
  br label %1361

1361:                                             ; preds = %1354, %1335, %1332
  %1362 = load i32, ptr %1330, align 8
  %1363 = or i32 %1362, 536870912
  store i32 %1363, ptr %1330, align 8
  %1364 = load ptr, ptr %1310, align 8, !tbaa !72
  %1365 = load ptr, ptr %717, align 8, !tbaa !51
  %1366 = icmp eq ptr %1364, null
  br i1 %1366, label %1375, label %1367

1367:                                             ; preds = %1361
  %1368 = load i64, ptr %1364, align 8
  %1369 = and i64 %1368, 65535
  %1370 = icmp eq i64 %1369, 1
  br i1 %1370, label %1371, label %1375

1371:                                             ; preds = %1367
  %1372 = getelementptr inbounds %struct.rtx_def, ptr %1364, i64 0, i32 1
  %1373 = load ptr, ptr %1372, align 8, !tbaa !16
  %1374 = getelementptr inbounds %struct.cselib_val_struct, ptr %1373, i64 0, i32 1
  br label %1377

1375:                                             ; preds = %1367, %1361
  %1376 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1364, i64 0, i32 2
  br label %1377

1377:                                             ; preds = %1375, %1371
  %1378 = phi ptr [ %1374, %1371 ], [ %1376, %1375 ]
  %1379 = load i32, ptr %1378, align 4, !tbaa !16
  %1380 = getelementptr i8, ptr %1365, i64 8
  %1381 = load ptr, ptr %1380, align 8, !tbaa !55
  %1382 = call ptr @htab_find_slot_with_hash(ptr noundef %1381, ptr noundef %1364, i32 noundef %1379, i32 noundef 0) #21
  %1383 = call fastcc ptr @set_slot_part(ptr noundef nonnull %702, ptr noundef nonnull %1330, ptr noundef %1382, ptr noundef %1364, i64 noundef 0, i32 noundef 2, ptr noundef null)
  br label %1384

1384:                                             ; preds = %1377, %1340, %1322, %1319, %1309, %1304
  %1385 = load ptr, ptr %1305, align 8, !tbaa !5
  %1386 = icmp eq ptr %1385, null
  br i1 %1386, label %1301, label %1304, !llvm.loop !171

1387:                                             ; preds = %1301, %1443
  %1388 = phi ptr [ %1447, %1443 ], [ %1302, %1301 ]
  %1389 = phi ptr [ %1446, %1443 ], [ %1265, %1301 ]
  %1390 = getelementptr inbounds %struct.attrs_def, ptr %1388, i64 0, i32 3
  %1391 = load i64, ptr %1390, align 8, !tbaa !59
  %1392 = icmp eq i64 %1391, 0
  br i1 %1392, label %1393, label %1443

1393:                                             ; preds = %1387
  %1394 = getelementptr inbounds %struct.attrs_def, ptr %1388, i64 0, i32 2
  %1395 = load ptr, ptr %1394, align 8, !tbaa !72
  %1396 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %1397 = icmp eq i32 %1396, 0
  br i1 %1397, label %1443, label %1398

1398:                                             ; preds = %1393
  %1399 = icmp eq ptr %1395, null
  br i1 %1399, label %1406, label %1400

1400:                                             ; preds = %1398
  %1401 = load i64, ptr %1395, align 8
  %1402 = trunc i64 %1401 to i16
  switch i16 %1402, label %1403 [
    i16 1, label %1406
    i16 37, label %1406
  ]

1403:                                             ; preds = %1400
  %1404 = call ptr @target_for_debug_bind(ptr noundef nonnull %1395) #21
  %1405 = icmp eq ptr %1404, null
  br i1 %1405, label %1443, label %1406

1406:                                             ; preds = %1403, %1400, %1400, %1398
  %1407 = getelementptr inbounds %struct.attrs_def, ptr %1388, i64 0, i32 1
  %1408 = load ptr, ptr %1407, align 8, !tbaa !71
  %1409 = load i32, ptr %1408, align 8
  %1410 = lshr i32 %1409, 16
  %1411 = and i32 %1410, 255
  %1412 = zext i32 %1411 to i64
  %1413 = getelementptr inbounds [87 x ptr], ptr %1, i64 0, i64 %1412
  %1414 = load ptr, ptr %1413, align 8, !tbaa !5
  %1415 = icmp eq ptr %1414, null
  br i1 %1415, label %1443, label %1416

1416:                                             ; preds = %1406
  %1417 = load ptr, ptr %1394, align 8, !tbaa !72
  %1418 = icmp eq ptr %1417, null
  br i1 %1418, label %1430, label %1419

1419:                                             ; preds = %1416
  %1420 = load i64, ptr %1417, align 8
  %1421 = and i64 %1420, 65535
  %1422 = icmp eq i64 %1421, 1
  br i1 %1422, label %1423, label %1430

1423:                                             ; preds = %1419
  %1424 = and i64 %1420, 536870912
  %1425 = icmp eq i64 %1424, 0
  br i1 %1425, label %1443, label %1426

1426:                                             ; preds = %1423
  %1427 = getelementptr inbounds %struct.rtx_def, ptr %1417, i64 0, i32 1
  %1428 = load ptr, ptr %1427, align 8, !tbaa !16
  %1429 = getelementptr inbounds %struct.cselib_val_struct, ptr %1428, i64 0, i32 1
  br label %1432

1430:                                             ; preds = %1419, %1416
  %1431 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1417, i64 0, i32 2
  br label %1432

1432:                                             ; preds = %1430, %1426
  %1433 = phi ptr [ %1429, %1426 ], [ %1431, %1430 ]
  %1434 = load ptr, ptr %717, align 8, !tbaa !51
  %1435 = load i32, ptr %1433, align 4, !tbaa !16
  %1436 = getelementptr i8, ptr %1434, i64 8
  %1437 = load ptr, ptr %1436, align 8, !tbaa !55
  %1438 = call ptr @htab_find_slot_with_hash(ptr noundef %1437, ptr noundef %1417, i32 noundef %1435, i32 noundef 0) #21
  %1439 = call i32 @canonicalize_values_star(ptr noundef %1438, ptr noundef nonnull %702)
  %1440 = load ptr, ptr %1389, align 8, !tbaa !5
  %1441 = icmp eq ptr %1440, %1388
  %1442 = select i1 %1441, ptr %1388, ptr null
  br label %1443

1443:                                             ; preds = %1432, %1423, %1406, %1403, %1393, %1387
  %1444 = phi ptr [ %1388, %1403 ], [ %1388, %1387 ], [ %1442, %1432 ], [ %1388, %1423 ], [ %1388, %1406 ], [ %1388, %1393 ]
  %1445 = icmp eq ptr %1444, null
  %1446 = select i1 %1445, ptr %1389, ptr %1444
  %1447 = load ptr, ptr %1446, align 8, !tbaa !5
  %1448 = icmp eq ptr %1447, null
  br i1 %1448, label %1449, label %1387, !llvm.loop !172

1449:                                             ; preds = %1443, %1301, %1263
  call void @llvm.lifetime.end.p0(i64 696, ptr nonnull %1) #21
  %1450 = add nuw nsw i64 %1264, 1
  %1451 = icmp eq i64 %1450, 53
  br i1 %1451, label %1452, label %1263, !llvm.loop !173

1452:                                             ; preds = %1449
  %1453 = load ptr, ptr %717, align 8, !tbaa !51
  %1454 = getelementptr i8, ptr %1453, i64 8
  %1455 = load ptr, ptr %1454, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %1455, ptr noundef nonnull @canonicalize_values_mark, ptr noundef nonnull %702) #21
  %1456 = load ptr, ptr %717, align 8, !tbaa !51
  %1457 = getelementptr i8, ptr %1456, i64 8
  %1458 = load ptr, ptr %1457, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %1458, ptr noundef nonnull @canonicalize_values_star, ptr noundef nonnull %702) #21
  br label %1459

1459:                                             ; preds = %1452, %1260
  %1460 = load ptr, ptr %99, align 8, !tbaa !51
  %1461 = load ptr, ptr %717, align 8, !tbaa !51
  %1462 = icmp eq ptr %1460, %1461
  br i1 %1462, label %1479, label %1463

1463:                                             ; preds = %1459
  %1464 = getelementptr i8, ptr %1460, i64 8
  %1465 = load ptr, ptr %1464, align 8, !tbaa !55
  %1466 = call i64 @htab_elements(ptr noundef %1465) #21
  %1467 = load ptr, ptr %717, align 8, !tbaa !51
  %1468 = getelementptr i8, ptr %1467, i64 8
  %1469 = load ptr, ptr %1468, align 8, !tbaa !55
  %1470 = call i64 @htab_elements(ptr noundef %1469) #21
  %1471 = icmp eq i64 %1466, %1470
  br i1 %1471, label %1472, label %1479

1472:                                             ; preds = %1463
  store i1 false, ptr @dataflow_set_different_value, align 1
  %1473 = load ptr, ptr %1464, align 8, !tbaa !55
  %1474 = load ptr, ptr %717, align 8, !tbaa !51
  %1475 = getelementptr i8, ptr %1474, i64 8
  %1476 = load ptr, ptr %1475, align 8, !tbaa !55
  call void @htab_traverse(ptr noundef %1473, ptr noundef nonnull @dataflow_set_different_1, ptr noundef %1476) #21
  %1477 = load i1, ptr @dataflow_set_different_value, align 1
  %1478 = zext i1 %1477 to i8
  br label %1479

1479:                                             ; preds = %1472, %1463, %1459
  %1480 = phi i8 [ %1478, %1472 ], [ 0, %1459 ], [ 1, %1463 ]
  br label %1481

1481:                                             ; preds = %1491, %1479
  %1482 = phi i64 [ 0, %1479 ], [ %1492, %1491 ]
  %1483 = getelementptr inbounds %struct.dataflow_set_def, ptr %2, i64 0, i32 1, i64 %1482
  %1484 = load ptr, ptr %1483, align 8, !tbaa !5
  %1485 = icmp eq ptr %1484, null
  br i1 %1485, label %1491, label %1486

1486:                                             ; preds = %1481, %1486
  %1487 = phi ptr [ %1488, %1486 ], [ %1484, %1481 ]
  %1488 = load ptr, ptr %1487, align 8, !tbaa !56
  %1489 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %1489, ptr noundef nonnull %1487) #21
  %1490 = icmp eq ptr %1488, null
  br i1 %1490, label %1491, label %1486, !llvm.loop !58

1491:                                             ; preds = %1486, %1481
  store ptr null, ptr %1483, align 8, !tbaa !5
  %1492 = add nuw nsw i64 %1482, 1
  %1493 = icmp eq i64 %1492, 53
  br i1 %1493, label %1494, label %1481, !llvm.loop !79

1494:                                             ; preds = %1491
  %1495 = load ptr, ptr %99, align 8, !tbaa !51
  %1496 = load i32, ptr %1495, align 8, !tbaa !49
  %1497 = icmp sgt i32 %1496, 0
  br i1 %1497, label %1500, label %1498

1498:                                             ; preds = %1494
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %1499 = load i32, ptr %1495, align 8, !tbaa !49
  br label %1500

1500:                                             ; preds = %1498, %1494
  %1501 = phi i32 [ %1496, %1494 ], [ %1499, %1498 ]
  %1502 = add nsw i32 %1501, -1
  store i32 %1502, ptr %1495, align 8, !tbaa !49
  %1503 = icmp eq i32 %1502, 0
  br i1 %1503, label %1504, label %1508

1504:                                             ; preds = %1500
  %1505 = getelementptr inbounds %struct.shared_hash_def, ptr %1495, i64 0, i32 1
  %1506 = load ptr, ptr %1505, align 8, !tbaa !55
  call void @htab_delete(ptr noundef %1506) #21
  %1507 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %1507, ptr noundef nonnull %1495) #21
  br label %1508

1508:                                             ; preds = %1500, %1504
  call void @llvm.lifetime.end.p0(i64 448, ptr nonnull %2) #21
  %1509 = load ptr, ptr %169, align 8, !tbaa !39
  %1510 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1509, i64 0, i32 1, i32 2
  %1511 = load ptr, ptr %1510, align 8, !tbaa !148
  %1512 = getelementptr i8, ptr %1511, i64 8
  %1513 = load ptr, ptr %1512, align 8, !tbaa !55
  %1514 = call i64 @htab_size(ptr noundef %1513) #21
  %1515 = load ptr, ptr %169, align 8, !tbaa !39
  %1516 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1515, i64 0, i32 2, i32 2
  %1517 = load ptr, ptr %1516, align 8, !tbaa !149
  %1518 = getelementptr i8, ptr %1517, i64 8
  %1519 = load ptr, ptr %1518, align 8, !tbaa !55
  %1520 = call i64 @htab_size(ptr noundef %1519) #21
  %1521 = add i64 %1520, %1514
  %1522 = trunc i64 %1521 to i32
  %1523 = add i32 %204, %1522
  %1524 = icmp sgt i32 %1523, %8
  %1525 = select i1 %101, i1 %1524, i1 false
  br i1 %1525, label %1526, label %1535

1526:                                             ; preds = %1508
  %1527 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %1528 = icmp eq i32 %1527, 0
  %1529 = load ptr, ptr @cfun, align 8, !tbaa !5
  %1530 = getelementptr inbounds %struct.function, ptr %1529, i64 0, i32 6
  %1531 = load ptr, ptr %1530, align 8, !tbaa !174
  %1532 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1531, i64 0, i32 1
  %1533 = load i32, ptr %1532, align 8, !tbaa !16
  %1534 = select i1 %1528, ptr @.str.23, ptr @.str.22
  call void (i32, ptr, ...) @inform(i32 noundef %1533, ptr noundef nonnull %1534) #21
  br label %1717

1535:                                             ; preds = %1508
  %1536 = icmp eq i8 %1480, 0
  br i1 %1536, label %1633, label %1537

1537:                                             ; preds = %1535
  %1538 = getelementptr inbounds %struct.basic_block_def, ptr %114, i64 0, i32 1
  br label %1539

1539:                                             ; preds = %1537, %1631
  %1540 = phi i32 [ 0, %1537 ], [ %1632, %1631 ]
  %1541 = load ptr, ptr %1538, align 8, !tbaa !5
  %1542 = icmp eq ptr %1541, null
  br i1 %1542, label %1545, label %1543

1543:                                             ; preds = %1539
  %1544 = load i32, ptr %1541, align 8, !tbaa !106
  br label %1545

1545:                                             ; preds = %1543, %1539
  %1546 = phi i32 [ %1544, %1543 ], [ 0, %1539 ]
  %1547 = icmp eq i32 %1546, %1540
  br i1 %1547, label %1633, label %1548

1548:                                             ; preds = %1545
  %1549 = zext i32 %1540 to i64
  %1550 = getelementptr inbounds %struct.VEC_edge_base, ptr %1541, i64 0, i32 2, i64 %1549
  %1551 = load ptr, ptr %1550, align 8, !tbaa !5
  %1552 = getelementptr inbounds %struct.edge_def, ptr %1551, i64 0, i32 1
  %1553 = load ptr, ptr %1552, align 8, !tbaa !100
  %1554 = load ptr, ptr @cfun, align 8, !tbaa !5
  %1555 = getelementptr inbounds %struct.function, ptr %1554, i64 0, i32 1
  %1556 = load ptr, ptr %1555, align 8, !tbaa !23
  %1557 = getelementptr inbounds %struct.control_flow_graph, ptr %1556, i64 0, i32 1
  %1558 = load ptr, ptr %1557, align 8, !tbaa !29
  %1559 = icmp eq ptr %1553, %1558
  br i1 %1559, label %1624, label %1560

1560:                                             ; preds = %1548
  %1561 = getelementptr inbounds %struct.basic_block_def, ptr %1553, i64 0, i32 9
  %1562 = load i32, ptr %1561, align 8, !tbaa !38
  %1563 = lshr i32 %1562, 6
  %1564 = zext i32 %1563 to i64
  %1565 = getelementptr inbounds %struct.simple_bitmap_def, ptr %53, i64 0, i32 3, i64 %1564
  %1566 = load i64, ptr %1565, align 8, !tbaa !70
  %1567 = and i32 %1562, 63
  %1568 = zext i32 %1567 to i64
  %1569 = shl nuw i64 1, %1568
  %1570 = and i64 %1569, %1566
  %1571 = icmp eq i64 %1570, 0
  br i1 %1571, label %1598, label %1572

1572:                                             ; preds = %1560
  %1573 = getelementptr inbounds %struct.simple_bitmap_def, ptr %107, i64 0, i32 3, i64 %1564
  %1574 = load i64, ptr %1573, align 8, !tbaa !70
  %1575 = and i64 %1574, %1569
  %1576 = icmp eq i64 %1575, 0
  br i1 %1576, label %1577, label %1624

1577:                                             ; preds = %1572
  %1578 = load ptr, ptr %107, align 8, !tbaa !146
  %1579 = icmp eq ptr %1578, null
  br i1 %1579, label %1588, label %1580

1580:                                             ; preds = %1577
  %1581 = getelementptr inbounds i8, ptr %1578, i64 %1564
  %1582 = load i8, ptr %1581, align 1, !tbaa !16
  %1583 = add i8 %1582, 1
  store i8 %1583, ptr %1581, align 1, !tbaa !16
  %1584 = load i64, ptr %1573, align 8, !tbaa !70
  %1585 = load ptr, ptr %1552, align 8, !tbaa !100
  %1586 = getelementptr inbounds %struct.basic_block_def, ptr %1585, i64 0, i32 9
  %1587 = load i32, ptr %1586, align 8, !tbaa !38
  br label %1588

1588:                                             ; preds = %1577, %1580
  %1589 = phi i32 [ %1562, %1577 ], [ %1587, %1580 ]
  %1590 = phi ptr [ %1553, %1577 ], [ %1585, %1580 ]
  %1591 = phi i64 [ %1574, %1577 ], [ %1584, %1580 ]
  %1592 = or i64 %1591, %1569
  store i64 %1592, ptr %1573, align 8, !tbaa !70
  %1593 = sext i32 %1589 to i64
  %1594 = getelementptr inbounds i32, ptr %25, i64 %1593
  %1595 = load i32, ptr %1594, align 4, !tbaa !20
  %1596 = sext i32 %1595 to i64
  %1597 = call ptr @fibheap_insert(ptr noundef %109, i64 noundef %1596, ptr noundef nonnull %1590) #21
  br label %1624

1598:                                             ; preds = %1560
  %1599 = getelementptr inbounds %struct.simple_bitmap_def, ptr %106, i64 0, i32 3, i64 %1564
  %1600 = load i64, ptr %1599, align 8, !tbaa !70
  %1601 = and i64 %1600, %1569
  %1602 = icmp eq i64 %1601, 0
  br i1 %1602, label %1603, label %1624

1603:                                             ; preds = %1598
  %1604 = load ptr, ptr %106, align 8, !tbaa !146
  %1605 = icmp eq ptr %1604, null
  br i1 %1605, label %1614, label %1606

1606:                                             ; preds = %1603
  %1607 = getelementptr inbounds i8, ptr %1604, i64 %1564
  %1608 = load i8, ptr %1607, align 1, !tbaa !16
  %1609 = add i8 %1608, 1
  store i8 %1609, ptr %1607, align 1, !tbaa !16
  %1610 = load i64, ptr %1599, align 8, !tbaa !70
  %1611 = load ptr, ptr %1552, align 8, !tbaa !100
  %1612 = getelementptr inbounds %struct.basic_block_def, ptr %1611, i64 0, i32 9
  %1613 = load i32, ptr %1612, align 8, !tbaa !38
  br label %1614

1614:                                             ; preds = %1603, %1606
  %1615 = phi i32 [ %1562, %1603 ], [ %1613, %1606 ]
  %1616 = phi ptr [ %1553, %1603 ], [ %1611, %1606 ]
  %1617 = phi i64 [ %1600, %1603 ], [ %1610, %1606 ]
  %1618 = or i64 %1617, %1569
  store i64 %1618, ptr %1599, align 8, !tbaa !70
  %1619 = sext i32 %1615 to i64
  %1620 = getelementptr inbounds i32, ptr %25, i64 %1619
  %1621 = load i32, ptr %1620, align 4, !tbaa !20
  %1622 = sext i32 %1621 to i64
  %1623 = call ptr @fibheap_insert(ptr noundef %108, i64 noundef %1622, ptr noundef nonnull %1616) #21
  br label %1624

1624:                                             ; preds = %1548, %1598, %1614, %1572, %1588
  %1625 = load ptr, ptr %1538, align 8, !tbaa !5
  %1626 = icmp eq ptr %1625, null
  br i1 %1626, label %1630, label %1627

1627:                                             ; preds = %1624
  %1628 = load i32, ptr %1625, align 8, !tbaa !106
  %1629 = icmp ult i32 %1540, %1628
  br i1 %1629, label %1631, label %1630

1630:                                             ; preds = %1627, %1624
  call void @fancy_abort(ptr noundef nonnull @.str.10, i32 noundef 738, ptr noundef nonnull @.str.2) #21
  br label %1631

1631:                                             ; preds = %1627, %1630
  %1632 = add i32 %1540, 1
  br label %1539, !llvm.loop !175

1633:                                             ; preds = %1545, %1535
  %1634 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %1635 = icmp eq ptr %1634, null
  br i1 %1635, label %1673, label %1636

1636:                                             ; preds = %1633
  %1637 = load i32, ptr %115, align 8, !tbaa !38
  %1638 = load ptr, ptr %169, align 8, !tbaa !39
  %1639 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1638, i64 0, i32 1, i32 2
  %1640 = load ptr, ptr %1639, align 8, !tbaa !148
  %1641 = getelementptr i8, ptr %1640, i64 8
  %1642 = load ptr, ptr %1641, align 8, !tbaa !55
  %1643 = call i64 @htab_elements(ptr noundef %1642) #21
  %1644 = trunc i64 %1643 to i32
  %1645 = load ptr, ptr %169, align 8, !tbaa !39
  %1646 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1645, i64 0, i32 2, i32 2
  %1647 = load ptr, ptr %1646, align 8, !tbaa !149
  %1648 = getelementptr i8, ptr %1647, i64 8
  %1649 = load ptr, ptr %1648, align 8, !tbaa !55
  %1650 = call i64 @htab_elements(ptr noundef %1649) #21
  %1651 = trunc i64 %1650 to i32
  %1652 = load i64, ptr %108, align 8, !tbaa !176
  %1653 = trunc i64 %1652 to i32
  %1654 = load i64, ptr %109, align 8, !tbaa !176
  %1655 = trunc i64 %1654 to i32
  %1656 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %1634, ptr noundef nonnull @.str.24, i32 noundef %1637, i32 noundef %1644, i32 noundef %203, i32 noundef %1651, i32 noundef %202, i32 noundef %1653, i32 noundef %1655, i32 noundef %1523)
  %1657 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %1658 = icmp eq ptr %1657, null
  br i1 %1658, label %1673, label %1659

1659:                                             ; preds = %1636
  %1660 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %1661 = and i32 %1660, 8
  %1662 = icmp eq i32 %1661, 0
  br i1 %1662, label %1673, label %1663

1663:                                             ; preds = %1659
  %1664 = load i32, ptr %115, align 8, !tbaa !38
  %1665 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %1657, ptr noundef nonnull @.str.25, i32 noundef %1664)
  %1666 = load ptr, ptr %169, align 8, !tbaa !39
  %1667 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1666, i64 0, i32 1
  call fastcc void @dump_dataflow_set(ptr noundef nonnull %1667)
  %1668 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %1669 = load i32, ptr %115, align 8, !tbaa !38
  %1670 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1668, ptr noundef nonnull @.str.26, i32 noundef %1669)
  %1671 = load ptr, ptr %169, align 8, !tbaa !39
  %1672 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1671, i64 0, i32 2
  call fastcc void @dump_dataflow_set(ptr noundef nonnull %1672)
  br label %1673

1673:                                             ; preds = %1633, %1636, %1659, %1663, %145
  %1674 = phi i32 [ %113, %145 ], [ %1523, %1663 ], [ %1523, %1659 ], [ %1523, %1636 ], [ %1523, %1633 ]
  %1675 = call i32 @fibheap_empty(ptr noundef %108) #21
  %1676 = icmp eq i32 %1675, 0
  br i1 %1676, label %112, label %1677, !llvm.loop !178

1677:                                             ; preds = %1673, %104
  %1678 = phi i32 [ %105, %104 ], [ %1674, %1673 ]
  %1679 = call i32 @fibheap_empty(ptr noundef %109) #21
  %1680 = icmp eq i32 %1679, 0
  br i1 %1680, label %104, label %1681, !llvm.loop !179

1681:                                             ; preds = %1677, %92
  %1682 = phi ptr [ %46, %92 ], [ %108, %1677 ]
  %1683 = phi ptr [ %47, %92 ], [ %109, %1677 ]
  %1684 = phi ptr [ %59, %92 ], [ %106, %1677 ]
  %1685 = phi ptr [ %65, %92 ], [ %107, %1677 ]
  %1686 = load i32, ptr @flag_var_tracking_assignments, align 4
  %1687 = icmp eq i32 %1686, 0
  br i1 %1687, label %1717, label %1688

1688:                                             ; preds = %1681
  %1689 = load ptr, ptr @cfun, align 8, !tbaa !5
  %1690 = getelementptr inbounds %struct.function, ptr %1689, i64 0, i32 1
  %1691 = load ptr, ptr %1690, align 8, !tbaa !23
  %1692 = load ptr, ptr %1691, align 8, !tbaa !25
  %1693 = getelementptr inbounds %struct.basic_block_def, ptr %1692, i64 0, i32 6
  %1694 = load ptr, ptr %1693, align 8, !tbaa !27
  %1695 = getelementptr inbounds %struct.control_flow_graph, ptr %1691, i64 0, i32 1
  %1696 = load ptr, ptr %1695, align 8, !tbaa !29
  %1697 = icmp eq ptr %1694, %1696
  br i1 %1697, label %1717, label %1698

1698:                                             ; preds = %1688, %1708
  %1699 = phi ptr [ %1709, %1708 ], [ %1689, %1688 ]
  %1700 = phi ptr [ %1711, %1708 ], [ %1694, %1688 ]
  %1701 = getelementptr inbounds %struct.basic_block_def, ptr %1700, i64 0, i32 2
  %1702 = load ptr, ptr %1701, align 8, !tbaa !39
  %1703 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %1702, i64 0, i32 5
  %1704 = load i8, ptr %1703, align 1, !tbaa !81
  %1705 = icmp eq i8 %1704, 0
  br i1 %1705, label %1706, label %1708

1706:                                             ; preds = %1698
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 6122, ptr noundef nonnull @.str.2) #21
  %1707 = load ptr, ptr @cfun, align 8, !tbaa !5
  br label %1708

1708:                                             ; preds = %1698, %1706
  %1709 = phi ptr [ %1699, %1698 ], [ %1707, %1706 ]
  %1710 = getelementptr inbounds %struct.basic_block_def, ptr %1700, i64 0, i32 6
  %1711 = load ptr, ptr %1710, align 8, !tbaa !27
  %1712 = getelementptr inbounds %struct.function, ptr %1709, i64 0, i32 1
  %1713 = load ptr, ptr %1712, align 8, !tbaa !23
  %1714 = getelementptr inbounds %struct.control_flow_graph, ptr %1713, i64 0, i32 1
  %1715 = load ptr, ptr %1714, align 8, !tbaa !29
  %1716 = icmp eq ptr %1711, %1715
  br i1 %1716, label %1717, label %1698, !llvm.loop !180

1717:                                             ; preds = %1708, %1526, %1688, %1681
  %1718 = phi i8 [ 1, %1681 ], [ 1, %1688 ], [ 0, %1526 ], [ 1, %1708 ]
  %1719 = phi ptr [ %1685, %1681 ], [ %1685, %1688 ], [ %107, %1526 ], [ %1685, %1708 ]
  %1720 = phi ptr [ %1684, %1681 ], [ %1684, %1688 ], [ %106, %1526 ], [ %1684, %1708 ]
  %1721 = phi ptr [ %1683, %1681 ], [ %1683, %1688 ], [ %109, %1526 ], [ %1683, %1708 ]
  %1722 = phi ptr [ %1682, %1681 ], [ %1682, %1688 ], [ %108, %1526 ], [ %1682, %1708 ]
  call void @free(ptr noundef %25)
  call void @fibheap_delete(ptr noundef %1722) #21
  call void @fibheap_delete(ptr noundef %1721) #21
  %1723 = load ptr, ptr %53, align 8, !tbaa !146
  call void @free(ptr noundef %1723)
  call void @free(ptr noundef %53)
  %1724 = load ptr, ptr %1720, align 8, !tbaa !146
  call void @free(ptr noundef %1724)
  call void @free(ptr noundef %1720)
  %1725 = load ptr, ptr %1719, align 8, !tbaa !146
  call void @free(ptr noundef %1725)
  call void @free(ptr noundef %1719)
  ret i8 %1718
}

declare void @fancy_abort(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare void @dump_flow_info(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @delete_insn(ptr noundef) local_unnamed_addr #3

declare void @alloc_aux_for_blocks(i32 noundef) local_unnamed_addr #3

declare ptr @create_alloc_pool(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

declare ptr @pool_alloc(ptr noundef) local_unnamed_addr #3

declare ptr @htab_create(i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @variable_htab_hash(ptr nocapture noundef readonly %0) #11 {
  %2 = load ptr, ptr %0, align 8, !tbaa !181
  %3 = icmp eq ptr %2, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = load i64, ptr %2, align 8
  %6 = and i64 %5, 65535
  %7 = icmp eq i64 %6, 1
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.rtx_def, ptr %2, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !16
  %11 = getelementptr inbounds %struct.cselib_val_struct, ptr %10, i64 0, i32 1
  br label %14

12:                                               ; preds = %4, %1
  %13 = getelementptr inbounds %struct.tree_decl_minimal, ptr %2, i64 0, i32 2
  br label %14

14:                                               ; preds = %8, %12
  %15 = phi ptr [ %11, %8 ], [ %13, %12 ]
  %16 = load i32, ptr %15, align 4, !tbaa !16
  ret i32 %16
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @variable_htab_eq(ptr nocapture noundef readonly %0, ptr noundef readnone %1) #12 {
  %3 = load ptr, ptr %0, align 8, !tbaa !181
  %4 = icmp eq ptr %3, %1
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @variable_htab_free(ptr noundef %0) #9 {
  %2 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !183
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1175, ptr noundef nonnull @.str.2) #21
  %6 = load i32, ptr %2, align 8, !tbaa !183
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %3, %1 ], [ %6, %5 ]
  %9 = add nsw i32 %8, -1
  store i32 %9, ptr %2, align 8, !tbaa !183
  %10 = icmp sgt i32 %8, 1
  br i1 %10, label %50, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 2
  %13 = load i8, ptr %12, align 4, !tbaa !184
  %14 = icmp sgt i8 %13, 0
  br i1 %14, label %15, label %33

15:                                               ; preds = %11, %28
  %16 = phi i8 [ %29, %28 ], [ %13, %11 ]
  %17 = phi i64 [ %30, %28 ], [ 0, %11 ]
  %18 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 5, i64 %17
  %19 = load ptr, ptr %18, align 8, !tbaa !185
  %20 = icmp eq ptr %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %15, %21
  %22 = phi ptr [ %23, %21 ], [ %19, %15 ]
  %23 = load ptr, ptr %22, align 8, !tbaa !187
  %24 = load ptr, ptr @loc_chain_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %24, ptr noundef nonnull %22) #21
  %25 = icmp eq ptr %23, null
  br i1 %25, label %26, label %21, !llvm.loop !189

26:                                               ; preds = %21
  %27 = load i8, ptr %12, align 4, !tbaa !184
  br label %28

28:                                               ; preds = %26, %15
  %29 = phi i8 [ %27, %26 ], [ %16, %15 ]
  store ptr null, ptr %18, align 8, !tbaa !185
  %30 = add nuw nsw i64 %17, 1
  %31 = sext i8 %29 to i64
  %32 = icmp slt i64 %30, %31
  br i1 %32, label %15, label %33, !llvm.loop !190

33:                                               ; preds = %28, %11
  %34 = load ptr, ptr %0, align 8, !tbaa !181
  %35 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %33
  %38 = icmp eq ptr %34, null
  br i1 %38, label %47, label %39

39:                                               ; preds = %37
  %40 = load i64, ptr %34, align 8
  %41 = trunc i64 %40 to i16
  switch i16 %41, label %42 [
    i16 1, label %47
    i16 37, label %47
  ]

42:                                               ; preds = %39
  %43 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %34) #21
  %44 = freeze ptr %43
  %45 = icmp eq ptr %44, null
  br i1 %45, label %46, label %47

46:                                               ; preds = %42, %33
  br label %47

47:                                               ; preds = %37, %39, %39, %42, %46
  %48 = phi ptr [ @var_pool, %46 ], [ @valvar_pool, %42 ], [ @valvar_pool, %39 ], [ @valvar_pool, %39 ], [ @valvar_pool, %37 ]
  %49 = load ptr, ptr %48, align 8
  tail call void @pool_free(ptr noundef %49, ptr noundef nonnull %0) #21
  br label %50

50:                                               ; preds = %7, %47
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @value_chain_htab_hash(ptr nocapture noundef readonly %0) #11 {
  %2 = getelementptr inbounds %struct.value_chain_def, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !191
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = load i64, ptr %3, align 8
  %7 = and i64 %6, 65535
  %8 = icmp eq i64 %7, 1
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.rtx_def, ptr %3, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !16
  %12 = getelementptr inbounds %struct.cselib_val_struct, ptr %11, i64 0, i32 1
  br label %15

13:                                               ; preds = %5, %1
  %14 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 2
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi ptr [ %12, %9 ], [ %14, %13 ]
  %17 = load i32, ptr %16, align 4, !tbaa !16
  ret i32 %17
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @value_chain_htab_eq(ptr nocapture noundef readonly %0, ptr noundef readnone %1) #12 {
  %3 = getelementptr inbounds %struct.value_chain_def, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !191
  %5 = icmp eq ptr %4, %1
  %6 = zext i1 %5 to i32
  ret i32 %6
}

declare void @cselib_init(i32 noundef) local_unnamed_addr #3

declare ptr @bitmap_obstack_alloc_stat(ptr noundef) local_unnamed_addr #3

declare ptr @eliminate_regs(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @vt_init_cfa_base() unnamed_addr #9 {
  %1 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 5), align 8, !tbaa !5
  store ptr %1, ptr @cfa_base_rtx, align 8, !tbaa !5
  %2 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 4), align 16, !tbaa !5
  %3 = icmp eq ptr %1, %2
  br i1 %3, label %11, label %4

4:                                                ; preds = %0
  %5 = getelementptr i8, ptr %1, i64 8
  %6 = load i32, ptr %5, align 8, !tbaa !16
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds [53 x i8], ptr @fixed_regs, i64 0, i64 %7
  %9 = load i8, ptr %8, align 1, !tbaa !16
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %4, %0
  store ptr null, ptr @cfa_base_rtx, align 8, !tbaa !5
  br label %48

12:                                               ; preds = %4
  %13 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15

15:                                               ; preds = %12
  %16 = load i32, ptr %1, align 8
  %17 = lshr i32 %16, 16
  %18 = and i32 %17, 255
  %19 = tail call ptr @get_insns() #21
  %20 = tail call ptr @cselib_lookup_from_insn(ptr noundef nonnull %1, i32 noundef %18, i32 noundef 1, ptr noundef %19) #21
  tail call void @cselib_preserve_value(ptr noundef %20) #21
  %21 = getelementptr inbounds %struct.cselib_val_struct, ptr %20, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !128
  %23 = load ptr, ptr @preserved_values, align 8, !tbaa !5
  %24 = icmp eq ptr %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %struct.VEC_rtx_base, ptr %23, i64 0, i32 1
  %27 = load i32, ptr %26, align 4, !tbaa !130
  %28 = load i32, ptr %23, align 8, !tbaa !42
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %30, label %33

30:                                               ; preds = %25, %15
  %31 = tail call ptr @vec_heap_p_reserve(ptr noundef %23, i32 noundef 1) #21
  store ptr %31, ptr @preserved_values, align 8, !tbaa !5
  %32 = load i32, ptr %31, align 8, !tbaa !42
  br label %33

33:                                               ; preds = %25, %30
  %34 = phi i32 [ %28, %25 ], [ %32, %30 ]
  %35 = phi ptr [ %23, %25 ], [ %31, %30 ]
  %36 = add i32 %34, 1
  store i32 %36, ptr %35, align 8, !tbaa !42
  %37 = zext i32 %34 to i64
  %38 = getelementptr inbounds %struct.VEC_rtx_base, ptr %35, i64 0, i32 2, i64 %37
  store ptr %22, ptr %38, align 8, !tbaa !5
  tail call void @cselib_preserve_cfa_base_value(ptr noundef nonnull %20) #21
  %39 = load ptr, ptr @cfun, align 8, !tbaa !5
  %40 = getelementptr inbounds %struct.function, ptr %39, i64 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !23
  %42 = load ptr, ptr %41, align 8, !tbaa !25
  %43 = getelementptr inbounds %struct.basic_block_def, ptr %42, i64 0, i32 2
  %44 = load ptr, ptr %43, align 8, !tbaa !39
  %45 = getelementptr inbounds %struct.variable_tracking_info_def, ptr %44, i64 0, i32 2
  %46 = load ptr, ptr @cfa_base_rtx, align 8, !tbaa !5
  %47 = load ptr, ptr %21, align 8, !tbaa !128
  tail call fastcc void @var_reg_decl_set(ptr noundef nonnull %45, ptr noundef %46, i32 noundef 2, ptr noundef %47, i64 noundef 0, ptr noundef null, i32 noundef 1)
  br label %48

48:                                               ; preds = %12, %33, %11
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @add_with_sets(ptr noundef %0, ptr noundef %1, i32 noundef %2) #9 {
  %4 = alloca %struct.count_use_info, align 8
  %5 = alloca %struct.micro_operation_def, align 8
  %6 = alloca %struct.micro_operation_def, align 8
  %7 = alloca %struct.micro_operation_def, align 8
  %8 = alloca %struct.micro_operation_def, align 8
  %9 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #21
  store i1 true, ptr @cselib_hook_called, align 1
  store ptr %0, ptr %4, align 8, !tbaa !193
  %11 = getelementptr inbounds %struct.count_use_info, ptr %4, i64 0, i32 1
  store ptr %10, ptr %11, align 8, !tbaa !195
  %12 = getelementptr inbounds %struct.count_use_info, ptr %4, i64 0, i32 2
  store ptr %1, ptr %12, align 8, !tbaa !196
  %13 = getelementptr inbounds %struct.count_use_info, ptr %4, i64 0, i32 3
  store i32 %2, ptr %13, align 8, !tbaa !197
  %14 = getelementptr %struct.basic_block_def, ptr %10, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !39
  %16 = load ptr, ptr %15, align 8, !tbaa !62
  %17 = icmp eq ptr %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  %19 = load i32, ptr %16, align 8, !tbaa !64
  br label %20

20:                                               ; preds = %3, %18
  %21 = phi i32 [ %19, %18 ], [ 0, %3 ]
  %22 = getelementptr inbounds %struct.count_use_info, ptr %4, i64 0, i32 4
  store i8 0, ptr %22, align 4, !tbaa !198
  %23 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 1
  call void @note_uses(ptr noundef nonnull %23, ptr noundef nonnull @add_uses_1, ptr noundef nonnull %4) #21
  %24 = load ptr, ptr %14, align 8, !tbaa !39
  %25 = load ptr, ptr %24, align 8, !tbaa !62
  %26 = icmp eq ptr %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %20
  %28 = load i32, ptr %25, align 8, !tbaa !64
  %29 = add i32 %28, -1
  br label %30

30:                                               ; preds = %20, %27
  %31 = phi i32 [ %29, %27 ], [ -1, %20 ]
  %32 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %25, i64 0, i32 2
  %33 = select i1 %26, ptr null, ptr %32
  %34 = icmp slt i32 %21, %31
  br i1 %34, label %35, label %77

35:                                               ; preds = %30, %67
  %36 = phi i32 [ %68, %67 ], [ %31, %30 ]
  %37 = phi i32 [ %49, %67 ], [ %21, %30 ]
  %38 = sext i32 %37 to i64
  %39 = sext i32 %36 to i64
  br label %40

40:                                               ; preds = %35, %45
  %41 = phi i64 [ %38, %35 ], [ %46, %45 ]
  %42 = getelementptr inbounds %struct.micro_operation_def, ptr %33, i64 %41
  %43 = load i32, ptr %42, align 8, !tbaa !69
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = add nsw i64 %41, 1
  %47 = icmp slt i64 %46, %39
  br i1 %47, label %40, label %70, !llvm.loop !199

48:                                               ; preds = %40
  %49 = trunc i64 %41 to i32
  %50 = icmp sgt i32 %36, %49
  br i1 %50, label %51, label %67

51:                                               ; preds = %48
  %52 = shl i64 %41, 32
  %53 = ashr exact i64 %52, 32
  br label %54

54:                                               ; preds = %51, %59
  %55 = phi i64 [ %39, %51 ], [ %60, %59 ]
  %56 = getelementptr inbounds %struct.micro_operation_def, ptr %33, i64 %55
  %57 = load i32, ptr %56, align 8, !tbaa !69
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = add nsw i64 %55, -1
  %61 = icmp sgt i64 %60, %53
  br i1 %61, label %54, label %65, !llvm.loop !200

62:                                               ; preds = %54
  %63 = trunc i64 %55 to i32
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5)
  %64 = getelementptr inbounds %struct.micro_operation_def, ptr %33, i64 %53
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %64, i64 24, i1 false), !tbaa.struct !116
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %64, ptr noundef nonnull align 8 dereferenceable(24) %56, i64 24, i1 false), !tbaa.struct !116
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %56, ptr noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false), !tbaa.struct !116
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5)
  br label %67

65:                                               ; preds = %59
  %66 = trunc i64 %60 to i32
  br label %67

67:                                               ; preds = %65, %48, %62
  %68 = phi i32 [ %63, %62 ], [ %36, %48 ], [ %66, %65 ]
  %69 = icmp sgt i32 %68, %49
  br i1 %69, label %35, label %73, !llvm.loop !201

70:                                               ; preds = %45
  %71 = add nsw i32 %37, 1
  %72 = call i32 @llvm.smax.i32(i32 %36, i32 %71)
  br label %73

73:                                               ; preds = %67, %70
  %74 = phi i32 [ %72, %70 ], [ %49, %67 ]
  %75 = load ptr, ptr %14, align 8, !tbaa !39
  %76 = load ptr, ptr %75, align 8, !tbaa !62
  br label %77

77:                                               ; preds = %73, %30
  %78 = phi ptr [ %25, %30 ], [ %76, %73 ]
  %79 = phi i32 [ %21, %30 ], [ %74, %73 ]
  %80 = icmp eq ptr %78, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %77
  %82 = load i32, ptr %78, align 8, !tbaa !64
  %83 = add i32 %82, -1
  br label %84

84:                                               ; preds = %77, %81
  %85 = phi i32 [ %83, %81 ], [ -1, %77 ]
  %86 = icmp slt i32 %79, %85
  br i1 %86, label %87, label %122

87:                                               ; preds = %84, %119
  %88 = phi i32 [ %120, %119 ], [ %85, %84 ]
  %89 = phi i32 [ %101, %119 ], [ %79, %84 ]
  %90 = sext i32 %89 to i64
  %91 = sext i32 %88 to i64
  br label %92

92:                                               ; preds = %87, %97
  %93 = phi i64 [ %90, %87 ], [ %98, %97 ]
  %94 = getelementptr inbounds %struct.micro_operation_def, ptr %33, i64 %93
  %95 = load i32, ptr %94, align 8, !tbaa !69
  %96 = icmp eq i32 %95, 3
  br i1 %96, label %100, label %97

97:                                               ; preds = %92
  %98 = add nsw i64 %93, 1
  %99 = icmp slt i64 %98, %91
  br i1 %99, label %92, label %122, !llvm.loop !202

100:                                              ; preds = %92
  %101 = trunc i64 %93 to i32
  %102 = icmp sgt i32 %88, %101
  br i1 %102, label %103, label %119

103:                                              ; preds = %100
  %104 = shl i64 %93, 32
  %105 = ashr exact i64 %104, 32
  br label %106

106:                                              ; preds = %103, %111
  %107 = phi i64 [ %91, %103 ], [ %112, %111 ]
  %108 = getelementptr inbounds %struct.micro_operation_def, ptr %33, i64 %107
  %109 = load i32, ptr %108, align 8, !tbaa !69
  %110 = icmp eq i32 %109, 3
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  %112 = add nsw i64 %107, -1
  %113 = icmp sgt i64 %112, %105
  br i1 %113, label %106, label %117, !llvm.loop !203

114:                                              ; preds = %106
  %115 = trunc i64 %107 to i32
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6)
  %116 = getelementptr inbounds %struct.micro_operation_def, ptr %33, i64 %105
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 8 dereferenceable(24) %116, i64 24, i1 false), !tbaa.struct !116
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %116, ptr noundef nonnull align 8 dereferenceable(24) %108, i64 24, i1 false), !tbaa.struct !116
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %108, ptr noundef nonnull align 8 dereferenceable(24) %6, i64 24, i1 false), !tbaa.struct !116
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6)
  br label %119

117:                                              ; preds = %111
  %118 = trunc i64 %112 to i32
  br label %119

119:                                              ; preds = %117, %100, %114
  %120 = phi i32 [ %115, %114 ], [ %88, %100 ], [ %118, %117 ]
  %121 = icmp sgt i32 %120, %101
  br i1 %121, label %87, label %122, !llvm.loop !204

122:                                              ; preds = %119, %97, %84
  %123 = load i32, ptr %0, align 8
  %124 = and i32 %123, 65535
  %125 = icmp eq i32 %124, 10
  br i1 %125, label %126, label %168

126:                                              ; preds = %122
  %127 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %128 = icmp eq ptr %127, null
  br i1 %128, label %148, label %129

129:                                              ; preds = %126
  %130 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %131 = and i32 %130, 8
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %148, label %133

133:                                              ; preds = %129
  %134 = load ptr, ptr %23, align 8, !tbaa !16
  %135 = load ptr, ptr %14, align 8, !tbaa !39
  %136 = getelementptr i8, ptr %10, i64 80
  %137 = load i32, ptr %136, align 8, !tbaa !38
  %138 = load ptr, ptr %135, align 8, !tbaa !62
  %139 = icmp eq ptr %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %133
  %141 = load i32, ptr %138, align 8, !tbaa !64
  br label %142

142:                                              ; preds = %133, %140
  %143 = phi i32 [ %141, %140 ], [ 0, %133 ]
  %144 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %145 = load i32, ptr %144, align 8, !tbaa !16
  %146 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %127, ptr noundef nonnull @.str.11, i32 noundef %137, i32 noundef %143, i32 noundef %145, ptr noundef nonnull @.str.20)
  call void @print_inline_rtx(ptr noundef nonnull %127, ptr noundef %134, i32 noundef 2) #21
  %147 = call i32 @fputc(i32 noundef 10, ptr noundef nonnull %127)
  br label %148

148:                                              ; preds = %142, %129, %126
  %149 = load ptr, ptr %14, align 8, !tbaa !39
  %150 = load ptr, ptr %149, align 8, !tbaa !5
  %151 = icmp eq ptr %150, null
  br i1 %151, label %157, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %150, i64 0, i32 1
  %154 = load i32, ptr %153, align 4, !tbaa !115
  %155 = load i32, ptr %150, align 8, !tbaa !64
  %156 = icmp eq i32 %154, %155
  br i1 %156, label %157, label %160

157:                                              ; preds = %152, %148
  %158 = call ptr @vec_heap_o_reserve(ptr noundef %150, i32 noundef 1, i64 noundef 8, i64 noundef 24) #21
  store ptr %158, ptr %149, align 8, !tbaa !5
  %159 = load i32, ptr %158, align 8, !tbaa !64
  br label %160

160:                                              ; preds = %152, %157
  %161 = phi i32 [ %155, %152 ], [ %159, %157 ]
  %162 = phi ptr [ %150, %152 ], [ %158, %157 ]
  %163 = add i32 %161, 1
  store i32 %163, ptr %162, align 8, !tbaa !64
  %164 = zext i32 %161 to i64
  %165 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %162, i64 0, i32 2, i64 %164
  store i32 8, ptr %165, align 8, !tbaa.struct !116
  %166 = getelementptr inbounds i8, ptr %165, i64 8
  store ptr %0, ptr %166, align 8, !tbaa.struct !117
  %167 = getelementptr inbounds i8, ptr %165, i64 16
  store ptr null, ptr %167, align 8, !tbaa.struct !118
  br label %168

168:                                              ; preds = %160, %122
  %169 = load ptr, ptr %14, align 8, !tbaa !39
  %170 = load ptr, ptr %169, align 8, !tbaa !62
  %171 = icmp eq ptr %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %168
  %173 = load i32, ptr %170, align 8, !tbaa !64
  br label %174

174:                                              ; preds = %168, %172
  %175 = phi i32 [ %173, %172 ], [ 0, %168 ]
  store i8 1, ptr %22, align 4, !tbaa !198
  %176 = load ptr, ptr %23, align 8, !tbaa !16
  call void @note_stores(ptr noundef %176, ptr noundef nonnull @add_stores, ptr noundef nonnull %4) #21
  %177 = load ptr, ptr %14, align 8, !tbaa !39
  %178 = load ptr, ptr %177, align 8, !tbaa !62
  %179 = icmp eq ptr %178, null
  br i1 %179, label %183, label %180

180:                                              ; preds = %174
  %181 = load i32, ptr %178, align 8, !tbaa !64
  %182 = add i32 %181, -1
  br label %183

183:                                              ; preds = %174, %180
  %184 = phi i32 [ %182, %180 ], [ -1, %174 ]
  %185 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %178, i64 0, i32 2
  %186 = select i1 %179, ptr null, ptr %185
  %187 = icmp slt i32 %175, %184
  br i1 %187, label %188, label %230

188:                                              ; preds = %183, %220
  %189 = phi i32 [ %221, %220 ], [ %184, %183 ]
  %190 = phi i32 [ %202, %220 ], [ %175, %183 ]
  %191 = sext i32 %190 to i64
  %192 = sext i32 %189 to i64
  br label %193

193:                                              ; preds = %188, %198
  %194 = phi i64 [ %191, %188 ], [ %199, %198 ]
  %195 = getelementptr inbounds %struct.micro_operation_def, ptr %186, i64 %194
  %196 = load i32, ptr %195, align 8, !tbaa !69
  %197 = icmp eq i32 %196, 2
  br i1 %197, label %198, label %201

198:                                              ; preds = %193
  %199 = add nsw i64 %194, 1
  %200 = icmp slt i64 %199, %192
  br i1 %200, label %193, label %223, !llvm.loop !205

201:                                              ; preds = %193
  %202 = trunc i64 %194 to i32
  %203 = icmp sgt i32 %189, %202
  br i1 %203, label %204, label %220

204:                                              ; preds = %201
  %205 = shl i64 %194, 32
  %206 = ashr exact i64 %205, 32
  br label %207

207:                                              ; preds = %204, %212
  %208 = phi i64 [ %192, %204 ], [ %213, %212 ]
  %209 = getelementptr inbounds %struct.micro_operation_def, ptr %186, i64 %208
  %210 = load i32, ptr %209, align 8, !tbaa !69
  %211 = icmp eq i32 %210, 2
  br i1 %211, label %215, label %212

212:                                              ; preds = %207
  %213 = add nsw i64 %208, -1
  %214 = icmp sgt i64 %213, %206
  br i1 %214, label %207, label %218, !llvm.loop !206

215:                                              ; preds = %207
  %216 = trunc i64 %208 to i32
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7)
  %217 = getelementptr inbounds %struct.micro_operation_def, ptr %186, i64 %206
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %217, i64 24, i1 false), !tbaa.struct !116
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %217, ptr noundef nonnull align 8 dereferenceable(24) %209, i64 24, i1 false), !tbaa.struct !116
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %209, ptr noundef nonnull align 8 dereferenceable(24) %7, i64 24, i1 false), !tbaa.struct !116
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7)
  br label %220

218:                                              ; preds = %212
  %219 = trunc i64 %213 to i32
  br label %220

220:                                              ; preds = %218, %201, %215
  %221 = phi i32 [ %216, %215 ], [ %189, %201 ], [ %219, %218 ]
  %222 = icmp sgt i32 %221, %202
  br i1 %222, label %188, label %226, !llvm.loop !207

223:                                              ; preds = %198
  %224 = add nsw i32 %190, 1
  %225 = call i32 @llvm.smax.i32(i32 %189, i32 %224)
  br label %226

226:                                              ; preds = %220, %223
  %227 = phi i32 [ %225, %223 ], [ %202, %220 ]
  %228 = load ptr, ptr %14, align 8, !tbaa !39
  %229 = load ptr, ptr %228, align 8, !tbaa !62
  br label %230

230:                                              ; preds = %226, %183
  %231 = phi ptr [ %178, %183 ], [ %229, %226 ]
  %232 = phi i32 [ %175, %183 ], [ %227, %226 ]
  %233 = icmp eq ptr %231, null
  br i1 %233, label %237, label %234

234:                                              ; preds = %230
  %235 = load i32, ptr %231, align 8, !tbaa !64
  %236 = add i32 %235, -1
  br label %237

237:                                              ; preds = %230, %234
  %238 = phi i32 [ %236, %234 ], [ -1, %230 ]
  %239 = icmp slt i32 %232, %238
  br i1 %239, label %240, label %275

240:                                              ; preds = %237, %272
  %241 = phi i32 [ %273, %272 ], [ %238, %237 ]
  %242 = phi i32 [ %254, %272 ], [ %232, %237 ]
  %243 = sext i32 %242 to i64
  %244 = sext i32 %241 to i64
  br label %245

245:                                              ; preds = %240, %250
  %246 = phi i64 [ %243, %240 ], [ %251, %250 ]
  %247 = getelementptr inbounds %struct.micro_operation_def, ptr %186, i64 %246
  %248 = load i32, ptr %247, align 8, !tbaa !69
  %249 = icmp eq i32 %248, 7
  br i1 %249, label %250, label %253

250:                                              ; preds = %245
  %251 = add nsw i64 %246, 1
  %252 = icmp slt i64 %251, %244
  br i1 %252, label %245, label %275, !llvm.loop !208

253:                                              ; preds = %245
  %254 = trunc i64 %246 to i32
  %255 = icmp sgt i32 %241, %254
  br i1 %255, label %256, label %272

256:                                              ; preds = %253
  %257 = shl i64 %246, 32
  %258 = ashr exact i64 %257, 32
  br label %259

259:                                              ; preds = %256, %264
  %260 = phi i64 [ %244, %256 ], [ %265, %264 ]
  %261 = getelementptr inbounds %struct.micro_operation_def, ptr %186, i64 %260
  %262 = load i32, ptr %261, align 8, !tbaa !69
  %263 = icmp eq i32 %262, 7
  br i1 %263, label %267, label %264

264:                                              ; preds = %259
  %265 = add nsw i64 %260, -1
  %266 = icmp sgt i64 %265, %258
  br i1 %266, label %259, label %270, !llvm.loop !209

267:                                              ; preds = %259
  %268 = trunc i64 %260 to i32
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8)
  %269 = getelementptr inbounds %struct.micro_operation_def, ptr %186, i64 %258
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %269, i64 24, i1 false), !tbaa.struct !116
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %269, ptr noundef nonnull align 8 dereferenceable(24) %261, i64 24, i1 false), !tbaa.struct !116
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %261, ptr noundef nonnull align 8 dereferenceable(24) %8, i64 24, i1 false), !tbaa.struct !116
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8)
  br label %272

270:                                              ; preds = %264
  %271 = trunc i64 %265 to i32
  br label %272

272:                                              ; preds = %270, %253, %267
  %273 = phi i32 [ %268, %267 ], [ %241, %253 ], [ %271, %270 ]
  %274 = icmp sgt i32 %273, %254
  br i1 %274, label %240, label %275, !llvm.loop !210

275:                                              ; preds = %272, %250, %237
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #21
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #1

declare i32 @cselib_get_next_uid() local_unnamed_addr #3

declare ptr @find_edge(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @log_op_type(ptr noundef %0, ptr readonly %1, i32 %2, ptr nocapture noundef readonly %3, i32 noundef %4, ptr noundef %5) unnamed_addr #2 {
  %7 = icmp eq ptr %1, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %6
  %9 = load i32, ptr %1, align 8, !tbaa !64
  br label %10

10:                                               ; preds = %6, %8
  %11 = phi i32 [ %9, %8 ], [ 0, %6 ]
  %12 = getelementptr inbounds %struct.rtx_def, ptr %3, i64 0, i32 1
  %13 = load i32, ptr %12, align 8, !tbaa !16
  %14 = zext i32 %4 to i64
  %15 = getelementptr inbounds [10 x ptr], ptr @micro_operation_type_name, i64 0, i64 %14
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %5, ptr noundef nonnull @.str.11, i32 noundef %2, i32 noundef %11, i32 noundef %13, ptr noundef %16)
  tail call void @print_inline_rtx(ptr noundef %5, ptr noundef %0, i32 noundef 2) #21
  %18 = tail call i32 @fputc(i32 noundef 10, ptr noundef %5)
  ret void
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @VEC_micro_operation_heap_safe_push(ptr nocapture noundef %0, ptr noundef readonly %1) unnamed_addr #2 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = icmp eq ptr %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %3, i64 0, i32 1
  %7 = load i32, ptr %6, align 4, !tbaa !115
  %8 = load i32, ptr %3, align 8, !tbaa !64
  %9 = icmp eq i32 %7, %8
  br i1 %9, label %10, label %13

10:                                               ; preds = %5, %2
  %11 = tail call ptr @vec_heap_o_reserve(ptr noundef %3, i32 noundef 1, i64 noundef 8, i64 noundef 24) #21
  store ptr %11, ptr %0, align 8, !tbaa !5
  %12 = load i32, ptr %11, align 8, !tbaa !64
  br label %13

13:                                               ; preds = %5, %10
  %14 = phi i32 [ %8, %5 ], [ %12, %10 ]
  %15 = phi ptr [ %3, %5 ], [ %11, %10 ]
  %16 = add i32 %14, 1
  store i32 %16, ptr %15, align 8, !tbaa !64
  %17 = icmp eq ptr %1, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = zext i32 %14 to i64
  %20 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %15, i64 0, i32 2, i64 %19
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %20, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false), !tbaa.struct !116
  br label %21

21:                                               ; preds = %13, %18
  ret void
}

declare void @cselib_process_insn(ptr noundef) local_unnamed_addr #3

declare i32 @print_rtl_single(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @dump_cselib_table(ptr noundef) local_unnamed_addr #3

declare void @cancel_changes(i32 noundef) local_unnamed_addr #3

declare void @cselib_preserve_only_values() local_unnamed_addr #3

declare void @cselib_reset_table(i32 noundef) local_unnamed_addr #3

declare void @pool_free(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @target_for_debug_bind(ptr noundef) local_unnamed_addr #3

declare ptr @vec_heap_p_reserve_exact(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @xmalloc(i64 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #13

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #14

declare ptr @cselib_lookup_from_insn(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @get_insns() local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @preserve_value(ptr noundef %0) unnamed_addr #9 {
  tail call void @cselib_preserve_value(ptr noundef %0) #21
  %2 = getelementptr inbounds %struct.cselib_val_struct, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !128
  %4 = load ptr, ptr @preserved_values, align 8, !tbaa !5
  %5 = icmp eq ptr %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.VEC_rtx_base, ptr %4, i64 0, i32 1
  %8 = load i32, ptr %7, align 4, !tbaa !130
  %9 = load i32, ptr %4, align 8, !tbaa !42
  %10 = icmp eq i32 %8, %9
  br i1 %10, label %11, label %14

11:                                               ; preds = %6, %1
  %12 = tail call ptr @vec_heap_p_reserve(ptr noundef %4, i32 noundef 1) #21
  store ptr %12, ptr @preserved_values, align 8, !tbaa !5
  %13 = load i32, ptr %12, align 8, !tbaa !42
  br label %14

14:                                               ; preds = %6, %11
  %15 = phi i32 [ %9, %6 ], [ %13, %11 ]
  %16 = phi ptr [ %4, %6 ], [ %12, %11 ]
  %17 = add i32 %15, 1
  store i32 %17, ptr %16, align 8, !tbaa !42
  %18 = zext i32 %15 to i64
  %19 = getelementptr inbounds %struct.VEC_rtx_base, ptr %16, i64 0, i32 2, i64 %18
  store ptr %3, ptr %19, align 8, !tbaa !5
  ret void
}

declare void @cselib_preserve_cfa_base_value(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @var_reg_decl_set(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, i64 noundef %4, ptr noundef %5, i32 noundef %6) unnamed_addr #9 {
  %8 = icmp eq ptr %3, null
  br i1 %8, label %34, label %9

9:                                                ; preds = %7
  %10 = load i64, ptr %3, align 8
  %11 = and i64 %10, 65535
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %11
  %15 = load i32, ptr %14, align 4, !tbaa !16
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %17, label %34

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.tree_decl_common, ptr %3, i64 0, i32 2
  %19 = load i64, ptr %18, align 8
  %20 = and i64 %19, 16384
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %17
  %23 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %3) #21
  %24 = icmp eq ptr %23, null
  br i1 %24, label %34, label %25

25:                                               ; preds = %22
  %26 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %3) #21
  %27 = load i64, ptr %26, align 8
  %28 = and i64 %27, 65535
  %29 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !16
  %31 = icmp eq i32 %30, 3
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %3) #21
  br label %34

34:                                               ; preds = %7, %32, %25, %22, %17, %13, %9
  %35 = phi ptr [ %3, %9 ], [ %33, %32 ], [ %3, %25 ], [ %3, %22 ], [ %3, %17 ], [ %3, %13 ], [ null, %7 ]
  %36 = getelementptr i8, ptr %1, i64 8
  %37 = load i32, ptr %36, align 8, !tbaa !16
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 1, i64 %38
  %40 = load ptr, ptr %39, align 8, !tbaa !5
  %41 = icmp eq ptr %40, null
  br i1 %41, label %54, label %42

42:                                               ; preds = %34, %51
  %43 = phi ptr [ %52, %51 ], [ %40, %34 ]
  %44 = getelementptr inbounds %struct.attrs_def, ptr %43, i64 0, i32 2
  %45 = load ptr, ptr %44, align 8, !tbaa !72
  %46 = icmp eq ptr %45, %35
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.attrs_def, ptr %43, i64 0, i32 3
  %49 = load i64, ptr %48, align 8, !tbaa !59
  %50 = icmp eq i64 %49, %4
  br i1 %50, label %61, label %51

51:                                               ; preds = %42, %47
  %52 = load ptr, ptr %43, align 8, !tbaa !5
  %53 = icmp eq ptr %52, null
  br i1 %53, label %54, label %42, !llvm.loop !131

54:                                               ; preds = %51, %34
  %55 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  %56 = tail call ptr @pool_alloc(ptr noundef %55) #21
  %57 = getelementptr inbounds %struct.attrs_def, ptr %56, i64 0, i32 1
  store ptr %1, ptr %57, align 8, !tbaa !71
  %58 = getelementptr inbounds %struct.attrs_def, ptr %56, i64 0, i32 2
  store ptr %35, ptr %58, align 8, !tbaa !72
  %59 = getelementptr inbounds %struct.attrs_def, ptr %56, i64 0, i32 3
  store i64 %4, ptr %59, align 8, !tbaa !59
  %60 = load ptr, ptr %39, align 8, !tbaa !5
  store ptr %60, ptr %56, align 8, !tbaa !56
  store ptr %56, ptr %39, align 8, !tbaa !5
  br label %61

61:                                               ; preds = %47, %54
  tail call fastcc void @set_variable_part(ptr noundef %0, ptr noundef %1, ptr noundef %35, i64 noundef %4, i32 noundef %2, ptr noundef %5, i32 noundef %6)
  ret void
}

declare void @cselib_preserve_value(ptr noundef) local_unnamed_addr #3

declare ptr @vec_heap_p_reserve(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @set_variable_part(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4, ptr noundef %5, i32 noundef %6) unnamed_addr #9 {
  %8 = icmp eq i32 %6, 0
  %9 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !51
  %11 = icmp eq ptr %2, null
  br i1 %8, label %12, label %29

12:                                               ; preds = %7
  br i1 %11, label %21, label %13

13:                                               ; preds = %12
  %14 = load i64, ptr %2, align 8
  %15 = and i64 %14, 65535
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.rtx_def, ptr %2, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !16
  %20 = getelementptr inbounds %struct.cselib_val_struct, ptr %19, i64 0, i32 1
  br label %23

21:                                               ; preds = %13, %12
  %22 = getelementptr inbounds %struct.tree_decl_minimal, ptr %2, i64 0, i32 2
  br label %23

23:                                               ; preds = %17, %21
  %24 = phi ptr [ %20, %17 ], [ %22, %21 ]
  %25 = load i32, ptr %24, align 4, !tbaa !16
  %26 = getelementptr i8, ptr %10, i64 8
  %27 = load ptr, ptr %26, align 8, !tbaa !55
  %28 = tail call ptr @htab_find_slot_with_hash(ptr noundef %27, ptr noundef %2, i32 noundef %25, i32 noundef 0) #21
  br label %52

29:                                               ; preds = %7
  br i1 %11, label %38, label %30

30:                                               ; preds = %29
  %31 = load i64, ptr %2, align 8
  %32 = and i64 %31, 65535
  %33 = icmp eq i64 %32, 1
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.rtx_def, ptr %2, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !16
  %37 = getelementptr inbounds %struct.cselib_val_struct, ptr %36, i64 0, i32 1
  br label %40

38:                                               ; preds = %30, %29
  %39 = getelementptr inbounds %struct.tree_decl_minimal, ptr %2, i64 0, i32 2
  br label %40

40:                                               ; preds = %34, %38
  %41 = phi ptr [ %37, %34 ], [ %39, %38 ]
  %42 = load i32, ptr %41, align 4, !tbaa !16
  %43 = load i32, ptr %10, align 8, !tbaa !49
  %44 = getelementptr i8, ptr %10, i64 8
  %45 = load ptr, ptr %44, align 8, !tbaa !55
  %46 = icmp slt i32 %43, 2
  %47 = zext i1 %46 to i32
  %48 = tail call ptr @htab_find_slot_with_hash(ptr noundef %45, ptr noundef %2, i32 noundef %42, i32 noundef %47) #21
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %40
  %51 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %9, ptr noundef %2, i32 noundef 1)
  br label %52

52:                                               ; preds = %40, %50, %23
  %53 = phi ptr [ %28, %23 ], [ %48, %40 ], [ %51, %50 ]
  %54 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %0, ptr noundef %1, ptr noundef %53, ptr noundef %2, i64 noundef %3, i32 noundef %4, ptr noundef %5)
  ret void
}

declare ptr @decl_debug_expr_lookup(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc ptr @shared_hash_find_slot_unshare(ptr nocapture noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #2 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = load i64, ptr %1, align 8
  %7 = and i64 %6, 65535
  %8 = icmp eq i64 %7, 1
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !16
  %12 = getelementptr inbounds %struct.cselib_val_struct, ptr %11, i64 0, i32 1
  br label %15

13:                                               ; preds = %5, %3
  %14 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 2
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi ptr [ %12, %9 ], [ %14, %13 ]
  %17 = load i32, ptr %16, align 4, !tbaa !16
  %18 = load ptr, ptr %0, align 8, !tbaa !5
  %19 = load i32, ptr %18, align 8, !tbaa !49
  %20 = icmp slt i32 %19, 2
  br i1 %20, label %37, label %21

21:                                               ; preds = %15
  %22 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  %23 = tail call ptr @pool_alloc(ptr noundef %22) #21
  %24 = load i32, ptr %18, align 8, !tbaa !49
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %27, label %26

26:                                               ; preds = %21
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1353, ptr noundef nonnull @.str.2) #21
  br label %27

27:                                               ; preds = %26, %21
  store i32 1, ptr %23, align 8, !tbaa !49
  %28 = getelementptr inbounds %struct.shared_hash_def, ptr %18, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !55
  %30 = tail call i64 @htab_elements(ptr noundef %29) #21
  %31 = add i64 %30, 3
  %32 = tail call ptr @htab_create(i64 noundef %31, ptr noundef nonnull @variable_htab_hash, ptr noundef nonnull @variable_htab_eq, ptr noundef nonnull @variable_htab_free) #21
  %33 = getelementptr inbounds %struct.shared_hash_def, ptr %23, i64 0, i32 1
  store ptr %32, ptr %33, align 8, !tbaa !55
  %34 = load ptr, ptr %28, align 8, !tbaa !55
  tail call void @htab_traverse_noresize(ptr noundef %34, ptr noundef nonnull @vars_copy_1, ptr noundef %32) #21
  %35 = load i32, ptr %18, align 8, !tbaa !49
  %36 = add nsw i32 %35, -1
  store i32 %36, ptr %18, align 8, !tbaa !49
  store ptr %23, ptr %0, align 8, !tbaa !5
  br label %37

37:                                               ; preds = %15, %27
  %38 = phi ptr [ %23, %27 ], [ %18, %15 ]
  %39 = getelementptr i8, ptr %38, i64 8
  %40 = load ptr, ptr %39, align 8, !tbaa !55
  %41 = tail call ptr @htab_find_slot_with_hash(ptr noundef %40, ptr noundef %1, i32 noundef %17, i32 noundef %2) #21
  ret ptr %41
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @set_slot_part(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i64 noundef %4, i32 noundef %5, ptr noundef %6) unnamed_addr #9 {
  %8 = alloca ptr, align 8
  %9 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %7
  %12 = icmp eq ptr %3, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %11
  %14 = load i64, ptr %3, align 8
  %15 = trunc i64 %14 to i16
  switch i16 %15, label %16 [
    i16 1, label %19
    i16 37, label %19
  ]

16:                                               ; preds = %13
  %17 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %3) #21
  %18 = icmp ne ptr %17, null
  br label %19

19:                                               ; preds = %11, %13, %13, %16
  %20 = phi i1 [ %18, %16 ], [ true, %13 ], [ true, %11 ], [ true, %13 ]
  %21 = icmp ne i64 %4, 0
  %22 = select i1 %21, i1 %20, i1 false
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 6374, ptr noundef nonnull @.str.2) #21
  br label %24

24:                                               ; preds = %7, %19, %23
  %25 = phi i1 [ %20, %19 ], [ true, %23 ], [ false, %7 ]
  %26 = icmp eq ptr %3, %1
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 6375, ptr noundef nonnull @.str.2) #21
  br label %28

28:                                               ; preds = %24, %27
  %29 = load ptr, ptr %2, align 8, !tbaa !5
  %30 = load i32, ptr @flag_var_tracking_uninit, align 4, !tbaa !20
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 2, i32 %5
  %33 = icmp eq ptr %29, null
  br i1 %33, label %34, label %57

34:                                               ; preds = %28
  %35 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %34
  %38 = icmp eq ptr %3, null
  br i1 %38, label %47, label %39

39:                                               ; preds = %37
  %40 = load i64, ptr %3, align 8
  %41 = trunc i64 %40 to i16
  switch i16 %41, label %42 [
    i16 1, label %47
    i16 37, label %47
  ]

42:                                               ; preds = %39
  %43 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %3) #21
  %44 = freeze ptr %43
  %45 = icmp eq ptr %44, null
  br i1 %45, label %46, label %47

46:                                               ; preds = %42, %34
  br label %47

47:                                               ; preds = %37, %39, %39, %42, %46
  %48 = phi ptr [ @var_pool, %46 ], [ @valvar_pool, %42 ], [ @valvar_pool, %39 ], [ @valvar_pool, %39 ], [ @valvar_pool, %37 ]
  %49 = load ptr, ptr %48, align 8
  %50 = tail call ptr @pool_alloc(ptr noundef %49) #21
  store ptr %3, ptr %50, align 8, !tbaa !181
  %51 = getelementptr inbounds %struct.variable_def, ptr %50, i64 0, i32 1
  store i32 1, ptr %51, align 8, !tbaa !183
  %52 = getelementptr inbounds %struct.variable_def, ptr %50, i64 0, i32 2
  store i8 1, ptr %52, align 4, !tbaa !184
  %53 = getelementptr inbounds %struct.variable_def, ptr %50, i64 0, i32 3
  store i8 0, ptr %53, align 1, !tbaa !211
  %54 = getelementptr inbounds %struct.variable_def, ptr %50, i64 0, i32 4
  store i8 0, ptr %54, align 2, !tbaa !212
  %55 = getelementptr inbounds %struct.variable_def, ptr %50, i64 0, i32 5
  %56 = getelementptr inbounds %struct.variable_def, ptr %50, i64 0, i32 5, i64 0, i32 2
  store i64 %4, ptr %56, align 8, !tbaa !213
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %55, i8 0, i64 16, i1 false)
  store ptr %50, ptr %2, align 8, !tbaa !5
  br label %443

57:                                               ; preds = %28
  %58 = load ptr, ptr %29, align 8, !tbaa !181
  %59 = icmp eq ptr %58, %3
  br i1 %25, label %60, label %233

60:                                               ; preds = %57
  br i1 %59, label %62, label %61

61:                                               ; preds = %60
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 6402, ptr noundef nonnull @.str.2) #21
  br label %62

62:                                               ; preds = %60, %61
  %63 = load i32, ptr %1, align 8
  %64 = trunc i32 %63 to i16
  switch i16 %64, label %144 [
    i16 1, label %65
    i16 37, label %94
    i16 43, label %120
  ]

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 5
  %67 = load ptr, ptr %66, align 8, !tbaa !5
  %68 = icmp eq ptr %67, null
  br i1 %68, label %170, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  br label %71

71:                                               ; preds = %69, %90
  %72 = phi ptr [ %67, %69 ], [ %92, %90 ]
  %73 = phi i32 [ 0, %69 ], [ %91, %90 ]
  %74 = phi ptr [ %66, %69 ], [ %72, %90 ]
  %75 = getelementptr inbounds %struct.location_chain_def, ptr %72, i64 0, i32 1
  %76 = load ptr, ptr %75, align 8, !tbaa !214
  %77 = load i32, ptr %76, align 8
  %78 = trunc i32 %77 to i16
  switch i16 %78, label %170 [
    i16 1, label %79
    i16 37, label %90
    i16 43, label %90
  ]

79:                                               ; preds = %71
  %80 = icmp eq ptr %76, %1
  br i1 %80, label %476, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %struct.rtx_def, ptr %76, i64 0, i32 1
  %83 = load ptr, ptr %82, align 8, !tbaa !16
  %84 = getelementptr inbounds %struct.cselib_val_struct, ptr %83, i64 0, i32 1
  %85 = load i32, ptr %84, align 4, !tbaa !169
  %86 = load ptr, ptr %70, align 8, !tbaa !16
  %87 = getelementptr inbounds %struct.cselib_val_struct, ptr %86, i64 0, i32 1
  %88 = load i32, ptr %87, align 4, !tbaa !169
  %89 = icmp slt i32 %85, %88
  br i1 %89, label %90, label %170

90:                                               ; preds = %71, %71, %81
  %91 = add nuw nsw i32 %73, 1
  %92 = load ptr, ptr %72, align 8, !tbaa !5
  %93 = icmp eq ptr %92, null
  br i1 %93, label %170, label %71, !llvm.loop !215

94:                                               ; preds = %62
  %95 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 5
  %96 = load ptr, ptr %95, align 8, !tbaa !5
  %97 = icmp eq ptr %96, null
  br i1 %97, label %170, label %98

98:                                               ; preds = %94
  %99 = getelementptr i8, ptr %1, i64 8
  br label %100

100:                                              ; preds = %98, %114
  %101 = phi ptr [ %96, %98 ], [ %116, %114 ]
  %102 = phi i32 [ 0, %98 ], [ %115, %114 ]
  %103 = phi ptr [ %95, %98 ], [ %101, %114 ]
  %104 = getelementptr inbounds %struct.location_chain_def, ptr %101, i64 0, i32 1
  %105 = load ptr, ptr %104, align 8, !tbaa !214
  %106 = load i32, ptr %105, align 8
  %107 = and i32 %106, 65535
  %108 = icmp eq i32 %107, 37
  br i1 %108, label %109, label %170

109:                                              ; preds = %100
  %110 = getelementptr i8, ptr %105, i64 8
  %111 = load i32, ptr %110, align 8, !tbaa !16
  %112 = load i32, ptr %99, align 8, !tbaa !16
  %113 = icmp ult i32 %111, %112
  br i1 %113, label %114, label %118

114:                                              ; preds = %109
  %115 = add nuw nsw i32 %102, 1
  %116 = load ptr, ptr %101, align 8, !tbaa !5
  %117 = icmp eq ptr %116, null
  br i1 %117, label %170, label %100, !llvm.loop !216

118:                                              ; preds = %109
  %119 = icmp eq i32 %111, %112
  br i1 %119, label %476, label %170

120:                                              ; preds = %62
  %121 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 5
  %122 = load ptr, ptr %121, align 8, !tbaa !5
  %123 = icmp eq ptr %122, null
  br i1 %123, label %170, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  br label %126

126:                                              ; preds = %124, %140
  %127 = phi ptr [ %122, %124 ], [ %142, %140 ]
  %128 = phi i32 [ 0, %124 ], [ %141, %140 ]
  %129 = phi ptr [ %121, %124 ], [ %127, %140 ]
  %130 = getelementptr inbounds %struct.location_chain_def, ptr %127, i64 0, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !214
  %132 = load i32, ptr %131, align 8
  %133 = trunc i32 %132 to i16
  switch i16 %133, label %170 [
    i16 37, label %140
    i16 43, label %134
  ]

134:                                              ; preds = %126
  %135 = getelementptr inbounds %struct.rtx_def, ptr %131, i64 0, i32 1
  %136 = load ptr, ptr %135, align 8, !tbaa !16
  %137 = load ptr, ptr %125, align 8, !tbaa !16
  %138 = tail call fastcc i32 @loc_cmp(ptr noundef %136, ptr noundef %137), !range !217
  %139 = icmp sgt i32 %138, -1
  br i1 %139, label %164, label %140

140:                                              ; preds = %134, %126
  %141 = add nuw nsw i32 %128, 1
  %142 = load ptr, ptr %127, align 8, !tbaa !5
  %143 = icmp eq ptr %142, null
  br i1 %143, label %170, label %126, !llvm.loop !218

144:                                              ; preds = %62
  %145 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 5
  %146 = load ptr, ptr %145, align 8, !tbaa !5
  %147 = icmp eq ptr %146, null
  br i1 %147, label %170, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %struct.location_chain_def, ptr %146, i64 0, i32 1
  %150 = load ptr, ptr %149, align 8, !tbaa !214
  %151 = tail call fastcc i32 @loc_cmp(ptr noundef %150, ptr noundef nonnull %1), !range !217
  %152 = icmp sgt i32 %151, -1
  br i1 %152, label %164, label %158

153:                                              ; preds = %158
  %154 = getelementptr inbounds %struct.location_chain_def, ptr %162, i64 0, i32 1
  %155 = load ptr, ptr %154, align 8, !tbaa !214
  %156 = tail call fastcc i32 @loc_cmp(ptr noundef %155, ptr noundef nonnull %1), !range !217
  %157 = icmp sgt i32 %156, -1
  br i1 %157, label %164, label %158, !llvm.loop !219

158:                                              ; preds = %148, %153
  %159 = phi i32 [ %161, %153 ], [ 0, %148 ]
  %160 = phi ptr [ %162, %153 ], [ %146, %148 ]
  %161 = add nuw nsw i32 %159, 1
  %162 = load ptr, ptr %160, align 8, !tbaa !5
  %163 = icmp eq ptr %162, null
  br i1 %163, label %170, label %153, !llvm.loop !219

164:                                              ; preds = %134, %153, %148
  %165 = phi ptr [ %146, %148 ], [ %162, %153 ], [ %127, %134 ]
  %166 = phi ptr [ %145, %148 ], [ %160, %153 ], [ %129, %134 ]
  %167 = phi i32 [ %151, %148 ], [ %156, %153 ], [ %138, %134 ]
  %168 = phi i32 [ 0, %148 ], [ %161, %153 ], [ %128, %134 ]
  %169 = icmp eq i32 %167, 0
  br i1 %169, label %476, label %170

170:                                              ; preds = %140, %126, %114, %100, %90, %81, %71, %158, %120, %94, %65, %144, %118, %164
  %171 = phi i32 [ %168, %164 ], [ %102, %118 ], [ 0, %144 ], [ 0, %65 ], [ 0, %94 ], [ 0, %120 ], [ %161, %158 ], [ %91, %90 ], [ %73, %81 ], [ %73, %71 ], [ %115, %114 ], [ %102, %100 ], [ %141, %140 ], [ %128, %126 ]
  %172 = phi ptr [ %166, %164 ], [ %103, %118 ], [ %145, %144 ], [ %66, %65 ], [ %95, %94 ], [ %121, %120 ], [ %160, %158 ], [ %72, %90 ], [ %74, %81 ], [ %74, %71 ], [ %101, %114 ], [ %103, %100 ], [ %127, %140 ], [ %129, %126 ]
  %173 = phi ptr [ %165, %164 ], [ %101, %118 ], [ null, %144 ], [ null, %65 ], [ null, %94 ], [ null, %120 ], [ null, %158 ], [ null, %90 ], [ %72, %81 ], [ %72, %71 ], [ null, %114 ], [ %101, %100 ], [ null, %140 ], [ %127, %126 ]
  %174 = getelementptr i8, ptr %29, i64 8
  %175 = load i32, ptr %174, align 8, !tbaa !183
  %176 = getelementptr i8, ptr %29, i64 14
  %177 = load i8, ptr %176, align 2, !tbaa !212
  %178 = zext i8 %177 to i32
  %179 = add nuw nsw i32 %178, 1
  %180 = icmp slt i32 %179, %175
  br i1 %180, label %186, label %181

181:                                              ; preds = %170
  %182 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %183 = load ptr, ptr %182, align 8, !tbaa !51
  %184 = load i32, ptr %183, align 8, !tbaa !49
  %185 = icmp slt i32 %184, 2
  br i1 %185, label %443, label %186

186:                                              ; preds = %170, %181
  %187 = tail call fastcc ptr @unshare_variable(ptr noundef nonnull %0, ptr noundef nonnull %2, ptr noundef nonnull %29, i32 noundef %32)
  %188 = load ptr, ptr %187, align 8, !tbaa !5
  %189 = getelementptr inbounds %struct.variable_def, ptr %188, i64 0, i32 5
  %190 = icmp eq i32 %171, 0
  br i1 %190, label %220, label %191

191:                                              ; preds = %186
  %192 = and i32 %171, 7
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %202, label %194

194:                                              ; preds = %191, %194
  %195 = phi i32 [ %198, %194 ], [ %171, %191 ]
  %196 = phi ptr [ %199, %194 ], [ %189, %191 ]
  %197 = phi i32 [ %200, %194 ], [ 0, %191 ]
  %198 = add nsw i32 %195, -1
  %199 = load ptr, ptr %196, align 8, !tbaa !5
  %200 = add i32 %197, 1
  %201 = icmp eq i32 %200, %192
  br i1 %201, label %202, label %194, !llvm.loop !220

202:                                              ; preds = %194, %191
  %203 = phi ptr [ undef, %191 ], [ %199, %194 ]
  %204 = phi i32 [ %171, %191 ], [ %198, %194 ]
  %205 = phi ptr [ %189, %191 ], [ %199, %194 ]
  %206 = icmp ult i32 %171, 8
  br i1 %206, label %220, label %207

207:                                              ; preds = %202, %207
  %208 = phi i32 [ %217, %207 ], [ %204, %202 ]
  %209 = phi ptr [ %218, %207 ], [ %205, %202 ]
  %210 = load ptr, ptr %209, align 8, !tbaa !5
  %211 = load ptr, ptr %210, align 8, !tbaa !5
  %212 = load ptr, ptr %211, align 8, !tbaa !5
  %213 = load ptr, ptr %212, align 8, !tbaa !5
  %214 = load ptr, ptr %213, align 8, !tbaa !5
  %215 = load ptr, ptr %214, align 8, !tbaa !5
  %216 = load ptr, ptr %215, align 8, !tbaa !5
  %217 = add nsw i32 %208, -8
  %218 = load ptr, ptr %216, align 8, !tbaa !5
  %219 = icmp eq i32 %217, 0
  br i1 %219, label %220, label %207, !llvm.loop !222

220:                                              ; preds = %202, %207, %186
  %221 = phi ptr [ %189, %186 ], [ %203, %202 ], [ %218, %207 ]
  %222 = icmp eq ptr %173, null
  %223 = load ptr, ptr %221, align 8, !tbaa !5
  %224 = icmp eq ptr %223, null
  %225 = select i1 %222, i1 %224, i1 false
  br i1 %225, label %443, label %226

226:                                              ; preds = %220
  %227 = getelementptr inbounds %struct.location_chain_def, ptr %173, i64 0, i32 1
  %228 = load ptr, ptr %227, align 8, !tbaa !214
  %229 = getelementptr inbounds %struct.location_chain_def, ptr %223, i64 0, i32 1
  %230 = load ptr, ptr %229, align 8, !tbaa !214
  %231 = icmp eq ptr %228, %230
  br i1 %231, label %443, label %232

232:                                              ; preds = %226
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 6493, ptr noundef nonnull @.str.2) #21
  br label %443

233:                                              ; preds = %57
  br i1 %59, label %235, label %234

234:                                              ; preds = %233
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 6500, ptr noundef nonnull @.str.2) #21
  br label %235

235:                                              ; preds = %233, %234
  %236 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 2
  %237 = load i8, ptr %236, align 4, !tbaa !184
  %238 = sext i8 %237 to i32
  %239 = icmp eq i8 %237, 0
  br i1 %239, label %253, label %240

240:                                              ; preds = %235, %240
  %241 = phi i32 [ %251, %240 ], [ %238, %235 ]
  %242 = phi i32 [ %250, %240 ], [ 0, %235 ]
  %243 = add nsw i32 %242, %241
  %244 = sdiv i32 %243, 2
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 5, i64 %245, i32 2
  %247 = load i64, ptr %246, align 8, !tbaa !213
  %248 = icmp slt i64 %247, %4
  %249 = add nsw i32 %244, 1
  %250 = select i1 %248, i32 %249, i32 %242
  %251 = select i1 %248, i32 %241, i32 %244
  %252 = icmp eq i32 %250, %251
  br i1 %252, label %253, label %240, !llvm.loop !223

253:                                              ; preds = %240, %235
  %254 = phi i32 [ 0, %235 ], [ %250, %240 ]
  %255 = icmp slt i32 %254, %238
  br i1 %255, label %256, label %312

256:                                              ; preds = %253
  %257 = sext i32 %254 to i64
  %258 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 5, i64 %257, i32 2
  %259 = load i64, ptr %258, align 8, !tbaa !213
  %260 = icmp eq i64 %259, %4
  %261 = icmp sgt i32 %254, -1
  %262 = and i1 %261, %260
  br i1 %262, label %263, label %312

263:                                              ; preds = %256
  %264 = zext i32 %254 to i64
  %265 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 5, i64 %264
  %266 = load ptr, ptr %265, align 8, !tbaa !185
  %267 = icmp eq ptr %266, null
  br i1 %267, label %296, label %268

268:                                              ; preds = %263
  %269 = getelementptr inbounds %struct.location_chain_def, ptr %266, i64 0, i32 1
  %270 = load ptr, ptr %269, align 8, !tbaa !214
  %271 = load i32, ptr %270, align 8
  %272 = and i32 %271, 65535
  %273 = icmp eq i32 %272, 37
  br i1 %273, label %274, label %284

274:                                              ; preds = %268
  %275 = load i32, ptr %1, align 8
  %276 = and i32 %275, 65535
  %277 = icmp eq i32 %276, 37
  br i1 %277, label %278, label %284

278:                                              ; preds = %274
  %279 = getelementptr i8, ptr %270, i64 8
  %280 = load i32, ptr %279, align 8, !tbaa !16
  %281 = getelementptr i8, ptr %1, i64 8
  %282 = load i32, ptr %281, align 8, !tbaa !16
  %283 = icmp eq i32 %280, %282
  br i1 %283, label %287, label %284

284:                                              ; preds = %278, %274, %268
  %285 = tail call i32 @rtx_equal_p(ptr noundef nonnull %270, ptr noundef %1) #21
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %296, label %287

287:                                              ; preds = %284, %278
  %288 = getelementptr inbounds %struct.location_chain_def, ptr %266, i64 0, i32 3
  %289 = load i32, ptr %288, align 8, !tbaa !224
  %290 = icmp ult i32 %289, %32
  br i1 %290, label %291, label %292

291:                                              ; preds = %287
  store i32 %32, ptr %288, align 8, !tbaa !224
  br label %292

292:                                              ; preds = %291, %287
  %293 = icmp eq ptr %6, null
  br i1 %293, label %476, label %294

294:                                              ; preds = %292
  %295 = getelementptr inbounds %struct.location_chain_def, ptr %266, i64 0, i32 2
  store ptr %6, ptr %295, align 8, !tbaa !225
  br label %476

296:                                              ; preds = %284, %263
  %297 = getelementptr i8, ptr %29, i64 8
  %298 = load i32, ptr %297, align 8, !tbaa !183
  %299 = getelementptr i8, ptr %29, i64 14
  %300 = load i8, ptr %299, align 2, !tbaa !212
  %301 = zext i8 %300 to i32
  %302 = add nuw nsw i32 %301, 1
  %303 = icmp slt i32 %302, %298
  br i1 %303, label %309, label %304

304:                                              ; preds = %296
  %305 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %306 = load ptr, ptr %305, align 8, !tbaa !51
  %307 = load i32, ptr %306, align 8, !tbaa !49
  %308 = icmp slt i32 %307, 2
  br i1 %308, label %391, label %309

309:                                              ; preds = %296, %304
  %310 = tail call fastcc ptr @unshare_variable(ptr noundef nonnull %0, ptr noundef nonnull %2, ptr noundef nonnull %29, i32 noundef %32)
  %311 = load ptr, ptr %310, align 8, !tbaa !5
  br label %391

312:                                              ; preds = %256, %253
  %313 = getelementptr i8, ptr %29, i64 8
  %314 = load i32, ptr %313, align 8, !tbaa !183
  %315 = getelementptr i8, ptr %29, i64 14
  %316 = load i8, ptr %315, align 2, !tbaa !212
  %317 = zext i8 %316 to i32
  %318 = add nuw nsw i32 %317, 1
  %319 = icmp slt i32 %318, %314
  br i1 %319, label %325, label %320

320:                                              ; preds = %312
  %321 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %322 = load ptr, ptr %321, align 8, !tbaa !51
  %323 = load i32, ptr %322, align 8, !tbaa !49
  %324 = icmp slt i32 %323, 2
  br i1 %324, label %330, label %325

325:                                              ; preds = %312, %320
  %326 = tail call fastcc ptr @unshare_variable(ptr noundef nonnull %0, ptr noundef nonnull %2, ptr noundef nonnull %29, i32 noundef %32)
  %327 = load ptr, ptr %326, align 8, !tbaa !5
  %328 = getelementptr inbounds %struct.variable_def, ptr %327, i64 0, i32 2
  %329 = load i8, ptr %328, align 4, !tbaa !184
  br label %330

330:                                              ; preds = %325, %320
  %331 = phi i8 [ %329, %325 ], [ %237, %320 ]
  %332 = phi ptr [ %326, %325 ], [ %2, %320 ]
  %333 = phi ptr [ %327, %325 ], [ %29, %320 ]
  %334 = getelementptr inbounds %struct.variable_def, ptr %333, i64 0, i32 2
  %335 = icmp slt i8 %331, 16
  br i1 %335, label %336, label %350

336:                                              ; preds = %330
  %337 = icmp eq i8 %331, 0
  br i1 %337, label %351, label %338

338:                                              ; preds = %336
  %339 = load ptr, ptr %333, align 8, !tbaa !181
  %340 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %351, label %342

342:                                              ; preds = %338
  %343 = icmp eq ptr %339, null
  br i1 %343, label %350, label %344

344:                                              ; preds = %342
  %345 = load i64, ptr %339, align 8
  %346 = trunc i64 %345 to i16
  switch i16 %346, label %347 [
    i16 1, label %350
    i16 37, label %350
  ]

347:                                              ; preds = %344
  %348 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %339) #21
  %349 = icmp eq ptr %348, null
  br i1 %349, label %351, label %350

350:                                              ; preds = %342, %344, %344, %347, %330
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 6546, ptr noundef nonnull @.str.2) #21
  br label %351

351:                                              ; preds = %338, %336, %347, %350
  %352 = load i8, ptr %334, align 4, !tbaa !184
  %353 = sext i8 %352 to i32
  %354 = icmp slt i32 %254, %353
  br i1 %354, label %355, label %384

355:                                              ; preds = %351
  %356 = sext i8 %352 to i64
  %357 = sext i32 %254 to i64
  %358 = sub nsw i64 %356, %357
  %359 = xor i64 %357, -1
  %360 = and i64 %358, 1
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %366, label %362

362:                                              ; preds = %355
  %363 = getelementptr inbounds %struct.variable_def, ptr %333, i64 0, i32 5, i64 %356
  %364 = add nsw i64 %356, -1
  %365 = getelementptr inbounds %struct.variable_def, ptr %333, i64 0, i32 5, i64 %364
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %363, ptr noundef nonnull align 8 dereferenceable(24) %365, i64 24, i1 false), !tbaa.struct !226
  br label %366

366:                                              ; preds = %362, %355
  %367 = phi i64 [ %356, %355 ], [ %364, %362 ]
  %368 = phi i64 [ undef, %355 ], [ %364, %362 ]
  %369 = sub nsw i64 0, %356
  %370 = icmp eq i64 %359, %369
  br i1 %370, label %380, label %371

371:                                              ; preds = %366, %371
  %372 = phi i64 [ %377, %371 ], [ %367, %366 ]
  %373 = getelementptr inbounds %struct.variable_def, ptr %333, i64 0, i32 5, i64 %372
  %374 = add nsw i64 %372, -1
  %375 = getelementptr inbounds %struct.variable_def, ptr %333, i64 0, i32 5, i64 %374
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %373, ptr noundef nonnull align 8 dereferenceable(24) %375, i64 24, i1 false), !tbaa.struct !226
  %376 = getelementptr inbounds %struct.variable_def, ptr %333, i64 0, i32 5, i64 %374
  %377 = add nsw i64 %372, -2
  %378 = getelementptr inbounds %struct.variable_def, ptr %333, i64 0, i32 5, i64 %377
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %376, ptr noundef nonnull align 8 dereferenceable(24) %378, i64 24, i1 false), !tbaa.struct !226
  %379 = icmp sgt i64 %377, %357
  br i1 %379, label %371, label %380, !llvm.loop !227

380:                                              ; preds = %371, %366
  %381 = phi i64 [ %368, %366 ], [ %377, %371 ]
  %382 = trunc i64 %381 to i32
  %383 = load i8, ptr %334, align 4, !tbaa !184
  br label %384

384:                                              ; preds = %380, %351
  %385 = phi i8 [ %352, %351 ], [ %383, %380 ]
  %386 = phi i32 [ %353, %351 ], [ %382, %380 ]
  %387 = add i8 %385, 1
  store i8 %387, ptr %334, align 4, !tbaa !184
  %388 = sext i32 %386 to i64
  %389 = getelementptr inbounds %struct.variable_def, ptr %333, i64 0, i32 5, i64 %388
  %390 = getelementptr inbounds %struct.variable_def, ptr %333, i64 0, i32 5, i64 %388, i32 2
  store i64 %4, ptr %390, align 8, !tbaa !213
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %389, i8 0, i64 16, i1 false)
  br label %391

391:                                              ; preds = %309, %304, %384
  %392 = phi i64 [ %257, %309 ], [ %257, %304 ], [ %388, %384 ]
  %393 = phi i32 [ %254, %309 ], [ %254, %304 ], [ %386, %384 ]
  %394 = phi ptr [ %310, %309 ], [ %2, %304 ], [ %332, %384 ]
  %395 = phi ptr [ %311, %309 ], [ %29, %304 ], [ %333, %384 ]
  %396 = getelementptr inbounds %struct.variable_def, ptr %395, i64 0, i32 5, i64 %392
  %397 = load ptr, ptr %396, align 8, !tbaa !185
  %398 = getelementptr i8, ptr %1, i64 8
  br label %399

399:                                              ; preds = %419, %391
  %400 = phi ptr [ %397, %391 ], [ %404, %419 ]
  %401 = phi ptr [ %396, %391 ], [ %400, %419 ]
  %402 = icmp eq ptr %400, null
  br i1 %402, label %443, label %403

403:                                              ; preds = %399
  %404 = load ptr, ptr %400, align 8, !tbaa !187
  %405 = getelementptr inbounds %struct.location_chain_def, ptr %400, i64 0, i32 1
  %406 = load ptr, ptr %405, align 8, !tbaa !214
  %407 = load i32, ptr %406, align 8
  %408 = and i32 %407, 65535
  %409 = icmp eq i32 %408, 37
  br i1 %409, label %410, label %419

410:                                              ; preds = %403
  %411 = load i32, ptr %1, align 8
  %412 = and i32 %411, 65535
  %413 = icmp eq i32 %412, 37
  br i1 %413, label %414, label %419

414:                                              ; preds = %410
  %415 = getelementptr i8, ptr %406, i64 8
  %416 = load i32, ptr %415, align 8, !tbaa !16
  %417 = load i32, ptr %398, align 8, !tbaa !16
  %418 = icmp eq i32 %416, %417
  br i1 %418, label %425, label %419

419:                                              ; preds = %414, %410, %403
  %420 = tail call i32 @rtx_equal_p(ptr noundef nonnull %406, ptr noundef %1) #21
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %399, label %422, !llvm.loop !228

422:                                              ; preds = %419
  %423 = getelementptr inbounds %struct.location_chain_def, ptr %400, i64 0, i32 1
  %424 = load ptr, ptr %423, align 8, !tbaa !214
  br label %425

425:                                              ; preds = %414, %422
  %426 = phi ptr [ %424, %422 ], [ %406, %414 ]
  %427 = getelementptr inbounds %struct.location_chain_def, ptr %400, i64 0, i32 3
  %428 = load i32, ptr %427, align 8, !tbaa !224
  %429 = tail call i32 @llvm.umax.i32(i32 %428, i32 %32)
  %430 = getelementptr inbounds %struct.location_chain_def, ptr %400, i64 0, i32 2
  %431 = load ptr, ptr %430, align 8, !tbaa !225
  %432 = icmp ne ptr %431, null
  %433 = icmp eq ptr %6, null
  %434 = and i1 %433, %432
  %435 = select i1 %434, ptr %431, ptr %6
  %436 = getelementptr inbounds %struct.variable_def, ptr %395, i64 0, i32 5, i64 %392, i32 1
  %437 = load ptr, ptr %436, align 8, !tbaa !229
  %438 = icmp eq ptr %437, %426
  br i1 %438, label %439, label %441

439:                                              ; preds = %425
  store ptr null, ptr %436, align 8, !tbaa !229
  %440 = getelementptr inbounds %struct.variable_def, ptr %395, i64 0, i32 3
  store i8 1, ptr %440, align 1, !tbaa !211
  br label %441

441:                                              ; preds = %439, %425
  %442 = load ptr, ptr @loc_chain_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %442, ptr noundef nonnull %400) #21
  store ptr %404, ptr %401, align 8, !tbaa !5
  br label %443

443:                                              ; preds = %399, %220, %226, %232, %441, %181, %47
  %444 = phi i32 [ %32, %47 ], [ %32, %232 ], [ %32, %181 ], [ %429, %441 ], [ %32, %226 ], [ %32, %220 ], [ %32, %399 ]
  %445 = phi ptr [ %6, %47 ], [ %6, %232 ], [ %6, %181 ], [ %435, %441 ], [ %6, %226 ], [ %6, %220 ], [ %6, %399 ]
  %446 = phi i32 [ 0, %47 ], [ 0, %232 ], [ 0, %181 ], [ %393, %441 ], [ 0, %226 ], [ 0, %220 ], [ %393, %399 ]
  %447 = phi ptr [ %2, %47 ], [ %187, %232 ], [ %2, %181 ], [ %394, %441 ], [ %187, %226 ], [ %187, %220 ], [ %394, %399 ]
  %448 = phi ptr [ %55, %47 ], [ %221, %232 ], [ %172, %181 ], [ %396, %441 ], [ %221, %226 ], [ %221, %220 ], [ %396, %399 ]
  %449 = phi ptr [ %50, %47 ], [ %188, %232 ], [ %29, %181 ], [ %395, %441 ], [ %188, %226 ], [ %188, %220 ], [ %395, %399 ]
  %450 = load ptr, ptr @loc_chain_pool, align 8, !tbaa !5
  %451 = tail call ptr @pool_alloc(ptr noundef %450) #21
  %452 = getelementptr inbounds %struct.location_chain_def, ptr %451, i64 0, i32 1
  store ptr %1, ptr %452, align 8, !tbaa !214
  %453 = getelementptr inbounds %struct.location_chain_def, ptr %451, i64 0, i32 3
  store i32 %444, ptr %453, align 8, !tbaa !224
  %454 = getelementptr inbounds %struct.location_chain_def, ptr %451, i64 0, i32 2
  store ptr %445, ptr %454, align 8, !tbaa !225
  %455 = load ptr, ptr %448, align 8, !tbaa !5
  store ptr %455, ptr %451, align 8, !tbaa !187
  store ptr %451, ptr %448, align 8, !tbaa !5
  %456 = load i1, ptr @emit_notes, align 1
  %457 = select i1 %25, i1 %456, i1 false
  br i1 %457, label %458, label %470

458:                                              ; preds = %443
  %459 = load ptr, ptr %449, align 8, !tbaa !181
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8)
  store ptr %1, ptr %8, align 8, !tbaa !5
  %460 = load i32, ptr %1, align 8
  %461 = trunc i32 %460 to i16
  switch i16 %461, label %467 [
    i16 1, label %462
    i16 2, label %462
    i16 37, label %469
    i16 43, label %464
  ]

462:                                              ; preds = %458, %458
  %463 = call i32 @add_value_chain(ptr noundef nonnull %8, ptr noundef %459)
  br label %469

464:                                              ; preds = %458
  %465 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %466 = load ptr, ptr %465, align 8, !tbaa !16
  store ptr %466, ptr %8, align 8, !tbaa !5
  br label %467

467:                                              ; preds = %464, %458
  %468 = call i32 @for_each_rtx(ptr noundef nonnull %8, ptr noundef nonnull @add_value_chain, ptr noundef %459) #21
  br label %469

469:                                              ; preds = %458, %462, %467
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  br label %470

470:                                              ; preds = %469, %443
  %471 = sext i32 %446 to i64
  %472 = getelementptr inbounds %struct.variable_def, ptr %449, i64 0, i32 5, i64 %471, i32 1
  %473 = load ptr, ptr %472, align 8, !tbaa !229
  %474 = icmp eq ptr %473, null
  br i1 %474, label %475, label %476

475:                                              ; preds = %470
  call fastcc void @variable_was_changed(ptr noundef nonnull %449, ptr noundef %0)
  br label %476

476:                                              ; preds = %79, %118, %164, %294, %292, %470, %475
  %477 = phi ptr [ %447, %475 ], [ %447, %470 ], [ %2, %292 ], [ %2, %294 ], [ %2, %164 ], [ %2, %118 ], [ %2, %79 ]
  ret ptr %477
}

declare ptr @htab_find_slot_with_hash(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare i64 @htab_elements(ptr noundef) local_unnamed_addr #3

declare void @htab_traverse_noresize(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @vars_copy_1(ptr nocapture noundef readonly %0, ptr noundef %1) #9 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !183
  %6 = add nsw i32 %5, 1
  store i32 %6, ptr %4, align 8, !tbaa !183
  %7 = load ptr, ptr %3, align 8, !tbaa !181
  %8 = icmp eq ptr %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = load i64, ptr %7, align 8
  %11 = and i64 %10, 65535
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.rtx_def, ptr %7, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !16
  %16 = getelementptr inbounds %struct.cselib_val_struct, ptr %15, i64 0, i32 1
  br label %19

17:                                               ; preds = %9, %2
  %18 = getelementptr inbounds %struct.tree_decl_minimal, ptr %7, i64 0, i32 2
  br label %19

19:                                               ; preds = %13, %17
  %20 = phi ptr [ %16, %13 ], [ %18, %17 ]
  %21 = load i32, ptr %20, align 4, !tbaa !16
  %22 = tail call ptr @htab_find_slot_with_hash(ptr noundef %1, ptr noundef %7, i32 noundef %21, i32 noundef 1) #21
  store ptr %3, ptr %22, align 8, !tbaa !5
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @loc_cmp(ptr noundef readonly %0, ptr noundef readonly %1) unnamed_addr #9 {
  %3 = icmp eq ptr %0, %1
  br i1 %3, label %179, label %4

4:                                                ; preds = %2, %38
  %5 = phi ptr [ %42, %38 ], [ %1, %2 ]
  %6 = phi ptr [ %40, %38 ], [ %0, %2 ]
  %7 = load i32, ptr %6, align 8
  %8 = and i32 %7, 65535
  %9 = icmp eq i32 %8, 37
  %10 = load i32, ptr %5, align 8
  %11 = and i32 %10, 65535
  %12 = icmp eq i32 %11, 37
  br i1 %9, label %13, label %28

13:                                               ; preds = %4
  br i1 %12, label %14, label %179

14:                                               ; preds = %13
  %15 = xor i32 %10, %7
  %16 = and i32 %15, 16711680
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 2673, ptr noundef nonnull @.str.2) #21
  br label %19

19:                                               ; preds = %14, %18
  %20 = getelementptr i8, ptr %6, i64 8
  %21 = load i32, ptr %20, align 8, !tbaa !16
  %22 = getelementptr i8, ptr %5, i64 8
  %23 = load i32, ptr %22, align 8, !tbaa !16
  %24 = icmp eq i32 %21, %23
  br i1 %24, label %179, label %25

25:                                               ; preds = %19
  %26 = icmp ult i32 %21, %23
  %27 = select i1 %26, i32 -1, i32 1
  br label %179

28:                                               ; preds = %4
  br i1 %12, label %179, label %29

29:                                               ; preds = %28
  %30 = icmp eq i32 %8, 43
  %31 = icmp eq i32 %11, 43
  br i1 %30, label %32, label %44

32:                                               ; preds = %29
  br i1 %31, label %33, label %179

33:                                               ; preds = %32
  %34 = xor i32 %10, %7
  %35 = and i32 %34, 16711680
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 2689, ptr noundef nonnull @.str.2) #21
  br label %38

38:                                               ; preds = %33, %37
  %39 = getelementptr inbounds %struct.rtx_def, ptr %6, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !16
  %41 = getelementptr inbounds %struct.rtx_def, ptr %5, i64 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !16
  %43 = icmp eq ptr %40, %42
  br i1 %43, label %179, label %4

44:                                               ; preds = %29
  br i1 %31, label %179, label %45

45:                                               ; preds = %44
  %46 = icmp eq i32 %8, 1
  %47 = icmp eq i32 %11, 1
  br i1 %46, label %48, label %60

48:                                               ; preds = %45
  br i1 %47, label %49, label %179

49:                                               ; preds = %48
  %50 = getelementptr inbounds %struct.rtx_def, ptr %6, i64 0, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !16
  %52 = getelementptr inbounds %struct.cselib_val_struct, ptr %51, i64 0, i32 1
  %53 = load i32, ptr %52, align 4, !tbaa !169
  %54 = getelementptr inbounds %struct.rtx_def, ptr %5, i64 0, i32 1
  %55 = load ptr, ptr %54, align 8, !tbaa !16
  %56 = getelementptr inbounds %struct.cselib_val_struct, ptr %55, i64 0, i32 1
  %57 = load i32, ptr %56, align 4, !tbaa !169
  %58 = icmp slt i32 %53, %57
  %59 = select i1 %58, i32 -1, i32 1
  br label %179

60:                                               ; preds = %45
  br i1 %47, label %179, label %61

61:                                               ; preds = %60
  %62 = icmp eq i32 %8, %11
  br i1 %62, label %66, label %63

63:                                               ; preds = %61
  %64 = icmp ult i32 %8, %11
  %65 = select i1 %64, i32 -1, i32 1
  br label %179

66:                                               ; preds = %61
  %67 = xor i32 %10, %7
  %68 = and i32 %67, 16711680
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 2720, ptr noundef nonnull @.str.2) #21
  %71 = load i32, ptr %6, align 8
  br label %72

72:                                               ; preds = %66, %70
  %73 = phi i32 [ %7, %66 ], [ %71, %70 ]
  %74 = and i32 %73, 65535
  %75 = icmp eq i32 %74, 2
  br i1 %75, label %76, label %89

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.rtx_def, ptr %6, i64 0, i32 1
  %78 = load ptr, ptr %77, align 8, !tbaa !16
  %79 = getelementptr inbounds %struct.tree_decl_minimal, ptr %78, i64 0, i32 2
  %80 = load i32, ptr %79, align 4, !tbaa !16
  %81 = sub i32 0, %80
  %82 = getelementptr inbounds %struct.rtx_def, ptr %5, i64 0, i32 1
  %83 = load ptr, ptr %82, align 8, !tbaa !16
  %84 = getelementptr inbounds %struct.tree_decl_minimal, ptr %83, i64 0, i32 2
  %85 = load i32, ptr %84, align 4, !tbaa !16
  %86 = sub i32 0, %85
  %87 = icmp ult i32 %81, %86
  %88 = select i1 %87, i32 -1, i32 1
  br label %179

89:                                               ; preds = %72
  %90 = zext i32 %8 to i64
  %91 = getelementptr inbounds [139 x ptr], ptr @rtx_format, i64 0, i64 %90
  %92 = load ptr, ptr %91, align 8, !tbaa !5
  %93 = getelementptr inbounds [139 x i8], ptr @rtx_length, i64 0, i64 %90
  %94 = load i8, ptr %93, align 1, !tbaa !16
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %179, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %struct.rtx_def, ptr %6, i64 0, i32 1
  %98 = getelementptr inbounds %struct.rtx_def, ptr %5, i64 0, i32 1
  %99 = zext i8 %94 to i64
  br label %100

100:                                              ; preds = %96, %176
  %101 = phi i64 [ 0, %96 ], [ %177, %176 ]
  %102 = getelementptr inbounds i8, ptr %92, i64 %101
  %103 = load i8, ptr %102, align 1, !tbaa !16
  %104 = sext i8 %103 to i32
  switch i32 %104, label %175 [
    i32 119, label %105
    i32 110, label %114
    i32 105, label %114
    i32 86, label %123
    i32 69, label %123
    i32 101, label %152
    i32 83, label %159
    i32 115, label %159
    i32 117, label %176
    i32 48, label %176
    i32 116, label %176
  ]

105:                                              ; preds = %100
  %106 = getelementptr inbounds [1 x i64], ptr %97, i64 0, i64 %101
  %107 = load i64, ptr %106, align 8, !tbaa !16
  %108 = getelementptr inbounds [1 x i64], ptr %98, i64 0, i64 %101
  %109 = load i64, ptr %108, align 8, !tbaa !16
  %110 = icmp eq i64 %107, %109
  br i1 %110, label %176, label %111

111:                                              ; preds = %105
  %112 = icmp slt i64 %107, %109
  %113 = select i1 %112, i32 -1, i32 1
  br label %179

114:                                              ; preds = %100, %100
  %115 = getelementptr inbounds [1 x %union.rtunion_def], ptr %97, i64 0, i64 %101
  %116 = load i32, ptr %115, align 8, !tbaa !16
  %117 = getelementptr inbounds [1 x %union.rtunion_def], ptr %98, i64 0, i64 %101
  %118 = load i32, ptr %117, align 8, !tbaa !16
  %119 = icmp eq i32 %116, %118
  br i1 %119, label %176, label %120

120:                                              ; preds = %114
  %121 = icmp slt i32 %116, %118
  %122 = select i1 %121, i32 -1, i32 1
  br label %179

123:                                              ; preds = %100, %100
  %124 = getelementptr inbounds [1 x %union.rtunion_def], ptr %97, i64 0, i64 %101
  %125 = load ptr, ptr %124, align 8, !tbaa !16
  %126 = load i32, ptr %125, align 8, !tbaa !101
  %127 = getelementptr inbounds [1 x %union.rtunion_def], ptr %98, i64 0, i64 %101
  %128 = load ptr, ptr %127, align 8, !tbaa !16
  %129 = load i32, ptr %128, align 8, !tbaa !101
  %130 = icmp eq i32 %126, %129
  br i1 %130, label %131, label %133

131:                                              ; preds = %123
  %132 = icmp sgt i32 %126, 0
  br i1 %132, label %142, label %176

133:                                              ; preds = %123
  %134 = icmp slt i32 %126, %129
  %135 = select i1 %134, i32 -1, i32 1
  br label %179

136:                                              ; preds = %142
  %137 = add nuw nsw i64 %143, 1
  %138 = load ptr, ptr %124, align 8, !tbaa !16
  %139 = load i32, ptr %138, align 8, !tbaa !101
  %140 = sext i32 %139 to i64
  %141 = icmp slt i64 %137, %140
  br i1 %141, label %142, label %176, !llvm.loop !230

142:                                              ; preds = %131, %136
  %143 = phi i64 [ %137, %136 ], [ 0, %131 ]
  %144 = phi ptr [ %138, %136 ], [ %125, %131 ]
  %145 = getelementptr inbounds %struct.rtvec_def, ptr %144, i64 0, i32 1, i64 %143
  %146 = load ptr, ptr %145, align 8, !tbaa !5
  %147 = load ptr, ptr %127, align 8, !tbaa !16
  %148 = getelementptr inbounds %struct.rtvec_def, ptr %147, i64 0, i32 1, i64 %143
  %149 = load ptr, ptr %148, align 8, !tbaa !5
  %150 = tail call fastcc i32 @loc_cmp(ptr noundef %146, ptr noundef %149), !range !217
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %136, label %179

152:                                              ; preds = %100
  %153 = getelementptr inbounds [1 x %union.rtunion_def], ptr %97, i64 0, i64 %101
  %154 = load ptr, ptr %153, align 8, !tbaa !16
  %155 = getelementptr inbounds [1 x %union.rtunion_def], ptr %98, i64 0, i64 %101
  %156 = load ptr, ptr %155, align 8, !tbaa !16
  %157 = tail call fastcc i32 @loc_cmp(ptr noundef %154, ptr noundef %156), !range !217
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %176, label %179

159:                                              ; preds = %100, %100
  %160 = getelementptr inbounds [1 x %union.rtunion_def], ptr %97, i64 0, i64 %101
  %161 = load ptr, ptr %160, align 8, !tbaa !16
  %162 = getelementptr inbounds [1 x %union.rtunion_def], ptr %98, i64 0, i64 %101
  %163 = load ptr, ptr %162, align 8, !tbaa !16
  %164 = icmp eq ptr %161, %163
  br i1 %164, label %176, label %165

165:                                              ; preds = %159
  %166 = icmp eq ptr %161, null
  br i1 %166, label %179, label %167

167:                                              ; preds = %165
  %168 = icmp eq ptr %163, null
  br i1 %168, label %179, label %169

169:                                              ; preds = %167
  %170 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %161, ptr noundef nonnull dereferenceable(1) %163)
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %176, label %172

172:                                              ; preds = %169
  %173 = icmp sgt i32 %170, -1
  %174 = select i1 %173, i32 1, i32 -1
  br label %179

175:                                              ; preds = %100
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 2803, ptr noundef nonnull @.str.2) #21
  br label %176

176:                                              ; preds = %136, %131, %100, %175, %105, %114, %152, %159, %169, %100, %100
  %177 = add nuw nsw i64 %101, 1
  %178 = icmp eq i64 %177, %99
  br i1 %178, label %179, label %100, !llvm.loop !231

179:                                              ; preds = %38, %28, %32, %152, %165, %167, %176, %142, %2, %89, %172, %133, %120, %111, %76, %63, %60, %49, %48, %44, %25, %19, %13
  %180 = phi i32 [ -1, %13 ], [ 0, %19 ], [ %27, %25 ], [ 1, %44 ], [ -1, %48 ], [ %59, %49 ], [ 1, %60 ], [ %65, %63 ], [ %88, %76 ], [ %113, %111 ], [ %122, %120 ], [ %135, %133 ], [ %174, %172 ], [ 0, %89 ], [ 0, %2 ], [ %150, %142 ], [ %157, %152 ], [ -1, %165 ], [ 1, %167 ], [ 0, %176 ], [ 0, %38 ], [ 1, %28 ], [ -1, %32 ]
  ret i32 %180
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @unshare_variable(ptr nocapture noundef %0, ptr noundef writeonly %1, ptr noundef %2, i32 noundef %3) unnamed_addr #9 {
  %5 = load ptr, ptr %2, align 8, !tbaa !181
  %6 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %4
  %9 = icmp eq ptr %5, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %8
  %11 = load i64, ptr %5, align 8
  %12 = trunc i64 %11 to i16
  switch i16 %12, label %13 [
    i16 1, label %18
    i16 37, label %18
  ]

13:                                               ; preds = %10
  %14 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %5) #21
  %15 = freeze ptr %14
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %13, %4
  br label %18

18:                                               ; preds = %8, %10, %10, %13, %17
  %19 = phi ptr [ @var_pool, %17 ], [ @valvar_pool, %13 ], [ @valvar_pool, %10 ], [ @valvar_pool, %10 ], [ @valvar_pool, %8 ]
  %20 = load ptr, ptr %19, align 8
  %21 = tail call ptr @pool_alloc(ptr noundef %20) #21
  %22 = load ptr, ptr %2, align 8, !tbaa !181
  store ptr %22, ptr %21, align 8, !tbaa !181
  %23 = getelementptr inbounds %struct.variable_def, ptr %21, i64 0, i32 1
  store i32 1, ptr %23, align 8, !tbaa !183
  %24 = getelementptr inbounds %struct.variable_def, ptr %2, i64 0, i32 1
  %25 = load i32, ptr %24, align 8, !tbaa !183
  %26 = add nsw i32 %25, -1
  store i32 %26, ptr %24, align 8, !tbaa !183
  %27 = getelementptr inbounds %struct.variable_def, ptr %2, i64 0, i32 2
  %28 = load i8, ptr %27, align 4, !tbaa !184
  %29 = getelementptr inbounds %struct.variable_def, ptr %21, i64 0, i32 2
  store i8 %28, ptr %29, align 4, !tbaa !184
  %30 = getelementptr inbounds %struct.variable_def, ptr %2, i64 0, i32 3
  %31 = load i8, ptr %30, align 1, !tbaa !211
  %32 = getelementptr inbounds %struct.variable_def, ptr %21, i64 0, i32 3
  store i8 %31, ptr %32, align 1, !tbaa !211
  store i8 0, ptr %30, align 1, !tbaa !211
  %33 = getelementptr inbounds %struct.variable_def, ptr %21, i64 0, i32 4
  store i8 0, ptr %33, align 2, !tbaa !212
  %34 = load i32, ptr @flag_var_tracking_uninit, align 4, !tbaa !20
  %35 = icmp eq i32 %34, 0
  %36 = select i1 %35, i32 2, i32 %3
  %37 = load i8, ptr %27, align 4, !tbaa !184
  %38 = icmp sgt i8 %37, 0
  br i1 %38, label %39, label %85

39:                                               ; preds = %18, %77
  %40 = phi i8 [ %78, %77 ], [ %37, %18 ]
  %41 = phi i64 [ %82, %77 ], [ 0, %18 ]
  %42 = getelementptr inbounds %struct.variable_def, ptr %2, i64 0, i32 5, i64 %41
  %43 = getelementptr inbounds %struct.variable_def, ptr %2, i64 0, i32 5, i64 %41, i32 2
  %44 = load i64, ptr %43, align 8, !tbaa !213
  %45 = getelementptr inbounds %struct.variable_def, ptr %21, i64 0, i32 5, i64 %41, i32 2
  store i64 %44, ptr %45, align 8, !tbaa !213
  %46 = load ptr, ptr %42, align 8, !tbaa !5
  %47 = icmp eq ptr %46, null
  br i1 %47, label %77, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %struct.variable_def, ptr %21, i64 0, i32 5, i64 %41
  br label %50

50:                                               ; preds = %48, %67
  %51 = phi ptr [ %73, %67 ], [ %46, %48 ]
  %52 = phi ptr [ %54, %67 ], [ %49, %48 ]
  %53 = load ptr, ptr @loc_chain_pool, align 8, !tbaa !5
  %54 = tail call ptr @pool_alloc(ptr noundef %53) #21
  store ptr null, ptr %54, align 8, !tbaa !187
  %55 = getelementptr inbounds %struct.location_chain_def, ptr %51, i64 0, i32 3
  %56 = load i32, ptr %55, align 8, !tbaa !224
  %57 = tail call i32 @llvm.umax.i32(i32 %56, i32 %36)
  %58 = getelementptr inbounds %struct.location_chain_def, ptr %54, i64 0, i32 3
  store i32 %57, ptr %58, align 8
  %59 = getelementptr inbounds %struct.location_chain_def, ptr %51, i64 0, i32 2
  %60 = load ptr, ptr %59, align 8, !tbaa !225
  %61 = icmp eq ptr %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %50
  %63 = load i32, ptr %60, align 8
  %64 = and i32 %63, 65535
  %65 = icmp eq i32 %64, 43
  br i1 %65, label %66, label %67

66:                                               ; preds = %62, %50
  br label %67

67:                                               ; preds = %62, %66
  %68 = phi ptr [ null, %66 ], [ %60, %62 ]
  %69 = getelementptr inbounds %struct.location_chain_def, ptr %54, i64 0, i32 2
  store ptr %68, ptr %69, align 8, !tbaa !225
  %70 = getelementptr inbounds %struct.location_chain_def, ptr %51, i64 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !214
  %72 = getelementptr inbounds %struct.location_chain_def, ptr %54, i64 0, i32 1
  store ptr %71, ptr %72, align 8, !tbaa !214
  store ptr %54, ptr %52, align 8, !tbaa !5
  %73 = load ptr, ptr %51, align 8, !tbaa !5
  %74 = icmp eq ptr %73, null
  br i1 %74, label %75, label %50, !llvm.loop !232

75:                                               ; preds = %67
  %76 = load i8, ptr %27, align 4, !tbaa !184
  br label %77

77:                                               ; preds = %75, %39
  %78 = phi i8 [ %76, %75 ], [ %40, %39 ]
  %79 = getelementptr inbounds %struct.variable_def, ptr %2, i64 0, i32 5, i64 %41, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !229
  %81 = getelementptr inbounds %struct.variable_def, ptr %21, i64 0, i32 5, i64 %41, i32 1
  store ptr %80, ptr %81, align 8, !tbaa !229
  %82 = add nuw nsw i64 %41, 1
  %83 = sext i8 %78 to i64
  %84 = icmp slt i64 %82, %83
  br i1 %84, label %39, label %85, !llvm.loop !233

85:                                               ; preds = %77, %18
  store i1 false, ptr @dst_can_be_shared, align 1
  %86 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %87 = load ptr, ptr %86, align 8, !tbaa !51
  %88 = load i32, ptr %87, align 8, !tbaa !49
  %89 = icmp slt i32 %88, 2
  br i1 %89, label %93, label %90

90:                                               ; preds = %85
  %91 = load ptr, ptr %2, align 8, !tbaa !181
  %92 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %86, ptr noundef %91, i32 noundef 0)
  br label %118

93:                                               ; preds = %85
  %94 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 3
  %95 = load ptr, ptr %94, align 8, !tbaa !54
  %96 = icmp eq ptr %95, null
  %97 = icmp eq ptr %87, %95
  %98 = or i1 %96, %97
  br i1 %98, label %118, label %99

99:                                               ; preds = %93
  %100 = load ptr, ptr %2, align 8, !tbaa !181
  %101 = icmp eq ptr %100, null
  br i1 %101, label %110, label %102

102:                                              ; preds = %99
  %103 = load i64, ptr %100, align 8
  %104 = and i64 %103, 65535
  %105 = icmp eq i64 %104, 1
  br i1 %105, label %106, label %110

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.rtx_def, ptr %100, i64 0, i32 1
  %108 = load ptr, ptr %107, align 8, !tbaa !16
  %109 = getelementptr inbounds %struct.cselib_val_struct, ptr %108, i64 0, i32 1
  br label %112

110:                                              ; preds = %102, %99
  %111 = getelementptr inbounds %struct.tree_decl_minimal, ptr %100, i64 0, i32 2
  br label %112

112:                                              ; preds = %106, %110
  %113 = phi ptr [ %109, %106 ], [ %111, %110 ]
  %114 = load i32, ptr %113, align 4, !tbaa !16
  %115 = getelementptr i8, ptr %87, i64 8
  %116 = load ptr, ptr %115, align 8, !tbaa !55
  %117 = tail call ptr @htab_find_slot_with_hash(ptr noundef %116, ptr noundef %100, i32 noundef %114, i32 noundef 0) #21
  br label %118

118:                                              ; preds = %93, %112, %90
  %119 = phi ptr [ %92, %90 ], [ %117, %112 ], [ %1, %93 ]
  store ptr %21, ptr %119, align 8, !tbaa !5
  %120 = getelementptr inbounds %struct.variable_def, ptr %2, i64 0, i32 4
  %121 = load i8, ptr %120, align 2, !tbaa !212
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %145, label %123

123:                                              ; preds = %118
  %124 = load ptr, ptr @changed_variables, align 8, !tbaa !5
  %125 = load ptr, ptr %2, align 8, !tbaa !181
  %126 = icmp eq ptr %125, null
  br i1 %126, label %135, label %127

127:                                              ; preds = %123
  %128 = load i64, ptr %125, align 8
  %129 = and i64 %128, 65535
  %130 = icmp eq i64 %129, 1
  br i1 %130, label %131, label %135

131:                                              ; preds = %127
  %132 = getelementptr inbounds %struct.rtx_def, ptr %125, i64 0, i32 1
  %133 = load ptr, ptr %132, align 8, !tbaa !16
  %134 = getelementptr inbounds %struct.cselib_val_struct, ptr %133, i64 0, i32 1
  br label %137

135:                                              ; preds = %127, %123
  %136 = getelementptr inbounds %struct.tree_decl_minimal, ptr %125, i64 0, i32 2
  br label %137

137:                                              ; preds = %131, %135
  %138 = phi ptr [ %134, %131 ], [ %136, %135 ]
  %139 = load i32, ptr %138, align 4, !tbaa !16
  %140 = tail call ptr @htab_find_slot_with_hash(ptr noundef %124, ptr noundef %125, i32 noundef %139, i32 noundef 0) #21
  %141 = load ptr, ptr %140, align 8, !tbaa !5
  %142 = icmp eq ptr %141, %2
  br i1 %142, label %144, label %143

143:                                              ; preds = %137
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1534, ptr noundef nonnull @.str.2) #21
  br label %144

144:                                              ; preds = %137, %143
  store i8 0, ptr %120, align 2, !tbaa !212
  tail call void @variable_htab_free(ptr noundef nonnull %2)
  store ptr %21, ptr %140, align 8, !tbaa !5
  store i8 1, ptr %33, align 2, !tbaa !212
  br label %145

145:                                              ; preds = %144, %118
  ret ptr %119
}

declare i32 @rtx_equal_p(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @variable_was_changed(ptr noundef %0, ptr noundef %1) unnamed_addr #9 {
  %3 = load ptr, ptr %0, align 8, !tbaa !181
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = load i64, ptr %3, align 8
  %7 = and i64 %6, 65535
  %8 = icmp eq i64 %7, 1
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.rtx_def, ptr %3, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !16
  %12 = getelementptr inbounds %struct.cselib_val_struct, ptr %11, i64 0, i32 1
  br label %15

13:                                               ; preds = %5, %2
  %14 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 2
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi ptr [ %12, %9 ], [ %14, %13 ]
  %17 = load i32, ptr %16, align 4, !tbaa !16
  %18 = load i1, ptr @emit_notes, align 1
  br i1 %18, label %19, label %83

19:                                               ; preds = %15
  %20 = load i64, ptr %3, align 8
  %21 = and i64 %20, 65535
  %22 = icmp eq i64 %21, 1
  br i1 %22, label %23, label %26

23:                                               ; preds = %19
  %24 = trunc i64 %20 to i32
  %25 = or i32 %24, 1073741824
  store i32 %25, ptr %3, align 8
  br label %28

26:                                               ; preds = %19
  %27 = or i64 %20, 1099511627776
  store i64 %27, ptr %3, align 8
  br label %28

28:                                               ; preds = %23, %26
  %29 = load ptr, ptr @changed_variables, align 8, !tbaa !5
  %30 = load ptr, ptr %0, align 8, !tbaa !181
  %31 = tail call ptr @htab_find_slot_with_hash(ptr noundef %29, ptr noundef %30, i32 noundef %17, i32 noundef 1) #21
  %32 = load ptr, ptr %31, align 8, !tbaa !5
  %33 = icmp eq ptr %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.variable_def, ptr %32, i64 0, i32 4
  %36 = load i8, ptr %35, align 2, !tbaa !212
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 6281, ptr noundef nonnull @.str.2) #21
  %39 = load ptr, ptr %31, align 8, !tbaa !5
  br label %40

40:                                               ; preds = %34, %38
  %41 = phi ptr [ %32, %34 ], [ %39, %38 ]
  store i8 0, ptr %35, align 2, !tbaa !212
  %42 = getelementptr inbounds %struct.variable_def, ptr %32, i64 0, i32 3
  %43 = load i8, ptr %42, align 1, !tbaa !211
  tail call void @variable_htab_free(ptr noundef %41)
  br label %44

44:                                               ; preds = %40, %28
  %45 = phi i8 [ %43, %40 ], [ 0, %28 ]
  %46 = icmp eq ptr %1, null
  br i1 %46, label %65, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 2
  %49 = load i8, ptr %48, align 4, !tbaa !184
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %65

51:                                               ; preds = %47
  %52 = load ptr, ptr %0, align 8, !tbaa !181
  %53 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = icmp eq ptr %52, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %55
  %58 = load i64, ptr %52, align 8
  %59 = trunc i64 %58 to i16
  switch i16 %59, label %60 [
    i16 1, label %74
    i16 37, label %74
  ]

60:                                               ; preds = %57
  %61 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %52) #21
  %62 = freeze ptr %61
  %63 = icmp eq ptr %62, null
  br i1 %63, label %64, label %74

64:                                               ; preds = %60, %51
  br label %74

65:                                               ; preds = %47, %44
  %66 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 1
  %67 = load i32, ptr %66, align 8, !tbaa !183
  %68 = add nsw i32 %67, 1
  store i32 %68, ptr %66, align 8, !tbaa !183
  %69 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 4
  store i8 1, ptr %69, align 2, !tbaa !212
  %70 = icmp eq i8 %45, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 3
  store i8 1, ptr %72, align 1, !tbaa !211
  br label %73

73:                                               ; preds = %71, %65
  store ptr %0, ptr %31, align 8, !tbaa !5
  br label %125

74:                                               ; preds = %64, %60, %57, %57, %55
  %75 = phi ptr [ @var_pool, %64 ], [ @valvar_pool, %60 ], [ @valvar_pool, %57 ], [ @valvar_pool, %57 ], [ @valvar_pool, %55 ]
  %76 = load ptr, ptr %75, align 8
  %77 = tail call ptr @pool_alloc(ptr noundef %76) #21
  %78 = load ptr, ptr %0, align 8, !tbaa !181
  store ptr %78, ptr %77, align 8, !tbaa !181
  %79 = getelementptr inbounds %struct.variable_def, ptr %77, i64 0, i32 1
  store i32 1, ptr %79, align 8, !tbaa !183
  %80 = getelementptr inbounds %struct.variable_def, ptr %77, i64 0, i32 2
  store i8 0, ptr %80, align 4, !tbaa !184
  %81 = getelementptr inbounds %struct.variable_def, ptr %77, i64 0, i32 3
  store i8 1, ptr %81, align 1, !tbaa !211
  %82 = getelementptr inbounds %struct.variable_def, ptr %77, i64 0, i32 4
  store i8 1, ptr %82, align 2, !tbaa !212
  store ptr %77, ptr %31, align 8, !tbaa !5
  br label %90

83:                                               ; preds = %15
  %84 = icmp eq ptr %1, null
  br i1 %84, label %85, label %86

85:                                               ; preds = %83
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 6312, ptr noundef nonnull @.str.2) #21
  br label %86

86:                                               ; preds = %83, %85
  %87 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 2
  %88 = load i8, ptr %87, align 4, !tbaa !184
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %125

90:                                               ; preds = %74, %86
  %91 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 2
  %92 = load ptr, ptr %91, align 8, !tbaa !51
  %93 = load ptr, ptr %0, align 8, !tbaa !181
  %94 = icmp eq ptr %93, null
  br i1 %94, label %103, label %95

95:                                               ; preds = %90
  %96 = load i64, ptr %93, align 8
  %97 = and i64 %96, 65535
  %98 = icmp eq i64 %97, 1
  br i1 %98, label %99, label %103

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.rtx_def, ptr %93, i64 0, i32 1
  %101 = load ptr, ptr %100, align 8, !tbaa !16
  %102 = getelementptr inbounds %struct.cselib_val_struct, ptr %101, i64 0, i32 1
  br label %105

103:                                              ; preds = %95, %90
  %104 = getelementptr inbounds %struct.tree_decl_minimal, ptr %93, i64 0, i32 2
  br label %105

105:                                              ; preds = %99, %103
  %106 = phi ptr [ %102, %99 ], [ %104, %103 ]
  %107 = load i32, ptr %106, align 4, !tbaa !16
  %108 = getelementptr i8, ptr %92, i64 8
  %109 = load ptr, ptr %108, align 8, !tbaa !55
  %110 = tail call ptr @htab_find_slot_with_hash(ptr noundef %109, ptr noundef %93, i32 noundef %107, i32 noundef 0) #21
  %111 = icmp eq ptr %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %105
  %113 = load ptr, ptr %91, align 8, !tbaa !51
  %114 = load i32, ptr %113, align 8, !tbaa !49
  %115 = icmp slt i32 %114, 2
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = load ptr, ptr %0, align 8, !tbaa !181
  %118 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %91, ptr noundef %117, i32 noundef 0)
  %119 = load ptr, ptr %91, align 8, !tbaa !51
  br label %120

120:                                              ; preds = %116, %112
  %121 = phi ptr [ %119, %116 ], [ %113, %112 ]
  %122 = phi ptr [ %118, %116 ], [ %110, %112 ]
  %123 = getelementptr i8, ptr %121, i64 8
  %124 = load ptr, ptr %123, align 8, !tbaa !55
  tail call void @htab_clear_slot(ptr noundef %124, ptr noundef %122) #21
  br label %125

125:                                              ; preds = %73, %86, %120, %105
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #15

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @add_value_chain(ptr nocapture noundef readonly %0, ptr noundef %1) #9 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = load i32, ptr %3, align 8
  %5 = trunc i32 %4 to i16
  switch i16 %5, label %55 [
    i16 1, label %9
    i16 2, label %6
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.rtx_def, ptr %3, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !16
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi ptr [ %8, %6 ], [ %3, %2 ]
  %11 = icmp eq ptr %10, %1
  br i1 %11, label %55, label %12

12:                                               ; preds = %9
  %13 = load ptr, ptr @value_chains, align 8, !tbaa !5
  %14 = icmp eq ptr %10, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %12
  %16 = load i64, ptr %10, align 8
  %17 = and i64 %16, 65535
  %18 = icmp eq i64 %17, 1
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !16
  %22 = getelementptr inbounds %struct.cselib_val_struct, ptr %21, i64 0, i32 1
  br label %25

23:                                               ; preds = %15, %12
  %24 = getelementptr inbounds %struct.tree_decl_minimal, ptr %10, i64 0, i32 2
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi ptr [ %22, %19 ], [ %24, %23 ]
  %27 = load i32, ptr %26, align 4, !tbaa !16
  %28 = tail call ptr @htab_find_slot_with_hash(ptr noundef %13, ptr noundef %10, i32 noundef %27, i32 noundef 1) #21
  %29 = load ptr, ptr %28, align 8, !tbaa !5
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = load ptr, ptr @value_chain_pool, align 8, !tbaa !5
  %33 = tail call ptr @pool_alloc(ptr noundef %32) #21
  %34 = getelementptr inbounds %struct.value_chain_def, ptr %33, i64 0, i32 1
  store ptr %10, ptr %34, align 8, !tbaa !191
  store ptr null, ptr %33, align 8, !tbaa !234
  %35 = getelementptr inbounds %struct.value_chain_def, ptr %33, i64 0, i32 2
  store i32 0, ptr %35, align 8, !tbaa !235
  store ptr %33, ptr %28, align 8, !tbaa !5
  br label %48

36:                                               ; preds = %25, %40
  %37 = phi ptr [ %38, %40 ], [ %29, %25 ]
  %38 = load ptr, ptr %37, align 8, !tbaa !234
  %39 = icmp eq ptr %38, null
  br i1 %39, label %48, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.value_chain_def, ptr %38, i64 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !191
  %43 = icmp eq ptr %42, %1
  br i1 %43, label %44, label %36, !llvm.loop !236

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.value_chain_def, ptr %38, i64 0, i32 2
  %46 = load i32, ptr %45, align 8, !tbaa !235
  %47 = add nsw i32 %46, 1
  store i32 %47, ptr %45, align 8, !tbaa !235
  br label %55

48:                                               ; preds = %36, %31
  %49 = phi ptr [ %33, %31 ], [ %29, %36 ]
  %50 = load ptr, ptr @value_chain_pool, align 8, !tbaa !5
  %51 = tail call ptr @pool_alloc(ptr noundef %50) #21
  %52 = getelementptr inbounds %struct.value_chain_def, ptr %51, i64 0, i32 1
  store ptr %1, ptr %52, align 8, !tbaa !191
  %53 = load ptr, ptr %49, align 8, !tbaa !234
  store ptr %53, ptr %51, align 8, !tbaa !234
  %54 = getelementptr inbounds %struct.value_chain_def, ptr %51, i64 0, i32 2
  store i32 1, ptr %54, align 8, !tbaa !235
  store ptr %51, ptr %49, align 8, !tbaa !234
  br label %55

55:                                               ; preds = %9, %2, %48, %44
  ret i32 0
}

declare i32 @for_each_rtx(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @htab_clear_slot(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @note_uses(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @add_uses_1(ptr noundef %0, ptr noundef %1) #9 {
  %3 = tail call i32 @for_each_rtx(ptr noundef %0, ptr noundef nonnull @add_uses, ptr noundef %1) #21
  ret void
}

declare void @note_stores(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @add_stores(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #9 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.micro_operation_def, align 8
  %7 = alloca %struct.micro_operation_def, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #21
  store i32 0, ptr %4, align 4, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #21
  %8 = getelementptr inbounds %struct.count_use_info, ptr %2, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !195
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #21
  %10 = call fastcc i32 @use_type(ptr noundef %0, ptr noundef %2, ptr noundef nonnull %4), !range !237
  %11 = icmp eq i32 %10, 7
  br i1 %11, label %601, label %12

12:                                               ; preds = %3
  %13 = load i32, ptr %4, align 4, !tbaa !16
  store i32 %13, ptr %5, align 4, !tbaa !16
  %14 = load i32, ptr %0, align 8
  %15 = trunc i32 %14 to i16
  switch i16 %15, label %601 [
    i16 37, label %16
    i16 43, label %66
  ]

16:                                               ; preds = %12
  %17 = load ptr, ptr @cfa_base_rtx, align 8, !tbaa !5
  %18 = icmp eq ptr %17, %0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 5227, ptr noundef nonnull @.str.2) #21
  br label %20

20:                                               ; preds = %16, %19
  %21 = load i32, ptr %1, align 8
  %22 = and i32 %21, 65535
  %23 = icmp eq i32 %22, 25
  %24 = icmp ne i32 %10, 4
  %25 = and i1 %24, %23
  br i1 %25, label %32, label %26

26:                                               ; preds = %20
  %27 = call fastcc i32 @use_type(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull %5), !range !237
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %26
  %30 = load i32, ptr %1, align 8
  %31 = trunc i32 %30 to i16
  switch i16 %31, label %38 [
    i16 25, label %32
    i16 23, label %34
  ]

32:                                               ; preds = %29, %20, %26
  %33 = phi i8 [ 0, %20 ], [ 1, %29 ], [ 0, %26 ]
  store i32 7, ptr %6, align 8, !tbaa !69
  br label %195

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !16
  %37 = icmp eq ptr %36, %0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34, %29
  %39 = load i32, ptr %5, align 4, !tbaa !16
  %40 = call fastcc ptr @var_lowpart(i32 noundef %39, ptr noundef nonnull %0)
  br label %49

41:                                               ; preds = %34
  %42 = load i32, ptr %5, align 4, !tbaa !16
  %43 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 1
  %44 = load ptr, ptr %43, align 8, !tbaa !16
  %45 = call fastcc ptr @var_lowpart(i32 noundef %42, ptr noundef %44)
  %46 = load i32, ptr %5, align 4, !tbaa !16
  %47 = call fastcc ptr @var_lowpart(i32 noundef %46, ptr noundef nonnull %0)
  %48 = icmp eq ptr %45, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %38, %41
  %50 = phi ptr [ %40, %38 ], [ %47, %41 ]
  store i32 5, ptr %6, align 8, !tbaa !69
  br label %195

51:                                               ; preds = %41
  %52 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 23, i32 noundef 0, ptr noundef %47, ptr noundef nonnull %45) #21
  %53 = getelementptr inbounds %struct.rtx_def, ptr %47, i64 0, i32 1, i32 0, i32 0, i64 2
  %54 = load ptr, ptr %53, align 8, !tbaa !16
  %55 = icmp eq ptr %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %51
  %57 = load ptr, ptr %54, align 8, !tbaa !75
  %58 = getelementptr inbounds %struct.reg_attrs, ptr %54, i64 0, i32 1
  %59 = load i64, ptr %58, align 8, !tbaa !77
  br label %60

60:                                               ; preds = %51, %56
  %61 = phi ptr [ %57, %56 ], [ null, %51 ]
  %62 = phi i64 [ %59, %56 ], [ 0, %51 ]
  %63 = call fastcc zeroext i8 @same_variable_part_p(ptr noundef nonnull %45, ptr noundef %61, i64 noundef %62), !range !37
  %64 = icmp eq i8 %63, 0
  %65 = select i1 %64, i32 5, i32 6
  store i32 %65, ptr %6, align 8, !tbaa !69
  br label %195

66:                                               ; preds = %12
  %67 = call fastcc i32 @use_type(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull %5), !range !237
  %68 = icmp eq i32 %67, 0
  %69 = zext i1 %68 to i8
  br i1 %68, label %74, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.count_use_info, ptr %2, i64 0, i32 2
  %72 = load ptr, ptr %71, align 8, !tbaa !196
  %73 = icmp eq ptr %72, null
  br i1 %73, label %601, label %74

74:                                               ; preds = %70, %66
  %75 = load i32, ptr %0, align 8
  %76 = and i32 %75, 65535
  %77 = icmp eq i32 %76, 43
  %78 = icmp eq i32 %10, 4
  %79 = and i1 %78, %77
  br i1 %79, label %80, label %146

80:                                               ; preds = %74
  %81 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %82 = load ptr, ptr %81, align 8, !tbaa !16
  %83 = load i32, ptr %82, align 8
  %84 = trunc i32 %83 to i16
  switch i16 %84, label %96 [
    i16 37, label %146
    i16 43, label %146
    i16 49, label %85
  ]

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.rtx_def, ptr %82, i64 0, i32 1
  %87 = load ptr, ptr %86, align 8, !tbaa !16
  %88 = load ptr, ptr @cfa_base_rtx, align 8, !tbaa !5
  %89 = icmp eq ptr %87, %88
  br i1 %89, label %90, label %96

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.rtx_def, ptr %82, i64 0, i32 1, i32 0, i32 0, i64 1
  %92 = load ptr, ptr %91, align 8, !tbaa !16
  %93 = load i32, ptr %92, align 8
  %94 = and i32 %93, 65535
  %95 = icmp eq i32 %94, 30
  br i1 %95, label %146, label %96

96:                                               ; preds = %80, %90, %85
  %97 = lshr i32 %83, 16
  %98 = and i32 %97, 255
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %96
  %101 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57, i32 1), align 8, !tbaa !238
  %102 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %103 = load ptr, ptr %102, align 8, !tbaa !16
  %104 = icmp eq ptr %103, null
  br i1 %104, label %108, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %struct.mem_attrs, ptr %103, i64 0, i32 5
  %107 = load i8, ptr %106, align 8, !tbaa !250
  br label %108

108:                                              ; preds = %105, %100
  %109 = phi i8 [ %107, %105 ], [ 0, %100 ]
  %110 = call i32 %101(i8 noundef zeroext %109) #21
  %111 = load ptr, ptr %81, align 8, !tbaa !16
  br label %112

112:                                              ; preds = %96, %108
  %113 = phi ptr [ %111, %108 ], [ %82, %96 ]
  %114 = phi i32 [ %110, %108 ], [ %98, %96 ]
  %115 = call ptr @cselib_lookup(ptr noundef %113, i32 noundef %114, i32 noundef 0) #21
  %116 = icmp eq ptr %115, null
  br i1 %116, label %146, label %117

117:                                              ; preds = %112
  %118 = call zeroext i8 @cselib_preserved_value_p(ptr noundef nonnull %115) #21
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %146

120:                                              ; preds = %117
  call fastcc void @preserve_value(ptr noundef nonnull %115)
  store i32 2, ptr %6, align 8, !tbaa !69
  %121 = load ptr, ptr %81, align 8, !tbaa !16
  %122 = call ptr @cselib_subst_to_values(ptr noundef %121) #21
  %123 = getelementptr inbounds %struct.cselib_val_struct, ptr %115, i64 0, i32 2
  %124 = load ptr, ptr %123, align 8, !tbaa !128
  %125 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 41, i32 noundef %114, ptr noundef %124, ptr noundef %122) #21
  %126 = getelementptr inbounds %struct.micro_operation_def, ptr %6, i64 0, i32 2
  store ptr %125, ptr %126, align 8, !tbaa !16
  %127 = load ptr, ptr %2, align 8, !tbaa !193
  %128 = getelementptr inbounds %struct.micro_operation_def, ptr %6, i64 0, i32 1
  store ptr %127, ptr %128, align 8, !tbaa !67
  %129 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %130 = icmp eq ptr %129, null
  br i1 %130, label %143, label %131

131:                                              ; preds = %120
  %132 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %133 = and i32 %132, 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %143, label %135

135:                                              ; preds = %131
  %136 = load ptr, ptr %8, align 8, !tbaa !195
  %137 = load i32, ptr %6, align 8, !tbaa !69
  %138 = getelementptr i8, ptr %136, i64 16
  %139 = load ptr, ptr %138, align 8, !tbaa !39
  %140 = getelementptr i8, ptr %136, i64 80
  %141 = load i32, ptr %140, align 8, !tbaa !38
  %142 = load ptr, ptr %139, align 8, !tbaa !62
  call fastcc void @log_op_type(ptr noundef %125, ptr %142, i32 %141, ptr noundef %127, i32 noundef %137, ptr noundef nonnull %129)
  br label %143

143:                                              ; preds = %135, %131, %120
  %144 = getelementptr inbounds %struct.basic_block_def, ptr %9, i64 0, i32 2
  %145 = load ptr, ptr %144, align 8, !tbaa !39
  call fastcc void @VEC_micro_operation_heap_safe_push(ptr noundef %145, ptr noundef nonnull %6)
  br label %146

146:                                              ; preds = %112, %117, %143, %80, %80, %90, %74
  %147 = load i32, ptr %1, align 8
  %148 = and i32 %147, 65535
  %149 = icmp ne i32 %148, 25
  %150 = and i1 %68, %149
  br i1 %150, label %155, label %151

151:                                              ; preds = %146
  store i32 7, ptr %6, align 8, !tbaa !69
  br i1 %68, label %152, label %195

152:                                              ; preds = %151
  %153 = load i32, ptr %5, align 4, !tbaa !16
  %154 = call fastcc ptr @var_lowpart(i32 noundef %153, ptr noundef nonnull %0)
  br label %195

155:                                              ; preds = %146
  %156 = icmp eq i32 %148, 23
  br i1 %156, label %157, label %161

157:                                              ; preds = %155
  %158 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %159 = load ptr, ptr %158, align 8, !tbaa !16
  %160 = icmp eq ptr %159, %0
  br i1 %160, label %164, label %161

161:                                              ; preds = %157, %155
  %162 = load i32, ptr %5, align 4, !tbaa !16
  %163 = call fastcc ptr @var_lowpart(i32 noundef %162, ptr noundef nonnull %0)
  br label %172

164:                                              ; preds = %157
  %165 = load i32, ptr %5, align 4, !tbaa !16
  %166 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 1
  %167 = load ptr, ptr %166, align 8, !tbaa !16
  %168 = call fastcc ptr @var_lowpart(i32 noundef %165, ptr noundef %167)
  %169 = load i32, ptr %5, align 4, !tbaa !16
  %170 = call fastcc ptr @var_lowpart(i32 noundef %169, ptr noundef nonnull %0)
  %171 = icmp eq ptr %168, null
  br i1 %171, label %172, label %174

172:                                              ; preds = %161, %164
  %173 = phi ptr [ %163, %161 ], [ %170, %164 ]
  store i32 5, ptr %6, align 8, !tbaa !69
  br label %195

174:                                              ; preds = %164
  %175 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 23, i32 noundef 0, ptr noundef %170, ptr noundef nonnull %168) #21
  %176 = getelementptr inbounds %struct.rtx_def, ptr %175, i64 0, i32 1, i32 0, i32 0, i64 1
  %177 = load ptr, ptr %176, align 8, !tbaa !16
  %178 = getelementptr inbounds %struct.rtx_def, ptr %170, i64 0, i32 1, i32 0, i32 0, i64 1
  %179 = load ptr, ptr %178, align 8, !tbaa !16
  %180 = icmp eq ptr %179, null
  br i1 %180, label %189, label %181

181:                                              ; preds = %174
  %182 = load ptr, ptr %179, align 8, !tbaa !135
  %183 = getelementptr inbounds %struct.mem_attrs, ptr %179, i64 0, i32 1
  %184 = load ptr, ptr %183, align 8, !tbaa !137
  %185 = icmp eq ptr %184, null
  br i1 %185, label %189, label %186

186:                                              ; preds = %181
  %187 = getelementptr inbounds %struct.rtx_def, ptr %184, i64 0, i32 1
  %188 = load i64, ptr %187, align 8, !tbaa !16
  br label %189

189:                                              ; preds = %174, %181, %186
  %190 = phi ptr [ %182, %186 ], [ %182, %181 ], [ null, %174 ]
  %191 = phi i64 [ %188, %186 ], [ 0, %181 ], [ 0, %174 ]
  %192 = call fastcc zeroext i8 @same_variable_part_p(ptr noundef %177, ptr noundef %190, i64 noundef %191), !range !37
  %193 = icmp eq i8 %192, 0
  %194 = select i1 %193, i32 5, i32 6
  store i32 %194, ptr %6, align 8, !tbaa !69
  br label %195

195:                                              ; preds = %189, %172, %151, %152, %32, %60, %49
  %196 = phi ptr [ %50, %49 ], [ %52, %60 ], [ %0, %32 ], [ %173, %172 ], [ %175, %189 ], [ %154, %152 ], [ %0, %151 ]
  %197 = phi i8 [ 1, %49 ], [ 1, %60 ], [ %33, %32 ], [ %69, %172 ], [ %69, %189 ], [ %69, %152 ], [ %69, %151 ]
  %198 = getelementptr inbounds %struct.micro_operation_def, ptr %6, i64 0, i32 2
  store ptr %196, ptr %198, align 8, !tbaa !16
  %199 = load ptr, ptr %2, align 8, !tbaa !193
  %200 = getelementptr inbounds %struct.micro_operation_def, ptr %6, i64 0, i32 1
  store ptr %199, ptr %200, align 8, !tbaa !67
  %201 = icmp eq i32 %10, 4
  br i1 %201, label %202, label %552

202:                                              ; preds = %195
  %203 = load i32, ptr %4, align 4, !tbaa !16
  %204 = getelementptr inbounds %struct.count_use_info, ptr %2, i64 0, i32 2
  %205 = load ptr, ptr %204, align 8, !tbaa !196
  %206 = icmp eq ptr %205, null
  br i1 %206, label %552, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds %struct.count_use_info, ptr %2, i64 0, i32 4
  %209 = load i8, ptr %208, align 4, !tbaa !198
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %228, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %struct.count_use_info, ptr %2, i64 0, i32 3
  %213 = load i32, ptr %212, align 8, !tbaa !197
  %214 = icmp sgt i32 %213, 0
  br i1 %214, label %215, label %552

215:                                              ; preds = %211
  %216 = zext i32 %213 to i64
  br label %220

217:                                              ; preds = %220
  %218 = add nuw nsw i64 %221, 1
  %219 = icmp eq i64 %218, %216
  br i1 %219, label %552, label %220, !llvm.loop !251

220:                                              ; preds = %217, %215
  %221 = phi i64 [ 0, %215 ], [ %218, %217 ]
  %222 = getelementptr inbounds %struct.cselib_set, ptr %205, i64 %221, i32 1
  %223 = load ptr, ptr %222, align 8, !tbaa !252
  %224 = icmp eq ptr %223, %0
  br i1 %224, label %225, label %217

225:                                              ; preds = %220
  %226 = getelementptr inbounds %struct.cselib_set, ptr %205, i64 %221, i32 2
  %227 = load ptr, ptr %226, align 8, !tbaa !254
  br label %230

228:                                              ; preds = %207
  %229 = call ptr @cselib_lookup(ptr noundef nonnull %0, i32 noundef %203, i32 noundef 0) #21
  br label %230

230:                                              ; preds = %225, %228
  %231 = phi ptr [ %227, %225 ], [ %229, %228 ]
  %232 = icmp eq ptr %231, null
  br i1 %232, label %552, label %233

233:                                              ; preds = %230
  %234 = call zeroext i8 @cselib_preserved_value_p(ptr noundef nonnull %231) #21
  %235 = icmp eq i8 %234, 0
  %236 = load i32, ptr %0, align 8
  %237 = trunc i32 %236 to i16
  switch i16 %237, label %264 [
    i16 37, label %266
    i16 43, label %238
  ]

238:                                              ; preds = %233
  %239 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %240 = load ptr, ptr %239, align 8, !tbaa !16
  %241 = load i32, ptr %240, align 8
  %242 = lshr i32 %241, 16
  %243 = and i32 %242, 255
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %256

245:                                              ; preds = %238
  %246 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57, i32 1), align 8, !tbaa !238
  %247 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %248 = load ptr, ptr %247, align 8, !tbaa !16
  %249 = icmp eq ptr %248, null
  br i1 %249, label %253, label %250

250:                                              ; preds = %245
  %251 = getelementptr inbounds %struct.mem_attrs, ptr %248, i64 0, i32 5
  %252 = load i8, ptr %251, align 8, !tbaa !250
  br label %253

253:                                              ; preds = %250, %245
  %254 = phi i8 [ %252, %250 ], [ 0, %245 ]
  %255 = call i32 %246(i8 noundef zeroext %254) #21
  br label %256

256:                                              ; preds = %253, %238
  %257 = phi i32 [ %255, %253 ], [ %243, %238 ]
  %258 = call ptr @cselib_lookup(ptr noundef nonnull %240, i32 noundef %257, i32 noundef 0) #21
  %259 = icmp eq ptr %258, null
  br i1 %259, label %266, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %struct.cselib_val_struct, ptr %258, i64 0, i32 2
  %262 = load ptr, ptr %261, align 8, !tbaa !128
  %263 = call ptr @replace_equiv_address_nv(ptr noundef nonnull %0, ptr noundef %262) #21
  br label %266

264:                                              ; preds = %233
  %265 = call ptr @cselib_subst_to_values(ptr noundef nonnull %0) #21
  br label %266

266:                                              ; preds = %233, %256, %260, %264
  %267 = phi ptr [ %265, %264 ], [ null, %233 ], [ %263, %260 ], [ null, %256 ]
  %268 = icmp eq ptr %267, null
  %269 = select i1 %268, ptr %0, ptr %267
  %270 = load ptr, ptr %2, align 8, !tbaa !193
  %271 = getelementptr inbounds %struct.rtx_def, ptr %270, i64 1
  %272 = load ptr, ptr %271, align 8, !tbaa !16
  %273 = load i32, ptr %272, align 8
  %274 = and i32 %273, 65535
  %275 = icmp eq i32 %274, 14
  br i1 %275, label %276, label %318

276:                                              ; preds = %266
  %277 = load i32, ptr %269, align 8
  %278 = lshr i32 %277, 16
  %279 = and i32 %278, 255
  %280 = call ptr @cselib_lookup(ptr noundef nonnull %269, i32 noundef %279, i32 noundef 0) #21
  %281 = icmp eq ptr %280, %231
  br i1 %281, label %282, label %283

282:                                              ; preds = %276
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 5339, ptr noundef nonnull @.str.2) #21
  br label %283

283:                                              ; preds = %276, %282
  %284 = load i32, ptr %269, align 8
  %285 = trunc i32 %284 to i16
  switch i16 %285, label %286 [
    i16 37, label %287
    i16 43, label %287
  ]

286:                                              ; preds = %283
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 5340, ptr noundef nonnull @.str.2) #21
  br label %287

287:                                              ; preds = %283, %283, %286
  %288 = call zeroext i8 @cselib_preserved_value_p(ptr noundef %280) #21
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %290, label %366

290:                                              ; preds = %287
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #21
  call fastcc void @preserve_value(ptr noundef %280)
  store i32 2, ptr %7, align 8, !tbaa !69
  %291 = load i32, ptr %4, align 4, !tbaa !16
  %292 = getelementptr inbounds %struct.cselib_val_struct, ptr %280, i64 0, i32 2
  %293 = load ptr, ptr %292, align 8, !tbaa !128
  %294 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 41, i32 noundef %291, ptr noundef %293, ptr noundef nonnull %269) #21
  %295 = getelementptr inbounds %struct.micro_operation_def, ptr %7, i64 0, i32 2
  store ptr %294, ptr %295, align 8, !tbaa !16
  %296 = load i32, ptr %294, align 8
  %297 = or i32 %296, 134217728
  store i32 %297, ptr %294, align 8
  %298 = load ptr, ptr %2, align 8, !tbaa !193
  %299 = getelementptr inbounds %struct.micro_operation_def, ptr %7, i64 0, i32 1
  store ptr %298, ptr %299, align 8, !tbaa !67
  %300 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %301 = icmp eq ptr %300, null
  br i1 %301, label %315, label %302

302:                                              ; preds = %290
  %303 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %304 = and i32 %303, 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %315, label %306

306:                                              ; preds = %302
  %307 = load ptr, ptr %295, align 8, !tbaa !16
  %308 = load ptr, ptr %8, align 8, !tbaa !195
  %309 = load i32, ptr %7, align 8, !tbaa !69
  %310 = getelementptr i8, ptr %308, i64 16
  %311 = load ptr, ptr %310, align 8, !tbaa !39
  %312 = getelementptr i8, ptr %308, i64 80
  %313 = load i32, ptr %312, align 8, !tbaa !38
  %314 = load ptr, ptr %311, align 8, !tbaa !62
  call fastcc void @log_op_type(ptr noundef %307, ptr %314, i32 %313, ptr noundef %298, i32 noundef %309, ptr noundef nonnull %300)
  br label %315

315:                                              ; preds = %306, %302, %290
  %316 = getelementptr inbounds %struct.basic_block_def, ptr %9, i64 0, i32 2
  %317 = load ptr, ptr %316, align 8, !tbaa !39
  call fastcc void @VEC_micro_operation_heap_safe_push(ptr noundef %317, ptr noundef nonnull %7)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #21
  br label %366

318:                                              ; preds = %266
  %319 = getelementptr inbounds %struct.micro_operation_def, ptr %6, i64 0, i32 2
  %320 = load ptr, ptr %319, align 8, !tbaa !16
  %321 = load i32, ptr %320, align 8
  %322 = and i32 %321, 65535
  %323 = icmp eq i32 %322, 23
  br i1 %235, label %324, label %360

324:                                              ; preds = %318
  br i1 %323, label %325, label %366

325:                                              ; preds = %324
  %326 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %327 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 1
  %328 = load ptr, ptr %327, align 8, !tbaa !16
  %329 = call fastcc ptr @replace_expr_with_values(ptr noundef %328)
  %330 = icmp eq ptr %329, null
  br i1 %330, label %331, label %342

331:                                              ; preds = %325
  %332 = load i32, ptr %4, align 4, !tbaa !16
  %333 = load i32, ptr %5, align 4, !tbaa !16
  %334 = icmp eq i32 %332, %333
  br i1 %334, label %349, label %335

335:                                              ; preds = %331
  %336 = load ptr, ptr %327, align 8, !tbaa !16
  %337 = load ptr, ptr %326, align 8, !tbaa !16
  %338 = icmp eq ptr %269, %337
  br i1 %338, label %340, label %339

339:                                              ; preds = %335
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 5369, ptr noundef nonnull @.str.2) #21
  br label %340

340:                                              ; preds = %339, %335
  %341 = icmp eq ptr %336, null
  br i1 %341, label %349, label %342

342:                                              ; preds = %325, %340
  %343 = phi ptr [ %336, %340 ], [ %329, %325 ]
  %344 = load ptr, ptr %319, align 8, !tbaa !16
  %345 = load i32, ptr %344, align 8
  %346 = lshr i32 %345, 16
  %347 = and i32 %346, 255
  %348 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 23, i32 noundef %347, ptr noundef nonnull %269, ptr noundef nonnull %343) #21
  br label %366

349:                                              ; preds = %331, %340
  %350 = load ptr, ptr %319, align 8, !tbaa !16
  %351 = getelementptr inbounds %struct.rtx_def, ptr %350, i64 0, i32 1
  %352 = load ptr, ptr %351, align 8, !tbaa !16
  %353 = icmp eq ptr %269, %352
  %354 = select i1 %353, ptr %350, ptr %269
  %355 = getelementptr inbounds %struct.rtx_def, ptr %350, i64 0, i32 1, i32 0, i32 0, i64 1
  %356 = load ptr, ptr %355, align 8, !tbaa !16
  %357 = load i32, ptr %356, align 8
  %358 = and i32 %357, 65535
  %359 = icmp eq i32 %358, 37
  br label %366

360:                                              ; preds = %318
  br i1 %323, label %361, label %366

361:                                              ; preds = %360
  %362 = getelementptr inbounds %struct.rtx_def, ptr %320, i64 0, i32 1
  %363 = load ptr, ptr %362, align 8, !tbaa !16
  %364 = icmp eq ptr %269, %363
  %365 = select i1 %364, ptr %320, ptr %269
  br label %366

366:                                              ; preds = %324, %349, %361, %287, %315, %342, %360
  %367 = phi i1 [ true, %342 ], [ false, %360 ], [ false, %315 ], [ false, %287 ], [ false, %361 ], [ %359, %349 ], [ false, %324 ]
  %368 = phi ptr [ %348, %342 ], [ %269, %360 ], [ %269, %315 ], [ %269, %287 ], [ %365, %361 ], [ %354, %349 ], [ %269, %324 ]
  %369 = load i32, ptr %4, align 4, !tbaa !16
  %370 = getelementptr inbounds %struct.cselib_val_struct, ptr %231, i64 0, i32 2
  %371 = load ptr, ptr %370, align 8, !tbaa !128
  %372 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 41, i32 noundef %369, ptr noundef %371, ptr noundef %368) #21
  %373 = getelementptr inbounds %struct.micro_operation_def, ptr %6, i64 0, i32 2
  %374 = load ptr, ptr %373, align 8, !tbaa !16
  %375 = icmp eq ptr %374, %368
  br i1 %375, label %381, label %376

376:                                              ; preds = %366
  %377 = load i32, ptr %374, align 8
  %378 = lshr i32 %377, 16
  %379 = and i32 %378, 255
  %380 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 41, i32 noundef %379, ptr noundef %372, ptr noundef nonnull %374) #21
  br label %381

381:                                              ; preds = %376, %366
  %382 = phi ptr [ %380, %376 ], [ %372, %366 ]
  %383 = load ptr, ptr %2, align 8, !tbaa !193
  %384 = getelementptr inbounds %struct.rtx_def, ptr %383, i64 1
  %385 = load ptr, ptr %384, align 8, !tbaa !16
  %386 = load i32, ptr %385, align 8
  %387 = and i32 %386, 65535
  %388 = icmp eq i32 %387, 14
  br i1 %388, label %509, label %389

389:                                              ; preds = %381
  %390 = load ptr, ptr %370, align 8, !tbaa !128
  %391 = load i32, ptr %1, align 8
  %392 = and i32 %391, 65535
  %393 = icmp eq i32 %392, 23
  br i1 %393, label %394, label %509

394:                                              ; preds = %389
  %395 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %396 = load ptr, ptr %395, align 8, !tbaa !16
  %397 = load i32, ptr %396, align 8
  %398 = and i32 %397, 65535
  %399 = icmp eq i32 %398, 37
  br i1 %399, label %400, label %509

400:                                              ; preds = %394
  %401 = load i32, ptr %390, align 8
  %402 = xor i32 %401, %397
  %403 = and i32 %402, 16711680
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %509

405:                                              ; preds = %400
  %406 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 1
  %407 = load ptr, ptr %406, align 8, !tbaa !16
  %408 = load i32, ptr %407, align 8
  %409 = trunc i32 %408 to i16
  switch i16 %409, label %509 [
    i16 49, label %410
    i16 50, label %410
    i16 63, label %410
    i16 64, label %410
    i16 51, label %410
    i16 98, label %410
    i16 99, label %410
  ]

410:                                              ; preds = %405, %405, %405, %405, %405, %405, %405
  %411 = getelementptr inbounds %struct.rtx_def, ptr %407, i64 0, i32 1
  %412 = load ptr, ptr %411, align 8, !tbaa !16
  %413 = load i32, ptr %412, align 8
  %414 = and i32 %413, 65535
  %415 = icmp eq i32 %414, 37
  br i1 %415, label %416, label %509

416:                                              ; preds = %410
  %417 = lshr i32 %408, 16
  %418 = and i32 %417, 255
  %419 = zext i32 %418 to i64
  %420 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %419
  %421 = load i8, ptr %420, align 1, !tbaa !16
  %422 = and i8 %421, -2
  %423 = icmp eq i8 %422, 2
  br i1 %423, label %424, label %509

424:                                              ; preds = %416
  %425 = lshr i32 %413, 16
  %426 = and i32 %425, 255
  %427 = call ptr @cselib_lookup(ptr noundef nonnull %412, i32 noundef %426, i32 noundef 0) #21
  %428 = icmp eq ptr %427, null
  br i1 %428, label %509, label %429

429:                                              ; preds = %424
  %430 = call zeroext i8 @cselib_preserved_value_p(ptr noundef nonnull %427) #21
  %431 = icmp eq i8 %430, 0
  br i1 %431, label %509, label %432

432:                                              ; preds = %429
  %433 = load i32, ptr %407, align 8
  %434 = trunc i32 %433 to i16
  switch i16 %434, label %491 [
    i16 64, label %435
    i16 51, label %435
    i16 98, label %448
    i16 99, label %448
    i16 63, label %457
    i16 49, label %455
    i16 50, label %456
  ]

435:                                              ; preds = %432, %432
  %436 = getelementptr inbounds %struct.cselib_val_struct, ptr %427, i64 0, i32 2
  %437 = load ptr, ptr %436, align 8, !tbaa !128
  %438 = load i32, ptr %437, align 8
  %439 = lshr i32 %438, 16
  %440 = and i32 %439, 255
  %441 = load i32, ptr %390, align 8
  %442 = lshr i32 %441, 16
  %443 = and i32 %442, 255
  %444 = icmp eq i32 %440, %443
  br i1 %444, label %445, label %509

445:                                              ; preds = %435
  %446 = and i32 %433, 65535
  %447 = call ptr @gen_rtx_fmt_e_stat(i32 noundef %446, i32 noundef %440, ptr noundef nonnull %390) #21
  br label %492

448:                                              ; preds = %432, %432
  %449 = getelementptr inbounds %struct.cselib_val_struct, ptr %427, i64 0, i32 2
  %450 = load ptr, ptr %449, align 8, !tbaa !128
  %451 = load i32, ptr %450, align 8
  %452 = lshr i32 %451, 16
  %453 = and i32 %452, 255
  %454 = call ptr @gen_lowpart_SUBREG(i32 noundef %453, ptr noundef nonnull %390) #21
  br label %492

455:                                              ; preds = %432
  br label %457

456:                                              ; preds = %432
  br label %457

457:                                              ; preds = %456, %455, %432
  %458 = phi i32 [ 49, %456 ], [ 50, %455 ], [ 63, %432 ]
  %459 = getelementptr inbounds %struct.cselib_val_struct, ptr %427, i64 0, i32 2
  %460 = load ptr, ptr %459, align 8, !tbaa !128
  %461 = load i32, ptr %460, align 8
  %462 = load i32, ptr %390, align 8
  %463 = xor i32 %462, %461
  %464 = and i32 %463, 16711680
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %509

466:                                              ; preds = %457
  %467 = getelementptr inbounds %struct.rtx_def, ptr %407, i64 0, i32 1, i32 0, i32 0, i64 1
  %468 = load ptr, ptr %467, align 8, !tbaa !16
  %469 = load i32, ptr %468, align 8
  %470 = trunc i32 %469 to i16
  switch i16 %470, label %471 [
    i16 30, label %478
    i16 45, label %478
  ]

471:                                              ; preds = %466
  %472 = load ptr, ptr @scratch_regs, align 8, !tbaa !5
  %473 = call ptr @cselib_expand_value_rtx(ptr noundef nonnull %468, ptr noundef %472, i32 noundef 5) #21
  %474 = icmp eq ptr %473, null
  br i1 %474, label %509, label %475

475:                                              ; preds = %471
  %476 = load i32, ptr %473, align 8
  %477 = trunc i32 %476 to i16
  switch i16 %477, label %509 [
    i16 30, label %478
    i16 45, label %478
  ]

478:                                              ; preds = %475, %475, %466, %466
  %479 = phi ptr [ %468, %466 ], [ %473, %475 ], [ %468, %466 ], [ %473, %475 ]
  %480 = load i32, ptr %390, align 8
  %481 = lshr i32 %480, 16
  %482 = and i32 %481, 255
  %483 = call ptr @simplify_gen_binary(i32 noundef %458, i32 noundef %482, ptr noundef nonnull %390, ptr noundef nonnull %479) #21
  %484 = icmp eq ptr %483, %390
  br i1 %484, label %485, label %492

485:                                              ; preds = %478
  %486 = load i32, ptr %390, align 8
  %487 = lshr i32 %486, 16
  %488 = and i32 %487, 255
  %489 = load ptr, ptr getelementptr inbounds ([129 x ptr], ptr @const_int_rtx, i64 0, i64 64), align 16, !tbaa !5
  %490 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 49, i32 noundef %488, ptr noundef nonnull %390, ptr noundef %489) #21
  br label %492

491:                                              ; preds = %432
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 5196, ptr noundef nonnull @.str.2) #21
  unreachable

492:                                              ; preds = %445, %448, %478, %485
  %493 = phi ptr [ %490, %485 ], [ %483, %478 ], [ %454, %448 ], [ %447, %445 ]
  %494 = getelementptr inbounds %struct.cselib_val_struct, ptr %427, i64 0, i32 2
  %495 = load ptr, ptr %494, align 8, !tbaa !128
  %496 = load i32, ptr %495, align 8
  %497 = lshr i32 %496, 16
  %498 = and i32 %497, 255
  %499 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 41, i32 noundef %498, ptr noundef nonnull %495, ptr noundef %493) #21
  %500 = icmp eq ptr %499, null
  br i1 %500, label %509, label %501

501:                                              ; preds = %492
  %502 = load ptr, ptr %373, align 8, !tbaa !16
  %503 = load i32, ptr %502, align 8
  %504 = lshr i32 %503, 16
  %505 = and i32 %504, 255
  %506 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 41, i32 noundef %505, ptr noundef %382, ptr noundef nonnull %499) #21
  %507 = load i32, ptr %506, align 8
  %508 = or i32 %507, -2147483648
  store i32 %508, ptr %506, align 8
  br label %509

509:                                              ; preds = %475, %471, %457, %435, %424, %429, %410, %416, %405, %394, %400, %389, %492, %501, %381
  %510 = phi ptr [ %506, %501 ], [ %382, %492 ], [ %382, %381 ], [ %382, %389 ], [ %382, %400 ], [ %382, %394 ], [ %382, %405 ], [ %382, %416 ], [ %382, %410 ], [ %382, %429 ], [ %382, %424 ], [ %382, %435 ], [ %382, %457 ], [ %382, %471 ], [ %382, %475 ]
  store ptr %510, ptr %373, align 8, !tbaa !16
  %511 = icmp eq i8 %197, 0
  br i1 %511, label %515, label %512

512:                                              ; preds = %509
  %513 = load i32, ptr %510, align 8
  %514 = or i32 %513, 536870912
  store i32 %514, ptr %510, align 8
  br label %515

515:                                              ; preds = %512, %509
  br i1 %235, label %516, label %538

516:                                              ; preds = %515
  %517 = load i32, ptr %510, align 8
  %518 = select i1 %367, i32 134217728, i32 0
  %519 = and i32 %517, -134217729
  %520 = or i32 %519, %518
  store i32 %520, ptr %510, align 8
  call void @cselib_preserve_value(ptr noundef nonnull %231) #21
  %521 = load ptr, ptr %370, align 8, !tbaa !128
  %522 = load ptr, ptr @preserved_values, align 8, !tbaa !5
  %523 = icmp eq ptr %522, null
  br i1 %523, label %529, label %524

524:                                              ; preds = %516
  %525 = getelementptr inbounds %struct.VEC_rtx_base, ptr %522, i64 0, i32 1
  %526 = load i32, ptr %525, align 4, !tbaa !130
  %527 = load i32, ptr %522, align 8, !tbaa !42
  %528 = icmp eq i32 %526, %527
  br i1 %528, label %529, label %532

529:                                              ; preds = %524, %516
  %530 = call ptr @vec_heap_p_reserve(ptr noundef %522, i32 noundef 1) #21
  store ptr %530, ptr @preserved_values, align 8, !tbaa !5
  %531 = load i32, ptr %530, align 8, !tbaa !42
  br label %532

532:                                              ; preds = %524, %529
  %533 = phi i32 [ %527, %524 ], [ %531, %529 ]
  %534 = phi ptr [ %522, %524 ], [ %530, %529 ]
  %535 = add i32 %533, 1
  store i32 %535, ptr %534, align 8, !tbaa !42
  %536 = zext i32 %533 to i64
  %537 = getelementptr inbounds %struct.VEC_rtx_base, ptr %534, i64 0, i32 2, i64 %536
  store ptr %521, ptr %537, align 8, !tbaa !5
  br label %538

538:                                              ; preds = %532, %515
  %539 = load i32, ptr %6, align 8, !tbaa !69
  %540 = icmp eq i32 %539, 7
  br i1 %540, label %541, label %545

541:                                              ; preds = %538
  %542 = load i32, ptr %510, align 8
  %543 = or i32 %542, 67108864
  store i32 %543, ptr %510, align 8
  %544 = load i32, ptr %6, align 8, !tbaa !69
  br label %545

545:                                              ; preds = %541, %538
  %546 = phi i32 [ %544, %541 ], [ %539, %538 ]
  %547 = icmp eq i32 %546, 6
  br i1 %547, label %548, label %551

548:                                              ; preds = %545
  %549 = load i32, ptr %510, align 8
  %550 = or i32 %549, 16777216
  store i32 %550, ptr %510, align 8
  br label %551

551:                                              ; preds = %548, %545
  store i32 4, ptr %6, align 8, !tbaa !69
  br label %552

552:                                              ; preds = %217, %211, %202, %230, %195, %551
  %553 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %554 = icmp eq ptr %553, null
  br i1 %554, label %582, label %555

555:                                              ; preds = %552
  %556 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %557 = and i32 %556, 8
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %582, label %559

559:                                              ; preds = %555
  %560 = getelementptr inbounds %struct.micro_operation_def, ptr %6, i64 0, i32 2
  %561 = load ptr, ptr %560, align 8, !tbaa !16
  %562 = load ptr, ptr %8, align 8, !tbaa !195
  %563 = load ptr, ptr %2, align 8, !tbaa !193
  %564 = load i32, ptr %6, align 8, !tbaa !69
  %565 = getelementptr i8, ptr %562, i64 16
  %566 = load ptr, ptr %565, align 8, !tbaa !39
  %567 = getelementptr i8, ptr %562, i64 80
  %568 = load i32, ptr %567, align 8, !tbaa !38
  %569 = load ptr, ptr %566, align 8, !tbaa !62
  %570 = icmp eq ptr %569, null
  br i1 %570, label %573, label %571

571:                                              ; preds = %559
  %572 = load i32, ptr %569, align 8, !tbaa !64
  br label %573

573:                                              ; preds = %559, %571
  %574 = phi i32 [ %572, %571 ], [ 0, %559 ]
  %575 = getelementptr inbounds %struct.rtx_def, ptr %563, i64 0, i32 1
  %576 = load i32, ptr %575, align 8, !tbaa !16
  %577 = zext i32 %564 to i64
  %578 = getelementptr inbounds [10 x ptr], ptr @micro_operation_type_name, i64 0, i64 %577
  %579 = load ptr, ptr %578, align 8, !tbaa !5
  %580 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %553, ptr noundef nonnull @.str.11, i32 noundef %568, i32 noundef %574, i32 noundef %576, ptr noundef %579)
  call void @print_inline_rtx(ptr noundef nonnull %553, ptr noundef %561, i32 noundef 2) #21
  %581 = call i32 @fputc(i32 noundef 10, ptr noundef nonnull %553)
  br label %582

582:                                              ; preds = %573, %555, %552
  %583 = getelementptr inbounds %struct.basic_block_def, ptr %9, i64 0, i32 2
  %584 = load ptr, ptr %583, align 8, !tbaa !39
  %585 = load ptr, ptr %584, align 8, !tbaa !5
  %586 = icmp eq ptr %585, null
  br i1 %586, label %592, label %587

587:                                              ; preds = %582
  %588 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %585, i64 0, i32 1
  %589 = load i32, ptr %588, align 4, !tbaa !115
  %590 = load i32, ptr %585, align 8, !tbaa !64
  %591 = icmp eq i32 %589, %590
  br i1 %591, label %592, label %595

592:                                              ; preds = %587, %582
  %593 = call ptr @vec_heap_o_reserve(ptr noundef %585, i32 noundef 1, i64 noundef 8, i64 noundef 24) #21
  store ptr %593, ptr %584, align 8, !tbaa !5
  %594 = load i32, ptr %593, align 8, !tbaa !64
  br label %595

595:                                              ; preds = %587, %592
  %596 = phi i32 [ %590, %587 ], [ %594, %592 ]
  %597 = phi ptr [ %585, %587 ], [ %593, %592 ]
  %598 = add i32 %596, 1
  store i32 %598, ptr %597, align 8, !tbaa !64
  %599 = zext i32 %596 to i64
  %600 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %597, i64 0, i32 2, i64 %599
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %600, ptr noundef nonnull align 8 dereferenceable(24) %6, i64 24, i1 false), !tbaa.struct !116
  br label %601

601:                                              ; preds = %70, %12, %3, %595
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #21
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @add_uses(ptr nocapture noundef readonly %0, ptr noundef %1) #9 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca %struct.micro_operation_def, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.micro_operation_def, align 8
  %9 = load ptr, ptr %0, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #21
  store i32 0, ptr %3, align 4, !tbaa !16
  %10 = call fastcc i32 @use_type(ptr noundef %9, ptr noundef %1, ptr noundef nonnull %3), !range !237
  %11 = icmp eq i32 %10, 7
  br i1 %11, label %481, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.count_use_info, ptr %1, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !195
  %15 = icmp eq i32 %10, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = load i32, ptr %3, align 4, !tbaa !16
  %18 = call fastcc ptr @var_lowpart(i32 noundef %17, ptr noundef %9)
  %19 = load ptr, ptr %1, align 8, !tbaa !193
  br label %431

20:                                               ; preds = %12
  %21 = load ptr, ptr %1, align 8, !tbaa !193
  switch i32 %10, label %428 [
    i32 3, label %22
    i32 2, label %234
  ]

22:                                               ; preds = %20
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #21
  %23 = getelementptr inbounds %struct.rtx_def, ptr %9, i64 0, i32 1, i32 0, i32 0, i64 1
  %24 = load ptr, ptr %23, align 8, !tbaa !16
  store ptr %24, ptr %4, align 8, !tbaa !5
  %25 = getelementptr inbounds %struct.count_use_info, ptr %1, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !196
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4952, ptr noundef nonnull @.str.2) #21
  %29 = load ptr, ptr %4, align 8, !tbaa !5
  br label %30

30:                                               ; preds = %22, %28
  %31 = phi ptr [ %24, %22 ], [ %29, %28 ]
  %32 = load i32, ptr %31, align 8
  %33 = and i32 %32, 65535
  %34 = icmp eq i32 %33, 43
  br i1 %34, label %35, label %102

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.rtx_def, ptr %31, i64 0, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !16
  %38 = load i32, ptr %37, align 8
  %39 = trunc i32 %38 to i16
  switch i16 %39, label %51 [
    i16 37, label %102
    i16 43, label %102
    i16 49, label %40
  ]

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.rtx_def, ptr %37, i64 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !16
  %43 = load ptr, ptr @cfa_base_rtx, align 8, !tbaa !5
  %44 = icmp eq ptr %42, %43
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.rtx_def, ptr %37, i64 0, i32 1, i32 0, i32 0, i64 1
  %47 = load ptr, ptr %46, align 8, !tbaa !16
  %48 = load i32, ptr %47, align 8
  %49 = and i32 %48, 65535
  %50 = icmp eq i32 %49, 30
  br i1 %50, label %102, label %51

51:                                               ; preds = %35, %45, %40
  %52 = lshr i32 %38, 16
  %53 = and i32 %52, 255
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %51
  %56 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57, i32 1), align 8, !tbaa !238
  %57 = getelementptr inbounds %struct.rtx_def, ptr %31, i64 0, i32 1, i32 0, i32 0, i64 1
  %58 = load ptr, ptr %57, align 8, !tbaa !16
  %59 = icmp eq ptr %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.mem_attrs, ptr %58, i64 0, i32 5
  %62 = load i8, ptr %61, align 8, !tbaa !250
  br label %63

63:                                               ; preds = %60, %55
  %64 = phi i8 [ %62, %60 ], [ 0, %55 ]
  %65 = call i32 %56(i8 noundef zeroext %64) #21
  %66 = load ptr, ptr %36, align 8, !tbaa !16
  br label %67

67:                                               ; preds = %51, %63
  %68 = phi ptr [ %66, %63 ], [ %37, %51 ]
  %69 = phi i32 [ %65, %63 ], [ %53, %51 ]
  %70 = call ptr @cselib_lookup(ptr noundef %68, i32 noundef %69, i32 noundef 0) #21
  %71 = icmp eq ptr %70, null
  br i1 %71, label %102, label %72

72:                                               ; preds = %67
  %73 = call zeroext i8 @cselib_preserved_value_p(ptr noundef nonnull %70) #21
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %102

75:                                               ; preds = %72
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #21
  call fastcc void @preserve_value(ptr noundef nonnull %70)
  %76 = load ptr, ptr %36, align 8, !tbaa !16
  %77 = call ptr @cselib_subst_to_values(ptr noundef %76) #21
  store i32 2, ptr %5, align 8, !tbaa !69
  %78 = load ptr, ptr %1, align 8, !tbaa !193
  %79 = getelementptr inbounds %struct.micro_operation_def, ptr %5, i64 0, i32 1
  store ptr %78, ptr %79, align 8, !tbaa !67
  %80 = getelementptr inbounds %struct.cselib_val_struct, ptr %70, i64 0, i32 2
  %81 = load ptr, ptr %80, align 8, !tbaa !128
  %82 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 41, i32 noundef %69, ptr noundef %81, ptr noundef %77) #21
  %83 = getelementptr inbounds %struct.micro_operation_def, ptr %5, i64 0, i32 2
  store ptr %82, ptr %83, align 8, !tbaa !16
  %84 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %85 = icmp eq ptr %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %75
  %87 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %88 = and i32 %87, 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %99, label %90

90:                                               ; preds = %86
  %91 = load ptr, ptr %13, align 8, !tbaa !195
  %92 = load ptr, ptr %1, align 8, !tbaa !193
  %93 = load i32, ptr %5, align 8, !tbaa !69
  %94 = getelementptr i8, ptr %91, i64 16
  %95 = load ptr, ptr %94, align 8, !tbaa !39
  %96 = getelementptr i8, ptr %91, i64 80
  %97 = load i32, ptr %96, align 8, !tbaa !38
  %98 = load ptr, ptr %95, align 8, !tbaa !62
  call fastcc void @log_op_type(ptr noundef %82, ptr %98, i32 %97, ptr noundef %92, i32 noundef %93, ptr noundef nonnull %84)
  br label %99

99:                                               ; preds = %90, %86, %75
  %100 = getelementptr inbounds %struct.basic_block_def, ptr %14, i64 0, i32 2
  %101 = load ptr, ptr %100, align 8, !tbaa !39
  call fastcc void @VEC_micro_operation_heap_safe_push(ptr noundef %101, ptr noundef nonnull %5)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #21
  br label %102

102:                                              ; preds = %67, %72, %99, %35, %35, %45, %30
  %103 = load ptr, ptr %4, align 8, !tbaa !5
  %104 = load i32, ptr %103, align 8
  %105 = and i32 %104, 65535
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds [139 x i32], ptr @rtx_class, i64 0, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !16
  %109 = icmp eq i32 %108, 9
  br i1 %109, label %110, label %118

110:                                              ; preds = %102
  %111 = icmp eq i32 %105, 35
  br i1 %111, label %112, label %232

112:                                              ; preds = %110
  %113 = call i32 @for_each_rtx(ptr noundef nonnull %4, ptr noundef nonnull @non_suitable_const, ptr noundef null) #21
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %232

115:                                              ; preds = %112
  %116 = load ptr, ptr %4, align 8, !tbaa !5
  %117 = load i32, ptr %116, align 8
  br label %118

118:                                              ; preds = %115, %102
  %119 = phi i32 [ %117, %115 ], [ %104, %102 ]
  %120 = phi ptr [ %116, %115 ], [ %103, %102 ]
  %121 = and i32 %119, 65535
  %122 = icmp eq i32 %121, 25
  br i1 %122, label %123, label %128

123:                                              ; preds = %118
  %124 = getelementptr inbounds %struct.rtx_def, ptr %120, i64 0, i32 1
  %125 = load ptr, ptr %124, align 8, !tbaa !16
  %126 = load ptr, ptr getelementptr inbounds ([129 x ptr], ptr @const_int_rtx, i64 0, i64 64), align 16, !tbaa !5
  %127 = icmp eq ptr %125, %126
  br i1 %127, label %217, label %128

128:                                              ; preds = %123, %118
  %129 = load i32, ptr %9, align 8
  %130 = lshr i32 %129, 16
  %131 = and i32 %130, 255
  %132 = load ptr, ptr %25, align 8, !tbaa !196
  %133 = icmp eq ptr %132, null
  br i1 %133, label %217, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %struct.count_use_info, ptr %1, i64 0, i32 4
  %136 = load i8, ptr %135, align 4, !tbaa !198
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %155, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %struct.count_use_info, ptr %1, i64 0, i32 3
  %140 = load i32, ptr %139, align 8, !tbaa !197
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %142, label %217

142:                                              ; preds = %138
  %143 = zext i32 %140 to i64
  br label %147

144:                                              ; preds = %147
  %145 = add nuw nsw i64 %148, 1
  %146 = icmp eq i64 %145, %143
  br i1 %146, label %217, label %147, !llvm.loop !251

147:                                              ; preds = %144, %142
  %148 = phi i64 [ 0, %142 ], [ %145, %144 ]
  %149 = getelementptr inbounds %struct.cselib_set, ptr %132, i64 %148, i32 1
  %150 = load ptr, ptr %149, align 8, !tbaa !252
  %151 = icmp eq ptr %150, %120
  br i1 %151, label %152, label %144

152:                                              ; preds = %147
  %153 = getelementptr inbounds %struct.cselib_set, ptr %132, i64 %148, i32 2
  %154 = load ptr, ptr %153, align 8, !tbaa !254
  br label %158

155:                                              ; preds = %134
  %156 = call ptr @cselib_lookup(ptr noundef nonnull %120, i32 noundef %131, i32 noundef 0) #21
  %157 = load ptr, ptr %4, align 8, !tbaa !5
  br label %158

158:                                              ; preds = %152, %155
  %159 = phi ptr [ %120, %152 ], [ %157, %155 ]
  %160 = phi ptr [ %154, %152 ], [ %156, %155 ]
  %161 = icmp eq ptr %160, null
  br i1 %161, label %162, label %164

162:                                              ; preds = %158
  %163 = load i32, ptr %159, align 8
  br label %217

164:                                              ; preds = %158
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #21
  %165 = load i32, ptr %159, align 8
  %166 = trunc i32 %165 to i16
  switch i16 %166, label %193 [
    i16 37, label %201
    i16 43, label %167
  ]

167:                                              ; preds = %164
  %168 = getelementptr inbounds %struct.rtx_def, ptr %159, i64 0, i32 1
  %169 = load ptr, ptr %168, align 8, !tbaa !16
  %170 = load i32, ptr %169, align 8
  %171 = lshr i32 %170, 16
  %172 = and i32 %171, 255
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %167
  %175 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57, i32 1), align 8, !tbaa !238
  %176 = getelementptr inbounds %struct.rtx_def, ptr %159, i64 0, i32 1, i32 0, i32 0, i64 1
  %177 = load ptr, ptr %176, align 8, !tbaa !16
  %178 = icmp eq ptr %177, null
  br i1 %178, label %182, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %struct.mem_attrs, ptr %177, i64 0, i32 5
  %181 = load i8, ptr %180, align 8, !tbaa !250
  br label %182

182:                                              ; preds = %179, %174
  %183 = phi i8 [ %181, %179 ], [ 0, %174 ]
  %184 = call i32 %175(i8 noundef zeroext %183) #21
  br label %185

185:                                              ; preds = %182, %167
  %186 = phi i32 [ %184, %182 ], [ %172, %167 ]
  %187 = call ptr @cselib_lookup(ptr noundef nonnull %169, i32 noundef %186, i32 noundef 0) #21
  %188 = icmp eq ptr %187, null
  br i1 %188, label %201, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %struct.cselib_val_struct, ptr %187, i64 0, i32 2
  %191 = load ptr, ptr %190, align 8, !tbaa !128
  %192 = call ptr @replace_equiv_address_nv(ptr noundef nonnull %159, ptr noundef %191) #21
  br label %195

193:                                              ; preds = %164
  %194 = call ptr @cselib_subst_to_values(ptr noundef nonnull %159) #21
  br label %195

195:                                              ; preds = %189, %193
  %196 = phi ptr [ %194, %193 ], [ %192, %189 ]
  %197 = icmp eq ptr %196, null
  br i1 %197, label %201, label %198

198:                                              ; preds = %195
  %199 = call ptr @shallow_copy_rtx_stat(ptr noundef nonnull %9) #21
  %200 = getelementptr inbounds %struct.rtx_def, ptr %199, i64 0, i32 1, i32 0, i32 0, i64 1
  store ptr %196, ptr %200, align 8, !tbaa !16
  br label %201

201:                                              ; preds = %185, %164, %198, %195
  %202 = phi ptr [ %199, %198 ], [ %9, %195 ], [ %9, %164 ], [ %9, %185 ]
  %203 = load i32, ptr %3, align 4, !tbaa !16
  %204 = getelementptr inbounds %struct.cselib_val_struct, ptr %160, i64 0, i32 2
  %205 = load ptr, ptr %204, align 8, !tbaa !128
  %206 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 41, i32 noundef %203, ptr noundef %205, ptr noundef %202) #21
  %207 = load ptr, ptr %4, align 8, !tbaa !5
  %208 = call fastcc i32 @use_type(ptr noundef %207, ptr noundef null, ptr noundef nonnull %6), !range !237
  switch i32 %208, label %209 [
    i32 7, label %210
    i32 0, label %216
    i32 1, label %216
  ]

209:                                              ; preds = %201
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 5004, ptr noundef nonnull @.str.2) #21
  br label %216

210:                                              ; preds = %201
  %211 = call zeroext i8 @cselib_preserved_value_p(ptr noundef nonnull %160) #21
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %210
  %214 = load i32, ptr %206, align 8
  %215 = or i32 %214, 134217728
  store i32 %215, ptr %206, align 8
  call fastcc void @preserve_value(ptr noundef nonnull %160)
  br label %216

216:                                              ; preds = %209, %201, %201, %213, %210
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  br label %232

217:                                              ; preds = %144, %162, %138, %128, %123
  %218 = phi i32 [ %119, %138 ], [ %119, %128 ], [ %163, %162 ], [ %119, %123 ], [ %119, %144 ]
  %219 = phi ptr [ %120, %138 ], [ %120, %128 ], [ %159, %162 ], [ %120, %123 ], [ %120, %144 ]
  %220 = and i32 %218, 65535
  %221 = icmp eq i32 %220, 25
  br i1 %221, label %222, label %227

222:                                              ; preds = %217
  %223 = getelementptr inbounds %struct.rtx_def, ptr %219, i64 0, i32 1
  %224 = load ptr, ptr %223, align 8, !tbaa !16
  %225 = load ptr, ptr getelementptr inbounds ([129 x ptr], ptr @const_int_rtx, i64 0, i64 64), align 16, !tbaa !5
  %226 = icmp eq ptr %224, %225
  br i1 %226, label %232, label %227

227:                                              ; preds = %222, %217
  %228 = call ptr @shallow_copy_rtx_stat(ptr noundef %9) #21
  %229 = load ptr, ptr getelementptr inbounds ([129 x ptr], ptr @const_int_rtx, i64 0, i64 64), align 16, !tbaa !5
  %230 = call ptr @gen_rtx_fmt_e_stat(i32 noundef 25, i32 noundef 0, ptr noundef %229) #21
  %231 = getelementptr inbounds %struct.rtx_def, ptr %228, i64 0, i32 1, i32 0, i32 0, i64 1
  store ptr %230, ptr %231, align 8, !tbaa !16
  br label %232

232:                                              ; preds = %216, %227, %222, %110, %112
  %233 = phi ptr [ %9, %110 ], [ %9, %112 ], [ %9, %222 ], [ %228, %227 ], [ %206, %216 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #21
  br label %431

234:                                              ; preds = %20
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #21
  store i32 0, ptr %7, align 4, !tbaa !16
  %235 = load i32, ptr %9, align 8
  %236 = lshr i32 %235, 16
  %237 = and i32 %236, 255
  %238 = getelementptr inbounds %struct.count_use_info, ptr %1, i64 0, i32 2
  %239 = load ptr, ptr %238, align 8, !tbaa !196
  %240 = icmp eq ptr %239, null
  br i1 %240, label %269, label %241

241:                                              ; preds = %234
  %242 = getelementptr inbounds %struct.count_use_info, ptr %1, i64 0, i32 4
  %243 = load i8, ptr %242, align 4, !tbaa !198
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %262, label %245

245:                                              ; preds = %241
  %246 = getelementptr inbounds %struct.count_use_info, ptr %1, i64 0, i32 3
  %247 = load i32, ptr %246, align 8, !tbaa !197
  %248 = icmp sgt i32 %247, 0
  br i1 %248, label %249, label %271

249:                                              ; preds = %245
  %250 = zext i32 %247 to i64
  br label %254

251:                                              ; preds = %254
  %252 = add nuw nsw i64 %255, 1
  %253 = icmp eq i64 %252, %250
  br i1 %253, label %265, label %254, !llvm.loop !251

254:                                              ; preds = %251, %249
  %255 = phi i64 [ 0, %249 ], [ %252, %251 ]
  %256 = getelementptr inbounds %struct.cselib_set, ptr %239, i64 %255, i32 1
  %257 = load ptr, ptr %256, align 8, !tbaa !252
  %258 = icmp eq ptr %257, %9
  br i1 %258, label %259, label %251

259:                                              ; preds = %254
  %260 = getelementptr inbounds %struct.cselib_set, ptr %239, i64 %255, i32 2
  %261 = load ptr, ptr %260, align 8, !tbaa !254
  br label %271

262:                                              ; preds = %241
  %263 = call ptr @cselib_lookup(ptr noundef nonnull %9, i32 noundef %237, i32 noundef 0) #21
  %264 = load ptr, ptr %238, align 8, !tbaa !196
  br label %265

265:                                              ; preds = %251, %262
  %266 = phi ptr [ %264, %262 ], [ %239, %251 ]
  %267 = phi ptr [ %263, %262 ], [ null, %251 ]
  %268 = icmp eq ptr %266, null
  br i1 %268, label %269, label %271

269:                                              ; preds = %234, %265
  %270 = phi ptr [ %267, %265 ], [ null, %234 ]
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 5028, ptr noundef nonnull @.str.2) #21
  br label %271

271:                                              ; preds = %259, %245, %265, %269
  %272 = phi ptr [ %267, %265 ], [ %270, %269 ], [ %261, %259 ], [ null, %245 ]
  %273 = load i32, ptr %9, align 8
  %274 = and i32 %273, 65535
  %275 = icmp eq i32 %274, 43
  br i1 %275, label %276, label %343

276:                                              ; preds = %271
  %277 = getelementptr inbounds %struct.rtx_def, ptr %9, i64 0, i32 1
  %278 = load ptr, ptr %277, align 8, !tbaa !16
  %279 = load i32, ptr %278, align 8
  %280 = trunc i32 %279 to i16
  switch i16 %280, label %292 [
    i16 37, label %343
    i16 43, label %343
    i16 49, label %281
  ]

281:                                              ; preds = %276
  %282 = getelementptr inbounds %struct.rtx_def, ptr %278, i64 0, i32 1
  %283 = load ptr, ptr %282, align 8, !tbaa !16
  %284 = load ptr, ptr @cfa_base_rtx, align 8, !tbaa !5
  %285 = icmp eq ptr %283, %284
  br i1 %285, label %286, label %292

286:                                              ; preds = %281
  %287 = getelementptr inbounds %struct.rtx_def, ptr %278, i64 0, i32 1, i32 0, i32 0, i64 1
  %288 = load ptr, ptr %287, align 8, !tbaa !16
  %289 = load i32, ptr %288, align 8
  %290 = and i32 %289, 65535
  %291 = icmp eq i32 %290, 30
  br i1 %291, label %343, label %292

292:                                              ; preds = %276, %286, %281
  %293 = lshr i32 %279, 16
  %294 = and i32 %293, 255
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %308

296:                                              ; preds = %292
  %297 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57, i32 1), align 8, !tbaa !238
  %298 = getelementptr inbounds %struct.rtx_def, ptr %9, i64 0, i32 1, i32 0, i32 0, i64 1
  %299 = load ptr, ptr %298, align 8, !tbaa !16
  %300 = icmp eq ptr %299, null
  br i1 %300, label %304, label %301

301:                                              ; preds = %296
  %302 = getelementptr inbounds %struct.mem_attrs, ptr %299, i64 0, i32 5
  %303 = load i8, ptr %302, align 8, !tbaa !250
  br label %304

304:                                              ; preds = %301, %296
  %305 = phi i8 [ %303, %301 ], [ 0, %296 ]
  %306 = call i32 %297(i8 noundef zeroext %305) #21
  %307 = load ptr, ptr %277, align 8, !tbaa !16
  br label %308

308:                                              ; preds = %292, %304
  %309 = phi ptr [ %307, %304 ], [ %278, %292 ]
  %310 = phi i32 [ %306, %304 ], [ %294, %292 ]
  %311 = call ptr @cselib_lookup(ptr noundef %309, i32 noundef %310, i32 noundef 0) #21
  %312 = icmp eq ptr %311, null
  br i1 %312, label %343, label %313

313:                                              ; preds = %308
  %314 = call zeroext i8 @cselib_preserved_value_p(ptr noundef nonnull %311) #21
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %316, label %343

316:                                              ; preds = %313
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #21
  call fastcc void @preserve_value(ptr noundef nonnull %311)
  %317 = load ptr, ptr %277, align 8, !tbaa !16
  %318 = call ptr @cselib_subst_to_values(ptr noundef %317) #21
  store i32 2, ptr %8, align 8, !tbaa !69
  %319 = load ptr, ptr %1, align 8, !tbaa !193
  %320 = getelementptr inbounds %struct.micro_operation_def, ptr %8, i64 0, i32 1
  store ptr %319, ptr %320, align 8, !tbaa !67
  %321 = getelementptr inbounds %struct.cselib_val_struct, ptr %311, i64 0, i32 2
  %322 = load ptr, ptr %321, align 8, !tbaa !128
  %323 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 41, i32 noundef %310, ptr noundef %322, ptr noundef %318) #21
  %324 = getelementptr inbounds %struct.micro_operation_def, ptr %8, i64 0, i32 2
  store ptr %323, ptr %324, align 8, !tbaa !16
  %325 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %326 = icmp eq ptr %325, null
  br i1 %326, label %340, label %327

327:                                              ; preds = %316
  %328 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %329 = and i32 %328, 8
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %340, label %331

331:                                              ; preds = %327
  %332 = load ptr, ptr %13, align 8, !tbaa !195
  %333 = load ptr, ptr %1, align 8, !tbaa !193
  %334 = load i32, ptr %8, align 8, !tbaa !69
  %335 = getelementptr i8, ptr %332, i64 16
  %336 = load ptr, ptr %335, align 8, !tbaa !39
  %337 = getelementptr i8, ptr %332, i64 80
  %338 = load i32, ptr %337, align 8, !tbaa !38
  %339 = load ptr, ptr %336, align 8, !tbaa !62
  call fastcc void @log_op_type(ptr noundef %323, ptr %339, i32 %338, ptr noundef %333, i32 noundef %334, ptr noundef nonnull %325)
  br label %340

340:                                              ; preds = %331, %327, %316
  %341 = getelementptr inbounds %struct.basic_block_def, ptr %14, i64 0, i32 2
  %342 = load ptr, ptr %341, align 8, !tbaa !39
  call fastcc void @VEC_micro_operation_heap_safe_push(ptr noundef %342, ptr noundef nonnull %8)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #21
  br label %343

343:                                              ; preds = %308, %313, %340, %276, %276, %286, %271
  %344 = call fastcc i32 @use_type(ptr noundef nonnull %9, ptr noundef null, ptr noundef nonnull %7), !range !237
  %345 = icmp eq i32 %344, 0
  switch i32 %344, label %346 [
    i32 7, label %347
    i32 1, label %347
    i32 0, label %347
  ]

346:                                              ; preds = %343
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 5061, ptr noundef nonnull @.str.2) #21
  br label %351

347:                                              ; preds = %343, %343, %343
  br i1 %345, label %348, label %351

348:                                              ; preds = %347
  %349 = load i32, ptr %7, align 4, !tbaa !16
  %350 = call fastcc ptr @var_lowpart(i32 noundef %349, ptr noundef nonnull %9)
  br label %351

351:                                              ; preds = %346, %347, %348
  %352 = phi ptr [ %350, %348 ], [ %9, %347 ], [ %9, %346 ]
  %353 = load i32, ptr %9, align 8
  %354 = trunc i32 %353 to i16
  switch i16 %354, label %381 [
    i16 37, label %383
    i16 43, label %355
  ]

355:                                              ; preds = %351
  %356 = getelementptr inbounds %struct.rtx_def, ptr %9, i64 0, i32 1
  %357 = load ptr, ptr %356, align 8, !tbaa !16
  %358 = load i32, ptr %357, align 8
  %359 = lshr i32 %358, 16
  %360 = and i32 %359, 255
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %373

362:                                              ; preds = %355
  %363 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57, i32 1), align 8, !tbaa !238
  %364 = getelementptr inbounds %struct.rtx_def, ptr %9, i64 0, i32 1, i32 0, i32 0, i64 1
  %365 = load ptr, ptr %364, align 8, !tbaa !16
  %366 = icmp eq ptr %365, null
  br i1 %366, label %370, label %367

367:                                              ; preds = %362
  %368 = getelementptr inbounds %struct.mem_attrs, ptr %365, i64 0, i32 5
  %369 = load i8, ptr %368, align 8, !tbaa !250
  br label %370

370:                                              ; preds = %367, %362
  %371 = phi i8 [ %369, %367 ], [ 0, %362 ]
  %372 = call i32 %363(i8 noundef zeroext %371) #21
  br label %373

373:                                              ; preds = %370, %355
  %374 = phi i32 [ %372, %370 ], [ %360, %355 ]
  %375 = call ptr @cselib_lookup(ptr noundef nonnull %357, i32 noundef %374, i32 noundef 0) #21
  %376 = icmp eq ptr %375, null
  br i1 %376, label %383, label %377

377:                                              ; preds = %373
  %378 = getelementptr inbounds %struct.cselib_val_struct, ptr %375, i64 0, i32 2
  %379 = load ptr, ptr %378, align 8, !tbaa !128
  %380 = call ptr @replace_equiv_address_nv(ptr noundef nonnull %9, ptr noundef %379) #21
  br label %383

381:                                              ; preds = %351
  %382 = call ptr @cselib_subst_to_values(ptr noundef nonnull %9) #21
  br label %383

383:                                              ; preds = %351, %373, %377, %381
  %384 = phi ptr [ %382, %381 ], [ null, %351 ], [ %380, %377 ], [ null, %373 ]
  %385 = icmp eq ptr %384, null
  %386 = select i1 %385, ptr %9, ptr %384
  %387 = icmp eq ptr %352, %386
  br i1 %387, label %393, label %388

388:                                              ; preds = %383
  %389 = load i32, ptr %7, align 4, !tbaa !16
  %390 = getelementptr inbounds %struct.cselib_val_struct, ptr %272, i64 0, i32 2
  %391 = load ptr, ptr %390, align 8, !tbaa !128
  %392 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 41, i32 noundef %389, ptr noundef %391, ptr noundef %352) #21
  br label %396

393:                                              ; preds = %383
  %394 = getelementptr inbounds %struct.cselib_val_struct, ptr %272, i64 0, i32 2
  %395 = load ptr, ptr %394, align 8, !tbaa !128
  br label %396

396:                                              ; preds = %393, %388
  %397 = phi ptr [ %392, %388 ], [ %395, %393 ]
  %398 = load i32, ptr %3, align 4, !tbaa !16
  %399 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 41, i32 noundef %398, ptr noundef %397, ptr noundef nonnull %386) #21
  br i1 %345, label %400, label %403

400:                                              ; preds = %396
  %401 = load i32, ptr %399, align 8
  %402 = or i32 %401, 536870912
  store i32 %402, ptr %399, align 8
  br label %403

403:                                              ; preds = %400, %396
  %404 = call zeroext i8 @cselib_preserved_value_p(ptr noundef nonnull %272) #21
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %406, label %427

406:                                              ; preds = %403
  %407 = load i32, ptr %399, align 8
  %408 = or i32 %407, 134217728
  store i32 %408, ptr %399, align 8
  call void @cselib_preserve_value(ptr noundef nonnull %272) #21
  %409 = getelementptr inbounds %struct.cselib_val_struct, ptr %272, i64 0, i32 2
  %410 = load ptr, ptr %409, align 8, !tbaa !128
  %411 = load ptr, ptr @preserved_values, align 8, !tbaa !5
  %412 = icmp eq ptr %411, null
  br i1 %412, label %418, label %413

413:                                              ; preds = %406
  %414 = getelementptr inbounds %struct.VEC_rtx_base, ptr %411, i64 0, i32 1
  %415 = load i32, ptr %414, align 4, !tbaa !130
  %416 = load i32, ptr %411, align 8, !tbaa !42
  %417 = icmp eq i32 %415, %416
  br i1 %417, label %418, label %421

418:                                              ; preds = %413, %406
  %419 = call ptr @vec_heap_p_reserve(ptr noundef %411, i32 noundef 1) #21
  store ptr %419, ptr @preserved_values, align 8, !tbaa !5
  %420 = load i32, ptr %419, align 8, !tbaa !42
  br label %421

421:                                              ; preds = %413, %418
  %422 = phi i32 [ %416, %413 ], [ %420, %418 ]
  %423 = phi ptr [ %411, %413 ], [ %419, %418 ]
  %424 = add i32 %422, 1
  store i32 %424, ptr %423, align 8, !tbaa !42
  %425 = zext i32 %422 to i64
  %426 = getelementptr inbounds %struct.VEC_rtx_base, ptr %423, i64 0, i32 2, i64 %425
  store ptr %410, ptr %426, align 8, !tbaa !5
  br label %427

427:                                              ; preds = %421, %403
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  br label %431

428:                                              ; preds = %20
  %429 = icmp ult i32 %10, 2
  br i1 %429, label %431, label %430

430:                                              ; preds = %428
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 5098, ptr noundef nonnull @.str.2) #21
  br label %431

431:                                              ; preds = %16, %430, %428, %427, %232
  %432 = phi ptr [ %21, %428 ], [ %21, %430 ], [ %21, %427 ], [ %21, %232 ], [ %19, %16 ]
  %433 = phi ptr [ %9, %428 ], [ %9, %430 ], [ %399, %427 ], [ %233, %232 ], [ %18, %16 ]
  %434 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %435 = icmp eq ptr %434, null
  br i1 %435, label %460, label %436

436:                                              ; preds = %431
  %437 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %438 = and i32 %437, 8
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %460, label %440

440:                                              ; preds = %436
  %441 = load ptr, ptr %13, align 8, !tbaa !195
  %442 = load ptr, ptr %1, align 8, !tbaa !193
  %443 = getelementptr i8, ptr %441, i64 16
  %444 = load ptr, ptr %443, align 8, !tbaa !39
  %445 = getelementptr i8, ptr %441, i64 80
  %446 = load i32, ptr %445, align 8, !tbaa !38
  %447 = load ptr, ptr %444, align 8, !tbaa !62
  %448 = icmp eq ptr %447, null
  br i1 %448, label %451, label %449

449:                                              ; preds = %440
  %450 = load i32, ptr %447, align 8, !tbaa !64
  br label %451

451:                                              ; preds = %440, %449
  %452 = phi i32 [ %450, %449 ], [ 0, %440 ]
  %453 = getelementptr inbounds %struct.rtx_def, ptr %442, i64 0, i32 1
  %454 = load i32, ptr %453, align 8, !tbaa !16
  %455 = zext i32 %10 to i64
  %456 = getelementptr inbounds [10 x ptr], ptr @micro_operation_type_name, i64 0, i64 %455
  %457 = load ptr, ptr %456, align 8, !tbaa !5
  %458 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %434, ptr noundef nonnull @.str.11, i32 noundef %446, i32 noundef %452, i32 noundef %454, ptr noundef %457)
  call void @print_inline_rtx(ptr noundef nonnull %434, ptr noundef %433, i32 noundef 2) #21
  %459 = call i32 @fputc(i32 noundef 10, ptr noundef nonnull %434)
  br label %460

460:                                              ; preds = %451, %436, %431
  %461 = getelementptr inbounds %struct.basic_block_def, ptr %14, i64 0, i32 2
  %462 = load ptr, ptr %461, align 8, !tbaa !39
  %463 = load ptr, ptr %462, align 8, !tbaa !5
  %464 = icmp eq ptr %463, null
  br i1 %464, label %470, label %465

465:                                              ; preds = %460
  %466 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %463, i64 0, i32 1
  %467 = load i32, ptr %466, align 4, !tbaa !115
  %468 = load i32, ptr %463, align 8, !tbaa !64
  %469 = icmp eq i32 %467, %468
  br i1 %469, label %470, label %473

470:                                              ; preds = %465, %460
  %471 = call ptr @vec_heap_o_reserve(ptr noundef %463, i32 noundef 1, i64 noundef 8, i64 noundef 24) #21
  store ptr %471, ptr %462, align 8, !tbaa !5
  %472 = load i32, ptr %471, align 8, !tbaa !64
  br label %473

473:                                              ; preds = %465, %470
  %474 = phi i32 [ %468, %465 ], [ %472, %470 ]
  %475 = phi ptr [ %463, %465 ], [ %471, %470 ]
  %476 = add i32 %474, 1
  store i32 %476, ptr %475, align 8, !tbaa !64
  %477 = zext i32 %474 to i64
  %478 = getelementptr inbounds %struct.VEC_micro_operation_base, ptr %475, i64 0, i32 2, i64 %477
  store i32 %10, ptr %478, align 8, !tbaa.struct !116
  %479 = getelementptr inbounds i8, ptr %478, i64 8
  store ptr %432, ptr %479, align 8, !tbaa.struct !117
  %480 = getelementptr inbounds i8, ptr %478, i64 16
  store ptr %433, ptr %480, align 8, !tbaa.struct !118
  br label %481

481:                                              ; preds = %473, %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #21
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @use_type(ptr noundef %0, ptr noundef readonly %1, ptr noundef %2) unnamed_addr #9 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %101, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.count_use_info, ptr %1, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !196
  %8 = icmp eq ptr %7, null
  br i1 %8, label %101, label %9

9:                                                ; preds = %5
  %10 = load i32, ptr %0, align 8
  %11 = trunc i32 %10 to i16
  switch i16 %11, label %101 [
    i16 138, label %12
    i16 37, label %33
    i16 43, label %33
  ]

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !16
  %15 = tail call fastcc zeroext i8 @track_expr_p(ptr noundef %14, i8 noundef zeroext 0), !range !37
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %206, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %19 = load ptr, ptr %18, align 8, !tbaa !16
  %20 = load i32, ptr %19, align 8
  %21 = and i32 %20, 65535
  %22 = icmp eq i32 %21, 25
  br i1 %22, label %23, label %28

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.rtx_def, ptr %19, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !16
  %26 = load ptr, ptr getelementptr inbounds ([129 x ptr], ptr @const_int_rtx, i64 0, i64 64), align 16, !tbaa !5
  %27 = icmp eq ptr %25, %26
  br i1 %27, label %206, label %28

28:                                               ; preds = %23, %17
  %29 = load i32, ptr %0, align 8
  %30 = lshr i32 %29, 16
  %31 = and i32 %30, 255
  %32 = tail call ptr @cselib_lookup(ptr noundef nonnull %19, i32 noundef %31, i32 noundef 1) #21
  br label %206

33:                                               ; preds = %9, %9
  %34 = icmp eq ptr %2, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %33
  %36 = lshr i32 %10, 16
  %37 = and i32 %36, 255
  store i32 %37, ptr %2, align 4, !tbaa !16
  br label %38

38:                                               ; preds = %35, %33
  %39 = getelementptr inbounds %struct.count_use_info, ptr %1, i64 0, i32 4
  %40 = load i8, ptr %39, align 4, !tbaa !198
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %89, label %42

42:                                               ; preds = %38
  %43 = load i32, ptr %0, align 8
  %44 = and i32 %43, 65535
  %45 = icmp eq i32 %44, 37
  br i1 %45, label %206, label %46

46:                                               ; preds = %42
  %47 = load ptr, ptr %6, align 8, !tbaa !196
  %48 = icmp eq ptr %47, null
  br i1 %48, label %101, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.count_use_info, ptr %1, i64 0, i32 3
  %51 = load i32, ptr %50, align 8, !tbaa !197
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %101

53:                                               ; preds = %49
  %54 = zext i32 %51 to i64
  br label %58

55:                                               ; preds = %58
  %56 = add nuw nsw i64 %59, 1
  %57 = icmp eq i64 %56, %54
  br i1 %57, label %101, label %58, !llvm.loop !251

58:                                               ; preds = %55, %53
  %59 = phi i64 [ 0, %53 ], [ %56, %55 ]
  %60 = getelementptr inbounds %struct.cselib_set, ptr %47, i64 %59, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !252
  %62 = icmp eq ptr %61, %0
  br i1 %62, label %63, label %55

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.cselib_set, ptr %47, i64 %59, i32 2
  %65 = load ptr, ptr %64, align 8, !tbaa !254
  %66 = icmp eq ptr %65, null
  br i1 %66, label %101, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8, !tbaa !16
  %70 = load i32, ptr %69, align 8
  %71 = lshr i32 %70, 16
  %72 = and i32 %71, 255
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %85

74:                                               ; preds = %67
  %75 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57, i32 1), align 8, !tbaa !238
  %76 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %77 = load ptr, ptr %76, align 8, !tbaa !16
  %78 = icmp eq ptr %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %struct.mem_attrs, ptr %77, i64 0, i32 5
  %81 = load i8, ptr %80, align 8, !tbaa !250
  br label %82

82:                                               ; preds = %79, %74
  %83 = phi i8 [ %81, %79 ], [ 0, %74 ]
  %84 = tail call i32 %75(i8 noundef zeroext %83) #21
  br label %85

85:                                               ; preds = %67, %82
  %86 = phi i32 [ %84, %82 ], [ %72, %67 ]
  %87 = tail call ptr @cselib_lookup(ptr noundef nonnull %69, i32 noundef %86, i32 noundef 0) #21
  %88 = icmp eq ptr %87, null
  br i1 %88, label %101, label %206

89:                                               ; preds = %38
  %90 = load ptr, ptr %6, align 8, !tbaa !196
  %91 = icmp eq ptr %90, null
  br i1 %91, label %101, label %92

92:                                               ; preds = %89
  %93 = load i32, ptr %0, align 8
  %94 = lshr i32 %93, 16
  %95 = and i32 %94, 255
  %96 = tail call ptr @cselib_lookup(ptr noundef nonnull %0, i32 noundef %95, i32 noundef 0) #21
  %97 = icmp eq ptr %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %92
  %99 = tail call zeroext i8 @cselib_preserved_value_p(ptr noundef nonnull %96) #21
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %206, label %101

101:                                              ; preds = %55, %89, %49, %46, %92, %98, %9, %63, %85, %5, %3
  %102 = load i32, ptr %0, align 8
  %103 = trunc i32 %102 to i16
  switch i16 %103, label %206 [
    i16 37, label %104
    i16 43, label %157
  ]

104:                                              ; preds = %101
  %105 = getelementptr i8, ptr %0, i64 8
  %106 = load i32, ptr %105, align 8, !tbaa !16
  %107 = icmp ult i32 %106, 53
  br i1 %107, label %109, label %108

108:                                              ; preds = %104
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4817, ptr noundef nonnull @.str.2) #21
  br label %109

109:                                              ; preds = %104, %108
  %110 = load ptr, ptr @cfa_base_rtx, align 8, !tbaa !5
  %111 = icmp eq ptr %110, %0
  br i1 %111, label %206, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 2
  %114 = load ptr, ptr %113, align 8, !tbaa !16
  %115 = icmp eq ptr %114, null
  br i1 %115, label %206, label %116

116:                                              ; preds = %112
  %117 = load ptr, ptr %114, align 8, !tbaa !75
  %118 = icmp eq ptr %117, null
  br i1 %118, label %206, label %119

119:                                              ; preds = %116
  %120 = load i64, ptr %117, align 8
  %121 = and i64 %120, 65535
  %122 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !16
  %124 = icmp eq i32 %123, 3
  br i1 %124, label %125, label %142

125:                                              ; preds = %119
  %126 = getelementptr inbounds %struct.tree_decl_common, ptr %117, i64 0, i32 2
  %127 = load i64, ptr %126, align 8
  %128 = and i64 %127, 16384
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %142, label %130

130:                                              ; preds = %125
  %131 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %117) #21
  %132 = icmp eq ptr %131, null
  br i1 %132, label %142, label %133

133:                                              ; preds = %130
  %134 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %117) #21
  %135 = load i64, ptr %134, align 8
  %136 = and i64 %135, 65535
  %137 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %136
  %138 = load i32, ptr %137, align 4, !tbaa !16
  %139 = icmp eq i32 %138, 3
  br i1 %139, label %140, label %142

140:                                              ; preds = %133
  %141 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %117) #21
  br label %142

142:                                              ; preds = %119, %125, %130, %133, %140
  %143 = phi ptr [ %141, %140 ], [ %117, %133 ], [ %117, %130 ], [ %117, %125 ], [ %117, %119 ]
  %144 = tail call ptr @target_for_debug_bind(ptr noundef %143) #21
  %145 = icmp eq ptr %144, null
  br i1 %145, label %146, label %206

146:                                              ; preds = %142
  %147 = load ptr, ptr %113, align 8, !tbaa !16
  %148 = icmp eq ptr %147, null
  br i1 %148, label %152, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %struct.reg_attrs, ptr %147, i64 0, i32 1
  %151 = load i64, ptr %150, align 8, !tbaa !77
  br label %152

152:                                              ; preds = %146, %149
  %153 = phi i64 [ %151, %149 ], [ 0, %146 ]
  %154 = tail call fastcc zeroext i8 @track_loc_p(ptr noundef nonnull %0, ptr noundef nonnull %117, i64 noundef %153, ptr noundef %2, ptr noundef null)
  %155 = icmp eq i8 %154, 0
  %156 = zext i1 %155 to i32
  br label %206

157:                                              ; preds = %101
  %158 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %159 = load ptr, ptr %158, align 8, !tbaa !16
  %160 = icmp eq ptr %159, null
  br i1 %160, label %206, label %161

161:                                              ; preds = %157
  %162 = load ptr, ptr %159, align 8, !tbaa !135
  %163 = icmp eq ptr %162, null
  br i1 %163, label %206, label %164

164:                                              ; preds = %161
  %165 = load i64, ptr %162, align 8
  %166 = and i64 %165, 65535
  %167 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %166
  %168 = load i32, ptr %167, align 4, !tbaa !16
  %169 = icmp eq i32 %168, 3
  br i1 %169, label %170, label %187

170:                                              ; preds = %164
  %171 = getelementptr inbounds %struct.tree_decl_common, ptr %162, i64 0, i32 2
  %172 = load i64, ptr %171, align 8
  %173 = and i64 %172, 16384
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %187, label %175

175:                                              ; preds = %170
  %176 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %162) #21
  %177 = icmp eq ptr %176, null
  br i1 %177, label %187, label %178

178:                                              ; preds = %175
  %179 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %162) #21
  %180 = load i64, ptr %179, align 8
  %181 = and i64 %180, 65535
  %182 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %181
  %183 = load i32, ptr %182, align 4, !tbaa !16
  %184 = icmp eq i32 %183, 3
  br i1 %184, label %185, label %187

185:                                              ; preds = %178
  %186 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %162) #21
  br label %187

187:                                              ; preds = %164, %170, %175, %178, %185
  %188 = phi ptr [ %186, %185 ], [ %162, %178 ], [ %162, %175 ], [ %162, %170 ], [ %162, %164 ]
  %189 = tail call ptr @target_for_debug_bind(ptr noundef %188) #21
  %190 = icmp eq ptr %189, null
  br i1 %190, label %191, label %206

191:                                              ; preds = %187
  %192 = load ptr, ptr %158, align 8, !tbaa !16
  %193 = icmp eq ptr %192, null
  br i1 %193, label %201, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %struct.mem_attrs, ptr %192, i64 0, i32 1
  %196 = load ptr, ptr %195, align 8, !tbaa !137
  %197 = icmp eq ptr %196, null
  br i1 %197, label %201, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %struct.rtx_def, ptr %196, i64 0, i32 1
  %200 = load i64, ptr %199, align 8, !tbaa !16
  br label %201

201:                                              ; preds = %194, %191, %198
  %202 = phi i64 [ %200, %198 ], [ 0, %191 ], [ 0, %194 ]
  %203 = tail call fastcc zeroext i8 @track_loc_p(ptr noundef nonnull %0, ptr noundef nonnull %162, i64 noundef %202, ptr noundef %2, ptr noundef null)
  %204 = icmp eq i8 %203, 0
  %205 = select i1 %204, i32 7, i32 0
  br label %206

206:                                              ; preds = %157, %112, %101, %201, %187, %161, %152, %142, %116, %109, %98, %42, %85, %12, %23, %28
  %207 = phi i32 [ 3, %28 ], [ 3, %23 ], [ 7, %12 ], [ 4, %85 ], [ 4, %42 ], [ 2, %98 ], [ 7, %109 ], [ 1, %116 ], [ 7, %142 ], [ %156, %152 ], [ 7, %161 ], [ 7, %187 ], [ %205, %201 ], [ 7, %101 ], [ 1, %112 ], [ 7, %157 ]
  ret i32 %207
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @var_lowpart(i32 noundef %0, ptr noundef %1) unnamed_addr #9 {
  %3 = load i32, ptr %1, align 8
  %4 = trunc i32 %3 to i16
  switch i16 %4, label %29 [
    i16 37, label %5
    i16 43, label %5
  ]

5:                                                ; preds = %2, %2
  %6 = lshr i32 %3, 16
  %7 = and i32 %6, 255
  %8 = icmp eq i32 %7, %0
  br i1 %8, label %29, label %9

9:                                                ; preds = %5
  %10 = tail call i32 @byte_lowpart_offset(i32 noundef %0, i32 noundef %7) #21
  %11 = load i32, ptr %1, align 8
  %12 = and i32 %11, 65535
  %13 = icmp eq i32 %12, 43
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = zext i32 %10 to i64
  %16 = tail call ptr @adjust_address_1(ptr noundef nonnull %1, i32 noundef %0, i64 noundef %15, i32 noundef 0, i32 noundef 1) #21
  br label %29

17:                                               ; preds = %9
  %18 = lshr i32 %11, 16
  %19 = and i32 %18, 255
  %20 = tail call i32 @subreg_lowpart_offset(i32 noundef %0, i32 noundef %19) #21
  %21 = getelementptr i8, ptr %1, i64 8
  %22 = load i32, ptr %21, align 8, !tbaa !16
  %23 = load i32, ptr %1, align 8
  %24 = lshr i32 %23, 16
  %25 = and i32 %24, 255
  %26 = tail call i32 @subreg_regno_offset(i32 noundef %22, i32 noundef %25, i32 noundef %20, i32 noundef %0) #21
  %27 = add i32 %26, %22
  %28 = tail call ptr @gen_rtx_REG_offset(ptr noundef nonnull %1, i32 noundef %0, i32 noundef %27, i32 noundef %10) #21
  br label %29

29:                                               ; preds = %5, %2, %17, %14
  %30 = phi ptr [ %16, %14 ], [ %28, %17 ], [ null, %2 ], [ %1, %5 ]
  ret ptr %30
}

declare ptr @cselib_lookup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare zeroext i8 @cselib_preserved_value_p(ptr noundef) local_unnamed_addr #3

declare ptr @cselib_subst_to_values(ptr noundef) local_unnamed_addr #3

declare ptr @gen_rtx_fmt_ee_stat(i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @non_suitable_const(ptr nocapture noundef readonly %0, ptr nocapture readnone %1) #11 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = load i32, ptr %3, align 8
  %7 = trunc i32 %6 to i16
  switch i16 %7, label %12 [
    i16 37, label %13
    i16 2, label %13
    i16 36, label %13
    i16 38, label %13
    i16 46, label %13
    i16 16, label %13
    i16 17, label %13
    i16 43, label %8
  ]

8:                                                ; preds = %5
  %9 = lshr i32 %6, 26
  %10 = and i32 %9, 1
  %11 = xor i32 %10, 1
  br label %13

12:                                               ; preds = %5
  br label %13

13:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %2, %12, %8
  %14 = phi i32 [ 0, %12 ], [ %11, %8 ], [ 0, %2 ], [ 1, %5 ], [ 1, %5 ], [ 1, %5 ], [ 1, %5 ], [ 1, %5 ], [ 1, %5 ], [ 1, %5 ]
  ret i32 %14
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @replace_expr_with_values(ptr noundef %0) unnamed_addr #9 {
  %2 = load i32, ptr %0, align 8
  %3 = trunc i32 %2 to i16
  switch i16 %3, label %30 [
    i16 37, label %32
    i16 43, label %4
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !16
  %7 = load i32, ptr %6, align 8
  %8 = lshr i32 %7, 16
  %9 = and i32 %8, 255
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %4
  %12 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 57, i32 1), align 8, !tbaa !238
  %13 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %14 = load ptr, ptr %13, align 8, !tbaa !16
  %15 = icmp eq ptr %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.mem_attrs, ptr %14, i64 0, i32 5
  %18 = load i8, ptr %17, align 8, !tbaa !250
  br label %19

19:                                               ; preds = %16, %11
  %20 = phi i8 [ %18, %16 ], [ 0, %11 ]
  %21 = tail call i32 %12(i8 noundef zeroext %20) #21
  br label %22

22:                                               ; preds = %4, %19
  %23 = phi i32 [ %21, %19 ], [ %9, %4 ]
  %24 = tail call ptr @cselib_lookup(ptr noundef nonnull %6, i32 noundef %23, i32 noundef 0) #21
  %25 = icmp eq ptr %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.cselib_val_struct, ptr %24, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !128
  %29 = tail call ptr @replace_equiv_address_nv(ptr noundef nonnull %0, ptr noundef %28) #21
  br label %32

30:                                               ; preds = %1
  %31 = tail call ptr @cselib_subst_to_values(ptr noundef nonnull %0) #21
  br label %32

32:                                               ; preds = %26, %22, %1, %30
  %33 = phi ptr [ %31, %30 ], [ null, %1 ], [ %29, %26 ], [ null, %22 ]
  ret ptr %33
}

declare ptr @shallow_copy_rtx_stat(ptr noundef) local_unnamed_addr #3

declare ptr @gen_rtx_fmt_e_stat(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @track_expr_p(ptr noundef %0, i8 noundef zeroext %1) unnamed_addr #9 {
  %3 = load i64, ptr %0, align 8
  %4 = trunc i64 %3 to i16
  switch i16 %4, label %120 [
    i16 37, label %5
    i16 32, label %13
    i16 34, label %13
  ]

5:                                                ; preds = %2
  %6 = load i8, ptr getelementptr inbounds ([191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 37, i64 11), align 1, !tbaa !16
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %120, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !16
  %11 = icmp ne ptr %10, null
  %12 = zext i1 %11 to i8
  br label %120

13:                                               ; preds = %2, %2
  %14 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !16
  %16 = icmp eq ptr %15, null
  %17 = icmp ne i8 %1, 0
  %18 = and i1 %17, %16
  br i1 %18, label %120, label %19

19:                                               ; preds = %13
  %20 = and i64 %3, 65535
  %21 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %20, i64 11
  %22 = load i8, ptr %21, align 1, !tbaa !16
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %0, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !16
  br label %27

27:                                               ; preds = %24, %19
  %28 = phi ptr [ null, %19 ], [ %26, %24 ]
  %29 = icmp eq ptr %28, null
  %30 = and i1 %17, %29
  br i1 %30, label %120, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %33 = load i64, ptr %32, align 8
  %34 = and i64 %33, 16384
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %31
  %37 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %0) #21
  %38 = icmp eq ptr %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %36
  %40 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %0) #21
  %41 = load i64, ptr %40, align 8
  %42 = and i64 %41, 65535
  %43 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %42
  %44 = load i32, ptr %43, align 4, !tbaa !16
  %45 = icmp eq i32 %44, 3
  br i1 %45, label %46, label %120

46:                                               ; preds = %39, %36, %31
  %47 = phi ptr [ %40, %39 ], [ %0, %36 ], [ %0, %31 ]
  %48 = getelementptr inbounds %struct.tree_decl_common, ptr %47, i64 0, i32 2
  %49 = load i64, ptr %48, align 8
  %50 = and i64 %49, 1024
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %120

52:                                               ; preds = %46
  %53 = load i64, ptr %47, align 8
  %54 = and i64 %53, 67108864
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %120

56:                                               ; preds = %52
  br i1 %29, label %115, label %57

57:                                               ; preds = %56
  %58 = load i32, ptr %28, align 8
  %59 = and i32 %58, 65535
  %60 = icmp eq i32 %59, 43
  br i1 %60, label %61, label %115

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.rtx_def, ptr %28, i64 0, i32 1
  %63 = load ptr, ptr %62, align 8, !tbaa !16
  %64 = tail call fastcc zeroext i8 @contains_symbol_ref(ptr noundef %63)
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %120

66:                                               ; preds = %61
  %67 = lshr i32 %58, 16
  %68 = and i32 %67, 255
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %120, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.tree_common, ptr %47, i64 0, i32 2
  %72 = load ptr, ptr %71, align 8, !tbaa !16
  %73 = load i64, ptr %72, align 8
  %74 = trunc i64 %73 to i32
  %75 = and i32 %74, 65535
  %76 = add nsw i32 %75, -15
  %77 = icmp ult i32 %76, 4
  br i1 %77, label %120, label %78

78:                                               ; preds = %70
  %79 = getelementptr inbounds %struct.rtx_def, ptr %28, i64 0, i32 1, i32 0, i32 0, i64 1
  %80 = load ptr, ptr %79, align 8, !tbaa !16
  %81 = icmp eq ptr %80, null
  br i1 %81, label %86, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.mem_attrs, ptr %80, i64 0, i32 2
  %84 = load ptr, ptr %83, align 8, !tbaa !255
  %85 = icmp eq ptr %84, null
  br i1 %85, label %115, label %96

86:                                               ; preds = %78
  %87 = zext i32 %68 to i64
  %88 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %87
  %89 = load i8, ptr %88, align 1, !tbaa !16
  %90 = zext i8 %89 to i64
  %91 = tail call ptr @gen_rtx_CONST_INT(i32 noundef 0, i64 noundef %90) #21
  %92 = icmp eq ptr %91, null
  br i1 %92, label %115, label %93

93:                                               ; preds = %86
  %94 = load ptr, ptr %79, align 8, !tbaa !16
  %95 = icmp eq ptr %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %82, %93
  %97 = phi ptr [ %94, %93 ], [ %80, %82 ]
  %98 = getelementptr inbounds %struct.mem_attrs, ptr %97, i64 0, i32 2
  %99 = load ptr, ptr %98, align 8, !tbaa !255
  br label %110

100:                                              ; preds = %93
  %101 = load i32, ptr %28, align 8
  %102 = lshr i32 %101, 16
  %103 = and i32 %102, 255
  %104 = icmp ne i32 %103, 1
  tail call void @llvm.assume(i1 %104)
  %105 = zext i32 %103 to i64
  %106 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %105
  %107 = load i8, ptr %106, align 1, !tbaa !16
  %108 = zext i8 %107 to i64
  %109 = tail call ptr @gen_rtx_CONST_INT(i32 noundef 0, i64 noundef %108) #21
  br label %110

110:                                              ; preds = %100, %96
  %111 = phi ptr [ %99, %96 ], [ %109, %100 ]
  %112 = getelementptr inbounds %struct.rtx_def, ptr %111, i64 0, i32 1
  %113 = load i64, ptr %112, align 8, !tbaa !16
  %114 = icmp sgt i64 %113, 16
  br i1 %114, label %120, label %115

115:                                              ; preds = %57, %56, %82, %86, %110
  %116 = load i64, ptr %0, align 8
  %117 = and i64 %116, -1099511627777
  store i64 %117, ptr %0, align 8
  %118 = load i64, ptr %47, align 8
  %119 = and i64 %118, -1099511627777
  store i64 %119, ptr %47, align 8
  br label %120

120:                                              ; preds = %70, %110, %66, %61, %52, %46, %39, %27, %13, %2, %5, %8, %115
  %121 = phi i8 [ 1, %115 ], [ 0, %5 ], [ %12, %8 ], [ 0, %2 ], [ 0, %13 ], [ 0, %27 ], [ 0, %39 ], [ 0, %46 ], [ 0, %52 ], [ 0, %61 ], [ 0, %70 ], [ 0, %66 ], [ 0, %110 ]
  ret i8 %121
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @track_loc_p(ptr nocapture noundef readonly %0, ptr noundef %1, i64 noundef %2, ptr noundef writeonly %3, ptr noundef writeonly %4) unnamed_addr #9 {
  %6 = tail call fastcc zeroext i8 @track_expr_p(ptr noundef %1, i8 noundef zeroext 1), !range !37
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %70, label %8

8:                                                ; preds = %5
  %9 = load i32, ptr %0, align 8
  %10 = lshr i32 %9, 16
  %11 = and i32 %10, 255
  %12 = and i32 %9, 65535
  %13 = icmp eq i32 %12, 37
  br i1 %13, label %14, label %37

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %16 = load i32, ptr %15, align 8, !tbaa !16
  %17 = icmp ult i32 %16, 53
  br i1 %17, label %37, label %18

18:                                               ; preds = %14
  %19 = load ptr, ptr @regno_reg_rtx, align 8, !tbaa !5
  %20 = zext i32 %16 to i64
  %21 = getelementptr inbounds ptr, ptr %19, i64 %20
  %22 = load ptr, ptr %21, align 8, !tbaa !5
  %23 = load i32, ptr %22, align 8
  %24 = lshr i32 %23, 16
  %25 = and i32 %24, 255
  %26 = zext i32 %11 to i64
  %27 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %26
  %28 = load i8, ptr %27, align 1, !tbaa !16
  %29 = zext i32 %25 to i64
  %30 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !16
  %32 = icmp ugt i8 %28, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %18
  %34 = tail call i32 @byte_lowpart_offset(i32 noundef %25, i32 noundef %11) #21
  %35 = sext i32 %34 to i64
  %36 = add nsw i64 %35, %2
  br label %37

37:                                               ; preds = %18, %33, %14, %8
  %38 = phi i64 [ %2, %14 ], [ %2, %8 ], [ %36, %33 ], [ %2, %18 ]
  %39 = phi i32 [ %11, %14 ], [ %11, %8 ], [ %25, %33 ], [ %11, %18 ]
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %40
  %42 = load i8, ptr %41, align 1, !tbaa !16
  %43 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %44 = load i64, ptr %43, align 8
  %45 = and i64 %44, 255
  %46 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %45
  %47 = load i8, ptr %46, align 1, !tbaa !16
  %48 = icmp ugt i8 %42, %47
  br i1 %48, label %49, label %60

49:                                               ; preds = %37
  %50 = trunc i64 %44 to i32
  %51 = and i32 %50, 255
  %52 = tail call i32 @byte_lowpart_offset(i32 noundef %51, i32 noundef %39) #21
  %53 = sext i32 %52 to i64
  %54 = sub nsw i64 0, %53
  %55 = icmp eq i64 %38, %54
  br i1 %55, label %56, label %60

56:                                               ; preds = %49
  %57 = load i64, ptr %43, align 8
  %58 = trunc i64 %57 to i32
  %59 = and i32 %58, 255
  br label %62

60:                                               ; preds = %37, %49
  %61 = icmp ugt i64 %38, 15
  br i1 %61, label %70, label %62

62:                                               ; preds = %56, %60
  %63 = phi i32 [ %59, %56 ], [ %39, %60 ]
  %64 = phi i64 [ 0, %56 ], [ %38, %60 ]
  %65 = icmp eq ptr %3, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %62
  store i32 %63, ptr %3, align 4, !tbaa !16
  br label %67

67:                                               ; preds = %66, %62
  %68 = icmp eq ptr %4, null
  br i1 %68, label %70, label %69

69:                                               ; preds = %67
  store i64 %64, ptr %4, align 8, !tbaa !70
  br label %70

70:                                               ; preds = %67, %69, %60, %5
  %71 = phi i8 [ 0, %5 ], [ 0, %60 ], [ 1, %69 ], [ 1, %67 ]
  ret i8 %71
}

; Function Attrs: nofree nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define internal fastcc zeroext i8 @contains_symbol_ref(ptr noundef readonly %0) unnamed_addr #16 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %45, label %3

3:                                                ; preds = %1
  %4 = load i32, ptr %0, align 8
  %5 = and i32 %4, 65535
  %6 = icmp eq i32 %5, 45
  br i1 %6, label %45, label %7

7:                                                ; preds = %3
  %8 = zext i32 %5 to i64
  %9 = getelementptr inbounds [139 x ptr], ptr @rtx_format, i64 0, i64 %8
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  %11 = getelementptr inbounds [139 x i8], ptr @rtx_length, i64 0, i64 %8
  %12 = load i8, ptr %11, align 1, !tbaa !16
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %45, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %16 = zext i8 %12 to i64
  br label %17

17:                                               ; preds = %14, %43
  %18 = phi i64 [ %16, %14 ], [ %19, %43 ]
  %19 = add nsw i64 %18, -1
  %20 = getelementptr inbounds i8, ptr %10, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !16
  switch i8 %21, label %43 [
    i8 101, label %29
    i8 69, label %22
  ]

22:                                               ; preds = %17
  %23 = getelementptr inbounds [1 x %union.rtunion_def], ptr %15, i64 0, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !16
  %25 = load i32, ptr %24, align 8, !tbaa !101
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %43

27:                                               ; preds = %22
  %28 = zext i32 %25 to i64
  br label %37

29:                                               ; preds = %17
  %30 = getelementptr inbounds [1 x %union.rtunion_def], ptr %15, i64 0, i64 %19
  %31 = load ptr, ptr %30, align 8, !tbaa !16
  %32 = tail call fastcc zeroext i8 @contains_symbol_ref(ptr noundef %31)
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %43, label %45

34:                                               ; preds = %37
  %35 = add nuw nsw i64 %38, 1
  %36 = icmp eq i64 %35, %28
  br i1 %36, label %43, label %37, !llvm.loop !256

37:                                               ; preds = %27, %34
  %38 = phi i64 [ 0, %27 ], [ %35, %34 ]
  %39 = getelementptr inbounds %struct.rtvec_def, ptr %24, i64 0, i32 1, i64 %38
  %40 = load ptr, ptr %39, align 8, !tbaa !5
  %41 = tail call fastcc zeroext i8 @contains_symbol_ref(ptr noundef %40)
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %34, label %45

43:                                               ; preds = %34, %22, %17, %29
  %44 = icmp sgt i64 %18, 1
  br i1 %44, label %17, label %45, !llvm.loop !257

45:                                               ; preds = %29, %43, %37, %7, %3, %1
  %46 = phi i8 [ 0, %1 ], [ 1, %3 ], [ 0, %7 ], [ 1, %37 ], [ 1, %29 ], [ 0, %43 ]
  ret i8 %46
}

declare ptr @gen_rtx_CONST_INT(i32 noundef, i64 noundef) local_unnamed_addr #3

declare i32 @byte_lowpart_offset(i32 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @adjust_address_1(ptr noundef, i32 noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare i32 @subreg_lowpart_offset(i32 noundef, i32 noundef) local_unnamed_addr #3

declare i32 @subreg_regno_offset(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @gen_rtx_REG_offset(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @replace_equiv_address_nv(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @same_variable_part_p(ptr nocapture noundef readonly %0, ptr noundef %1, i64 noundef %2) unnamed_addr #9 {
  %4 = load i64, ptr %1, align 8
  %5 = and i64 %4, 65535
  %6 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %5
  %7 = load i32, ptr %6, align 4, !tbaa !16
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %91

9:                                                ; preds = %3
  %10 = load i32, ptr %0, align 8
  %11 = trunc i32 %10 to i16
  switch i16 %11, label %91 [
    i16 37, label %12
    i16 43, label %19
  ]

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 2
  %14 = load ptr, ptr %13, align 8, !tbaa !16
  %15 = icmp eq ptr %14, null
  br i1 %15, label %91, label %16

16:                                               ; preds = %12
  %17 = load ptr, ptr %14, align 8, !tbaa !75
  %18 = getelementptr inbounds %struct.reg_attrs, ptr %14, i64 0, i32 1
  br label %30

19:                                               ; preds = %9
  %20 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %21 = load ptr, ptr %20, align 8, !tbaa !16
  %22 = icmp eq ptr %21, null
  br i1 %22, label %91, label %23

23:                                               ; preds = %19
  %24 = load ptr, ptr %21, align 8, !tbaa !135
  %25 = getelementptr inbounds %struct.mem_attrs, ptr %21, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !137
  %27 = icmp eq ptr %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.rtx_def, ptr %26, i64 0, i32 1
  br label %30

30:                                               ; preds = %16, %28
  %31 = phi ptr [ %29, %28 ], [ %18, %16 ]
  %32 = phi ptr [ %24, %28 ], [ %17, %16 ]
  %33 = load i64, ptr %31, align 8, !tbaa !16
  br label %34

34:                                               ; preds = %30, %23
  %35 = phi ptr [ %24, %23 ], [ %32, %30 ]
  %36 = phi i64 [ 0, %23 ], [ %33, %30 ]
  %37 = icmp eq ptr %35, null
  br i1 %37, label %91, label %38

38:                                               ; preds = %34
  %39 = load i64, ptr %35, align 8
  %40 = and i64 %39, 65535
  %41 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %40
  %42 = load i32, ptr %41, align 4, !tbaa !16
  %43 = icmp eq i32 %42, 3
  br i1 %43, label %44, label %91

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %46 = load i64, ptr %45, align 8
  %47 = and i64 %46, 16384
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %61, label %49

49:                                               ; preds = %44
  %50 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %1) #21
  %51 = icmp eq ptr %50, null
  br i1 %51, label %61, label %52

52:                                               ; preds = %49
  %53 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %1) #21
  %54 = load i64, ptr %53, align 8
  %55 = and i64 %54, 65535
  %56 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %55
  %57 = load i32, ptr %56, align 4, !tbaa !16
  %58 = icmp eq i32 %57, 3
  br i1 %58, label %59, label %61

59:                                               ; preds = %52
  %60 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %1) #21
  br label %61

61:                                               ; preds = %59, %52, %49, %44
  %62 = phi ptr [ %60, %59 ], [ %1, %52 ], [ %1, %49 ], [ %1, %44 ]
  %63 = load i64, ptr %35, align 8
  %64 = and i64 %63, 65535
  %65 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %64
  %66 = load i32, ptr %65, align 4, !tbaa !16
  %67 = icmp eq i32 %66, 3
  br i1 %67, label %68, label %85

68:                                               ; preds = %61
  %69 = getelementptr inbounds %struct.tree_decl_common, ptr %35, i64 0, i32 2
  %70 = load i64, ptr %69, align 8
  %71 = and i64 %70, 16384
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %85, label %73

73:                                               ; preds = %68
  %74 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %35) #21
  %75 = icmp eq ptr %74, null
  br i1 %75, label %85, label %76

76:                                               ; preds = %73
  %77 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %35) #21
  %78 = load i64, ptr %77, align 8
  %79 = and i64 %78, 65535
  %80 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %79
  %81 = load i32, ptr %80, align 4, !tbaa !16
  %82 = icmp eq i32 %81, 3
  br i1 %82, label %83, label %85

83:                                               ; preds = %76
  %84 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %35) #21
  br label %85

85:                                               ; preds = %61, %68, %73, %76, %83
  %86 = phi ptr [ %84, %83 ], [ %35, %76 ], [ %35, %73 ], [ %35, %68 ], [ %35, %61 ]
  %87 = icmp eq ptr %62, %86
  %88 = icmp eq i64 %36, %2
  %89 = select i1 %87, i1 %88, i1 false
  %90 = zext i1 %89 to i8
  br label %91

91:                                               ; preds = %19, %12, %34, %38, %9, %3, %85
  %92 = phi i8 [ %90, %85 ], [ 0, %3 ], [ 0, %9 ], [ 0, %38 ], [ 0, %34 ], [ 0, %12 ], [ 0, %19 ]
  ret i8 %92
}

declare ptr @gen_lowpart_SUBREG(i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @cselib_expand_value_rtx(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @simplify_gen_binary(i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @find_reg_note(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @stack_adjust_offset_pre_post(ptr readonly %0, ptr nocapture readonly %1, ptr nocapture noundef %2, ptr nocapture noundef %3) unnamed_addr #9 {
  %5 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 2), align 16, !tbaa !5
  %6 = icmp eq ptr %5, %0
  br i1 %6, label %7, label %31

7:                                                ; preds = %4
  %8 = load i32, ptr %1, align 8
  %9 = and i32 %8, 65535
  %10 = icmp eq i32 %9, 50
  %11 = add nsw i32 %9, -49
  %12 = icmp ult i32 %11, 2
  br i1 %12, label %13, label %120

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !16
  %16 = icmp eq ptr %15, %0
  br i1 %16, label %17, label %120

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 1
  %19 = load ptr, ptr %18, align 8, !tbaa !16
  %20 = load i32, ptr %19, align 8
  %21 = and i32 %20, 65535
  %22 = icmp eq i32 %21, 30
  br i1 %22, label %23, label %120

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.rtx_def, ptr %19, i64 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !16
  %26 = load i64, ptr %3, align 8, !tbaa !70
  br i1 %10, label %27, label %29

27:                                               ; preds = %23
  %28 = add nsw i64 %26, %25
  store i64 %28, ptr %3, align 8, !tbaa !70
  br label %120

29:                                               ; preds = %23
  %30 = sub nsw i64 %26, %25
  store i64 %30, ptr %3, align 8, !tbaa !70
  br label %120

31:                                               ; preds = %4
  %32 = load i32, ptr %0, align 8
  %33 = and i32 %32, 65535
  %34 = icmp eq i32 %33, 43
  br i1 %34, label %35, label %120

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !16
  %38 = load i32, ptr %37, align 8
  %39 = and i32 %38, 65535
  %40 = trunc i32 %38 to i16
  switch i16 %40, label %120 [
    i16 78, label %41
    i16 79, label %41
    i16 74, label %68
    i16 76, label %81
    i16 75, label %94
    i16 77, label %107
  ]

41:                                               ; preds = %35, %35
  %42 = getelementptr inbounds %struct.rtx_def, ptr %37, i64 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !16
  %44 = icmp eq ptr %43, %5
  br i1 %44, label %45, label %120

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.rtx_def, ptr %37, i64 0, i32 1, i32 0, i32 0, i64 1
  %47 = load ptr, ptr %46, align 8, !tbaa !16
  %48 = getelementptr inbounds %struct.rtx_def, ptr %47, i64 0, i32 1, i32 0, i32 0, i64 1
  %49 = load ptr, ptr %48, align 8, !tbaa !16
  %50 = load i32, ptr %47, align 8
  %51 = and i32 %50, 65535
  %52 = icmp eq i32 %51, 49
  br i1 %52, label %53, label %57

53:                                               ; preds = %45
  %54 = load i32, ptr %49, align 8
  %55 = and i32 %54, 65535
  %56 = icmp eq i32 %55, 30
  br i1 %56, label %58, label %57

57:                                               ; preds = %53, %45
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 537, ptr noundef nonnull @.str.2) #21
  br label %58

58:                                               ; preds = %53, %57
  %59 = icmp eq i32 %39, 78
  %60 = getelementptr inbounds %struct.rtx_def, ptr %49, i64 0, i32 1
  %61 = load i64, ptr %60, align 8, !tbaa !16
  br i1 %59, label %62, label %65

62:                                               ; preds = %58
  %63 = load i64, ptr %2, align 8, !tbaa !70
  %64 = sub nsw i64 %63, %61
  store i64 %64, ptr %2, align 8, !tbaa !70
  br label %120

65:                                               ; preds = %58
  %66 = load i64, ptr %3, align 8, !tbaa !70
  %67 = sub nsw i64 %66, %61
  store i64 %67, ptr %3, align 8, !tbaa !70
  br label %120

68:                                               ; preds = %35
  %69 = getelementptr inbounds %struct.rtx_def, ptr %37, i64 0, i32 1
  %70 = load ptr, ptr %69, align 8, !tbaa !16
  %71 = icmp eq ptr %70, %5
  br i1 %71, label %72, label %120

72:                                               ; preds = %68
  %73 = lshr i32 %32, 16
  %74 = and i32 %73, 255
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %75
  %77 = load i8, ptr %76, align 1, !tbaa !16
  %78 = zext i8 %77 to i64
  %79 = load i64, ptr %2, align 8, !tbaa !70
  %80 = add nsw i64 %79, %78
  store i64 %80, ptr %2, align 8, !tbaa !70
  br label %120

81:                                               ; preds = %35
  %82 = getelementptr inbounds %struct.rtx_def, ptr %37, i64 0, i32 1
  %83 = load ptr, ptr %82, align 8, !tbaa !16
  %84 = icmp eq ptr %83, %5
  br i1 %84, label %85, label %120

85:                                               ; preds = %81
  %86 = lshr i32 %32, 16
  %87 = and i32 %86, 255
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %88
  %90 = load i8, ptr %89, align 1, !tbaa !16
  %91 = zext i8 %90 to i64
  %92 = load i64, ptr %3, align 8, !tbaa !70
  %93 = add nsw i64 %92, %91
  store i64 %93, ptr %3, align 8, !tbaa !70
  br label %120

94:                                               ; preds = %35
  %95 = getelementptr inbounds %struct.rtx_def, ptr %37, i64 0, i32 1
  %96 = load ptr, ptr %95, align 8, !tbaa !16
  %97 = icmp eq ptr %96, %5
  br i1 %97, label %98, label %120

98:                                               ; preds = %94
  %99 = lshr i32 %32, 16
  %100 = and i32 %99, 255
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %101
  %103 = load i8, ptr %102, align 1, !tbaa !16
  %104 = zext i8 %103 to i64
  %105 = load i64, ptr %2, align 8, !tbaa !70
  %106 = sub nsw i64 %105, %104
  store i64 %106, ptr %2, align 8, !tbaa !70
  br label %120

107:                                              ; preds = %35
  %108 = getelementptr inbounds %struct.rtx_def, ptr %37, i64 0, i32 1
  %109 = load ptr, ptr %108, align 8, !tbaa !16
  %110 = icmp eq ptr %109, %5
  br i1 %110, label %111, label %120

111:                                              ; preds = %107
  %112 = lshr i32 %32, 16
  %113 = and i32 %112, 255
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %114
  %116 = load i8, ptr %115, align 1, !tbaa !16
  %117 = zext i8 %116 to i64
  %118 = load i64, ptr %3, align 8, !tbaa !70
  %119 = sub nsw i64 %118, %117
  store i64 %119, ptr %3, align 8, !tbaa !70
  br label %120

120:                                              ; preds = %29, %27, %72, %85, %98, %111, %31, %65, %62, %35, %107, %94, %81, %68, %41, %13, %17, %7
  ret void
}

declare void @print_inline_rtx(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @fputc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #1

declare ptr @vec_heap_o_reserve(ptr noundef, i32 noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @adjust_mem_stores(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2) #9 {
  %4 = load i32, ptr %0, align 8
  %5 = and i32 %4, 65535
  %6 = icmp eq i32 %5, 43
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !16
  %10 = tail call ptr @simplify_replace_fn_rtx(ptr noundef %9, ptr noundef null, ptr noundef nonnull @adjust_mems, ptr noundef %2) #21
  %11 = load ptr, ptr %8, align 8, !tbaa !16
  %12 = icmp eq ptr %10, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i8 @validate_change(ptr noundef null, ptr noundef nonnull %8, ptr noundef %10, i8 noundef zeroext 1) #21
  br label %15

15:                                               ; preds = %7, %13, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @adjust_mem_uses(ptr noundef %0, ptr noundef %1) #9 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = tail call ptr @simplify_replace_fn_rtx(ptr noundef %3, ptr noundef null, ptr noundef nonnull @adjust_mems, ptr noundef %1) #21
  %5 = load ptr, ptr %0, align 8, !tbaa !5
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call zeroext i8 @validate_change(ptr noundef null, ptr noundef nonnull %0, ptr noundef %4, i8 noundef zeroext 1) #21
  br label %9

9:                                                ; preds = %7, %2
  ret void
}

declare ptr @single_set_2(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @find_reg_equal_equiv_note(ptr noundef) local_unnamed_addr #3

declare zeroext i8 @validate_change(ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

declare ptr @gen_rtx_fmt_E_stat(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @rtvec_alloc(i32 noundef) local_unnamed_addr #3

declare void @free_EXPR_LIST_list(ptr noundef) local_unnamed_addr #3

declare ptr @simplify_replace_fn_rtx(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal ptr @adjust_mems(ptr noundef %0, ptr noundef %1, ptr noundef %2) #9 {
  %4 = load i32, ptr %0, align 8
  %5 = trunc i32 %4 to i16
  switch i16 %5, label %243 [
    i16 37, label %6
    i16 43, label %37
    i16 75, label %79
    i16 74, label %79
    i16 77, label %97
    i16 76, label %97
    i16 78, label %136
    i16 79, label %140
    i16 39, label %159
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.adjust_mem_data, ptr %2, i64 0, i32 1
  %8 = load i32, ptr %7, align 4, !tbaa !119
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %243, label %10

10:                                               ; preds = %6
  %11 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 2), align 16, !tbaa !5
  %12 = icmp ne ptr %11, %0
  %13 = load i8, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 41), align 1
  %14 = icmp ne i8 %13, 0
  %15 = select i1 %12, i1 true, i1 %14
  br i1 %15, label %24, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.adjust_mem_data, ptr %2, i64 0, i32 2
  %18 = load i64, ptr %17, align 8, !tbaa !121
  %19 = load i32, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 3, i32 2), align 8, !tbaa !112
  %20 = sext i32 %19 to i64
  %21 = sub nsw i64 %18, %20
  %22 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 5), align 8, !tbaa !5
  %23 = tail call ptr @plus_constant(ptr noundef %22, i64 noundef %21) #21
  br label %243

24:                                               ; preds = %10
  %25 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 4), align 16, !tbaa !5
  %26 = icmp eq ptr %25, %0
  %27 = select i1 %26, i1 %14, i1 false
  %28 = load i64, ptr @hard_frame_pointer_adjustment, align 8
  %29 = icmp ne i64 %28, -1
  %30 = select i1 %27, i1 %29, i1 false
  br i1 %30, label %31, label %243

31:                                               ; preds = %24
  %32 = load i32, ptr getelementptr inbounds (%struct.rtl_data, ptr @x_rtl, i64 0, i32 3, i32 2), align 8, !tbaa !112
  %33 = sext i32 %32 to i64
  %34 = sub nsw i64 %28, %33
  %35 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @global_rtl, i64 0, i64 5), align 8, !tbaa !5
  %36 = tail call ptr @plus_constant(ptr noundef %35, i64 noundef %34) #21
  br label %243

37:                                               ; preds = %3
  %38 = load i8, ptr %2, align 8, !tbaa !123
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %37
  %41 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 40), align 8, !tbaa !258
  %42 = tail call ptr %41(ptr noundef nonnull %0) #21
  %43 = icmp eq ptr %42, %0
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = load i32, ptr %0, align 8
  br label %52

46:                                               ; preds = %40
  %47 = load i32, ptr %42, align 8
  %48 = and i32 %47, 65535
  %49 = icmp eq i32 %48, 43
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = tail call ptr @simplify_replace_fn_rtx(ptr noundef nonnull %42, ptr noundef %1, ptr noundef nonnull @adjust_mems, ptr noundef nonnull %2) #21
  br label %243

52:                                               ; preds = %44, %46, %37
  %53 = phi i32 [ %4, %37 ], [ %47, %46 ], [ %45, %44 ]
  %54 = phi ptr [ %0, %37 ], [ %42, %46 ], [ %0, %44 ]
  %55 = getelementptr inbounds %struct.rtx_def, ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !16
  %57 = getelementptr inbounds %struct.adjust_mem_data, ptr %2, i64 0, i32 1
  %58 = load i32, ptr %57, align 4, !tbaa !119
  %59 = lshr i32 %53, 16
  %60 = and i32 %59, 255
  store i32 %60, ptr %57, align 4, !tbaa !119
  %61 = load i8, ptr %2, align 8, !tbaa !123
  store i8 0, ptr %2, align 8, !tbaa !123
  %62 = tail call ptr @simplify_replace_fn_rtx(ptr noundef %56, ptr noundef %1, ptr noundef nonnull @adjust_mems, ptr noundef nonnull %2) #21
  store i8 %61, ptr %2, align 8, !tbaa !123
  store i32 %58, ptr %57, align 4, !tbaa !119
  %63 = icmp eq ptr %54, %0
  br i1 %63, label %64, label %67

64:                                               ; preds = %52
  %65 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 40), align 8, !tbaa !258
  %66 = tail call ptr %65(ptr noundef %62) #21
  br label %67

67:                                               ; preds = %64, %52
  %68 = phi ptr [ %66, %64 ], [ %62, %52 ]
  %69 = load ptr, ptr %55, align 8, !tbaa !16
  %70 = icmp eq ptr %68, %69
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = tail call ptr @replace_equiv_address_nv(ptr noundef nonnull %54, ptr noundef %68) #21
  br label %73

73:                                               ; preds = %71, %67
  %74 = phi ptr [ %72, %71 ], [ %54, %67 ]
  %75 = load i8, ptr %2, align 8, !tbaa !123
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %243

77:                                               ; preds = %73
  %78 = tail call ptr @avoid_constant_pool_reference(ptr noundef %74) #21
  br label %243

79:                                               ; preds = %3, %3
  %80 = lshr i32 %4, 16
  %81 = and i32 %80, 255
  %82 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %83 = load ptr, ptr %82, align 8, !tbaa !16
  %84 = and i32 %4, 65535
  %85 = icmp eq i32 %84, 75
  %86 = getelementptr inbounds %struct.adjust_mem_data, ptr %2, i64 0, i32 1
  %87 = load i32, ptr %86, align 4, !tbaa !119
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %88
  %90 = load i8, ptr %89, align 1, !tbaa !16
  %91 = zext i8 %90 to i64
  %92 = sub nsw i64 0, %91
  %93 = select i1 %85, i64 %91, i64 %92
  %94 = tail call ptr @gen_rtx_CONST_INT(i32 noundef 0, i64 noundef %93) #21
  %95 = tail call ptr @gen_rtx_fmt_ee_stat(i32 noundef 49, i32 noundef %81, ptr noundef %83, ptr noundef %94) #21
  %96 = icmp eq ptr %95, %0
  br i1 %96, label %97, label %100

97:                                               ; preds = %3, %3, %79
  %98 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %99 = load ptr, ptr %98, align 8, !tbaa !16
  br label %100

100:                                              ; preds = %97, %79
  %101 = phi ptr [ %99, %97 ], [ %95, %79 ]
  %102 = getelementptr inbounds %struct.adjust_mem_data, ptr %2, i64 0, i32 1
  %103 = load i32, ptr %102, align 4, !tbaa !119
  %104 = icmp ult i32 %103, 2
  br i1 %104, label %105, label %106

105:                                              ; preds = %100
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 851, ptr noundef nonnull @.str.2) #21
  br label %106

106:                                              ; preds = %100, %105
  %107 = tail call ptr @simplify_replace_fn_rtx(ptr noundef %101, ptr noundef %1, ptr noundef nonnull @adjust_mems, ptr noundef nonnull %2) #21
  %108 = load i32, ptr %0, align 8
  %109 = lshr i32 %108, 16
  %110 = and i32 %109, 255
  %111 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %112 = load ptr, ptr %111, align 8, !tbaa !16
  %113 = trunc i32 %108 to i16
  switch i16 %113, label %120 [
    i16 75, label %114
    i16 77, label %114
  ]

114:                                              ; preds = %106, %106
  %115 = load i32, ptr %102, align 4, !tbaa !119
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %116
  %118 = load i8, ptr %117, align 1, !tbaa !16
  %119 = zext i8 %118 to i64
  br label %127

120:                                              ; preds = %106
  %121 = load i32, ptr %102, align 4, !tbaa !119
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %122
  %124 = load i8, ptr %123, align 1, !tbaa !16
  %125 = zext i8 %124 to i64
  %126 = sub nsw i64 0, %125
  br label %127

127:                                              ; preds = %120, %114
  %128 = phi i64 [ %119, %114 ], [ %126, %120 ]
  %129 = tail call ptr @gen_rtx_CONST_INT(i32 noundef 0, i64 noundef %128) #21
  %130 = tail call ptr @gen_rtx_fmt_ee_stat(i32 noundef 49, i32 noundef %110, ptr noundef %112, ptr noundef %129) #21
  %131 = load ptr, ptr %111, align 8, !tbaa !16
  %132 = tail call ptr @gen_rtx_fmt_ee_stat(i32 noundef 23, i32 noundef 0, ptr noundef %131, ptr noundef %130) #21
  %133 = getelementptr inbounds %struct.adjust_mem_data, ptr %2, i64 0, i32 3
  %134 = load ptr, ptr %133, align 8, !tbaa !122
  %135 = tail call ptr @alloc_EXPR_LIST(i32 noundef 0, ptr noundef %132, ptr noundef %134) #21
  store ptr %135, ptr %133, align 8, !tbaa !122
  br label %243

136:                                              ; preds = %3
  %137 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %138 = load ptr, ptr %137, align 8, !tbaa !16
  %139 = icmp eq ptr %138, %0
  br i1 %139, label %140, label %143

140:                                              ; preds = %3, %136
  %141 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %142 = load ptr, ptr %141, align 8, !tbaa !16
  br label %143

143:                                              ; preds = %140, %136
  %144 = phi ptr [ %142, %140 ], [ %138, %136 ]
  %145 = getelementptr inbounds %struct.adjust_mem_data, ptr %2, i64 0, i32 1
  %146 = load i32, ptr %145, align 4, !tbaa !119
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %143
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 869, ptr noundef nonnull @.str.2) #21
  br label %149

149:                                              ; preds = %143, %148
  %150 = tail call ptr @simplify_replace_fn_rtx(ptr noundef %144, ptr noundef %1, ptr noundef nonnull @adjust_mems, ptr noundef nonnull %2) #21
  %151 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %152 = load ptr, ptr %151, align 8, !tbaa !16
  %153 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %154 = load ptr, ptr %153, align 8, !tbaa !16
  %155 = tail call ptr @gen_rtx_fmt_ee_stat(i32 noundef 23, i32 noundef 0, ptr noundef %152, ptr noundef %154) #21
  %156 = getelementptr inbounds %struct.adjust_mem_data, ptr %2, i64 0, i32 3
  %157 = load ptr, ptr %156, align 8, !tbaa !122
  %158 = tail call ptr @alloc_EXPR_LIST(i32 noundef 0, ptr noundef %155, ptr noundef %157) #21
  store ptr %158, ptr %156, align 8, !tbaa !122
  br label %243

159:                                              ; preds = %3
  %160 = load i8, ptr %2, align 8, !tbaa !123
  store i8 1, ptr %2, align 8, !tbaa !123
  %161 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %162 = load ptr, ptr %161, align 8, !tbaa !16
  %163 = tail call ptr @simplify_replace_fn_rtx(ptr noundef %162, ptr noundef %1, ptr noundef nonnull @adjust_mems, ptr noundef nonnull %2) #21
  store i8 %160, ptr %2, align 8, !tbaa !123
  %164 = tail call ptr @simplify_replace_fn_rtx(ptr noundef %163, ptr noundef %1, ptr noundef nonnull @adjust_mems, ptr noundef nonnull %2) #21
  %165 = load ptr, ptr %161, align 8, !tbaa !16
  %166 = icmp eq ptr %164, %165
  br i1 %166, label %195, label %167

167:                                              ; preds = %159
  %168 = load i32, ptr %0, align 8
  %169 = lshr i32 %168, 16
  %170 = and i32 %169, 255
  %171 = load i32, ptr %165, align 8
  %172 = lshr i32 %171, 16
  %173 = and i32 %172, 255
  %174 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %175 = load i32, ptr %174, align 8, !tbaa !16
  %176 = tail call ptr @simplify_gen_subreg(i32 noundef %170, ptr noundef %164, i32 noundef %173, i32 noundef %175) #21
  %177 = icmp eq ptr %176, null
  br i1 %177, label %178, label %195

178:                                              ; preds = %167
  %179 = load i32, ptr %0, align 8
  %180 = lshr i32 %179, 16
  %181 = and i32 %180, 255
  %182 = load ptr, ptr %161, align 8, !tbaa !16
  %183 = load i32, ptr %182, align 8
  %184 = lshr i32 %183, 16
  %185 = and i32 %184, 255
  %186 = load i32, ptr %174, align 8, !tbaa !16
  %187 = tail call ptr @simplify_gen_subreg(i32 noundef %181, ptr noundef %163, i32 noundef %185, i32 noundef %186) #21
  %188 = icmp eq ptr %187, null
  br i1 %188, label %189, label %195

189:                                              ; preds = %178
  %190 = load i32, ptr %0, align 8
  %191 = lshr i32 %190, 16
  %192 = and i32 %191, 255
  %193 = load i32, ptr %174, align 8, !tbaa !16
  %194 = tail call ptr @gen_rtx_fmt_ei_stat(i32 noundef 39, i32 noundef %192, ptr noundef %163, i32 noundef %193) #21
  br label %195

195:                                              ; preds = %159, %178, %189, %167
  %196 = phi ptr [ %176, %167 ], [ %194, %189 ], [ %187, %178 ], [ %0, %159 ]
  %197 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %243, label %199

199:                                              ; preds = %195
  %200 = load i32, ptr %196, align 8
  %201 = and i32 %200, 65535
  %202 = icmp eq i32 %201, 39
  br i1 %202, label %203, label %243

203:                                              ; preds = %199
  %204 = getelementptr inbounds %struct.rtx_def, ptr %196, i64 0, i32 1
  %205 = load ptr, ptr %204, align 8, !tbaa !16
  %206 = load i32, ptr %205, align 8
  %207 = trunc i32 %206 to i16
  switch i16 %207, label %243 [
    i16 49, label %208
    i16 50, label %208
    i16 52, label %208
    i16 65, label %208
  ]

208:                                              ; preds = %203, %203, %203, %203
  %209 = lshr i32 %200, 16
  %210 = and i32 %209, 255
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %211
  %213 = load i8, ptr %212, align 1, !tbaa !16
  %214 = icmp eq i8 %213, 2
  br i1 %214, label %215, label %243

215:                                              ; preds = %208
  %216 = lshr i32 %206, 16
  %217 = and i32 %216, 255
  %218 = zext i32 %217 to i64
  %219 = getelementptr inbounds [87 x i8], ptr @mode_class, i64 0, i64 %218
  %220 = load i8, ptr %219, align 1, !tbaa !16
  %221 = icmp eq i8 %220, 2
  br i1 %221, label %222, label %243

222:                                              ; preds = %215
  %223 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %211
  %224 = load i8, ptr %223, align 1, !tbaa !16
  %225 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %218
  %226 = load i8, ptr %225, align 1, !tbaa !16
  %227 = icmp ult i8 %224, %226
  br i1 %227, label %228, label %243

228:                                              ; preds = %222
  %229 = tail call i32 @subreg_lowpart_p(ptr noundef nonnull %196) #21
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %243, label %231

231:                                              ; preds = %228
  %232 = tail call i32 @for_each_rtx(ptr noundef nonnull %204, ptr noundef nonnull @use_narrower_mode_test, ptr noundef nonnull %196) #21
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %243

234:                                              ; preds = %231
  %235 = load ptr, ptr %204, align 8, !tbaa !16
  %236 = load i32, ptr %196, align 8
  %237 = lshr i32 %236, 16
  %238 = and i32 %237, 255
  %239 = load i32, ptr %235, align 8
  %240 = lshr i32 %239, 16
  %241 = and i32 %240, 255
  %242 = tail call fastcc ptr @use_narrower_mode(ptr noundef nonnull %235, i32 noundef %238, i32 noundef %241)
  br label %243

243:                                              ; preds = %3, %195, %199, %208, %215, %222, %228, %231, %203, %73, %77, %24, %6, %234, %149, %127, %50, %31, %16
  %244 = phi ptr [ %242, %234 ], [ %150, %149 ], [ %107, %127 ], [ %51, %50 ], [ %36, %31 ], [ %23, %16 ], [ %0, %6 ], [ %0, %24 ], [ %74, %73 ], [ %78, %77 ], [ %196, %203 ], [ %196, %231 ], [ %196, %228 ], [ %196, %222 ], [ %196, %215 ], [ %196, %208 ], [ %196, %199 ], [ %196, %195 ], [ null, %3 ]
  ret ptr %244
}

declare ptr @avoid_constant_pool_reference(ptr noundef) local_unnamed_addr #3

declare ptr @alloc_EXPR_LIST(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @simplify_gen_subreg(i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @gen_rtx_fmt_ei_stat(i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare i32 @subreg_lowpart_p(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @use_narrower_mode_test(ptr nocapture noundef readonly %0, ptr noundef %1) #9 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = load i32, ptr %3, align 8
  %5 = and i32 %4, 65535
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds [139 x i32], ptr @rtx_class, i64 0, i64 %6
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = icmp eq i32 %8, 9
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = trunc i32 %4 to i16
  switch i16 %11, label %26 [
    i16 37, label %12
    i16 49, label %27
    i16 50, label %27
    i16 52, label %27
    i16 65, label %21
  ]

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !16
  %15 = load i32, ptr %14, align 8
  %16 = lshr i32 %15, 16
  %17 = and i32 %16, 255
  %18 = tail call ptr @cselib_lookup(ptr noundef nonnull %3, i32 noundef %17, i32 noundef 0) #21
  %19 = icmp eq ptr %18, null
  %20 = select i1 %19, i32 -1, i32 1
  br label %27

21:                                               ; preds = %10
  %22 = getelementptr inbounds %struct.rtx_def, ptr %3, i64 0, i32 1
  %23 = tail call i32 @for_each_rtx(ptr noundef nonnull %22, ptr noundef nonnull @use_narrower_mode_test, ptr noundef %1) #21
  %24 = icmp eq i32 %23, 0
  %25 = select i1 %24, i32 -1, i32 1
  br label %27

26:                                               ; preds = %10
  br label %27

27:                                               ; preds = %21, %10, %10, %10, %12, %2, %26
  %28 = phi i32 [ 1, %26 ], [ -1, %2 ], [ %20, %12 ], [ 0, %10 ], [ 0, %10 ], [ 0, %10 ], [ %25, %21 ]
  ret i32 %28
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @use_narrower_mode(ptr noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 {
  %4 = load i32, ptr %0, align 8
  %5 = and i32 %4, 65535
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds [139 x i32], ptr @rtx_class, i64 0, i64 %6
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = icmp eq i32 %8, 9
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = tail call ptr @lowpart_subreg(i32 noundef %1, ptr noundef nonnull %0, i32 noundef %2) #21
  br label %16

12:                                               ; preds = %3
  %13 = trunc i32 %4 to i16
  switch i16 %13, label %35 [
    i16 37, label %14
    i16 49, label %18
    i16 50, label %18
    i16 52, label %18
    i16 65, label %28
  ]

14:                                               ; preds = %12
  %15 = tail call ptr @lowpart_subreg(i32 noundef %1, ptr noundef nonnull %0, i32 noundef %2) #21
  br label %16

16:                                               ; preds = %35, %14, %10, %28, %18
  %17 = phi ptr [ %27, %18 ], [ %34, %28 ], [ %11, %10 ], [ null, %35 ], [ %15, %14 ]
  ret ptr %17

18:                                               ; preds = %12, %12, %12
  %19 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !16
  %21 = tail call fastcc ptr @use_narrower_mode(ptr noundef %20, i32 noundef %1, i32 noundef %2)
  %22 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %23 = load ptr, ptr %22, align 8, !tbaa !16
  %24 = tail call fastcc ptr @use_narrower_mode(ptr noundef %23, i32 noundef %1, i32 noundef %2)
  %25 = load i32, ptr %0, align 8
  %26 = and i32 %25, 65535
  %27 = tail call ptr @simplify_gen_binary(i32 noundef %26, i32 noundef %1, ptr noundef %21, ptr noundef %24) #21
  br label %16

28:                                               ; preds = %12
  %29 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !16
  %31 = tail call fastcc ptr @use_narrower_mode(ptr noundef %30, i32 noundef %1, i32 noundef %2)
  %32 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %33 = load ptr, ptr %32, align 8, !tbaa !16
  %34 = tail call ptr @simplify_gen_binary(i32 noundef 65, i32 noundef %1, ptr noundef %31, ptr noundef %33) #21
  br label %16

35:                                               ; preds = %12
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 787, ptr noundef nonnull @.str.2) #21
  br label %16
}

declare ptr @plus_constant(ptr noundef, i64 noundef) local_unnamed_addr #3

declare ptr @lowpart_subreg(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @gen_rtx_MEM(i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @get_spill_slot_decl(i8 noundef zeroext) local_unnamed_addr #3

declare void @free_aux_for_blocks() local_unnamed_addr #3

declare void @htab_delete(ptr noundef) local_unnamed_addr #3

declare void @free_alloc_pool(ptr noundef) local_unnamed_addr #3

declare void @cselib_finish() local_unnamed_addr #3

declare void @bitmap_obstack_free(ptr noundef) local_unnamed_addr #3

declare i32 @pre_and_rev_post_order_compute(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

declare ptr @fibheap_new() local_unnamed_addr #3

declare ptr @sbitmap_alloc(i32 noundef) local_unnamed_addr #3

declare void @sbitmap_zero(ptr noundef) local_unnamed_addr #3

declare ptr @fibheap_insert(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #3

declare void @sbitmap_ones(ptr noundef) local_unnamed_addr #3

declare i32 @fibheap_empty(ptr noundef) local_unnamed_addr #3

declare ptr @fibheap_extract_min(ptr noundef) local_unnamed_addr #3

declare i64 @htab_size(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @dataflow_set_clear(ptr nocapture noundef %0) unnamed_addr #9 {
  br label %2

2:                                                ; preds = %1, %12
  %3 = phi i64 [ 0, %1 ], [ %13, %12 ]
  %4 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 1, i64 %3
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  %6 = icmp eq ptr %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2, %7
  %8 = phi ptr [ %9, %7 ], [ %5, %2 ]
  %9 = load ptr, ptr %8, align 8, !tbaa !56
  %10 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %10, ptr noundef nonnull %8) #21
  %11 = icmp eq ptr %9, null
  br i1 %11, label %12, label %7, !llvm.loop !58

12:                                               ; preds = %7, %2
  store ptr null, ptr %4, align 8, !tbaa !5
  %13 = add nuw nsw i64 %3, 1
  %14 = icmp eq i64 %13, 53
  br i1 %14, label %15, label %2, !llvm.loop !150

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !51
  %18 = load i32, ptr %17, align 8, !tbaa !49
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1378, ptr noundef nonnull @.str.2) #21
  %21 = load i32, ptr %17, align 8, !tbaa !49
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi i32 [ %18, %15 ], [ %21, %20 ]
  %24 = add nsw i32 %23, -1
  store i32 %24, ptr %17, align 8, !tbaa !49
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.shared_hash_def, ptr %17, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !55
  tail call void @htab_delete(ptr noundef %28) #21
  %29 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %29, ptr noundef nonnull %17) #21
  br label %30

30:                                               ; preds = %22, %26
  %31 = load ptr, ptr @empty_shared_hash, align 8, !tbaa !5
  %32 = load i32, ptr %31, align 8, !tbaa !49
  %33 = add nsw i32 %32, 1
  store i32 %33, ptr %31, align 8, !tbaa !49
  store ptr %31, ptr %16, align 8, !tbaa !51
  ret void
}

declare void @inform(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @dump_dataflow_set(ptr nocapture noundef readonly %0) unnamed_addr #9 {
  %2 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %3 = load i64, ptr %0, align 8, !tbaa !53
  %4 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %2, ptr noundef nonnull @.str.43, i64 noundef %3)
  br label %5

5:                                                ; preds = %1, %40
  %6 = phi i64 [ 0, %1 ], [ %41, %40 ]
  %7 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 1, i64 %6
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  %9 = icmp eq ptr %8, null
  br i1 %9, label %40, label %10

10:                                               ; preds = %5
  %11 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %12 = trunc i64 %6 to i32
  %13 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %11, ptr noundef nonnull @.str.44, i32 noundef %12)
  %14 = load ptr, ptr %7, align 8, !tbaa !5
  %15 = icmp eq ptr %14, null
  br i1 %15, label %37, label %16

16:                                               ; preds = %10, %30
  %17 = phi ptr [ %35, %30 ], [ %14, %10 ]
  %18 = getelementptr inbounds %struct.attrs_def, ptr %17, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !72
  %20 = icmp eq ptr %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = load i64, ptr %19, align 8
  %23 = and i64 %22, 65535
  %24 = icmp eq i64 %23, 1
  br i1 %24, label %27, label %25

25:                                               ; preds = %21, %16
  %26 = load ptr, ptr @dump_file, align 8, !tbaa !5
  tail call void @print_mem_expr(ptr noundef %26, ptr noundef %19) #21
  br label %30

27:                                               ; preds = %21
  %28 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %29 = tail call i32 @print_rtl_single(ptr noundef %28, ptr noundef nonnull %19) #21
  br label %30

30:                                               ; preds = %27, %25
  %31 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.attrs_def, ptr %17, i64 0, i32 3
  %33 = load i64, ptr %32, align 8, !tbaa !59
  %34 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %31, ptr noundef nonnull @.str.45, i64 noundef %33)
  %35 = load ptr, ptr %17, align 8, !tbaa !56
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %16, !llvm.loop !259

37:                                               ; preds = %30, %10
  %38 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %39 = tail call i32 @fputc(i32 10, ptr %38)
  br label %40

40:                                               ; preds = %5, %37
  %41 = add nuw nsw i64 %6, 1
  %42 = icmp eq i64 %41, 53
  br i1 %42, label %43, label %5, !llvm.loop !260

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %45 = load ptr, ptr %44, align 8, !tbaa !51
  %46 = getelementptr i8, ptr %45, i64 8
  %47 = load ptr, ptr %46, align 8, !tbaa !55
  %48 = tail call i64 @htab_elements(ptr noundef %47) #21
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %43
  %51 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %52 = tail call i64 @fwrite(ptr nonnull @.str.46, i64 11, i64 1, ptr %51)
  tail call void @htab_traverse(ptr noundef %47, ptr noundef nonnull @dump_var_slot, ptr noundef null) #21
  br label %53

53:                                               ; preds = %43, %50
  %54 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %55 = tail call i32 @fputc(i32 10, ptr %54)
  ret void
}

declare void @fibheap_delete(ptr noundef) local_unnamed_addr #3

declare void @htab_traverse(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @variable_merge_over_src(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) #9 {
  %3 = load ptr, ptr %1, align 8, !tbaa !156
  %4 = load ptr, ptr %0, align 8, !tbaa !5
  %5 = load ptr, ptr %4, align 8, !tbaa !181
  %6 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = icmp eq ptr %5, null
  br i1 %9, label %46, label %10

10:                                               ; preds = %8
  %11 = load i64, ptr %5, align 8
  %12 = trunc i64 %11 to i16
  switch i16 %12, label %13 [
    i16 1, label %46
    i16 37, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %5) #21
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %46

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.dataflow_set_def, ptr %3, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !51
  br label %23

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.dataflow_set_def, ptr %3, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !51
  %22 = icmp eq ptr %5, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %16, %19
  %24 = phi ptr [ %18, %16 ], [ %21, %19 ]
  %25 = load i64, ptr %5, align 8
  %26 = and i64 %25, 65535
  %27 = icmp eq i64 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.rtx_def, ptr %5, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !16
  %31 = getelementptr inbounds %struct.cselib_val_struct, ptr %30, i64 0, i32 1
  br label %35

32:                                               ; preds = %23, %19
  %33 = phi ptr [ %24, %23 ], [ %21, %19 ]
  %34 = getelementptr inbounds %struct.tree_decl_minimal, ptr %5, i64 0, i32 2
  br label %35

35:                                               ; preds = %28, %32
  %36 = phi ptr [ %24, %28 ], [ %33, %32 ]
  %37 = phi ptr [ %31, %28 ], [ %34, %32 ]
  %38 = load i32, ptr %37, align 4, !tbaa !16
  %39 = load i32, ptr %36, align 8, !tbaa !49
  %40 = getelementptr i8, ptr %36, i64 8
  %41 = load ptr, ptr %40, align 8, !tbaa !55
  %42 = icmp slt i32 %39, 2
  %43 = zext i1 %42 to i32
  %44 = tail call ptr @htab_find_slot_with_hash(ptr noundef %41, ptr noundef %5, i32 noundef %38, i32 noundef %43) #21
  store ptr %4, ptr %44, align 8, !tbaa !5
  %45 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 1
  br label %48

46:                                               ; preds = %8, %10, %10, %13
  %47 = getelementptr inbounds %struct.dfset_merge, ptr %1, i64 0, i32 3
  br label %48

48:                                               ; preds = %46, %35
  %49 = phi ptr [ %47, %46 ], [ %45, %35 ]
  %50 = load i32, ptr %49, align 8, !tbaa !20
  %51 = add nsw i32 %50, 1
  store i32 %51, ptr %49, align 8, !tbaa !20
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @variable_merge_over_cur(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) #9 {
  %3 = alloca ptr, align 8
  %4 = load ptr, ptr %1, align 8, !tbaa !156
  %5 = load ptr, ptr %0, align 8, !tbaa !5
  %6 = load ptr, ptr %5, align 8, !tbaa !181
  %7 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %2
  %10 = icmp eq ptr %6, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = load i64, ptr %6, align 8
  %13 = trunc i64 %12 to i16
  switch i16 %13, label %14 [
    i16 1, label %18
    i16 37, label %18
  ]

14:                                               ; preds = %11
  %15 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %6) #21
  %16 = icmp ne ptr %15, null
  %17 = zext i1 %16 to i8
  br label %18

18:                                               ; preds = %2, %9, %11, %11, %14
  %19 = phi i8 [ %17, %14 ], [ 0, %2 ], [ 1, %11 ], [ 1, %9 ], [ 1, %11 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  %20 = getelementptr inbounds %struct.variable_def, ptr %5, i64 0, i32 2
  %21 = load i8, ptr %20, align 4, !tbaa !184
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3350, ptr noundef nonnull @.str.2) #21
  br label %24

24:                                               ; preds = %18, %23
  %25 = getelementptr inbounds %struct.variable_def, ptr %5, i64 0, i32 5
  %26 = load ptr, ptr %25, align 8, !tbaa !185
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %24
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3351, ptr noundef nonnull @.str.2) #21
  br label %29

29:                                               ; preds = %24, %28
  %30 = icmp eq i8 %19, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = tail call i32 @variable_union(ptr noundef nonnull %0, ptr noundef %4)
  br label %443

33:                                               ; preds = %29
  %34 = load i8, ptr %20, align 4, !tbaa !184
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3356, ptr noundef nonnull @.str.2) #21
  br label %37

37:                                               ; preds = %33, %36
  %38 = getelementptr inbounds %struct.variable_def, ptr %5, i64 0, i32 5, i64 0, i32 2
  %39 = load i64, ptr %38, align 8, !tbaa !213
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %37
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3357, ptr noundef nonnull @.str.2) #21
  br label %42

42:                                               ; preds = %37, %41
  %43 = icmp eq ptr %6, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %42
  %45 = load i64, ptr %6, align 8
  %46 = and i64 %45, 65535
  %47 = icmp eq i64 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.rtx_def, ptr %6, i64 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !16
  %51 = getelementptr inbounds %struct.cselib_val_struct, ptr %50, i64 0, i32 1
  br label %54

52:                                               ; preds = %44
  %53 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 2
  br label %54

54:                                               ; preds = %52, %48, %42
  %55 = phi ptr [ inttoptr (i64 28 to ptr), %42 ], [ %51, %48 ], [ %53, %52 ]
  %56 = phi ptr [ null, %42 ], [ %6, %48 ], [ null, %52 ]
  %57 = load i32, ptr %55, align 4, !tbaa !16
  %58 = getelementptr inbounds %struct.dfset_merge, ptr %1, i64 0, i32 2
  %59 = load ptr, ptr %58, align 8, !tbaa !158
  %60 = getelementptr inbounds %struct.dataflow_set_def, ptr %59, i64 0, i32 2
  %61 = load ptr, ptr %60, align 8, !tbaa !51
  %62 = getelementptr i8, ptr %61, i64 8
  %63 = load ptr, ptr %62, align 8, !tbaa !55
  %64 = tail call ptr @htab_find_with_hash(ptr noundef %63, ptr noundef %6, i32 noundef %57) #21
  %65 = icmp eq ptr %64, null
  br i1 %65, label %66, label %67

66:                                               ; preds = %54
  store i1 false, ptr @dst_can_be_shared, align 1
  br label %443

67:                                               ; preds = %54
  %68 = getelementptr inbounds %struct.dfset_merge, ptr %1, i64 0, i32 3
  %69 = load i32, ptr %68, align 8, !tbaa !160
  %70 = add nsw i32 %69, -1
  store i32 %70, ptr %68, align 8, !tbaa !160
  %71 = getelementptr inbounds %struct.variable_def, ptr %64, i64 0, i32 5
  %72 = load ptr, ptr %71, align 8, !tbaa !185
  %73 = icmp eq ptr %72, null
  br i1 %73, label %74, label %75

74:                                               ; preds = %67
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3373, ptr noundef nonnull @.str.2) #21
  br label %75

75:                                               ; preds = %67, %74
  %76 = getelementptr inbounds %struct.variable_def, ptr %64, i64 0, i32 2
  %77 = load i8, ptr %76, align 4, !tbaa !184
  %78 = icmp eq i8 %77, 1
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3374, ptr noundef nonnull @.str.2) #21
  br label %80

80:                                               ; preds = %75, %79
  %81 = getelementptr inbounds %struct.variable_def, ptr %64, i64 0, i32 5, i64 0, i32 2
  %82 = load i64, ptr %81, align 8, !tbaa !213
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %80
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3375, ptr noundef nonnull @.str.2) #21
  br label %85

85:                                               ; preds = %80, %84
  %86 = getelementptr inbounds %struct.dataflow_set_def, ptr %4, i64 0, i32 2
  %87 = load ptr, ptr %86, align 8, !tbaa !51
  %88 = getelementptr i8, ptr %87, i64 8
  %89 = load ptr, ptr %88, align 8, !tbaa !55
  %90 = tail call ptr @htab_find_slot_with_hash(ptr noundef %89, ptr noundef %6, i32 noundef %57, i32 noundef 0) #21
  %91 = icmp eq ptr %90, null
  br i1 %91, label %109, label %92

92:                                               ; preds = %85
  %93 = load ptr, ptr %90, align 8, !tbaa !5
  %94 = getelementptr inbounds %struct.variable_def, ptr %93, i64 0, i32 1
  %95 = load i32, ptr %94, align 8, !tbaa !183
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %98, label %97

97:                                               ; preds = %92
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3381, ptr noundef nonnull @.str.2) #21
  br label %98

98:                                               ; preds = %92, %97
  %99 = getelementptr inbounds %struct.variable_def, ptr %93, i64 0, i32 2
  %100 = load i8, ptr %99, align 4, !tbaa !184
  %101 = icmp eq i8 %100, 1
  br i1 %101, label %103, label %102

102:                                              ; preds = %98
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3382, ptr noundef nonnull @.str.2) #21
  br label %103

103:                                              ; preds = %98, %102
  %104 = getelementptr inbounds %struct.variable_def, ptr %93, i64 0, i32 5
  %105 = getelementptr inbounds %struct.variable_def, ptr %93, i64 0, i32 5, i64 0, i32 2
  %106 = load i64, ptr %105, align 8, !tbaa !213
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %195, label %108

108:                                              ; preds = %103
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3383, ptr noundef nonnull @.str.2) #21
  br label %195

109:                                              ; preds = %85
  store ptr null, ptr %3, align 8, !tbaa !5
  %110 = tail call fastcc zeroext i8 @onepart_variable_different_p(ptr noundef nonnull %5, ptr noundef nonnull %64), !range !37
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %140

112:                                              ; preds = %109
  %113 = load ptr, ptr %86, align 8, !tbaa !5
  %114 = load i32, ptr %113, align 8, !tbaa !49
  %115 = icmp slt i32 %114, 2
  br i1 %115, label %132, label %116

116:                                              ; preds = %112
  %117 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  %118 = tail call ptr @pool_alloc(ptr noundef %117) #21
  %119 = load i32, ptr %113, align 8, !tbaa !49
  %120 = icmp sgt i32 %119, 1
  br i1 %120, label %122, label %121

121:                                              ; preds = %116
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1353, ptr noundef nonnull @.str.2) #21
  br label %122

122:                                              ; preds = %121, %116
  store i32 1, ptr %118, align 8, !tbaa !49
  %123 = getelementptr inbounds %struct.shared_hash_def, ptr %113, i64 0, i32 1
  %124 = load ptr, ptr %123, align 8, !tbaa !55
  %125 = tail call i64 @htab_elements(ptr noundef %124) #21
  %126 = add i64 %125, 3
  %127 = tail call ptr @htab_create(i64 noundef %126, ptr noundef nonnull @variable_htab_hash, ptr noundef nonnull @variable_htab_eq, ptr noundef nonnull @variable_htab_free) #21
  %128 = getelementptr inbounds %struct.shared_hash_def, ptr %118, i64 0, i32 1
  store ptr %127, ptr %128, align 8, !tbaa !55
  %129 = load ptr, ptr %123, align 8, !tbaa !55
  tail call void @htab_traverse_noresize(ptr noundef %129, ptr noundef nonnull @vars_copy_1, ptr noundef %127) #21
  %130 = load i32, ptr %113, align 8, !tbaa !49
  %131 = add nsw i32 %130, -1
  store i32 %131, ptr %113, align 8, !tbaa !49
  store ptr %118, ptr %86, align 8, !tbaa !5
  br label %132

132:                                              ; preds = %112, %122
  %133 = phi ptr [ %118, %122 ], [ %113, %112 ]
  %134 = getelementptr i8, ptr %133, i64 8
  %135 = load ptr, ptr %134, align 8, !tbaa !55
  %136 = tail call ptr @htab_find_slot_with_hash(ptr noundef %135, ptr noundef %6, i32 noundef %57, i32 noundef 1) #21
  store ptr %64, ptr %136, align 8, !tbaa !5
  %137 = getelementptr inbounds %struct.variable_def, ptr %64, i64 0, i32 1
  %138 = load i32, ptr %137, align 8, !tbaa !183
  %139 = add nsw i32 %138, 1
  store i32 %139, ptr %137, align 8, !tbaa !183
  br label %197

140:                                              ; preds = %109
  store i1 false, ptr @dst_can_be_shared, align 1
  %141 = load ptr, ptr %25, align 8, !tbaa !185
  call fastcc void @intersect_loc_chains(ptr noundef %56, ptr noundef nonnull %3, ptr noundef nonnull %1, ptr noundef %141, ptr noundef nonnull %64)
  %142 = load ptr, ptr %3, align 8, !tbaa !5
  %143 = icmp eq ptr %142, null
  br i1 %143, label %443, label %144

144:                                              ; preds = %140
  %145 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %155, label %147

147:                                              ; preds = %144
  br i1 %43, label %156, label %148

148:                                              ; preds = %147
  %149 = load i64, ptr %6, align 8
  %150 = trunc i64 %149 to i16
  switch i16 %150, label %151 [
    i16 1, label %156
    i16 37, label %156
  ]

151:                                              ; preds = %148
  %152 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %6) #21
  %153 = freeze ptr %152
  %154 = icmp eq ptr %153, null
  br i1 %154, label %155, label %156

155:                                              ; preds = %151, %144
  br label %156

156:                                              ; preds = %147, %148, %148, %151, %155
  %157 = phi ptr [ @var_pool, %155 ], [ @valvar_pool, %151 ], [ @valvar_pool, %148 ], [ @valvar_pool, %148 ], [ @valvar_pool, %147 ]
  %158 = load ptr, ptr %157, align 8
  %159 = tail call ptr @pool_alloc(ptr noundef %158) #21
  store ptr %6, ptr %159, align 8, !tbaa !181
  %160 = getelementptr inbounds %struct.variable_def, ptr %159, i64 0, i32 1
  store i32 1, ptr %160, align 8, !tbaa !183
  %161 = getelementptr inbounds %struct.variable_def, ptr %159, i64 0, i32 2
  store i8 1, ptr %161, align 4, !tbaa !184
  %162 = getelementptr inbounds %struct.variable_def, ptr %159, i64 0, i32 3
  store i8 0, ptr %162, align 1, !tbaa !211
  %163 = getelementptr inbounds %struct.variable_def, ptr %159, i64 0, i32 4
  store i8 0, ptr %163, align 2, !tbaa !212
  %164 = getelementptr inbounds %struct.variable_def, ptr %159, i64 0, i32 5
  %165 = getelementptr inbounds %struct.variable_def, ptr %159, i64 0, i32 5, i64 0, i32 2
  store i64 0, ptr %165, align 8, !tbaa !213
  store ptr %142, ptr %164, align 8, !tbaa !185
  %166 = getelementptr inbounds %struct.variable_def, ptr %159, i64 0, i32 5, i64 0, i32 1
  store ptr null, ptr %166, align 8, !tbaa !229
  %167 = load ptr, ptr %86, align 8, !tbaa !5
  %168 = load i32, ptr %167, align 8, !tbaa !49
  %169 = icmp slt i32 %168, 2
  br i1 %169, label %186, label %170

170:                                              ; preds = %156
  %171 = load ptr, ptr @shared_hash_pool, align 8, !tbaa !5
  %172 = tail call ptr @pool_alloc(ptr noundef %171) #21
  %173 = load i32, ptr %167, align 8, !tbaa !49
  %174 = icmp sgt i32 %173, 1
  br i1 %174, label %176, label %175

175:                                              ; preds = %170
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1353, ptr noundef nonnull @.str.2) #21
  br label %176

176:                                              ; preds = %175, %170
  store i32 1, ptr %172, align 8, !tbaa !49
  %177 = getelementptr inbounds %struct.shared_hash_def, ptr %167, i64 0, i32 1
  %178 = load ptr, ptr %177, align 8, !tbaa !55
  %179 = tail call i64 @htab_elements(ptr noundef %178) #21
  %180 = add i64 %179, 3
  %181 = tail call ptr @htab_create(i64 noundef %180, ptr noundef nonnull @variable_htab_hash, ptr noundef nonnull @variable_htab_eq, ptr noundef nonnull @variable_htab_free) #21
  %182 = getelementptr inbounds %struct.shared_hash_def, ptr %172, i64 0, i32 1
  store ptr %181, ptr %182, align 8, !tbaa !55
  %183 = load ptr, ptr %177, align 8, !tbaa !55
  tail call void @htab_traverse_noresize(ptr noundef %183, ptr noundef nonnull @vars_copy_1, ptr noundef %181) #21
  %184 = load i32, ptr %167, align 8, !tbaa !49
  %185 = add nsw i32 %184, -1
  store i32 %185, ptr %167, align 8, !tbaa !49
  store ptr %172, ptr %86, align 8, !tbaa !5
  br label %186

186:                                              ; preds = %156, %176
  %187 = phi ptr [ %172, %176 ], [ %167, %156 ]
  %188 = getelementptr i8, ptr %187, i64 8
  %189 = load ptr, ptr %188, align 8, !tbaa !55
  %190 = tail call ptr @htab_find_slot_with_hash(ptr noundef %189, ptr noundef %6, i32 noundef %57, i32 noundef 1) #21
  %191 = load ptr, ptr %190, align 8, !tbaa !5
  %192 = icmp eq ptr %191, null
  br i1 %192, label %194, label %193

193:                                              ; preds = %186
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3423, ptr noundef nonnull @.str.2) #21
  br label %194

194:                                              ; preds = %186, %193
  store ptr %159, ptr %190, align 8, !tbaa !5
  br label %197

195:                                              ; preds = %108, %103
  store i1 false, ptr @dst_can_be_shared, align 1
  %196 = load ptr, ptr %25, align 8, !tbaa !185
  tail call fastcc void @intersect_loc_chains(ptr noundef %56, ptr noundef nonnull %104, ptr noundef nonnull %1, ptr noundef %196, ptr noundef nonnull %64)
  br label %197

197:                                              ; preds = %195, %194, %132
  %198 = phi ptr [ %159, %194 ], [ %64, %132 ], [ %93, %195 ]
  %199 = phi ptr [ %190, %194 ], [ %136, %132 ], [ %90, %195 ]
  %200 = getelementptr inbounds %struct.variable_def, ptr %198, i64 0, i32 5
  %201 = load ptr, ptr %200, align 8, !tbaa !5
  store ptr %201, ptr %3, align 8, !tbaa !5
  %202 = icmp eq ptr %201, null
  br i1 %202, label %261, label %203

203:                                              ; preds = %197, %256
  %204 = phi ptr [ %259, %256 ], [ %201, %197 ]
  %205 = phi ptr [ %258, %256 ], [ %199, %197 ]
  %206 = phi ptr [ %257, %256 ], [ %200, %197 ]
  %207 = getelementptr inbounds %struct.location_chain_def, ptr %204, i64 0, i32 1
  %208 = load ptr, ptr %207, align 8, !tbaa !214
  %209 = load i32, ptr %208, align 8
  %210 = and i32 %209, 65535
  %211 = icmp eq i32 %210, 37
  br i1 %211, label %212, label %261

212:                                              ; preds = %203
  %213 = getelementptr i8, ptr %208, i64 8
  %214 = load i32, ptr %213, align 8, !tbaa !16
  %215 = zext i32 %214 to i64
  %216 = getelementptr inbounds %struct.dataflow_set_def, ptr %4, i64 0, i32 1, i64 %215
  %217 = load ptr, ptr %216, align 8, !tbaa !5
  %218 = icmp eq ptr %217, null
  br i1 %218, label %238, label %219

219:                                              ; preds = %212, %235
  %220 = phi ptr [ %236, %235 ], [ %217, %212 ]
  %221 = getelementptr inbounds %struct.attrs_def, ptr %220, i64 0, i32 1
  %222 = load ptr, ptr %221, align 8, !tbaa !71
  %223 = load i32, ptr %222, align 8
  %224 = xor i32 %223, %209
  %225 = and i32 %224, 16711680
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %235

227:                                              ; preds = %219
  %228 = getelementptr inbounds %struct.attrs_def, ptr %220, i64 0, i32 2
  %229 = load ptr, ptr %228, align 8, !tbaa !72
  %230 = icmp eq ptr %229, null
  br i1 %230, label %235, label %231

231:                                              ; preds = %227
  %232 = load i64, ptr %229, align 8
  %233 = and i64 %232, 65535
  %234 = icmp eq i64 %233, 1
  br i1 %234, label %245, label %235

235:                                              ; preds = %227, %219, %231
  %236 = load ptr, ptr %220, align 8, !tbaa !5
  %237 = icmp eq ptr %236, null
  br i1 %237, label %238, label %219, !llvm.loop !261

238:                                              ; preds = %235, %212
  %239 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  %240 = tail call ptr @pool_alloc(ptr noundef %239) #21
  %241 = getelementptr inbounds %struct.attrs_def, ptr %240, i64 0, i32 1
  store ptr %208, ptr %241, align 8, !tbaa !71
  %242 = getelementptr inbounds %struct.attrs_def, ptr %240, i64 0, i32 2
  store ptr %6, ptr %242, align 8, !tbaa !72
  %243 = getelementptr inbounds %struct.attrs_def, ptr %240, i64 0, i32 3
  store i64 0, ptr %243, align 8, !tbaa !59
  %244 = load ptr, ptr %216, align 8, !tbaa !5
  store ptr %244, ptr %240, align 8, !tbaa !56
  store ptr %240, ptr %216, align 8, !tbaa !5
  br label %256

245:                                              ; preds = %231
  %246 = icmp eq ptr %229, %56
  br i1 %246, label %256, label %247

247:                                              ; preds = %245
  %248 = getelementptr inbounds %struct.location_chain_def, ptr %204, i64 0, i32 3
  %249 = load i32, ptr %248, align 8, !tbaa !224
  %250 = tail call fastcc ptr @set_slot_part(ptr noundef %4, ptr noundef nonnull %229, ptr noundef %205, ptr noundef %6, i64 noundef 0, i32 noundef %249, ptr noundef null)
  %251 = load ptr, ptr %207, align 8, !tbaa !214
  %252 = tail call fastcc ptr @delete_slot_part(ptr noundef %4, ptr noundef %251, ptr noundef %250, i64 noundef 0)
  %253 = load ptr, ptr %206, align 8, !tbaa !5
  %254 = icmp eq ptr %253, %204
  %255 = select i1 %254, ptr %204, ptr %206
  br label %256

256:                                              ; preds = %247, %238, %245
  %257 = phi ptr [ %204, %245 ], [ %204, %238 ], [ %255, %247 ]
  %258 = phi ptr [ %205, %245 ], [ %205, %238 ], [ %252, %247 ]
  %259 = load ptr, ptr %257, align 8, !tbaa !5
  store ptr %259, ptr %3, align 8, !tbaa !5
  %260 = icmp eq ptr %259, null
  br i1 %260, label %261, label %203

261:                                              ; preds = %256, %203, %197
  %262 = phi ptr [ %199, %197 ], [ %205, %203 ], [ %258, %256 ]
  %263 = load ptr, ptr %262, align 8, !tbaa !5
  %264 = getelementptr inbounds %struct.variable_def, ptr %263, i64 0, i32 5
  %265 = icmp eq ptr %56, null
  br i1 %265, label %266, label %269

266:                                              ; preds = %261
  %267 = load ptr, ptr %264, align 8, !tbaa !5
  %268 = icmp eq ptr %267, null
  br i1 %268, label %424, label %323

269:                                              ; preds = %261
  %270 = load i32, ptr %56, align 8
  %271 = or i32 %270, 536870912
  store i32 %271, ptr %56, align 8
  %272 = load ptr, ptr %264, align 8, !tbaa !5
  %273 = icmp eq ptr %272, null
  br i1 %273, label %316, label %274

274:                                              ; preds = %269, %313
  %275 = phi ptr [ %314, %313 ], [ %272, %269 ]
  %276 = getelementptr inbounds %struct.location_chain_def, ptr %275, i64 0, i32 1
  %277 = load ptr, ptr %276, align 8, !tbaa !214
  %278 = load i32, ptr %277, align 8
  %279 = and i32 %278, 65535
  %280 = icmp eq i32 %279, 1
  br i1 %280, label %281, label %313

281:                                              ; preds = %274
  %282 = or i32 %278, 536870912
  store i32 %282, ptr %277, align 8
  %283 = load ptr, ptr %276, align 8, !tbaa !214
  %284 = getelementptr inbounds %struct.location_chain_def, ptr %275, i64 0, i32 3
  %285 = load i32, ptr %284, align 8, !tbaa !224
  %286 = load ptr, ptr %86, align 8, !tbaa !51
  %287 = icmp eq ptr %283, null
  br i1 %287, label %296, label %288

288:                                              ; preds = %281
  %289 = load i64, ptr %283, align 8
  %290 = and i64 %289, 65535
  %291 = icmp eq i64 %290, 1
  br i1 %291, label %292, label %296

292:                                              ; preds = %288
  %293 = getelementptr inbounds %struct.rtx_def, ptr %283, i64 0, i32 1
  %294 = load ptr, ptr %293, align 8, !tbaa !16
  %295 = getelementptr inbounds %struct.cselib_val_struct, ptr %294, i64 0, i32 1
  br label %298

296:                                              ; preds = %288, %281
  %297 = getelementptr inbounds %struct.tree_decl_minimal, ptr %283, i64 0, i32 2
  br label %298

298:                                              ; preds = %296, %292
  %299 = phi ptr [ %295, %292 ], [ %297, %296 ]
  %300 = load i32, ptr %299, align 4, !tbaa !16
  %301 = load i32, ptr %286, align 8, !tbaa !49
  %302 = getelementptr i8, ptr %286, i64 8
  %303 = load ptr, ptr %302, align 8, !tbaa !55
  %304 = icmp slt i32 %301, 2
  %305 = zext i1 %304 to i32
  %306 = tail call ptr @htab_find_slot_with_hash(ptr noundef %303, ptr noundef %283, i32 noundef %300, i32 noundef %305) #21
  %307 = icmp eq ptr %306, null
  br i1 %307, label %308, label %310

308:                                              ; preds = %298
  %309 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %86, ptr noundef %283, i32 noundef 1)
  br label %310

310:                                              ; preds = %298, %308
  %311 = phi ptr [ %306, %298 ], [ %309, %308 ]
  %312 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %4, ptr noundef nonnull %56, ptr noundef %311, ptr noundef %283, i64 noundef 0, i32 noundef %285, ptr noundef null)
  br label %313

313:                                              ; preds = %274, %310
  %314 = load ptr, ptr %275, align 8, !tbaa !5
  %315 = icmp eq ptr %314, null
  br i1 %315, label %316, label %274, !llvm.loop !262

316:                                              ; preds = %313, %269
  %317 = load ptr, ptr %86, align 8, !tbaa !51
  %318 = getelementptr i8, ptr %317, i64 8
  %319 = load ptr, ptr %318, align 8, !tbaa !55
  %320 = tail call ptr @htab_find_slot_with_hash(ptr noundef %319, ptr noundef %6, i32 noundef %57, i32 noundef 0) #21
  %321 = load ptr, ptr %320, align 8, !tbaa !5
  %322 = icmp eq ptr %321, %263
  br i1 %322, label %420, label %417

323:                                              ; preds = %266, %337
  %324 = phi ptr [ %340, %337 ], [ %267, %266 ]
  %325 = phi i8 [ %339, %337 ], [ 0, %266 ]
  %326 = phi i8 [ %338, %337 ], [ 0, %266 ]
  %327 = getelementptr inbounds %struct.location_chain_def, ptr %324, i64 0, i32 1
  %328 = load ptr, ptr %327, align 8, !tbaa !214
  %329 = load i32, ptr %328, align 8
  %330 = and i32 %329, 65535
  %331 = icmp eq i32 %330, 1
  br i1 %331, label %332, label %335

332:                                              ; preds = %323
  %333 = or i8 %325, %326
  %334 = icmp eq i8 %333, 0
  br i1 %334, label %337, label %342

335:                                              ; preds = %323
  %336 = icmp eq i8 %326, 0
  br i1 %336, label %337, label %342

337:                                              ; preds = %332, %335
  %338 = phi i8 [ 1, %332 ], [ 0, %335 ]
  %339 = phi i8 [ 0, %332 ], [ 1, %335 ]
  %340 = load ptr, ptr %324, align 8, !tbaa !5
  %341 = icmp eq ptr %340, null
  br i1 %341, label %342, label %323, !llvm.loop !263

342:                                              ; preds = %337, %332, %335
  %343 = phi i8 [ %338, %337 ], [ 1, %332 ], [ 1, %335 ]
  %344 = phi i8 [ %339, %337 ], [ 1, %332 ], [ 1, %335 ]
  %345 = icmp ne i8 %343, 0
  %346 = icmp ne i8 %344, 0
  %347 = and i1 %345, %346
  br i1 %347, label %348, label %424

348:                                              ; preds = %342
  br i1 %268, label %410, label %349

349:                                              ; preds = %348, %407
  %350 = phi ptr [ %408, %407 ], [ %267, %348 ]
  %351 = getelementptr inbounds %struct.location_chain_def, ptr %350, i64 0, i32 1
  %352 = load ptr, ptr %351, align 8, !tbaa !214
  %353 = load i32, ptr %352, align 8
  %354 = and i32 %353, 65535
  %355 = icmp eq i32 %354, 1
  br i1 %355, label %356, label %407

356:                                              ; preds = %349
  %357 = load ptr, ptr %86, align 8, !tbaa !51
  %358 = load i32, ptr %357, align 8, !tbaa !49
  %359 = icmp slt i32 %358, 2
  br i1 %359, label %377, label %360

360:                                              ; preds = %356
  %361 = load i64, ptr %352, align 8
  %362 = and i64 %361, 65535
  %363 = icmp eq i64 %362, 1
  br i1 %363, label %364, label %368

364:                                              ; preds = %360
  %365 = getelementptr inbounds %struct.rtx_def, ptr %352, i64 0, i32 1
  %366 = load ptr, ptr %365, align 8, !tbaa !16
  %367 = getelementptr inbounds %struct.cselib_val_struct, ptr %366, i64 0, i32 1
  br label %370

368:                                              ; preds = %360
  %369 = getelementptr inbounds %struct.tree_decl_minimal, ptr %352, i64 0, i32 2
  br label %370

370:                                              ; preds = %368, %364
  %371 = phi ptr [ %367, %364 ], [ %369, %368 ]
  %372 = load i32, ptr %371, align 4, !tbaa !16
  %373 = getelementptr i8, ptr %357, i64 8
  %374 = load ptr, ptr %373, align 8, !tbaa !55
  %375 = tail call ptr @htab_find_slot_with_hash(ptr noundef %374, ptr noundef nonnull %352, i32 noundef %372, i32 noundef 0) #21
  %376 = icmp eq ptr %375, null
  br i1 %376, label %377, label %379

377:                                              ; preds = %356, %370
  %378 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %86, ptr noundef nonnull %352, i32 noundef 1)
  br label %379

379:                                              ; preds = %377, %370
  %380 = phi ptr [ %375, %370 ], [ %378, %377 ]
  %381 = load ptr, ptr %380, align 8, !tbaa !5
  %382 = icmp eq ptr %381, null
  br i1 %382, label %383, label %403

383:                                              ; preds = %379
  %384 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %393, label %386

386:                                              ; preds = %383
  %387 = load i64, ptr %352, align 8
  %388 = trunc i64 %387 to i16
  switch i16 %388, label %389 [
    i16 1, label %394
    i16 37, label %394
  ]

389:                                              ; preds = %386
  %390 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %352) #21
  %391 = freeze ptr %390
  %392 = icmp eq ptr %391, null
  br i1 %392, label %393, label %394

393:                                              ; preds = %389, %383
  br label %394

394:                                              ; preds = %386, %386, %389, %393
  %395 = phi ptr [ @var_pool, %393 ], [ @valvar_pool, %389 ], [ @valvar_pool, %386 ], [ @valvar_pool, %386 ]
  %396 = load ptr, ptr %395, align 8
  %397 = tail call ptr @pool_alloc(ptr noundef %396) #21
  store ptr %352, ptr %397, align 8, !tbaa !181
  %398 = getelementptr inbounds %struct.variable_def, ptr %397, i64 0, i32 1
  store i32 1, ptr %398, align 8, !tbaa !183
  %399 = getelementptr inbounds %struct.variable_def, ptr %397, i64 0, i32 2
  store i8 1, ptr %399, align 4, !tbaa !184
  %400 = getelementptr inbounds %struct.variable_def, ptr %397, i64 0, i32 3
  store i8 0, ptr %400, align 1, !tbaa !211
  %401 = getelementptr inbounds %struct.variable_def, ptr %397, i64 0, i32 4
  store i8 0, ptr %401, align 2, !tbaa !212
  %402 = getelementptr inbounds %struct.variable_def, ptr %397, i64 0, i32 5
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %402, i8 0, i64 24, i1 false)
  store ptr %397, ptr %380, align 8, !tbaa !5
  br label %403

403:                                              ; preds = %394, %379
  %404 = load ptr, ptr %351, align 8, !tbaa !214
  %405 = load i32, ptr %404, align 8
  %406 = or i32 %405, 536870912
  store i32 %406, ptr %404, align 8
  br label %407

407:                                              ; preds = %349, %403
  %408 = load ptr, ptr %350, align 8, !tbaa !5
  %409 = icmp eq ptr %408, null
  br i1 %409, label %410, label %349, !llvm.loop !264

410:                                              ; preds = %407, %348
  %411 = load ptr, ptr %86, align 8, !tbaa !51
  %412 = getelementptr i8, ptr %411, i64 8
  %413 = load ptr, ptr %412, align 8, !tbaa !55
  %414 = tail call ptr @htab_find_slot_with_hash(ptr noundef %413, ptr noundef %6, i32 noundef %57, i32 noundef 0) #21
  %415 = load ptr, ptr %414, align 8, !tbaa !5
  %416 = icmp eq ptr %415, %263
  br i1 %416, label %420, label %417

417:                                              ; preds = %410, %316
  %418 = phi i32 [ 3493, %316 ], [ 3561, %410 ]
  %419 = phi ptr [ %320, %316 ], [ %414, %410 ]
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef %418, ptr noundef nonnull @.str.2) #21
  br label %420

420:                                              ; preds = %417, %410, %316
  %421 = phi ptr [ %320, %316 ], [ %414, %410 ], [ %419, %417 ]
  %422 = tail call i32 @canonicalize_values_star(ptr noundef nonnull %421, ptr noundef nonnull %4)
  %423 = load ptr, ptr %421, align 8, !tbaa !5
  br label %424

424:                                              ; preds = %420, %266, %342
  %425 = phi ptr [ %263, %342 ], [ %263, %266 ], [ %423, %420 ]
  %426 = phi ptr [ %262, %342 ], [ %262, %266 ], [ %421, %420 ]
  %427 = tail call fastcc zeroext i8 @onepart_variable_different_p(ptr noundef %425, ptr noundef nonnull %64), !range !37
  %428 = icmp eq i8 %427, 0
  br i1 %428, label %429, label %433

429:                                              ; preds = %424
  tail call void @variable_htab_free(ptr noundef %425)
  store ptr %64, ptr %426, align 8, !tbaa !5
  %430 = getelementptr inbounds %struct.variable_def, ptr %64, i64 0, i32 1
  %431 = load i32, ptr %430, align 8, !tbaa !183
  %432 = add nsw i32 %431, 1
  store i32 %432, ptr %430, align 8, !tbaa !183
  br label %443

433:                                              ; preds = %424
  %434 = icmp eq ptr %64, %5
  br i1 %434, label %442, label %435

435:                                              ; preds = %433
  %436 = tail call fastcc zeroext i8 @onepart_variable_different_p(ptr noundef %425, ptr noundef nonnull %5), !range !37
  %437 = icmp eq i8 %436, 0
  br i1 %437, label %438, label %442

438:                                              ; preds = %435
  tail call void @variable_htab_free(ptr noundef %425)
  store ptr %5, ptr %426, align 8, !tbaa !5
  %439 = getelementptr inbounds %struct.variable_def, ptr %5, i64 0, i32 1
  %440 = load i32, ptr %439, align 8, !tbaa !183
  %441 = add nsw i32 %440, 1
  store i32 %441, ptr %439, align 8, !tbaa !183
  store i1 false, ptr @dst_can_be_shared, align 1
  br label %443

442:                                              ; preds = %435, %433
  store i1 false, ptr @dst_can_be_shared, align 1
  br label %443

443:                                              ; preds = %429, %442, %438, %140, %66, %31
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #21
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @variable_union(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) #9 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !51
  %6 = load ptr, ptr %3, align 8, !tbaa !181
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = load i64, ptr %6, align 8
  %10 = and i64 %9, 65535
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.rtx_def, ptr %6, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !16
  %15 = getelementptr inbounds %struct.cselib_val_struct, ptr %14, i64 0, i32 1
  br label %18

16:                                               ; preds = %8, %2
  %17 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 2
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi ptr [ %15, %12 ], [ %17, %16 ]
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load i32, ptr %5, align 8, !tbaa !49
  %22 = getelementptr i8, ptr %5, i64 8
  %23 = load ptr, ptr %22, align 8, !tbaa !55
  %24 = icmp slt i32 %21, 2
  %25 = zext i1 %24 to i32
  %26 = tail call ptr @htab_find_slot_with_hash(ptr noundef %23, ptr noundef %6, i32 noundef %20, i32 noundef %25) #21
  %27 = icmp eq ptr %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %18
  %29 = load ptr, ptr %26, align 8, !tbaa !5
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %43

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !183
  %34 = add nsw i32 %33, 1
  store i32 %34, ptr %32, align 8, !tbaa !183
  store i1 false, ptr @dst_can_be_shared, align 1
  br label %41

35:                                               ; preds = %18
  %36 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 1
  %37 = load i32, ptr %36, align 8, !tbaa !183
  %38 = add nsw i32 %37, 1
  store i32 %38, ptr %36, align 8, !tbaa !183
  store i1 false, ptr @dst_can_be_shared, align 1
  %39 = load ptr, ptr %3, align 8, !tbaa !181
  %40 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %4, ptr noundef %39, i32 noundef 1)
  br label %41

41:                                               ; preds = %31, %35
  %42 = phi ptr [ %26, %31 ], [ %40, %35 ]
  store ptr %3, ptr %42, align 8, !tbaa !5
  br label %756

43:                                               ; preds = %28
  %44 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 2
  %45 = load i8, ptr %44, align 4, !tbaa !184
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %43
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 2097, ptr noundef nonnull @.str.2) #21
  br label %48

48:                                               ; preds = %43, %47
  %49 = load ptr, ptr %3, align 8, !tbaa !181
  %50 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %48
  %53 = icmp eq ptr %49, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %52
  %55 = load i64, ptr %49, align 8
  %56 = trunc i64 %55 to i16
  switch i16 %56, label %57 [
    i16 1, label %67
    i16 37, label %67
  ]

57:                                               ; preds = %54
  %58 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %49) #21
  %59 = icmp eq ptr %58, null
  br i1 %59, label %60, label %67

60:                                               ; preds = %48, %57
  %61 = load i8, ptr %44, align 4, !tbaa !184
  %62 = sext i8 %61 to i32
  %63 = icmp sgt i8 %61, 0
  %64 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 2
  %65 = load i8, ptr %64, align 4, !tbaa !184
  %66 = sext i8 %65 to i32
  br i1 %63, label %149, label %181

67:                                               ; preds = %52, %54, %54, %57
  %68 = load i8, ptr %44, align 4, !tbaa !184
  %69 = icmp eq i8 %68, 1
  br i1 %69, label %71, label %70

70:                                               ; preds = %67
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 2105, ptr noundef nonnull @.str.2) #21
  br label %71

71:                                               ; preds = %67, %70
  %72 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 2
  %73 = load i8, ptr %72, align 4, !tbaa !184
  %74 = icmp eq i8 %73, 1
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 2106, ptr noundef nonnull @.str.2) #21
  br label %76

76:                                               ; preds = %71, %75
  %77 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 5
  %78 = load ptr, ptr %77, align 8, !tbaa !185
  %79 = icmp eq ptr %78, null
  br i1 %79, label %80, label %81

80:                                               ; preds = %76
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 2109, ptr noundef nonnull @.str.2) #21
  br label %81

81:                                               ; preds = %76, %80
  br label %85

82:                                               ; preds = %115, %109
  %83 = tail call fastcc ptr @unshare_variable(ptr noundef nonnull %1, ptr noundef nonnull %87, ptr noundef nonnull %88, i32 noundef 2)
  %84 = load ptr, ptr %83, align 8, !tbaa !5
  br label %85

85:                                               ; preds = %81, %82
  %86 = phi ptr [ %98, %82 ], [ %78, %81 ]
  %87 = phi ptr [ %83, %82 ], [ %26, %81 ]
  %88 = phi ptr [ %84, %82 ], [ %29, %81 ]
  %89 = getelementptr inbounds %struct.variable_def, ptr %88, i64 0, i32 5
  %90 = load ptr, ptr %89, align 8, !tbaa !5
  %91 = icmp eq ptr %90, null
  br i1 %91, label %92, label %93

92:                                               ; preds = %85
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 2114, ptr noundef nonnull @.str.2) #21
  br label %93

93:                                               ; preds = %85, %92
  %94 = getelementptr i8, ptr %88, i64 8
  %95 = getelementptr i8, ptr %88, i64 14
  %96 = icmp eq ptr %86, null
  br i1 %96, label %756, label %97

97:                                               ; preds = %93, %144
  %98 = phi ptr [ %146, %144 ], [ %86, %93 ]
  %99 = phi ptr [ %147, %144 ], [ %90, %93 ]
  %100 = phi ptr [ %145, %144 ], [ %89, %93 ]
  %101 = icmp eq ptr %99, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %struct.location_chain_def, ptr %99, i64 0, i32 1
  %104 = load ptr, ptr %103, align 8, !tbaa !214
  %105 = getelementptr inbounds %struct.location_chain_def, ptr %98, i64 0, i32 1
  %106 = load ptr, ptr %105, align 8, !tbaa !214
  %107 = tail call fastcc i32 @loc_cmp(ptr noundef %104, ptr noundef %106), !range !217
  %108 = icmp sgt i32 %107, 0
  br i1 %108, label %109, label %139

109:                                              ; preds = %97, %102
  %110 = load i32, ptr %94, align 8, !tbaa !183
  %111 = load i8, ptr %95, align 2, !tbaa !212
  %112 = zext i8 %111 to i32
  %113 = add nuw nsw i32 %112, 1
  %114 = icmp slt i32 %113, %110
  br i1 %114, label %82, label %115

115:                                              ; preds = %109
  %116 = load ptr, ptr %4, align 8, !tbaa !51
  %117 = load i32, ptr %116, align 8, !tbaa !49
  %118 = icmp slt i32 %117, 2
  br i1 %118, label %119, label %82

119:                                              ; preds = %115
  %120 = load ptr, ptr @loc_chain_pool, align 8, !tbaa !5
  %121 = tail call ptr @pool_alloc(ptr noundef %120) #21
  store ptr %121, ptr %100, align 8, !tbaa !5
  %122 = getelementptr inbounds %struct.location_chain_def, ptr %98, i64 0, i32 1
  %123 = load ptr, ptr %122, align 8, !tbaa !214
  %124 = getelementptr inbounds %struct.location_chain_def, ptr %121, i64 0, i32 1
  store ptr %123, ptr %124, align 8, !tbaa !214
  %125 = getelementptr inbounds %struct.location_chain_def, ptr %98, i64 0, i32 3
  %126 = load i32, ptr %125, align 8, !tbaa !224
  %127 = getelementptr inbounds %struct.location_chain_def, ptr %121, i64 0, i32 3
  store i32 %126, ptr %127, align 8, !tbaa !224
  %128 = getelementptr inbounds %struct.location_chain_def, ptr %98, i64 0, i32 2
  %129 = load ptr, ptr %128, align 8, !tbaa !225
  %130 = icmp eq ptr %129, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %119
  %132 = load i32, ptr %129, align 8
  %133 = and i32 %132, 65535
  %134 = icmp eq i32 %133, 43
  %135 = select i1 %134, ptr null, ptr %129
  br label %136

136:                                              ; preds = %131, %119
  %137 = phi ptr [ null, %119 ], [ %135, %131 ]
  %138 = getelementptr inbounds %struct.location_chain_def, ptr %121, i64 0, i32 2
  store ptr %137, ptr %138, align 8, !tbaa !225
  store ptr %99, ptr %121, align 8, !tbaa !187
  br label %141

139:                                              ; preds = %102
  %140 = icmp sgt i32 %107, -1
  br i1 %140, label %141, label %144

141:                                              ; preds = %136, %139
  %142 = phi ptr [ %121, %136 ], [ %99, %139 ]
  %143 = load ptr, ptr %98, align 8, !tbaa !187
  br label %144

144:                                              ; preds = %139, %141
  %145 = phi ptr [ %142, %141 ], [ %99, %139 ]
  %146 = phi ptr [ %143, %141 ], [ %98, %139 ]
  %147 = load ptr, ptr %145, align 8, !tbaa !5
  %148 = icmp eq ptr %146, null
  br i1 %148, label %756, label %97

149:                                              ; preds = %60, %171
  %150 = phi i32 [ %173, %171 ], [ 0, %60 ]
  %151 = phi i32 [ %172, %171 ], [ 0, %60 ]
  %152 = phi i32 [ %174, %171 ], [ 0, %60 ]
  %153 = icmp slt i32 %151, %66
  br i1 %153, label %154, label %176

154:                                              ; preds = %149
  %155 = sext i32 %150 to i64
  %156 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 5, i64 %155, i32 2
  %157 = load i64, ptr %156, align 8, !tbaa !213
  %158 = sext i32 %151 to i64
  %159 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 5, i64 %158, i32 2
  %160 = load i64, ptr %159, align 8, !tbaa !213
  %161 = icmp eq i64 %157, %160
  br i1 %161, label %162, label %165

162:                                              ; preds = %154
  %163 = add nsw i32 %150, 1
  %164 = add nsw i32 %151, 1
  br label %171

165:                                              ; preds = %154
  %166 = icmp slt i64 %157, %160
  br i1 %166, label %167, label %169

167:                                              ; preds = %165
  %168 = add nsw i32 %150, 1
  br label %171

169:                                              ; preds = %165
  %170 = add nsw i32 %151, 1
  br label %171

171:                                              ; preds = %162, %169, %167
  %172 = phi i32 [ %164, %162 ], [ %151, %167 ], [ %170, %169 ]
  %173 = phi i32 [ %163, %162 ], [ %168, %167 ], [ %150, %169 ]
  %174 = add nuw nsw i32 %152, 1
  %175 = icmp slt i32 %173, %62
  br i1 %175, label %149, label %176, !llvm.loop !265

176:                                              ; preds = %171, %149
  %177 = phi i32 [ %152, %149 ], [ %174, %171 ]
  %178 = phi i32 [ %151, %149 ], [ %172, %171 ]
  %179 = phi i32 [ %150, %149 ], [ %173, %171 ]
  %180 = sub i32 %177, %179
  br label %181

181:                                              ; preds = %60, %176
  %182 = phi i32 [ %178, %176 ], [ 0, %60 ]
  %183 = phi i32 [ %180, %176 ], [ 0, %60 ]
  %184 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 2
  %185 = sub nsw i32 %66, %182
  %186 = add i32 %183, %62
  %187 = add i32 %186, %185
  %188 = load ptr, ptr %29, align 8, !tbaa !181
  %189 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %201, label %191

191:                                              ; preds = %181
  %192 = icmp eq ptr %188, null
  br i1 %192, label %199, label %193

193:                                              ; preds = %191
  %194 = load i64, ptr %188, align 8
  %195 = trunc i64 %194 to i16
  switch i16 %195, label %196 [
    i16 1, label %199
    i16 37, label %199
  ]

196:                                              ; preds = %193
  %197 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %188) #21
  %198 = icmp eq ptr %197, null
  br i1 %198, label %201, label %199

199:                                              ; preds = %191, %193, %193, %196
  %200 = icmp eq i32 %187, 1
  br i1 %200, label %204, label %203

201:                                              ; preds = %181, %196
  %202 = icmp slt i32 %187, 17
  br i1 %202, label %204, label %203

203:                                              ; preds = %201, %199
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 2176, ptr noundef nonnull @.str.2) #21
  br label %204

204:                                              ; preds = %199, %201, %203
  %205 = load i8, ptr %184, align 4, !tbaa !184
  %206 = sext i8 %205 to i32
  %207 = icmp eq i32 %187, %206
  br i1 %207, label %226, label %208

208:                                              ; preds = %204
  %209 = getelementptr i8, ptr %29, i64 8
  %210 = load i32, ptr %209, align 8, !tbaa !183
  %211 = getelementptr i8, ptr %29, i64 14
  %212 = load i8, ptr %211, align 2, !tbaa !212
  %213 = zext i8 %212 to i32
  %214 = add nuw nsw i32 %213, 1
  %215 = icmp slt i32 %214, %210
  br i1 %215, label %220, label %216

216:                                              ; preds = %208
  %217 = load ptr, ptr %4, align 8, !tbaa !51
  %218 = load i32, ptr %217, align 8, !tbaa !49
  %219 = icmp slt i32 %218, 2
  br i1 %219, label %226, label %220

220:                                              ; preds = %208, %216
  %221 = tail call fastcc ptr @unshare_variable(ptr noundef nonnull %1, ptr noundef nonnull %26, ptr noundef nonnull %29, i32 noundef 0)
  %222 = load ptr, ptr %221, align 8, !tbaa !5
  %223 = getelementptr inbounds %struct.variable_def, ptr %222, i64 0, i32 2
  %224 = load i8, ptr %223, align 4, !tbaa !184
  %225 = sext i8 %224 to i32
  br label %226

226:                                              ; preds = %220, %216, %204
  %227 = phi i32 [ %225, %220 ], [ %206, %216 ], [ %206, %204 ]
  %228 = phi ptr [ %221, %220 ], [ %26, %216 ], [ %26, %204 ]
  %229 = phi ptr [ %222, %220 ], [ %29, %216 ], [ %29, %204 ]
  %230 = load i8, ptr %44, align 4, !tbaa !184
  %231 = getelementptr inbounds %struct.variable_def, ptr %229, i64 0, i32 2
  %232 = trunc i32 %187 to i8
  store i8 %232, ptr %231, align 4, !tbaa !184
  %233 = icmp sgt i32 %187, 0
  br i1 %233, label %234, label %699

234:                                              ; preds = %226
  %235 = add nsw i32 %227, -1
  %236 = sext i8 %230 to i32
  %237 = add nsw i32 %236, -1
  %238 = zext i32 %187 to i64
  br label %239

239:                                              ; preds = %234, %690
  %240 = phi i64 [ %238, %234 ], [ %245, %690 ]
  %241 = phi ptr [ %229, %234 ], [ %694, %690 ]
  %242 = phi ptr [ %228, %234 ], [ %693, %690 ]
  %243 = phi i32 [ %237, %234 ], [ %692, %690 ]
  %244 = phi i32 [ %235, %234 ], [ %691, %690 ]
  %245 = add nsw i64 %240, -1
  %246 = icmp sgt i32 %243, -1
  %247 = icmp sgt i32 %244, -1
  %248 = select i1 %246, i1 %247, i1 false
  br i1 %248, label %249, label %639

249:                                              ; preds = %239
  %250 = zext i32 %243 to i64
  %251 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 5, i64 %250
  %252 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 5, i64 %250, i32 2
  %253 = load i64, ptr %252, align 8, !tbaa !213
  %254 = zext i32 %244 to i64
  %255 = getelementptr inbounds %struct.variable_def, ptr %241, i64 0, i32 5, i64 %254
  %256 = getelementptr inbounds %struct.variable_def, ptr %241, i64 0, i32 5, i64 %254, i32 2
  %257 = load i64, ptr %256, align 8, !tbaa !213
  %258 = icmp eq i64 %253, %257
  br i1 %258, label %259, label %637

259:                                              ; preds = %249
  %260 = getelementptr i8, ptr %241, i64 8
  %261 = load i32, ptr %260, align 8, !tbaa !183
  %262 = getelementptr i8, ptr %241, i64 14
  %263 = load i8, ptr %262, align 2, !tbaa !212
  %264 = zext i8 %263 to i32
  %265 = add nuw nsw i32 %264, 1
  %266 = icmp slt i32 %265, %261
  br i1 %266, label %271, label %267

267:                                              ; preds = %259
  %268 = load ptr, ptr %4, align 8, !tbaa !51
  %269 = load i32, ptr %268, align 8, !tbaa !49
  %270 = icmp slt i32 %269, 2
  br i1 %270, label %320, label %271

271:                                              ; preds = %259, %267
  %272 = load ptr, ptr %255, align 8, !tbaa !5
  %273 = load ptr, ptr %251, align 8, !tbaa !5
  %274 = icmp ne ptr %273, null
  %275 = icmp ne ptr %272, null
  %276 = select i1 %274, i1 %275, i1 false
  br i1 %276, label %277, label %313

277:                                              ; preds = %271, %307
  %278 = phi ptr [ %309, %307 ], [ %273, %271 ]
  %279 = phi ptr [ %308, %307 ], [ %272, %271 ]
  %280 = getelementptr inbounds %struct.location_chain_def, ptr %279, i64 0, i32 1
  %281 = load ptr, ptr %280, align 8, !tbaa !214
  %282 = load i32, ptr %281, align 8
  %283 = and i32 %282, 65535
  %284 = icmp eq i32 %283, 37
  %285 = getelementptr inbounds %struct.location_chain_def, ptr %278, i64 0, i32 1
  %286 = load ptr, ptr %285, align 8, !tbaa !214
  br i1 %284, label %287, label %297

287:                                              ; preds = %277
  %288 = load i32, ptr %286, align 8
  %289 = and i32 %288, 65535
  %290 = icmp eq i32 %289, 37
  br i1 %290, label %291, label %297

291:                                              ; preds = %287
  %292 = getelementptr i8, ptr %281, i64 8
  %293 = load i32, ptr %292, align 8, !tbaa !16
  %294 = getelementptr i8, ptr %286, i64 8
  %295 = load i32, ptr %294, align 8, !tbaa !16
  %296 = icmp eq i32 %293, %295
  br i1 %296, label %307, label %297

297:                                              ; preds = %277, %291, %287
  %298 = tail call i32 @rtx_equal_p(ptr noundef nonnull %281, ptr noundef %286) #21
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %307

300:                                              ; preds = %297
  %301 = getelementptr inbounds %struct.location_chain_def, ptr %279, i64 0, i32 3
  %302 = load i32, ptr %301, align 8, !tbaa !224
  %303 = getelementptr inbounds %struct.location_chain_def, ptr %278, i64 0, i32 3
  %304 = load i32, ptr %303, align 8, !tbaa !224
  %305 = icmp ult i32 %302, %304
  br i1 %305, label %306, label %317

306:                                              ; preds = %300
  store i32 %304, ptr %301, align 8, !tbaa !224
  br label %317

307:                                              ; preds = %291, %297
  %308 = load ptr, ptr %279, align 8, !tbaa !5
  %309 = load ptr, ptr %278, align 8, !tbaa !5
  %310 = icmp ne ptr %309, null
  %311 = icmp ne ptr %308, null
  %312 = select i1 %310, i1 %311, i1 false
  br i1 %312, label %277, label %313, !llvm.loop !266

313:                                              ; preds = %307, %271
  %314 = phi i1 [ %274, %271 ], [ %310, %307 ]
  %315 = phi i1 [ %275, %271 ], [ %311, %307 ]
  %316 = select i1 %314, i1 true, i1 %315
  br i1 %316, label %317, label %320

317:                                              ; preds = %306, %300, %313
  %318 = tail call fastcc ptr @unshare_variable(ptr noundef %1, ptr noundef %242, ptr noundef %241, i32 noundef 0)
  %319 = load ptr, ptr %318, align 8, !tbaa !5
  br label %320

320:                                              ; preds = %317, %313, %267
  %321 = phi ptr [ %318, %317 ], [ %242, %313 ], [ %242, %267 ]
  %322 = phi ptr [ %319, %317 ], [ %241, %313 ], [ %241, %267 ]
  br label %323

323:                                              ; preds = %323, %320
  %324 = phi ptr [ %251, %320 ], [ %326, %323 ]
  %325 = phi i32 [ 0, %320 ], [ %328, %323 ]
  %326 = load ptr, ptr %324, align 8, !tbaa !5
  %327 = icmp eq ptr %326, null
  %328 = add nuw nsw i32 %325, 1
  br i1 %327, label %329, label %323, !llvm.loop !267

329:                                              ; preds = %323
  %330 = getelementptr inbounds %struct.variable_def, ptr %322, i64 0, i32 5, i64 %254
  br label %331

331:                                              ; preds = %331, %329
  %332 = phi ptr [ %330, %329 ], [ %334, %331 ]
  %333 = phi i32 [ 0, %329 ], [ %336, %331 ]
  %334 = load ptr, ptr %332, align 8, !tbaa !5
  %335 = icmp eq ptr %334, null
  %336 = add nuw nsw i32 %333, 1
  br i1 %335, label %337, label %331, !llvm.loop !268

337:                                              ; preds = %331
  %338 = icmp eq i32 %333, 1
  br i1 %338, label %339, label %398

339:                                              ; preds = %337
  %340 = load ptr, ptr %330, align 8, !tbaa !185
  %341 = and i64 %245, 4294967295
  %342 = getelementptr inbounds %struct.variable_def, ptr %322, i64 0, i32 5, i64 %341
  store ptr %340, ptr %342, align 8, !tbaa !185
  %343 = getelementptr inbounds %struct.variable_def, ptr %322, i64 0, i32 5, i64 %254, i32 2
  %344 = load i64, ptr %343, align 8, !tbaa !213
  %345 = getelementptr inbounds %struct.variable_def, ptr %322, i64 0, i32 5, i64 %341, i32 2
  store i64 %344, ptr %345, align 8, !tbaa !213
  %346 = load ptr, ptr %251, align 8, !tbaa !5
  %347 = icmp eq ptr %346, null
  br i1 %347, label %396, label %348

348:                                              ; preds = %339
  %349 = getelementptr inbounds %struct.location_chain_def, ptr %340, i64 0, i32 1
  br label %350

350:                                              ; preds = %348, %392
  %351 = phi ptr [ %346, %348 ], [ %394, %392 ]
  %352 = phi ptr [ %340, %348 ], [ %393, %392 ]
  %353 = load ptr, ptr %349, align 8, !tbaa !214
  %354 = load i32, ptr %353, align 8
  %355 = and i32 %354, 65535
  %356 = icmp eq i32 %355, 37
  %357 = getelementptr inbounds %struct.location_chain_def, ptr %351, i64 0, i32 1
  %358 = load ptr, ptr %357, align 8, !tbaa !214
  br i1 %356, label %359, label %369

359:                                              ; preds = %350
  %360 = load i32, ptr %358, align 8
  %361 = and i32 %360, 65535
  %362 = icmp eq i32 %361, 37
  br i1 %362, label %363, label %369

363:                                              ; preds = %359
  %364 = getelementptr i8, ptr %353, i64 8
  %365 = load i32, ptr %364, align 8, !tbaa !16
  %366 = getelementptr i8, ptr %358, i64 8
  %367 = load i32, ptr %366, align 8, !tbaa !16
  %368 = icmp eq i32 %365, %367
  br i1 %368, label %392, label %369

369:                                              ; preds = %350, %363, %359
  %370 = tail call i32 @rtx_equal_p(ptr noundef nonnull %353, ptr noundef %358) #21
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %392

372:                                              ; preds = %369
  %373 = getelementptr inbounds %struct.location_chain_def, ptr %351, i64 0, i32 1
  %374 = load ptr, ptr @loc_chain_pool, align 8, !tbaa !5
  %375 = tail call ptr @pool_alloc(ptr noundef %374) #21
  %376 = load ptr, ptr %373, align 8, !tbaa !214
  %377 = getelementptr inbounds %struct.location_chain_def, ptr %375, i64 0, i32 1
  store ptr %376, ptr %377, align 8, !tbaa !214
  %378 = getelementptr inbounds %struct.location_chain_def, ptr %351, i64 0, i32 3
  %379 = load i32, ptr %378, align 8, !tbaa !224
  %380 = getelementptr inbounds %struct.location_chain_def, ptr %375, i64 0, i32 3
  store i32 %379, ptr %380, align 8, !tbaa !224
  %381 = getelementptr inbounds %struct.location_chain_def, ptr %351, i64 0, i32 2
  %382 = load ptr, ptr %381, align 8, !tbaa !225
  %383 = icmp eq ptr %382, null
  br i1 %383, label %389, label %384

384:                                              ; preds = %372
  %385 = load i32, ptr %382, align 8
  %386 = and i32 %385, 65535
  %387 = icmp eq i32 %386, 43
  %388 = select i1 %387, ptr null, ptr %382
  br label %389

389:                                              ; preds = %384, %372
  %390 = phi ptr [ null, %372 ], [ %388, %384 ]
  %391 = getelementptr inbounds %struct.location_chain_def, ptr %375, i64 0, i32 2
  store ptr %390, ptr %391, align 8, !tbaa !225
  store ptr %375, ptr %352, align 8, !tbaa !187
  br label %392

392:                                              ; preds = %363, %369, %389
  %393 = phi ptr [ %352, %363 ], [ %352, %369 ], [ %375, %389 ]
  %394 = load ptr, ptr %351, align 8, !tbaa !5
  %395 = icmp eq ptr %394, null
  br i1 %395, label %396, label %350, !llvm.loop !269

396:                                              ; preds = %392, %339
  %397 = phi ptr [ %340, %339 ], [ %393, %392 ]
  store ptr null, ptr %397, align 8, !tbaa !187
  br label %634

398:                                              ; preds = %337
  %399 = add nuw i32 %333, %325
  %400 = load i32, ptr @vui_allocated, align 4, !tbaa !20
  %401 = icmp sgt i32 %399, %400
  %402 = load ptr, ptr @vui_vec, align 8, !tbaa !5
  br i1 %401, label %403, label %409

403:                                              ; preds = %398
  %404 = shl nuw nsw i32 %400, 1
  %405 = tail call i32 @llvm.umax.i32(i32 %404, i32 %399)
  store i32 %405, ptr @vui_allocated, align 4, !tbaa !20
  %406 = zext i32 %405 to i64
  %407 = shl nuw nsw i64 %406, 4
  %408 = tail call ptr @xrealloc(ptr noundef %402, i64 noundef %407) #21
  store ptr %408, ptr @vui_vec, align 8, !tbaa !5
  br label %409

409:                                              ; preds = %403, %398
  %410 = phi ptr [ %408, %403 ], [ %402, %398 ]
  %411 = load ptr, ptr %330, align 8, !tbaa !5
  %412 = icmp eq ptr %411, null
  br i1 %412, label %413, label %419

413:                                              ; preds = %419, %409
  %414 = load ptr, ptr %251, align 8, !tbaa !5
  %415 = icmp eq ptr %414, null
  br i1 %415, label %497, label %416

416:                                              ; preds = %413
  %417 = icmp eq i32 %333, 0
  %418 = zext i32 %333 to i64
  br label %430

419:                                              ; preds = %409, %419
  %420 = phi i64 [ %427, %419 ], [ 0, %409 ]
  %421 = phi ptr [ %428, %419 ], [ %411, %409 ]
  %422 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %420
  store ptr %421, ptr %422, align 8, !tbaa !270
  %423 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %420, i32 2
  %424 = trunc i64 %420 to i32
  store i32 %424, ptr %423, align 4, !tbaa !272
  %425 = add i32 %399, %424
  %426 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %420, i32 1
  store i32 %425, ptr %426, align 8, !tbaa !273
  %427 = add nuw i64 %420, 1
  %428 = load ptr, ptr %421, align 8, !tbaa !5
  %429 = icmp eq ptr %428, null
  br i1 %429, label %413, label %419, !llvm.loop !274

430:                                              ; preds = %416, %492
  %431 = phi ptr [ %414, %416 ], [ %495, %492 ]
  %432 = phi i32 [ %333, %416 ], [ %493, %492 ]
  %433 = phi i32 [ 0, %416 ], [ %494, %492 ]
  br i1 %417, label %466, label %434

434:                                              ; preds = %430
  %435 = getelementptr inbounds %struct.location_chain_def, ptr %431, i64 0, i32 1
  br label %436

436:                                              ; preds = %434, %463
  %437 = phi i64 [ 0, %434 ], [ %464, %463 ]
  %438 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %437
  %439 = load ptr, ptr %438, align 8, !tbaa !270
  %440 = getelementptr inbounds %struct.location_chain_def, ptr %439, i64 0, i32 1
  %441 = load ptr, ptr %440, align 8, !tbaa !214
  %442 = load i32, ptr %441, align 8
  %443 = and i32 %442, 65535
  %444 = icmp eq i32 %443, 37
  %445 = load ptr, ptr %435, align 8, !tbaa !214
  br i1 %444, label %446, label %456

446:                                              ; preds = %436
  %447 = load i32, ptr %445, align 8
  %448 = and i32 %447, 65535
  %449 = icmp eq i32 %448, 37
  br i1 %449, label %450, label %456

450:                                              ; preds = %446
  %451 = getelementptr i8, ptr %441, i64 8
  %452 = load i32, ptr %451, align 8, !tbaa !16
  %453 = getelementptr i8, ptr %445, i64 8
  %454 = load i32, ptr %453, align 8, !tbaa !16
  %455 = icmp eq i32 %452, %454
  br i1 %455, label %459, label %456

456:                                              ; preds = %450, %446, %436
  %457 = tail call i32 @rtx_equal_p(ptr noundef nonnull %441, ptr noundef %445) #21
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %463, label %459

459:                                              ; preds = %450, %456
  %460 = trunc i64 %437 to i32
  %461 = add nuw nsw i32 %433, %460
  %462 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %437, i32 1
  store i32 %461, ptr %462, align 8, !tbaa !273
  br label %492

463:                                              ; preds = %456
  %464 = add nuw nsw i64 %437, 1
  %465 = icmp eq i64 %464, %418
  br i1 %465, label %466, label %436, !llvm.loop !275

466:                                              ; preds = %463, %430
  %467 = load ptr, ptr @loc_chain_pool, align 8, !tbaa !5
  %468 = tail call ptr @pool_alloc(ptr noundef %467) #21
  %469 = getelementptr inbounds %struct.location_chain_def, ptr %431, i64 0, i32 1
  %470 = load ptr, ptr %469, align 8, !tbaa !214
  %471 = getelementptr inbounds %struct.location_chain_def, ptr %468, i64 0, i32 1
  store ptr %470, ptr %471, align 8, !tbaa !214
  %472 = getelementptr inbounds %struct.location_chain_def, ptr %431, i64 0, i32 3
  %473 = load i32, ptr %472, align 8, !tbaa !224
  %474 = getelementptr inbounds %struct.location_chain_def, ptr %468, i64 0, i32 3
  store i32 %473, ptr %474, align 8, !tbaa !224
  %475 = getelementptr inbounds %struct.location_chain_def, ptr %431, i64 0, i32 2
  %476 = load ptr, ptr %475, align 8, !tbaa !225
  %477 = icmp eq ptr %476, null
  br i1 %477, label %483, label %478

478:                                              ; preds = %466
  %479 = load i32, ptr %476, align 8
  %480 = and i32 %479, 65535
  %481 = icmp eq i32 %480, 43
  %482 = select i1 %481, ptr null, ptr %476
  br label %483

483:                                              ; preds = %478, %466
  %484 = phi ptr [ null, %466 ], [ %482, %478 ]
  %485 = getelementptr inbounds %struct.location_chain_def, ptr %468, i64 0, i32 2
  store ptr %484, ptr %485, align 8, !tbaa !225
  %486 = sext i32 %432 to i64
  %487 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %486
  store ptr %468, ptr %487, align 8, !tbaa !270
  %488 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %486, i32 2
  store i32 %399, ptr %488, align 4, !tbaa !272
  %489 = add i32 %399, %433
  %490 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %486, i32 1
  store i32 %489, ptr %490, align 8, !tbaa !273
  %491 = add nsw i32 %432, 1
  br label %492

492:                                              ; preds = %459, %483
  %493 = phi i32 [ %491, %483 ], [ %432, %459 ]
  %494 = add nuw nsw i32 %433, 1
  %495 = load ptr, ptr %431, align 8, !tbaa !5
  %496 = icmp eq ptr %495, null
  br i1 %496, label %497, label %430, !llvm.loop !276

497:                                              ; preds = %492, %413
  %498 = phi i32 [ %333, %413 ], [ %493, %492 ]
  %499 = icmp eq i32 %333, 2
  br i1 %499, label %500, label %579

500:                                              ; preds = %497
  %501 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 0, i32 1
  %502 = load i32, ptr %501, align 8, !tbaa !273
  %503 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 1
  %504 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 1, i32 1
  %505 = load i32, ptr %504, align 8, !tbaa !273
  %506 = icmp sgt i32 %502, %505
  %507 = and i64 %245, 4294967295
  %508 = getelementptr inbounds %struct.variable_def, ptr %322, i64 0, i32 5, i64 %507
  br i1 %506, label %509, label %518

509:                                              ; preds = %500
  %510 = load ptr, ptr %503, align 8, !tbaa !270
  store ptr %510, ptr %508, align 8, !tbaa !185
  %511 = load ptr, ptr %410, align 8, !tbaa !270
  store ptr %511, ptr %510, align 8, !tbaa !187
  %512 = icmp sgt i32 %498, 2
  br i1 %512, label %513, label %543

513:                                              ; preds = %509
  %514 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 2
  %515 = load ptr, ptr %514, align 8, !tbaa !270
  store ptr %515, ptr %511, align 8, !tbaa !187
  %516 = add nsw i32 %498, -1
  %517 = zext i32 %516 to i64
  br label %538

518:                                              ; preds = %500
  %519 = load ptr, ptr %410, align 8, !tbaa !270
  store ptr %519, ptr %508, align 8, !tbaa !185
  %520 = icmp sgt i32 %498, 2
  br i1 %520, label %521, label %535

521:                                              ; preds = %518
  %522 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 2, i32 1
  %523 = load i32, ptr %522, align 8, !tbaa !273
  %524 = icmp slt i32 %523, %505
  br i1 %524, label %525, label %535

525:                                              ; preds = %521
  %526 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 2
  %527 = load ptr, ptr %526, align 8, !tbaa !270
  store ptr %527, ptr %519, align 8, !tbaa !187
  %528 = load ptr, ptr %503, align 8, !tbaa !270
  store ptr %528, ptr %527, align 8, !tbaa !187
  %529 = icmp ugt i32 %498, 3
  br i1 %529, label %530, label %543

530:                                              ; preds = %525
  %531 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 3
  %532 = load ptr, ptr %531, align 8, !tbaa !270
  store ptr %532, ptr %528, align 8, !tbaa !187
  %533 = add nsw i32 %498, -1
  %534 = zext i32 %533 to i64
  br label %538

535:                                              ; preds = %521, %518
  %536 = add nsw i32 %498, -1
  %537 = sext i32 %536 to i64
  br label %538

538:                                              ; preds = %535, %513, %530
  %539 = phi i64 [ %534, %530 ], [ %517, %513 ], [ %537, %535 ]
  %540 = phi i32 [ 4, %530 ], [ 3, %513 ], [ 1, %535 ]
  %541 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %539
  %542 = load ptr, ptr %541, align 8, !tbaa !270
  br label %543

543:                                              ; preds = %538, %525, %509
  %544 = phi ptr [ %511, %509 ], [ %528, %525 ], [ %542, %538 ]
  %545 = phi i32 [ 3, %509 ], [ 4, %525 ], [ %540, %538 ]
  store ptr null, ptr %544, align 8, !tbaa !187
  %546 = icmp slt i32 %545, %498
  br i1 %546, label %547, label %629

547:                                              ; preds = %543
  %548 = zext i32 %545 to i64
  %549 = zext i32 %498 to i64
  %550 = sub nsw i64 %549, %548
  %551 = xor i64 %548, -1
  %552 = and i64 %550, 1
  %553 = icmp eq i64 %552, 0
  br i1 %553, label %561, label %554

554:                                              ; preds = %547
  %555 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %548
  %556 = load ptr, ptr %555, align 8, !tbaa !270
  %557 = add nsw i64 %548, -1
  %558 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %557
  %559 = load ptr, ptr %558, align 8, !tbaa !270
  store ptr %556, ptr %559, align 8, !tbaa !187
  %560 = add nuw nsw i64 %548, 1
  br label %561

561:                                              ; preds = %554, %547
  %562 = phi i64 [ %548, %547 ], [ %560, %554 ]
  %563 = sub nsw i64 0, %549
  %564 = icmp eq i64 %551, %563
  br i1 %564, label %629, label %565

565:                                              ; preds = %561, %565
  %566 = phi i64 [ %577, %565 ], [ %562, %561 ]
  %567 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %566
  %568 = load ptr, ptr %567, align 8, !tbaa !270
  %569 = add nsw i64 %566, -1
  %570 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %569
  %571 = load ptr, ptr %570, align 8, !tbaa !270
  store ptr %568, ptr %571, align 8, !tbaa !187
  %572 = add nuw nsw i64 %566, 1
  %573 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %572
  %574 = load ptr, ptr %573, align 8, !tbaa !270
  %575 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %566
  %576 = load ptr, ptr %575, align 8, !tbaa !270
  store ptr %574, ptr %576, align 8, !tbaa !187
  %577 = add nuw nsw i64 %566, 2
  %578 = icmp eq i64 %577, %549
  br i1 %578, label %629, label %565, !llvm.loop !277

579:                                              ; preds = %497
  %580 = sext i32 %498 to i64
  tail call void @spec_qsort(ptr noundef %410, i64 noundef %580, i64 noundef 16, ptr noundef nonnull @variable_union_info_cmp_pos) #21
  %581 = icmp sgt i32 %498, 1
  %582 = load ptr, ptr %410, align 8, !tbaa !270
  br i1 %581, label %583, label %622

583:                                              ; preds = %579
  %584 = zext i32 %498 to i64
  %585 = add nsw i64 %584, -1
  %586 = add nsw i64 %584, -2
  %587 = and i64 %585, 3
  %588 = icmp ult i64 %586, 3
  br i1 %588, label %609, label %589

589:                                              ; preds = %583
  %590 = and i64 %585, -4
  br label %591

591:                                              ; preds = %591, %589
  %592 = phi ptr [ %582, %589 ], [ %605, %591 ]
  %593 = phi i64 [ 1, %589 ], [ %606, %591 ]
  %594 = phi i64 [ 0, %589 ], [ %607, %591 ]
  %595 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %593
  %596 = load ptr, ptr %595, align 8, !tbaa !270
  store ptr %596, ptr %592, align 8, !tbaa !187
  %597 = add nuw nsw i64 %593, 1
  %598 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %597
  %599 = load ptr, ptr %598, align 8, !tbaa !270
  store ptr %599, ptr %596, align 8, !tbaa !187
  %600 = add nuw nsw i64 %593, 2
  %601 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %600
  %602 = load ptr, ptr %601, align 8, !tbaa !270
  store ptr %602, ptr %599, align 8, !tbaa !187
  %603 = add nuw nsw i64 %593, 3
  %604 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %603
  %605 = load ptr, ptr %604, align 8, !tbaa !270
  store ptr %605, ptr %602, align 8, !tbaa !187
  %606 = add nuw nsw i64 %593, 4
  %607 = add i64 %594, 4
  %608 = icmp eq i64 %607, %590
  br i1 %608, label %609, label %591, !llvm.loop !278

609:                                              ; preds = %591, %583
  %610 = phi ptr [ %582, %583 ], [ %605, %591 ]
  %611 = phi i64 [ 1, %583 ], [ %606, %591 ]
  %612 = icmp eq i64 %587, 0
  br i1 %612, label %622, label %613

613:                                              ; preds = %609, %613
  %614 = phi ptr [ %618, %613 ], [ %610, %609 ]
  %615 = phi i64 [ %619, %613 ], [ %611, %609 ]
  %616 = phi i64 [ %620, %613 ], [ 0, %609 ]
  %617 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %615
  %618 = load ptr, ptr %617, align 8, !tbaa !270
  store ptr %618, ptr %614, align 8, !tbaa !187
  %619 = add nuw nsw i64 %615, 1
  %620 = add i64 %616, 1
  %621 = icmp eq i64 %620, %587
  br i1 %621, label %622, label %613, !llvm.loop !279

622:                                              ; preds = %609, %613, %579
  %623 = add nsw i32 %498, -1
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds %struct.variable_union_info, ptr %410, i64 %624
  %626 = load ptr, ptr %625, align 8, !tbaa !270
  store ptr null, ptr %626, align 8, !tbaa !187
  %627 = and i64 %245, 4294967295
  %628 = getelementptr inbounds %struct.variable_def, ptr %322, i64 0, i32 5, i64 %627
  store ptr %582, ptr %628, align 8, !tbaa !185
  br label %629

629:                                              ; preds = %561, %565, %543, %622
  %630 = getelementptr inbounds %struct.variable_def, ptr %322, i64 0, i32 5, i64 %254, i32 2
  %631 = load i64, ptr %630, align 8, !tbaa !213
  %632 = and i64 %245, 4294967295
  %633 = getelementptr inbounds %struct.variable_def, ptr %322, i64 0, i32 5, i64 %632, i32 2
  store i64 %631, ptr %633, align 8, !tbaa !213
  br label %634

634:                                              ; preds = %629, %396
  %635 = add nsw i32 %243, -1
  %636 = add nsw i32 %244, -1
  br label %690

637:                                              ; preds = %249
  %638 = icmp slt i64 %253, %257
  br i1 %638, label %641, label %647

639:                                              ; preds = %239
  %640 = icmp slt i32 %243, 0
  br i1 %640, label %641, label %649

641:                                              ; preds = %639, %637
  %642 = and i64 %245, 4294967295
  %643 = getelementptr inbounds %struct.variable_def, ptr %241, i64 0, i32 5, i64 %642
  %644 = sext i32 %244 to i64
  %645 = getelementptr inbounds %struct.variable_def, ptr %241, i64 0, i32 5, i64 %644
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %643, ptr noundef nonnull align 8 dereferenceable(24) %645, i64 24, i1 false), !tbaa.struct !226
  %646 = add nsw i32 %244, -1
  br label %690

647:                                              ; preds = %637
  %648 = icmp sgt i64 %253, %257
  br i1 %648, label %653, label %690

649:                                              ; preds = %639
  %650 = icmp slt i32 %244, 0
  br i1 %650, label %651, label %690

651:                                              ; preds = %649
  %652 = zext i32 %243 to i64
  br label %653

653:                                              ; preds = %651, %647
  %654 = phi i64 [ %652, %651 ], [ %250, %647 ]
  %655 = and i64 %245, 4294967295
  %656 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 5, i64 %654
  %657 = load ptr, ptr %656, align 8, !tbaa !5
  %658 = icmp eq ptr %657, null
  br i1 %658, label %685, label %659

659:                                              ; preds = %653
  %660 = getelementptr inbounds %struct.variable_def, ptr %241, i64 0, i32 5, i64 %655
  br label %661

661:                                              ; preds = %659, %677
  %662 = phi ptr [ %683, %677 ], [ %657, %659 ]
  %663 = phi ptr [ %665, %677 ], [ %660, %659 ]
  %664 = load ptr, ptr @loc_chain_pool, align 8, !tbaa !5
  %665 = tail call ptr @pool_alloc(ptr noundef %664) #21
  store ptr null, ptr %665, align 8, !tbaa !187
  %666 = getelementptr inbounds %struct.location_chain_def, ptr %662, i64 0, i32 3
  %667 = load i32, ptr %666, align 8, !tbaa !224
  %668 = getelementptr inbounds %struct.location_chain_def, ptr %665, i64 0, i32 3
  store i32 %667, ptr %668, align 8, !tbaa !224
  %669 = getelementptr inbounds %struct.location_chain_def, ptr %662, i64 0, i32 2
  %670 = load ptr, ptr %669, align 8, !tbaa !225
  %671 = icmp eq ptr %670, null
  br i1 %671, label %677, label %672

672:                                              ; preds = %661
  %673 = load i32, ptr %670, align 8
  %674 = and i32 %673, 65535
  %675 = icmp eq i32 %674, 43
  %676 = select i1 %675, ptr null, ptr %670
  br label %677

677:                                              ; preds = %672, %661
  %678 = phi ptr [ null, %661 ], [ %676, %672 ]
  %679 = getelementptr inbounds %struct.location_chain_def, ptr %665, i64 0, i32 2
  store ptr %678, ptr %679, align 8, !tbaa !225
  %680 = getelementptr inbounds %struct.location_chain_def, ptr %662, i64 0, i32 1
  %681 = load ptr, ptr %680, align 8, !tbaa !214
  %682 = getelementptr inbounds %struct.location_chain_def, ptr %665, i64 0, i32 1
  store ptr %681, ptr %682, align 8, !tbaa !214
  store ptr %665, ptr %663, align 8, !tbaa !5
  %683 = load ptr, ptr %662, align 8, !tbaa !5
  %684 = icmp eq ptr %683, null
  br i1 %684, label %685, label %661, !llvm.loop !280

685:                                              ; preds = %677, %653
  %686 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 5, i64 %654, i32 2
  %687 = load i64, ptr %686, align 8, !tbaa !213
  %688 = getelementptr inbounds %struct.variable_def, ptr %241, i64 0, i32 5, i64 %655, i32 2
  store i64 %687, ptr %688, align 8, !tbaa !213
  %689 = add nsw i32 %243, -1
  br label %690

690:                                              ; preds = %641, %647, %685, %649, %634
  %691 = phi i32 [ %636, %634 ], [ %646, %641 ], [ %244, %685 ], [ %244, %647 ], [ %244, %649 ]
  %692 = phi i32 [ %635, %634 ], [ %243, %641 ], [ %689, %685 ], [ %243, %647 ], [ %243, %649 ]
  %693 = phi ptr [ %321, %634 ], [ %242, %641 ], [ %242, %685 ], [ %242, %647 ], [ %242, %649 ]
  %694 = phi ptr [ %322, %634 ], [ %241, %641 ], [ %241, %685 ], [ %241, %647 ], [ %241, %649 ]
  %695 = and i64 %245, 4294967295
  %696 = getelementptr inbounds %struct.variable_def, ptr %694, i64 0, i32 5, i64 %695, i32 1
  store ptr null, ptr %696, align 8, !tbaa !229
  %697 = trunc i64 %240 to i32
  %698 = icmp sgt i32 %697, 1
  br i1 %698, label %239, label %699, !llvm.loop !281

699:                                              ; preds = %690, %226
  %700 = phi ptr [ %229, %226 ], [ %694, %690 ]
  %701 = load i32, ptr @flag_var_tracking_uninit, align 4, !tbaa !20
  %702 = icmp eq i32 %701, 0
  br i1 %702, label %756, label %703

703:                                              ; preds = %699
  %704 = getelementptr inbounds %struct.variable_def, ptr %700, i64 0, i32 2
  %705 = load i8, ptr %44, align 4, !tbaa !184
  %706 = icmp sgt i8 %705, 0
  br i1 %706, label %707, label %756

707:                                              ; preds = %703, %751
  %708 = phi i8 [ %752, %751 ], [ %705, %703 ]
  %709 = phi i64 [ %753, %751 ], [ 0, %703 ]
  %710 = load i8, ptr %704, align 4, !tbaa !184
  %711 = sext i8 %710 to i64
  %712 = icmp slt i64 %709, %711
  br i1 %712, label %713, label %756

713:                                              ; preds = %707
  %714 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 5, i64 %709
  %715 = load ptr, ptr %714, align 8, !tbaa !5
  %716 = icmp eq ptr %715, null
  br i1 %716, label %751, label %717

717:                                              ; preds = %713
  %718 = getelementptr inbounds %struct.variable_def, ptr %700, i64 0, i32 5, i64 %709
  %719 = load ptr, ptr %718, align 8, !tbaa !5
  %720 = icmp eq ptr %719, null
  br i1 %720, label %751, label %726

721:                                              ; preds = %746, %726
  %722 = load ptr, ptr %728, align 8, !tbaa !5
  %723 = icmp eq ptr %722, null
  br i1 %723, label %749, label %724, !llvm.loop !282

724:                                              ; preds = %721
  %725 = load ptr, ptr %718, align 8, !tbaa !5
  br label %726

726:                                              ; preds = %717, %724
  %727 = phi ptr [ %725, %724 ], [ %719, %717 ]
  %728 = phi ptr [ %722, %724 ], [ %715, %717 ]
  %729 = icmp eq ptr %727, null
  br i1 %729, label %721, label %730

730:                                              ; preds = %726
  %731 = getelementptr inbounds %struct.location_chain_def, ptr %728, i64 0, i32 1
  %732 = getelementptr inbounds %struct.location_chain_def, ptr %728, i64 0, i32 3
  br label %733

733:                                              ; preds = %730, %746
  %734 = phi ptr [ %727, %730 ], [ %747, %746 ]
  %735 = load ptr, ptr %731, align 8, !tbaa !214
  %736 = getelementptr inbounds %struct.location_chain_def, ptr %734, i64 0, i32 1
  %737 = load ptr, ptr %736, align 8, !tbaa !214
  %738 = tail call i32 @rtx_equal_p(ptr noundef %735, ptr noundef %737) #21
  %739 = icmp eq i32 %738, 0
  br i1 %739, label %746, label %740

740:                                              ; preds = %733
  %741 = load i32, ptr %732, align 8, !tbaa !224
  %742 = getelementptr inbounds %struct.location_chain_def, ptr %734, i64 0, i32 3
  %743 = load i32, ptr %742, align 8, !tbaa !224
  %744 = icmp ugt i32 %741, %743
  br i1 %744, label %745, label %746

745:                                              ; preds = %740
  store i32 %741, ptr %742, align 8, !tbaa !224
  br label %746

746:                                              ; preds = %733, %745, %740
  %747 = load ptr, ptr %734, align 8, !tbaa !5
  %748 = icmp eq ptr %747, null
  br i1 %748, label %721, label %733, !llvm.loop !284

749:                                              ; preds = %721
  %750 = load i8, ptr %44, align 4, !tbaa !184
  br label %751

751:                                              ; preds = %717, %749, %713
  %752 = phi i8 [ %750, %749 ], [ %708, %713 ], [ %708, %717 ]
  %753 = add nuw nsw i64 %709, 1
  %754 = sext i8 %752 to i64
  %755 = icmp slt i64 %753, %754
  br i1 %755, label %707, label %756, !llvm.loop !285

756:                                              ; preds = %93, %144, %707, %751, %703, %699, %41
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @onepart_variable_different_p(ptr noundef readonly %0, ptr noundef readonly %1) unnamed_addr #9 {
  %3 = icmp eq ptr %0, %1
  br i1 %3, label %46, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 2
  %6 = load i8, ptr %5, align 4, !tbaa !184
  %7 = icmp eq i8 %6, 1
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4314, ptr noundef nonnull @.str.2) #21
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %struct.variable_def, ptr %1, i64 0, i32 2
  %11 = load i8, ptr %10, align 4, !tbaa !184
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4315, ptr noundef nonnull @.str.2) #21
  br label %14

14:                                               ; preds = %9, %13
  %15 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 5
  %16 = load ptr, ptr %15, align 8, !tbaa !185
  %17 = getelementptr inbounds %struct.variable_def, ptr %1, i64 0, i32 5
  %18 = load ptr, ptr %17, align 8, !tbaa !185
  %19 = icmp eq ptr %16, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %14
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4320, ptr noundef nonnull @.str.2) #21
  br label %21

21:                                               ; preds = %14, %20
  %22 = icmp eq ptr %18, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %21
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4321, ptr noundef nonnull @.str.2) #21
  br label %41

24:                                               ; preds = %21
  %25 = icmp eq ptr %16, null
  br i1 %25, label %41, label %26

26:                                               ; preds = %24, %35
  %27 = phi ptr [ %37, %35 ], [ %18, %24 ]
  %28 = phi ptr [ %36, %35 ], [ %16, %24 ]
  %29 = getelementptr inbounds %struct.location_chain_def, ptr %28, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !214
  %31 = getelementptr inbounds %struct.location_chain_def, ptr %27, i64 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !214
  %33 = tail call fastcc i32 @loc_cmp(ptr noundef %30, ptr noundef %32), !range !217
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %46

35:                                               ; preds = %26
  %36 = load ptr, ptr %28, align 8, !tbaa !187
  %37 = load ptr, ptr %27, align 8, !tbaa !187
  %38 = icmp ne ptr %36, null
  %39 = icmp ne ptr %37, null
  %40 = select i1 %38, i1 %39, i1 false
  br i1 %40, label %26, label %41, !llvm.loop !286

41:                                               ; preds = %35, %23, %24
  %42 = phi ptr [ %16, %24 ], [ %16, %23 ], [ %36, %35 ]
  %43 = phi ptr [ %18, %24 ], [ null, %23 ], [ %37, %35 ]
  %44 = icmp ne ptr %42, %43
  %45 = zext i1 %44 to i8
  br label %46

46:                                               ; preds = %26, %2, %41
  %47 = phi i8 [ %45, %41 ], [ 0, %2 ], [ 1, %26 ]
  ret i8 %47
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @intersect_loc_chains(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef readonly %2, ptr noundef readonly %3, ptr nocapture noundef readonly %4) unnamed_addr #9 {
  %6 = icmp eq ptr %3, null
  br i1 %6, label %92, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.dfset_merge, ptr %2, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !158
  %10 = getelementptr inbounds %struct.dfset_merge, ptr %2, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !159
  %12 = getelementptr inbounds %struct.dataflow_set_def, ptr %9, i64 0, i32 2
  %13 = getelementptr inbounds %struct.dataflow_set_def, ptr %11, i64 0, i32 2
  br label %14

14:                                               ; preds = %7, %89
  %15 = phi ptr [ %3, %7 ], [ %90, %89 ]
  %16 = getelementptr inbounds %struct.location_chain_def, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !214
  %18 = icmp eq ptr %17, %0
  br i1 %18, label %89, label %19

19:                                               ; preds = %14
  %20 = load ptr, ptr %12, align 8, !tbaa !51
  %21 = getelementptr i8, ptr %20, i64 8
  %22 = load ptr, ptr %21, align 8, !tbaa !55
  %23 = tail call fastcc ptr @find_loc_in_1pdv(ptr noundef %17, ptr noundef %4, ptr noundef %22)
  %24 = icmp eq ptr %23, null
  %25 = load ptr, ptr %16, align 8, !tbaa !214
  br i1 %24, label %54, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.location_chain_def, ptr %15, i64 0, i32 3
  %28 = load i32, ptr %27, align 8, !tbaa !224
  %29 = getelementptr inbounds %struct.location_chain_def, ptr %23, i64 0, i32 3
  %30 = load i32, ptr %29, align 8, !tbaa !224
  %31 = tail call i32 @llvm.umin.i32(i32 %28, i32 %30)
  br label %32

32:                                               ; preds = %45, %26
  %33 = phi ptr [ %1, %26 ], [ %34, %45 ]
  %34 = load ptr, ptr %33, align 8, !tbaa !5
  %35 = icmp eq ptr %34, null
  br i1 %35, label %47, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.location_chain_def, ptr %34, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !214
  %39 = tail call fastcc i32 @loc_cmp(ptr noundef %38, ptr noundef %25), !range !217
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.location_chain_def, ptr %34, i64 0, i32 3
  %43 = load i32, ptr %42, align 8, !tbaa !224
  %44 = tail call i32 @llvm.umin.i32(i32 %43, i32 %31)
  store i32 %44, ptr %42, align 8, !tbaa !224
  br label %89

45:                                               ; preds = %36
  %46 = icmp sgt i32 %39, 0
  br i1 %46, label %47, label %32, !llvm.loop !287

47:                                               ; preds = %45, %32
  %48 = load ptr, ptr @loc_chain_pool, align 8, !tbaa !5
  %49 = tail call ptr @pool_alloc(ptr noundef %48) #21
  %50 = getelementptr inbounds %struct.location_chain_def, ptr %49, i64 0, i32 1
  store ptr %25, ptr %50, align 8, !tbaa !214
  %51 = getelementptr inbounds %struct.location_chain_def, ptr %49, i64 0, i32 2
  store ptr null, ptr %51, align 8, !tbaa !225
  %52 = getelementptr inbounds %struct.location_chain_def, ptr %49, i64 0, i32 3
  store i32 %31, ptr %52, align 8, !tbaa !224
  %53 = load ptr, ptr %33, align 8, !tbaa !5
  store ptr %53, ptr %49, align 8, !tbaa !187
  store ptr %49, ptr %33, align 8, !tbaa !5
  br label %89

54:                                               ; preds = %19
  %55 = load i32, ptr %25, align 8
  %56 = and i32 %55, 536936447
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %89

58:                                               ; preds = %54
  %59 = load ptr, ptr %13, align 8, !tbaa !51
  %60 = load i64, ptr %25, align 8
  %61 = and i64 %60, 65535
  %62 = icmp eq i64 %61, 1
  br i1 %62, label %63, label %67

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.rtx_def, ptr %25, i64 0, i32 1
  %65 = load ptr, ptr %64, align 8, !tbaa !16
  %66 = getelementptr inbounds %struct.cselib_val_struct, ptr %65, i64 0, i32 1
  br label %69

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.tree_decl_minimal, ptr %25, i64 0, i32 2
  br label %69

69:                                               ; preds = %63, %67
  %70 = phi ptr [ %66, %63 ], [ %68, %67 ]
  %71 = load i32, ptr %70, align 4, !tbaa !16
  %72 = getelementptr i8, ptr %59, i64 8
  %73 = load ptr, ptr %72, align 8, !tbaa !55
  %74 = tail call ptr @htab_find_with_hash(ptr noundef %73, ptr noundef nonnull %25, i32 noundef %71) #21
  %75 = icmp eq ptr %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %struct.variable_def, ptr %74, i64 0, i32 2
  %78 = load i8, ptr %77, align 4, !tbaa !184
  %79 = icmp eq i8 %78, 1
  br i1 %79, label %80, label %89

80:                                               ; preds = %76
  %81 = load ptr, ptr %16, align 8, !tbaa !214
  %82 = load i32, ptr %81, align 8
  %83 = or i32 %82, 536870912
  store i32 %83, ptr %81, align 8
  %84 = getelementptr inbounds %struct.variable_def, ptr %74, i64 0, i32 5
  %85 = load ptr, ptr %84, align 8, !tbaa !185
  tail call fastcc void @intersect_loc_chains(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %85, ptr noundef %4)
  %86 = load ptr, ptr %16, align 8, !tbaa !214
  %87 = load i32, ptr %86, align 8
  %88 = and i32 %87, -536870913
  store i32 %88, ptr %86, align 8
  br label %89

89:                                               ; preds = %47, %41, %69, %80, %76, %54, %14
  %90 = load ptr, ptr %15, align 8, !tbaa !187
  %91 = icmp eq ptr %90, null
  br i1 %91, label %92, label %14, !llvm.loop !288

92:                                               ; preds = %89, %5
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @delete_slot_part(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3) unnamed_addr #9 {
  %5 = alloca ptr, align 8
  %6 = load ptr, ptr %2, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 2
  %8 = load i8, ptr %7, align 4, !tbaa !184
  %9 = sext i8 %8 to i32
  %10 = icmp eq i8 %8, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %4, %11
  %12 = phi i32 [ %22, %11 ], [ %9, %4 ]
  %13 = phi i32 [ %21, %11 ], [ 0, %4 ]
  %14 = add nsw i32 %13, %12
  %15 = sdiv i32 %14, 2
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 5, i64 %16, i32 2
  %18 = load i64, ptr %17, align 8, !tbaa !213
  %19 = icmp slt i64 %18, %3
  %20 = add nsw i32 %15, 1
  %21 = select i1 %19, i32 %20, i32 %13
  %22 = select i1 %19, i32 %12, i32 %15
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %24, label %11, !llvm.loop !223

24:                                               ; preds = %11, %4
  %25 = phi i32 [ 0, %4 ], [ %21, %11 ]
  %26 = icmp slt i32 %25, %9
  br i1 %26, label %27, label %173

27:                                               ; preds = %24
  %28 = sext i32 %25 to i64
  %29 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 5, i64 %28, i32 2
  %30 = load i64, ptr %29, align 8, !tbaa !213
  %31 = icmp eq i64 %30, %3
  %32 = icmp sgt i32 %25, -1
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %173

34:                                               ; preds = %27
  %35 = getelementptr i8, ptr %6, i64 8
  %36 = load i32, ptr %35, align 8, !tbaa !183
  %37 = getelementptr i8, ptr %6, i64 14
  %38 = load i8, ptr %37, align 2, !tbaa !212
  %39 = zext i8 %38 to i32
  %40 = add nuw nsw i32 %39, 1
  %41 = icmp slt i32 %40, %36
  br i1 %41, label %49, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %44 = load ptr, ptr %43, align 8, !tbaa !51
  %45 = load i32, ptr %44, align 8, !tbaa !49
  %46 = icmp slt i32 %45, 2
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = zext i32 %25 to i64
  br label %78

49:                                               ; preds = %34, %42
  %50 = zext i32 %25 to i64
  %51 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 5, i64 %50
  %52 = getelementptr i8, ptr %1, i64 8
  br label %53

53:                                               ; preds = %72, %49
  %54 = phi ptr [ %51, %49 ], [ %55, %72 ]
  %55 = load ptr, ptr %54, align 8, !tbaa !5
  %56 = icmp eq ptr %55, null
  br i1 %56, label %78, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.location_chain_def, ptr %55, i64 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !214
  %60 = load i32, ptr %59, align 8
  %61 = and i32 %60, 65535
  %62 = icmp eq i32 %61, 37
  br i1 %62, label %63, label %72

63:                                               ; preds = %57
  %64 = load i32, ptr %1, align 8
  %65 = and i32 %64, 65535
  %66 = icmp eq i32 %65, 37
  br i1 %66, label %67, label %72

67:                                               ; preds = %63
  %68 = getelementptr i8, ptr %59, i64 8
  %69 = load i32, ptr %68, align 8, !tbaa !16
  %70 = load i32, ptr %52, align 8, !tbaa !16
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %63, %57
  %73 = tail call i32 @rtx_equal_p(ptr noundef nonnull %59, ptr noundef %1) #21
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %53, label %75, !llvm.loop !289

75:                                               ; preds = %72, %67
  %76 = tail call fastcc ptr @unshare_variable(ptr noundef %0, ptr noundef nonnull %2, ptr noundef %6, i32 noundef 0)
  %77 = load ptr, ptr %76, align 8, !tbaa !5
  br label %78

78:                                               ; preds = %53, %47, %75
  %79 = phi i64 [ %48, %47 ], [ %50, %75 ], [ %50, %53 ]
  %80 = phi ptr [ %6, %47 ], [ %77, %75 ], [ %6, %53 ]
  %81 = phi ptr [ %2, %47 ], [ %76, %75 ], [ %2, %53 ]
  %82 = getelementptr inbounds %struct.variable_def, ptr %80, i64 0, i32 5, i64 %79
  %83 = load ptr, ptr %82, align 8, !tbaa !5
  %84 = getelementptr i8, ptr %1, i64 8
  br label %85

85:                                               ; preds = %105, %78
  %86 = phi ptr [ %83, %78 ], [ %90, %105 ]
  %87 = phi ptr [ %82, %78 ], [ %86, %105 ]
  %88 = icmp eq ptr %86, null
  br i1 %88, label %151, label %89

89:                                               ; preds = %85
  %90 = load ptr, ptr %86, align 8, !tbaa !187
  %91 = getelementptr inbounds %struct.location_chain_def, ptr %86, i64 0, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !214
  %93 = load i32, ptr %92, align 8
  %94 = and i32 %93, 65535
  %95 = icmp eq i32 %94, 37
  br i1 %95, label %96, label %105

96:                                               ; preds = %89
  %97 = load i32, ptr %1, align 8
  %98 = and i32 %97, 65535
  %99 = icmp eq i32 %98, 37
  br i1 %99, label %100, label %105

100:                                              ; preds = %96
  %101 = getelementptr i8, ptr %92, i64 8
  %102 = load i32, ptr %101, align 8, !tbaa !16
  %103 = load i32, ptr %84, align 8, !tbaa !16
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %108, label %105

105:                                              ; preds = %100, %96, %89
  %106 = tail call i32 @rtx_equal_p(ptr noundef nonnull %92, ptr noundef %1) #21
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %85, label %108, !llvm.loop !290

108:                                              ; preds = %105, %100
  %109 = getelementptr inbounds %struct.location_chain_def, ptr %86, i64 0, i32 1
  %110 = load i1, ptr @emit_notes, align 1
  %111 = icmp eq i32 %25, 0
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %140

113:                                              ; preds = %108
  %114 = load ptr, ptr %80, align 8, !tbaa !181
  %115 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %140, label %117

117:                                              ; preds = %113
  %118 = icmp eq ptr %114, null
  br i1 %118, label %127, label %119

119:                                              ; preds = %117
  %120 = load i64, ptr %114, align 8
  %121 = trunc i64 %120 to i16
  switch i16 %121, label %122 [
    i16 1, label %127
    i16 37, label %127
  ]

122:                                              ; preds = %119
  %123 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %114) #21
  %124 = icmp eq ptr %123, null
  br i1 %124, label %140, label %125

125:                                              ; preds = %122
  %126 = load ptr, ptr %80, align 8, !tbaa !181
  br label %127

127:                                              ; preds = %125, %117, %119, %119
  %128 = phi ptr [ %126, %125 ], [ null, %117 ], [ %114, %119 ], [ %114, %119 ]
  %129 = load ptr, ptr %109, align 8, !tbaa !214
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  store ptr %129, ptr %5, align 8, !tbaa !5
  %130 = load i32, ptr %129, align 8
  %131 = trunc i32 %130 to i16
  switch i16 %131, label %137 [
    i16 1, label %132
    i16 2, label %132
    i16 37, label %139
    i16 43, label %134
  ]

132:                                              ; preds = %127, %127
  %133 = call i32 @remove_value_chain(ptr noundef nonnull %5, ptr noundef %128)
  br label %139

134:                                              ; preds = %127
  %135 = getelementptr inbounds %struct.rtx_def, ptr %129, i64 0, i32 1
  %136 = load ptr, ptr %135, align 8, !tbaa !16
  store ptr %136, ptr %5, align 8, !tbaa !5
  br label %137

137:                                              ; preds = %134, %127
  %138 = call i32 @for_each_rtx(ptr noundef nonnull %5, ptr noundef nonnull @remove_value_chain, ptr noundef %128) #21
  br label %139

139:                                              ; preds = %127, %132, %137
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  br label %140

140:                                              ; preds = %113, %139, %122, %108
  %141 = getelementptr inbounds %struct.variable_def, ptr %80, i64 0, i32 5, i64 %79, i32 1
  %142 = load ptr, ptr %141, align 8, !tbaa !229
  %143 = load ptr, ptr %109, align 8, !tbaa !214
  %144 = icmp eq ptr %142, %143
  br i1 %144, label %145, label %147

145:                                              ; preds = %140
  store ptr null, ptr %141, align 8, !tbaa !229
  %146 = getelementptr inbounds %struct.variable_def, ptr %80, i64 0, i32 3
  store i8 1, ptr %146, align 1, !tbaa !211
  br label %147

147:                                              ; preds = %140, %145
  %148 = load ptr, ptr @loc_chain_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %148, ptr noundef nonnull %86) #21
  store ptr %90, ptr %87, align 8, !tbaa !5
  %149 = load ptr, ptr %82, align 8, !tbaa !185
  %150 = icmp eq ptr %149, null
  br i1 %150, label %154, label %171

151:                                              ; preds = %85
  %152 = load ptr, ptr %82, align 8, !tbaa !185
  %153 = icmp eq ptr %152, null
  br i1 %153, label %154, label %173

154:                                              ; preds = %151, %147
  %155 = getelementptr inbounds %struct.variable_def, ptr %80, i64 0, i32 2
  %156 = load i8, ptr %155, align 4, !tbaa !184
  %157 = add i8 %156, -1
  store i8 %157, ptr %155, align 4, !tbaa !184
  %158 = load i1, ptr @emit_notes, align 1
  br i1 %158, label %159, label %161

159:                                              ; preds = %154
  %160 = getelementptr inbounds %struct.variable_def, ptr %80, i64 0, i32 3
  store i8 1, ptr %160, align 1, !tbaa !211
  br label %161

161:                                              ; preds = %159, %154
  %162 = sext i8 %157 to i32
  %163 = icmp slt i32 %25, %162
  br i1 %163, label %164, label %172

164:                                              ; preds = %161, %164
  %165 = phi i64 [ %167, %164 ], [ %79, %161 ]
  %166 = getelementptr inbounds %struct.variable_def, ptr %80, i64 0, i32 5, i64 %165
  %167 = add nuw nsw i64 %165, 1
  %168 = getelementptr inbounds %struct.variable_def, ptr %80, i64 0, i32 5, i64 %167
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %166, ptr noundef nonnull align 8 dereferenceable(24) %168, i64 24, i1 false), !tbaa.struct !226
  %169 = trunc i64 %167 to i32
  %170 = icmp slt i32 %169, %162
  br i1 %170, label %164, label %172, !llvm.loop !291

171:                                              ; preds = %147
  br i1 %144, label %172, label %173

172:                                              ; preds = %164, %161, %171
  call fastcc void @variable_was_changed(ptr noundef nonnull %80, ptr noundef %0)
  br label %173

173:                                              ; preds = %151, %27, %24, %171, %172
  %174 = phi ptr [ %81, %172 ], [ %81, %171 ], [ %2, %24 ], [ %2, %27 ], [ %81, %151 ]
  ret ptr %174
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @canonicalize_values_star(ptr noundef %0, ptr noundef %1) #9 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = load ptr, ptr %3, align 8, !tbaa !181
  %5 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %380, label %7

7:                                                ; preds = %2
  %8 = icmp eq ptr %4, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %7
  %10 = load i64, ptr %4, align 8
  %11 = trunc i64 %10 to i16
  switch i16 %11, label %12 [
    i16 1, label %15
    i16 37, label %15
  ]

12:                                               ; preds = %9
  %13 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %4) #21
  %14 = icmp eq ptr %13, null
  br i1 %14, label %380, label %15

15:                                               ; preds = %7, %9, %9, %12
  %16 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 2
  %17 = load i8, ptr %16, align 4, !tbaa !184
  %18 = icmp eq i8 %17, 1
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3068, ptr noundef nonnull @.str.2) #21
  br label %20

20:                                               ; preds = %15, %19
  br i1 %8, label %31, label %21

21:                                               ; preds = %20
  %22 = load i64, ptr %4, align 8
  %23 = and i64 %22, 65535
  %24 = icmp eq i64 %23, 1
  %25 = trunc i64 %22 to i32
  br i1 %24, label %26, label %31

26:                                               ; preds = %21
  %27 = and i32 %25, 536870912
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %380, label %29

29:                                               ; preds = %26
  %30 = and i32 %25, -536870913
  store i32 %30, ptr %4, align 8
  br label %31

31:                                               ; preds = %20, %21, %29
  %32 = phi ptr [ %4, %29 ], [ null, %21 ], [ null, %20 ]
  %33 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 2
  br label %34

34:                                               ; preds = %173, %31
  %35 = phi ptr [ %4, %31 ], [ %107, %173 ]
  %36 = phi ptr [ %3, %31 ], [ %162, %173 ]
  %37 = phi ptr [ %0, %31 ], [ %124, %173 ]
  %38 = phi ptr [ %32, %31 ], [ %107, %173 ]
  %39 = getelementptr inbounds %struct.variable_def, ptr %36, i64 0, i32 2
  %40 = load i8, ptr %39, align 4, !tbaa !184
  %41 = icmp eq i8 %40, 1
  br i1 %41, label %43, label %42

42:                                               ; preds = %34
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3085, ptr noundef nonnull @.str.2) #21
  br label %43

43:                                               ; preds = %34, %42
  %44 = getelementptr inbounds %struct.variable_def, ptr %36, i64 0, i32 5
  %45 = load ptr, ptr %44, align 8, !tbaa !5
  %46 = icmp eq ptr %45, null
  br i1 %46, label %380, label %47

47:                                               ; preds = %43, %73
  %48 = phi ptr [ %77, %73 ], [ %45, %43 ]
  %49 = phi i8 [ %76, %73 ], [ 0, %43 ]
  %50 = phi i8 [ %75, %73 ], [ 0, %43 ]
  %51 = phi ptr [ %74, %73 ], [ %38, %43 ]
  %52 = getelementptr inbounds %struct.location_chain_def, ptr %48, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !214
  %54 = load i32, ptr %53, align 8
  %55 = and i32 %54, 65535
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %73

57:                                               ; preds = %47
  %58 = and i32 %54, 536870912
  %59 = icmp eq i32 %58, 0
  %60 = select i1 %59, i8 %49, i8 1
  %61 = icmp eq ptr %51, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.rtx_def, ptr %53, i64 0, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !16
  %65 = getelementptr inbounds %struct.cselib_val_struct, ptr %64, i64 0, i32 1
  %66 = load i32, ptr %65, align 4, !tbaa !169
  %67 = getelementptr inbounds %struct.rtx_def, ptr %51, i64 0, i32 1
  %68 = load ptr, ptr %67, align 8, !tbaa !16
  %69 = getelementptr inbounds %struct.cselib_val_struct, ptr %68, i64 0, i32 1
  %70 = load i32, ptr %69, align 4, !tbaa !169
  %71 = icmp slt i32 %66, %70
  br i1 %71, label %72, label %73

72:                                               ; preds = %57, %62
  br label %73

73:                                               ; preds = %47, %72, %62
  %74 = phi ptr [ %53, %72 ], [ %51, %62 ], [ %51, %47 ]
  %75 = phi i8 [ 1, %72 ], [ 1, %62 ], [ %50, %47 ]
  %76 = phi i8 [ %60, %72 ], [ %60, %62 ], [ %49, %47 ]
  %77 = load ptr, ptr %48, align 8, !tbaa !5
  %78 = icmp eq ptr %77, null
  br i1 %78, label %79, label %47, !llvm.loop !292

79:                                               ; preds = %73
  %80 = icmp eq i8 %75, 0
  br i1 %80, label %380, label %81

81:                                               ; preds = %79
  %82 = icmp eq ptr %74, %38
  br i1 %82, label %83, label %177

83:                                               ; preds = %81
  %84 = icmp eq i8 %76, 0
  %85 = icmp eq ptr %35, null
  %86 = select i1 %84, i1 true, i1 %85
  br i1 %86, label %380, label %87

87:                                               ; preds = %83
  %88 = load i64, ptr %35, align 8
  %89 = and i64 %88, 65535
  %90 = icmp eq i64 %89, 1
  br i1 %90, label %91, label %380

91:                                               ; preds = %87
  %92 = load i32, ptr %38, align 8
  %93 = or i32 %92, 536870912
  store i32 %93, ptr %38, align 8
  br label %94

94:                                               ; preds = %98, %91
  %95 = phi ptr [ %44, %91 ], [ %96, %98 ]
  %96 = load ptr, ptr %95, align 8, !tbaa !5
  %97 = icmp eq ptr %96, null
  br i1 %97, label %175, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.location_chain_def, ptr %96, i64 0, i32 1
  %100 = load ptr, ptr %99, align 8, !tbaa !214
  %101 = load i32, ptr %100, align 8
  %102 = and i32 %101, 536936447
  %103 = icmp eq i32 %102, 536870913
  br i1 %103, label %104, label %94, !llvm.loop !293

104:                                              ; preds = %98, %376
  %105 = phi i32 [ %377, %376 ], [ %101, %98 ]
  %106 = phi ptr [ %362, %376 ], [ %36, %98 ]
  %107 = phi ptr [ %74, %376 ], [ %100, %98 ]
  %108 = and i32 %105, -536870913
  store i32 %108, ptr %107, align 8
  %109 = load ptr, ptr %33, align 8, !tbaa !51
  %110 = load i64, ptr %107, align 8
  %111 = and i64 %110, 65535
  %112 = icmp eq i64 %111, 1
  br i1 %112, label %113, label %117

113:                                              ; preds = %104
  %114 = getelementptr inbounds %struct.rtx_def, ptr %107, i64 0, i32 1
  %115 = load ptr, ptr %114, align 8, !tbaa !16
  %116 = getelementptr inbounds %struct.cselib_val_struct, ptr %115, i64 0, i32 1
  br label %119

117:                                              ; preds = %104
  %118 = getelementptr inbounds %struct.tree_decl_minimal, ptr %107, i64 0, i32 2
  br label %119

119:                                              ; preds = %113, %117
  %120 = phi ptr [ %116, %113 ], [ %118, %117 ]
  %121 = load i32, ptr %120, align 4, !tbaa !16
  %122 = getelementptr i8, ptr %109, i64 8
  %123 = load ptr, ptr %122, align 8, !tbaa !55
  %124 = tail call ptr @htab_find_slot_with_hash(ptr noundef %123, ptr noundef nonnull %107, i32 noundef %121, i32 noundef 0) #21
  %125 = icmp eq ptr %124, null
  br i1 %125, label %126, label %161

126:                                              ; preds = %119
  %127 = load ptr, ptr %106, align 8, !tbaa !181
  %128 = icmp eq ptr %127, null
  br i1 %128, label %380, label %129

129:                                              ; preds = %126
  %130 = load i64, ptr %127, align 8
  %131 = and i64 %130, 65535
  %132 = icmp eq i64 %131, 1
  br i1 %132, label %133, label %136

133:                                              ; preds = %129
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3121, ptr noundef nonnull @.str.2) #21
  %134 = load ptr, ptr %106, align 8, !tbaa !181
  %135 = icmp eq ptr %134, null
  br i1 %135, label %380, label %136

136:                                              ; preds = %129, %133
  %137 = phi ptr [ %134, %133 ], [ %127, %129 ]
  %138 = load i64, ptr %137, align 8
  %139 = and i64 %138, 65535
  %140 = icmp eq i64 %139, 1
  br i1 %140, label %145, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %139
  %143 = load i32, ptr %142, align 4, !tbaa !16
  %144 = icmp eq i32 %143, 3
  br i1 %144, label %149, label %380

145:                                              ; preds = %136
  %146 = getelementptr inbounds %struct.rtx_def, ptr %137, i64 0, i32 1
  %147 = load ptr, ptr %146, align 8, !tbaa !16
  %148 = getelementptr inbounds %struct.cselib_val_struct, ptr %147, i64 0, i32 1
  br label %151

149:                                              ; preds = %141
  %150 = getelementptr inbounds %struct.tree_decl_minimal, ptr %137, i64 0, i32 2
  br label %151

151:                                              ; preds = %149, %145
  %152 = phi ptr [ %148, %145 ], [ %150, %149 ]
  %153 = load ptr, ptr %33, align 8, !tbaa !51
  %154 = load i32, ptr %152, align 4, !tbaa !16
  %155 = getelementptr i8, ptr %153, i64 8
  %156 = load ptr, ptr %155, align 8, !tbaa !55
  %157 = tail call ptr @htab_find_slot_with_hash(ptr noundef %156, ptr noundef nonnull %137, i32 noundef %154, i32 noundef 0) #21
  %158 = icmp eq ptr %157, null
  br i1 %158, label %380, label %159

159:                                              ; preds = %151
  %160 = tail call fastcc ptr @clobber_slot_part(ptr noundef nonnull %1, ptr noundef null, ptr noundef nonnull %157, i64 noundef 0, ptr noundef null)
  br label %380

161:                                              ; preds = %119
  %162 = load ptr, ptr %124, align 8, !tbaa !5
  %163 = load ptr, ptr %162, align 8, !tbaa !181
  %164 = icmp eq ptr %163, null
  br i1 %164, label %169, label %165

165:                                              ; preds = %161
  %166 = load i64, ptr %163, align 8
  %167 = and i64 %166, 65535
  %168 = icmp eq i64 %167, 1
  br i1 %168, label %170, label %169

169:                                              ; preds = %161, %165
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3128, ptr noundef nonnull @.str.2) #21
  br label %170

170:                                              ; preds = %165, %169
  %171 = getelementptr inbounds %struct.variable_def, ptr %162, i64 0, i32 2
  %172 = load i8, ptr %171, align 4, !tbaa !184
  switch i8 %172, label %174 [
    i8 0, label %380
    i8 1, label %173
  ]

173:                                              ; preds = %170, %174
  br label %34

174:                                              ; preds = %170
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3131, ptr noundef nonnull @.str.2) #21
  br label %173

175:                                              ; preds = %94
  %176 = and i32 %92, -536870913
  store i32 %176, ptr %38, align 8
  br label %380

177:                                              ; preds = %81
  %178 = load ptr, ptr %33, align 8, !tbaa !51
  %179 = icmp eq ptr %74, null
  br i1 %179, label %188, label %180

180:                                              ; preds = %177
  %181 = load i64, ptr %74, align 8
  %182 = and i64 %181, 65535
  %183 = icmp eq i64 %182, 1
  br i1 %183, label %184, label %188

184:                                              ; preds = %180
  %185 = getelementptr inbounds %struct.rtx_def, ptr %74, i64 0, i32 1
  %186 = load ptr, ptr %185, align 8, !tbaa !16
  %187 = getelementptr inbounds %struct.cselib_val_struct, ptr %186, i64 0, i32 1
  br label %190

188:                                              ; preds = %180, %177
  %189 = getelementptr inbounds %struct.tree_decl_minimal, ptr %74, i64 0, i32 2
  br label %190

190:                                              ; preds = %184, %188
  %191 = phi ptr [ %187, %184 ], [ %189, %188 ]
  %192 = load i32, ptr %191, align 4, !tbaa !16
  %193 = getelementptr i8, ptr %178, i64 8
  %194 = load ptr, ptr %193, align 8, !tbaa !55
  %195 = tail call ptr @htab_find_slot_with_hash(ptr noundef %194, ptr noundef %74, i32 noundef %192, i32 noundef 0) #21
  %196 = load ptr, ptr %44, align 8, !tbaa !5
  %197 = icmp eq ptr %196, null
  br i1 %197, label %355, label %198

198:                                              ; preds = %190
  %199 = icmp eq ptr %38, null
  %200 = getelementptr inbounds %struct.rtx_def, ptr %38, i64 0, i32 1
  br label %201

201:                                              ; preds = %198, %351
  %202 = phi ptr [ %196, %198 ], [ %353, %351 ]
  %203 = phi ptr [ %195, %198 ], [ %352, %351 ]
  %204 = getelementptr inbounds %struct.location_chain_def, ptr %202, i64 0, i32 1
  %205 = load ptr, ptr %204, align 8, !tbaa !214
  %206 = icmp eq ptr %205, %74
  br i1 %206, label %351, label %207

207:                                              ; preds = %201
  %208 = getelementptr inbounds %struct.location_chain_def, ptr %202, i64 0, i32 3
  %209 = load i32, ptr %208, align 8, !tbaa !224
  %210 = tail call fastcc ptr @set_slot_part(ptr noundef %1, ptr noundef %205, ptr noundef %203, ptr noundef %74, i64 noundef 0, i32 noundef %209, ptr noundef null)
  %211 = load ptr, ptr %204, align 8, !tbaa !214
  %212 = load i32, ptr %211, align 8
  %213 = trunc i32 %212 to i16
  switch i16 %213, label %351 [
    i16 1, label %214
    i16 37, label %276
  ]

214:                                              ; preds = %207
  %215 = load i32, ptr %208, align 8, !tbaa !224
  %216 = load ptr, ptr %33, align 8, !tbaa !51
  %217 = load i64, ptr %211, align 8
  %218 = and i64 %217, 65535
  %219 = icmp eq i64 %218, 1
  br i1 %219, label %220, label %224

220:                                              ; preds = %214
  %221 = getelementptr inbounds %struct.rtx_def, ptr %211, i64 0, i32 1
  %222 = load ptr, ptr %221, align 8, !tbaa !16
  %223 = getelementptr inbounds %struct.cselib_val_struct, ptr %222, i64 0, i32 1
  br label %226

224:                                              ; preds = %214
  %225 = getelementptr inbounds %struct.tree_decl_minimal, ptr %211, i64 0, i32 2
  br label %226

226:                                              ; preds = %220, %224
  %227 = phi ptr [ %223, %220 ], [ %225, %224 ]
  %228 = load i32, ptr %227, align 4, !tbaa !16
  %229 = getelementptr i8, ptr %216, i64 8
  %230 = load ptr, ptr %229, align 8, !tbaa !55
  %231 = tail call ptr @htab_find_slot_with_hash(ptr noundef %230, ptr noundef nonnull %211, i32 noundef %228, i32 noundef 0) #21
  %232 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %1, ptr noundef %74, ptr noundef %231, ptr noundef nonnull %211, i64 noundef 0, i32 noundef %215, ptr noundef null)
  %233 = load ptr, ptr %204, align 8, !tbaa !214
  br i1 %199, label %243, label %234

234:                                              ; preds = %226
  %235 = getelementptr inbounds %struct.rtx_def, ptr %233, i64 0, i32 1
  %236 = load ptr, ptr %235, align 8, !tbaa !16
  %237 = getelementptr inbounds %struct.cselib_val_struct, ptr %236, i64 0, i32 1
  %238 = load i32, ptr %237, align 4, !tbaa !169
  %239 = load ptr, ptr %200, align 8, !tbaa !16
  %240 = getelementptr inbounds %struct.cselib_val_struct, ptr %239, i64 0, i32 1
  %241 = load i32, ptr %240, align 4, !tbaa !169
  %242 = icmp slt i32 %238, %241
  br i1 %242, label %243, label %248

243:                                              ; preds = %226, %234
  %244 = load i32, ptr %233, align 8
  %245 = or i32 %244, 536870912
  store i32 %245, ptr %233, align 8
  %246 = load i32, ptr %74, align 8
  %247 = or i32 %246, 536870912
  store i32 %247, ptr %74, align 8
  br label %351

248:                                              ; preds = %234
  %249 = load i32, ptr %233, align 8
  %250 = and i32 %249, 536870912
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %351

252:                                              ; preds = %248
  %253 = load i64, ptr %211, align 8
  %254 = and i64 %253, 65535
  %255 = icmp eq i64 %254, 1
  br i1 %255, label %260, label %256

256:                                              ; preds = %252
  %257 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %254
  %258 = load i32, ptr %257, align 4, !tbaa !16
  %259 = icmp eq i32 %258, 3
  br i1 %259, label %264, label %351

260:                                              ; preds = %252
  %261 = getelementptr inbounds %struct.rtx_def, ptr %211, i64 0, i32 1
  %262 = load ptr, ptr %261, align 8, !tbaa !16
  %263 = getelementptr inbounds %struct.cselib_val_struct, ptr %262, i64 0, i32 1
  br label %266

264:                                              ; preds = %256
  %265 = getelementptr inbounds %struct.tree_decl_minimal, ptr %211, i64 0, i32 2
  br label %266

266:                                              ; preds = %264, %260
  %267 = phi ptr [ %263, %260 ], [ %265, %264 ]
  %268 = load ptr, ptr %33, align 8, !tbaa !51
  %269 = load i32, ptr %267, align 4, !tbaa !16
  %270 = getelementptr i8, ptr %268, i64 8
  %271 = load ptr, ptr %270, align 8, !tbaa !55
  %272 = tail call ptr @htab_find_slot_with_hash(ptr noundef %271, ptr noundef nonnull %211, i32 noundef %269, i32 noundef 0) #21
  %273 = icmp eq ptr %272, null
  br i1 %273, label %351, label %274

274:                                              ; preds = %266
  %275 = tail call fastcc ptr @clobber_slot_part(ptr noundef nonnull %1, ptr noundef %74, ptr noundef nonnull %272, i64 noundef 0, ptr noundef null)
  br label %351

276:                                              ; preds = %207
  %277 = getelementptr i8, ptr %211, i64 8
  %278 = load i32, ptr %277, align 8, !tbaa !16
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 1, i64 %279
  %281 = load ptr, ptr %280, align 8, !tbaa !5
  %282 = icmp eq ptr %281, null
  br i1 %282, label %297, label %283

283:                                              ; preds = %276, %294
  %284 = phi ptr [ %295, %294 ], [ %281, %276 ]
  %285 = getelementptr inbounds %struct.attrs_def, ptr %284, i64 0, i32 3
  %286 = load i64, ptr %285, align 8, !tbaa !59
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %288, label %294

288:                                              ; preds = %283
  %289 = getelementptr inbounds %struct.attrs_def, ptr %284, i64 0, i32 2
  %290 = load ptr, ptr %289, align 8, !tbaa !72
  %291 = icmp eq ptr %290, %35
  %292 = icmp eq ptr %290, %74
  %293 = select i1 %291, i1 true, i1 %292
  br i1 %293, label %299, label %294

294:                                              ; preds = %288, %283
  %295 = load ptr, ptr %284, align 8, !tbaa !5
  %296 = icmp eq ptr %295, null
  br i1 %296, label %297, label %283, !llvm.loop !294

297:                                              ; preds = %294, %276
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3195, ptr noundef nonnull @.str.2) #21
  %298 = load ptr, ptr inttoptr (i64 16 to ptr), align 16, !tbaa !72
  br label %299

299:                                              ; preds = %288, %297
  %300 = phi ptr [ %298, %297 ], [ %290, %288 ]
  %301 = phi ptr [ null, %297 ], [ %284, %288 ]
  %302 = icmp eq ptr %300, %35
  br i1 %302, label %303, label %326

303:                                              ; preds = %299
  %304 = getelementptr inbounds %struct.attrs_def, ptr %301, i64 0, i32 2
  store ptr %74, ptr %304, align 8, !tbaa !72
  %305 = load ptr, ptr %301, align 8, !tbaa !5
  %306 = icmp eq ptr %305, null
  br i1 %306, label %351, label %307

307:                                              ; preds = %303, %323
  %308 = phi ptr [ %324, %323 ], [ %305, %303 ]
  %309 = phi ptr [ %308, %323 ], [ %301, %303 ]
  %310 = getelementptr inbounds %struct.attrs_def, ptr %308, i64 0, i32 3
  %311 = load i64, ptr %310, align 8, !tbaa !59
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %323

313:                                              ; preds = %307
  %314 = getelementptr inbounds %struct.attrs_def, ptr %308, i64 0, i32 2
  %315 = load ptr, ptr %314, align 8, !tbaa !72
  %316 = icmp eq ptr %315, %74
  br i1 %316, label %317, label %320

317:                                              ; preds = %313
  %318 = load ptr, ptr %308, align 8, !tbaa !56
  store ptr %318, ptr %309, align 8, !tbaa !5
  %319 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %319, ptr noundef nonnull %308) #21
  br label %351

320:                                              ; preds = %313
  %321 = icmp eq ptr %315, %35
  br i1 %321, label %322, label %323

322:                                              ; preds = %320
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3212, ptr noundef nonnull @.str.2) #21
  br label %323

323:                                              ; preds = %322, %320, %307
  %324 = load ptr, ptr %308, align 8, !tbaa !5
  %325 = icmp eq ptr %324, null
  br i1 %325, label %351, label %307, !llvm.loop !295

326:                                              ; preds = %299
  %327 = icmp eq ptr %300, %74
  br i1 %327, label %328, label %350

328:                                              ; preds = %326
  %329 = load ptr, ptr %301, align 8, !tbaa !5
  %330 = icmp eq ptr %329, null
  br i1 %330, label %351, label %331

331:                                              ; preds = %328, %347
  %332 = phi ptr [ %348, %347 ], [ %329, %328 ]
  %333 = phi ptr [ %332, %347 ], [ %301, %328 ]
  %334 = getelementptr inbounds %struct.attrs_def, ptr %332, i64 0, i32 3
  %335 = load i64, ptr %334, align 8, !tbaa !59
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %347

337:                                              ; preds = %331
  %338 = getelementptr inbounds %struct.attrs_def, ptr %332, i64 0, i32 2
  %339 = load ptr, ptr %338, align 8, !tbaa !72
  %340 = icmp eq ptr %339, %35
  br i1 %340, label %341, label %344

341:                                              ; preds = %337
  %342 = load ptr, ptr %332, align 8, !tbaa !56
  store ptr %342, ptr %333, align 8, !tbaa !5
  %343 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %343, ptr noundef nonnull %332) #21
  br label %351

344:                                              ; preds = %337
  %345 = icmp eq ptr %339, %74
  br i1 %345, label %346, label %347

346:                                              ; preds = %344
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3230, ptr noundef nonnull @.str.2) #21
  br label %347

347:                                              ; preds = %346, %344, %331
  %348 = load ptr, ptr %332, align 8, !tbaa !5
  %349 = icmp eq ptr %348, null
  br i1 %349, label %351, label %331, !llvm.loop !296

350:                                              ; preds = %326
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3234, ptr noundef nonnull @.str.2) #21
  br label %351

351:                                              ; preds = %347, %323, %328, %303, %274, %266, %256, %317, %341, %350, %207, %243, %248, %201
  %352 = phi ptr [ %203, %201 ], [ %210, %248 ], [ %210, %243 ], [ %210, %207 ], [ %210, %350 ], [ %210, %341 ], [ %210, %317 ], [ %210, %256 ], [ %210, %266 ], [ %210, %274 ], [ %210, %303 ], [ %210, %328 ], [ %210, %323 ], [ %210, %347 ]
  %353 = load ptr, ptr %202, align 8, !tbaa !5
  %354 = icmp eq ptr %353, null
  br i1 %354, label %355, label %201, !llvm.loop !297

355:                                              ; preds = %351, %190
  %356 = phi ptr [ %195, %190 ], [ %352, %351 ]
  %357 = icmp eq ptr %38, null
  br i1 %357, label %360, label %358

358:                                              ; preds = %355
  %359 = tail call fastcc ptr @set_slot_part(ptr noundef %1, ptr noundef nonnull %38, ptr noundef %356, ptr noundef %74, i64 noundef 0, i32 noundef 2, ptr noundef null)
  br label %360

360:                                              ; preds = %358, %355
  %361 = tail call fastcc ptr @clobber_slot_part(ptr noundef %1, ptr noundef %74, ptr noundef nonnull %37, i64 noundef 0, ptr noundef null)
  %362 = load ptr, ptr %361, align 8, !tbaa !5
  %363 = getelementptr inbounds %struct.variable_def, ptr %362, i64 0, i32 2
  %364 = load i8, ptr %363, align 4, !tbaa !184
  %365 = icmp eq i8 %364, 0
  br i1 %365, label %375, label %366

366:                                              ; preds = %360
  %367 = getelementptr inbounds %struct.variable_def, ptr %362, i64 0, i32 5
  %368 = load ptr, ptr %367, align 8, !tbaa !185
  %369 = getelementptr inbounds %struct.location_chain_def, ptr %368, i64 0, i32 1
  %370 = load ptr, ptr %369, align 8, !tbaa !214
  %371 = icmp eq ptr %370, %74
  br i1 %371, label %372, label %375

372:                                              ; preds = %366
  %373 = load ptr, ptr %368, align 8, !tbaa !187
  %374 = icmp eq ptr %373, null
  br i1 %374, label %376, label %375

375:                                              ; preds = %372, %366, %360
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3259, ptr noundef nonnull @.str.2) #21
  br label %376

376:                                              ; preds = %372, %375
  %377 = load i32, ptr %74, align 8
  %378 = and i32 %377, 536870912
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %104

380:                                              ; preds = %43, %376, %170, %83, %87, %79, %126, %2, %159, %151, %141, %133, %26, %12, %175
  ret i32 1
}

declare ptr @xrealloc(ptr noundef, i64 noundef) local_unnamed_addr #3

declare void @spec_qsort(ptr noundef, i64 noundef, i64 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @variable_union_info_cmp_pos(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #12 {
  %3 = getelementptr inbounds %struct.variable_union_info, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !273
  %5 = getelementptr inbounds %struct.variable_union_info, ptr %1, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !273
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = sub nsw i32 %4, %6
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.variable_union_info, ptr %0, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !272
  %13 = getelementptr inbounds %struct.variable_union_info, ptr %1, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !272
  %15 = sub nsw i32 %12, %14
  br label %16

16:                                               ; preds = %10, %8
  %17 = phi i32 [ %9, %8 ], [ %15, %10 ]
  ret i32 %17
}

declare ptr @htab_find_with_hash(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @find_loc_in_1pdv(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) unnamed_addr #9 {
  %4 = load ptr, ptr %1, align 8, !tbaa !181
  %5 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = icmp eq ptr %4, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = load i64, ptr %4, align 8
  %11 = trunc i64 %10 to i16
  switch i16 %11, label %12 [
    i16 1, label %16
    i16 37, label %16
  ]

12:                                               ; preds = %9
  %13 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %4) #21
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %3, %12
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 2506, ptr noundef nonnull @.str.2) #21
  br label %16

16:                                               ; preds = %7, %9, %9, %12, %15
  %17 = getelementptr inbounds %struct.variable_def, ptr %1, i64 0, i32 2
  %18 = load i8, ptr %17, align 4, !tbaa !184
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %67, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.variable_def, ptr %1, i64 0, i32 5
  %22 = getelementptr inbounds %struct.variable_def, ptr %1, i64 0, i32 5, i64 0, i32 2
  %23 = load i64, ptr %22, align 8, !tbaa !213
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 2511, ptr noundef nonnull @.str.2) #21
  br label %26

26:                                               ; preds = %20, %25
  %27 = load ptr, ptr %21, align 8, !tbaa !5
  %28 = icmp eq ptr %27, null
  br i1 %28, label %67, label %29

29:                                               ; preds = %26, %64
  %30 = phi ptr [ %65, %64 ], [ %27, %26 ]
  %31 = getelementptr inbounds %struct.location_chain_def, ptr %30, i64 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !214
  %33 = tail call i32 @rtx_equal_p(ptr noundef %0, ptr noundef %32) #21
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %67

35:                                               ; preds = %29
  %36 = load ptr, ptr %31, align 8, !tbaa !214
  %37 = load i32, ptr %36, align 8
  %38 = and i32 %37, 536936447
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %64

40:                                               ; preds = %35
  %41 = load i64, ptr %36, align 8
  %42 = and i64 %41, 65535
  %43 = icmp eq i64 %42, 1
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.rtx_def, ptr %36, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !16
  %47 = getelementptr inbounds %struct.cselib_val_struct, ptr %46, i64 0, i32 1
  br label %50

48:                                               ; preds = %40
  %49 = getelementptr inbounds %struct.tree_decl_minimal, ptr %36, i64 0, i32 2
  br label %50

50:                                               ; preds = %44, %48
  %51 = phi ptr [ %47, %44 ], [ %49, %48 ]
  %52 = load i32, ptr %51, align 4, !tbaa !16
  %53 = tail call ptr @htab_find_with_hash(ptr noundef %2, ptr noundef nonnull %36, i32 noundef %52) #21
  %54 = icmp eq ptr %53, null
  br i1 %54, label %64, label %55

55:                                               ; preds = %50
  %56 = load ptr, ptr %31, align 8, !tbaa !214
  %57 = load i32, ptr %56, align 8
  %58 = or i32 %57, 536870912
  store i32 %58, ptr %56, align 8
  %59 = tail call fastcc ptr @find_loc_in_1pdv(ptr noundef %0, ptr noundef nonnull %53, ptr noundef %2)
  %60 = icmp eq ptr %59, null
  %61 = load ptr, ptr %31, align 8, !tbaa !214
  %62 = load i32, ptr %61, align 8
  %63 = and i32 %62, -536870913
  store i32 %63, ptr %61, align 8
  br i1 %60, label %64, label %67

64:                                               ; preds = %55, %50, %35
  %65 = load ptr, ptr %30, align 8, !tbaa !5
  %66 = icmp eq ptr %65, null
  br i1 %66, label %67, label %29, !llvm.loop !298

67:                                               ; preds = %29, %64, %55, %26, %16
  %68 = phi ptr [ null, %16 ], [ null, %26 ], [ %30, %29 ], [ null, %64 ], [ %59, %55 ]
  ret ptr %68
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @remove_value_chain(ptr nocapture noundef readonly %0, ptr noundef readnone %1) #9 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = load i32, ptr %3, align 8
  %5 = trunc i32 %4 to i16
  switch i16 %5, label %60 [
    i16 1, label %9
    i16 2, label %6
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.rtx_def, ptr %3, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !16
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi ptr [ %8, %6 ], [ %3, %2 ]
  %11 = icmp eq ptr %10, %1
  br i1 %11, label %60, label %12

12:                                               ; preds = %9
  %13 = load ptr, ptr @value_chains, align 8, !tbaa !5
  %14 = icmp eq ptr %10, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %12
  %16 = load i64, ptr %10, align 8
  %17 = and i64 %16, 65535
  %18 = icmp eq i64 %17, 1
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !16
  %22 = getelementptr inbounds %struct.cselib_val_struct, ptr %21, i64 0, i32 1
  br label %25

23:                                               ; preds = %15, %12
  %24 = getelementptr inbounds %struct.tree_decl_minimal, ptr %10, i64 0, i32 2
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi ptr [ %22, %19 ], [ %24, %23 ]
  %27 = load i32, ptr %26, align 4, !tbaa !16
  %28 = tail call ptr @htab_find_slot_with_hash(ptr noundef %13, ptr noundef %10, i32 noundef %27, i32 noundef 0) #21
  %29 = load ptr, ptr %28, align 8, !tbaa !5
  br label %30

30:                                               ; preds = %34, %25
  %31 = phi ptr [ %29, %25 ], [ %32, %34 ]
  %32 = load ptr, ptr %31, align 8, !tbaa !5
  %33 = icmp eq ptr %32, null
  br i1 %33, label %59, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.value_chain_def, ptr %32, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !191
  %37 = icmp eq ptr %36, %1
  br i1 %37, label %38, label %30, !llvm.loop !299

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.value_chain_def, ptr %32, i64 0, i32 2
  %40 = load i32, ptr %39, align 8, !tbaa !235
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 2925, ptr noundef nonnull @.str.2) #21
  %43 = load i32, ptr %39, align 8, !tbaa !235
  br label %44

44:                                               ; preds = %38, %42
  %45 = phi i32 [ %40, %38 ], [ %43, %42 ]
  %46 = add nsw i32 %45, -1
  store i32 %46, ptr %39, align 8, !tbaa !235
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44
  %49 = load ptr, ptr %32, align 8, !tbaa !234
  store ptr %49, ptr %31, align 8, !tbaa !234
  %50 = load ptr, ptr @value_chain_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %50, ptr noundef nonnull %32) #21
  %51 = load ptr, ptr %31, align 8, !tbaa !234
  %52 = icmp eq ptr %51, null
  br i1 %52, label %53, label %60

53:                                               ; preds = %48
  %54 = load ptr, ptr %28, align 8, !tbaa !5
  %55 = icmp eq ptr %31, %54
  br i1 %55, label %56, label %60

56:                                               ; preds = %53
  %57 = load ptr, ptr @value_chain_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %57, ptr noundef nonnull %31) #21
  %58 = load ptr, ptr @value_chains, align 8, !tbaa !5
  tail call void @htab_clear_slot(ptr noundef %58, ptr noundef nonnull %28) #21
  br label %60

59:                                               ; preds = %30
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 2938, ptr noundef nonnull @.str.2) #21
  br label %60

60:                                               ; preds = %44, %56, %53, %48, %9, %2, %59
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @clobber_slot_part(ptr noundef %0, ptr noundef readnone %1, ptr noundef %2, i64 noundef %3, ptr noundef %4) unnamed_addr #9 {
  %6 = load ptr, ptr %2, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 2
  %8 = load i8, ptr %7, align 4, !tbaa !184
  %9 = sext i8 %8 to i32
  %10 = icmp eq i8 %8, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %5, %11
  %12 = phi i32 [ %22, %11 ], [ %9, %5 ]
  %13 = phi i32 [ %21, %11 ], [ 0, %5 ]
  %14 = add nsw i32 %13, %12
  %15 = sdiv i32 %14, 2
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 5, i64 %16, i32 2
  %18 = load i64, ptr %17, align 8, !tbaa !213
  %19 = icmp slt i64 %18, %3
  %20 = add nsw i32 %15, 1
  %21 = select i1 %19, i32 %20, i32 %13
  %22 = select i1 %19, i32 %12, i32 %15
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %24, label %11, !llvm.loop !223

24:                                               ; preds = %11, %5
  %25 = phi i32 [ 0, %5 ], [ %21, %11 ]
  %26 = icmp slt i32 %25, %9
  br i1 %26, label %27, label %142

27:                                               ; preds = %24
  %28 = sext i32 %25 to i64
  %29 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 5, i64 %28, i32 2
  %30 = load i64, ptr %29, align 8, !tbaa !213
  %31 = icmp eq i64 %30, %3
  %32 = icmp sgt i32 %25, -1
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %142

34:                                               ; preds = %27
  %35 = zext i32 %25 to i64
  %36 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 5, i64 %35
  %37 = load ptr, ptr %36, align 8, !tbaa !185
  %38 = icmp eq ptr %37, null
  br i1 %38, label %142, label %39

39:                                               ; preds = %34
  %40 = icmp eq ptr %4, null
  br i1 %40, label %41, label %84

41:                                               ; preds = %39, %81
  %42 = phi ptr [ %82, %81 ], [ %2, %39 ]
  %43 = phi ptr [ %44, %81 ], [ %37, %39 ]
  %44 = load ptr, ptr %43, align 8, !tbaa !187
  %45 = getelementptr inbounds %struct.location_chain_def, ptr %43, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !214
  %47 = icmp eq ptr %46, %1
  br i1 %47, label %81, label %48

48:                                               ; preds = %41
  %49 = load i32, ptr %46, align 8
  %50 = and i32 %49, 65535
  %51 = icmp eq i32 %50, 37
  br i1 %51, label %52, label %78

52:                                               ; preds = %48
  %53 = getelementptr i8, ptr %46, i64 8
  %54 = load i32, ptr %53, align 8, !tbaa !16
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 1, i64 %55
  %57 = load ptr, ptr %56, align 8, !tbaa !5
  %58 = icmp eq ptr %57, null
  br i1 %58, label %78, label %59

59:                                               ; preds = %52, %73
  %60 = phi ptr [ %74, %73 ], [ %56, %52 ]
  %61 = phi ptr [ %62, %73 ], [ %57, %52 ]
  %62 = load ptr, ptr %61, align 8, !tbaa !56
  %63 = getelementptr inbounds %struct.attrs_def, ptr %61, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !72
  %65 = load ptr, ptr %6, align 8, !tbaa !181
  %66 = icmp eq ptr %64, %65
  br i1 %66, label %67, label %73

67:                                               ; preds = %59
  %68 = getelementptr inbounds %struct.attrs_def, ptr %61, i64 0, i32 3
  %69 = load i64, ptr %68, align 8, !tbaa !59
  %70 = icmp eq i64 %69, %3
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %72, ptr noundef nonnull %61) #21
  store ptr %62, ptr %60, align 8, !tbaa !5
  br label %73

73:                                               ; preds = %71, %67, %59
  %74 = phi ptr [ %60, %71 ], [ %61, %67 ], [ %61, %59 ]
  %75 = icmp eq ptr %62, null
  br i1 %75, label %76, label %59, !llvm.loop !300

76:                                               ; preds = %73
  %77 = load ptr, ptr %45, align 8, !tbaa !214
  br label %78

78:                                               ; preds = %76, %52, %48
  %79 = phi ptr [ %77, %76 ], [ %46, %52 ], [ %46, %48 ]
  %80 = tail call fastcc ptr @delete_slot_part(ptr noundef %0, ptr noundef %79, ptr noundef %42, i64 noundef %3)
  br label %81

81:                                               ; preds = %78, %41
  %82 = phi ptr [ %80, %78 ], [ %42, %41 ]
  %83 = icmp eq ptr %44, null
  br i1 %83, label %142, label %41, !llvm.loop !301

84:                                               ; preds = %39, %139
  %85 = phi ptr [ %140, %139 ], [ %2, %39 ]
  %86 = phi ptr [ %87, %139 ], [ %37, %39 ]
  %87 = load ptr, ptr %86, align 8, !tbaa !187
  %88 = getelementptr inbounds %struct.location_chain_def, ptr %86, i64 0, i32 1
  %89 = load ptr, ptr %88, align 8, !tbaa !214
  %90 = icmp eq ptr %89, %1
  br i1 %90, label %139, label %91

91:                                               ; preds = %84
  %92 = load i32, ptr @flag_var_tracking_uninit, align 4, !tbaa !20
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %91
  %95 = load i32, ptr %4, align 8
  %96 = and i32 %95, 65535
  %97 = icmp eq i32 %96, 43
  br i1 %97, label %105, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.location_chain_def, ptr %86, i64 0, i32 2
  %100 = load ptr, ptr %99, align 8, !tbaa !225
  %101 = tail call i32 @rtx_equal_p(ptr noundef nonnull %4, ptr noundef %100) #21
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %139

103:                                              ; preds = %98
  %104 = load ptr, ptr %88, align 8, !tbaa !214
  br label %105

105:                                              ; preds = %103, %94, %91
  %106 = phi ptr [ %104, %103 ], [ %89, %94 ], [ %89, %91 ]
  %107 = load i32, ptr %106, align 8
  %108 = and i32 %107, 65535
  %109 = icmp eq i32 %108, 37
  br i1 %109, label %110, label %136

110:                                              ; preds = %105
  %111 = getelementptr i8, ptr %106, i64 8
  %112 = load i32, ptr %111, align 8, !tbaa !16
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 1, i64 %113
  %115 = load ptr, ptr %114, align 8, !tbaa !5
  %116 = icmp eq ptr %115, null
  br i1 %116, label %136, label %117

117:                                              ; preds = %110, %131
  %118 = phi ptr [ %132, %131 ], [ %114, %110 ]
  %119 = phi ptr [ %120, %131 ], [ %115, %110 ]
  %120 = load ptr, ptr %119, align 8, !tbaa !56
  %121 = getelementptr inbounds %struct.attrs_def, ptr %119, i64 0, i32 2
  %122 = load ptr, ptr %121, align 8, !tbaa !72
  %123 = load ptr, ptr %6, align 8, !tbaa !181
  %124 = icmp eq ptr %122, %123
  br i1 %124, label %125, label %131

125:                                              ; preds = %117
  %126 = getelementptr inbounds %struct.attrs_def, ptr %119, i64 0, i32 3
  %127 = load i64, ptr %126, align 8, !tbaa !59
  %128 = icmp eq i64 %127, %3
  br i1 %128, label %129, label %131

129:                                              ; preds = %125
  %130 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %130, ptr noundef nonnull %119) #21
  store ptr %120, ptr %118, align 8, !tbaa !5
  br label %131

131:                                              ; preds = %117, %125, %129
  %132 = phi ptr [ %118, %129 ], [ %119, %125 ], [ %119, %117 ]
  %133 = icmp eq ptr %120, null
  br i1 %133, label %134, label %117, !llvm.loop !300

134:                                              ; preds = %131
  %135 = load ptr, ptr %88, align 8, !tbaa !214
  br label %136

136:                                              ; preds = %134, %110, %105
  %137 = phi ptr [ %135, %134 ], [ %106, %110 ], [ %106, %105 ]
  %138 = tail call fastcc ptr @delete_slot_part(ptr noundef %0, ptr noundef %137, ptr noundef %85, i64 noundef %3)
  br label %139

139:                                              ; preds = %84, %98, %136
  %140 = phi ptr [ %138, %136 ], [ %85, %98 ], [ %85, %84 ]
  %141 = icmp eq ptr %87, null
  br i1 %141, label %142, label %84, !llvm.loop !301

142:                                              ; preds = %139, %81, %34, %27, %24
  %143 = phi ptr [ %2, %24 ], [ %2, %27 ], [ %2, %34 ], [ %82, %81 ], [ %140, %139 ]
  ret ptr %143
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @variable_post_merge_new_vals(ptr noundef %0, ptr nocapture noundef readonly %1) #9 {
  %3 = load ptr, ptr %1, align 8, !tbaa !162
  %4 = load ptr, ptr %0, align 8, !tbaa !5
  %5 = load ptr, ptr %4, align 8, !tbaa !181
  %6 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %307, label %8

8:                                                ; preds = %2
  %9 = icmp eq ptr %5, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %8
  %11 = load i64, ptr %5, align 8
  %12 = trunc i64 %11 to i16
  switch i16 %12, label %13 [
    i16 1, label %16
    i16 37, label %16
  ]

13:                                               ; preds = %10
  %14 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %5) #21
  %15 = icmp eq ptr %14, null
  br i1 %15, label %307, label %16

16:                                               ; preds = %8, %10, %10, %13
  %17 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 2
  %18 = load i8, ptr %17, align 4, !tbaa !184
  switch i8 %18, label %19 [
    i8 0, label %307
    i8 1, label %20
  ]

19:                                               ; preds = %16
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3797, ptr noundef nonnull @.str.2) #21
  br label %20

20:                                               ; preds = %16, %19
  %21 = load ptr, ptr %4, align 8, !tbaa !181
  %22 = icmp eq ptr %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %20
  %24 = load i64, ptr %21, align 8
  %25 = and i64 %24, 65535
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %307, label %27

27:                                               ; preds = %20, %23
  %28 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 5
  %29 = load ptr, ptr %28, align 8, !tbaa !5
  %30 = icmp eq ptr %29, null
  br i1 %30, label %307, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.dfset_post_merge, ptr %1, i64 0, i32 1
  br label %33

33:                                               ; preds = %31, %220
  %34 = phi ptr [ %29, %31 ], [ %224, %220 ]
  %35 = phi ptr [ %0, %31 ], [ %221, %220 ]
  %36 = phi i8 [ 0, %31 ], [ %41, %220 ]
  %37 = phi ptr [ %4, %31 ], [ %222, %220 ]
  %38 = getelementptr inbounds %struct.variable_def, ptr %37, i64 0, i32 1
  br label %39

39:                                               ; preds = %33, %226
  %40 = phi ptr [ %34, %33 ], [ %228, %226 ]
  %41 = phi i8 [ %36, %33 ], [ %227, %226 ]
  %42 = getelementptr inbounds %struct.location_chain_def, ptr %40, i64 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !214
  %44 = load i32, ptr %43, align 8
  %45 = trunc i32 %44 to i16
  switch i16 %45, label %226 [
    i16 1, label %46
    i16 37, label %50
  ]

46:                                               ; preds = %39
  %47 = and i32 %44, 536870912
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %226, label %49

49:                                               ; preds = %46
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3807, ptr noundef nonnull @.str.2) #21
  br label %226

50:                                               ; preds = %39
  %51 = load i32, ptr %38, align 8, !tbaa !183
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %220

53:                                               ; preds = %50
  %54 = getelementptr i8, ptr %43, i64 8
  %55 = load i32, ptr %54, align 8, !tbaa !16
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %struct.dataflow_set_def, ptr %3, i64 0, i32 1, i64 %56
  %58 = load ptr, ptr %57, align 8, !tbaa !5
  %59 = icmp eq ptr %58, null
  br i1 %59, label %60, label %61

60:                                               ; preds = %53
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3846, ptr noundef nonnull @.str.2) #21
  br label %128

61:                                               ; preds = %53, %88
  %62 = phi ptr [ %90, %88 ], [ %58, %53 ]
  %63 = phi ptr [ %89, %88 ], [ null, %53 ]
  %64 = phi ptr [ %62, %88 ], [ %57, %53 ]
  %65 = getelementptr inbounds %struct.attrs_def, ptr %62, i64 0, i32 3
  %66 = load i64, ptr %65, align 8, !tbaa !59
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %88

68:                                               ; preds = %61
  %69 = getelementptr inbounds %struct.attrs_def, ptr %62, i64 0, i32 1
  %70 = load ptr, ptr %69, align 8, !tbaa !71
  %71 = load i32, ptr %70, align 8
  %72 = xor i32 %71, %44
  %73 = and i32 %72, 16711680
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %88

75:                                               ; preds = %68
  %76 = getelementptr inbounds %struct.attrs_def, ptr %62, i64 0, i32 2
  %77 = load ptr, ptr %76, align 8, !tbaa !72
  %78 = icmp eq ptr %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = load i64, ptr %77, align 8
  %81 = and i64 %80, 65535
  %82 = icmp eq i64 %81, 1
  br i1 %82, label %83, label %84

83:                                               ; preds = %79
  store ptr %77, ptr %42, align 8, !tbaa !214
  br label %92

84:                                               ; preds = %75, %79
  %85 = load ptr, ptr %37, align 8, !tbaa !181
  %86 = icmp eq ptr %77, %85
  %87 = select i1 %86, ptr %64, ptr %63
  br label %88

88:                                               ; preds = %84, %61, %68
  %89 = phi ptr [ %63, %68 ], [ %63, %61 ], [ %87, %84 ]
  %90 = load ptr, ptr %62, align 8, !tbaa !5
  %91 = icmp eq ptr %90, null
  br i1 %91, label %92, label %61, !llvm.loop !302

92:                                               ; preds = %88, %83
  %93 = phi ptr [ %77, %83 ], [ %43, %88 ]
  %94 = phi ptr [ %64, %83 ], [ %62, %88 ]
  %95 = phi ptr [ %63, %83 ], [ %89, %88 ]
  %96 = phi i1 [ false, %83 ], [ true, %88 ]
  %97 = phi i8 [ 1, %83 ], [ %41, %88 ]
  %98 = icmp eq ptr %95, null
  br i1 %98, label %99, label %126

99:                                               ; preds = %92
  %100 = load ptr, ptr %94, align 8, !tbaa !5
  %101 = icmp eq ptr %100, null
  br i1 %101, label %124, label %102

102:                                              ; preds = %99, %121
  %103 = phi ptr [ %122, %121 ], [ %100, %99 ]
  %104 = phi ptr [ %103, %121 ], [ %94, %99 ]
  %105 = getelementptr inbounds %struct.attrs_def, ptr %103, i64 0, i32 3
  %106 = load i64, ptr %105, align 8, !tbaa !59
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %121

108:                                              ; preds = %102
  %109 = getelementptr inbounds %struct.attrs_def, ptr %103, i64 0, i32 1
  %110 = load ptr, ptr %109, align 8, !tbaa !71
  %111 = load i32, ptr %110, align 8
  %112 = load i32, ptr %93, align 8
  %113 = xor i32 %112, %111
  %114 = and i32 %113, 16711680
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %121

116:                                              ; preds = %108
  %117 = getelementptr inbounds %struct.attrs_def, ptr %103, i64 0, i32 2
  %118 = load ptr, ptr %117, align 8, !tbaa !72
  %119 = load ptr, ptr %37, align 8, !tbaa !181
  %120 = icmp eq ptr %118, %119
  br i1 %120, label %126, label %121

121:                                              ; preds = %116, %108, %102
  %122 = load ptr, ptr %103, align 8, !tbaa !5
  %123 = icmp eq ptr %122, null
  br i1 %123, label %124, label %102, !llvm.loop !303

124:                                              ; preds = %121, %99
  %125 = phi ptr [ %94, %99 ], [ %103, %121 ]
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3846, ptr noundef nonnull @.str.2) #21
  br i1 %96, label %128, label %214

126:                                              ; preds = %116, %92
  %127 = phi ptr [ %95, %92 ], [ %104, %116 ]
  br i1 %96, label %128, label %214

128:                                              ; preds = %60, %124, %126
  %129 = phi ptr [ %125, %124 ], [ %127, %126 ], [ %57, %60 ]
  %130 = load ptr, ptr %32, align 8, !tbaa !164
  %131 = load ptr, ptr %130, align 8, !tbaa !5
  %132 = icmp eq ptr %131, null
  br i1 %132, label %133, label %146

133:                                              ; preds = %128
  %134 = tail call ptr @xmalloc(i64 noundef 448) #21
  %135 = load ptr, ptr %32, align 8, !tbaa !164
  store ptr %134, ptr %135, align 8, !tbaa !5
  %136 = load ptr, ptr %32, align 8, !tbaa !164
  %137 = load ptr, ptr %136, align 8, !tbaa !5
  %138 = getelementptr inbounds %struct.dataflow_set_def, ptr %137, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(424) %138, i8 0, i64 424, i1 false), !tbaa !5
  %139 = load ptr, ptr @empty_shared_hash, align 8, !tbaa !5
  %140 = load i32, ptr %139, align 8, !tbaa !49
  %141 = add nsw i32 %140, 1
  store i32 %141, ptr %139, align 8, !tbaa !49
  %142 = getelementptr inbounds %struct.dataflow_set_def, ptr %137, i64 0, i32 2
  store ptr %139, ptr %142, align 8, !tbaa !51
  store i64 0, ptr %137, align 8, !tbaa !53
  %143 = getelementptr inbounds %struct.dataflow_set_def, ptr %137, i64 0, i32 3
  store ptr null, ptr %143, align 8, !tbaa !54
  %144 = load ptr, ptr %32, align 8, !tbaa !164
  %145 = load ptr, ptr %144, align 8, !tbaa !5
  br label %146

146:                                              ; preds = %133, %128
  %147 = phi ptr [ %145, %133 ], [ %131, %128 ]
  %148 = load ptr, ptr %42, align 8, !tbaa !214
  %149 = getelementptr i8, ptr %148, i64 8
  %150 = load i32, ptr %149, align 8, !tbaa !16
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds %struct.dataflow_set_def, ptr %147, i64 0, i32 1, i64 %151
  br label %153

153:                                              ; preds = %157, %146
  %154 = phi ptr [ %152, %146 ], [ %155, %157 ]
  %155 = load ptr, ptr %154, align 8, !tbaa !5
  %156 = icmp eq ptr %155, null
  br i1 %156, label %183, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %struct.attrs_def, ptr %155, i64 0, i32 1
  %159 = load ptr, ptr %158, align 8, !tbaa !71
  %160 = load i32, ptr %159, align 8
  %161 = load i32, ptr %148, align 8
  %162 = xor i32 %161, %160
  %163 = and i32 %162, 16711680
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %153, !llvm.loop !304

165:                                              ; preds = %157
  %166 = getelementptr inbounds %struct.attrs_def, ptr %155, i64 0, i32 3
  %167 = load i64, ptr %166, align 8, !tbaa !59
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %170, label %169

169:                                              ; preds = %165
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3864, ptr noundef nonnull @.str.2) #21
  br label %170

170:                                              ; preds = %165, %169
  %171 = getelementptr inbounds %struct.attrs_def, ptr %155, i64 0, i32 2
  %172 = load ptr, ptr %171, align 8, !tbaa !72
  %173 = icmp eq ptr %172, null
  br i1 %173, label %178, label %174

174:                                              ; preds = %170
  %175 = load i64, ptr %172, align 8
  %176 = and i64 %175, 65535
  %177 = icmp eq i64 %176, 1
  br i1 %177, label %180, label %178

178:                                              ; preds = %170, %174
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3865, ptr noundef nonnull @.str.2) #21
  %179 = load ptr, ptr %171, align 8, !tbaa !72
  br label %180

180:                                              ; preds = %178, %174
  %181 = phi ptr [ %179, %178 ], [ %172, %174 ]
  tail call fastcc void @val_reset(ptr noundef %3, ptr noundef %181)
  %182 = load ptr, ptr %171, align 8, !tbaa !72
  br label %209

183:                                              ; preds = %153
  %184 = load i32, ptr %148, align 8
  %185 = lshr i32 %184, 16
  %186 = and i32 %185, 255
  %187 = tail call ptr @cselib_lookup(ptr noundef nonnull %148, i32 noundef %186, i32 noundef 0) #21
  %188 = icmp eq ptr %187, null
  br i1 %188, label %190, label %189

189:                                              ; preds = %183
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3882, ptr noundef nonnull @.str.2) #21
  br label %190

190:                                              ; preds = %183, %189
  %191 = load ptr, ptr %42, align 8, !tbaa !214
  %192 = load i32, ptr %191, align 8
  %193 = lshr i32 %192, 16
  %194 = and i32 %193, 255
  %195 = tail call ptr @cselib_lookup(ptr noundef nonnull %191, i32 noundef %194, i32 noundef 1) #21
  tail call void @cselib_preserve_value(ptr noundef %195) #21
  %196 = load ptr, ptr %42, align 8, !tbaa !214
  tail call void @cselib_invalidate_rtx(ptr noundef %196) #21
  %197 = getelementptr inbounds %struct.cselib_val_struct, ptr %195, i64 0, i32 2
  %198 = load ptr, ptr %197, align 8, !tbaa !128
  %199 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %200 = icmp eq ptr %199, null
  br i1 %200, label %209, label %201

201:                                              ; preds = %190
  %202 = getelementptr inbounds %struct.cselib_val_struct, ptr %195, i64 0, i32 1
  %203 = load i32, ptr %202, align 4, !tbaa !169
  %204 = load i32, ptr %195, align 8, !tbaa !305
  %205 = load ptr, ptr %42, align 8, !tbaa !214
  %206 = getelementptr i8, ptr %205, i64 8
  %207 = load i32, ptr %206, align 8, !tbaa !16
  %208 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %199, ptr noundef nonnull @.str.27, i32 noundef %203, i32 noundef %204, i32 noundef %207)
  br label %209

209:                                              ; preds = %190, %201, %180
  %210 = phi ptr [ %182, %180 ], [ %198, %201 ], [ %198, %190 ]
  %211 = load ptr, ptr %32, align 8, !tbaa !164
  %212 = load ptr, ptr %211, align 8, !tbaa !5
  %213 = load ptr, ptr %42, align 8, !tbaa !214
  tail call fastcc void @var_reg_decl_set(ptr noundef %212, ptr noundef %213, i32 noundef 2, ptr noundef %210, i64 noundef 0, ptr noundef null, i32 noundef 1)
  store ptr %210, ptr %42, align 8, !tbaa !214
  br label %214

214:                                              ; preds = %124, %126, %209
  %215 = phi ptr [ %127, %126 ], [ %129, %209 ], [ %125, %124 ]
  %216 = phi i8 [ %97, %126 ], [ 1, %209 ], [ %97, %124 ]
  %217 = load ptr, ptr %215, align 8, !tbaa !5
  %218 = load ptr, ptr %217, align 8, !tbaa !56
  store ptr %218, ptr %215, align 8, !tbaa !5
  %219 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %219, ptr noundef nonnull %217) #21
  br label %226

220:                                              ; preds = %50
  %221 = tail call fastcc ptr @unshare_variable(ptr noundef %3, ptr noundef nonnull %35, ptr noundef nonnull %37, i32 noundef 2)
  %222 = load ptr, ptr %221, align 8, !tbaa !5
  %223 = getelementptr inbounds %struct.variable_def, ptr %222, i64 0, i32 5
  %224 = load ptr, ptr %223, align 8, !tbaa !5
  %225 = icmp eq ptr %224, null
  br i1 %225, label %230, label %33

226:                                              ; preds = %214, %39, %49, %46
  %227 = phi i8 [ %41, %49 ], [ %41, %46 ], [ %41, %39 ], [ %216, %214 ]
  %228 = load ptr, ptr %40, align 8, !tbaa !5
  %229 = icmp eq ptr %228, null
  br i1 %229, label %230, label %39, !llvm.loop !306

230:                                              ; preds = %220, %226
  %231 = phi ptr [ %37, %226 ], [ %222, %220 ]
  %232 = phi i8 [ %227, %226 ], [ %41, %220 ]
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %307, label %234

234:                                              ; preds = %230
  %235 = load ptr, ptr %231, align 8, !tbaa !181
  %236 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %246, label %238

238:                                              ; preds = %234
  %239 = icmp eq ptr %235, null
  br i1 %239, label %247, label %240

240:                                              ; preds = %238
  %241 = load i64, ptr %235, align 8
  %242 = trunc i64 %241 to i16
  switch i16 %242, label %243 [
    i16 1, label %247
    i16 37, label %247
  ]

243:                                              ; preds = %240
  %244 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %235) #21
  %245 = icmp eq ptr %244, null
  br i1 %245, label %246, label %247

246:                                              ; preds = %243, %234
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3743, ptr noundef nonnull @.str.2) #21
  br label %247

247:                                              ; preds = %246, %243, %240, %240, %238
  %248 = getelementptr inbounds %struct.variable_def, ptr %231, i64 0, i32 2
  %249 = load i8, ptr %248, align 4, !tbaa !184
  %250 = icmp eq i8 %249, 1
  br i1 %250, label %252, label %251

251:                                              ; preds = %247
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3744, ptr noundef nonnull @.str.2) #21
  br label %252

252:                                              ; preds = %251, %247
  %253 = getelementptr inbounds %struct.variable_def, ptr %231, i64 0, i32 1
  %254 = load i32, ptr %253, align 8, !tbaa !183
  %255 = icmp eq i32 %254, 1
  br i1 %255, label %257, label %256

256:                                              ; preds = %252
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3745, ptr noundef nonnull @.str.2) #21
  br label %257

257:                                              ; preds = %256, %252
  %258 = getelementptr inbounds %struct.variable_def, ptr %231, i64 0, i32 5
  %259 = load ptr, ptr %258, align 8, !tbaa !5
  %260 = icmp eq ptr %259, null
  br i1 %260, label %307, label %261

261:                                              ; preds = %257, %284
  %262 = phi ptr [ %285, %284 ], [ %259, %257 ]
  %263 = phi ptr [ %268, %284 ], [ %258, %257 ]
  br label %267

264:                                              ; preds = %284, %277
  %265 = load ptr, ptr %258, align 8, !tbaa !5
  %266 = icmp eq ptr %265, null
  br i1 %266, label %307, label %287

267:                                              ; preds = %277, %261
  %268 = phi ptr [ %262, %261 ], [ %280, %277 ]
  %269 = getelementptr inbounds %struct.location_chain_def, ptr %268, i64 0, i32 1
  %270 = load ptr, ptr %269, align 8, !tbaa !214
  %271 = load i32, ptr %270, align 8
  %272 = and i32 %271, 65535
  %273 = icmp eq i32 %272, 1
  br i1 %273, label %274, label %284

274:                                              ; preds = %267
  %275 = and i32 %271, 536870912
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %282, label %277

277:                                              ; preds = %274
  %278 = load ptr, ptr %268, align 8, !tbaa !187
  store ptr %278, ptr %263, align 8, !tbaa !5
  %279 = load ptr, ptr @loc_chain_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %279, ptr noundef nonnull %268) #21
  %280 = load ptr, ptr %263, align 8, !tbaa !5
  %281 = icmp eq ptr %280, null
  br i1 %281, label %264, label %267, !llvm.loop !307

282:                                              ; preds = %274
  %283 = or i32 %271, 536870912
  store i32 %283, ptr %270, align 8
  br label %284

284:                                              ; preds = %267, %282
  %285 = load ptr, ptr %268, align 8, !tbaa !5
  %286 = icmp eq ptr %285, null
  br i1 %286, label %264, label %261, !llvm.loop !307

287:                                              ; preds = %264, %304
  %288 = phi ptr [ %305, %304 ], [ %265, %264 ]
  %289 = getelementptr inbounds %struct.location_chain_def, ptr %288, i64 0, i32 1
  %290 = load ptr, ptr %289, align 8, !tbaa !214
  %291 = load i32, ptr %290, align 8
  %292 = and i32 %291, 65535
  %293 = icmp eq i32 %292, 1
  br i1 %293, label %294, label %304

294:                                              ; preds = %287
  %295 = and i32 %291, 536870912
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %300

297:                                              ; preds = %294
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3767, ptr noundef nonnull @.str.2) #21
  %298 = load ptr, ptr %289, align 8, !tbaa !214
  %299 = load i32, ptr %298, align 8
  br label %300

300:                                              ; preds = %297, %294
  %301 = phi i32 [ %291, %294 ], [ %299, %297 ]
  %302 = phi ptr [ %290, %294 ], [ %298, %297 ]
  %303 = and i32 %301, -536870913
  store i32 %303, ptr %302, align 8
  br label %304

304:                                              ; preds = %300, %287
  %305 = load ptr, ptr %288, align 8, !tbaa !5
  %306 = icmp eq ptr %305, null
  br i1 %306, label %307, label %287, !llvm.loop !308

307:                                              ; preds = %304, %27, %2, %264, %257, %23, %230, %16, %13
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @variable_post_merge_perm_vals(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #9 {
  %3 = load ptr, ptr %1, align 8, !tbaa !162
  %4 = load ptr, ptr %0, align 8, !tbaa !5
  %5 = load ptr, ptr %4, align 8, !tbaa !181
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = load i64, ptr %5, align 8
  %9 = and i64 %8, 65535
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %12, label %11

11:                                               ; preds = %2, %7
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3931, ptr noundef nonnull @.str.2) #21
  br label %12

12:                                               ; preds = %7, %11
  %13 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 2
  %14 = load i8, ptr %13, align 4, !tbaa !184
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3932, ptr noundef nonnull @.str.2) #21
  br label %17

17:                                               ; preds = %12, %16
  %18 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 5
  %19 = load ptr, ptr %18, align 8, !tbaa !185
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3934, ptr noundef nonnull @.str.2) #21
  br label %22

22:                                               ; preds = %17, %21
  %23 = load ptr, ptr %19, align 8, !tbaa !187
  %24 = icmp eq ptr %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3935, ptr noundef nonnull @.str.2) #21
  br label %26

26:                                               ; preds = %22, %25
  %27 = getelementptr inbounds %struct.location_chain_def, ptr %19, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !214
  %29 = load i32, ptr %28, align 8
  %30 = and i32 %29, 65535
  %31 = icmp eq i32 %30, 37
  br i1 %31, label %33, label %32

32:                                               ; preds = %26
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3936, ptr noundef nonnull @.str.2) #21
  br label %33

33:                                               ; preds = %26, %32
  %34 = load ptr, ptr %4, align 8, !tbaa !181
  %35 = getelementptr inbounds %struct.dataflow_set_def, ptr %3, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !51
  %37 = icmp eq ptr %34, null
  br i1 %37, label %46, label %38

38:                                               ; preds = %33
  %39 = load i64, ptr %34, align 8
  %40 = and i64 %39, 65535
  %41 = icmp eq i64 %40, 1
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.rtx_def, ptr %34, i64 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !16
  %45 = getelementptr inbounds %struct.cselib_val_struct, ptr %44, i64 0, i32 1
  br label %48

46:                                               ; preds = %38, %33
  %47 = getelementptr inbounds %struct.tree_decl_minimal, ptr %34, i64 0, i32 2
  br label %48

48:                                               ; preds = %42, %46
  %49 = phi ptr [ %45, %42 ], [ %47, %46 ]
  %50 = load i32, ptr %49, align 4, !tbaa !16
  %51 = getelementptr i8, ptr %36, i64 8
  %52 = load ptr, ptr %51, align 8, !tbaa !55
  %53 = tail call ptr @htab_find_with_hash(ptr noundef %52, ptr noundef %34, i32 noundef %50) #21
  %54 = icmp eq ptr %53, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %48
  %56 = load ptr, ptr %27, align 8, !tbaa !214
  %57 = load ptr, ptr %35, align 8, !tbaa !51
  %58 = getelementptr i8, ptr %57, i64 8
  %59 = load ptr, ptr %58, align 8, !tbaa !55
  %60 = tail call fastcc ptr @find_loc_in_1pdv(ptr noundef %56, ptr noundef nonnull %53, ptr noundef %59)
  %61 = icmp eq ptr %60, null
  br i1 %61, label %62, label %164

62:                                               ; preds = %55
  tail call fastcc void @val_reset(ptr noundef nonnull %3, ptr noundef %34)
  br label %63

63:                                               ; preds = %62, %48
  %64 = load ptr, ptr %27, align 8, !tbaa !214
  %65 = getelementptr i8, ptr %64, i64 8
  %66 = load i32, ptr %65, align 8, !tbaa !16
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %struct.dataflow_set_def, ptr %3, i64 0, i32 1, i64 %67
  %69 = load ptr, ptr %68, align 8, !tbaa !5
  %70 = icmp eq ptr %69, null
  br i1 %70, label %156, label %71

71:                                               ; preds = %63, %92
  %72 = phi ptr [ %93, %92 ], [ %69, %63 ]
  %73 = getelementptr inbounds %struct.attrs_def, ptr %72, i64 0, i32 3
  %74 = load i64, ptr %73, align 8, !tbaa !59
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %92

76:                                               ; preds = %71
  %77 = getelementptr inbounds %struct.attrs_def, ptr %72, i64 0, i32 1
  %78 = load ptr, ptr %77, align 8, !tbaa !71
  %79 = load i32, ptr %78, align 8
  %80 = load i32, ptr %64, align 8
  %81 = xor i32 %80, %79
  %82 = and i32 %81, 16711680
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %92

84:                                               ; preds = %76
  %85 = getelementptr inbounds %struct.attrs_def, ptr %72, i64 0, i32 2
  %86 = load ptr, ptr %85, align 8, !tbaa !72
  %87 = icmp eq ptr %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = load i64, ptr %86, align 8
  %90 = and i64 %89, 65535
  %91 = icmp eq i64 %90, 1
  br i1 %91, label %95, label %92

92:                                               ; preds = %84, %71, %76, %88
  %93 = load ptr, ptr %72, align 8, !tbaa !5
  %94 = icmp eq ptr %93, null
  br i1 %94, label %156, label %71, !llvm.loop !309

95:                                               ; preds = %88
  %96 = getelementptr inbounds %struct.attrs_def, ptr %72, i64 0, i32 2
  %97 = icmp eq ptr %86, %34
  br i1 %97, label %164, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct.location_chain_def, ptr %19, i64 0, i32 3
  %100 = load i32, ptr %99, align 8, !tbaa !224
  %101 = load ptr, ptr %35, align 8, !tbaa !51
  br i1 %37, label %110, label %102

102:                                              ; preds = %98
  %103 = load i64, ptr %34, align 8
  %104 = and i64 %103, 65535
  %105 = icmp eq i64 %104, 1
  br i1 %105, label %106, label %110

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.rtx_def, ptr %34, i64 0, i32 1
  %108 = load ptr, ptr %107, align 8, !tbaa !16
  %109 = getelementptr inbounds %struct.cselib_val_struct, ptr %108, i64 0, i32 1
  br label %112

110:                                              ; preds = %102, %98
  %111 = getelementptr inbounds %struct.tree_decl_minimal, ptr %34, i64 0, i32 2
  br label %112

112:                                              ; preds = %110, %106
  %113 = phi ptr [ %109, %106 ], [ %111, %110 ]
  %114 = load i32, ptr %113, align 4, !tbaa !16
  %115 = load i32, ptr %101, align 8, !tbaa !49
  %116 = getelementptr i8, ptr %101, i64 8
  %117 = load ptr, ptr %116, align 8, !tbaa !55
  %118 = icmp slt i32 %115, 2
  %119 = zext i1 %118 to i32
  %120 = tail call ptr @htab_find_slot_with_hash(ptr noundef %117, ptr noundef %34, i32 noundef %114, i32 noundef %119) #21
  %121 = icmp eq ptr %120, null
  br i1 %121, label %122, label %124

122:                                              ; preds = %112
  %123 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %35, ptr noundef %34, i32 noundef 1)
  br label %124

124:                                              ; preds = %112, %122
  %125 = phi ptr [ %120, %112 ], [ %123, %122 ]
  %126 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %3, ptr noundef nonnull %86, ptr noundef %125, ptr noundef %34, i64 noundef 0, i32 noundef %100, ptr noundef null)
  %127 = load ptr, ptr %96, align 8, !tbaa !72
  %128 = load i32, ptr %99, align 8, !tbaa !224
  %129 = load ptr, ptr %35, align 8, !tbaa !51
  %130 = icmp eq ptr %127, null
  br i1 %130, label %139, label %131

131:                                              ; preds = %124
  %132 = load i64, ptr %127, align 8
  %133 = and i64 %132, 65535
  %134 = icmp eq i64 %133, 1
  br i1 %134, label %135, label %139

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.rtx_def, ptr %127, i64 0, i32 1
  %137 = load ptr, ptr %136, align 8, !tbaa !16
  %138 = getelementptr inbounds %struct.cselib_val_struct, ptr %137, i64 0, i32 1
  br label %141

139:                                              ; preds = %131, %124
  %140 = getelementptr inbounds %struct.tree_decl_minimal, ptr %127, i64 0, i32 2
  br label %141

141:                                              ; preds = %139, %135
  %142 = phi ptr [ %138, %135 ], [ %140, %139 ]
  %143 = load i32, ptr %142, align 4, !tbaa !16
  %144 = load i32, ptr %129, align 8, !tbaa !49
  %145 = getelementptr i8, ptr %129, i64 8
  %146 = load ptr, ptr %145, align 8, !tbaa !55
  %147 = icmp slt i32 %144, 2
  %148 = zext i1 %147 to i32
  %149 = tail call ptr @htab_find_slot_with_hash(ptr noundef %146, ptr noundef %127, i32 noundef %143, i32 noundef %148) #21
  %150 = icmp eq ptr %149, null
  br i1 %150, label %151, label %153

151:                                              ; preds = %141
  %152 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %35, ptr noundef %127, i32 noundef 1)
  br label %153

153:                                              ; preds = %141, %151
  %154 = phi ptr [ %149, %141 ], [ %152, %151 ]
  %155 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %3, ptr noundef %34, ptr noundef %154, ptr noundef %127, i64 noundef 0, i32 noundef %128, ptr noundef null)
  br label %164

156:                                              ; preds = %92, %63
  %157 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  %158 = tail call ptr @pool_alloc(ptr noundef %157) #21
  %159 = getelementptr inbounds %struct.attrs_def, ptr %158, i64 0, i32 1
  store ptr %64, ptr %159, align 8, !tbaa !71
  %160 = getelementptr inbounds %struct.attrs_def, ptr %158, i64 0, i32 2
  store ptr %34, ptr %160, align 8, !tbaa !72
  %161 = getelementptr inbounds %struct.attrs_def, ptr %158, i64 0, i32 3
  store i64 0, ptr %161, align 8, !tbaa !59
  %162 = load ptr, ptr %68, align 8, !tbaa !5
  store ptr %162, ptr %158, align 8, !tbaa !56
  store ptr %158, ptr %68, align 8, !tbaa !5
  %163 = tail call i32 @variable_union(ptr noundef nonnull %0, ptr noundef %3)
  br label %164

164:                                              ; preds = %95, %153, %156, %55
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @canonicalize_vars_star(ptr noundef %0, ptr noundef %1) #9 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = load ptr, ptr %3, align 8, !tbaa !181
  %5 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %109, label %7

7:                                                ; preds = %2
  %8 = icmp eq ptr %4, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %7
  %10 = load i64, ptr %4, align 8
  %11 = trunc i64 %10 to i16
  switch i16 %11, label %12 [
    i16 1, label %17
    i16 37, label %17
  ]

12:                                               ; preds = %9
  %13 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %4) #21
  %14 = icmp eq ptr %13, null
  br i1 %14, label %109, label %15

15:                                               ; preds = %12
  %16 = load i64, ptr %4, align 8
  br label %17

17:                                               ; preds = %15, %9, %9
  %18 = phi i64 [ %16, %15 ], [ %10, %9 ], [ %10, %9 ]
  %19 = and i64 %18, 65535
  %20 = icmp eq i64 %19, 1
  br i1 %20, label %109, label %21

21:                                               ; preds = %7, %17
  %22 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 2
  %23 = load i8, ptr %22, align 4, !tbaa !184
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3290, ptr noundef nonnull @.str.2) #21
  br label %26

26:                                               ; preds = %21, %25
  %27 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 5
  %28 = load ptr, ptr %27, align 8, !tbaa !185
  %29 = getelementptr inbounds %struct.location_chain_def, ptr %28, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !214
  %31 = load i32, ptr %30, align 8
  %32 = and i32 %31, 65535
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %109

34:                                               ; preds = %26
  %35 = load ptr, ptr %28, align 8, !tbaa !187
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !51
  br label %45

40:                                               ; preds = %34
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3297, ptr noundef nonnull @.str.2) #21
  %41 = load ptr, ptr %29, align 8, !tbaa !214
  %42 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 2
  %43 = load ptr, ptr %42, align 8, !tbaa !51
  %44 = icmp eq ptr %41, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %37, %40
  %46 = phi ptr [ %39, %37 ], [ %43, %40 ]
  %47 = phi ptr [ %30, %37 ], [ %41, %40 ]
  %48 = load i64, ptr %47, align 8
  %49 = and i64 %48, 65535
  %50 = icmp eq i64 %49, 1
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.rtx_def, ptr %47, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !16
  %54 = getelementptr inbounds %struct.cselib_val_struct, ptr %53, i64 0, i32 1
  br label %60

55:                                               ; preds = %45, %40
  %56 = phi i1 [ false, %45 ], [ true, %40 ]
  %57 = phi ptr [ %46, %45 ], [ %43, %40 ]
  %58 = phi ptr [ %47, %45 ], [ null, %40 ]
  %59 = getelementptr inbounds %struct.tree_decl_minimal, ptr %58, i64 0, i32 2
  br label %60

60:                                               ; preds = %51, %55
  %61 = phi i1 [ false, %51 ], [ %56, %55 ]
  %62 = phi ptr [ %46, %51 ], [ %57, %55 ]
  %63 = phi ptr [ %47, %51 ], [ %58, %55 ]
  %64 = phi ptr [ %54, %51 ], [ %59, %55 ]
  %65 = load i32, ptr %64, align 4, !tbaa !16
  %66 = getelementptr i8, ptr %62, i64 8
  %67 = load ptr, ptr %66, align 8, !tbaa !55
  %68 = tail call ptr @htab_find_slot_with_hash(ptr noundef %67, ptr noundef %63, i32 noundef %65, i32 noundef 0) #21
  %69 = icmp eq ptr %68, null
  br i1 %69, label %109, label %70

70:                                               ; preds = %60
  %71 = load ptr, ptr %68, align 8, !tbaa !5
  %72 = getelementptr inbounds %struct.variable_def, ptr %71, i64 0, i32 2
  %73 = load i8, ptr %72, align 4, !tbaa !184
  %74 = icmp eq i8 %73, 1
  br i1 %74, label %76, label %75

75:                                               ; preds = %70
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3306, ptr noundef nonnull @.str.2) #21
  br label %76

76:                                               ; preds = %70, %75
  %77 = getelementptr inbounds %struct.variable_def, ptr %71, i64 0, i32 5
  %78 = load ptr, ptr %77, align 8, !tbaa !185
  %79 = getelementptr inbounds %struct.location_chain_def, ptr %78, i64 0, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !214
  %81 = load i32, ptr %80, align 8
  %82 = and i32 %81, 65535
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %109

84:                                               ; preds = %76
  br i1 %61, label %95, label %85

85:                                               ; preds = %84
  %86 = getelementptr inbounds %struct.rtx_def, ptr %80, i64 0, i32 1
  %87 = load ptr, ptr %86, align 8, !tbaa !16
  %88 = getelementptr inbounds %struct.cselib_val_struct, ptr %87, i64 0, i32 1
  %89 = load i32, ptr %88, align 4, !tbaa !169
  %90 = getelementptr inbounds %struct.rtx_def, ptr %63, i64 0, i32 1
  %91 = load ptr, ptr %90, align 8, !tbaa !16
  %92 = getelementptr inbounds %struct.cselib_val_struct, ptr %91, i64 0, i32 1
  %93 = load i32, ptr %92, align 4, !tbaa !169
  %94 = icmp slt i32 %89, %93
  br i1 %94, label %95, label %109

95:                                               ; preds = %84, %85
  %96 = load ptr, ptr %78, align 8, !tbaa !187
  %97 = icmp eq ptr %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %95
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3318, ptr noundef nonnull @.str.2) #21
  %99 = load ptr, ptr %79, align 8, !tbaa !214
  br label %100

100:                                              ; preds = %95, %98
  %101 = phi ptr [ %80, %95 ], [ %99, %98 ]
  %102 = getelementptr inbounds %struct.location_chain_def, ptr %28, i64 0, i32 3
  %103 = load i32, ptr %102, align 8, !tbaa !224
  %104 = getelementptr inbounds %struct.location_chain_def, ptr %28, i64 0, i32 2
  %105 = load ptr, ptr %104, align 8, !tbaa !225
  %106 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %1, ptr noundef %101, ptr noundef nonnull %0, ptr noundef %4, i64 noundef 0, i32 noundef %103, ptr noundef %105)
  %107 = load ptr, ptr %104, align 8, !tbaa !225
  %108 = tail call fastcc ptr @clobber_slot_part(ptr noundef nonnull %1, ptr noundef %101, ptr noundef %106, i64 noundef 0, ptr noundef %107)
  br label %109

109:                                              ; preds = %2, %76, %85, %60, %26, %12, %17, %100
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @val_reset(ptr noundef %0, ptr noundef %1) unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !51
  %5 = icmp eq ptr %1, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = load i64, ptr %1, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !16
  %13 = getelementptr inbounds %struct.cselib_val_struct, ptr %12, i64 0, i32 1
  br label %16

14:                                               ; preds = %6, %2
  %15 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 2
  br label %16

16:                                               ; preds = %10, %14
  %17 = phi ptr [ %13, %10 ], [ %15, %14 ]
  %18 = load i32, ptr %17, align 4, !tbaa !16
  %19 = getelementptr i8, ptr %4, i64 8
  %20 = load ptr, ptr %19, align 8, !tbaa !55
  %21 = tail call ptr @htab_find_with_hash(ptr noundef %20, ptr noundef %1, i32 noundef %18) #21
  %22 = icmp eq ptr %21, null
  br i1 %22, label %289, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.variable_def, ptr %21, i64 0, i32 2
  %25 = load i8, ptr %24, align 4, !tbaa !184
  switch i8 %25, label %26 [
    i8 0, label %289
    i8 1, label %27
  ]

26:                                               ; preds = %23
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1868, ptr noundef nonnull @.str.2) #21
  br label %27

27:                                               ; preds = %23, %26
  %28 = getelementptr inbounds %struct.variable_def, ptr %21, i64 0, i32 5
  %29 = load ptr, ptr %28, align 8, !tbaa !5
  %30 = icmp eq ptr %29, null
  br i1 %30, label %264, label %64

31:                                               ; preds = %85
  br i1 %30, label %145, label %32

32:                                               ; preds = %31
  %33 = icmp eq ptr %86, null
  br i1 %33, label %34, label %89

34:                                               ; preds = %32, %61
  %35 = phi ptr [ %62, %61 ], [ %29, %32 ]
  %36 = getelementptr inbounds %struct.location_chain_def, ptr %35, i64 0, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !214
  %38 = load i32, ptr %37, align 8
  %39 = and i32 %38, 65535
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %61

41:                                               ; preds = %34
  %42 = load ptr, ptr %3, align 8, !tbaa !51
  %43 = load i64, ptr %37, align 8
  %44 = and i64 %43, 65535
  %45 = icmp eq i64 %44, 1
  br i1 %45, label %46, label %50

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.rtx_def, ptr %37, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !16
  %49 = getelementptr inbounds %struct.cselib_val_struct, ptr %48, i64 0, i32 1
  br label %52

50:                                               ; preds = %41
  %51 = getelementptr inbounds %struct.tree_decl_minimal, ptr %37, i64 0, i32 2
  br label %52

52:                                               ; preds = %50, %46
  %53 = phi ptr [ %49, %46 ], [ %51, %50 ]
  %54 = load i32, ptr %53, align 4, !tbaa !16
  %55 = getelementptr i8, ptr %42, i64 8
  %56 = load ptr, ptr %55, align 8, !tbaa !55
  %57 = tail call ptr @htab_find_slot_with_hash(ptr noundef %56, ptr noundef nonnull %37, i32 noundef %54, i32 noundef 0) #21
  %58 = icmp eq ptr %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %52
  %60 = tail call fastcc ptr @delete_slot_part(ptr noundef nonnull %0, ptr noundef %1, ptr noundef nonnull %57, i64 noundef 0)
  br label %61

61:                                               ; preds = %59, %52, %34
  %62 = load ptr, ptr %35, align 8, !tbaa !5
  %63 = icmp eq ptr %62, null
  br i1 %63, label %145, label %34, !llvm.loop !310

64:                                               ; preds = %27, %85
  %65 = phi ptr [ %87, %85 ], [ %29, %27 ]
  %66 = phi ptr [ %86, %85 ], [ null, %27 ]
  %67 = getelementptr inbounds %struct.location_chain_def, ptr %65, i64 0, i32 1
  %68 = load ptr, ptr %67, align 8, !tbaa !214
  %69 = load i32, ptr %68, align 8
  %70 = and i32 %69, 65535
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %85

72:                                               ; preds = %64
  %73 = icmp eq ptr %66, null
  br i1 %73, label %84, label %74

74:                                               ; preds = %72
  %75 = getelementptr inbounds %struct.rtx_def, ptr %68, i64 0, i32 1
  %76 = load ptr, ptr %75, align 8, !tbaa !16
  %77 = getelementptr inbounds %struct.cselib_val_struct, ptr %76, i64 0, i32 1
  %78 = load i32, ptr %77, align 4, !tbaa !169
  %79 = getelementptr inbounds %struct.rtx_def, ptr %66, i64 0, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !16
  %81 = getelementptr inbounds %struct.cselib_val_struct, ptr %80, i64 0, i32 1
  %82 = load i32, ptr %81, align 4, !tbaa !169
  %83 = icmp slt i32 %78, %82
  br i1 %83, label %84, label %85

84:                                               ; preds = %72, %74
  br label %85

85:                                               ; preds = %64, %74, %84
  %86 = phi ptr [ %68, %84 ], [ %66, %74 ], [ %66, %64 ]
  %87 = load ptr, ptr %65, align 8, !tbaa !5
  %88 = icmp eq ptr %87, null
  br i1 %88, label %31, label %64, !llvm.loop !311

89:                                               ; preds = %32, %142
  %90 = phi ptr [ %143, %142 ], [ %29, %32 ]
  %91 = getelementptr inbounds %struct.location_chain_def, ptr %90, i64 0, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !214
  %93 = load i32, ptr %92, align 8
  %94 = and i32 %93, 65535
  %95 = icmp ne i32 %94, 1
  %96 = icmp eq ptr %86, %92
  %97 = or i1 %95, %96
  br i1 %97, label %142, label %98

98:                                               ; preds = %89
  %99 = getelementptr inbounds %struct.location_chain_def, ptr %90, i64 0, i32 3
  %100 = load i32, ptr %99, align 8, !tbaa !224
  %101 = getelementptr inbounds %struct.location_chain_def, ptr %90, i64 0, i32 2
  %102 = load ptr, ptr %101, align 8, !tbaa !225
  %103 = load ptr, ptr %3, align 8, !tbaa !51
  %104 = load i64, ptr %92, align 8
  %105 = and i64 %104, 65535
  %106 = icmp eq i64 %105, 1
  br i1 %106, label %107, label %111

107:                                              ; preds = %98
  %108 = getelementptr inbounds %struct.rtx_def, ptr %92, i64 0, i32 1
  %109 = load ptr, ptr %108, align 8, !tbaa !16
  %110 = getelementptr inbounds %struct.cselib_val_struct, ptr %109, i64 0, i32 1
  br label %113

111:                                              ; preds = %98
  %112 = getelementptr inbounds %struct.tree_decl_minimal, ptr %92, i64 0, i32 2
  br label %113

113:                                              ; preds = %107, %111
  %114 = phi ptr [ %110, %107 ], [ %112, %111 ]
  %115 = load i32, ptr %114, align 4, !tbaa !16
  %116 = getelementptr i8, ptr %103, i64 8
  %117 = load ptr, ptr %116, align 8, !tbaa !55
  %118 = tail call ptr @htab_find_slot_with_hash(ptr noundef %117, ptr noundef nonnull %92, i32 noundef %115, i32 noundef 0) #21
  %119 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %0, ptr noundef nonnull %86, ptr noundef %118, ptr noundef nonnull %92, i64 noundef 0, i32 noundef %100, ptr noundef %102)
  %120 = load ptr, ptr %91, align 8, !tbaa !214
  %121 = load ptr, ptr %3, align 8, !tbaa !51
  %122 = icmp eq ptr %120, null
  br i1 %122, label %131, label %123

123:                                              ; preds = %113
  %124 = load i64, ptr %120, align 8
  %125 = and i64 %124, 65535
  %126 = icmp eq i64 %125, 1
  br i1 %126, label %127, label %131

127:                                              ; preds = %123
  %128 = getelementptr inbounds %struct.rtx_def, ptr %120, i64 0, i32 1
  %129 = load ptr, ptr %128, align 8, !tbaa !16
  %130 = getelementptr inbounds %struct.cselib_val_struct, ptr %129, i64 0, i32 1
  br label %133

131:                                              ; preds = %123, %113
  %132 = getelementptr inbounds %struct.tree_decl_minimal, ptr %120, i64 0, i32 2
  br label %133

133:                                              ; preds = %131, %127
  %134 = phi ptr [ %130, %127 ], [ %132, %131 ]
  %135 = load i32, ptr %134, align 4, !tbaa !16
  %136 = getelementptr i8, ptr %121, i64 8
  %137 = load ptr, ptr %136, align 8, !tbaa !55
  %138 = tail call ptr @htab_find_slot_with_hash(ptr noundef %137, ptr noundef %120, i32 noundef %135, i32 noundef 0) #21
  %139 = icmp eq ptr %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %133
  %141 = tail call fastcc ptr @delete_slot_part(ptr noundef nonnull %0, ptr noundef %1, ptr noundef nonnull %138, i64 noundef 0)
  br label %142

142:                                              ; preds = %140, %133, %89
  %143 = load ptr, ptr %90, align 8, !tbaa !5
  %144 = icmp eq ptr %143, null
  br i1 %144, label %145, label %89, !llvm.loop !310

145:                                              ; preds = %142, %61, %31
  %146 = icmp eq ptr %86, null
  br i1 %146, label %264, label %147

147:                                              ; preds = %145
  %148 = load ptr, ptr %28, align 8, !tbaa !5
  %149 = icmp eq ptr %148, null
  br i1 %149, label %244, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %struct.tree_decl_common, ptr %86, i64 0, i32 2
  %152 = getelementptr inbounds %struct.tree_decl_minimal, ptr %86, i64 0, i32 2
  %153 = getelementptr inbounds %struct.rtx_def, ptr %86, i64 0, i32 1
  br label %154

154:                                              ; preds = %150, %241
  %155 = phi ptr [ %148, %150 ], [ %242, %241 ]
  %156 = getelementptr inbounds %struct.location_chain_def, ptr %155, i64 0, i32 1
  %157 = load ptr, ptr %156, align 8, !tbaa !214
  %158 = icmp eq ptr %157, %86
  br i1 %158, label %241, label %159

159:                                              ; preds = %154
  %160 = load i32, ptr %157, align 8
  %161 = trunc i32 %160 to i16
  switch i16 %161, label %222 [
    i16 37, label %162
    i16 43, label %167
  ]

162:                                              ; preds = %159
  %163 = getelementptr inbounds %struct.location_chain_def, ptr %155, i64 0, i32 3
  %164 = load i32, ptr %163, align 8, !tbaa !224
  %165 = getelementptr inbounds %struct.location_chain_def, ptr %155, i64 0, i32 2
  %166 = load ptr, ptr %165, align 8, !tbaa !225
  tail call fastcc void @var_reg_decl_set(ptr noundef %0, ptr noundef nonnull %157, i32 noundef %164, ptr noundef nonnull %86, i64 noundef 0, ptr noundef %166, i32 noundef 0)
  br label %241

167:                                              ; preds = %159
  %168 = getelementptr inbounds %struct.location_chain_def, ptr %155, i64 0, i32 3
  %169 = load i32, ptr %168, align 8, !tbaa !224
  %170 = getelementptr inbounds %struct.location_chain_def, ptr %155, i64 0, i32 2
  %171 = load ptr, ptr %170, align 8, !tbaa !225
  %172 = load i64, ptr %86, align 8
  %173 = and i64 %172, 65535
  %174 = icmp eq i64 %173, 1
  br i1 %174, label %193, label %175

175:                                              ; preds = %167
  %176 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %173
  %177 = load i32, ptr %176, align 4, !tbaa !16
  %178 = icmp eq i32 %177, 3
  br i1 %178, label %179, label %193

179:                                              ; preds = %175
  %180 = load i64, ptr %151, align 8
  %181 = and i64 %180, 16384
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %193, label %183

183:                                              ; preds = %179
  %184 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %86) #21
  %185 = icmp eq ptr %184, null
  br i1 %185, label %193, label %186

186:                                              ; preds = %183
  %187 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %86) #21
  %188 = load i64, ptr %187, align 8
  %189 = and i64 %188, 65535
  %190 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %189
  %191 = load i32, ptr %190, align 4, !tbaa !16
  %192 = icmp eq i32 %191, 3
  br i1 %192, label %195, label %193

193:                                              ; preds = %167, %186, %183, %179, %175
  %194 = load ptr, ptr %3, align 8, !tbaa !51
  br label %199

195:                                              ; preds = %186
  %196 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %86) #21
  %197 = load ptr, ptr %3, align 8, !tbaa !51
  %198 = icmp eq ptr %196, null
  br i1 %198, label %209, label %199

199:                                              ; preds = %193, %195
  %200 = phi ptr [ %194, %193 ], [ %197, %195 ]
  %201 = phi ptr [ %86, %193 ], [ %196, %195 ]
  %202 = load i64, ptr %201, align 8
  %203 = and i64 %202, 65535
  %204 = icmp eq i64 %203, 1
  br i1 %204, label %205, label %209

205:                                              ; preds = %199
  %206 = getelementptr inbounds %struct.rtx_def, ptr %201, i64 0, i32 1
  %207 = load ptr, ptr %206, align 8, !tbaa !16
  %208 = getelementptr inbounds %struct.cselib_val_struct, ptr %207, i64 0, i32 1
  br label %213

209:                                              ; preds = %199, %195
  %210 = phi ptr [ %200, %199 ], [ %197, %195 ]
  %211 = phi ptr [ %201, %199 ], [ null, %195 ]
  %212 = getelementptr inbounds %struct.tree_decl_minimal, ptr %211, i64 0, i32 2
  br label %213

213:                                              ; preds = %205, %209
  %214 = phi ptr [ %200, %205 ], [ %210, %209 ]
  %215 = phi ptr [ %201, %205 ], [ %211, %209 ]
  %216 = phi ptr [ %208, %205 ], [ %212, %209 ]
  %217 = load i32, ptr %216, align 4, !tbaa !16
  %218 = getelementptr i8, ptr %214, i64 8
  %219 = load ptr, ptr %218, align 8, !tbaa !55
  %220 = tail call ptr @htab_find_slot_with_hash(ptr noundef %219, ptr noundef %215, i32 noundef %217, i32 noundef 0) #21
  %221 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %0, ptr noundef nonnull %157, ptr noundef %220, ptr noundef %215, i64 noundef 0, i32 noundef %169, ptr noundef %171)
  br label %241

222:                                              ; preds = %159
  %223 = getelementptr inbounds %struct.location_chain_def, ptr %155, i64 0, i32 3
  %224 = load i32, ptr %223, align 8, !tbaa !224
  %225 = getelementptr inbounds %struct.location_chain_def, ptr %155, i64 0, i32 2
  %226 = load ptr, ptr %225, align 8, !tbaa !225
  %227 = load ptr, ptr %3, align 8, !tbaa !51
  %228 = load i64, ptr %86, align 8
  %229 = and i64 %228, 65535
  %230 = icmp eq i64 %229, 1
  br i1 %230, label %231, label %234

231:                                              ; preds = %222
  %232 = load ptr, ptr %153, align 8, !tbaa !16
  %233 = getelementptr inbounds %struct.cselib_val_struct, ptr %232, i64 0, i32 1
  br label %234

234:                                              ; preds = %222, %231
  %235 = phi ptr [ %233, %231 ], [ %152, %222 ]
  %236 = load i32, ptr %235, align 4, !tbaa !16
  %237 = getelementptr i8, ptr %227, i64 8
  %238 = load ptr, ptr %237, align 8, !tbaa !55
  %239 = tail call ptr @htab_find_slot_with_hash(ptr noundef %238, ptr noundef nonnull %86, i32 noundef %236, i32 noundef 0) #21
  %240 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %0, ptr noundef nonnull %157, ptr noundef %239, ptr noundef nonnull %86, i64 noundef 0, i32 noundef %224, ptr noundef %226)
  br label %241

241:                                              ; preds = %213, %234, %162, %154
  %242 = load ptr, ptr %155, align 8, !tbaa !5
  %243 = icmp eq ptr %242, null
  br i1 %243, label %244, label %154, !llvm.loop !312

244:                                              ; preds = %241, %147
  %245 = load ptr, ptr %3, align 8, !tbaa !51
  %246 = load i64, ptr %86, align 8
  %247 = and i64 %246, 65535
  %248 = icmp eq i64 %247, 1
  br i1 %248, label %249, label %253

249:                                              ; preds = %244
  %250 = getelementptr inbounds %struct.rtx_def, ptr %86, i64 0, i32 1
  %251 = load ptr, ptr %250, align 8, !tbaa !16
  %252 = getelementptr inbounds %struct.cselib_val_struct, ptr %251, i64 0, i32 1
  br label %255

253:                                              ; preds = %244
  %254 = getelementptr inbounds %struct.tree_decl_minimal, ptr %86, i64 0, i32 2
  br label %255

255:                                              ; preds = %253, %249
  %256 = phi ptr [ %252, %249 ], [ %254, %253 ]
  %257 = load i32, ptr %256, align 4, !tbaa !16
  %258 = getelementptr i8, ptr %245, i64 8
  %259 = load ptr, ptr %258, align 8, !tbaa !55
  %260 = tail call ptr @htab_find_slot_with_hash(ptr noundef %259, ptr noundef nonnull %86, i32 noundef %257, i32 noundef 0) #21
  %261 = icmp eq ptr %260, null
  br i1 %261, label %264, label %262

262:                                              ; preds = %255
  %263 = tail call fastcc ptr @delete_slot_part(ptr noundef nonnull %0, ptr noundef %1, ptr noundef nonnull %260, i64 noundef 0)
  br label %264

264:                                              ; preds = %27, %262, %255, %145
  br i1 %5, label %289, label %265

265:                                              ; preds = %264
  %266 = load i64, ptr %1, align 8
  %267 = and i64 %266, 65535
  %268 = icmp eq i64 %267, 1
  br i1 %268, label %273, label %269

269:                                              ; preds = %265
  %270 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %267
  %271 = load i32, ptr %270, align 4, !tbaa !16
  %272 = icmp eq i32 %271, 3
  br i1 %272, label %277, label %289

273:                                              ; preds = %265
  %274 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %275 = load ptr, ptr %274, align 8, !tbaa !16
  %276 = getelementptr inbounds %struct.cselib_val_struct, ptr %275, i64 0, i32 1
  br label %279

277:                                              ; preds = %269
  %278 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 2
  br label %279

279:                                              ; preds = %277, %273
  %280 = phi ptr [ %276, %273 ], [ %278, %277 ]
  %281 = load ptr, ptr %3, align 8, !tbaa !51
  %282 = load i32, ptr %280, align 4, !tbaa !16
  %283 = getelementptr i8, ptr %281, i64 8
  %284 = load ptr, ptr %283, align 8, !tbaa !55
  %285 = tail call ptr @htab_find_slot_with_hash(ptr noundef %284, ptr noundef nonnull %1, i32 noundef %282, i32 noundef 0) #21
  %286 = icmp eq ptr %285, null
  br i1 %286, label %289, label %287

287:                                              ; preds = %279
  %288 = tail call fastcc ptr @clobber_slot_part(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull %285, i64 noundef 0, ptr noundef null)
  br label %289

289:                                              ; preds = %287, %279, %269, %264, %23, %16
  ret void
}

declare void @cselib_invalidate_rtx(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @var_mem_set(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3) unnamed_addr #9 {
  %5 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 1
  %6 = load ptr, ptr %5, align 8, !tbaa !16
  %7 = icmp eq ptr %6, null
  br i1 %7, label %45, label %8

8:                                                ; preds = %4
  %9 = load ptr, ptr %6, align 8, !tbaa !135
  %10 = getelementptr inbounds %struct.mem_attrs, ptr %6, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !137
  %12 = icmp eq ptr %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.rtx_def, ptr %11, i64 0, i32 1
  %15 = load i64, ptr %14, align 8, !tbaa !16
  br label %16

16:                                               ; preds = %8, %13
  %17 = phi i64 [ %15, %13 ], [ 0, %8 ]
  %18 = icmp eq ptr %9, null
  br i1 %18, label %45, label %19

19:                                               ; preds = %16
  %20 = load i64, ptr %9, align 8
  %21 = and i64 %20, 65535
  %22 = icmp eq i64 %21, 1
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %21
  %25 = load i32, ptr %24, align 4, !tbaa !16
  %26 = icmp eq i32 %25, 3
  br i1 %26, label %27, label %42

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tree_decl_common, ptr %9, i64 0, i32 2
  %29 = load i64, ptr %28, align 8
  %30 = and i64 %29, 16384
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %42, label %32

32:                                               ; preds = %27
  %33 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %9) #21
  %34 = icmp eq ptr %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %32
  %36 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %9) #21
  %37 = load i64, ptr %36, align 8
  %38 = and i64 %37, 65535
  %39 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %38
  %40 = load i32, ptr %39, align 4, !tbaa !16
  %41 = icmp eq i32 %40, 3
  br i1 %41, label %49, label %42

42:                                               ; preds = %19, %35, %32, %27, %23
  %43 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %44 = load ptr, ptr %43, align 8, !tbaa !51
  br label %54

45:                                               ; preds = %16, %4
  %46 = phi i64 [ %17, %16 ], [ 0, %4 ]
  %47 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !51
  br label %65

49:                                               ; preds = %35
  %50 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %9) #21
  %51 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !51
  %53 = icmp eq ptr %50, null
  br i1 %53, label %65, label %54

54:                                               ; preds = %42, %49
  %55 = phi ptr [ %44, %42 ], [ %52, %49 ]
  %56 = phi ptr [ %43, %42 ], [ %51, %49 ]
  %57 = phi ptr [ %9, %42 ], [ %50, %49 ]
  %58 = load i64, ptr %57, align 8
  %59 = and i64 %58, 65535
  %60 = icmp eq i64 %59, 1
  br i1 %60, label %61, label %65

61:                                               ; preds = %54
  %62 = getelementptr inbounds %struct.rtx_def, ptr %57, i64 0, i32 1
  %63 = load ptr, ptr %62, align 8, !tbaa !16
  %64 = getelementptr inbounds %struct.cselib_val_struct, ptr %63, i64 0, i32 1
  br label %71

65:                                               ; preds = %45, %54, %49
  %66 = phi ptr [ %55, %54 ], [ %52, %49 ], [ %48, %45 ]
  %67 = phi ptr [ %56, %54 ], [ %51, %49 ], [ %47, %45 ]
  %68 = phi ptr [ %57, %54 ], [ null, %49 ], [ null, %45 ]
  %69 = phi i64 [ %17, %54 ], [ %17, %49 ], [ %46, %45 ]
  %70 = getelementptr inbounds %struct.tree_decl_minimal, ptr %68, i64 0, i32 2
  br label %71

71:                                               ; preds = %65, %61
  %72 = phi ptr [ %55, %61 ], [ %66, %65 ]
  %73 = phi ptr [ %56, %61 ], [ %67, %65 ]
  %74 = phi ptr [ %57, %61 ], [ %68, %65 ]
  %75 = phi i64 [ %17, %61 ], [ %69, %65 ]
  %76 = phi ptr [ %64, %61 ], [ %70, %65 ]
  %77 = load i32, ptr %76, align 4, !tbaa !16
  %78 = load i32, ptr %72, align 8, !tbaa !49
  %79 = getelementptr i8, ptr %72, i64 8
  %80 = load ptr, ptr %79, align 8, !tbaa !55
  %81 = icmp slt i32 %78, 2
  %82 = zext i1 %81 to i32
  %83 = tail call ptr @htab_find_slot_with_hash(ptr noundef %80, ptr noundef %74, i32 noundef %77, i32 noundef %82) #21
  %84 = icmp eq ptr %83, null
  br i1 %84, label %85, label %87

85:                                               ; preds = %71
  %86 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %73, ptr noundef %74, i32 noundef 1)
  br label %87

87:                                               ; preds = %71, %85
  %88 = phi ptr [ %83, %71 ], [ %86, %85 ]
  %89 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %0, ptr noundef nonnull %1, ptr noundef %88, ptr noundef %74, i64 noundef %75, i32 noundef %2, ptr noundef %3)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @val_resolve(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef readonly %3) unnamed_addr #9 {
  %5 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %6 = icmp eq ptr %5, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %9 = and i32 %8, 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %7
  %12 = icmp eq ptr %3, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.rtx_def, ptr %3, i64 0, i32 1
  %15 = load i32, ptr %14, align 8, !tbaa !16
  %16 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %5, ptr noundef nonnull @.str.28, i32 noundef %15)
  br label %19

17:                                               ; preds = %11
  %18 = tail call i64 @fwrite(ptr nonnull @.str.29, i64 6, i64 1, ptr nonnull %5)
  br label %19

19:                                               ; preds = %17, %13
  %20 = load ptr, ptr @dump_file, align 8, !tbaa !5
  tail call void @print_inline_rtx(ptr noundef %20, ptr noundef %1, i32 noundef 0) #21
  %21 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %22 = tail call i64 @fwrite(ptr nonnull @.str.30, i64 7, i64 1, ptr %21)
  %23 = load ptr, ptr @dump_file, align 8, !tbaa !5
  tail call void @print_inline_rtx(ptr noundef %23, ptr noundef %2, i32 noundef 0) #21
  %24 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %25 = tail call i32 @fputc(i32 noundef 10, ptr noundef %24)
  br label %26

26:                                               ; preds = %19, %7, %4
  tail call fastcc void @val_reset(ptr noundef %0, ptr noundef %1)
  %27 = load i32, ptr %2, align 8
  %28 = trunc i32 %27 to i16
  switch i16 %28, label %189 [
    i16 37, label %29
    i16 43, label %119
  ]

29:                                               ; preds = %26
  %30 = getelementptr i8, ptr %2, i64 8
  %31 = load i32, ptr %30, align 8, !tbaa !16
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 1, i64 %32
  %34 = load ptr, ptr %33, align 8, !tbaa !5
  %35 = icmp eq ptr %34, null
  br i1 %35, label %118, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %38 = icmp eq ptr %1, null
  %39 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %40 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 2
  br label %41

41:                                               ; preds = %36, %112
  %42 = phi ptr [ %34, %36 ], [ %114, %112 ]
  %43 = phi ptr [ null, %36 ], [ %113, %112 ]
  %44 = getelementptr inbounds %struct.attrs_def, ptr %42, i64 0, i32 2
  %45 = load ptr, ptr %44, align 8, !tbaa !72
  %46 = icmp eq ptr %45, null
  br i1 %46, label %112, label %47

47:                                               ; preds = %41
  %48 = load i64, ptr %45, align 8
  %49 = and i64 %48, 65535
  %50 = icmp eq i64 %49, 1
  br i1 %50, label %51, label %112

51:                                               ; preds = %47
  %52 = trunc i64 %48 to i32
  %53 = load i32, ptr %2, align 8
  %54 = xor i32 %53, %52
  %55 = and i32 %54, 16711680
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %112

57:                                               ; preds = %51
  %58 = getelementptr inbounds %struct.attrs_def, ptr %42, i64 0, i32 3
  %59 = load i64, ptr %58, align 8, !tbaa !59
  %60 = load ptr, ptr %37, align 8, !tbaa !51
  br i1 %38, label %68, label %61

61:                                               ; preds = %57
  %62 = load i64, ptr %1, align 8
  %63 = and i64 %62, 65535
  %64 = icmp eq i64 %63, 1
  br i1 %64, label %65, label %68

65:                                               ; preds = %61
  %66 = load ptr, ptr %39, align 8, !tbaa !16
  %67 = getelementptr inbounds %struct.cselib_val_struct, ptr %66, i64 0, i32 1
  br label %68

68:                                               ; preds = %57, %61, %65
  %69 = phi ptr [ %67, %65 ], [ %40, %61 ], [ %40, %57 ]
  %70 = load i32, ptr %69, align 4, !tbaa !16
  %71 = load i32, ptr %60, align 8, !tbaa !49
  %72 = getelementptr i8, ptr %60, i64 8
  %73 = load ptr, ptr %72, align 8, !tbaa !55
  %74 = icmp slt i32 %71, 2
  %75 = zext i1 %74 to i32
  %76 = tail call ptr @htab_find_slot_with_hash(ptr noundef %73, ptr noundef %1, i32 noundef %70, i32 noundef %75) #21
  %77 = icmp eq ptr %76, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %68
  %79 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %37, ptr noundef %1, i32 noundef 1)
  br label %80

80:                                               ; preds = %68, %78
  %81 = phi ptr [ %76, %68 ], [ %79, %78 ]
  %82 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %0, ptr noundef nonnull %45, ptr noundef %81, ptr noundef %1, i64 noundef %59, i32 noundef 2, ptr noundef null)
  %83 = load ptr, ptr %44, align 8, !tbaa !72
  %84 = load i64, ptr %58, align 8, !tbaa !59
  %85 = load ptr, ptr %37, align 8, !tbaa !51
  %86 = icmp eq ptr %83, null
  br i1 %86, label %95, label %87

87:                                               ; preds = %80
  %88 = load i64, ptr %83, align 8
  %89 = and i64 %88, 65535
  %90 = icmp eq i64 %89, 1
  br i1 %90, label %91, label %95

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.rtx_def, ptr %83, i64 0, i32 1
  %93 = load ptr, ptr %92, align 8, !tbaa !16
  %94 = getelementptr inbounds %struct.cselib_val_struct, ptr %93, i64 0, i32 1
  br label %97

95:                                               ; preds = %87, %80
  %96 = getelementptr inbounds %struct.tree_decl_minimal, ptr %83, i64 0, i32 2
  br label %97

97:                                               ; preds = %95, %91
  %98 = phi ptr [ %94, %91 ], [ %96, %95 ]
  %99 = load i32, ptr %98, align 4, !tbaa !16
  %100 = load i32, ptr %85, align 8, !tbaa !49
  %101 = getelementptr i8, ptr %85, i64 8
  %102 = load ptr, ptr %101, align 8, !tbaa !55
  %103 = icmp slt i32 %100, 2
  %104 = zext i1 %103 to i32
  %105 = tail call ptr @htab_find_slot_with_hash(ptr noundef %102, ptr noundef %83, i32 noundef %99, i32 noundef %104) #21
  %106 = icmp eq ptr %105, null
  br i1 %106, label %107, label %109

107:                                              ; preds = %97
  %108 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %37, ptr noundef %83, i32 noundef 1)
  br label %109

109:                                              ; preds = %97, %107
  %110 = phi ptr [ %105, %97 ], [ %108, %107 ]
  %111 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %0, ptr noundef %1, ptr noundef %110, ptr noundef %83, i64 noundef %84, i32 noundef 2, ptr noundef null)
  br label %112

112:                                              ; preds = %41, %47, %51, %109
  %113 = phi ptr [ %42, %109 ], [ %43, %51 ], [ %43, %47 ], [ %43, %41 ]
  %114 = load ptr, ptr %42, align 8, !tbaa !5
  %115 = icmp eq ptr %114, null
  br i1 %115, label %116, label %41, !llvm.loop !313

116:                                              ; preds = %112
  %117 = icmp eq ptr %113, null
  br i1 %117, label %118, label %218

118:                                              ; preds = %29, %116
  tail call fastcc void @var_reg_decl_set(ptr noundef %0, ptr noundef nonnull %2, i32 noundef 2, ptr noundef %1, i64 noundef 0, ptr noundef null, i32 noundef 1)
  br label %218

119:                                              ; preds = %26
  %120 = icmp eq ptr %1, null
  br i1 %120, label %121, label %124

121:                                              ; preds = %119
  %122 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %123 = load ptr, ptr %122, align 8, !tbaa !51
  br label %166

124:                                              ; preds = %119
  %125 = load i64, ptr %1, align 8
  %126 = and i64 %125, 65535
  %127 = icmp eq i64 %126, 1
  br i1 %127, label %147, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %126
  %130 = load i32, ptr %129, align 4, !tbaa !16
  %131 = icmp eq i32 %130, 3
  br i1 %131, label %132, label %147

132:                                              ; preds = %128
  %133 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %134 = load i64, ptr %133, align 8
  %135 = and i64 %134, 16384
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %147, label %137

137:                                              ; preds = %132
  %138 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %1) #21
  %139 = icmp eq ptr %138, null
  br i1 %139, label %147, label %140

140:                                              ; preds = %137
  %141 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %1) #21
  %142 = load i64, ptr %141, align 8
  %143 = and i64 %142, 65535
  %144 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %143
  %145 = load i32, ptr %144, align 4, !tbaa !16
  %146 = icmp eq i32 %145, 3
  br i1 %146, label %150, label %147

147:                                              ; preds = %124, %140, %137, %132, %128
  %148 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %149 = load ptr, ptr %148, align 8, !tbaa !51
  br label %155

150:                                              ; preds = %140
  %151 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %1) #21
  %152 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %153 = load ptr, ptr %152, align 8, !tbaa !51
  %154 = icmp eq ptr %151, null
  br i1 %154, label %166, label %155

155:                                              ; preds = %147, %150
  %156 = phi ptr [ %149, %147 ], [ %153, %150 ]
  %157 = phi ptr [ %148, %147 ], [ %152, %150 ]
  %158 = phi ptr [ %1, %147 ], [ %151, %150 ]
  %159 = load i64, ptr %158, align 8
  %160 = and i64 %159, 65535
  %161 = icmp eq i64 %160, 1
  br i1 %161, label %162, label %166

162:                                              ; preds = %155
  %163 = getelementptr inbounds %struct.rtx_def, ptr %158, i64 0, i32 1
  %164 = load ptr, ptr %163, align 8, !tbaa !16
  %165 = getelementptr inbounds %struct.cselib_val_struct, ptr %164, i64 0, i32 1
  br label %171

166:                                              ; preds = %121, %155, %150
  %167 = phi ptr [ %156, %155 ], [ %153, %150 ], [ %123, %121 ]
  %168 = phi ptr [ %157, %155 ], [ %152, %150 ], [ %122, %121 ]
  %169 = phi ptr [ %158, %155 ], [ null, %150 ], [ null, %121 ]
  %170 = getelementptr inbounds %struct.tree_decl_minimal, ptr %169, i64 0, i32 2
  br label %171

171:                                              ; preds = %166, %162
  %172 = phi ptr [ %156, %162 ], [ %167, %166 ]
  %173 = phi ptr [ %157, %162 ], [ %168, %166 ]
  %174 = phi ptr [ %158, %162 ], [ %169, %166 ]
  %175 = phi ptr [ %165, %162 ], [ %170, %166 ]
  %176 = load i32, ptr %175, align 4, !tbaa !16
  %177 = load i32, ptr %172, align 8, !tbaa !49
  %178 = getelementptr i8, ptr %172, i64 8
  %179 = load ptr, ptr %178, align 8, !tbaa !55
  %180 = icmp slt i32 %177, 2
  %181 = zext i1 %180 to i32
  %182 = tail call ptr @htab_find_slot_with_hash(ptr noundef %179, ptr noundef %174, i32 noundef %176, i32 noundef %181) #21
  %183 = icmp eq ptr %182, null
  br i1 %183, label %184, label %186

184:                                              ; preds = %171
  %185 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %173, ptr noundef %174, i32 noundef 1)
  br label %186

186:                                              ; preds = %171, %184
  %187 = phi ptr [ %182, %171 ], [ %185, %184 ]
  %188 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %0, ptr noundef nonnull %2, ptr noundef %187, ptr noundef %174, i64 noundef 0, i32 noundef 2, ptr noundef null)
  br label %218

189:                                              ; preds = %26
  %190 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %191 = load ptr, ptr %190, align 8, !tbaa !51
  %192 = icmp eq ptr %1, null
  br i1 %192, label %201, label %193

193:                                              ; preds = %189
  %194 = load i64, ptr %1, align 8
  %195 = and i64 %194, 65535
  %196 = icmp eq i64 %195, 1
  br i1 %196, label %197, label %201

197:                                              ; preds = %193
  %198 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %199 = load ptr, ptr %198, align 8, !tbaa !16
  %200 = getelementptr inbounds %struct.cselib_val_struct, ptr %199, i64 0, i32 1
  br label %203

201:                                              ; preds = %193, %189
  %202 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 2
  br label %203

203:                                              ; preds = %201, %197
  %204 = phi ptr [ %200, %197 ], [ %202, %201 ]
  %205 = load i32, ptr %204, align 4, !tbaa !16
  %206 = load i32, ptr %191, align 8, !tbaa !49
  %207 = getelementptr i8, ptr %191, i64 8
  %208 = load ptr, ptr %207, align 8, !tbaa !55
  %209 = icmp slt i32 %206, 2
  %210 = zext i1 %209 to i32
  %211 = tail call ptr @htab_find_slot_with_hash(ptr noundef %208, ptr noundef %1, i32 noundef %205, i32 noundef %210) #21
  %212 = icmp eq ptr %211, null
  br i1 %212, label %213, label %215

213:                                              ; preds = %203
  %214 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %190, ptr noundef %1, i32 noundef 1)
  br label %215

215:                                              ; preds = %203, %213
  %216 = phi ptr [ %211, %203 ], [ %214, %213 ]
  %217 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %0, ptr noundef nonnull %2, ptr noundef %216, ptr noundef %1, i64 noundef 0, i32 noundef 2, ptr noundef null)
  br label %218

218:                                              ; preds = %116, %118, %186, %215
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @val_store(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr nocapture noundef readonly %3, i8 noundef zeroext %4) unnamed_addr #9 {
  %6 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !16
  %8 = tail call zeroext i8 @cselib_preserved_value_p(ptr noundef %7) #21
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %5
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 1820, ptr noundef nonnull @.str.2) #21
  br label %11

11:                                               ; preds = %5, %10
  %12 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %13 = icmp eq ptr %12, null
  br i1 %13, label %41, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.rtx_def, ptr %3, i64 0, i32 1
  %16 = load i32, ptr %15, align 8, !tbaa !16
  %17 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %12, ptr noundef nonnull @.str.28, i32 noundef %16)
  %18 = load ptr, ptr @dump_file, align 8, !tbaa !5
  tail call void @print_inline_rtx(ptr noundef %18, ptr noundef nonnull %1, i32 noundef 0) #21
  %19 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %20 = tail call i64 @fwrite(ptr nonnull @.str.31, i64 11, i64 1, ptr %19)
  %21 = load ptr, ptr @dump_file, align 8, !tbaa !5
  tail call void @print_inline_rtx(ptr noundef %21, ptr noundef %2, i32 noundef 0) #21
  %22 = getelementptr inbounds %struct.cselib_val_struct, ptr %7, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !314
  %24 = icmp eq ptr %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %14, %25
  %26 = phi ptr [ %36, %25 ], [ %23, %14 ]
  %27 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %28 = getelementptr inbounds %struct.elt_loc_list, ptr %26, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !315
  %30 = getelementptr inbounds %struct.rtx_def, ptr %29, i64 0, i32 1
  %31 = load i32, ptr %30, align 8, !tbaa !16
  %32 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %27, ptr noundef nonnull @.str.32, i32 noundef %31)
  %33 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %34 = getelementptr inbounds %struct.elt_loc_list, ptr %26, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !44
  tail call void @print_inline_rtx(ptr noundef %33, ptr noundef %35, i32 noundef 0) #21
  %36 = load ptr, ptr %26, align 8, !tbaa !46
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %25, !llvm.loop !316

38:                                               ; preds = %25, %14
  %39 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %40 = tail call i32 @fputc(i32 10, ptr %39)
  br label %41

41:                                               ; preds = %38, %11
  %42 = load i32, ptr %2, align 8
  %43 = trunc i32 %42 to i16
  switch i16 %43, label %160 [
    i16 37, label %44
    i16 43, label %90
  ]

44:                                               ; preds = %41
  %45 = icmp eq i8 %4, 0
  br i1 %45, label %89, label %46

46:                                               ; preds = %44
  %47 = getelementptr i8, ptr %2, i64 8
  %48 = load i32, ptr %47, align 8, !tbaa !16
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 1, i64 %49
  %51 = load ptr, ptr %50, align 8, !tbaa !5
  %52 = icmp eq ptr %51, null
  br i1 %52, label %88, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  br label %55

55:                                               ; preds = %85, %53
  %56 = phi ptr [ %51, %53 ], [ %57, %85 ]
  %57 = load ptr, ptr %56, align 8, !tbaa !56
  %58 = getelementptr inbounds %struct.attrs_def, ptr %56, i64 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !71
  %60 = getelementptr inbounds %struct.attrs_def, ptr %56, i64 0, i32 2
  %61 = load ptr, ptr %60, align 8, !tbaa !72
  %62 = getelementptr inbounds %struct.attrs_def, ptr %56, i64 0, i32 3
  %63 = load i64, ptr %62, align 8, !tbaa !59
  %64 = load ptr, ptr %54, align 8, !tbaa !51
  %65 = icmp eq ptr %61, null
  br i1 %65, label %74, label %66

66:                                               ; preds = %55
  %67 = load i64, ptr %61, align 8
  %68 = and i64 %67, 65535
  %69 = icmp eq i64 %68, 1
  br i1 %69, label %70, label %74

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.rtx_def, ptr %61, i64 0, i32 1
  %72 = load ptr, ptr %71, align 8, !tbaa !16
  %73 = getelementptr inbounds %struct.cselib_val_struct, ptr %72, i64 0, i32 1
  br label %76

74:                                               ; preds = %66, %55
  %75 = getelementptr inbounds %struct.tree_decl_minimal, ptr %61, i64 0, i32 2
  br label %76

76:                                               ; preds = %74, %70
  %77 = phi ptr [ %73, %70 ], [ %75, %74 ]
  %78 = load i32, ptr %77, align 4, !tbaa !16
  %79 = getelementptr i8, ptr %64, i64 8
  %80 = load ptr, ptr %79, align 8, !tbaa !55
  %81 = tail call ptr @htab_find_slot_with_hash(ptr noundef %80, ptr noundef %61, i32 noundef %78, i32 noundef 0) #21
  %82 = icmp eq ptr %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %76
  %84 = tail call fastcc ptr @delete_slot_part(ptr noundef nonnull %0, ptr noundef %59, ptr noundef nonnull %81, i64 noundef %63)
  br label %85

85:                                               ; preds = %83, %76
  %86 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %86, ptr noundef nonnull %56) #21
  %87 = icmp eq ptr %57, null
  br i1 %87, label %88, label %55, !llvm.loop !73

88:                                               ; preds = %85, %46
  store ptr null, ptr %50, align 8, !tbaa !5
  br label %89

89:                                               ; preds = %88, %44
  tail call fastcc void @var_reg_decl_set(ptr noundef %0, ptr noundef nonnull %2, i32 noundef 2, ptr noundef %1, i64 noundef 0, ptr noundef null, i32 noundef 1)
  br label %188

90:                                               ; preds = %41
  %91 = icmp eq ptr %1, null
  br i1 %91, label %92, label %95

92:                                               ; preds = %90
  %93 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %94 = load ptr, ptr %93, align 8, !tbaa !51
  br label %137

95:                                               ; preds = %90
  %96 = load i64, ptr %1, align 8
  %97 = and i64 %96, 65535
  %98 = icmp eq i64 %97, 1
  br i1 %98, label %118, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %97
  %101 = load i32, ptr %100, align 4, !tbaa !16
  %102 = icmp eq i32 %101, 3
  br i1 %102, label %103, label %118

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %105 = load i64, ptr %104, align 8
  %106 = and i64 %105, 16384
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %118, label %108

108:                                              ; preds = %103
  %109 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %1) #21
  %110 = icmp eq ptr %109, null
  br i1 %110, label %118, label %111

111:                                              ; preds = %108
  %112 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %1) #21
  %113 = load i64, ptr %112, align 8
  %114 = and i64 %113, 65535
  %115 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %114
  %116 = load i32, ptr %115, align 4, !tbaa !16
  %117 = icmp eq i32 %116, 3
  br i1 %117, label %121, label %118

118:                                              ; preds = %95, %111, %108, %103, %99
  %119 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %120 = load ptr, ptr %119, align 8, !tbaa !51
  br label %126

121:                                              ; preds = %111
  %122 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %1) #21
  %123 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %124 = load ptr, ptr %123, align 8, !tbaa !51
  %125 = icmp eq ptr %122, null
  br i1 %125, label %137, label %126

126:                                              ; preds = %118, %121
  %127 = phi ptr [ %120, %118 ], [ %124, %121 ]
  %128 = phi ptr [ %119, %118 ], [ %123, %121 ]
  %129 = phi ptr [ %1, %118 ], [ %122, %121 ]
  %130 = load i64, ptr %129, align 8
  %131 = and i64 %130, 65535
  %132 = icmp eq i64 %131, 1
  br i1 %132, label %133, label %137

133:                                              ; preds = %126
  %134 = getelementptr inbounds %struct.rtx_def, ptr %129, i64 0, i32 1
  %135 = load ptr, ptr %134, align 8, !tbaa !16
  %136 = getelementptr inbounds %struct.cselib_val_struct, ptr %135, i64 0, i32 1
  br label %142

137:                                              ; preds = %92, %126, %121
  %138 = phi ptr [ %127, %126 ], [ %124, %121 ], [ %94, %92 ]
  %139 = phi ptr [ %128, %126 ], [ %123, %121 ], [ %93, %92 ]
  %140 = phi ptr [ %129, %126 ], [ null, %121 ], [ null, %92 ]
  %141 = getelementptr inbounds %struct.tree_decl_minimal, ptr %140, i64 0, i32 2
  br label %142

142:                                              ; preds = %137, %133
  %143 = phi ptr [ %127, %133 ], [ %138, %137 ]
  %144 = phi ptr [ %128, %133 ], [ %139, %137 ]
  %145 = phi ptr [ %129, %133 ], [ %140, %137 ]
  %146 = phi ptr [ %136, %133 ], [ %141, %137 ]
  %147 = load i32, ptr %146, align 4, !tbaa !16
  %148 = load i32, ptr %143, align 8, !tbaa !49
  %149 = getelementptr i8, ptr %143, i64 8
  %150 = load ptr, ptr %149, align 8, !tbaa !55
  %151 = icmp slt i32 %148, 2
  %152 = zext i1 %151 to i32
  %153 = tail call ptr @htab_find_slot_with_hash(ptr noundef %150, ptr noundef %145, i32 noundef %147, i32 noundef %152) #21
  %154 = icmp eq ptr %153, null
  br i1 %154, label %155, label %157

155:                                              ; preds = %142
  %156 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %144, ptr noundef %145, i32 noundef 1)
  br label %157

157:                                              ; preds = %142, %155
  %158 = phi ptr [ %153, %142 ], [ %156, %155 ]
  %159 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %0, ptr noundef nonnull %2, ptr noundef %158, ptr noundef %145, i64 noundef 0, i32 noundef 2, ptr noundef null)
  br label %188

160:                                              ; preds = %41
  %161 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %162 = load ptr, ptr %161, align 8, !tbaa !51
  %163 = icmp eq ptr %1, null
  br i1 %163, label %171, label %164

164:                                              ; preds = %160
  %165 = load i64, ptr %1, align 8
  %166 = and i64 %165, 65535
  %167 = icmp eq i64 %166, 1
  br i1 %167, label %168, label %171

168:                                              ; preds = %164
  %169 = load ptr, ptr %6, align 8, !tbaa !16
  %170 = getelementptr inbounds %struct.cselib_val_struct, ptr %169, i64 0, i32 1
  br label %173

171:                                              ; preds = %164, %160
  %172 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 2
  br label %173

173:                                              ; preds = %171, %168
  %174 = phi ptr [ %170, %168 ], [ %172, %171 ]
  %175 = load i32, ptr %174, align 4, !tbaa !16
  %176 = load i32, ptr %162, align 8, !tbaa !49
  %177 = getelementptr i8, ptr %162, i64 8
  %178 = load ptr, ptr %177, align 8, !tbaa !55
  %179 = icmp slt i32 %176, 2
  %180 = zext i1 %179 to i32
  %181 = tail call ptr @htab_find_slot_with_hash(ptr noundef %178, ptr noundef %1, i32 noundef %175, i32 noundef %180) #21
  %182 = icmp eq ptr %181, null
  br i1 %182, label %183, label %185

183:                                              ; preds = %173
  %184 = tail call fastcc ptr @shared_hash_find_slot_unshare(ptr noundef nonnull %161, ptr noundef %1, i32 noundef 1)
  br label %185

185:                                              ; preds = %173, %183
  %186 = phi ptr [ %181, %173 ], [ %184, %183 ]
  %187 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %0, ptr noundef nonnull %2, ptr noundef %186, ptr noundef %1, i64 noundef 0, i32 noundef 2, ptr noundef null)
  br label %188

188:                                              ; preds = %157, %185, %89
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @var_reg_delete(ptr noundef %0, ptr nocapture noundef readonly %1, i8 noundef zeroext %2) unnamed_addr #9 {
  %4 = getelementptr i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8, !tbaa !16
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 1, i64 %6
  %8 = icmp eq i8 %2, 0
  br i1 %8, label %71, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 2
  %11 = load ptr, ptr %10, align 8, !tbaa !16
  %12 = icmp eq ptr %11, null
  br i1 %12, label %68, label %13

13:                                               ; preds = %9
  %14 = load ptr, ptr %11, align 8, !tbaa !75
  %15 = getelementptr inbounds %struct.reg_attrs, ptr %11, i64 0, i32 1
  %16 = load i64, ptr %15, align 8, !tbaa !77
  %17 = icmp eq ptr %14, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = load i64, ptr %14, align 8
  %20 = and i64 %19, 65535
  %21 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %20
  %22 = load i32, ptr %21, align 4, !tbaa !16
  %23 = icmp eq i32 %22, 3
  br i1 %23, label %24, label %42

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.tree_decl_common, ptr %14, i64 0, i32 2
  %26 = load i64, ptr %25, align 8
  %27 = and i64 %26, 16384
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %24
  %30 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %14) #21
  %31 = icmp eq ptr %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %29
  %33 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %14) #21
  %34 = load i64, ptr %33, align 8
  %35 = and i64 %34, 65535
  %36 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %35
  %37 = load i32, ptr %36, align 4, !tbaa !16
  %38 = icmp eq i32 %37, 3
  br i1 %38, label %39, label %42

39:                                               ; preds = %32
  %40 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %14) #21
  %41 = icmp eq ptr %40, null
  br i1 %41, label %68, label %42

42:                                               ; preds = %18, %24, %29, %32, %39
  %43 = phi ptr [ %40, %39 ], [ %14, %32 ], [ %14, %29 ], [ %14, %24 ], [ %14, %18 ]
  %44 = load i64, ptr %43, align 8
  %45 = and i64 %44, 65535
  %46 = icmp eq i64 %45, 1
  br i1 %46, label %51, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %45
  %49 = load i32, ptr %48, align 4, !tbaa !16
  %50 = icmp eq i32 %49, 3
  br i1 %50, label %55, label %68

51:                                               ; preds = %42
  %52 = getelementptr inbounds %struct.rtx_def, ptr %43, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !16
  %54 = getelementptr inbounds %struct.cselib_val_struct, ptr %53, i64 0, i32 1
  br label %57

55:                                               ; preds = %47
  %56 = getelementptr inbounds %struct.tree_decl_minimal, ptr %43, i64 0, i32 2
  br label %57

57:                                               ; preds = %55, %51
  %58 = phi ptr [ %54, %51 ], [ %56, %55 ]
  %59 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %60 = load ptr, ptr %59, align 8, !tbaa !51
  %61 = load i32, ptr %58, align 4, !tbaa !16
  %62 = getelementptr i8, ptr %60, i64 8
  %63 = load ptr, ptr %62, align 8, !tbaa !55
  %64 = tail call ptr @htab_find_slot_with_hash(ptr noundef %63, ptr noundef nonnull %43, i32 noundef %61, i32 noundef 0) #21
  %65 = icmp eq ptr %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %57
  %67 = tail call fastcc ptr @clobber_slot_part(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull %64, i64 noundef %16, ptr noundef null)
  br label %68

68:                                               ; preds = %9, %13, %66, %57, %47, %39
  %69 = load ptr, ptr %7, align 8, !tbaa !5
  %70 = icmp eq ptr %69, null
  br i1 %70, label %164, label %76

71:                                               ; preds = %3
  %72 = load ptr, ptr %7, align 8, !tbaa !5
  %73 = icmp eq ptr %72, null
  br i1 %73, label %164, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  br label %78

76:                                               ; preds = %68
  %77 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  br i1 %8, label %78, label %131

78:                                               ; preds = %74, %76
  %79 = phi ptr [ %75, %74 ], [ %77, %76 ]
  %80 = phi ptr [ %72, %74 ], [ %69, %76 ]
  br label %81

81:                                               ; preds = %78, %128
  %82 = phi ptr [ %129, %128 ], [ %7, %78 ]
  %83 = phi ptr [ %84, %128 ], [ %80, %78 ]
  %84 = load ptr, ptr %83, align 8, !tbaa !56
  %85 = getelementptr inbounds %struct.attrs_def, ptr %83, i64 0, i32 2
  %86 = load ptr, ptr %85, align 8, !tbaa !72
  %87 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %99, label %89

89:                                               ; preds = %81
  %90 = icmp eq ptr %86, null
  br i1 %90, label %128, label %91

91:                                               ; preds = %89
  %92 = load i64, ptr %86, align 8
  %93 = trunc i64 %92 to i16
  switch i16 %93, label %94 [
    i16 1, label %128
    i16 37, label %128
  ]

94:                                               ; preds = %91
  %95 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %86) #21
  %96 = icmp eq ptr %95, null
  br i1 %96, label %97, label %128

97:                                               ; preds = %94
  %98 = load ptr, ptr %85, align 8, !tbaa !72
  br label %99

99:                                               ; preds = %97, %81
  %100 = phi ptr [ %98, %97 ], [ %86, %81 ]
  %101 = getelementptr inbounds %struct.attrs_def, ptr %83, i64 0, i32 1
  %102 = load ptr, ptr %101, align 8, !tbaa !71
  %103 = getelementptr inbounds %struct.attrs_def, ptr %83, i64 0, i32 3
  %104 = load i64, ptr %103, align 8, !tbaa !59
  %105 = load ptr, ptr %79, align 8, !tbaa !51
  %106 = icmp eq ptr %100, null
  br i1 %106, label %115, label %107

107:                                              ; preds = %99
  %108 = load i64, ptr %100, align 8
  %109 = and i64 %108, 65535
  %110 = icmp eq i64 %109, 1
  br i1 %110, label %111, label %115

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.rtx_def, ptr %100, i64 0, i32 1
  %113 = load ptr, ptr %112, align 8, !tbaa !16
  %114 = getelementptr inbounds %struct.cselib_val_struct, ptr %113, i64 0, i32 1
  br label %117

115:                                              ; preds = %107, %99
  %116 = getelementptr inbounds %struct.tree_decl_minimal, ptr %100, i64 0, i32 2
  br label %117

117:                                              ; preds = %115, %111
  %118 = phi ptr [ %114, %111 ], [ %116, %115 ]
  %119 = load i32, ptr %118, align 4, !tbaa !16
  %120 = getelementptr i8, ptr %105, i64 8
  %121 = load ptr, ptr %120, align 8, !tbaa !55
  %122 = tail call ptr @htab_find_slot_with_hash(ptr noundef %121, ptr noundef %100, i32 noundef %119, i32 noundef 0) #21
  %123 = icmp eq ptr %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %117
  %125 = tail call fastcc ptr @delete_slot_part(ptr noundef nonnull %0, ptr noundef %102, ptr noundef nonnull %122, i64 noundef %104)
  br label %126

126:                                              ; preds = %124, %117
  %127 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %127, ptr noundef nonnull %83) #21
  store ptr %84, ptr %82, align 8, !tbaa !5
  br label %128

128:                                              ; preds = %126, %94, %91, %91, %89
  %129 = phi ptr [ %82, %126 ], [ %83, %94 ], [ %83, %91 ], [ %83, %91 ], [ %83, %89 ]
  %130 = icmp eq ptr %84, null
  br i1 %130, label %164, label %81, !llvm.loop !317

131:                                              ; preds = %76, %161
  %132 = phi ptr [ %133, %161 ], [ %69, %76 ]
  %133 = load ptr, ptr %132, align 8, !tbaa !56
  %134 = getelementptr inbounds %struct.attrs_def, ptr %132, i64 0, i32 1
  %135 = load ptr, ptr %134, align 8, !tbaa !71
  %136 = getelementptr inbounds %struct.attrs_def, ptr %132, i64 0, i32 2
  %137 = load ptr, ptr %136, align 8, !tbaa !72
  %138 = getelementptr inbounds %struct.attrs_def, ptr %132, i64 0, i32 3
  %139 = load i64, ptr %138, align 8, !tbaa !59
  %140 = load ptr, ptr %77, align 8, !tbaa !51
  %141 = icmp eq ptr %137, null
  br i1 %141, label %150, label %142

142:                                              ; preds = %131
  %143 = load i64, ptr %137, align 8
  %144 = and i64 %143, 65535
  %145 = icmp eq i64 %144, 1
  br i1 %145, label %146, label %150

146:                                              ; preds = %142
  %147 = getelementptr inbounds %struct.rtx_def, ptr %137, i64 0, i32 1
  %148 = load ptr, ptr %147, align 8, !tbaa !16
  %149 = getelementptr inbounds %struct.cselib_val_struct, ptr %148, i64 0, i32 1
  br label %152

150:                                              ; preds = %142, %131
  %151 = getelementptr inbounds %struct.tree_decl_minimal, ptr %137, i64 0, i32 2
  br label %152

152:                                              ; preds = %150, %146
  %153 = phi ptr [ %149, %146 ], [ %151, %150 ]
  %154 = load i32, ptr %153, align 4, !tbaa !16
  %155 = getelementptr i8, ptr %140, i64 8
  %156 = load ptr, ptr %155, align 8, !tbaa !55
  %157 = tail call ptr @htab_find_slot_with_hash(ptr noundef %156, ptr noundef %137, i32 noundef %154, i32 noundef 0) #21
  %158 = icmp eq ptr %157, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %152
  %160 = tail call fastcc ptr @delete_slot_part(ptr noundef nonnull %0, ptr noundef %135, ptr noundef nonnull %157, i64 noundef %139)
  br label %161

161:                                              ; preds = %152, %159
  %162 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %162, ptr noundef nonnull %132) #21
  store ptr %133, ptr %7, align 8, !tbaa !5
  %163 = icmp eq ptr %133, null
  br i1 %163, label %164, label %131, !llvm.loop !317

164:                                              ; preds = %161, %128, %71, %68
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @var_mem_delete(ptr noundef %0, ptr noundef %1, i8 noundef zeroext %2) unnamed_addr #9 {
  %4 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 1
  %5 = load ptr, ptr %4, align 8, !tbaa !16
  %6 = icmp eq ptr %5, null
  br i1 %6, label %41, label %7

7:                                                ; preds = %3
  %8 = load ptr, ptr %5, align 8, !tbaa !135
  %9 = getelementptr inbounds %struct.mem_attrs, ptr %5, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !137
  %11 = icmp eq ptr %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.rtx_def, ptr %10, i64 0, i32 1
  %14 = load i64, ptr %13, align 8, !tbaa !16
  br label %15

15:                                               ; preds = %7, %12
  %16 = phi i64 [ %14, %12 ], [ 0, %7 ]
  %17 = icmp eq ptr %8, null
  br i1 %17, label %41, label %18

18:                                               ; preds = %15
  %19 = load i64, ptr %8, align 8
  %20 = and i64 %19, 65535
  %21 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %20
  %22 = load i32, ptr %21, align 4, !tbaa !16
  %23 = icmp eq i32 %22, 3
  br i1 %23, label %24, label %41

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.tree_decl_common, ptr %8, i64 0, i32 2
  %26 = load i64, ptr %25, align 8
  %27 = and i64 %26, 16384
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %24
  %30 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %8) #21
  %31 = icmp eq ptr %30, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %29
  %33 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %8) #21
  %34 = load i64, ptr %33, align 8
  %35 = and i64 %34, 65535
  %36 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %35
  %37 = load i32, ptr %36, align 4, !tbaa !16
  %38 = icmp eq i32 %37, 3
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %8) #21
  br label %41

41:                                               ; preds = %3, %15, %18, %24, %29, %32, %39
  %42 = phi i64 [ %16, %39 ], [ %16, %32 ], [ %16, %29 ], [ %16, %24 ], [ %16, %18 ], [ %16, %15 ], [ 0, %3 ]
  %43 = phi ptr [ %40, %39 ], [ %8, %32 ], [ %8, %29 ], [ %8, %24 ], [ %8, %18 ], [ null, %15 ], [ null, %3 ]
  %44 = icmp eq i8 %2, 0
  br i1 %44, label %78, label %45

45:                                               ; preds = %41
  %46 = icmp eq ptr %43, null
  br i1 %46, label %47, label %50

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !51
  br label %91

50:                                               ; preds = %45
  %51 = load i64, ptr %43, align 8
  %52 = and i64 %51, 65535
  %53 = icmp eq i64 %52, 1
  br i1 %53, label %58, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %52
  %56 = load i32, ptr %55, align 4, !tbaa !16
  %57 = icmp eq i32 %56, 3
  br i1 %57, label %62, label %75

58:                                               ; preds = %50
  %59 = getelementptr inbounds %struct.rtx_def, ptr %43, i64 0, i32 1
  %60 = load ptr, ptr %59, align 8, !tbaa !16
  %61 = getelementptr inbounds %struct.cselib_val_struct, ptr %60, i64 0, i32 1
  br label %64

62:                                               ; preds = %54
  %63 = getelementptr inbounds %struct.tree_decl_minimal, ptr %43, i64 0, i32 2
  br label %64

64:                                               ; preds = %62, %58
  %65 = phi ptr [ %61, %58 ], [ %63, %62 ]
  %66 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !51
  %68 = load i32, ptr %65, align 4, !tbaa !16
  %69 = getelementptr i8, ptr %67, i64 8
  %70 = load ptr, ptr %69, align 8, !tbaa !55
  %71 = tail call ptr @htab_find_slot_with_hash(ptr noundef %70, ptr noundef nonnull %43, i32 noundef %68, i32 noundef 0) #21
  %72 = icmp eq ptr %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %64
  %74 = tail call fastcc ptr @clobber_slot_part(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull %71, i64 noundef %42, ptr noundef null)
  br label %75

75:                                               ; preds = %73, %64, %54
  %76 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %77 = load ptr, ptr %76, align 8, !tbaa !51
  br label %82

78:                                               ; preds = %41
  %79 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %80 = load ptr, ptr %79, align 8, !tbaa !51
  %81 = icmp eq ptr %43, null
  br i1 %81, label %91, label %82

82:                                               ; preds = %75, %78
  %83 = phi ptr [ %77, %75 ], [ %80, %78 ]
  %84 = load i64, ptr %43, align 8
  %85 = and i64 %84, 65535
  %86 = icmp eq i64 %85, 1
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.rtx_def, ptr %43, i64 0, i32 1
  %89 = load ptr, ptr %88, align 8, !tbaa !16
  %90 = getelementptr inbounds %struct.cselib_val_struct, ptr %89, i64 0, i32 1
  br label %94

91:                                               ; preds = %47, %82, %78
  %92 = phi ptr [ %83, %82 ], [ %80, %78 ], [ %49, %47 ]
  %93 = getelementptr inbounds %struct.tree_decl_minimal, ptr %43, i64 0, i32 2
  br label %94

94:                                               ; preds = %91, %87
  %95 = phi ptr [ %83, %87 ], [ %92, %91 ]
  %96 = phi ptr [ %90, %87 ], [ %93, %91 ]
  %97 = load i32, ptr %96, align 4, !tbaa !16
  %98 = getelementptr i8, ptr %95, i64 8
  %99 = load ptr, ptr %98, align 8, !tbaa !55
  %100 = tail call ptr @htab_find_slot_with_hash(ptr noundef %99, ptr noundef %43, i32 noundef %97, i32 noundef 0) #21
  %101 = icmp eq ptr %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %94
  %103 = tail call fastcc ptr @delete_slot_part(ptr noundef nonnull %0, ptr noundef nonnull %1, ptr noundef nonnull %100, i64 noundef %42)
  br label %104

104:                                              ; preds = %94, %102
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @find_src_status(ptr nocapture noundef readonly %0, ptr noundef %1) unnamed_addr #9 {
  %3 = load i32, ptr @flag_var_tracking_uninit, align 4, !tbaa !20
  %4 = icmp eq i32 %3, 0
  %5 = select i1 %4, i32 2, i32 1
  %6 = icmp eq ptr %1, null
  br i1 %6, label %120, label %7

7:                                                ; preds = %2
  %8 = load i32, ptr %1, align 8
  %9 = trunc i32 %8 to i16
  switch i16 %9, label %120 [
    i16 37, label %10
    i16 43, label %38
  ]

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 2
  %12 = load ptr, ptr %11, align 8, !tbaa !16
  %13 = icmp eq ptr %12, null
  br i1 %13, label %120, label %14

14:                                               ; preds = %10
  %15 = load ptr, ptr %12, align 8, !tbaa !75
  %16 = icmp eq ptr %15, null
  br i1 %16, label %120, label %17

17:                                               ; preds = %14
  %18 = load i64, ptr %15, align 8
  %19 = and i64 %18, 65535
  %20 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !16
  %22 = icmp eq i32 %21, 3
  br i1 %22, label %23, label %70

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.tree_decl_common, ptr %15, i64 0, i32 2
  %25 = load i64, ptr %24, align 8
  %26 = and i64 %25, 16384
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %70, label %28

28:                                               ; preds = %23
  %29 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %15) #21
  %30 = icmp eq ptr %29, null
  br i1 %30, label %70, label %31

31:                                               ; preds = %28
  %32 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %15) #21
  %33 = load i64, ptr %32, align 8
  %34 = and i64 %33, 65535
  %35 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !16
  %37 = icmp eq i32 %36, 3
  br i1 %37, label %66, label %70

38:                                               ; preds = %7
  %39 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 1
  %40 = load ptr, ptr %39, align 8, !tbaa !16
  %41 = icmp eq ptr %40, null
  br i1 %41, label %120, label %42

42:                                               ; preds = %38
  %43 = load ptr, ptr %40, align 8, !tbaa !135
  %44 = icmp eq ptr %43, null
  br i1 %44, label %120, label %45

45:                                               ; preds = %42
  %46 = load i64, ptr %43, align 8
  %47 = and i64 %46, 65535
  %48 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %47
  %49 = load i32, ptr %48, align 4, !tbaa !16
  %50 = icmp eq i32 %49, 3
  br i1 %50, label %51, label %70

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.tree_decl_common, ptr %43, i64 0, i32 2
  %53 = load i64, ptr %52, align 8
  %54 = and i64 %53, 16384
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %70, label %56

56:                                               ; preds = %51
  %57 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %43) #21
  %58 = icmp eq ptr %57, null
  br i1 %58, label %70, label %59

59:                                               ; preds = %56
  %60 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %43) #21
  %61 = load i64, ptr %60, align 8
  %62 = and i64 %61, 65535
  %63 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !16
  %65 = icmp eq i32 %64, 3
  br i1 %65, label %66, label %70

66:                                               ; preds = %59, %31
  %67 = phi ptr [ %15, %31 ], [ %43, %59 ]
  %68 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %67) #21
  %69 = icmp eq ptr %68, null
  br i1 %69, label %120, label %70

70:                                               ; preds = %45, %51, %56, %59, %17, %23, %28, %31, %66
  %71 = phi ptr [ %68, %66 ], [ %43, %45 ], [ %43, %51 ], [ %43, %56 ], [ %43, %59 ], [ %15, %17 ], [ %15, %23 ], [ %15, %28 ], [ %15, %31 ]
  %72 = load i32, ptr @flag_var_tracking_uninit, align 4, !tbaa !20
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %120, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %76 = load ptr, ptr %75, align 8, !tbaa !51
  %77 = load i64, ptr %71, align 8
  %78 = and i64 %77, 65535
  %79 = icmp eq i64 %78, 1
  br i1 %79, label %80, label %84

80:                                               ; preds = %74
  %81 = getelementptr inbounds %struct.rtx_def, ptr %71, i64 0, i32 1
  %82 = load ptr, ptr %81, align 8, !tbaa !16
  %83 = getelementptr inbounds %struct.cselib_val_struct, ptr %82, i64 0, i32 1
  br label %86

84:                                               ; preds = %74
  %85 = getelementptr inbounds %struct.tree_decl_minimal, ptr %71, i64 0, i32 2
  br label %86

86:                                               ; preds = %84, %80
  %87 = phi ptr [ %83, %80 ], [ %85, %84 ]
  %88 = load i32, ptr %87, align 4, !tbaa !16
  %89 = getelementptr i8, ptr %76, i64 8
  %90 = load ptr, ptr %89, align 8, !tbaa !55
  %91 = tail call ptr @htab_find_with_hash(ptr noundef %90, ptr noundef nonnull %71, i32 noundef %88) #21
  %92 = icmp eq ptr %91, null
  br i1 %92, label %120, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds %struct.variable_def, ptr %91, i64 0, i32 2
  %95 = load i8, ptr %94, align 4, !tbaa !184
  %96 = icmp sgt i8 %95, 0
  br i1 %96, label %97, label %120

97:                                               ; preds = %93, %112
  %98 = phi i64 [ %114, %112 ], [ 0, %93 ]
  %99 = getelementptr inbounds %struct.variable_def, ptr %91, i64 0, i32 5, i64 %98
  br label %100

100:                                              ; preds = %104, %97
  %101 = phi ptr [ %99, %97 ], [ %102, %104 ]
  %102 = load ptr, ptr %101, align 8, !tbaa !5
  %103 = icmp eq ptr %102, null
  br i1 %103, label %112, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %struct.location_chain_def, ptr %102, i64 0, i32 1
  %106 = load ptr, ptr %105, align 8, !tbaa !214
  %107 = tail call i32 @rtx_equal_p(ptr noundef %106, ptr noundef nonnull %1) #21
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %100, label %109, !llvm.loop !318

109:                                              ; preds = %104
  %110 = getelementptr inbounds %struct.location_chain_def, ptr %102, i64 0, i32 3
  %111 = load i32, ptr %110, align 8, !tbaa !224
  br label %112

112:                                              ; preds = %100, %109
  %113 = phi i32 [ %111, %109 ], [ 0, %100 ]
  %114 = add nuw nsw i64 %98, 1
  %115 = load i8, ptr %94, align 4, !tbaa !184
  %116 = sext i8 %115 to i64
  %117 = icmp slt i64 %114, %116
  %118 = icmp eq i32 %113, 0
  %119 = select i1 %117, i1 %118, i1 false
  br i1 %119, label %97, label %120, !llvm.loop !319

120:                                              ; preds = %112, %7, %38, %10, %42, %14, %2, %93, %86, %70, %66
  %121 = phi i32 [ %5, %66 ], [ 2, %70 ], [ 0, %86 ], [ 0, %93 ], [ %5, %2 ], [ %5, %14 ], [ %5, %42 ], [ %5, %10 ], [ %5, %38 ], [ %5, %7 ], [ %113, %112 ]
  ret i32 %121
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @find_src_set_src(ptr nocapture noundef readonly %0, ptr noundef %1) unnamed_addr #9 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %124, label %4

4:                                                ; preds = %2
  %5 = load i32, ptr %1, align 8
  %6 = trunc i32 %5 to i16
  switch i16 %6, label %124 [
    i16 37, label %7
    i16 43, label %35
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 2
  %9 = load ptr, ptr %8, align 8, !tbaa !16
  %10 = icmp eq ptr %9, null
  br i1 %10, label %124, label %11

11:                                               ; preds = %7
  %12 = load ptr, ptr %9, align 8, !tbaa !75
  %13 = icmp eq ptr %12, null
  br i1 %13, label %124, label %14

14:                                               ; preds = %11
  %15 = load i64, ptr %12, align 8
  %16 = and i64 %15, 65535
  %17 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !16
  %19 = icmp eq i32 %18, 3
  br i1 %19, label %20, label %67

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.tree_decl_common, ptr %12, i64 0, i32 2
  %22 = load i64, ptr %21, align 8
  %23 = and i64 %22, 16384
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %67, label %25

25:                                               ; preds = %20
  %26 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %12) #21
  %27 = icmp eq ptr %26, null
  br i1 %27, label %67, label %28

28:                                               ; preds = %25
  %29 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %12) #21
  %30 = load i64, ptr %29, align 8
  %31 = and i64 %30, 65535
  %32 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %31
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = icmp eq i32 %33, 3
  br i1 %34, label %63, label %67

35:                                               ; preds = %4
  %36 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 1
  %37 = load ptr, ptr %36, align 8, !tbaa !16
  %38 = icmp eq ptr %37, null
  br i1 %38, label %124, label %39

39:                                               ; preds = %35
  %40 = load ptr, ptr %37, align 8, !tbaa !135
  %41 = icmp eq ptr %40, null
  br i1 %41, label %124, label %42

42:                                               ; preds = %39
  %43 = load i64, ptr %40, align 8
  %44 = and i64 %43, 65535
  %45 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %44
  %46 = load i32, ptr %45, align 4, !tbaa !16
  %47 = icmp eq i32 %46, 3
  br i1 %47, label %48, label %67

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.tree_decl_common, ptr %40, i64 0, i32 2
  %50 = load i64, ptr %49, align 8
  %51 = and i64 %50, 16384
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %67, label %53

53:                                               ; preds = %48
  %54 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %40) #21
  %55 = icmp eq ptr %54, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %53
  %57 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %40) #21
  %58 = load i64, ptr %57, align 8
  %59 = and i64 %58, 65535
  %60 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !16
  %62 = icmp eq i32 %61, 3
  br i1 %62, label %63, label %67

63:                                               ; preds = %56, %28
  %64 = phi ptr [ %12, %28 ], [ %40, %56 ]
  %65 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %64) #21
  %66 = icmp eq ptr %65, null
  br i1 %66, label %124, label %67

67:                                               ; preds = %42, %48, %53, %56, %14, %20, %25, %28, %63
  %68 = phi ptr [ %65, %63 ], [ %40, %42 ], [ %40, %48 ], [ %40, %53 ], [ %40, %56 ], [ %12, %14 ], [ %12, %20 ], [ %12, %25 ], [ %12, %28 ]
  %69 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %70 = load ptr, ptr %69, align 8, !tbaa !51
  %71 = load i64, ptr %68, align 8
  %72 = and i64 %71, 65535
  %73 = icmp eq i64 %72, 1
  br i1 %73, label %74, label %78

74:                                               ; preds = %67
  %75 = getelementptr inbounds %struct.rtx_def, ptr %68, i64 0, i32 1
  %76 = load ptr, ptr %75, align 8, !tbaa !16
  %77 = getelementptr inbounds %struct.cselib_val_struct, ptr %76, i64 0, i32 1
  br label %80

78:                                               ; preds = %67
  %79 = getelementptr inbounds %struct.tree_decl_minimal, ptr %68, i64 0, i32 2
  br label %80

80:                                               ; preds = %74, %78
  %81 = phi ptr [ %77, %74 ], [ %79, %78 ]
  %82 = load i32, ptr %81, align 4, !tbaa !16
  %83 = getelementptr i8, ptr %70, i64 8
  %84 = load ptr, ptr %83, align 8, !tbaa !55
  %85 = tail call ptr @htab_find_with_hash(ptr noundef %84, ptr noundef nonnull %68, i32 noundef %82) #21
  %86 = icmp eq ptr %85, null
  br i1 %86, label %124, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %struct.variable_def, ptr %85, i64 0, i32 2
  %89 = load i8, ptr %88, align 4, !tbaa !184
  %90 = icmp sgt i8 %89, 0
  br i1 %90, label %91, label %124

91:                                               ; preds = %87, %115
  %92 = phi i8 [ %116, %115 ], [ %89, %87 ]
  %93 = phi i64 [ %119, %115 ], [ 0, %87 ]
  %94 = phi ptr [ %117, %115 ], [ null, %87 ]
  %95 = getelementptr inbounds %struct.variable_def, ptr %85, i64 0, i32 5, i64 %93
  %96 = load ptr, ptr %95, align 8, !tbaa !5
  %97 = icmp eq ptr %96, null
  br i1 %97, label %115, label %98

98:                                               ; preds = %91, %107
  %99 = phi ptr [ %108, %107 ], [ %96, %91 ]
  %100 = getelementptr inbounds %struct.location_chain_def, ptr %99, i64 0, i32 1
  %101 = load ptr, ptr %100, align 8, !tbaa !214
  %102 = tail call i32 @rtx_equal_p(ptr noundef %101, ptr noundef nonnull %1) #21
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %struct.location_chain_def, ptr %99, i64 0, i32 2
  %106 = load ptr, ptr %105, align 8, !tbaa !225
  br label %111

107:                                              ; preds = %98
  %108 = load ptr, ptr %99, align 8, !tbaa !5
  %109 = icmp ne ptr %108, null
  %110 = and i1 %103, %109
  br i1 %110, label %98, label %111, !llvm.loop !320

111:                                              ; preds = %107, %104
  %112 = phi i8 [ 1, %104 ], [ 0, %107 ]
  %113 = phi ptr [ %106, %104 ], [ %94, %107 ]
  %114 = load i8, ptr %88, align 4, !tbaa !184
  br label %115

115:                                              ; preds = %111, %91
  %116 = phi i8 [ %92, %91 ], [ %114, %111 ]
  %117 = phi ptr [ %94, %91 ], [ %113, %111 ]
  %118 = phi i8 [ 0, %91 ], [ %112, %111 ]
  %119 = add nuw nsw i64 %93, 1
  %120 = sext i8 %116 to i64
  %121 = icmp slt i64 %119, %120
  %122 = icmp eq i8 %118, 0
  %123 = and i1 %122, %121
  br i1 %123, label %91, label %124, !llvm.loop !321

124:                                              ; preds = %115, %87, %4, %35, %7, %39, %11, %2, %80, %63
  %125 = phi ptr [ null, %63 ], [ null, %80 ], [ null, %2 ], [ null, %11 ], [ null, %39 ], [ null, %7 ], [ null, %35 ], [ null, %4 ], [ null, %87 ], [ %117, %115 ]
  ret ptr %125
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @var_reg_delete_and_set(ptr noundef %0, ptr noundef %1, i8 noundef zeroext %2, i32 noundef %3, ptr noundef %4) unnamed_addr #9 {
  %6 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 2
  %7 = load ptr, ptr %6, align 8, !tbaa !16
  %8 = icmp eq ptr %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %5
  %10 = load ptr, ptr %7, align 8, !tbaa !75
  %11 = getelementptr inbounds %struct.reg_attrs, ptr %7, i64 0, i32 1
  %12 = load i64, ptr %11, align 8, !tbaa !77
  %13 = icmp eq ptr %10, null
  br i1 %13, label %37, label %14

14:                                               ; preds = %9
  %15 = load i64, ptr %10, align 8
  %16 = and i64 %15, 65535
  %17 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !16
  %19 = icmp eq i32 %18, 3
  br i1 %19, label %20, label %37

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.tree_decl_common, ptr %10, i64 0, i32 2
  %22 = load i64, ptr %21, align 8
  %23 = and i64 %22, 16384
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %20
  %26 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %10) #21
  %27 = icmp eq ptr %26, null
  br i1 %27, label %37, label %28

28:                                               ; preds = %25
  %29 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %10) #21
  %30 = load i64, ptr %29, align 8
  %31 = and i64 %30, 65535
  %32 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %31
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = icmp eq i32 %33, 3
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %10) #21
  br label %37

37:                                               ; preds = %5, %9, %14, %20, %25, %28, %35
  %38 = phi i64 [ %12, %35 ], [ %12, %28 ], [ %12, %25 ], [ %12, %20 ], [ %12, %14 ], [ %12, %9 ], [ 0, %5 ]
  %39 = phi ptr [ %36, %35 ], [ %10, %28 ], [ %10, %25 ], [ %10, %20 ], [ %10, %14 ], [ null, %9 ], [ null, %5 ]
  %40 = icmp eq i32 %3, 0
  br i1 %40, label %41, label %92

41:                                               ; preds = %37
  %42 = load i32, ptr @flag_var_tracking_uninit, align 4, !tbaa !20
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %92, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %46 = load ptr, ptr %45, align 8, !tbaa !51
  %47 = icmp eq ptr %39, null
  br i1 %47, label %56, label %48

48:                                               ; preds = %44
  %49 = load i64, ptr %39, align 8
  %50 = and i64 %49, 65535
  %51 = icmp eq i64 %50, 1
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.rtx_def, ptr %39, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !16
  %55 = getelementptr inbounds %struct.cselib_val_struct, ptr %54, i64 0, i32 1
  br label %58

56:                                               ; preds = %48, %44
  %57 = getelementptr inbounds %struct.tree_decl_minimal, ptr %39, i64 0, i32 2
  br label %58

58:                                               ; preds = %56, %52
  %59 = phi ptr [ %55, %52 ], [ %57, %56 ]
  %60 = load i32, ptr %59, align 4, !tbaa !16
  %61 = getelementptr i8, ptr %46, i64 8
  %62 = load ptr, ptr %61, align 8, !tbaa !55
  %63 = tail call ptr @htab_find_with_hash(ptr noundef %62, ptr noundef %39, i32 noundef %60) #21
  %64 = icmp eq ptr %63, null
  br i1 %64, label %92, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %struct.variable_def, ptr %63, i64 0, i32 2
  %67 = load i8, ptr %66, align 4, !tbaa !184
  %68 = icmp sgt i8 %67, 0
  br i1 %68, label %69, label %92

69:                                               ; preds = %65, %84
  %70 = phi i64 [ %86, %84 ], [ 0, %65 ]
  %71 = getelementptr inbounds %struct.variable_def, ptr %63, i64 0, i32 5, i64 %70
  br label %72

72:                                               ; preds = %76, %69
  %73 = phi ptr [ %71, %69 ], [ %74, %76 ]
  %74 = load ptr, ptr %73, align 8, !tbaa !5
  %75 = icmp eq ptr %74, null
  br i1 %75, label %84, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.location_chain_def, ptr %74, i64 0, i32 1
  %78 = load ptr, ptr %77, align 8, !tbaa !214
  %79 = tail call i32 @rtx_equal_p(ptr noundef %78, ptr noundef %1) #21
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %72, label %81, !llvm.loop !318

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct.location_chain_def, ptr %74, i64 0, i32 3
  %83 = load i32, ptr %82, align 8, !tbaa !224
  br label %84

84:                                               ; preds = %72, %81
  %85 = phi i32 [ %83, %81 ], [ 0, %72 ]
  %86 = add nuw nsw i64 %70, 1
  %87 = load i8, ptr %66, align 4, !tbaa !184
  %88 = sext i8 %87 to i64
  %89 = icmp slt i64 %86, %88
  %90 = icmp eq i32 %85, 0
  %91 = select i1 %89, i1 %90, i1 false
  br i1 %91, label %69, label %92, !llvm.loop !319

92:                                               ; preds = %84, %65, %58, %41, %37
  %93 = phi i32 [ %3, %37 ], [ 2, %41 ], [ 0, %58 ], [ 0, %65 ], [ %85, %84 ]
  %94 = getelementptr i8, ptr %1, i64 8
  %95 = load i32, ptr %94, align 8, !tbaa !16
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 1, i64 %96
  %98 = load ptr, ptr %97, align 8, !tbaa !5
  %99 = icmp eq ptr %98, null
  br i1 %99, label %143, label %100

100:                                              ; preds = %92
  %101 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  br label %102

102:                                              ; preds = %100, %140
  %103 = phi ptr [ %97, %100 ], [ %141, %140 ]
  %104 = phi ptr [ %98, %100 ], [ %105, %140 ]
  %105 = load ptr, ptr %104, align 8, !tbaa !56
  %106 = getelementptr inbounds %struct.attrs_def, ptr %104, i64 0, i32 2
  %107 = load ptr, ptr %106, align 8, !tbaa !72
  %108 = icmp eq ptr %107, %39
  %109 = getelementptr inbounds %struct.attrs_def, ptr %104, i64 0, i32 3
  %110 = load i64, ptr %109, align 8, !tbaa !59
  %111 = icmp eq i64 %110, %38
  %112 = select i1 %108, i1 %111, i1 false
  %113 = getelementptr inbounds %struct.attrs_def, ptr %104, i64 0, i32 1
  br i1 %112, label %139, label %114

114:                                              ; preds = %102
  %115 = load ptr, ptr %113, align 8, !tbaa !71
  %116 = load ptr, ptr %101, align 8, !tbaa !51
  %117 = icmp eq ptr %107, null
  br i1 %117, label %126, label %118

118:                                              ; preds = %114
  %119 = load i64, ptr %107, align 8
  %120 = and i64 %119, 65535
  %121 = icmp eq i64 %120, 1
  br i1 %121, label %122, label %126

122:                                              ; preds = %118
  %123 = getelementptr inbounds %struct.rtx_def, ptr %107, i64 0, i32 1
  %124 = load ptr, ptr %123, align 8, !tbaa !16
  %125 = getelementptr inbounds %struct.cselib_val_struct, ptr %124, i64 0, i32 1
  br label %128

126:                                              ; preds = %118, %114
  %127 = getelementptr inbounds %struct.tree_decl_minimal, ptr %107, i64 0, i32 2
  br label %128

128:                                              ; preds = %126, %122
  %129 = phi ptr [ %125, %122 ], [ %127, %126 ]
  %130 = load i32, ptr %129, align 4, !tbaa !16
  %131 = getelementptr i8, ptr %116, i64 8
  %132 = load ptr, ptr %131, align 8, !tbaa !55
  %133 = tail call ptr @htab_find_slot_with_hash(ptr noundef %132, ptr noundef %107, i32 noundef %130, i32 noundef 0) #21
  %134 = icmp eq ptr %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %128
  %136 = tail call fastcc ptr @delete_slot_part(ptr noundef nonnull %0, ptr noundef %115, ptr noundef nonnull %133, i64 noundef %110)
  br label %137

137:                                              ; preds = %128, %135
  %138 = load ptr, ptr @attrs_pool, align 8, !tbaa !5
  tail call void @pool_free(ptr noundef %138, ptr noundef nonnull %104) #21
  store ptr %105, ptr %103, align 8, !tbaa !5
  br label %140

139:                                              ; preds = %102
  store ptr %1, ptr %113, align 8, !tbaa !71
  br label %140

140:                                              ; preds = %137, %139
  %141 = phi ptr [ %103, %137 ], [ %104, %139 ]
  %142 = icmp eq ptr %105, null
  br i1 %142, label %143, label %102, !llvm.loop !322

143:                                              ; preds = %140, %92
  %144 = icmp eq i8 %2, 0
  %145 = icmp eq ptr %39, null
  %146 = select i1 %144, i1 true, i1 %145
  br i1 %146, label %172, label %147

147:                                              ; preds = %143
  %148 = load i64, ptr %39, align 8
  %149 = and i64 %148, 65535
  %150 = icmp eq i64 %149, 1
  br i1 %150, label %155, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %149
  %153 = load i32, ptr %152, align 4, !tbaa !16
  %154 = icmp eq i32 %153, 3
  br i1 %154, label %159, label %172

155:                                              ; preds = %147
  %156 = getelementptr inbounds %struct.rtx_def, ptr %39, i64 0, i32 1
  %157 = load ptr, ptr %156, align 8, !tbaa !16
  %158 = getelementptr inbounds %struct.cselib_val_struct, ptr %157, i64 0, i32 1
  br label %161

159:                                              ; preds = %151
  %160 = getelementptr inbounds %struct.tree_decl_minimal, ptr %39, i64 0, i32 2
  br label %161

161:                                              ; preds = %159, %155
  %162 = phi ptr [ %158, %155 ], [ %160, %159 ]
  %163 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %164 = load ptr, ptr %163, align 8, !tbaa !51
  %165 = load i32, ptr %162, align 4, !tbaa !16
  %166 = getelementptr i8, ptr %164, i64 8
  %167 = load ptr, ptr %166, align 8, !tbaa !55
  %168 = tail call ptr @htab_find_slot_with_hash(ptr noundef %167, ptr noundef nonnull %39, i32 noundef %165, i32 noundef 0) #21
  %169 = icmp eq ptr %168, null
  br i1 %169, label %172, label %170

170:                                              ; preds = %161
  %171 = tail call fastcc ptr @clobber_slot_part(ptr noundef nonnull %0, ptr noundef %1, ptr noundef nonnull %168, i64 noundef %38, ptr noundef %4)
  br label %172

172:                                              ; preds = %170, %161, %151, %143
  %173 = load ptr, ptr %6, align 8, !tbaa !16
  %174 = icmp eq ptr %173, null
  br i1 %174, label %179, label %175

175:                                              ; preds = %172
  %176 = load ptr, ptr %173, align 8, !tbaa !75
  %177 = getelementptr inbounds %struct.reg_attrs, ptr %173, i64 0, i32 1
  %178 = load i64, ptr %177, align 8, !tbaa !77
  br label %179

179:                                              ; preds = %172, %175
  %180 = phi ptr [ %176, %175 ], [ null, %172 ]
  %181 = phi i64 [ %178, %175 ], [ 0, %172 ]
  tail call fastcc void @var_reg_decl_set(ptr noundef %0, ptr noundef nonnull %1, i32 noundef %93, ptr noundef %180, i64 noundef %181, ptr noundef %4, i32 noundef 1)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @var_mem_delete_and_set(ptr noundef %0, ptr noundef %1, i8 noundef zeroext %2, i32 noundef %3, ptr noundef %4) unnamed_addr #9 {
  %6 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1, i32 0, i32 0, i64 1
  %7 = load ptr, ptr %6, align 8, !tbaa !16
  %8 = icmp eq ptr %7, null
  br i1 %8, label %43, label %9

9:                                                ; preds = %5
  %10 = load ptr, ptr %7, align 8, !tbaa !135
  %11 = getelementptr inbounds %struct.mem_attrs, ptr %7, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !137
  %13 = icmp eq ptr %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.rtx_def, ptr %12, i64 0, i32 1
  %16 = load i64, ptr %15, align 8, !tbaa !16
  br label %17

17:                                               ; preds = %9, %14
  %18 = phi i64 [ %16, %14 ], [ 0, %9 ]
  %19 = icmp eq ptr %10, null
  br i1 %19, label %43, label %20

20:                                               ; preds = %17
  %21 = load i64, ptr %10, align 8
  %22 = and i64 %21, 65535
  %23 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %22
  %24 = load i32, ptr %23, align 4, !tbaa !16
  %25 = icmp eq i32 %24, 3
  br i1 %25, label %26, label %43

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.tree_decl_common, ptr %10, i64 0, i32 2
  %28 = load i64, ptr %27, align 8
  %29 = and i64 %28, 16384
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %43, label %31

31:                                               ; preds = %26
  %32 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %10) #21
  %33 = icmp eq ptr %32, null
  br i1 %33, label %43, label %34

34:                                               ; preds = %31
  %35 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %10) #21
  %36 = load i64, ptr %35, align 8
  %37 = and i64 %36, 65535
  %38 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %37
  %39 = load i32, ptr %38, align 4, !tbaa !16
  %40 = icmp eq i32 %39, 3
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  %42 = tail call ptr @decl_debug_expr_lookup(ptr noundef nonnull %10) #21
  br label %43

43:                                               ; preds = %5, %17, %20, %26, %31, %34, %41
  %44 = phi i64 [ %18, %41 ], [ %18, %34 ], [ %18, %31 ], [ %18, %26 ], [ %18, %20 ], [ %18, %17 ], [ 0, %5 ]
  %45 = phi ptr [ %42, %41 ], [ %10, %34 ], [ %10, %31 ], [ %10, %26 ], [ %10, %20 ], [ null, %17 ], [ null, %5 ]
  %46 = icmp eq i32 %3, 0
  br i1 %46, label %47, label %98

47:                                               ; preds = %43
  %48 = load i32, ptr @flag_var_tracking_uninit, align 4, !tbaa !20
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %98, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !51
  %53 = icmp eq ptr %45, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %50
  %55 = load i64, ptr %45, align 8
  %56 = and i64 %55, 65535
  %57 = icmp eq i64 %56, 1
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.rtx_def, ptr %45, i64 0, i32 1
  %60 = load ptr, ptr %59, align 8, !tbaa !16
  %61 = getelementptr inbounds %struct.cselib_val_struct, ptr %60, i64 0, i32 1
  br label %64

62:                                               ; preds = %54, %50
  %63 = getelementptr inbounds %struct.tree_decl_minimal, ptr %45, i64 0, i32 2
  br label %64

64:                                               ; preds = %62, %58
  %65 = phi ptr [ %61, %58 ], [ %63, %62 ]
  %66 = load i32, ptr %65, align 4, !tbaa !16
  %67 = getelementptr i8, ptr %52, i64 8
  %68 = load ptr, ptr %67, align 8, !tbaa !55
  %69 = tail call ptr @htab_find_with_hash(ptr noundef %68, ptr noundef %45, i32 noundef %66) #21
  %70 = icmp eq ptr %69, null
  br i1 %70, label %98, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %struct.variable_def, ptr %69, i64 0, i32 2
  %73 = load i8, ptr %72, align 4, !tbaa !184
  %74 = icmp sgt i8 %73, 0
  br i1 %74, label %75, label %98

75:                                               ; preds = %71, %90
  %76 = phi i64 [ %92, %90 ], [ 0, %71 ]
  %77 = getelementptr inbounds %struct.variable_def, ptr %69, i64 0, i32 5, i64 %76
  br label %78

78:                                               ; preds = %82, %75
  %79 = phi ptr [ %77, %75 ], [ %80, %82 ]
  %80 = load ptr, ptr %79, align 8, !tbaa !5
  %81 = icmp eq ptr %80, null
  br i1 %81, label %90, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.location_chain_def, ptr %80, i64 0, i32 1
  %84 = load ptr, ptr %83, align 8, !tbaa !214
  %85 = tail call i32 @rtx_equal_p(ptr noundef %84, ptr noundef %1) #21
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %78, label %87, !llvm.loop !318

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.location_chain_def, ptr %80, i64 0, i32 3
  %89 = load i32, ptr %88, align 8, !tbaa !224
  br label %90

90:                                               ; preds = %78, %87
  %91 = phi i32 [ %89, %87 ], [ 0, %78 ]
  %92 = add nuw nsw i64 %76, 1
  %93 = load i8, ptr %72, align 4, !tbaa !184
  %94 = sext i8 %93 to i64
  %95 = icmp slt i64 %92, %94
  %96 = icmp eq i32 %91, 0
  %97 = select i1 %95, i1 %96, i1 false
  br i1 %97, label %75, label %98, !llvm.loop !319

98:                                               ; preds = %90, %71, %64, %47, %43
  %99 = phi i32 [ %3, %43 ], [ 2, %47 ], [ 0, %64 ], [ 0, %71 ], [ %91, %90 ]
  %100 = icmp eq i8 %2, 0
  %101 = icmp eq ptr %45, null
  %102 = select i1 %100, i1 true, i1 %101
  br i1 %102, label %128, label %103

103:                                              ; preds = %98
  %104 = load i64, ptr %45, align 8
  %105 = and i64 %104, 65535
  %106 = icmp eq i64 %105, 1
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %105
  %109 = load i32, ptr %108, align 4, !tbaa !16
  %110 = icmp eq i32 %109, 3
  br i1 %110, label %115, label %128

111:                                              ; preds = %103
  %112 = getelementptr inbounds %struct.rtx_def, ptr %45, i64 0, i32 1
  %113 = load ptr, ptr %112, align 8, !tbaa !16
  %114 = getelementptr inbounds %struct.cselib_val_struct, ptr %113, i64 0, i32 1
  br label %117

115:                                              ; preds = %107
  %116 = getelementptr inbounds %struct.tree_decl_minimal, ptr %45, i64 0, i32 2
  br label %117

117:                                              ; preds = %115, %111
  %118 = phi ptr [ %114, %111 ], [ %116, %115 ]
  %119 = getelementptr inbounds %struct.dataflow_set_def, ptr %0, i64 0, i32 2
  %120 = load ptr, ptr %119, align 8, !tbaa !51
  %121 = load i32, ptr %118, align 4, !tbaa !16
  %122 = getelementptr i8, ptr %120, i64 8
  %123 = load ptr, ptr %122, align 8, !tbaa !55
  %124 = tail call ptr @htab_find_slot_with_hash(ptr noundef %123, ptr noundef nonnull %45, i32 noundef %121, i32 noundef 0) #21
  %125 = icmp eq ptr %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %117
  %127 = tail call fastcc ptr @clobber_slot_part(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull %124, i64 noundef %44, ptr noundef %4)
  br label %128

128:                                              ; preds = %126, %117, %107, %98
  tail call fastcc void @var_mem_set(ptr noundef %0, ptr noundef %1, i32 noundef %99, ptr noundef %4)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @canonicalize_values_mark(ptr nocapture noundef readonly %0, ptr noundef %1) #9 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = load ptr, ptr %3, align 8, !tbaa !181
  %5 = icmp eq ptr %4, null
  br i1 %5, label %62, label %6

6:                                                ; preds = %2
  %7 = load i64, ptr %4, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %62

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 2
  %12 = load i8, ptr %11, align 4, !tbaa !184
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 3025, ptr noundef nonnull @.str.2) #21
  br label %15

15:                                               ; preds = %10, %14
  %16 = getelementptr inbounds %struct.variable_def, ptr %3, i64 0, i32 5
  %17 = load ptr, ptr %16, align 8, !tbaa !5
  %18 = icmp eq ptr %17, null
  br i1 %18, label %62, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.rtx_def, ptr %4, i64 0, i32 1
  %21 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 2
  br label %22

22:                                               ; preds = %19, %59
  %23 = phi ptr [ %17, %19 ], [ %60, %59 ]
  %24 = getelementptr inbounds %struct.location_chain_def, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !214
  %26 = load i32, ptr %25, align 8
  %27 = and i32 %26, 65535
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %59

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.rtx_def, ptr %25, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !16
  %32 = getelementptr inbounds %struct.cselib_val_struct, ptr %31, i64 0, i32 1
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = load ptr, ptr %20, align 8, !tbaa !16
  %35 = getelementptr inbounds %struct.cselib_val_struct, ptr %34, i64 0, i32 1
  %36 = load i32, ptr %35, align 4, !tbaa !169
  %37 = icmp slt i32 %33, %36
  br i1 %37, label %55, label %38

38:                                               ; preds = %29
  %39 = load ptr, ptr %21, align 8, !tbaa !51
  %40 = load i64, ptr %25, align 8
  %41 = and i64 %40, 65535
  %42 = icmp eq i64 %41, 1
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.tree_decl_minimal, ptr %25, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !16
  br label %46

46:                                               ; preds = %38, %43
  %47 = phi i32 [ %45, %43 ], [ %33, %38 ]
  %48 = getelementptr i8, ptr %39, i64 8
  %49 = load ptr, ptr %48, align 8, !tbaa !55
  %50 = tail call ptr @htab_find_slot_with_hash(ptr noundef %49, ptr noundef nonnull %25, i32 noundef %47, i32 noundef 0) #21
  %51 = getelementptr inbounds %struct.location_chain_def, ptr %23, i64 0, i32 3
  %52 = load i32, ptr %51, align 8, !tbaa !224
  %53 = tail call fastcc ptr @set_slot_part(ptr noundef nonnull %1, ptr noundef nonnull %4, ptr noundef %50, ptr noundef nonnull %25, i64 noundef 0, i32 noundef %52, ptr noundef null)
  %54 = load ptr, ptr %24, align 8, !tbaa !214
  br label %55

55:                                               ; preds = %29, %46
  %56 = phi ptr [ %54, %46 ], [ %4, %29 ]
  %57 = load i32, ptr %56, align 8
  %58 = or i32 %57, 536870912
  store i32 %58, ptr %56, align 8
  br label %59

59:                                               ; preds = %55, %22
  %60 = load ptr, ptr %23, align 8, !tbaa !5
  %61 = icmp eq ptr %60, null
  br i1 %61, label %62, label %22, !llvm.loop !323

62:                                               ; preds = %59, %15, %2, %6
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @dataflow_set_preserve_mem_locs(ptr noundef %0, ptr noundef %1) #9 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = load ptr, ptr %6, align 8, !tbaa !181
  %8 = icmp eq ptr %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = load i64, ptr %7, align 8
  %11 = and i64 %10, 65535
  %12 = icmp eq i64 %11, 1
  %13 = load i32, ptr @flag_var_tracking_assignments, align 4
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %12, i1 true, i1 %14
  br i1 %15, label %260, label %19

16:                                               ; preds = %2
  %17 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %260, label %26

19:                                               ; preds = %9
  %20 = trunc i64 %10 to i16
  switch i16 %20, label %21 [
    i16 1, label %26
    i16 37, label %26
  ]

21:                                               ; preds = %19
  %22 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %7) #21
  %23 = icmp eq ptr %22, null
  br i1 %23, label %260, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %6, align 8, !tbaa !181
  br label %26

26:                                               ; preds = %24, %16, %19, %19
  %27 = phi ptr [ %25, %24 ], [ null, %16 ], [ %7, %19 ], [ %7, %19 ]
  %28 = freeze ptr %27
  %29 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 2
  %30 = load i8, ptr %29, align 4, !tbaa !184
  switch i8 %30, label %31 [
    i8 0, label %260
    i8 1, label %32
  ]

31:                                               ; preds = %26
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4086, ptr noundef nonnull @.str.2) #21
  br label %32

32:                                               ; preds = %26, %31
  %33 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 2
  %34 = getelementptr i8, ptr %6, i64 8
  %35 = load i32, ptr %34, align 8, !tbaa !183
  %36 = getelementptr i8, ptr %6, i64 14
  %37 = load i8, ptr %36, align 2, !tbaa !212
  %38 = zext i8 %37 to i32
  %39 = add nuw nsw i32 %38, 1
  %40 = icmp slt i32 %39, %35
  br i1 %40, label %45, label %41

41:                                               ; preds = %32
  %42 = load ptr, ptr %33, align 8, !tbaa !51
  %43 = load i32, ptr %42, align 8, !tbaa !49
  %44 = icmp slt i32 %43, 2
  br i1 %44, label %134, label %45

45:                                               ; preds = %32, %41
  %46 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 5
  %47 = load ptr, ptr %46, align 8, !tbaa !5
  %48 = icmp eq ptr %47, null
  br i1 %48, label %260, label %49

49:                                               ; preds = %45
  %50 = icmp eq ptr %28, null
  br i1 %50, label %51, label %89

51:                                               ; preds = %49, %86
  %52 = phi ptr [ %87, %86 ], [ %47, %49 ]
  %53 = getelementptr inbounds %struct.location_chain_def, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !214
  %55 = load i32, ptr %54, align 8
  %56 = and i32 %55, 65535
  %57 = icmp eq i32 %56, 43
  br i1 %57, label %58, label %75

58:                                               ; preds = %51
  %59 = getelementptr %struct.rtx_def, ptr %54, i64 0, i32 1, i32 0, i32 0, i64 1
  %60 = load ptr, ptr %59, align 8, !tbaa !16
  %61 = icmp eq ptr %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = load ptr, ptr %60, align 8, !tbaa !135
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.mem_attrs, ptr %60, i64 0, i32 1
  %67 = load ptr, ptr %66, align 8, !tbaa !137
  %68 = icmp eq ptr %67, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %65, %62
  %70 = tail call fastcc zeroext i8 @mem_dies_at_call(ptr nonnull %60)
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %127, label %72

72:                                               ; preds = %69
  %73 = load ptr, ptr %53, align 8, !tbaa !214
  %74 = load i32, ptr %73, align 8
  br label %75

75:                                               ; preds = %72, %58, %65, %51
  %76 = phi i32 [ %74, %72 ], [ %55, %58 ], [ %55, %65 ], [ %55, %51 ]
  %77 = phi ptr [ %73, %72 ], [ %54, %58 ], [ %54, %65 ], [ %54, %51 ]
  %78 = and i32 %76, 65535
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %86

80:                                               ; preds = %75
  %81 = load ptr, ptr %33, align 8, !tbaa !51
  %82 = getelementptr i8, ptr %81, i64 8
  %83 = load ptr, ptr %82, align 8, !tbaa !55
  %84 = tail call fastcc ptr @find_mem_expr_in_1pdv(ptr noundef null, ptr noundef nonnull %77, ptr noundef %83)
  %85 = icmp eq ptr %84, null
  br i1 %85, label %86, label %127

86:                                               ; preds = %80, %75
  %87 = load ptr, ptr %52, align 8, !tbaa !5
  %88 = icmp eq ptr %87, null
  br i1 %88, label %260, label %51, !llvm.loop !324

89:                                               ; preds = %49, %124
  %90 = phi ptr [ %125, %124 ], [ %47, %49 ]
  %91 = getelementptr inbounds %struct.location_chain_def, ptr %90, i64 0, i32 1
  %92 = load ptr, ptr %91, align 8, !tbaa !214
  %93 = load i32, ptr %92, align 8
  %94 = and i32 %93, 65535
  %95 = icmp eq i32 %94, 43
  br i1 %95, label %96, label %113

96:                                               ; preds = %89
  %97 = getelementptr %struct.rtx_def, ptr %92, i64 0, i32 1, i32 0, i32 0, i64 1
  %98 = load ptr, ptr %97, align 8, !tbaa !16
  %99 = icmp eq ptr %98, null
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = load ptr, ptr %98, align 8, !tbaa !135
  %102 = icmp eq ptr %101, %28
  br i1 %102, label %103, label %107

103:                                              ; preds = %100
  %104 = getelementptr inbounds %struct.mem_attrs, ptr %98, i64 0, i32 1
  %105 = load ptr, ptr %104, align 8, !tbaa !137
  %106 = icmp eq ptr %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %96, %100, %103
  %108 = tail call fastcc zeroext i8 @mem_dies_at_call(ptr %98)
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %127, label %110

110:                                              ; preds = %107
  %111 = load ptr, ptr %91, align 8, !tbaa !214
  %112 = load i32, ptr %111, align 8
  br label %113

113:                                              ; preds = %110, %103, %89
  %114 = phi i32 [ %112, %110 ], [ %93, %103 ], [ %93, %89 ]
  %115 = phi ptr [ %111, %110 ], [ %92, %103 ], [ %92, %89 ]
  %116 = and i32 %114, 65535
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = load ptr, ptr %33, align 8, !tbaa !51
  %120 = getelementptr i8, ptr %119, i64 8
  %121 = load ptr, ptr %120, align 8, !tbaa !55
  %122 = tail call fastcc ptr @find_mem_expr_in_1pdv(ptr noundef nonnull %28, ptr noundef nonnull %115, ptr noundef %121)
  %123 = icmp eq ptr %122, null
  br i1 %123, label %124, label %127

124:                                              ; preds = %118, %113
  %125 = load ptr, ptr %90, align 8, !tbaa !5
  %126 = icmp eq ptr %125, null
  br i1 %126, label %260, label %89, !llvm.loop !324

127:                                              ; preds = %118, %107, %69, %80
  %128 = tail call fastcc ptr @unshare_variable(ptr noundef %1, ptr noundef nonnull %0, ptr noundef nonnull %6, i32 noundef 0)
  %129 = load ptr, ptr %128, align 8, !tbaa !5
  %130 = getelementptr inbounds %struct.variable_def, ptr %129, i64 0, i32 2
  %131 = load i8, ptr %130, align 4, !tbaa !184
  %132 = icmp eq i8 %131, 1
  br i1 %132, label %134, label %133

133:                                              ; preds = %127
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4111, ptr noundef nonnull @.str.2) #21
  br label %134

134:                                              ; preds = %133, %127, %41
  %135 = phi ptr [ %129, %127 ], [ %129, %133 ], [ %6, %41 ]
  %136 = getelementptr inbounds %struct.variable_def, ptr %135, i64 0, i32 5
  %137 = load ptr, ptr %136, align 8, !tbaa !5
  %138 = icmp eq ptr %137, null
  br i1 %138, label %253, label %139

139:                                              ; preds = %134
  %140 = icmp eq ptr %28, null
  %141 = getelementptr inbounds %struct.variable_def, ptr %135, i64 0, i32 5, i64 0, i32 1
  %142 = getelementptr inbounds %struct.variable_def, ptr %135, i64 0, i32 3
  br label %143

143:                                              ; preds = %139, %245
  %144 = phi ptr [ %137, %139 ], [ %248, %245 ]
  %145 = phi i8 [ 0, %139 ], [ %247, %245 ]
  %146 = phi ptr [ %136, %139 ], [ %246, %245 ]
  %147 = getelementptr inbounds %struct.location_chain_def, ptr %144, i64 0, i32 1
  %148 = load ptr, ptr %147, align 8, !tbaa !214
  %149 = load i32, ptr %148, align 8
  %150 = and i32 %149, 65535
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %169

152:                                              ; preds = %143
  %153 = load ptr, ptr %33, align 8, !tbaa !51
  %154 = getelementptr i8, ptr %153, i64 8
  %155 = load ptr, ptr %154, align 8, !tbaa !55
  %156 = call fastcc ptr @find_mem_expr_in_1pdv(ptr noundef %28, ptr noundef nonnull %148, ptr noundef %155)
  %157 = icmp eq ptr %156, null
  br i1 %157, label %158, label %160

158:                                              ; preds = %152
  %159 = load ptr, ptr %147, align 8, !tbaa !214
  br label %169

160:                                              ; preds = %152
  %161 = getelementptr inbounds %struct.location_chain_def, ptr %156, i64 0, i32 1
  %162 = load <2 x ptr>, ptr %161, align 8, !tbaa !5
  store <2 x ptr> %162, ptr %147, align 8, !tbaa !5
  %163 = getelementptr inbounds %struct.location_chain_def, ptr %144, i64 0, i32 3
  %164 = load i32, ptr %163, align 8, !tbaa !224
  %165 = getelementptr inbounds %struct.location_chain_def, ptr %156, i64 0, i32 3
  %166 = load i32, ptr %165, align 8, !tbaa !224
  %167 = call i32 @llvm.umin.i32(i32 %164, i32 %166)
  store i32 %167, ptr %163, align 8, !tbaa !224
  %168 = extractelement <2 x ptr> %162, i64 0
  br label %169

169:                                              ; preds = %158, %160, %143
  %170 = phi ptr [ %159, %158 ], [ %168, %160 ], [ %148, %143 ]
  %171 = load i32, ptr %170, align 8
  %172 = and i32 %171, 65535
  %173 = icmp eq i32 %172, 43
  br i1 %173, label %174, label %191

174:                                              ; preds = %169
  %175 = getelementptr %struct.rtx_def, ptr %170, i64 0, i32 1, i32 0, i32 0, i64 1
  %176 = load ptr, ptr %175, align 8, !tbaa !16
  %177 = icmp eq ptr %176, null
  br i1 %177, label %178, label %179

178:                                              ; preds = %174
  br i1 %140, label %191, label %186

179:                                              ; preds = %174
  %180 = load ptr, ptr %176, align 8, !tbaa !135
  %181 = icmp eq ptr %180, %28
  br i1 %181, label %182, label %186

182:                                              ; preds = %179
  %183 = getelementptr inbounds %struct.mem_attrs, ptr %176, i64 0, i32 1
  %184 = load ptr, ptr %183, align 8, !tbaa !137
  %185 = icmp eq ptr %184, null
  br i1 %185, label %191, label %186

186:                                              ; preds = %179, %182, %178
  %187 = call fastcc zeroext i8 @mem_dies_at_call(ptr %176)
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %224

189:                                              ; preds = %186
  %190 = load ptr, ptr %147, align 8, !tbaa !214
  br label %191

191:                                              ; preds = %189, %178, %182, %169
  %192 = phi ptr [ %190, %189 ], [ %170, %178 ], [ %170, %182 ], [ %170, %169 ]
  %193 = icmp ne ptr %148, %192
  %194 = load i1, ptr @emit_notes, align 1
  %195 = select i1 %193, i1 %194, i1 false
  br i1 %195, label %196, label %245

196:                                              ; preds = %191
  %197 = load ptr, ptr %141, align 8, !tbaa !229
  %198 = icmp eq ptr %148, %197
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  store ptr null, ptr %141, align 8, !tbaa !229
  store i8 1, ptr %142, align 1, !tbaa !211
  br label %200

200:                                              ; preds = %199, %196
  %201 = phi i8 [ 1, %199 ], [ %145, %196 ]
  %202 = load ptr, ptr %135, align 8, !tbaa !181
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  store ptr %192, ptr %5, align 8, !tbaa !5
  %203 = load i32, ptr %192, align 8
  %204 = trunc i32 %203 to i16
  switch i16 %204, label %210 [
    i16 1, label %205
    i16 2, label %205
    i16 37, label %212
    i16 43, label %207
  ]

205:                                              ; preds = %200, %200
  %206 = call i32 @add_value_chain(ptr noundef nonnull %5, ptr noundef %202)
  br label %212

207:                                              ; preds = %200
  %208 = getelementptr inbounds %struct.rtx_def, ptr %192, i64 0, i32 1
  %209 = load ptr, ptr %208, align 8, !tbaa !16
  store ptr %209, ptr %5, align 8, !tbaa !5
  br label %210

210:                                              ; preds = %207, %200
  %211 = call i32 @for_each_rtx(ptr noundef nonnull %5, ptr noundef nonnull @add_value_chain, ptr noundef %202) #21
  br label %212

212:                                              ; preds = %200, %205, %210
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %213 = load ptr, ptr %135, align 8, !tbaa !181
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  store ptr %148, ptr %4, align 8, !tbaa !5
  %214 = load i32, ptr %148, align 8
  %215 = trunc i32 %214 to i16
  switch i16 %215, label %221 [
    i16 1, label %216
    i16 2, label %216
    i16 37, label %223
    i16 43, label %218
  ]

216:                                              ; preds = %212, %212
  %217 = call i32 @remove_value_chain(ptr noundef nonnull %4, ptr noundef %213)
  br label %223

218:                                              ; preds = %212
  %219 = getelementptr inbounds %struct.rtx_def, ptr %148, i64 0, i32 1
  %220 = load ptr, ptr %219, align 8, !tbaa !16
  store ptr %220, ptr %4, align 8, !tbaa !5
  br label %221

221:                                              ; preds = %218, %212
  %222 = call i32 @for_each_rtx(ptr noundef nonnull %4, ptr noundef nonnull @remove_value_chain, ptr noundef %213) #21
  br label %223

223:                                              ; preds = %212, %216, %221
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %245

224:                                              ; preds = %186
  %225 = load i1, ptr @emit_notes, align 1
  br i1 %225, label %226, label %241

226:                                              ; preds = %224
  %227 = load ptr, ptr %135, align 8, !tbaa !181
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  store ptr %148, ptr %3, align 8, !tbaa !5
  %228 = load i32, ptr %148, align 8
  %229 = trunc i32 %228 to i16
  switch i16 %229, label %235 [
    i16 1, label %230
    i16 2, label %230
    i16 37, label %237
    i16 43, label %232
  ]

230:                                              ; preds = %226, %226
  %231 = call i32 @remove_value_chain(ptr noundef nonnull %3, ptr noundef %227)
  br label %237

232:                                              ; preds = %226
  %233 = getelementptr inbounds %struct.rtx_def, ptr %148, i64 0, i32 1
  %234 = load ptr, ptr %233, align 8, !tbaa !16
  store ptr %234, ptr %3, align 8, !tbaa !5
  br label %235

235:                                              ; preds = %232, %226
  %236 = call i32 @for_each_rtx(ptr noundef nonnull %3, ptr noundef nonnull @remove_value_chain, ptr noundef %227) #21
  br label %237

237:                                              ; preds = %226, %230, %235
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %238 = load ptr, ptr %141, align 8, !tbaa !229
  %239 = icmp eq ptr %148, %238
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  store ptr null, ptr %141, align 8, !tbaa !229
  store i8 1, ptr %142, align 1, !tbaa !211
  br label %241

241:                                              ; preds = %237, %240, %224
  %242 = phi i8 [ 1, %240 ], [ %145, %237 ], [ %145, %224 ]
  %243 = load ptr, ptr %144, align 8, !tbaa !187
  store ptr %243, ptr %146, align 8, !tbaa !5
  %244 = load ptr, ptr @loc_chain_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %244, ptr noundef nonnull %144) #21
  br label %245

245:                                              ; preds = %191, %223, %241
  %246 = phi ptr [ %146, %241 ], [ %144, %223 ], [ %144, %191 ]
  %247 = phi i8 [ %242, %241 ], [ %201, %223 ], [ %145, %191 ]
  %248 = load ptr, ptr %246, align 8, !tbaa !5
  %249 = icmp eq ptr %248, null
  br i1 %249, label %250, label %143, !llvm.loop !325

250:                                              ; preds = %245
  %251 = load ptr, ptr %136, align 8, !tbaa !185
  %252 = icmp eq ptr %251, null
  br i1 %252, label %253, label %257

253:                                              ; preds = %134, %250
  %254 = getelementptr inbounds %struct.variable_def, ptr %135, i64 0, i32 2
  %255 = load i8, ptr %254, align 4, !tbaa !184
  %256 = add i8 %255, -1
  store i8 %256, ptr %254, align 4, !tbaa !184
  br label %259

257:                                              ; preds = %250
  %258 = icmp eq i8 %247, 0
  br i1 %258, label %260, label %259

259:                                              ; preds = %253, %257
  call fastcc void @variable_was_changed(ptr noundef nonnull %135, ptr noundef %1)
  br label %260

260:                                              ; preds = %124, %86, %45, %16, %26, %9, %21, %257, %259
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @dataflow_set_remove_mem_locs(ptr noundef %0, ptr noundef %1) #9 {
  %3 = alloca ptr, align 8
  %4 = load ptr, ptr %0, align 8, !tbaa !5
  %5 = load ptr, ptr %4, align 8, !tbaa !181
  %6 = icmp eq ptr %5, null
  br i1 %6, label %116, label %7

7:                                                ; preds = %2
  %8 = load i64, ptr %5, align 8
  %9 = and i64 %8, 65535
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %11, label %116

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 2
  %13 = load i8, ptr %12, align 4, !tbaa !184
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4198, ptr noundef nonnull @.str.2) #21
  br label %16

16:                                               ; preds = %11, %15
  %17 = getelementptr i8, ptr %4, i64 8
  %18 = load i32, ptr %17, align 8, !tbaa !183
  %19 = getelementptr i8, ptr %4, i64 14
  %20 = load i8, ptr %19, align 2, !tbaa !212
  %21 = zext i8 %20 to i32
  %22 = add nuw nsw i32 %21, 1
  %23 = icmp slt i32 %22, %18
  br i1 %23, label %29, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.dataflow_set_def, ptr %1, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !51
  %27 = load i32, ptr %26, align 8, !tbaa !49
  %28 = icmp slt i32 %27, 2
  br i1 %28, label %55, label %29

29:                                               ; preds = %16, %24
  %30 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 5
  %31 = load ptr, ptr %30, align 8, !tbaa !5
  %32 = icmp eq ptr %31, null
  br i1 %32, label %116, label %33

33:                                               ; preds = %29, %45
  %34 = phi ptr [ %46, %45 ], [ %31, %29 ]
  %35 = getelementptr inbounds %struct.location_chain_def, ptr %34, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !214
  %37 = load i32, ptr %36, align 8
  %38 = and i32 %37, 65535
  %39 = icmp eq i32 %38, 43
  br i1 %39, label %40, label %45

40:                                               ; preds = %33
  %41 = getelementptr i8, ptr %36, i64 16
  %42 = load ptr, ptr %41, align 8, !tbaa !16
  %43 = tail call fastcc zeroext i8 @mem_dies_at_call(ptr %42)
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %33, %40
  %46 = load ptr, ptr %34, align 8, !tbaa !5
  %47 = icmp eq ptr %46, null
  br i1 %47, label %116, label %33, !llvm.loop !326

48:                                               ; preds = %40
  %49 = tail call fastcc ptr @unshare_variable(ptr noundef %1, ptr noundef nonnull %0, ptr noundef nonnull %4, i32 noundef 0)
  %50 = load ptr, ptr %49, align 8, !tbaa !5
  %51 = getelementptr inbounds %struct.variable_def, ptr %50, i64 0, i32 2
  %52 = load i8, ptr %51, align 4, !tbaa !184
  %53 = icmp eq i8 %52, 1
  br i1 %53, label %55, label %54

54:                                               ; preds = %48
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4212, ptr noundef nonnull @.str.2) #21
  br label %55

55:                                               ; preds = %54, %48, %24
  %56 = phi ptr [ %50, %48 ], [ %50, %54 ], [ %4, %24 ]
  %57 = getelementptr inbounds %struct.variable_def, ptr %56, i64 0, i32 5
  %58 = load ptr, ptr %57, align 8, !tbaa !5
  %59 = icmp eq ptr %58, null
  br i1 %59, label %109, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.variable_def, ptr %56, i64 0, i32 5, i64 0, i32 1
  %62 = getelementptr inbounds %struct.variable_def, ptr %56, i64 0, i32 3
  br label %63

63:                                               ; preds = %60, %101
  %64 = phi ptr [ %58, %60 ], [ %104, %101 ]
  %65 = phi i8 [ 0, %60 ], [ %103, %101 ]
  %66 = phi ptr [ %57, %60 ], [ %102, %101 ]
  %67 = getelementptr inbounds %struct.location_chain_def, ptr %64, i64 0, i32 1
  %68 = load ptr, ptr %67, align 8, !tbaa !214
  %69 = load i32, ptr %68, align 8
  %70 = and i32 %69, 65535
  %71 = icmp eq i32 %70, 43
  br i1 %71, label %72, label %101

72:                                               ; preds = %63
  %73 = getelementptr i8, ptr %68, i64 16
  %74 = load ptr, ptr %73, align 8, !tbaa !16
  %75 = call fastcc zeroext i8 @mem_dies_at_call(ptr %74)
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %101, label %77

77:                                               ; preds = %72
  %78 = load i1, ptr @emit_notes, align 1
  br i1 %78, label %79, label %92

79:                                               ; preds = %77
  %80 = load ptr, ptr %56, align 8, !tbaa !181
  %81 = load ptr, ptr %67, align 8, !tbaa !214
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  store ptr %81, ptr %3, align 8, !tbaa !5
  %82 = load i32, ptr %81, align 8
  %83 = trunc i32 %82 to i16
  switch i16 %83, label %89 [
    i16 1, label %84
    i16 2, label %84
    i16 37, label %91
    i16 43, label %86
  ]

84:                                               ; preds = %79, %79
  %85 = call i32 @remove_value_chain(ptr noundef nonnull %3, ptr noundef %80)
  br label %91

86:                                               ; preds = %79
  %87 = getelementptr inbounds %struct.rtx_def, ptr %81, i64 0, i32 1
  %88 = load ptr, ptr %87, align 8, !tbaa !16
  store ptr %88, ptr %3, align 8, !tbaa !5
  br label %89

89:                                               ; preds = %86, %79
  %90 = call i32 @for_each_rtx(ptr noundef nonnull %3, ptr noundef nonnull @remove_value_chain, ptr noundef %80) #21
  br label %91

91:                                               ; preds = %79, %84, %89
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %92

92:                                               ; preds = %91, %77
  %93 = load ptr, ptr %64, align 8, !tbaa !187
  store ptr %93, ptr %66, align 8, !tbaa !5
  %94 = load ptr, ptr %61, align 8, !tbaa !229
  %95 = load ptr, ptr %67, align 8, !tbaa !214
  %96 = icmp eq ptr %94, %95
  br i1 %96, label %97, label %98

97:                                               ; preds = %92
  store ptr null, ptr %61, align 8, !tbaa !229
  store i8 1, ptr %62, align 1, !tbaa !211
  br label %98

98:                                               ; preds = %97, %92
  %99 = phi i8 [ 1, %97 ], [ %65, %92 ]
  %100 = load ptr, ptr @loc_chain_pool, align 8, !tbaa !5
  call void @pool_free(ptr noundef %100, ptr noundef nonnull %64) #21
  br label %101

101:                                              ; preds = %63, %72, %98
  %102 = phi ptr [ %66, %98 ], [ %64, %72 ], [ %64, %63 ]
  %103 = phi i8 [ %99, %98 ], [ %65, %72 ], [ %65, %63 ]
  %104 = load ptr, ptr %102, align 8, !tbaa !5
  %105 = icmp eq ptr %104, null
  br i1 %105, label %106, label %63, !llvm.loop !327

106:                                              ; preds = %101
  %107 = load ptr, ptr %57, align 8, !tbaa !185
  %108 = icmp eq ptr %107, null
  br i1 %108, label %109, label %113

109:                                              ; preds = %55, %106
  %110 = getelementptr inbounds %struct.variable_def, ptr %56, i64 0, i32 2
  %111 = load i8, ptr %110, align 4, !tbaa !184
  %112 = add i8 %111, -1
  store i8 %112, ptr %110, align 4, !tbaa !184
  br label %115

113:                                              ; preds = %106
  %114 = icmp eq i8 %103, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %109, %113
  call fastcc void @variable_was_changed(ptr noundef nonnull %56, ptr noundef %1)
  br label %116

116:                                              ; preds = %45, %29, %2, %7, %113, %115
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @mem_dies_at_call(ptr readonly %0) unnamed_addr #9 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %59, label %3

3:                                                ; preds = %1
  %4 = load ptr, ptr %0, align 8, !tbaa !135
  %5 = icmp eq ptr %4, null
  br i1 %5, label %59, label %6

6:                                                ; preds = %3
  %7 = tail call ptr @get_base_address(ptr noundef nonnull %4) #21
  %8 = icmp eq ptr %7, null
  br i1 %8, label %59, label %9

9:                                                ; preds = %6
  %10 = load i64, ptr %7, align 8
  %11 = and i64 %10, 65535
  %12 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %11
  %13 = load i32, ptr %12, align 4, !tbaa !16
  %14 = icmp eq i32 %13, 3
  br i1 %14, label %15, label %59

15:                                               ; preds = %9
  %16 = icmp eq i64 %11, 33
  br i1 %16, label %47, label %17

17:                                               ; preds = %15
  %18 = and i64 %10, 134217728
  %19 = icmp ne i64 %18, 0
  %20 = and i64 %10, 201326592
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.tree_decl_common, ptr %7, i64 0, i32 2
  %24 = load i64, ptr %23, align 8
  %25 = and i64 %24, 33554432
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %22, %17
  %28 = and i64 %10, 1048576
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !16
  %33 = getelementptr inbounds %struct.tree_type, ptr %32, i64 0, i32 6
  %34 = load i32, ptr %33, align 4
  %35 = and i32 %34, 2048
  %36 = icmp eq i32 %35, 0
  %37 = or i1 %19, %36
  br i1 %37, label %46, label %39

38:                                               ; preds = %27
  br i1 %19, label %59, label %39

39:                                               ; preds = %38, %30, %22
  %40 = getelementptr inbounds %struct.tree_decl_common, ptr %7, i64 0, i32 2
  %41 = load i64, ptr %40, align 8
  %42 = and i64 %41, 33554432
  %43 = and i64 %10, 262144
  %44 = or i64 %42, %43
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %47, label %59

46:                                               ; preds = %30
  br i1 %36, label %47, label %59

47:                                               ; preds = %39, %15, %46
  %48 = and i64 %10, 1048576
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %59

50:                                               ; preds = %47
  %51 = and i64 %10, 67108864
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %50
  %54 = getelementptr inbounds %struct.tree_decl_common, ptr %7, i64 0, i32 2
  %55 = load i64, ptr %54, align 8
  %56 = lshr i64 %55, 25
  %57 = trunc i64 %56 to i8
  %58 = and i8 %57, 1
  br label %59

59:                                               ; preds = %38, %39, %1, %53, %50, %46, %47, %9, %6, %3
  %60 = phi i8 [ 1, %3 ], [ 1, %6 ], [ 1, %9 ], [ 1, %46 ], [ 0, %47 ], [ 1, %50 ], [ %58, %53 ], [ 1, %1 ], [ 1, %39 ], [ 1, %38 ]
  ret i8 %60
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @find_mem_expr_in_1pdv(ptr noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #9 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %119, label %5

5:                                                ; preds = %3
  %6 = load i32, ptr %1, align 8
  %7 = and i32 %6, 65535
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4008, ptr noundef nonnull @.str.2) #21
  %10 = load i32, ptr %1, align 8
  br label %11

11:                                               ; preds = %5, %9
  %12 = phi i32 [ %6, %5 ], [ %10, %9 ]
  %13 = and i32 %12, 536870912
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4010, ptr noundef nonnull @.str.2) #21
  br label %16

16:                                               ; preds = %15, %11
  %17 = load i64, ptr %1, align 8
  %18 = and i64 %17, 65535
  %19 = icmp eq i64 %18, 1
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.rtx_def, ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !16
  %23 = getelementptr inbounds %struct.cselib_val_struct, ptr %22, i64 0, i32 1
  br label %26

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 2
  br label %26

26:                                               ; preds = %20, %24
  %27 = phi ptr [ %23, %20 ], [ %25, %24 ]
  %28 = load i32, ptr %27, align 4, !tbaa !16
  %29 = tail call ptr @htab_find_with_hash(ptr noundef %2, ptr noundef nonnull %1, i32 noundef %28) #21
  %30 = icmp eq ptr %29, null
  br i1 %30, label %119, label %31

31:                                               ; preds = %26
  %32 = load ptr, ptr %29, align 8, !tbaa !181
  %33 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %31
  %36 = icmp eq ptr %32, null
  br i1 %36, label %44, label %37

37:                                               ; preds = %35
  %38 = load i64, ptr %32, align 8
  %39 = trunc i64 %38 to i16
  switch i16 %39, label %40 [
    i16 1, label %44
    i16 37, label %44
  ]

40:                                               ; preds = %37
  %41 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %32) #21
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %31, %40
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4018, ptr noundef nonnull @.str.2) #21
  br label %44

44:                                               ; preds = %35, %37, %37, %40, %43
  %45 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 2
  %46 = load i8, ptr %45, align 4, !tbaa !184
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %119, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 5
  %50 = getelementptr inbounds %struct.variable_def, ptr %29, i64 0, i32 5, i64 0, i32 2
  %51 = load i64, ptr %50, align 8, !tbaa !213
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %48
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4023, ptr noundef nonnull @.str.2) #21
  br label %54

54:                                               ; preds = %48, %53
  %55 = load i32, ptr %1, align 8
  %56 = or i32 %55, 536870912
  store i32 %56, ptr %1, align 8
  %57 = load ptr, ptr %49, align 8, !tbaa !5
  %58 = icmp eq ptr %57, null
  br i1 %58, label %115, label %59

59:                                               ; preds = %54
  %60 = icmp eq ptr %0, null
  br i1 %60, label %61, label %88

61:                                               ; preds = %59, %85
  %62 = phi ptr [ %86, %85 ], [ %57, %59 ]
  %63 = getelementptr inbounds %struct.location_chain_def, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !214
  %65 = load i32, ptr %64, align 8
  %66 = and i32 %65, 65535
  %67 = icmp eq i32 %66, 43
  br i1 %67, label %74, label %68

68:                                               ; preds = %61
  %69 = and i32 %65, 536936447
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %85

71:                                               ; preds = %68
  %72 = tail call fastcc ptr @find_mem_expr_in_1pdv(ptr noundef null, ptr noundef nonnull %64, ptr noundef %2)
  %73 = icmp eq ptr %72, null
  br i1 %73, label %85, label %115

74:                                               ; preds = %61
  %75 = getelementptr inbounds %struct.rtx_def, ptr %64, i64 0, i32 1, i32 0, i32 0, i64 1
  %76 = load ptr, ptr %75, align 8, !tbaa !16
  %77 = icmp eq ptr %76, null
  br i1 %77, label %115, label %78

78:                                               ; preds = %74
  %79 = load ptr, ptr %76, align 8, !tbaa !135
  %80 = icmp eq ptr %79, null
  br i1 %80, label %81, label %85

81:                                               ; preds = %78
  %82 = getelementptr inbounds %struct.mem_attrs, ptr %76, i64 0, i32 1
  %83 = load ptr, ptr %82, align 8, !tbaa !137
  %84 = icmp eq ptr %83, null
  br i1 %84, label %115, label %85

85:                                               ; preds = %81, %78, %71, %68
  %86 = load ptr, ptr %62, align 8, !tbaa !5
  %87 = icmp eq ptr %86, null
  br i1 %87, label %115, label %61, !llvm.loop !328

88:                                               ; preds = %59, %112
  %89 = phi ptr [ %113, %112 ], [ %57, %59 ]
  %90 = getelementptr inbounds %struct.location_chain_def, ptr %89, i64 0, i32 1
  %91 = load ptr, ptr %90, align 8, !tbaa !214
  %92 = load i32, ptr %91, align 8
  %93 = and i32 %92, 65535
  %94 = icmp eq i32 %93, 43
  br i1 %94, label %95, label %106

95:                                               ; preds = %88
  %96 = getelementptr inbounds %struct.rtx_def, ptr %91, i64 0, i32 1, i32 0, i32 0, i64 1
  %97 = load ptr, ptr %96, align 8, !tbaa !16
  %98 = icmp eq ptr %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %95
  %100 = load ptr, ptr %97, align 8, !tbaa !135
  %101 = icmp eq ptr %100, %0
  br i1 %101, label %102, label %112

102:                                              ; preds = %99
  %103 = getelementptr inbounds %struct.mem_attrs, ptr %97, i64 0, i32 1
  %104 = load ptr, ptr %103, align 8, !tbaa !137
  %105 = icmp eq ptr %104, null
  br i1 %105, label %115, label %112

106:                                              ; preds = %88
  %107 = and i32 %92, 536936447
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = tail call fastcc ptr @find_mem_expr_in_1pdv(ptr noundef nonnull %0, ptr noundef nonnull %91, ptr noundef %2)
  %111 = icmp eq ptr %110, null
  br i1 %111, label %112, label %115

112:                                              ; preds = %95, %102, %99, %109, %106
  %113 = load ptr, ptr %89, align 8, !tbaa !5
  %114 = icmp eq ptr %113, null
  br i1 %114, label %115, label %88, !llvm.loop !328

115:                                              ; preds = %112, %109, %102, %85, %71, %81, %74, %54
  %116 = phi ptr [ null, %54 ], [ %62, %74 ], [ %62, %81 ], [ %72, %71 ], [ null, %85 ], [ %89, %102 ], [ %110, %109 ], [ null, %112 ]
  %117 = load i32, ptr %1, align 8
  %118 = and i32 %117, -536870913
  store i32 %118, ptr %1, align 8
  br label %119

119:                                              ; preds = %44, %26, %3, %115
  %120 = phi ptr [ %116, %115 ], [ null, %3 ], [ null, %26 ], [ null, %44 ]
  ret ptr %120
}

declare ptr @get_base_address(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #17

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @dataflow_set_different_1(ptr nocapture noundef readonly %0, ptr noundef %1) #9 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = load ptr, ptr %3, align 8, !tbaa !181
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = load i64, ptr %4, align 8
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.rtx_def, ptr %4, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !16
  %13 = getelementptr inbounds %struct.cselib_val_struct, ptr %12, i64 0, i32 1
  br label %16

14:                                               ; preds = %6, %2
  %15 = getelementptr inbounds %struct.tree_decl_minimal, ptr %4, i64 0, i32 2
  br label %16

16:                                               ; preds = %10, %14
  %17 = phi ptr [ %13, %10 ], [ %15, %14 ]
  %18 = load i32, ptr %17, align 4, !tbaa !16
  %19 = tail call ptr @htab_find_with_hash(ptr noundef %1, ptr noundef %4, i32 noundef %18) #21
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %30

21:                                               ; preds = %16
  store i1 true, ptr @dataflow_set_different_value, align 1
  %22 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %23 = icmp eq ptr %22, null
  br i1 %23, label %44, label %24

24:                                               ; preds = %21
  %25 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %26 = and i32 %25, 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %44, label %28

28:                                               ; preds = %24
  %29 = tail call i64 @fwrite(ptr nonnull @.str.34, i64 39, i64 1, ptr nonnull %22)
  br label %42

30:                                               ; preds = %16
  %31 = tail call fastcc zeroext i8 @variable_different_p(ptr noundef nonnull %3, ptr noundef nonnull %19), !range !37
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %44, label %33

33:                                               ; preds = %30
  store i1 true, ptr @dataflow_set_different_value, align 1
  %34 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %35 = icmp eq ptr %34, null
  br i1 %35, label %44, label %36

36:                                               ; preds = %33
  %37 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %38 = and i32 %37, 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = tail call i64 @fwrite(ptr nonnull @.str.35, i64 47, i64 1, ptr nonnull %34)
  tail call fastcc void @dump_var(ptr noundef nonnull %3)
  br label %42

42:                                               ; preds = %28, %40
  %43 = phi ptr [ %19, %40 ], [ %3, %28 ]
  tail call fastcc void @dump_var(ptr noundef nonnull %43)
  br label %44

44:                                               ; preds = %42, %30, %33, %36, %21, %24
  %45 = phi i32 [ 0, %24 ], [ 0, %21 ], [ 0, %36 ], [ 0, %33 ], [ 1, %30 ], [ 0, %42 ]
  ret i32 %45
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @dump_var(ptr nocapture noundef readonly %0) unnamed_addr #9 {
  %2 = load ptr, ptr %0, align 8, !tbaa !181
  %3 = icmp eq ptr %2, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = load i64, ptr %2, align 8
  %6 = and i64 %5, 65535
  %7 = icmp eq i64 %6, 1
  br i1 %7, label %40, label %8

8:                                                ; preds = %1, %4
  %9 = getelementptr inbounds %struct.tree_decl_minimal, ptr %2, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !16
  %11 = icmp eq ptr %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  %13 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %14 = getelementptr inbounds %struct.tree_identifier, ptr %10, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !16
  %16 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %13, ptr noundef nonnull @.str.36, ptr noundef %15)
  %17 = load i32, ptr @dump_flags, align 4, !tbaa !20
  %18 = and i32 %17, 256
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %37, label %20

20:                                               ; preds = %12
  %21 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.tree_decl_minimal, ptr %2, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %21, ptr noundef nonnull @.str.37, i32 noundef %23)
  br label %37

25:                                               ; preds = %8
  %26 = load i64, ptr %2, align 8
  %27 = and i64 %26, 65535
  %28 = icmp eq i64 %27, 37
  %29 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %30 = getelementptr inbounds %struct.tree_decl_minimal, ptr %2, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !16
  br i1 %28, label %32, label %35

32:                                               ; preds = %25
  %33 = sub i32 0, %31
  %34 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %29, ptr noundef nonnull @.str.38, i32 noundef %33)
  br label %37

35:                                               ; preds = %25
  %36 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %29, ptr noundef nonnull @.str.39, i32 noundef %31)
  br label %37

37:                                               ; preds = %32, %35, %12, %20
  %38 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %39 = tail call i32 @fputc(i32 10, ptr %38)
  br label %46

40:                                               ; preds = %4
  %41 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %42 = tail call i32 @fputc(i32 noundef 32, ptr noundef %41)
  %43 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %44 = load ptr, ptr %0, align 8, !tbaa !181
  %45 = tail call i32 @print_rtl_single(ptr noundef %43, ptr noundef %44) #21
  br label %46

46:                                               ; preds = %40, %37
  %47 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 2
  %48 = load i8, ptr %47, align 4, !tbaa !184
  %49 = icmp sgt i8 %48, 0
  br i1 %49, label %50, label %81

50:                                               ; preds = %46, %76
  %51 = phi i64 [ %77, %76 ], [ 0, %46 ]
  %52 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %53 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 5, i64 %51
  %54 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 5, i64 %51, i32 2
  %55 = load i64, ptr %54, align 8, !tbaa !213
  %56 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %52, ptr noundef nonnull @.str.40, i64 noundef %55)
  %57 = load ptr, ptr %53, align 8, !tbaa !5
  %58 = icmp eq ptr %57, null
  br i1 %58, label %76, label %59

59:                                               ; preds = %50, %69
  %60 = phi ptr [ %74, %69 ], [ %57, %50 ]
  %61 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %62 = tail call i64 @fwrite(ptr nonnull @.str.41, i64 6, i64 1, ptr %61)
  %63 = getelementptr inbounds %struct.location_chain_def, ptr %60, i64 0, i32 3
  %64 = load i32, ptr %63, align 8, !tbaa !224
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %68 = tail call i64 @fwrite(ptr nonnull @.str.42, i64 8, i64 1, ptr %67)
  br label %69

69:                                               ; preds = %66, %59
  %70 = load ptr, ptr @dump_file, align 8, !tbaa !5
  %71 = getelementptr inbounds %struct.location_chain_def, ptr %60, i64 0, i32 1
  %72 = load ptr, ptr %71, align 8, !tbaa !214
  %73 = tail call i32 @print_rtl_single(ptr noundef %70, ptr noundef %72) #21
  %74 = load ptr, ptr %60, align 8, !tbaa !5
  %75 = icmp eq ptr %74, null
  br i1 %75, label %76, label %59, !llvm.loop !329

76:                                               ; preds = %69, %50
  %77 = add nuw nsw i64 %51, 1
  %78 = load i8, ptr %47, align 4, !tbaa !184
  %79 = sext i8 %78 to i64
  %80 = icmp slt i64 %77, %79
  br i1 %80, label %50, label %81, !llvm.loop !330

81:                                               ; preds = %76, %46
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @variable_different_p(ptr noundef %0, ptr noundef %1) unnamed_addr #9 {
  %3 = icmp eq ptr %0, %1
  br i1 %3, label %121, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 2
  %6 = load i8, ptr %5, align 4, !tbaa !184
  %7 = getelementptr inbounds %struct.variable_def, ptr %1, i64 0, i32 2
  %8 = load i8, ptr %7, align 4, !tbaa !184
  %9 = icmp eq i8 %6, %8
  br i1 %9, label %10, label %121

10:                                               ; preds = %4
  %11 = icmp sgt i8 %6, 0
  br i1 %11, label %12, label %121

12:                                               ; preds = %10, %116
  %13 = phi i8 [ %118, %116 ], [ %6, %10 ]
  %14 = phi i64 [ %117, %116 ], [ 0, %10 ]
  %15 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 5, i64 %14
  %16 = getelementptr inbounds %struct.variable_def, ptr %0, i64 0, i32 5, i64 %14, i32 2
  %17 = load i64, ptr %16, align 8, !tbaa !213
  %18 = getelementptr inbounds %struct.variable_def, ptr %1, i64 0, i32 5, i64 %14
  %19 = getelementptr inbounds %struct.variable_def, ptr %1, i64 0, i32 5, i64 %14, i32 2
  %20 = load i64, ptr %19, align 8, !tbaa !213
  %21 = icmp eq i64 %17, %20
  br i1 %21, label %22, label %121

22:                                               ; preds = %12
  %23 = or i64 %14, %17
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %50

25:                                               ; preds = %22
  %26 = load ptr, ptr %0, align 8, !tbaa !181
  %27 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %50, label %29

29:                                               ; preds = %25
  %30 = icmp eq ptr %26, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %29
  %32 = load i64, ptr %26, align 8
  %33 = trunc i64 %32 to i16
  switch i16 %33, label %34 [
    i16 1, label %39
    i16 37, label %39
  ]

34:                                               ; preds = %31
  %35 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %26) #21
  %36 = icmp eq ptr %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %34
  %38 = load i8, ptr %5, align 4, !tbaa !184
  br label %39

39:                                               ; preds = %29, %31, %31, %37
  %40 = phi i8 [ %38, %37 ], [ %13, %31 ], [ %13, %31 ], [ %13, %29 ]
  %41 = icmp eq i8 %40, 1
  br i1 %41, label %43, label %42

42:                                               ; preds = %39
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4354, ptr noundef nonnull @.str.2) #21
  br label %43

43:                                               ; preds = %39, %42
  %44 = load ptr, ptr %0, align 8, !tbaa !181
  %45 = load ptr, ptr %1, align 8, !tbaa !181
  %46 = icmp eq ptr %44, %45
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 4355, ptr noundef nonnull @.str.2) #21
  br label %48

48:                                               ; preds = %43, %47
  %49 = tail call fastcc zeroext i8 @onepart_variable_different_p(ptr noundef nonnull %0, ptr noundef nonnull %1), !range !37
  br label %121

50:                                               ; preds = %25, %34, %22
  %51 = load ptr, ptr %15, align 8, !tbaa !5
  %52 = icmp eq ptr %51, null
  br i1 %52, label %83, label %53

53:                                               ; preds = %50, %80
  %54 = phi ptr [ %81, %80 ], [ %51, %50 ]
  %55 = getelementptr inbounds %struct.location_chain_def, ptr %54, i64 0, i32 1
  br label %56

56:                                               ; preds = %77, %53
  %57 = phi ptr [ %58, %77 ], [ %18, %53 ]
  %58 = load ptr, ptr %57, align 8, !tbaa !5
  %59 = icmp eq ptr %58, null
  br i1 %59, label %121, label %60

60:                                               ; preds = %56
  %61 = load ptr, ptr %55, align 8, !tbaa !214
  %62 = load i32, ptr %61, align 8
  %63 = and i32 %62, 65535
  %64 = icmp eq i32 %63, 37
  %65 = getelementptr inbounds %struct.location_chain_def, ptr %58, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !214
  br i1 %64, label %67, label %77

67:                                               ; preds = %60
  %68 = load i32, ptr %66, align 8
  %69 = and i32 %68, 65535
  %70 = icmp eq i32 %69, 37
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = getelementptr i8, ptr %61, i64 8
  %73 = load i32, ptr %72, align 8, !tbaa !16
  %74 = getelementptr i8, ptr %66, i64 8
  %75 = load i32, ptr %74, align 8, !tbaa !16
  %76 = icmp eq i32 %73, %75
  br i1 %76, label %80, label %77

77:                                               ; preds = %71, %67, %60
  %78 = tail call i32 @rtx_equal_p(ptr noundef nonnull %61, ptr noundef %66) #21
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %56, label %80, !llvm.loop !331

80:                                               ; preds = %77, %71
  %81 = load ptr, ptr %54, align 8, !tbaa !5
  %82 = icmp eq ptr %81, null
  br i1 %82, label %83, label %53, !llvm.loop !332

83:                                               ; preds = %80, %50
  %84 = load ptr, ptr %18, align 8, !tbaa !5
  %85 = icmp eq ptr %84, null
  br i1 %85, label %116, label %86

86:                                               ; preds = %83, %113
  %87 = phi ptr [ %114, %113 ], [ %84, %83 ]
  %88 = getelementptr inbounds %struct.location_chain_def, ptr %87, i64 0, i32 1
  br label %89

89:                                               ; preds = %110, %86
  %90 = phi ptr [ %91, %110 ], [ %15, %86 ]
  %91 = load ptr, ptr %90, align 8, !tbaa !5
  %92 = icmp eq ptr %91, null
  br i1 %92, label %121, label %93

93:                                               ; preds = %89
  %94 = load ptr, ptr %88, align 8, !tbaa !214
  %95 = load i32, ptr %94, align 8
  %96 = and i32 %95, 65535
  %97 = icmp eq i32 %96, 37
  %98 = getelementptr inbounds %struct.location_chain_def, ptr %91, i64 0, i32 1
  %99 = load ptr, ptr %98, align 8, !tbaa !214
  br i1 %97, label %100, label %110

100:                                              ; preds = %93
  %101 = load i32, ptr %99, align 8
  %102 = and i32 %101, 65535
  %103 = icmp eq i32 %102, 37
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = getelementptr i8, ptr %94, i64 8
  %106 = load i32, ptr %105, align 8, !tbaa !16
  %107 = getelementptr i8, ptr %99, i64 8
  %108 = load i32, ptr %107, align 8, !tbaa !16
  %109 = icmp eq i32 %106, %108
  br i1 %109, label %113, label %110

110:                                              ; preds = %104, %100, %93
  %111 = tail call i32 @rtx_equal_p(ptr noundef nonnull %94, ptr noundef %99) #21
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %89, label %113, !llvm.loop !331

113:                                              ; preds = %110, %104
  %114 = load ptr, ptr %87, align 8, !tbaa !5
  %115 = icmp eq ptr %114, null
  br i1 %115, label %116, label %86, !llvm.loop !332

116:                                              ; preds = %113, %83
  %117 = add nuw nsw i64 %14, 1
  %118 = load i8, ptr %5, align 4, !tbaa !184
  %119 = sext i8 %118 to i64
  %120 = icmp slt i64 %117, %119
  br i1 %120, label %12, label %121, !llvm.loop !333

121:                                              ; preds = %12, %116, %56, %89, %10, %4, %2, %48
  %122 = phi i8 [ %49, %48 ], [ 0, %2 ], [ 1, %4 ], [ 0, %10 ], [ 1, %89 ], [ 1, %56 ], [ 1, %12 ], [ 0, %116 ]
  ret i8 %122
}

declare void @print_mem_expr(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @dump_var_slot(ptr nocapture noundef readonly %0, ptr nocapture readnone %1) #9 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  tail call fastcc void @dump_var(ptr noundef %3)
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @emit_notes_for_differences_1(ptr nocapture noundef readonly %0, ptr noundef %1) #9 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = load ptr, ptr %0, align 8, !tbaa !5
  %7 = load ptr, ptr %6, align 8, !tbaa !181
  %8 = icmp eq ptr %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = load i64, ptr %7, align 8
  %11 = and i64 %10, 65535
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.rtx_def, ptr %7, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !16
  %16 = getelementptr inbounds %struct.cselib_val_struct, ptr %15, i64 0, i32 1
  br label %19

17:                                               ; preds = %9, %2
  %18 = getelementptr inbounds %struct.tree_decl_minimal, ptr %7, i64 0, i32 2
  br label %19

19:                                               ; preds = %13, %17
  %20 = phi ptr [ %16, %13 ], [ %18, %17 ]
  %21 = load i32, ptr %20, align 4, !tbaa !16
  %22 = tail call ptr @htab_find_with_hash(ptr noundef %1, ptr noundef %7, i32 noundef %21) #21
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %82

24:                                               ; preds = %19
  %25 = load ptr, ptr %6, align 8, !tbaa !181
  %26 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %24
  %29 = icmp eq ptr %25, null
  br i1 %29, label %38, label %30

30:                                               ; preds = %28
  %31 = load i64, ptr %25, align 8
  %32 = trunc i64 %31 to i16
  switch i16 %32, label %33 [
    i16 1, label %38
    i16 37, label %38
  ]

33:                                               ; preds = %30
  %34 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %25) #21
  %35 = freeze ptr %34
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %33, %24
  br label %38

38:                                               ; preds = %28, %30, %30, %33, %37
  %39 = phi ptr [ @var_pool, %37 ], [ @valvar_pool, %33 ], [ @valvar_pool, %30 ], [ @valvar_pool, %30 ], [ @valvar_pool, %28 ]
  %40 = load ptr, ptr %39, align 8
  %41 = tail call ptr @pool_alloc(ptr noundef %40) #21
  %42 = load ptr, ptr %6, align 8, !tbaa !181
  store ptr %42, ptr %41, align 8, !tbaa !181
  %43 = getelementptr inbounds %struct.variable_def, ptr %41, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %43, i8 0, i64 7, i1 false)
  %44 = load ptr, ptr %6, align 8, !tbaa !181
  %45 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %81, label %47

47:                                               ; preds = %38
  %48 = icmp eq ptr %44, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %47
  %50 = load i64, ptr %44, align 8
  %51 = trunc i64 %50 to i16
  switch i16 %51, label %52 [
    i16 1, label %55
    i16 37, label %55
  ]

52:                                               ; preds = %49
  %53 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %44) #21
  %54 = icmp eq ptr %53, null
  br i1 %54, label %81, label %55

55:                                               ; preds = %47, %49, %49, %52
  %56 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 2
  %57 = load i8, ptr %56, align 4, !tbaa !184
  %58 = icmp eq i8 %57, 1
  br i1 %58, label %60, label %59

59:                                               ; preds = %55
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 7447, ptr noundef nonnull @.str.2) #21
  br label %60

60:                                               ; preds = %55, %59
  %61 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 5
  %62 = load ptr, ptr %61, align 8, !tbaa !5
  %63 = icmp eq ptr %62, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %60, %78
  %65 = phi ptr [ %79, %78 ], [ %62, %60 ]
  %66 = load ptr, ptr %6, align 8, !tbaa !181
  %67 = getelementptr inbounds %struct.location_chain_def, ptr %65, i64 0, i32 1
  %68 = load ptr, ptr %67, align 8, !tbaa !214
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  store ptr %68, ptr %5, align 8, !tbaa !5
  %69 = load i32, ptr %68, align 8
  %70 = trunc i32 %69 to i16
  switch i16 %70, label %76 [
    i16 1, label %71
    i16 2, label %71
    i16 37, label %78
    i16 43, label %73
  ]

71:                                               ; preds = %64, %64
  %72 = call i32 @remove_value_chain(ptr noundef nonnull %5, ptr noundef %66)
  br label %78

73:                                               ; preds = %64
  %74 = getelementptr inbounds %struct.rtx_def, ptr %68, i64 0, i32 1
  %75 = load ptr, ptr %74, align 8, !tbaa !16
  store ptr %75, ptr %5, align 8, !tbaa !5
  br label %76

76:                                               ; preds = %73, %64
  %77 = call i32 @for_each_rtx(ptr noundef nonnull %5, ptr noundef nonnull @remove_value_chain, ptr noundef %66) #21
  br label %78

78:                                               ; preds = %64, %71, %76
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %79 = load ptr, ptr %65, align 8, !tbaa !5
  %80 = icmp eq ptr %79, null
  br i1 %80, label %81, label %64, !llvm.loop !334

81:                                               ; preds = %78, %60, %38, %52
  call fastcc void @variable_was_changed(ptr noundef nonnull %41, ptr noundef null)
  br label %232

82:                                               ; preds = %19
  %83 = tail call fastcc zeroext i8 @variable_different_p(ptr noundef nonnull %6, ptr noundef nonnull %22), !range !37
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %183, label %85

85:                                               ; preds = %82
  %86 = load ptr, ptr %6, align 8, !tbaa !181
  %87 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %182, label %89

89:                                               ; preds = %85
  %90 = icmp eq ptr %86, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %89
  %92 = load i64, ptr %86, align 8
  %93 = trunc i64 %92 to i16
  switch i16 %93, label %94 [
    i16 1, label %97
    i16 37, label %97
  ]

94:                                               ; preds = %91
  %95 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %86) #21
  %96 = icmp eq ptr %95, null
  br i1 %96, label %182, label %97

97:                                               ; preds = %89, %91, %91, %94
  %98 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 2
  %99 = load i8, ptr %98, align 4, !tbaa !184
  %100 = icmp eq i8 %99, 1
  br i1 %100, label %102, label %101

101:                                              ; preds = %97
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 7461, ptr noundef nonnull @.str.2) #21
  br label %102

102:                                              ; preds = %97, %101
  %103 = getelementptr inbounds %struct.variable_def, ptr %22, i64 0, i32 2
  %104 = load i8, ptr %103, align 4, !tbaa !184
  %105 = icmp eq i8 %104, 1
  br i1 %105, label %107, label %106

106:                                              ; preds = %102
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 7462, ptr noundef nonnull @.str.2) #21
  br label %107

107:                                              ; preds = %102, %106
  %108 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 5
  %109 = getelementptr inbounds %struct.variable_def, ptr %22, i64 0, i32 5
  %110 = load ptr, ptr %109, align 8, !tbaa !5
  %111 = load ptr, ptr %108, align 8, !tbaa !5
  %112 = icmp ne ptr %111, null
  %113 = icmp ne ptr %110, null
  %114 = select i1 %112, i1 %113, i1 false
  br i1 %114, label %115, label %138

115:                                              ; preds = %107, %132
  %116 = phi ptr [ %134, %132 ], [ %111, %107 ]
  %117 = phi ptr [ %133, %132 ], [ %110, %107 ]
  %118 = getelementptr inbounds %struct.location_chain_def, ptr %116, i64 0, i32 1
  %119 = load ptr, ptr %118, align 8, !tbaa !214
  %120 = load i32, ptr %119, align 8
  %121 = and i32 %120, 65535
  %122 = icmp eq i32 %121, 37
  %123 = getelementptr inbounds %struct.location_chain_def, ptr %117, i64 0, i32 1
  %124 = load ptr, ptr %123, align 8, !tbaa !214
  br i1 %122, label %125, label %129

125:                                              ; preds = %115
  %126 = load i32, ptr %124, align 8
  %127 = and i32 %126, 65535
  %128 = icmp eq i32 %127, 37
  br i1 %128, label %132, label %129

129:                                              ; preds = %115, %125
  %130 = tail call i32 @rtx_equal_p(ptr noundef nonnull %119, ptr noundef %124) #21
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %142, label %132

132:                                              ; preds = %125, %129
  %133 = load ptr, ptr %117, align 8, !tbaa !5
  %134 = load ptr, ptr %116, align 8, !tbaa !5
  %135 = icmp ne ptr %134, null
  %136 = icmp ne ptr %133, null
  %137 = select i1 %135, i1 %136, i1 false
  br i1 %137, label %115, label %138, !llvm.loop !335

138:                                              ; preds = %132, %107
  %139 = phi ptr [ %110, %107 ], [ %133, %132 ]
  %140 = phi ptr [ %111, %107 ], [ %134, %132 ]
  %141 = icmp eq ptr %139, null
  br i1 %141, label %145, label %142

142:                                              ; preds = %129, %138
  %143 = phi ptr [ %140, %138 ], [ %116, %129 ]
  %144 = phi ptr [ %139, %138 ], [ %117, %129 ]
  br label %148

145:                                              ; preds = %162, %138
  %146 = phi ptr [ %140, %138 ], [ %143, %162 ]
  %147 = icmp eq ptr %146, null
  br i1 %147, label %182, label %165

148:                                              ; preds = %142, %162
  %149 = phi ptr [ %163, %162 ], [ %144, %142 ]
  %150 = load ptr, ptr %6, align 8, !tbaa !181
  %151 = getelementptr inbounds %struct.location_chain_def, ptr %149, i64 0, i32 1
  %152 = load ptr, ptr %151, align 8, !tbaa !214
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  store ptr %152, ptr %4, align 8, !tbaa !5
  %153 = load i32, ptr %152, align 8
  %154 = trunc i32 %153 to i16
  switch i16 %154, label %160 [
    i16 1, label %155
    i16 2, label %155
    i16 37, label %162
    i16 43, label %157
  ]

155:                                              ; preds = %148, %148
  %156 = call i32 @add_value_chain(ptr noundef nonnull %4, ptr noundef %150)
  br label %162

157:                                              ; preds = %148
  %158 = getelementptr inbounds %struct.rtx_def, ptr %152, i64 0, i32 1
  %159 = load ptr, ptr %158, align 8, !tbaa !16
  store ptr %159, ptr %4, align 8, !tbaa !5
  br label %160

160:                                              ; preds = %157, %148
  %161 = call i32 @for_each_rtx(ptr noundef nonnull %4, ptr noundef nonnull @add_value_chain, ptr noundef %150) #21
  br label %162

162:                                              ; preds = %148, %155, %160
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %163 = load ptr, ptr %149, align 8, !tbaa !187
  %164 = icmp eq ptr %163, null
  br i1 %164, label %145, label %148, !llvm.loop !336

165:                                              ; preds = %145, %179
  %166 = phi ptr [ %180, %179 ], [ %146, %145 ]
  %167 = load ptr, ptr %6, align 8, !tbaa !181
  %168 = getelementptr inbounds %struct.location_chain_def, ptr %166, i64 0, i32 1
  %169 = load ptr, ptr %168, align 8, !tbaa !214
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  store ptr %169, ptr %3, align 8, !tbaa !5
  %170 = load i32, ptr %169, align 8
  %171 = trunc i32 %170 to i16
  switch i16 %171, label %177 [
    i16 1, label %172
    i16 2, label %172
    i16 37, label %179
    i16 43, label %174
  ]

172:                                              ; preds = %165, %165
  %173 = call i32 @remove_value_chain(ptr noundef nonnull %3, ptr noundef %167)
  br label %179

174:                                              ; preds = %165
  %175 = getelementptr inbounds %struct.rtx_def, ptr %169, i64 0, i32 1
  %176 = load ptr, ptr %175, align 8, !tbaa !16
  store ptr %176, ptr %3, align 8, !tbaa !5
  br label %177

177:                                              ; preds = %174, %165
  %178 = call i32 @for_each_rtx(ptr noundef nonnull %3, ptr noundef nonnull @remove_value_chain, ptr noundef %167) #21
  br label %179

179:                                              ; preds = %165, %172, %177
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %180 = load ptr, ptr %166, align 8, !tbaa !187
  %181 = icmp eq ptr %180, null
  br i1 %181, label %182, label %165, !llvm.loop !337

182:                                              ; preds = %179, %145, %85, %94
  call fastcc void @variable_was_changed(ptr noundef nonnull %22, ptr noundef null)
  br label %183

183:                                              ; preds = %182, %82
  %184 = icmp eq ptr %6, %22
  br i1 %184, label %232, label %185

185:                                              ; preds = %183
  %186 = getelementptr inbounds %struct.variable_def, ptr %22, i64 0, i32 2
  %187 = load i8, ptr %186, align 4, !tbaa !184
  %188 = icmp sgt i8 %187, 0
  br i1 %188, label %189, label %232

189:                                              ; preds = %185
  %190 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 2
  %191 = getelementptr inbounds %struct.variable_def, ptr %22, i64 0, i32 3
  br label %192

192:                                              ; preds = %189, %227
  %193 = phi i64 [ 0, %189 ], [ %228, %227 ]
  %194 = phi i8 [ %187, %189 ], [ %229, %227 ]
  %195 = getelementptr inbounds %struct.variable_def, ptr %22, i64 0, i32 5, i64 %193
  %196 = getelementptr inbounds %struct.variable_def, ptr %22, i64 0, i32 5, i64 %193, i32 1
  store ptr null, ptr %196, align 8, !tbaa !229
  %197 = load i8, ptr %190, align 4, !tbaa !184
  %198 = icmp eq i8 %197, %194
  br i1 %198, label %199, label %205

199:                                              ; preds = %192
  %200 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 5, i64 %193, i32 2
  %201 = load i64, ptr %200, align 8, !tbaa !213
  %202 = getelementptr inbounds %struct.variable_def, ptr %22, i64 0, i32 5, i64 %193, i32 2
  %203 = load i64, ptr %202, align 8, !tbaa !213
  %204 = icmp eq i64 %201, %203
  br i1 %204, label %206, label %205

205:                                              ; preds = %199, %192
  store i8 1, ptr %191, align 1, !tbaa !211
  br label %227

206:                                              ; preds = %199
  %207 = getelementptr inbounds %struct.variable_def, ptr %6, i64 0, i32 5, i64 %193, i32 1
  %208 = load ptr, ptr %207, align 8, !tbaa !229
  %209 = icmp eq ptr %208, null
  br i1 %209, label %227, label %210

210:                                              ; preds = %206, %218
  %211 = phi ptr [ %212, %218 ], [ %195, %206 ]
  %212 = load ptr, ptr %211, align 8, !tbaa !5
  %213 = icmp eq ptr %212, null
  br i1 %213, label %226, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %struct.location_chain_def, ptr %212, i64 0, i32 1
  %216 = load ptr, ptr %215, align 8, !tbaa !214
  %217 = icmp eq ptr %216, %208
  br i1 %217, label %224, label %218

218:                                              ; preds = %214
  %219 = call i32 @rtx_equal_p(ptr noundef nonnull %208, ptr noundef %216) #21
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %210, label %221, !llvm.loop !338

221:                                              ; preds = %218
  %222 = getelementptr inbounds %struct.location_chain_def, ptr %212, i64 0, i32 1
  %223 = load ptr, ptr %222, align 8, !tbaa !214
  br label %224

224:                                              ; preds = %214, %221
  %225 = phi ptr [ %223, %221 ], [ %208, %214 ]
  store ptr %225, ptr %196, align 8, !tbaa !229
  br label %227

226:                                              ; preds = %210
  store i8 1, ptr %191, align 1, !tbaa !211
  br label %227

227:                                              ; preds = %224, %226, %205, %206
  %228 = add nuw nsw i64 %193, 1
  %229 = load i8, ptr %186, align 4, !tbaa !184
  %230 = sext i8 %229 to i64
  %231 = icmp slt i64 %228, %230
  br i1 %231, label %192, label %232, !llvm.loop !339

232:                                              ; preds = %227, %185, %183, %81
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @emit_notes_for_differences_2(ptr nocapture noundef readonly %0, ptr noundef %1) #9 {
  %3 = alloca ptr, align 8
  %4 = load ptr, ptr %0, align 8, !tbaa !5
  %5 = load ptr, ptr %4, align 8, !tbaa !181
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = load i64, ptr %5, align 8
  %9 = and i64 %8, 65535
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %11, label %15

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.rtx_def, ptr %5, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !16
  %14 = getelementptr inbounds %struct.cselib_val_struct, ptr %13, i64 0, i32 1
  br label %17

15:                                               ; preds = %7, %2
  %16 = getelementptr inbounds %struct.tree_decl_minimal, ptr %5, i64 0, i32 2
  br label %17

17:                                               ; preds = %11, %15
  %18 = phi ptr [ %14, %11 ], [ %16, %15 ]
  %19 = load i32, ptr %18, align 4, !tbaa !16
  %20 = tail call ptr @htab_find_with_hash(ptr noundef %1, ptr noundef %5, i32 noundef %19) #21
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %94

22:                                               ; preds = %17
  %23 = load ptr, ptr %4, align 8, !tbaa !181
  %24 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %60, label %26

26:                                               ; preds = %22
  %27 = icmp eq ptr %23, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %26
  %29 = load i64, ptr %23, align 8
  %30 = trunc i64 %29 to i16
  switch i16 %30, label %31 [
    i16 1, label %34
    i16 37, label %34
  ]

31:                                               ; preds = %28
  %32 = tail call ptr @target_for_debug_bind(ptr noundef nonnull %23) #21
  %33 = icmp eq ptr %32, null
  br i1 %33, label %60, label %34

34:                                               ; preds = %26, %28, %28, %31
  %35 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 2
  %36 = load i8, ptr %35, align 4, !tbaa !184
  %37 = icmp eq i8 %36, 1
  br i1 %37, label %39, label %38

38:                                               ; preds = %34
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 7532, ptr noundef nonnull @.str.2) #21
  br label %39

39:                                               ; preds = %34, %38
  %40 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 5
  %41 = load ptr, ptr %40, align 8, !tbaa !5
  %42 = icmp eq ptr %41, null
  br i1 %42, label %60, label %43

43:                                               ; preds = %39, %57
  %44 = phi ptr [ %58, %57 ], [ %41, %39 ]
  %45 = load ptr, ptr %4, align 8, !tbaa !181
  %46 = getelementptr inbounds %struct.location_chain_def, ptr %44, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8, !tbaa !214
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  store ptr %47, ptr %3, align 8, !tbaa !5
  %48 = load i32, ptr %47, align 8
  %49 = trunc i32 %48 to i16
  switch i16 %49, label %55 [
    i16 1, label %50
    i16 2, label %50
    i16 37, label %57
    i16 43, label %52
  ]

50:                                               ; preds = %43, %43
  %51 = call i32 @add_value_chain(ptr noundef nonnull %3, ptr noundef %45)
  br label %57

52:                                               ; preds = %43
  %53 = getelementptr inbounds %struct.rtx_def, ptr %47, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !16
  store ptr %54, ptr %3, align 8, !tbaa !5
  br label %55

55:                                               ; preds = %52, %43
  %56 = call i32 @for_each_rtx(ptr noundef nonnull %3, ptr noundef nonnull @add_value_chain, ptr noundef %45) #21
  br label %57

57:                                               ; preds = %43, %50, %55
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %58 = load ptr, ptr %44, align 8, !tbaa !5
  %59 = icmp eq ptr %58, null
  br i1 %59, label %60, label %43, !llvm.loop !340

60:                                               ; preds = %57, %39, %22, %31
  %61 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 2
  %62 = load i8, ptr %61, align 4, !tbaa !184
  %63 = icmp sgt i8 %62, 0
  br i1 %63, label %64, label %93

64:                                               ; preds = %60
  %65 = zext i8 %62 to i64
  %66 = and i64 %65, 3
  %67 = icmp ult i8 %62, 4
  br i1 %67, label %83, label %68

68:                                               ; preds = %64
  %69 = and i64 %65, 252
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i64 [ 0, %68 ], [ %80, %70 ]
  %72 = phi i64 [ 0, %68 ], [ %81, %70 ]
  %73 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 5, i64 %71, i32 1
  store ptr null, ptr %73, align 8, !tbaa !229
  %74 = or i64 %71, 1
  %75 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 5, i64 %74, i32 1
  store ptr null, ptr %75, align 8, !tbaa !229
  %76 = or i64 %71, 2
  %77 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 5, i64 %76, i32 1
  store ptr null, ptr %77, align 8, !tbaa !229
  %78 = or i64 %71, 3
  %79 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 5, i64 %78, i32 1
  store ptr null, ptr %79, align 8, !tbaa !229
  %80 = add nuw nsw i64 %71, 4
  %81 = add i64 %72, 4
  %82 = icmp eq i64 %81, %69
  br i1 %82, label %83, label %70, !llvm.loop !341

83:                                               ; preds = %70, %64
  %84 = phi i64 [ 0, %64 ], [ %80, %70 ]
  %85 = icmp eq i64 %66, 0
  br i1 %85, label %93, label %86

86:                                               ; preds = %83, %86
  %87 = phi i64 [ %90, %86 ], [ %84, %83 ]
  %88 = phi i64 [ %91, %86 ], [ 0, %83 ]
  %89 = getelementptr inbounds %struct.variable_def, ptr %4, i64 0, i32 5, i64 %87, i32 1
  store ptr null, ptr %89, align 8, !tbaa !229
  %90 = add nuw nsw i64 %87, 1
  %91 = add i64 %88, 1
  %92 = icmp eq i64 %91, %66
  br i1 %92, label %93, label %86, !llvm.loop !342

93:                                               ; preds = %83, %86, %60
  call fastcc void @variable_was_changed(ptr noundef nonnull %4, ptr noundef null)
  br label %94

94:                                               ; preds = %93, %17
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @emit_notes_for_changes(ptr noundef %0, i32 noundef %1, ptr %2) unnamed_addr #9 {
  %4 = alloca %struct.emit_note_data_def, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #21
  %5 = load ptr, ptr @changed_variables, align 8, !tbaa !5
  %6 = tail call i64 @htab_elements(ptr noundef %5) #21
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %62, label %8

8:                                                ; preds = %3
  %9 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %58, label %11

11:                                               ; preds = %8
  %12 = load ptr, ptr @changed_variables, align 8, !tbaa !5
  tail call void @htab_traverse(ptr noundef %12, ptr noundef nonnull @check_changed_vars_1, ptr noundef %2) #21
  %13 = load ptr, ptr @changed_variables_stack, align 8
  %14 = icmp eq ptr %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11, %35
  %16 = phi ptr [ %36, %35 ], [ %13, %11 ]
  %17 = load i32, ptr %16, align 8, !tbaa !343
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %15, %35, %11
  %20 = load ptr, ptr @changed_values_stack, align 8
  %21 = icmp eq ptr %20, null
  br i1 %21, label %56, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr @changed_values_stack, align 8
  %24 = icmp eq ptr %23, null
  br label %38

25:                                               ; preds = %15
  %26 = load i32, ptr %16, align 8, !tbaa !343
  %27 = add i32 %26, -1
  store i32 %27, ptr %16, align 8, !tbaa !343
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %struct.VEC_variable_base, ptr %16, i64 0, i32 2, i64 %28
  %30 = load ptr, ptr %29, align 8, !tbaa !5
  tail call fastcc void @variable_was_changed(ptr noundef %30, ptr noundef null)
  %31 = load ptr, ptr %30, align 8, !tbaa !181
  %32 = load i64, ptr %31, align 8
  %33 = trunc i64 %32 to i16
  switch i16 %33, label %35 [
    i16 1, label %34
    i16 37, label %34
  ]

34:                                               ; preds = %25, %25
  tail call fastcc void @check_changed_vars_0(ptr noundef nonnull %31, ptr noundef %2)
  br label %35

35:                                               ; preds = %25, %34
  %36 = load ptr, ptr @changed_variables_stack, align 8
  %37 = icmp eq ptr %36, null
  br i1 %37, label %19, label %15, !llvm.loop !345

38:                                               ; preds = %22, %55
  %39 = phi ptr [ %23, %55 ], [ %20, %22 ]
  %40 = load i32, ptr %39, align 8, !tbaa !42
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %38
  %43 = add i32 %40, -1
  store i32 %43, ptr %39, align 8, !tbaa !42
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %struct.VEC_rtx_base, ptr %39, i64 0, i32 2, i64 %44
  %46 = load ptr, ptr %45, align 8, !tbaa !5
  %47 = load i64, ptr %46, align 8
  %48 = and i64 %47, 65535
  %49 = icmp eq i64 %48, 1
  br i1 %49, label %50, label %53

50:                                               ; preds = %42
  %51 = trunc i64 %47 to i32
  %52 = and i32 %51, -1073741825
  store i32 %52, ptr %46, align 8
  br label %55

53:                                               ; preds = %42
  %54 = and i64 %47, -1099511627777
  store i64 %54, ptr %46, align 8
  br label %55

55:                                               ; preds = %50, %53
  br i1 %24, label %56, label %38, !llvm.loop !346

56:                                               ; preds = %38, %55, %19
  %57 = load ptr, ptr @changed_variables, align 8, !tbaa !5
  tail call void @htab_traverse(ptr noundef %57, ptr noundef nonnull @check_changed_vars_3, ptr noundef %2) #21
  br label %58

58:                                               ; preds = %56, %8
  store ptr %0, ptr %4, align 8, !tbaa !347
  %59 = getelementptr inbounds %struct.emit_note_data_def, ptr %4, i64 0, i32 1
  store i32 %1, ptr %59, align 8, !tbaa !349
  %60 = getelementptr inbounds %struct.emit_note_data_def, ptr %4, i64 0, i32 2
  store ptr %2, ptr %60, align 8, !tbaa !350
  %61 = load ptr, ptr @changed_variables, align 8, !tbaa !5
  call void @htab_traverse(ptr noundef %61, ptr noundef nonnull @emit_note_insn_var_location, ptr noundef nonnull %4) #21
  br label %62

62:                                               ; preds = %3, %58
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #21
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @check_changed_vars_1(ptr nocapture noundef readonly %0, ptr noundef %1) #9 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = load ptr, ptr %3, align 8, !tbaa !181
  %5 = load i64, ptr %4, align 8
  %6 = trunc i64 %5 to i16
  switch i16 %6, label %8 [
    i16 1, label %7
    i16 37, label %7
  ]

7:                                                ; preds = %2, %2
  tail call fastcc void @check_changed_vars_0(ptr noundef nonnull %4, ptr noundef %1)
  br label %8

8:                                                ; preds = %2, %7
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @check_changed_vars_3(ptr nocapture noundef readonly %0, ptr noundef %1) #9 {
  %3 = alloca %struct.expand_loc_callback_data, align 8
  %4 = alloca %struct.expand_loc_callback_data, align 8
  %5 = load ptr, ptr %0, align 8, !tbaa !5
  %6 = load ptr, ptr %5, align 8, !tbaa !181
  %7 = load i64, ptr %6, align 8
  %8 = trunc i64 %7 to i16
  switch i16 %8, label %9 [
    i16 1, label %76
    i16 37, label %76
  ]

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.variable_def, ptr %5, i64 0, i32 2
  %11 = load i8, ptr %10, align 4, !tbaa !184
  %12 = icmp sgt i8 %11, 0
  br i1 %12, label %13, label %71

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.expand_loc_callback_data, ptr %4, i64 0, i32 1
  %15 = getelementptr inbounds %struct.expand_loc_callback_data, ptr %4, i64 0, i32 2
  %16 = getelementptr inbounds %struct.variable_def, ptr %5, i64 0, i32 3
  %17 = getelementptr inbounds %struct.expand_loc_callback_data, ptr %3, i64 0, i32 1
  %18 = getelementptr inbounds %struct.expand_loc_callback_data, ptr %3, i64 0, i32 2
  br label %19

19:                                               ; preds = %13, %66
  %20 = phi i64 [ 0, %13 ], [ %67, %66 ]
  %21 = getelementptr inbounds %struct.variable_def, ptr %5, i64 0, i32 5, i64 %20
  %22 = getelementptr inbounds %struct.variable_def, ptr %5, i64 0, i32 5, i64 %20, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !229
  %24 = icmp eq ptr %23, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %19
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #21
  %26 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 7009, ptr noundef nonnull @.str.2) #21
  br label %29

29:                                               ; preds = %25, %28
  store ptr %1, ptr %4, align 8, !tbaa !351
  store i8 1, ptr %14, align 8, !tbaa !353
  store i8 0, ptr %15, align 1, !tbaa !354
  %30 = load ptr, ptr @scratch_regs, align 8, !tbaa !5
  %31 = call zeroext i8 @cselib_dummy_expand_value_rtx_cb(ptr noundef nonnull %23, ptr noundef %30, i32 noundef 5, ptr noundef nonnull @vt_expand_loc_callback, ptr noundef nonnull %4) #21
  %32 = load i8, ptr %15, align 1, !tbaa !354
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #21
  %33 = icmp eq i8 %31, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = icmp eq i8 %32, 0
  br i1 %35, label %66, label %36

36:                                               ; preds = %34
  store i8 1, ptr %16, align 1, !tbaa !211
  br label %66

37:                                               ; preds = %29, %19
  %38 = load ptr, ptr %21, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %37, %54
  %41 = phi ptr [ %55, %54 ], [ %38, %37 ]
  %42 = getelementptr inbounds %struct.location_chain_def, ptr %41, i64 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !214
  %44 = load ptr, ptr %22, align 8, !tbaa !229
  %45 = icmp eq ptr %43, %44
  br i1 %45, label %54, label %46

46:                                               ; preds = %40
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #21
  %47 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 7009, ptr noundef nonnull @.str.2) #21
  br label %50

50:                                               ; preds = %46, %49
  store ptr %1, ptr %3, align 8, !tbaa !351
  store i8 1, ptr %17, align 8, !tbaa !353
  store i8 0, ptr %18, align 1, !tbaa !354
  %51 = load ptr, ptr @scratch_regs, align 8, !tbaa !5
  %52 = call zeroext i8 @cselib_dummy_expand_value_rtx_cb(ptr noundef %43, ptr noundef %51, i32 noundef 5, ptr noundef nonnull @vt_expand_loc_callback, ptr noundef nonnull %3) #21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #21
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %40, %50
  %55 = load ptr, ptr %41, align 8, !tbaa !5
  %56 = icmp eq ptr %55, null
  br i1 %56, label %57, label %40, !llvm.loop !355

57:                                               ; preds = %54, %37
  %58 = load ptr, ptr %22, align 8, !tbaa !229
  %59 = icmp eq ptr %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %57
  store i8 1, ptr %16, align 1, !tbaa !211
  br label %64

61:                                               ; preds = %50
  %62 = getelementptr inbounds %struct.location_chain_def, ptr %41, i64 0, i32 1
  store i8 1, ptr %16, align 1, !tbaa !211
  %63 = load ptr, ptr %62, align 8, !tbaa !214
  br label %64

64:                                               ; preds = %57, %60, %61
  %65 = phi ptr [ %63, %61 ], [ null, %60 ], [ null, %57 ]
  store ptr %65, ptr %22, align 8, !tbaa !229
  br label %66

66:                                               ; preds = %34, %36, %64
  %67 = add nuw nsw i64 %20, 1
  %68 = load i8, ptr %10, align 4, !tbaa !184
  %69 = sext i8 %68 to i64
  %70 = icmp slt i64 %67, %69
  br i1 %70, label %19, label %71, !llvm.loop !356

71:                                               ; preds = %66, %9
  %72 = phi i8 [ %11, %9 ], [ %68, %66 ]
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %71
  %75 = getelementptr inbounds %struct.variable_def, ptr %5, i64 0, i32 3
  store i8 1, ptr %75, align 1, !tbaa !211
  br label %76

76:                                               ; preds = %2, %2, %71, %74
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @emit_note_insn_var_location(ptr noundef %0, ptr nocapture noundef readonly %1) #9 {
  %3 = alloca %struct.expand_loc_callback_data, align 8
  %4 = alloca %struct.expand_loc_callback_data, align 8
  %5 = alloca %struct.expand_loc_callback_data, align 8
  %6 = alloca [16 x i64], align 16
  %7 = alloca [16 x ptr], align 16
  %8 = load ptr, ptr %0, align 8, !tbaa !5
  %9 = load ptr, ptr %1, align 8, !tbaa !347
  %10 = getelementptr inbounds %struct.emit_note_data_def, ptr %1, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !349
  %12 = getelementptr inbounds %struct.emit_note_data_def, ptr %1, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !350
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %6) #21
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %7) #21
  %14 = load ptr, ptr %8, align 8, !tbaa !181
  %15 = load i64, ptr %14, align 8
  %16 = trunc i64 %15 to i16
  switch i16 %16, label %17 [
    i16 1, label %398
    i16 37, label %397
  ]

17:                                               ; preds = %2
  %18 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 2
  %22 = load i8, ptr %21, align 4, !tbaa !184
  %23 = icmp sgt i8 %22, 0
  br i1 %23, label %24, label %42

24:                                               ; preds = %20
  %25 = zext i8 %22 to i64
  %26 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 3
  br label %27

27:                                               ; preds = %24, %39
  %28 = phi i64 [ 0, %24 ], [ %40, %39 ]
  %29 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 5, i64 %28, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !229
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %39

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 5, i64 %28
  %34 = load ptr, ptr %33, align 8, !tbaa !185
  %35 = icmp eq ptr %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.location_chain_def, ptr %34, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !214
  store ptr %38, ptr %29, align 8, !tbaa !229
  store i8 1, ptr %26, align 1, !tbaa !211
  br label %39

39:                                               ; preds = %27, %32, %36
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %25
  br i1 %41, label %42, label %27, !llvm.loop !357

42:                                               ; preds = %39, %20
  %43 = icmp eq i8 %22, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 3
  store i8 1, ptr %45, align 1, !tbaa !211
  br label %46

46:                                               ; preds = %42, %44, %17
  %47 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 3
  %48 = load i8, ptr %47, align 1, !tbaa !211
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %379, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 2
  %52 = load i8, ptr %51, align 4, !tbaa !184
  %53 = icmp sgt i8 %52, 0
  br i1 %53, label %54, label %316

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.expand_loc_callback_data, ptr %5, i64 0, i32 1
  %56 = getelementptr inbounds %struct.expand_loc_callback_data, ptr %5, i64 0, i32 2
  %57 = getelementptr inbounds %struct.tree_decl_common, ptr %14, i64 0, i32 2
  br label %58

58:                                               ; preds = %54, %306
  %59 = phi i32 [ 0, %54 ], [ %312, %306 ]
  %60 = phi i64 [ 0, %54 ], [ %310, %306 ]
  %61 = phi i32 [ 1, %54 ], [ %309, %306 ]
  %62 = phi i8 [ 1, %54 ], [ %308, %306 ]
  %63 = phi i32 [ 0, %54 ], [ %307, %306 ]
  %64 = sext i32 %59 to i64
  %65 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 5, i64 %64
  %66 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 5, i64 %64, i32 2
  %67 = load i64, ptr %66, align 8, !tbaa !213
  %68 = icmp slt i64 %60, %67
  br i1 %68, label %316, label %69

69:                                               ; preds = %58
  %70 = icmp sgt i64 %60, %67
  br i1 %70, label %306, label %71

71:                                               ; preds = %69
  %72 = sext i32 %63 to i64
  %73 = getelementptr inbounds [16 x i64], ptr %6, i64 0, i64 %72
  store i64 %67, ptr %73, align 8, !tbaa !70
  %74 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 5, i64 %64, i32 1
  %75 = load ptr, ptr %74, align 8, !tbaa !229
  %76 = icmp eq ptr %75, null
  br i1 %76, label %306, label %77

77:                                               ; preds = %71
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #21
  %78 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %77
  store ptr %13, ptr %5, align 8, !tbaa !351
  store i8 0, ptr %55, align 8, !tbaa !353
  store i8 0, ptr %56, align 1, !tbaa !354
  %81 = load ptr, ptr @scratch_regs, align 8, !tbaa !5
  %82 = call ptr @cselib_expand_value_rtx_cb(ptr noundef nonnull %75, ptr noundef %81, i32 noundef 5, ptr noundef nonnull @vt_expand_loc_callback, ptr noundef nonnull %5) #21
  %83 = icmp eq ptr %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %80
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #21
  br label %306

85:                                               ; preds = %80
  %86 = load i32, ptr %82, align 8
  %87 = and i32 %86, 65535
  %88 = icmp eq i32 %87, 43
  br i1 %88, label %91, label %89

89:                                               ; preds = %77, %85
  %90 = phi ptr [ %82, %85 ], [ %75, %77 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #21
  br label %95

91:                                               ; preds = %85
  %92 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 40), align 8, !tbaa !258
  %93 = call ptr %92(ptr noundef nonnull %82) #21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #21
  %94 = icmp eq ptr %93, null
  br i1 %94, label %306, label %95

95:                                               ; preds = %89, %91
  %96 = phi ptr [ %90, %89 ], [ %93, %91 ]
  %97 = getelementptr inbounds [16 x ptr], ptr %7, i64 0, i64 %72
  store ptr %96, ptr %97, align 8, !tbaa !5
  %98 = load ptr, ptr %74, align 8, !tbaa !229
  %99 = load i32, ptr %98, align 8
  %100 = lshr i32 %99, 16
  %101 = and i32 %100, 255
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %119

103:                                              ; preds = %95
  %104 = load ptr, ptr %8, align 8, !tbaa !181
  %105 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %119, label %107

107:                                              ; preds = %103
  %108 = icmp eq ptr %104, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %107
  %110 = load i64, ptr %104, align 8
  %111 = trunc i64 %110 to i16
  switch i16 %111, label %112 [
    i16 1, label %115
    i16 37, label %115
  ]

112:                                              ; preds = %109
  %113 = call ptr @target_for_debug_bind(ptr noundef nonnull %104) #21
  %114 = icmp eq ptr %113, null
  br i1 %114, label %119, label %115

115:                                              ; preds = %107, %109, %109, %112
  %116 = load i64, ptr %57, align 8
  %117 = trunc i64 %116 to i32
  %118 = and i32 %117, 255
  br label %119

119:                                              ; preds = %103, %115, %112, %95
  %120 = phi i32 [ %118, %115 ], [ 0, %112 ], [ %101, %95 ], [ 0, %103 ]
  br label %121

121:                                              ; preds = %125, %119
  %122 = phi ptr [ %65, %119 ], [ %123, %125 ]
  %123 = load ptr, ptr %122, align 8, !tbaa !5
  %124 = icmp eq ptr %123, null
  br i1 %124, label %133, label %125

125:                                              ; preds = %121
  %126 = load ptr, ptr %74, align 8, !tbaa !229
  %127 = getelementptr inbounds %struct.location_chain_def, ptr %123, i64 0, i32 1
  %128 = load ptr, ptr %127, align 8, !tbaa !214
  %129 = icmp eq ptr %126, %128
  br i1 %129, label %130, label %121, !llvm.loop !358

130:                                              ; preds = %125
  %131 = getelementptr inbounds %struct.location_chain_def, ptr %123, i64 0, i32 3
  %132 = load i32, ptr %131, align 8, !tbaa !224
  br label %134

133:                                              ; preds = %121
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 7106, ptr noundef nonnull @.str.2) #21
  br label %134

134:                                              ; preds = %130, %133
  %135 = phi i32 [ %132, %130 ], [ %61, %133 ]
  %136 = zext i32 %120 to i64
  %137 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %136
  %138 = load i8, ptr %137, align 1, !tbaa !16
  %139 = zext i8 %138 to i64
  %140 = add nsw i64 %67, %139
  %141 = getelementptr inbounds [87 x i8], ptr @mode_wider, i64 0, i64 %136
  %142 = load i8, ptr %141, align 1, !tbaa !16
  %143 = zext i8 %142 to i32
  %144 = load i8, ptr %51, align 4, !tbaa !184
  %145 = sext i8 %144 to i64
  br label %146

146:                                              ; preds = %150, %134
  %147 = phi i64 [ %148, %150 ], [ %64, %134 ]
  %148 = add nsw i64 %147, 1
  %149 = icmp slt i64 %148, %145
  br i1 %149, label %150, label %302

150:                                              ; preds = %146
  %151 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 5, i64 %148, i32 2
  %152 = load i64, ptr %151, align 8, !tbaa !213
  %153 = icmp sgt i64 %140, %152
  br i1 %153, label %146, label %154, !llvm.loop !359

154:                                              ; preds = %150
  %155 = trunc i64 %148 to i32
  %156 = icmp eq i8 %142, 0
  br i1 %156, label %302, label %157

157:                                              ; preds = %154
  %158 = shl i64 %148, 32
  %159 = ashr exact i64 %158, 32
  %160 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 5, i64 %159, i32 1
  %161 = load ptr, ptr %160, align 8, !tbaa !229
  %162 = icmp eq ptr %161, null
  br i1 %162, label %302, label %163

163:                                              ; preds = %157
  %164 = load i32, ptr %161, align 8
  %165 = lshr i32 %164, 16
  %166 = and i32 %165, 255
  %167 = icmp eq i32 %120, %166
  br i1 %167, label %168, label %302

168:                                              ; preds = %163
  %169 = load i32, ptr %96, align 8
  %170 = trunc i32 %169 to i16
  switch i16 %170, label %302 [
    i16 37, label %171
    i16 43, label %171
  ]

171:                                              ; preds = %168, %168
  %172 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 5, i64 %159, i32 2
  %173 = load i64, ptr %172, align 8, !tbaa !213
  %174 = icmp eq i64 %140, %173
  br i1 %174, label %175, label %302

175:                                              ; preds = %171
  %176 = call fastcc ptr @vt_expand_loc(ptr noundef nonnull %161, ptr noundef %13)
  %177 = icmp eq ptr %176, null
  br i1 %177, label %302, label %178

178:                                              ; preds = %175
  %179 = load i32, ptr %96, align 8
  %180 = load i32, ptr %176, align 8
  %181 = xor i32 %180, %179
  %182 = and i32 %181, 65535
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %302

184:                                              ; preds = %178
  %185 = trunc i32 %179 to i16
  switch i16 %185, label %302 [
    i16 37, label %186
    i16 43, label %220
  ]

186:                                              ; preds = %184
  %187 = getelementptr i8, ptr %96, i64 8
  %188 = load i32, ptr %187, align 8, !tbaa !16
  %189 = zext i32 %188 to i64
  %190 = getelementptr inbounds [53 x [87 x i8]], ptr @hard_regno_nregs, i64 0, i64 %189, i64 %136
  %191 = load i8, ptr %190, align 1, !tbaa !16
  %192 = zext i8 %191 to i32
  %193 = shl nuw nsw i32 %192, 1
  %194 = zext i8 %142 to i64
  %195 = getelementptr inbounds [53 x [87 x i8]], ptr @hard_regno_nregs, i64 0, i64 %189, i64 %194
  %196 = load i8, ptr %195, align 1, !tbaa !16
  %197 = zext i8 %196 to i32
  %198 = icmp eq i32 %193, %197
  br i1 %198, label %199, label %302

199:                                              ; preds = %186
  %200 = add i32 %188, %192
  %201 = getelementptr i8, ptr %176, i64 8
  %202 = load i32, ptr %201, align 8, !tbaa !16
  %203 = icmp eq i32 %200, %202
  br i1 %203, label %204, label %302

204:                                              ; preds = %199
  %205 = call ptr @simplify_subreg(i32 noundef %143, ptr noundef nonnull %96, i32 noundef %120, i32 noundef 0) #21
  %206 = icmp eq ptr %205, null
  br i1 %206, label %302, label %207

207:                                              ; preds = %204
  %208 = load i32, ptr %205, align 8
  %209 = and i32 %208, 65535
  %210 = icmp eq i32 %209, 37
  br i1 %210, label %211, label %302

211:                                              ; preds = %207
  %212 = getelementptr i8, ptr %205, i64 8
  %213 = load i32, ptr %212, align 8, !tbaa !16
  %214 = load i32, ptr %187, align 8, !tbaa !16
  %215 = icmp eq i32 %213, %214
  br i1 %215, label %216, label %302

216:                                              ; preds = %211
  %217 = getelementptr inbounds %struct.rtx_def, ptr %96, i64 0, i32 1, i32 0, i32 0, i64 2
  %218 = load ptr, ptr %217, align 8, !tbaa !16
  %219 = getelementptr inbounds %struct.rtx_def, ptr %205, i64 0, i32 1, i32 0, i32 0, i64 2
  store ptr %218, ptr %219, align 8, !tbaa !16
  br label %295

220:                                              ; preds = %184
  %221 = getelementptr inbounds %struct.rtx_def, ptr %176, i64 0, i32 1
  %222 = load ptr, ptr %221, align 8, !tbaa !16
  %223 = load i32, ptr %222, align 8
  %224 = and i32 %223, 65535
  %225 = icmp eq i32 %224, 49
  br i1 %225, label %226, label %302

226:                                              ; preds = %220
  %227 = getelementptr inbounds %struct.rtx_def, ptr %222, i64 0, i32 1
  %228 = load ptr, ptr %227, align 8, !tbaa !16
  %229 = load i32, ptr %228, align 8
  %230 = and i32 %229, 65535
  %231 = icmp eq i32 %230, 37
  br i1 %231, label %232, label %302

232:                                              ; preds = %226
  %233 = getelementptr inbounds %struct.rtx_def, ptr %222, i64 0, i32 1, i32 0, i32 0, i64 1
  %234 = load ptr, ptr %233, align 8, !tbaa !16
  %235 = load i32, ptr %234, align 8
  %236 = and i32 %235, 65535
  %237 = icmp eq i32 %236, 30
  br i1 %237, label %238, label %302

238:                                              ; preds = %232
  %239 = getelementptr inbounds %struct.rtx_def, ptr %96, i64 0, i32 1
  %240 = load ptr, ptr %239, align 8, !tbaa !16
  %241 = load i32, ptr %240, align 8
  %242 = and i32 %241, 65535
  %243 = icmp eq i32 %242, 37
  br i1 %243, label %244, label %256

244:                                              ; preds = %238
  %245 = call i32 @rtx_equal_p(ptr noundef nonnull %240, ptr noundef nonnull %228) #21
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %256, label %247

247:                                              ; preds = %244
  %248 = load ptr, ptr %221, align 8, !tbaa !16
  %249 = getelementptr inbounds %struct.rtx_def, ptr %248, i64 0, i32 1, i32 0, i32 0, i64 1
  %250 = load ptr, ptr %249, align 8, !tbaa !16
  %251 = getelementptr inbounds %struct.rtx_def, ptr %250, i64 0, i32 1
  %252 = load i64, ptr %251, align 8, !tbaa !16
  %253 = load i8, ptr %137, align 1, !tbaa !16
  %254 = zext i8 %253 to i64
  %255 = icmp eq i64 %252, %254
  br i1 %255, label %290, label %256

256:                                              ; preds = %247, %244, %238
  %257 = load ptr, ptr %239, align 8, !tbaa !16
  %258 = load i32, ptr %257, align 8
  %259 = and i32 %258, 65535
  %260 = icmp eq i32 %259, 49
  br i1 %260, label %261, label %302

261:                                              ; preds = %256
  %262 = getelementptr inbounds %struct.rtx_def, ptr %257, i64 0, i32 1, i32 0, i32 0, i64 1
  %263 = load ptr, ptr %262, align 8, !tbaa !16
  %264 = load i32, ptr %263, align 8
  %265 = and i32 %264, 65535
  %266 = icmp eq i32 %265, 30
  br i1 %266, label %267, label %302

267:                                              ; preds = %261
  %268 = getelementptr inbounds %struct.rtx_def, ptr %257, i64 0, i32 1
  %269 = load ptr, ptr %268, align 8, !tbaa !16
  %270 = load ptr, ptr %221, align 8, !tbaa !16
  %271 = getelementptr inbounds %struct.rtx_def, ptr %270, i64 0, i32 1
  %272 = load ptr, ptr %271, align 8, !tbaa !16
  %273 = call i32 @rtx_equal_p(ptr noundef %269, ptr noundef %272) #21
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %302, label %275

275:                                              ; preds = %267
  %276 = load ptr, ptr %239, align 8, !tbaa !16
  %277 = getelementptr inbounds %struct.rtx_def, ptr %276, i64 0, i32 1, i32 0, i32 0, i64 1
  %278 = load ptr, ptr %277, align 8, !tbaa !16
  %279 = getelementptr inbounds %struct.rtx_def, ptr %278, i64 0, i32 1
  %280 = load i64, ptr %279, align 8, !tbaa !16
  %281 = load i8, ptr %137, align 1, !tbaa !16
  %282 = zext i8 %281 to i64
  %283 = add nsw i64 %280, %282
  %284 = load ptr, ptr %221, align 8, !tbaa !16
  %285 = getelementptr inbounds %struct.rtx_def, ptr %284, i64 0, i32 1, i32 0, i32 0, i64 1
  %286 = load ptr, ptr %285, align 8, !tbaa !16
  %287 = getelementptr inbounds %struct.rtx_def, ptr %286, i64 0, i32 1
  %288 = load i64, ptr %287, align 8, !tbaa !16
  %289 = icmp eq i64 %283, %288
  br i1 %289, label %290, label %302

290:                                              ; preds = %247, %275
  %291 = call ptr @adjust_address_1(ptr noundef nonnull %96, i32 noundef %143, i64 noundef 0, i32 noundef 0, i32 noundef 1) #21
  %292 = icmp eq ptr %291, null
  br i1 %292, label %302, label %293

293:                                              ; preds = %290
  %294 = zext i8 %142 to i64
  br label %295

295:                                              ; preds = %293, %216
  %296 = phi i64 [ %294, %293 ], [ %194, %216 ]
  %297 = phi ptr [ %291, %293 ], [ %205, %216 ]
  store ptr %297, ptr %97, align 8, !tbaa !5
  %298 = getelementptr inbounds [87 x i8], ptr @mode_size, i64 0, i64 %296
  %299 = load i8, ptr %298, align 1, !tbaa !16
  %300 = zext i8 %299 to i64
  %301 = add nsw i64 %67, %300
  br label %302

302:                                              ; preds = %146, %184, %186, %199, %207, %211, %220, %226, %232, %256, %261, %267, %275, %204, %290, %295, %168, %178, %175, %171, %163, %157, %154
  %303 = phi i64 [ %140, %178 ], [ %140, %175 ], [ %140, %171 ], [ %140, %163 ], [ %140, %157 ], [ %140, %154 ], [ %140, %168 ], [ %301, %295 ], [ %140, %290 ], [ %140, %204 ], [ %140, %275 ], [ %140, %267 ], [ %140, %261 ], [ %140, %256 ], [ %140, %232 ], [ %140, %226 ], [ %140, %220 ], [ %140, %211 ], [ %140, %207 ], [ %140, %199 ], [ %140, %186 ], [ %140, %184 ], [ %140, %146 ]
  %304 = phi i32 [ %59, %178 ], [ %59, %175 ], [ %59, %171 ], [ %59, %163 ], [ %59, %157 ], [ %59, %154 ], [ %59, %168 ], [ %155, %295 ], [ %59, %290 ], [ %59, %204 ], [ %59, %275 ], [ %59, %267 ], [ %59, %261 ], [ %59, %256 ], [ %59, %232 ], [ %59, %226 ], [ %59, %220 ], [ %59, %211 ], [ %59, %207 ], [ %59, %199 ], [ %59, %186 ], [ %59, %184 ], [ %59, %146 ]
  %305 = add nsw i32 %63, 1
  br label %306

306:                                              ; preds = %302, %69, %71, %91, %84
  %307 = phi i32 [ %63, %84 ], [ %63, %91 ], [ %63, %71 ], [ %63, %69 ], [ %305, %302 ]
  %308 = phi i8 [ 0, %84 ], [ 0, %91 ], [ 0, %71 ], [ %62, %69 ], [ %62, %302 ]
  %309 = phi i32 [ %61, %84 ], [ %61, %91 ], [ %61, %71 ], [ %61, %69 ], [ %135, %302 ]
  %310 = phi i64 [ %60, %84 ], [ %60, %91 ], [ %60, %71 ], [ %60, %69 ], [ %303, %302 ]
  %311 = phi i32 [ %59, %84 ], [ %59, %91 ], [ %59, %71 ], [ %59, %69 ], [ %304, %302 ]
  %312 = add nsw i32 %311, 1
  %313 = load i8, ptr %51, align 4, !tbaa !184
  %314 = sext i8 %313 to i32
  %315 = icmp slt i32 %312, %314
  br i1 %315, label %58, label %316, !llvm.loop !360

316:                                              ; preds = %306, %58, %50
  %317 = phi i32 [ 0, %50 ], [ %63, %58 ], [ %307, %306 ]
  %318 = phi i32 [ 1, %50 ], [ %61, %58 ], [ %309, %306 ]
  %319 = phi i64 [ 0, %50 ], [ %60, %58 ], [ %310, %306 ]
  %320 = phi i8 [ 1, %50 ], [ 0, %58 ], [ %308, %306 ]
  %321 = getelementptr inbounds %struct.tree_common, ptr %14, i64 0, i32 2
  %322 = load ptr, ptr %321, align 8, !tbaa !16
  %323 = getelementptr inbounds %struct.tree_type, ptr %322, i64 0, i32 3
  %324 = load ptr, ptr %323, align 8, !tbaa !16
  %325 = getelementptr inbounds %struct.tree_int_cst, ptr %324, i64 0, i32 1
  %326 = load i64, ptr %325, align 8, !tbaa !16
  %327 = icmp ult i64 %319, %326
  %328 = load i32, ptr @flag_var_tracking_uninit, align 4, !tbaa !20
  %329 = icmp eq i32 %328, 0
  %330 = select i1 %329, i32 2, i32 %318
  %331 = icmp eq i8 %320, 0
  %332 = select i1 %327, i1 true, i1 %331
  br i1 %332, label %362, label %333

333:                                              ; preds = %316
  switch i32 %317, label %334 [
    i32 1, label %338
    i32 0, label %365
  ]

334:                                              ; preds = %333
  %335 = icmp sgt i32 %317, 0
  br i1 %335, label %336, label %359

336:                                              ; preds = %334
  %337 = zext i32 %317 to i64
  br label %349

338:                                              ; preds = %333
  %339 = load i64, ptr %6, align 16, !tbaa !70
  %340 = icmp eq i64 %339, 0
  %341 = load ptr, ptr %7, align 16, !tbaa !5
  br i1 %340, label %342, label %346

342:                                              ; preds = %338
  %343 = load i32, ptr %341, align 8
  %344 = and i32 %343, 65535
  %345 = icmp eq i32 %344, 15
  br i1 %345, label %346, label %362

346:                                              ; preds = %342, %338
  %347 = call ptr @gen_rtx_CONST_INT(i32 noundef 0, i64 noundef %339) #21
  %348 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 3, i32 noundef 0, ptr noundef %341, ptr noundef %347) #21
  br label %362

349:                                              ; preds = %336, %349
  %350 = phi i64 [ 0, %336 ], [ %357, %349 ]
  %351 = getelementptr inbounds [16 x ptr], ptr %7, i64 0, i64 %350
  %352 = load ptr, ptr %351, align 8, !tbaa !5
  %353 = getelementptr inbounds [16 x i64], ptr %6, i64 0, i64 %350
  %354 = load i64, ptr %353, align 8, !tbaa !70
  %355 = call ptr @gen_rtx_CONST_INT(i32 noundef 0, i64 noundef %354) #21
  %356 = call ptr @gen_rtx_fmt_ee_stat(i32 noundef 3, i32 noundef 0, ptr noundef %352, ptr noundef %355) #21
  store ptr %356, ptr %351, align 8, !tbaa !5
  %357 = add nuw nsw i64 %350, 1
  %358 = icmp eq i64 %357, %337
  br i1 %358, label %359, label %349, !llvm.loop !361

359:                                              ; preds = %349, %334
  %360 = call ptr @gen_rtvec_v(i32 noundef %317, ptr noundef nonnull %7) #21
  %361 = call ptr @gen_rtx_fmt_E_stat(i32 noundef 15, i32 noundef 0, ptr noundef %360) #21
  br label %362

362:                                              ; preds = %346, %342, %316, %359
  %363 = phi ptr [ %361, %359 ], [ null, %316 ], [ %348, %346 ], [ %341, %342 ]
  %364 = call ptr @gen_rtx_fmt_tei_stat(i32 noundef 138, i32 noundef 0, ptr noundef nonnull %14, ptr noundef %363, i32 noundef %330) #21
  br label %365

365:                                              ; preds = %362, %333
  %366 = phi ptr [ null, %333 ], [ %364, %362 ]
  %367 = icmp eq i32 %11, 0
  br i1 %367, label %374, label %368

368:                                              ; preds = %365
  %369 = call ptr @emit_note_after(i32 noundef 9, ptr noundef %9) #21
  %370 = icmp eq i32 %11, 2
  br i1 %370, label %371, label %376

371:                                              ; preds = %368
  %372 = load i32, ptr %369, align 8
  %373 = or i32 %372, 33554432
  store i32 %373, ptr %369, align 8
  br label %376

374:                                              ; preds = %365
  %375 = call ptr @emit_note_before(i32 noundef 9, ptr noundef %9) #21
  br label %376

376:                                              ; preds = %368, %371, %374
  %377 = phi ptr [ %369, %371 ], [ %369, %368 ], [ %375, %374 ]
  %378 = getelementptr inbounds %struct.rtx_def, ptr %377, i64 0, i32 1, i32 0, i32 2
  store ptr %366, ptr %378, align 8, !tbaa !16
  br label %379

379:                                              ; preds = %452, %420, %398, %407, %46, %376
  %380 = load ptr, ptr %8, align 8, !tbaa !181
  %381 = load i64, ptr %380, align 8
  %382 = and i64 %381, 65535
  %383 = icmp eq i64 %382, 1
  br i1 %383, label %384, label %387

384:                                              ; preds = %379
  %385 = trunc i64 %381 to i32
  %386 = and i32 %385, -1073741825
  store i32 %386, ptr %380, align 8
  br label %389

387:                                              ; preds = %379
  %388 = and i64 %381, -1099511627777
  store i64 %388, ptr %380, align 8
  br label %389

389:                                              ; preds = %384, %387
  %390 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 3
  store i8 0, ptr %390, align 1, !tbaa !211
  %391 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 4
  %392 = load i8, ptr %391, align 2, !tbaa !212
  %393 = icmp eq i8 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %389
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 7243, ptr noundef nonnull @.str.2) #21
  br label %395

395:                                              ; preds = %389, %394
  store i8 0, ptr %391, align 2, !tbaa !212
  %396 = load ptr, ptr @changed_variables, align 8, !tbaa !5
  call void @htab_clear_slot(ptr noundef %396, ptr noundef nonnull %0) #21
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %7) #21
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %6) #21
  ret i32 1

397:                                              ; preds = %2
  br label %398

398:                                              ; preds = %2, %397
  %399 = phi i1 [ true, %2 ], [ false, %397 ]
  %400 = trunc i64 %15 to i32
  %401 = lshr i32 %400, 30
  %402 = lshr i64 %15, 40
  %403 = trunc i64 %402 to i32
  %404 = select i1 %399, i32 %401, i32 %403
  %405 = and i32 %404, 1
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %379, label %407

407:                                              ; preds = %398
  %408 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 2
  %409 = load i8, ptr %408, align 4, !tbaa !184
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %379, label %411

411:                                              ; preds = %407
  %412 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 5
  %413 = getelementptr inbounds %struct.variable_def, ptr %8, i64 0, i32 5, i64 0, i32 1
  %414 = load ptr, ptr %413, align 8, !tbaa !229
  %415 = icmp eq ptr %414, null
  br i1 %415, label %426, label %416

416:                                              ; preds = %411
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #21
  %417 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %420

419:                                              ; preds = %416
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 7009, ptr noundef nonnull @.str.2) #21
  br label %420

420:                                              ; preds = %416, %419
  store ptr %13, ptr %4, align 8, !tbaa !351
  %421 = getelementptr inbounds %struct.expand_loc_callback_data, ptr %4, i64 0, i32 1
  store i8 1, ptr %421, align 8, !tbaa !353
  %422 = getelementptr inbounds %struct.expand_loc_callback_data, ptr %4, i64 0, i32 2
  store i8 0, ptr %422, align 1, !tbaa !354
  %423 = load ptr, ptr @scratch_regs, align 8, !tbaa !5
  %424 = call zeroext i8 @cselib_dummy_expand_value_rtx_cb(ptr noundef nonnull %414, ptr noundef %423, i32 noundef 5, ptr noundef nonnull @vt_expand_loc_callback, ptr noundef nonnull %4) #21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #21
  %425 = icmp eq i8 %424, 0
  br i1 %425, label %426, label %379

426:                                              ; preds = %420, %411
  %427 = load ptr, ptr %412, align 8, !tbaa !5
  %428 = icmp eq ptr %427, null
  br i1 %428, label %452, label %429

429:                                              ; preds = %426
  %430 = getelementptr inbounds %struct.expand_loc_callback_data, ptr %3, i64 0, i32 1
  %431 = getelementptr inbounds %struct.expand_loc_callback_data, ptr %3, i64 0, i32 2
  br label %432

432:                                              ; preds = %429, %446
  %433 = phi ptr [ %427, %429 ], [ %447, %446 ]
  %434 = getelementptr inbounds %struct.location_chain_def, ptr %433, i64 0, i32 1
  %435 = load ptr, ptr %434, align 8, !tbaa !214
  %436 = load ptr, ptr %413, align 8, !tbaa !229
  %437 = icmp eq ptr %435, %436
  br i1 %437, label %446, label %438

438:                                              ; preds = %432
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #21
  %439 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %442

441:                                              ; preds = %438
  call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 7009, ptr noundef nonnull @.str.2) #21
  br label %442

442:                                              ; preds = %438, %441
  store ptr %13, ptr %3, align 8, !tbaa !351
  store i8 1, ptr %430, align 8, !tbaa !353
  store i8 0, ptr %431, align 1, !tbaa !354
  %443 = load ptr, ptr @scratch_regs, align 8, !tbaa !5
  %444 = call zeroext i8 @cselib_dummy_expand_value_rtx_cb(ptr noundef %435, ptr noundef %443, i32 noundef 5, ptr noundef nonnull @vt_expand_loc_callback, ptr noundef nonnull %3) #21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #21
  %445 = icmp eq i8 %444, 0
  br i1 %445, label %446, label %449

446:                                              ; preds = %432, %442
  %447 = load ptr, ptr %433, align 8, !tbaa !5
  %448 = icmp eq ptr %447, null
  br i1 %448, label %452, label %432, !llvm.loop !362

449:                                              ; preds = %442
  %450 = getelementptr inbounds %struct.location_chain_def, ptr %433, i64 0, i32 1
  %451 = load ptr, ptr %450, align 8, !tbaa !214
  br label %452

452:                                              ; preds = %446, %426, %449
  %453 = phi ptr [ %451, %449 ], [ null, %426 ], [ null, %446 ]
  store ptr %453, ptr %413, align 8, !tbaa !229
  br label %379
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @check_changed_vars_0(ptr noundef %0, ptr noundef %1) unnamed_addr #9 {
  %3 = load ptr, ptr @value_chains, align 8, !tbaa !5
  %4 = icmp eq ptr %0, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = load i64, ptr %0, align 8
  %7 = and i64 %6, 65535
  %8 = icmp eq i64 %7, 1
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !16
  %12 = getelementptr inbounds %struct.cselib_val_struct, ptr %11, i64 0, i32 1
  br label %15

13:                                               ; preds = %5, %2
  %14 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 2
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi ptr [ %12, %9 ], [ %14, %13 ]
  %17 = load i32, ptr %16, align 4, !tbaa !16
  %18 = tail call ptr @htab_find_with_hash(ptr noundef %3, ptr noundef %0, i32 noundef %17) #21
  %19 = icmp eq ptr %18, null
  br i1 %19, label %106, label %20

20:                                               ; preds = %15
  %21 = load ptr, ptr %18, align 8, !tbaa !234
  %22 = icmp eq ptr %21, null
  br i1 %22, label %106, label %23

23:                                               ; preds = %20, %103
  %24 = phi ptr [ %104, %103 ], [ %21, %20 ]
  %25 = getelementptr inbounds %struct.value_chain_def, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !191
  %27 = load i64, ptr %26, align 8
  %28 = and i64 %27, 65535
  %29 = icmp eq i64 %28, 1
  %30 = trunc i64 %27 to i32
  %31 = lshr i32 %30, 30
  %32 = lshr i64 %27, 40
  %33 = trunc i64 %32 to i32
  %34 = select i1 %29, i32 %31, i32 %33
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %103

37:                                               ; preds = %23
  br i1 %29, label %38, label %42

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.rtx_def, ptr %26, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !16
  %41 = getelementptr inbounds %struct.cselib_val_struct, ptr %40, i64 0, i32 1
  br label %44

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.tree_decl_minimal, ptr %26, i64 0, i32 2
  br label %44

44:                                               ; preds = %38, %42
  %45 = phi ptr [ %41, %38 ], [ %43, %42 ]
  %46 = load i32, ptr %45, align 4, !tbaa !16
  %47 = tail call ptr @htab_find_with_hash(ptr noundef %1, ptr noundef nonnull %26, i32 noundef %46) #21
  %48 = icmp eq ptr %47, null
  %49 = load ptr, ptr %25, align 8, !tbaa !191
  br i1 %48, label %76, label %50

50:                                               ; preds = %44
  %51 = load i64, ptr %49, align 8
  %52 = and i64 %51, 65535
  %53 = icmp eq i64 %52, 1
  br i1 %53, label %54, label %57

54:                                               ; preds = %50
  %55 = trunc i64 %51 to i32
  %56 = or i32 %55, 1073741824
  store i32 %56, ptr %49, align 8
  br label %59

57:                                               ; preds = %50
  %58 = or i64 %51, 1099511627776
  store i64 %58, ptr %49, align 8
  br label %59

59:                                               ; preds = %54, %57
  %60 = load ptr, ptr @changed_variables_stack, align 8, !tbaa !5
  %61 = icmp eq ptr %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.VEC_variable_base, ptr %60, i64 0, i32 1
  %64 = load i32, ptr %63, align 4, !tbaa !363
  %65 = load i32, ptr %60, align 8, !tbaa !343
  %66 = icmp eq i32 %64, %65
  br i1 %66, label %67, label %70

67:                                               ; preds = %62, %59
  %68 = tail call ptr @vec_heap_p_reserve(ptr noundef %60, i32 noundef 1) #21
  store ptr %68, ptr @changed_variables_stack, align 8, !tbaa !5
  %69 = load i32, ptr %68, align 8, !tbaa !343
  br label %70

70:                                               ; preds = %62, %67
  %71 = phi i32 [ %65, %62 ], [ %69, %67 ]
  %72 = phi ptr [ %60, %62 ], [ %68, %67 ]
  %73 = add i32 %71, 1
  store i32 %73, ptr %72, align 8, !tbaa !343
  %74 = zext i32 %71 to i64
  %75 = getelementptr inbounds %struct.VEC_variable_base, ptr %72, i64 0, i32 2, i64 %74
  store ptr %47, ptr %75, align 8, !tbaa !5
  br label %103

76:                                               ; preds = %44
  %77 = icmp eq ptr %49, null
  br i1 %77, label %103, label %78

78:                                               ; preds = %76
  %79 = load i64, ptr %49, align 8
  %80 = and i64 %79, 65535
  %81 = icmp eq i64 %80, 1
  br i1 %81, label %82, label %103

82:                                               ; preds = %78
  %83 = trunc i64 %79 to i32
  %84 = or i32 %83, 1073741824
  store i32 %84, ptr %49, align 8
  %85 = load ptr, ptr %25, align 8, !tbaa !191
  %86 = load ptr, ptr @changed_values_stack, align 8, !tbaa !5
  %87 = icmp eq ptr %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %struct.VEC_rtx_base, ptr %86, i64 0, i32 1
  %90 = load i32, ptr %89, align 4, !tbaa !130
  %91 = load i32, ptr %86, align 8, !tbaa !42
  %92 = icmp eq i32 %90, %91
  br i1 %92, label %93, label %96

93:                                               ; preds = %88, %82
  %94 = tail call ptr @vec_heap_p_reserve(ptr noundef %86, i32 noundef 1) #21
  store ptr %94, ptr @changed_values_stack, align 8, !tbaa !5
  %95 = load i32, ptr %94, align 8, !tbaa !42
  br label %96

96:                                               ; preds = %88, %93
  %97 = phi i32 [ %91, %88 ], [ %95, %93 ]
  %98 = phi ptr [ %86, %88 ], [ %94, %93 ]
  %99 = add i32 %97, 1
  store i32 %99, ptr %98, align 8, !tbaa !42
  %100 = zext i32 %97 to i64
  %101 = getelementptr inbounds %struct.VEC_rtx_base, ptr %98, i64 0, i32 2, i64 %100
  store ptr %85, ptr %101, align 8, !tbaa !5
  %102 = load ptr, ptr %25, align 8, !tbaa !191
  tail call fastcc void @check_changed_vars_0(ptr noundef %102, ptr noundef %1)
  br label %103

103:                                              ; preds = %76, %70, %96, %78, %23
  %104 = load ptr, ptr %24, align 8, !tbaa !234
  %105 = icmp eq ptr %104, null
  br i1 %105, label %106, label %23, !llvm.loop !364

106:                                              ; preds = %103, %20, %15
  ret void
}

declare zeroext i8 @cselib_dummy_expand_value_rtx_cb(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal ptr @vt_expand_loc_callback(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3) #9 {
  %5 = getelementptr inbounds %struct.expand_loc_callback_data, ptr %3, i64 0, i32 1
  %6 = load i8, ptr %5, align 8, !tbaa !353
  %7 = freeze i8 %6
  %8 = getelementptr inbounds %struct.expand_loc_callback_data, ptr %3, i64 0, i32 2
  %9 = load i8, ptr %8, align 1, !tbaa !354
  %10 = load i32, ptr %0, align 8
  %11 = trunc i32 %10 to i16
  switch i16 %11, label %204 [
    i16 39, label %12
    i16 2, label %43
    i16 1, label %46
  ]

12:                                               ; preds = %4
  %13 = icmp eq i8 %7, 0
  %14 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !16
  %16 = add nsw i32 %2, -1
  br i1 %13, label %22, label %17

17:                                               ; preds = %12
  %18 = tail call zeroext i8 @cselib_dummy_expand_value_rtx_cb(ptr noundef %15, ptr noundef %1, i32 noundef %16, ptr noundef nonnull @vt_expand_loc_callback, ptr noundef nonnull %3) #21
  %19 = icmp eq i8 %18, 0
  %20 = load ptr, ptr @global_rtl, align 16
  %21 = select i1 %19, ptr null, ptr %20
  br label %204

22:                                               ; preds = %12
  %23 = tail call ptr @cselib_expand_value_rtx_cb(ptr noundef %15, ptr noundef %1, i32 noundef %16, ptr noundef nonnull @vt_expand_loc_callback, ptr noundef nonnull %3) #21
  %24 = icmp eq ptr %23, null
  br i1 %24, label %204, label %25

25:                                               ; preds = %22
  %26 = load i32, ptr %0, align 8
  %27 = lshr i32 %26, 16
  %28 = and i32 %27, 255
  %29 = load ptr, ptr %14, align 8, !tbaa !16
  %30 = load i32, ptr %29, align 8
  %31 = lshr i32 %30, 16
  %32 = and i32 %31, 255
  %33 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %34 = load i32, ptr %33, align 8, !tbaa !16
  %35 = tail call ptr @simplify_gen_subreg(i32 noundef %28, ptr noundef nonnull %23, i32 noundef %32, i32 noundef %34) #21
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %204

37:                                               ; preds = %25
  %38 = load i32, ptr %0, align 8
  %39 = lshr i32 %38, 16
  %40 = and i32 %39, 255
  %41 = load i32, ptr %33, align 8, !tbaa !16
  %42 = tail call ptr @gen_rtx_fmt_ei_stat(i32 noundef 39, i32 noundef %40, ptr noundef nonnull %23, i32 noundef %41) #21
  br label %204

43:                                               ; preds = %4
  %44 = getelementptr inbounds %struct.rtx_def, ptr %0, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !16
  br label %46

46:                                               ; preds = %4, %43
  %47 = phi ptr [ %45, %43 ], [ %0, %4 ]
  %48 = phi ptr [ null, %43 ], [ %0, %4 ]
  %49 = and i32 %10, 536870912
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %204

51:                                               ; preds = %46
  %52 = load ptr, ptr %3, align 8, !tbaa !351
  %53 = icmp eq ptr %47, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %51
  %55 = load i64, ptr %47, align 8
  %56 = and i64 %55, 65535
  %57 = icmp eq i64 %56, 1
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.rtx_def, ptr %47, i64 0, i32 1
  %60 = load ptr, ptr %59, align 8, !tbaa !16
  %61 = getelementptr inbounds %struct.cselib_val_struct, ptr %60, i64 0, i32 1
  br label %64

62:                                               ; preds = %54, %51
  %63 = getelementptr inbounds %struct.tree_decl_minimal, ptr %47, i64 0, i32 2
  br label %64

64:                                               ; preds = %58, %62
  %65 = phi ptr [ %61, %58 ], [ %63, %62 ]
  %66 = load i32, ptr %65, align 4, !tbaa !16
  %67 = tail call ptr @htab_find_with_hash(ptr noundef %52, ptr noundef %47, i32 noundef %66) #21
  %68 = icmp eq ptr %67, null
  br i1 %68, label %69, label %83

69:                                               ; preds = %64
  %70 = icmp eq i8 %7, 0
  br i1 %70, label %204, label %71

71:                                               ; preds = %69
  %72 = load i64, ptr %47, align 8
  %73 = and i64 %72, 65535
  %74 = icmp eq i64 %73, 1
  %75 = trunc i64 %72 to i32
  %76 = lshr i32 %75, 30
  %77 = lshr i64 %72, 40
  %78 = trunc i64 %77 to i32
  %79 = select i1 %74, i32 %76, i32 %78
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %204, label %82

82:                                               ; preds = %71
  store i8 1, ptr %8, align 1, !tbaa !354
  br label %204

83:                                               ; preds = %64
  %84 = getelementptr inbounds %struct.variable_def, ptr %67, i64 0, i32 2
  %85 = load i8, ptr %84, align 4, !tbaa !184
  switch i8 %85, label %89 [
    i8 0, label %86
    i8 1, label %90
  ]

86:                                               ; preds = %83
  %87 = icmp eq i8 %7, 0
  br i1 %87, label %204, label %88

88:                                               ; preds = %86
  store i8 1, ptr %8, align 1, !tbaa !354
  br label %204

89:                                               ; preds = %83
  tail call void @fancy_abort(ptr noundef nonnull @.str.1, i32 noundef 6914, ptr noundef nonnull @.str.2) #21
  br label %90

90:                                               ; preds = %83, %89
  %91 = load i32, ptr %0, align 8
  %92 = or i32 %91, 536870912
  store i32 %92, ptr %0, align 8
  %93 = getelementptr inbounds %struct.variable_def, ptr %67, i64 0, i32 5
  %94 = getelementptr inbounds %struct.variable_def, ptr %67, i64 0, i32 5, i64 0, i32 1
  %95 = load ptr, ptr %94, align 8, !tbaa !229
  %96 = icmp eq ptr %95, null
  br i1 %96, label %117, label %97

97:                                               ; preds = %90
  %98 = icmp eq i8 %7, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %97
  %100 = tail call zeroext i8 @cselib_dummy_expand_value_rtx_cb(ptr noundef nonnull %95, ptr noundef %1, i32 noundef %2, ptr noundef nonnull @vt_expand_loc_callback, ptr noundef nonnull %3) #21
  %101 = icmp eq i8 %100, 0
  %102 = load ptr, ptr @global_rtl, align 16
  br i1 %101, label %117, label %105

103:                                              ; preds = %97
  %104 = tail call ptr @cselib_expand_value_rtx_cb(ptr noundef nonnull %95, ptr noundef %1, i32 noundef %2, ptr noundef nonnull @vt_expand_loc_callback, ptr noundef nonnull %3) #21
  br label %105

105:                                              ; preds = %99, %103
  %106 = phi ptr [ %104, %103 ], [ %102, %99 ]
  %107 = icmp eq ptr %106, null
  br i1 %107, label %117, label %108

108:                                              ; preds = %105
  %109 = load i64, ptr %47, align 8
  %110 = and i64 %109, 65535
  %111 = icmp eq i64 %110, 1
  br i1 %111, label %112, label %115

112:                                              ; preds = %108
  %113 = trunc i64 %109 to i32
  %114 = and i32 %113, -1073741825
  store i32 %114, ptr %47, align 8
  br label %185

115:                                              ; preds = %108
  %116 = and i64 %109, -1099511627777
  store i64 %116, ptr %47, align 8
  br label %185

117:                                              ; preds = %99, %105, %90
  %118 = load i64, ptr %47, align 8
  %119 = and i64 %118, 65535
  %120 = icmp eq i64 %119, 1
  %121 = trunc i64 %118 to i32
  %122 = lshr i32 %121, 30
  %123 = lshr i64 %118, 40
  %124 = trunc i64 %123 to i32
  %125 = select i1 %120, i32 %122, i32 %124
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %185, label %128

128:                                              ; preds = %117
  br i1 %120, label %129, label %131

129:                                              ; preds = %128
  %130 = and i32 %121, -1073741825
  store i32 %130, ptr %47, align 8
  br label %133

131:                                              ; preds = %128
  %132 = and i64 %118, -1099511627777
  store i64 %132, ptr %47, align 8
  br label %133

133:                                              ; preds = %129, %131
  %134 = load ptr, ptr %93, align 8, !tbaa !5
  %135 = icmp eq ptr %134, null
  br i1 %135, label %162, label %136

136:                                              ; preds = %133
  %137 = icmp eq i8 %7, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %136, %147
  %139 = phi ptr [ %148, %147 ], [ %134, %136 ]
  %140 = getelementptr inbounds %struct.location_chain_def, ptr %139, i64 0, i32 1
  %141 = load ptr, ptr %140, align 8, !tbaa !214
  %142 = load ptr, ptr %94, align 8, !tbaa !229
  %143 = icmp eq ptr %141, %142
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = tail call ptr @cselib_expand_value_rtx_cb(ptr noundef %141, ptr noundef %1, i32 noundef %2, ptr noundef nonnull @vt_expand_loc_callback, ptr noundef nonnull %3) #21
  %146 = icmp eq ptr %145, null
  br i1 %146, label %147, label %177

147:                                              ; preds = %144, %138
  %148 = load ptr, ptr %139, align 8, !tbaa !5
  %149 = icmp eq ptr %148, null
  br i1 %149, label %162, label %138, !llvm.loop !365

150:                                              ; preds = %136, %159
  %151 = phi ptr [ %160, %159 ], [ %134, %136 ]
  %152 = getelementptr inbounds %struct.location_chain_def, ptr %151, i64 0, i32 1
  %153 = load ptr, ptr %152, align 8, !tbaa !214
  %154 = load ptr, ptr %94, align 8, !tbaa !229
  %155 = icmp eq ptr %153, %154
  br i1 %155, label %159, label %156

156:                                              ; preds = %150
  store i8 %9, ptr %8, align 1, !tbaa !354
  %157 = tail call zeroext i8 @cselib_dummy_expand_value_rtx_cb(ptr noundef %153, ptr noundef %1, i32 noundef %2, ptr noundef nonnull @vt_expand_loc_callback, ptr noundef nonnull %3) #21
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %159, label %164

159:                                              ; preds = %156, %150
  %160 = load ptr, ptr %151, align 8, !tbaa !5
  %161 = icmp eq ptr %160, null
  br i1 %161, label %162, label %150, !llvm.loop !365

162:                                              ; preds = %159, %147, %133
  %163 = icmp eq i8 %7, 0
  br i1 %163, label %182, label %169

164:                                              ; preds = %156
  %165 = load ptr, ptr @global_rtl, align 16, !tbaa !5
  %166 = icmp eq ptr %165, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %struct.variable_def, ptr %67, i64 0, i32 3
  store i8 1, ptr %168, align 1, !tbaa !211
  br label %177

169:                                              ; preds = %162, %164
  %170 = phi ptr [ null, %162 ], [ %151, %164 ]
  %171 = phi i1 [ true, %162 ], [ false, %164 ]
  %172 = load ptr, ptr %94, align 8, !tbaa !229
  %173 = icmp eq ptr %172, null
  br i1 %173, label %176, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %struct.variable_def, ptr %67, i64 0, i32 3
  store i8 1, ptr %175, align 1, !tbaa !211
  br i1 %171, label %182, label %177

176:                                              ; preds = %169
  br i1 %171, label %182, label %177

177:                                              ; preds = %144, %167, %174, %176
  %178 = phi ptr [ %170, %176 ], [ %170, %174 ], [ %151, %167 ], [ %139, %144 ]
  %179 = phi ptr [ null, %176 ], [ null, %174 ], [ %165, %167 ], [ %145, %144 ]
  %180 = getelementptr inbounds %struct.location_chain_def, ptr %178, i64 0, i32 1
  %181 = load ptr, ptr %180, align 8, !tbaa !214
  br label %182

182:                                              ; preds = %174, %162, %176, %177
  %183 = phi ptr [ %179, %177 ], [ null, %176 ], [ null, %162 ], [ null, %174 ]
  %184 = phi ptr [ %181, %177 ], [ null, %176 ], [ null, %162 ], [ null, %174 ]
  store ptr %184, ptr %94, align 8, !tbaa !229
  br label %185

185:                                              ; preds = %112, %115, %182, %117
  %186 = phi ptr [ %183, %182 ], [ null, %117 ], [ %106, %112 ], [ %106, %115 ]
  %187 = icmp eq i8 %7, 0
  br i1 %187, label %199, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %struct.variable_def, ptr %67, i64 0, i32 3
  %190 = load i8, ptr %189, align 1, !tbaa !211
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %192, label %197

192:                                              ; preds = %188
  %193 = icmp eq ptr %186, null
  br i1 %193, label %194, label %199

194:                                              ; preds = %192
  %195 = load ptr, ptr %94, align 8, !tbaa !229
  %196 = icmp eq ptr %195, null
  br i1 %196, label %197, label %199

197:                                              ; preds = %194, %188
  %198 = phi i8 [ 1, %188 ], [ %9, %194 ]
  store i8 %198, ptr %8, align 1, !tbaa !354
  br label %199

199:                                              ; preds = %197, %194, %192, %185
  %200 = load i32, ptr %0, align 8
  %201 = and i32 %200, -536870913
  store i32 %201, ptr %0, align 8
  %202 = icmp eq ptr %186, null
  %203 = select i1 %202, ptr %48, ptr %186
  br label %204

204:                                              ; preds = %17, %199, %86, %88, %69, %71, %82, %46, %4, %25, %37, %22
  %205 = phi ptr [ null, %22 ], [ %35, %25 ], [ %42, %37 ], [ %0, %4 ], [ null, %46 ], [ %48, %82 ], [ %48, %71 ], [ %48, %69 ], [ %48, %88 ], [ %48, %86 ], [ %203, %199 ], [ %21, %17 ]
  ret ptr %205
}

declare ptr @cselib_expand_value_rtx_cb(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @vt_expand_loc(ptr noundef %0, ptr noundef %1) unnamed_addr #9 {
  %3 = alloca %struct.expand_loc_callback_data, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #21
  %4 = load i32, ptr @flag_var_tracking_assignments, align 4, !tbaa !20
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  store ptr %1, ptr %3, align 8, !tbaa !351
  %7 = getelementptr inbounds %struct.expand_loc_callback_data, ptr %3, i64 0, i32 1
  store i8 0, ptr %7, align 8, !tbaa !353
  %8 = getelementptr inbounds %struct.expand_loc_callback_data, ptr %3, i64 0, i32 2
  store i8 0, ptr %8, align 1, !tbaa !354
  %9 = load ptr, ptr @scratch_regs, align 8, !tbaa !5
  %10 = call ptr @cselib_expand_value_rtx_cb(ptr noundef %0, ptr noundef %9, i32 noundef 5, ptr noundef nonnull @vt_expand_loc_callback, ptr noundef nonnull %3) #21
  %11 = icmp eq ptr %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %6
  %13 = load i32, ptr %10, align 8
  %14 = and i32 %13, 65535
  %15 = icmp eq i32 %14, 43
  br i1 %15, label %16, label %19

16:                                               ; preds = %12
  %17 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 40), align 8, !tbaa !258
  %18 = call ptr %17(ptr noundef nonnull %10) #21
  br label %19

19:                                               ; preds = %6, %12, %16, %2
  %20 = phi ptr [ %0, %2 ], [ %18, %16 ], [ %10, %12 ], [ null, %6 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #21
  ret ptr %20
}

declare ptr @simplify_subreg(i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @gen_rtx_fmt_tei_stat(i32 noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @gen_rtvec_v(i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @emit_note_after(i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @emit_note_before(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #18

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #19

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #20

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #20

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #20

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #20

attributes #0 = { inlinehint nofree nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { nofree nounwind "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { inlinehint nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #5 = { inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #6 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { inlinehint mustprogress nofree nounwind sspstrong willreturn uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { mustprogress nofree nounwind willreturn "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #13 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #14 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #15 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #16 = { nofree nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #17 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #18 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #19 = { nofree nounwind }
attributes #20 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #21 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !6, i64 8}
!10 = !{!"_IO_FILE", !11, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !11, i64 112, !11, i64 116, !12, i64 120, !13, i64 128, !7, i64 130, !7, i64 131, !6, i64 136, !12, i64 144, !6, i64 152, !6, i64 160, !6, i64 168, !6, i64 176, !12, i64 184, !11, i64 192, !7, i64 196}
!11 = !{!"int", !7, i64 0}
!12 = !{!"long", !7, i64 0}
!13 = !{!"short", !7, i64 0}
!14 = !{!10, !6, i64 16}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = !{!7, !7, i64 0}
!17 = !{!10, !6, i64 40}
!18 = !{!10, !6, i64 48}
!19 = !{!10, !11, i64 0}
!20 = !{!11, !11, i64 0}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.mustprogress"}
!23 = !{!24, !6, i64 8}
!24 = !{!"function", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !11, i64 104, !11, i64 108, !11, i64 112, !11, i64 116, !11, i64 120, !11, i64 124, !6, i64 128, !11, i64 136, !11, i64 137, !11, i64 138, !11, i64 138, !11, i64 138, !11, i64 138, !11, i64 138, !11, i64 138, !11, i64 138, !11, i64 139, !11, i64 139, !11, i64 139, !11, i64 139, !11, i64 139, !11, i64 139, !11, i64 139}
!25 = !{!26, !6, i64 0}
!26 = !{!"control_flow_graph", !6, i64 0, !6, i64 8, !6, i64 16, !11, i64 24, !11, i64 28, !11, i64 32, !6, i64 40, !7, i64 48, !7, i64 52, !7, i64 60, !11, i64 68, !11, i64 72}
!27 = !{!28, !6, i64 56}
!28 = !{!"basic_block_def", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !7, i64 32, !6, i64 48, !6, i64 56, !7, i64 64, !12, i64 72, !11, i64 80, !11, i64 84, !11, i64 88, !11, i64 92, !11, i64 96}
!29 = !{!26, !6, i64 8}
!30 = !{!31, !6, i64 0}
!31 = !{!"rtl_bb_info", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !11, i64 32}
!32 = !{!31, !6, i64 8}
!33 = distinct !{!33, !22}
!34 = distinct !{!34, !22}
!35 = !{!26, !11, i64 24}
!36 = !{!26, !11, i64 28}
!37 = !{i8 0, i8 2}
!38 = !{!28, !11, i64 80}
!39 = !{!28, !6, i64 16}
!40 = distinct !{!40, !22}
!41 = distinct !{!41, !22}
!42 = !{!43, !11, i64 0}
!43 = !{!"VEC_rtx_base", !11, i64 0, !11, i64 4, !7, i64 8}
!44 = !{!45, !6, i64 8}
!45 = !{!"elt_loc_list", !6, i64 0, !6, i64 8, !6, i64 16}
!46 = !{!45, !6, i64 0}
!47 = distinct !{!47, !22}
!48 = distinct !{!48, !22}
!49 = !{!50, !11, i64 0}
!50 = !{!"shared_hash_def", !11, i64 0, !6, i64 8}
!51 = !{!52, !6, i64 432}
!52 = !{!"dataflow_set_def", !12, i64 0, !7, i64 8, !6, i64 432, !6, i64 440}
!53 = !{!52, !12, i64 0}
!54 = !{!52, !6, i64 440}
!55 = !{!50, !6, i64 8}
!56 = !{!57, !6, i64 0}
!57 = !{!"attrs_def", !6, i64 0, !6, i64 8, !6, i64 16, !12, i64 24}
!58 = distinct !{!58, !22}
!59 = !{!57, !12, i64 24}
!60 = distinct !{!60, !22}
!61 = distinct !{!61, !22}
!62 = !{!63, !6, i64 0}
!63 = !{!"variable_tracking_info_def", !6, i64 0, !52, i64 8, !52, i64 456, !6, i64 904, !7, i64 912, !7, i64 913}
!64 = !{!65, !11, i64 0}
!65 = !{!"VEC_micro_operation_base", !11, i64 0, !11, i64 4, !7, i64 8}
!66 = distinct !{!66, !22}
!67 = !{!68, !6, i64 8}
!68 = !{!"micro_operation_def", !7, i64 0, !6, i64 8, !7, i64 16}
!69 = !{!68, !7, i64 0}
!70 = !{!12, !12, i64 0}
!71 = !{!57, !6, i64 8}
!72 = !{!57, !6, i64 16}
!73 = distinct !{!73, !22}
!74 = distinct !{!74, !22}
!75 = !{!76, !6, i64 0}
!76 = !{!"reg_attrs", !6, i64 0, !12, i64 8}
!77 = !{!76, !12, i64 8}
!78 = distinct !{!78, !22}
!79 = distinct !{!79, !22}
!80 = !{!63, !7, i64 912}
!81 = !{!63, !7, i64 913}
!82 = !{!63, !6, i64 904}
!83 = distinct !{!83, !22}
!84 = !{!85, !7, i64 477}
!85 = !{!"rtl_data", !86, i64 0, !87, i64 40, !88, i64 96, !89, i64 112, !91, i64 208, !92, i64 248, !11, i64 312, !6, i64 320, !6, i64 328, !6, i64 336, !6, i64 344, !6, i64 352, !6, i64 360, !6, i64 368, !6, i64 376, !6, i64 384, !6, i64 392, !12, i64 400, !6, i64 408, !6, i64 416, !6, i64 424, !11, i64 432, !11, i64 436, !11, i64 440, !11, i64 444, !11, i64 448, !11, i64 452, !6, i64 456, !7, i64 464, !7, i64 465, !7, i64 466, !7, i64 467, !7, i64 468, !7, i64 469, !7, i64 470, !7, i64 471, !7, i64 472, !7, i64 473, !7, i64 474, !7, i64 475, !7, i64 476, !7, i64 477, !7, i64 478, !7, i64 479, !7, i64 480, !7, i64 481, !7, i64 482, !7, i64 483, !7, i64 484, !7, i64 485}
!86 = !{!"expr_status", !11, i64 0, !11, i64 4, !11, i64 8, !6, i64 16, !6, i64 24, !6, i64 32}
!87 = !{!"emit_status", !11, i64 0, !11, i64 4, !6, i64 8, !6, i64 16, !6, i64 24, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !6, i64 48}
!88 = !{!"varasm_status", !6, i64 0, !11, i64 8}
!89 = !{!"incoming_args", !11, i64 0, !11, i64 4, !11, i64 8, !6, i64 16, !90, i64 24, !6, i64 88}
!90 = !{!"ix86_args", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !7, i64 60}
!91 = !{!"function_subsections", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32}
!92 = !{!"rtl_eh", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !7, i64 48}
!93 = !{!63, !12, i64 8}
!94 = !{!63, !12, i64 456}
!95 = !{i64 0, i64 4, !20, i64 8, i64 8, !5}
!96 = !{i64 0, i64 8, !5}
!97 = !{}
!98 = !{!99, !6, i64 0}
!99 = !{!"edge_def", !6, i64 0, !6, i64 8, !7, i64 16, !6, i64 24, !6, i64 32, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !12, i64 56}
!100 = !{!99, !6, i64 8}
!101 = !{!102, !11, i64 0}
!102 = !{!"rtvec_def", !11, i64 0, !7, i64 8}
!103 = distinct !{!103, !22}
!104 = distinct !{!104, !22}
!105 = !{!28, !6, i64 8}
!106 = !{!107, !11, i64 0}
!107 = !{!"VEC_edge_base", !11, i64 0, !11, i64 4, !7, i64 8}
!108 = !{!109, !11, i64 0}
!109 = !{!"", !11, i64 0, !6, i64 8}
!110 = distinct !{!110, !22}
!111 = !{!85, !7, i64 480}
!112 = !{!85, !11, i64 120}
!113 = !{!28, !6, i64 0}
!114 = !{!99, !11, i64 48}
!115 = !{!65, !11, i64 4}
!116 = !{i64 0, i64 4, !16, i64 8, i64 8, !5, i64 16, i64 8, !5, i64 16, i64 8, !70}
!117 = !{i64 0, i64 8, !5, i64 8, i64 8, !5, i64 8, i64 8, !70}
!118 = !{i64 0, i64 8, !5, i64 0, i64 8, !70}
!119 = !{!120, !7, i64 4}
!120 = !{!"adjust_mem_data", !7, i64 0, !7, i64 4, !12, i64 8, !6, i64 16}
!121 = !{!120, !12, i64 8}
!122 = !{!120, !6, i64 16}
!123 = !{!120, !7, i64 0}
!124 = distinct !{!124, !22}
!125 = distinct !{!125, !22}
!126 = distinct !{!126, !22}
!127 = distinct !{!127, !22}
!128 = !{!129, !6, i64 8}
!129 = !{!"cselib_val_struct", !11, i64 0, !11, i64 4, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32}
!130 = !{!43, !11, i64 4}
!131 = distinct !{!131, !22}
!132 = distinct !{!132, !22}
!133 = distinct !{!133, !22}
!134 = distinct !{!134, !22}
!135 = !{!136, !6, i64 0}
!136 = !{!"mem_attrs", !6, i64 0, !6, i64 8, !6, i64 16, !11, i64 24, !11, i64 28, !7, i64 32}
!137 = !{!136, !6, i64 8}
!138 = distinct !{!138, !22}
!139 = distinct !{!139, !22}
!140 = distinct !{!140, !22}
!141 = !{!142, !11, i64 8}
!142 = !{!"param_info", !6, i64 0, !11, i64 8, !7, i64 12, !11, i64 16, !11, i64 20, !6, i64 24}
!143 = !{!26, !11, i64 32}
!144 = distinct !{!144, !22}
!145 = distinct !{!145, !22}
!146 = !{!147, !6, i64 0}
!147 = !{!"simple_bitmap_def", !6, i64 0, !11, i64 8, !11, i64 12, !7, i64 16}
!148 = !{!63, !6, i64 440}
!149 = !{!63, !6, i64 888}
!150 = distinct !{!150, !22}
!151 = !{i64 0, i64 8, !70, i64 8, i64 424, !16, i64 432, i64 8, !5, i64 440, i64 8, !5}
!152 = distinct !{!152, !22}
!153 = distinct !{!153, !22}
!154 = distinct !{!154, !22}
!155 = distinct !{!155, !22}
!156 = !{!157, !6, i64 0}
!157 = !{!"dfset_merge", !6, i64 0, !6, i64 8, !6, i64 16, !11, i64 24}
!158 = !{!157, !6, i64 16}
!159 = !{!157, !6, i64 8}
!160 = !{!157, !11, i64 24}
!161 = distinct !{!161, !22}
!162 = !{!163, !6, i64 0}
!163 = !{!"dfset_post_merge", !6, i64 0, !6, i64 8}
!164 = !{!163, !6, i64 8}
!165 = distinct !{!165, !22}
!166 = distinct !{!166, !22}
!167 = distinct !{!167, !22}
!168 = distinct !{!168, !22}
!169 = !{!129, !11, i64 4}
!170 = distinct !{!170, !22}
!171 = distinct !{!171, !22}
!172 = distinct !{!172, !22}
!173 = distinct !{!173, !22}
!174 = !{!24, !6, i64 48}
!175 = distinct !{!175, !22}
!176 = !{!177, !12, i64 0}
!177 = !{!"fibheap", !12, i64 0, !6, i64 8, !6, i64 16}
!178 = distinct !{!178, !22}
!179 = distinct !{!179, !22}
!180 = distinct !{!180, !22}
!181 = !{!182, !6, i64 0}
!182 = !{!"variable_def", !6, i64 0, !11, i64 8, !7, i64 12, !7, i64 13, !7, i64 14, !7, i64 16}
!183 = !{!182, !11, i64 8}
!184 = !{!182, !7, i64 12}
!185 = !{!186, !6, i64 0}
!186 = !{!"variable_part_def", !6, i64 0, !6, i64 8, !12, i64 16}
!187 = !{!188, !6, i64 0}
!188 = !{!"location_chain_def", !6, i64 0, !6, i64 8, !6, i64 16, !7, i64 24}
!189 = distinct !{!189, !22}
!190 = distinct !{!190, !22}
!191 = !{!192, !6, i64 8}
!192 = !{!"value_chain_def", !6, i64 0, !6, i64 8, !11, i64 16}
!193 = !{!194, !6, i64 0}
!194 = !{!"count_use_info", !6, i64 0, !6, i64 8, !6, i64 16, !11, i64 24, !7, i64 28}
!195 = !{!194, !6, i64 8}
!196 = !{!194, !6, i64 16}
!197 = !{!194, !11, i64 24}
!198 = !{!194, !7, i64 28}
!199 = distinct !{!199, !22}
!200 = distinct !{!200, !22}
!201 = distinct !{!201, !22}
!202 = distinct !{!202, !22}
!203 = distinct !{!203, !22}
!204 = distinct !{!204, !22}
!205 = distinct !{!205, !22}
!206 = distinct !{!206, !22}
!207 = distinct !{!207, !22}
!208 = distinct !{!208, !22}
!209 = distinct !{!209, !22}
!210 = distinct !{!210, !22}
!211 = !{!182, !7, i64 13}
!212 = !{!182, !7, i64 14}
!213 = !{!186, !12, i64 16}
!214 = !{!188, !6, i64 8}
!215 = distinct !{!215, !22}
!216 = distinct !{!216, !22}
!217 = !{i32 -1, i32 2}
!218 = distinct !{!218, !22}
!219 = distinct !{!219, !22}
!220 = distinct !{!220, !221}
!221 = !{!"llvm.loop.unroll.disable"}
!222 = distinct !{!222, !22}
!223 = distinct !{!223, !22}
!224 = !{!188, !7, i64 24}
!225 = !{!188, !6, i64 16}
!226 = !{i64 0, i64 8, !5, i64 8, i64 8, !5, i64 16, i64 8, !70}
!227 = distinct !{!227, !22}
!228 = distinct !{!228, !22}
!229 = !{!186, !6, i64 8}
!230 = distinct !{!230, !22}
!231 = distinct !{!231, !22}
!232 = distinct !{!232, !22}
!233 = distinct !{!233, !22}
!234 = !{!192, !6, i64 0}
!235 = !{!192, !11, i64 16}
!236 = distinct !{!236, !22}
!237 = !{i32 0, i32 8}
!238 = !{!239, !6, i64 1184}
!239 = !{!"gcc_target", !240, i64 0, !242, i64 368, !243, i64 664, !11, i64 744, !6, i64 752, !6, i64 760, !6, i64 768, !6, i64 776, !6, i64 784, !6, i64 792, !6, i64 800, !6, i64 808, !6, i64 816, !6, i64 824, !6, i64 832, !6, i64 840, !6, i64 848, !6, i64 856, !6, i64 864, !6, i64 872, !6, i64 880, !6, i64 888, !6, i64 896, !6, i64 904, !6, i64 912, !6, i64 920, !6, i64 928, !6, i64 936, !6, i64 944, !6, i64 952, !6, i64 960, !6, i64 968, !6, i64 976, !6, i64 984, !6, i64 992, !6, i64 1000, !6, i64 1008, !6, i64 1016, !6, i64 1024, !6, i64 1032, !6, i64 1040, !6, i64 1048, !6, i64 1056, !12, i64 1064, !12, i64 1072, !6, i64 1080, !6, i64 1088, !6, i64 1096, !6, i64 1104, !6, i64 1112, !6, i64 1120, !6, i64 1128, !6, i64 1136, !6, i64 1144, !6, i64 1152, !6, i64 1160, !6, i64 1168, !244, i64 1176, !6, i64 1232, !6, i64 1240, !6, i64 1248, !6, i64 1256, !6, i64 1264, !6, i64 1272, !6, i64 1280, !6, i64 1288, !6, i64 1296, !6, i64 1304, !6, i64 1312, !6, i64 1320, !6, i64 1328, !6, i64 1336, !6, i64 1344, !6, i64 1352, !6, i64 1360, !6, i64 1368, !6, i64 1376, !6, i64 1384, !6, i64 1392, !6, i64 1400, !6, i64 1408, !6, i64 1416, !6, i64 1424, !6, i64 1432, !6, i64 1440, !6, i64 1448, !6, i64 1456, !12, i64 1464, !245, i64 1472, !6, i64 1664, !6, i64 1672, !6, i64 1680, !6, i64 1688, !6, i64 1696, !6, i64 1704, !6, i64 1712, !6, i64 1720, !6, i64 1728, !6, i64 1736, !6, i64 1744, !6, i64 1752, !6, i64 1760, !6, i64 1768, !6, i64 1776, !246, i64 1784, !247, i64 1792, !248, i64 1896, !249, i64 1968, !6, i64 2016, !7, i64 2024, !7, i64 2025, !7, i64 2026, !7, i64 2027, !7, i64 2028, !7, i64 2029, !7, i64 2030, !7, i64 2031, !7, i64 2032, !7, i64 2033, !7, i64 2034, !7, i64 2035}
!240 = !{!"asm_out", !6, i64 0, !6, i64 8, !6, i64 16, !241, i64 24, !241, i64 56, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !6, i64 120, !6, i64 128, !6, i64 136, !6, i64 144, !6, i64 152, !6, i64 160, !6, i64 168, !6, i64 176, !6, i64 184, !6, i64 192, !6, i64 200, !6, i64 208, !6, i64 216, !6, i64 224, !6, i64 232, !6, i64 240, !6, i64 248, !6, i64 256, !6, i64 264, !6, i64 272, !6, i64 280, !6, i64 288, !6, i64 296, !6, i64 304, !6, i64 312, !6, i64 320, !6, i64 328, !6, i64 336, !6, i64 344, !6, i64 352, !6, i64 360}
!241 = !{!"asm_int_op", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24}
!242 = !{!"sched", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !6, i64 120, !6, i64 128, !6, i64 136, !6, i64 144, !6, i64 152, !6, i64 160, !6, i64 168, !6, i64 176, !6, i64 184, !6, i64 192, !6, i64 200, !6, i64 208, !6, i64 216, !6, i64 224, !6, i64 232, !6, i64 240, !6, i64 248, !6, i64 256, !6, i64 264, !6, i64 272, !6, i64 280, !6, i64 288}
!243 = !{!"vectorize", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72}
!244 = !{!"addr_space", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48}
!245 = !{!"calls", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !6, i64 120, !6, i64 128, !6, i64 136, !6, i64 144, !6, i64 152, !6, i64 160, !6, i64 168, !6, i64 176, !6, i64 184}
!246 = !{!"c", !6, i64 0}
!247 = !{!"cxx", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96}
!248 = !{!"emutls", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !7, i64 64, !7, i64 65}
!249 = !{!"target_option_hooks", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40}
!250 = !{!136, !7, i64 32}
!251 = distinct !{!251, !22}
!252 = !{!253, !6, i64 8}
!253 = !{!"cselib_set", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24}
!254 = !{!253, !6, i64 16}
!255 = !{!136, !6, i64 16}
!256 = distinct !{!256, !22}
!257 = distinct !{!257, !22}
!258 = !{!239, !6, i64 1040}
!259 = distinct !{!259, !22}
!260 = distinct !{!260, !22}
!261 = distinct !{!261, !22}
!262 = distinct !{!262, !22}
!263 = distinct !{!263, !22}
!264 = distinct !{!264, !22}
!265 = distinct !{!265, !22}
!266 = distinct !{!266, !22}
!267 = distinct !{!267, !22}
!268 = distinct !{!268, !22}
!269 = distinct !{!269, !22}
!270 = !{!271, !6, i64 0}
!271 = !{!"variable_union_info", !6, i64 0, !11, i64 8, !11, i64 12}
!272 = !{!271, !11, i64 12}
!273 = !{!271, !11, i64 8}
!274 = distinct !{!274, !22}
!275 = distinct !{!275, !22}
!276 = distinct !{!276, !22}
!277 = distinct !{!277, !22}
!278 = distinct !{!278, !22}
!279 = distinct !{!279, !221}
!280 = distinct !{!280, !22}
!281 = distinct !{!281, !22}
!282 = distinct !{!282, !22, !283}
!283 = !{!"llvm.loop.unswitch.partial.disable"}
!284 = distinct !{!284, !22}
!285 = distinct !{!285, !22}
!286 = distinct !{!286, !22}
!287 = distinct !{!287, !22}
!288 = distinct !{!288, !22}
!289 = distinct !{!289, !22}
!290 = distinct !{!290, !22}
!291 = distinct !{!291, !22}
!292 = distinct !{!292, !22}
!293 = distinct !{!293, !22}
!294 = distinct !{!294, !22}
!295 = distinct !{!295, !22}
!296 = distinct !{!296, !22}
!297 = distinct !{!297, !22}
!298 = distinct !{!298, !22}
!299 = distinct !{!299, !22}
!300 = distinct !{!300, !22}
!301 = distinct !{!301, !22}
!302 = distinct !{!302, !22}
!303 = distinct !{!303, !22}
!304 = distinct !{!304, !22}
!305 = !{!129, !11, i64 0}
!306 = distinct !{!306, !22}
!307 = distinct !{!307, !22}
!308 = distinct !{!308, !22}
!309 = distinct !{!309, !22}
!310 = distinct !{!310, !22}
!311 = distinct !{!311, !22}
!312 = distinct !{!312, !22}
!313 = distinct !{!313, !22}
!314 = !{!129, !6, i64 16}
!315 = !{!45, !6, i64 16}
!316 = distinct !{!316, !22}
!317 = distinct !{!317, !22}
!318 = distinct !{!318, !22}
!319 = distinct !{!319, !22}
!320 = distinct !{!320, !22}
!321 = distinct !{!321, !22}
!322 = distinct !{!322, !22}
!323 = distinct !{!323, !22}
!324 = distinct !{!324, !22}
!325 = distinct !{!325, !22}
!326 = distinct !{!326, !22}
!327 = distinct !{!327, !22}
!328 = distinct !{!328, !22}
!329 = distinct !{!329, !22}
!330 = distinct !{!330, !22}
!331 = distinct !{!331, !22}
!332 = distinct !{!332, !22}
!333 = distinct !{!333, !22}
!334 = distinct !{!334, !22}
!335 = distinct !{!335, !22}
!336 = distinct !{!336, !22}
!337 = distinct !{!337, !22}
!338 = distinct !{!338, !22}
!339 = distinct !{!339, !22}
!340 = distinct !{!340, !22}
!341 = distinct !{!341, !22}
!342 = distinct !{!342, !221}
!343 = !{!344, !11, i64 0}
!344 = !{!"VEC_variable_base", !11, i64 0, !11, i64 4, !7, i64 8}
!345 = distinct !{!345, !22}
!346 = distinct !{!346, !22}
!347 = !{!348, !6, i64 0}
!348 = !{!"emit_note_data_def", !6, i64 0, !7, i64 8, !6, i64 16}
!349 = !{!348, !7, i64 8}
!350 = !{!348, !6, i64 16}
!351 = !{!352, !6, i64 0}
!352 = !{!"expand_loc_callback_data", !6, i64 0, !7, i64 8, !7, i64 9}
!353 = !{!352, !7, i64 8}
!354 = !{!352, !7, i64 9}
!355 = distinct !{!355, !22}
!356 = distinct !{!356, !22}
!357 = distinct !{!357, !22}
!358 = distinct !{!358, !22}
!359 = distinct !{!359, !22}
!360 = distinct !{!360, !22}
!361 = distinct !{!361, !22}
!362 = distinct !{!362, !22}
!363 = !{!344, !11, i64 4}
!364 = distinct !{!364, !22}
!365 = distinct !{!365, !22}
