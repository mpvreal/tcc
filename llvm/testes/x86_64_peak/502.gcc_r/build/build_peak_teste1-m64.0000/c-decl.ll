; ModuleID = 'c-decl.c'
source_filename = "c-decl.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.obstack = type { i64, ptr, ptr, ptr, ptr, i64, i32, ptr, ptr, ptr, i8 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.addr_space, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, %struct.calls, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, ptr, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { ptr, ptr, ptr, %struct.asm_int_op, %struct.asm_int_op, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.asm_int_op = type { ptr, ptr, ptr, ptr }
%struct.sched = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.vectorize = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.addr_space = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.calls = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.c = type { ptr }
%struct.cxx = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.emutls = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8 }
%struct.target_option_hooks = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.stmt_tree_s = type { ptr, i32 }
%struct.gcc_debug_hooks = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.ggc_root_tab = type { ptr, i64, i64, ptr, ptr }
%struct._IO_FILE = type { i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i64, i16, i8, [1 x i8], ptr, i64, ptr, ptr, ptr, ptr, i64, i32, [20 x i8] }
%struct.tree_exp = type { %struct.tree_common, i32, ptr, [1 x ptr] }
%struct.tree_common = type { %struct.tree_base, ptr, ptr }
%struct.tree_base = type { i64 }
%struct.lang_identifier = type { %struct.c_common_identifier, ptr, ptr, ptr }
%struct.c_common_identifier = type { %struct.tree_common, %struct.cpp_hashnode }
%struct.cpp_hashnode = type { %struct.ht_identifier, i8, i8, i16, %union._cpp_hashnode_value }
%struct.ht_identifier = type { ptr, i32, i32 }
%union._cpp_hashnode_value = type { ptr }
%struct.c_binding = type { %union.anon.0, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.0 = type { ptr }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, ptr, i40, i32, ptr, ptr, ptr, ptr, ptr }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, ptr, ptr }
%struct.tree_type = type { %struct.tree_common, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, ptr, %union.tree_type_symtab, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%union.tree_type_symtab = type { ptr }
%struct.c_inline_static = type { i32, ptr, ptr, i32, ptr }
%struct.c_scope = type { ptr, ptr, ptr, ptr, ptr, i40 }
%struct.expanded_location = type { ptr, i32, i32, i8 }
%struct.tree_block = type { %struct.tree_common, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.c_label_vars = type { ptr, %struct.c_spot_bindings, ptr, ptr }
%struct.c_spot_bindings = type { ptr, ptr, i32, i8 }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, ptr, ptr, ptr, ptr, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, ptr, ptr, ptr, ptr }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, ptr, ptr, ptr, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, ptr }
%struct.VEC_tree_base = type { i32, i32, [1 x ptr] }
%struct.VEC_c_goto_bindings_p_base = type { i32, i32, [1 x ptr] }
%struct.c_goto_bindings = type { i32, %struct.c_spot_bindings }
%struct.tree_list = type { %struct.tree_common, ptr, ptr }
%struct.tree_string = type { %struct.tree_common, i32, [1 x i8] }
%struct.diagnostic_context = type { ptr, [12 x i32], i8, i8, [870 x i32], i8, i8, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.c_declspecs = type { ptr, ptr, ptr, ptr, i32, i32, i8, i32, i16, i8 }
%struct.c_declarator = type { i32, ptr, i32, %union.anon.1 }
%union.anon.1 = type { %struct.anon }
%struct.anon = type { ptr, i32, ptr, i8 }
%struct.c_type_name = type { ptr, ptr }
%struct.function = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, ptr, i32 }
%struct.c_arg_info = type { ptr, ptr, ptr, ptr, ptr, i8 }
%struct.lang_type = type { ptr, ptr, ptr, ptr }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { ptr, ptr }
%struct.c_parm = type { ptr, ptr, ptr }
%struct.c_typespec = type { i32, ptr, ptr, i8 }
%struct.c_struct_parse_info = type { ptr, ptr, ptr }
%struct.VEC_c_binding_ptr_base = type { i32, i32, [1 x ptr] }
%struct.sorted_fields_type = type { i32, [1 x ptr] }
%struct.c_enum_contents = type { ptr, i32 }
%struct.language_function = type { %struct.c_language_function, ptr, ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.c_language_function = type { %struct.stmt_tree_s }
%struct.tree_real_cst = type { %struct.tree_common, ptr }
%struct.tree_fixed_cst = type { %struct.tree_common, ptr }
%struct.tree_vector = type { %struct.tree_common, ptr }
%struct.tree_complex = type { %struct.tree_common, ptr, ptr }
%struct.tree_parm_decl = type { %struct.tree_decl_with_rtl, ptr, ptr }
%struct.tree_var_decl = type { %struct.tree_decl_with_vis, ptr }
%struct.tree_field_decl = type { %struct.tree_decl_common, ptr, ptr, ptr, ptr, ptr }
%struct.tree_result_decl = type { %struct.tree_decl_with_rtl, ptr }
%struct.tree_vec = type { %struct.tree_common, i32, [1 x ptr] }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.tree_ssa_name = type { %struct.tree_common, ptr, ptr, i32, ptr, %struct.ssa_use_operand_d }
%struct.ssa_use_operand_d = type { ptr, ptr, %union.anon, ptr }
%union.anon = type { ptr }
%struct.tree_binfo = type { %struct.tree_common, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.VEC_tree_none }
%struct.VEC_tree_none = type { %struct.VEC_tree_base }
%struct.tree_statement_list = type { %struct.tree_common, ptr, ptr }
%struct.tree_constructor = type { %struct.tree_common, ptr }
%struct.tree_omp_clause = type { %struct.tree_common, i32, i32, %union.omp_clause_subcode, ptr, ptr, [1 x ptr] }
%union.omp_clause_subcode = type { i32 }

@stdout = external local_unnamed_addr global ptr, align 8
@stdin = external local_unnamed_addr global ptr, align 8
@tree_code_type = external local_unnamed_addr constant [0 x i32], align 4
@input_location = external local_unnamed_addr global i32, align 4
@.str = private unnamed_addr constant [7 x i8] c"symbol\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"tag\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"label\00", align 1
@ridpointers = external local_unnamed_addr global ptr, align 8
@.str.3 = private unnamed_addr constant [12 x i8] c"rid %p \22%s\22\00", align 1
@global_trees = external local_unnamed_addr global [131 x ptr], align 16
@.str.4 = private unnamed_addr constant [39 x i8] c"array %q+D assumed to have one element\00", align 1
@c_inline_statics = internal global ptr null, align 8
@current_scope = internal global ptr null, align 8
@file_scope = internal global ptr null, align 8
@c_override_global_bindings_to_false = dso_local local_unnamed_addr global i8 0, align 1
@keep_next_level_flag = internal unnamed_addr global i1 false, align 1
@next_is_function_body = internal unnamed_addr global i1 false, align 1
@current_function_scope = internal global ptr null, align 8
@scope_freelist = internal global ptr null, align 8
@.str.5 = private unnamed_addr constant [35 x i8] c"GCC supports only %u nested scopes\00", align 1
@current_function_decl = external local_unnamed_addr global ptr, align 8
@all_translation_units = internal global ptr null, align 8
@.str.6 = private unnamed_addr constant [32 x i8] c"label %q+D used but not defined\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"c-decl.c\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@external_scope = internal global ptr null, align 8
@.str.9 = private unnamed_addr constant [48 x i8] c"nested function %q+D declared but never defined\00", align 1
@undef_nested_function = internal unnamed_addr global i1 false, align 1
@flag_gnu89_inline = external local_unnamed_addr global i32, align 4
@.str.10 = private unnamed_addr constant [48 x i8] c"inline function %q+D declared but never defined\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"unused variable %q+D\00", align 1
@.str.12 = private unnamed_addr constant [71 x i8] c"type of array %q+D completed incompatibly with implicit initialization\00", align 1
@num_in_fnames = external local_unnamed_addr global i32, align 4
@visible_builtins = internal global ptr null, align 8
@pch_file = external local_unnamed_addr global ptr, align 8
@.str.13 = private unnamed_addr constant [33 x i8] c"nested extern declaration of %qD\00", align 1
@c_global_trees = external local_unnamed_addr global [55 x ptr], align 16
@.str.14 = private unnamed_addr constant [59 x i8] c"incompatible implicit declaration of built-in function %qD\00", align 1
@.str.15 = private unnamed_addr constant [50 x i8] c"incompatible implicit declaration of function %qD\00", align 1
@undeclared_variable.already = internal unnamed_addr global i1 false, align 1
@.str.16 = private unnamed_addr constant [40 x i8] c"%qE undeclared here (not in a function)\00", align 1
@.str.17 = private unnamed_addr constant [44 x i8] c"%qE undeclared (first use in this function)\00", align 1
@.str.18 = private unnamed_addr constant [81 x i8] c"each undeclared identifier is reported only once for each function it appears in\00", align 1
@.str.19 = private unnamed_addr constant [45 x i8] c"label %qE referenced outside of any function\00", align 1
@.str.20 = private unnamed_addr constant [31 x i8] c"jump into statement expression\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"label %qD defined here\00", align 1
@.str.22 = private unnamed_addr constant [32 x i8] c"duplicate label declaration %qE\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"duplicate label %qD\00", align 1
@.str.24 = private unnamed_addr constant [78 x i8] c"traditional C lacks a separate namespace for labels, identifier %qE conflicts\00", align 1
@.str.25 = private unnamed_addr constant [66 x i8] c"switch jumps into scope of identifier with variably modified type\00", align 1
@.str.26 = private unnamed_addr constant [42 x i8] c"switch jumps over variable initialization\00", align 1
@.str.27 = private unnamed_addr constant [19 x i8] c"switch starts here\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"%qD declared here\00", align 1
@.str.29 = private unnamed_addr constant [39 x i8] c"switch jumps into statement expression\00", align 1
@pending_invalid_xref = dso_local local_unnamed_addr global ptr null, align 8
@pending_invalid_xref_location = dso_local local_unnamed_addr global i32 0, align 4
@.str.30 = private unnamed_addr constant [33 x i8] c"%qE defined as wrong kind of tag\00", align 1
@parser_obstack = dso_local global %struct.obstack zeroinitializer, align 8
@flag_signed_char = external local_unnamed_addr global i32, align 4
@integer_types = external local_unnamed_addr global [11 x ptr], align 16
@.str.31 = private unnamed_addr constant [6 x i8] c"_Bool\00", align 1
@pedantic_lvalues = external local_unnamed_addr global i32, align 4
@make_fname_decl = external local_unnamed_addr global ptr, align 8
@_sch_istable = external local_unnamed_addr constant [256 x i16], align 16
@.str.32 = private unnamed_addr constant [28 x i8] c"invalid use of %<restrict%>\00", align 1
@.str.33 = private unnamed_addr constant [47 x i8] c"unnamed struct/union that defines no instances\00", align 1
@.str.34 = private unnamed_addr constant [70 x i8] c"empty declaration with storage class specifier does not redeclare tag\00", align 1
@.str.35 = private unnamed_addr constant [61 x i8] c"empty declaration with type qualifier does not redeclare tag\00", align 1
@.str.36 = private unnamed_addr constant [39 x i8] c"useless type name in empty declaration\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"%<inline%> in empty declaration\00", align 1
@.str.38 = private unnamed_addr constant [41 x i8] c"%<auto%> in file-scope empty declaration\00", align 1
@.str.39 = private unnamed_addr constant [45 x i8] c"%<register%> in file-scope empty declaration\00", align 1
@.str.40 = private unnamed_addr constant [53 x i8] c"useless storage class specifier in empty declaration\00", align 1
@.str.41 = private unnamed_addr constant [42 x i8] c"useless %<__thread%> in empty declaration\00", align 1
@.str.42 = private unnamed_addr constant [44 x i8] c"useless type qualifier in empty declaration\00", align 1
@.str.43 = private unnamed_addr constant [18 x i8] c"empty declaration\00", align 1
@flag_isoc99 = external local_unnamed_addr global i32, align 4
@.str.44 = private unnamed_addr constant [86 x i8] c"ISO C90 does not support %<static%> or type qualifiers in parameter array declarators\00", align 1
@.str.45 = private unnamed_addr constant [51 x i8] c"ISO C90 does not support %<[*]%> array declarators\00", align 1
@.str.46 = private unnamed_addr constant [59 x i8] c"%<[*]%> not allowed in other than function prototype scope\00", align 1
@.str.47 = private unnamed_addr constant [11 x i8] c"deprecated\00", align 1
@.str.48 = private unnamed_addr constant [27 x i8] c"%q+D is usually a function\00", align 1
@.str.49 = private unnamed_addr constant [52 x i8] c"typedef %qD is initialized (use __typeof__ instead)\00", align 1
@.str.50 = private unnamed_addr constant [44 x i8] c"function %qD is initialized like a variable\00", align 1
@.str.51 = private unnamed_addr constant [29 x i8] c"parameter %qD is initialized\00", align 1
@.str.52 = private unnamed_addr constant [45 x i8] c"variable-sized object may not be initialized\00", align 1
@.str.53 = private unnamed_addr constant [49 x i8] c"variable %qD has initializer but incomplete type\00", align 1
@flag_no_common = external local_unnamed_addr global i32, align 4
@.str.54 = private unnamed_addr constant [11 x i8] c"gnu_inline\00", align 1
@targetm = external local_unnamed_addr global %struct.gcc_target, align 8
@.str.55 = private unnamed_addr constant [9 x i8] c"noinline\00", align 1
@.str.56 = private unnamed_addr constant [46 x i8] c"inline function %q+D given attribute noinline\00", align 1
@c_language = external local_unnamed_addr global i32, align 4
@pedantic = external local_unnamed_addr global i32, align 4
@.str.57 = private unnamed_addr constant [44 x i8] c"initializer fails to determine size of %q+D\00", align 1
@.str.58 = private unnamed_addr constant [27 x i8] c"array size missing in %q+D\00", align 1
@.str.59 = private unnamed_addr constant [33 x i8] c"zero or negative size array %q+D\00", align 1
@.str.60 = private unnamed_addr constant [34 x i8] c"storage size of %q+D isn%'t known\00", align 1
@.str.61 = private unnamed_addr constant [37 x i8] c"storage size of %q+D isn%'t constant\00", align 1
@.str.62 = private unnamed_addr constant [58 x i8] c"ignoring asm-specifier for non-static local variable %q+D\00", align 1
@.str.63 = private unnamed_addr constant [52 x i8] c"cannot put object with volatile field into register\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c"cleanup\00", align 1
@warn_cxx_compat = external local_unnamed_addr global i32, align 4
@.str.65 = private unnamed_addr constant [42 x i8] c"uninitialized const %qD is invalid in C++\00", align 1
@.str.66 = private unnamed_addr constant [45 x i8] c"ISO C forbids forward parameter declarations\00", align 1
@.str.67 = private unnamed_addr constant [56 x i8] c"defining a type in a compound literal is invalid in C++\00", align 1
@get_parm_info.explained_incomplete_types = internal unnamed_addr global i1 false, align 1
@.str.68 = private unnamed_addr constant [48 x i8] c"%<void%> as only parameter may not be qualified\00", align 1
@.str.69 = private unnamed_addr constant [36 x i8] c"%<void%> must be the only parameter\00", align 1
@.str.70 = private unnamed_addr constant [46 x i8] c"parameter %q+D has just a forward declaration\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"enum\00", align 1
@.str.72 = private unnamed_addr constant [6 x i8] c"union\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str.74 = private unnamed_addr constant [41 x i8] c"%<%s %E%> declared inside parameter list\00", align 1
@.str.75 = private unnamed_addr constant [44 x i8] c"anonymous %s declared inside parameter list\00", align 1
@.str.76 = private unnamed_addr constant [86 x i8] c"its scope is only this definition or declaration, which is probably not what you want\00", align 1
@.str.77 = private unnamed_addr constant [59 x i8] c"enum type defined in struct or union is not visible in C++\00", align 1
@.str.78 = private unnamed_addr constant [23 x i8] c"enum type defined here\00", align 1
@.str.79 = private unnamed_addr constant [56 x i8] c"struct defined in struct or union is not visible in C++\00", align 1
@.str.80 = private unnamed_addr constant [20 x i8] c"struct defined here\00", align 1
@.str.81 = private unnamed_addr constant [55 x i8] c"union defined in struct or union is not visible in C++\00", align 1
@.str.82 = private unnamed_addr constant [19 x i8] c"union defined here\00", align 1
@.str.83 = private unnamed_addr constant [29 x i8] c"redefinition of %<union %E%>\00", align 1
@.str.84 = private unnamed_addr constant [30 x i8] c"redefinition of %<struct %E%>\00", align 1
@.str.85 = private unnamed_addr constant [24 x i8] c"originally defined here\00", align 1
@.str.86 = private unnamed_addr constant [36 x i8] c"nested redefinition of %<union %E%>\00", align 1
@.str.87 = private unnamed_addr constant [37 x i8] c"nested redefinition of %<struct %E%>\00", align 1
@flag_pack_struct = external local_unnamed_addr global i32, align 4
@struct_parse_info = internal unnamed_addr global ptr null, align 8
@in_sizeof = external local_unnamed_addr global i32, align 4
@in_typeof = external local_unnamed_addr global i32, align 4
@in_alignof = external local_unnamed_addr global i32, align 4
@.str.88 = private unnamed_addr constant [50 x i8] c"defining type in %qs expression is invalid in C++\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"sizeof\00", align 1
@.str.90 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.91 = private unnamed_addr constant [8 x i8] c"alignof\00", align 1
@flag_ms_extensions = external local_unnamed_addr global i32, align 4
@flag_iso = external local_unnamed_addr global i32, align 4
@.str.92 = private unnamed_addr constant [38 x i8] c"declaration does not declare anything\00", align 1
@.str.93 = private unnamed_addr constant [46 x i8] c"ISO C doesn%'t support unnamed structs/unions\00", align 1
@.str.94 = private unnamed_addr constant [27 x i8] c"union has no named members\00", align 1
@.str.95 = private unnamed_addr constant [21 x i8] c"union has no members\00", align 1
@.str.96 = private unnamed_addr constant [28 x i8] c"struct has no named members\00", align 1
@.str.97 = private unnamed_addr constant [22 x i8] c"struct has no members\00", align 1
@.str.98 = private unnamed_addr constant [31 x i8] c"flexible array member in union\00", align 1
@.str.99 = private unnamed_addr constant [43 x i8] c"flexible array member not at end of struct\00", align 1
@.str.100 = private unnamed_addr constant [48 x i8] c"flexible array member in otherwise empty struct\00", align 1
@.str.101 = private unnamed_addr constant [52 x i8] c"invalid use of structure with flexible array member\00", align 1
@.str.102 = private unnamed_addr constant [33 x i8] c"union cannot be made transparent\00", align 1
@.str.103 = private unnamed_addr constant [35 x i8] c"nested redefinition of %<enum %E%>\00", align 1
@.str.104 = private unnamed_addr constant [29 x i8] c"redeclaration of %<enum %E%>\00", align 1
@flag_short_enums = external local_unnamed_addr global i32, align 4
@.str.105 = private unnamed_addr constant [51 x i8] c"enumeration values exceed range of largest integer\00", align 1
@.str.106 = private unnamed_addr constant [45 x i8] c"specified mode too small for enumeral values\00", align 1
@.str.107 = private unnamed_addr constant [52 x i8] c"enumerator value for %qE is not an integer constant\00", align 1
@.str.108 = private unnamed_addr constant [63 x i8] c"enumerator value for %qE is not an integer constant expression\00", align 1
@.str.109 = private unnamed_addr constant [31 x i8] c"overflow in enumeration values\00", align 1
@.str.110 = private unnamed_addr constant [54 x i8] c"ISO C restricts enumerator values to range of %<int%>\00", align 1
@current_function_returns_value = dso_local local_unnamed_addr global i32 0, align 4
@current_function_returns_null = dso_local local_unnamed_addr global i32 0, align 4
@current_function_returns_abnormally = dso_local local_unnamed_addr global i32 0, align 4
@warn_about_return_type = internal unnamed_addr global i32 0, align 4
@c_switch_stack = external local_unnamed_addr global ptr, align 8
@c_cont_label = dso_local local_unnamed_addr global ptr null, align 8
@c_break_label = dso_local local_unnamed_addr global ptr null, align 8
@.str.111 = private unnamed_addr constant [45 x i8] c"inline function %qD given attribute noinline\00", align 1
@.str.112 = private unnamed_addr constant [34 x i8] c"return type is an incomplete type\00", align 1
@warn_return_type = external local_unnamed_addr global i32, align 4
@.str.113 = private unnamed_addr constant [32 x i8] c"return type defaults to %<int%>\00", align 1
@current_function_prototype_locus = internal unnamed_addr global i32 0, align 4
@current_function_prototype_built_in = internal unnamed_addr global i8 0, align 1
@current_function_prototype_arg_types = internal unnamed_addr global ptr null, align 8
@warn_strict_prototypes = external local_unnamed_addr global i32, align 4
@.str.114 = private unnamed_addr constant [40 x i8] c"function declaration isn%'t a prototype\00", align 1
@warn_missing_prototypes = external local_unnamed_addr global i32, align 4
@.str.115 = private unnamed_addr constant [30 x i8] c"no previous prototype for %qD\00", align 1
@.str.116 = private unnamed_addr constant [53 x i8] c"%qD was used with no prototype before its definition\00", align 1
@warn_missing_declarations = external local_unnamed_addr global i32, align 4
@.str.117 = private unnamed_addr constant [32 x i8] c"no previous declaration for %qD\00", align 1
@.str.118 = private unnamed_addr constant [55 x i8] c"%qD was used with no declaration before its definition\00", align 1
@tree_contains_struct = external local_unnamed_addr global [191 x [64 x i8]], align 16
@warn_main = external local_unnamed_addr global i32, align 4
@.str.119 = private unnamed_addr constant [34 x i8] c"return type of %qD is not %<int%>\00", align 1
@.str.120 = private unnamed_addr constant [38 x i8] c"%qD is normally a non-static function\00", align 1
@current_function_arg_info = internal unnamed_addr global ptr null, align 8
@cfun = external local_unnamed_addr global ptr, align 8
@flag_hosted = external local_unnamed_addr global i32, align 4
@.str.121 = private unnamed_addr constant [51 x i8] c"no return statement in function returning non-void\00", align 1
@cgraph_global_info_ready = external local_unnamed_addr global i8, align 1
@check_for_loop_decls.hint = internal unnamed_addr global i1 false, align 1
@.str.122 = private unnamed_addr constant [63 x i8] c"%<for%> loop initial declarations are only allowed in C99 mode\00", align 1
@.str.123 = private unnamed_addr constant [55 x i8] c"use option -std=c99 or -std=gnu99 to compile your code\00", align 1
@.str.124 = private unnamed_addr constant [71 x i8] c"declaration of static variable %qD in %<for%> loop initial declaration\00", align 1
@.str.125 = private unnamed_addr constant [75 x i8] c"declaration of %<extern%> variable %qD in %<for%> loop initial declaration\00", align 1
@.str.126 = private unnamed_addr constant [59 x i8] c"%<struct %E%> declared in %<for%> loop initial declaration\00", align 1
@.str.127 = private unnamed_addr constant [58 x i8] c"%<union %E%> declared in %<for%> loop initial declaration\00", align 1
@.str.128 = private unnamed_addr constant [57 x i8] c"%<enum %E%> declared in %<for%> loop initial declaration\00", align 1
@.str.129 = private unnamed_addr constant [68 x i8] c"declaration of non-variable %qD in %<for%> loop initial declaration\00", align 1
@c_stmt_tree = internal global %struct.stmt_tree_s zeroinitializer, align 8
@debug_hooks = external local_unnamed_addr global ptr, align 8
@.str.130 = private unnamed_addr constant [50 x i8] c"incompatible address space qualifiers %qs and %qs\00", align 1
@.str.131 = private unnamed_addr constant [14 x i8] c"duplicate %qE\00", align 1
@.str.132 = private unnamed_addr constant [49 x i8] c"two or more data types in declaration specifiers\00", align 1
@.str.133 = private unnamed_addr constant [39 x i8] c"%<long long long%> is too long for GCC\00", align 1
@.str.134 = private unnamed_addr constant [60 x i8] c"both %<long long%> and %<double%> in declaration specifiers\00", align 1
@.str.135 = private unnamed_addr constant [39 x i8] c"ISO C90 does not support %<long long%>\00", align 1
@.str.136 = private unnamed_addr constant [54 x i8] c"both %<long%> and %<short%> in declaration specifiers\00", align 1
@.str.137 = private unnamed_addr constant [53 x i8] c"both %<long%> and %<void%> in declaration specifiers\00", align 1
@.str.138 = private unnamed_addr constant [54 x i8] c"both %<long%> and %<_Bool%> in declaration specifiers\00", align 1
@.str.139 = private unnamed_addr constant [53 x i8] c"both %<long%> and %<char%> in declaration specifiers\00", align 1
@.str.140 = private unnamed_addr constant [54 x i8] c"both %<long%> and %<float%> in declaration specifiers\00", align 1
@.str.141 = private unnamed_addr constant [59 x i8] c"both %<long%> and %<_Decimal32%> in declaration specifiers\00", align 1
@.str.142 = private unnamed_addr constant [59 x i8] c"both %<long%> and %<_Decimal64%> in declaration specifiers\00", align 1
@.str.143 = private unnamed_addr constant [60 x i8] c"both %<long%> and %<_Decimal128%> in declaration specifiers\00", align 1
@.str.144 = private unnamed_addr constant [54 x i8] c"both %<short%> and %<void%> in declaration specifiers\00", align 1
@.str.145 = private unnamed_addr constant [55 x i8] c"both %<short%> and %<_Bool%> in declaration specifiers\00", align 1
@.str.146 = private unnamed_addr constant [54 x i8] c"both %<short%> and %<char%> in declaration specifiers\00", align 1
@.str.147 = private unnamed_addr constant [55 x i8] c"both %<short%> and %<float%> in declaration specifiers\00", align 1
@.str.148 = private unnamed_addr constant [56 x i8] c"both %<short%> and %<double%> in declaration specifiers\00", align 1
@.str.149 = private unnamed_addr constant [60 x i8] c"both %<short%> and %<_Decimal32%> in declaration specifiers\00", align 1
@.str.150 = private unnamed_addr constant [60 x i8] c"both %<short%> and %<_Decimal64%> in declaration specifiers\00", align 1
@.str.151 = private unnamed_addr constant [61 x i8] c"both %<short%> and %<_Decimal128%> in declaration specifiers\00", align 1
@.str.152 = private unnamed_addr constant [59 x i8] c"both %<signed%> and %<unsigned%> in declaration specifiers\00", align 1
@.str.153 = private unnamed_addr constant [55 x i8] c"both %<signed%> and %<void%> in declaration specifiers\00", align 1
@.str.154 = private unnamed_addr constant [56 x i8] c"both %<signed%> and %<_Bool%> in declaration specifiers\00", align 1
@.str.155 = private unnamed_addr constant [56 x i8] c"both %<signed%> and %<float%> in declaration specifiers\00", align 1
@.str.156 = private unnamed_addr constant [57 x i8] c"both %<signed%> and %<double%> in declaration specifiers\00", align 1
@.str.157 = private unnamed_addr constant [61 x i8] c"both %<signed%> and %<_Decimal32%> in declaration specifiers\00", align 1
@.str.158 = private unnamed_addr constant [61 x i8] c"both %<signed%> and %<_Decimal64%> in declaration specifiers\00", align 1
@.str.159 = private unnamed_addr constant [62 x i8] c"both %<signed%> and %<_Decimal128%> in declaration specifiers\00", align 1
@.str.160 = private unnamed_addr constant [57 x i8] c"both %<unsigned%> and %<void%> in declaration specifiers\00", align 1
@.str.161 = private unnamed_addr constant [58 x i8] c"both %<unsigned%> and %<_Bool%> in declaration specifiers\00", align 1
@.str.162 = private unnamed_addr constant [58 x i8] c"both %<unsigned%> and %<float%> in declaration specifiers\00", align 1
@.str.163 = private unnamed_addr constant [59 x i8] c"both %<unsigned%> and %<double%> in declaration specifiers\00", align 1
@.str.164 = private unnamed_addr constant [63 x i8] c"both %<unsigned%> and %<_Decimal32%> in declaration specifiers\00", align 1
@.str.165 = private unnamed_addr constant [63 x i8] c"both %<unsigned%> and %<_Decimal64%> in declaration specifiers\00", align 1
@.str.166 = private unnamed_addr constant [64 x i8] c"both %<unsigned%> and %<_Decimal128%> in declaration specifiers\00", align 1
@.str.167 = private unnamed_addr constant [39 x i8] c"ISO C90 does not support complex types\00", align 1
@.str.168 = private unnamed_addr constant [56 x i8] c"both %<complex%> and %<void%> in declaration specifiers\00", align 1
@.str.169 = private unnamed_addr constant [57 x i8] c"both %<complex%> and %<_Bool%> in declaration specifiers\00", align 1
@.str.170 = private unnamed_addr constant [62 x i8] c"both %<complex%> and %<_Decimal32%> in declaration specifiers\00", align 1
@.str.171 = private unnamed_addr constant [62 x i8] c"both %<complex%> and %<_Decimal64%> in declaration specifiers\00", align 1
@.str.172 = private unnamed_addr constant [63 x i8] c"both %<complex%> and %<_Decimal128%> in declaration specifiers\00", align 1
@.str.173 = private unnamed_addr constant [58 x i8] c"both %<complex%> and %<_Fract%> in declaration specifiers\00", align 1
@.str.174 = private unnamed_addr constant [58 x i8] c"both %<complex%> and %<_Accum%> in declaration specifiers\00", align 1
@.str.175 = private unnamed_addr constant [56 x i8] c"both %<complex%> and %<_Sat%> in declaration specifiers\00", align 1
@.str.176 = private unnamed_addr constant [40 x i8] c"ISO C does not support saturating types\00", align 1
@.str.177 = private unnamed_addr constant [53 x i8] c"both %<_Sat%> and %<void%> in declaration specifiers\00", align 1
@.str.178 = private unnamed_addr constant [54 x i8] c"both %<_Sat%> and %<_Bool%> in declaration specifiers\00", align 1
@.str.179 = private unnamed_addr constant [53 x i8] c"both %<_Sat%> and %<char%> in declaration specifiers\00", align 1
@.str.180 = private unnamed_addr constant [52 x i8] c"both %<_Sat%> and %<int%> in declaration specifiers\00", align 1
@.str.181 = private unnamed_addr constant [54 x i8] c"both %<_Sat%> and %<float%> in declaration specifiers\00", align 1
@.str.182 = private unnamed_addr constant [55 x i8] c"both %<_Sat%> and %<double%> in declaration specifiers\00", align 1
@.str.183 = private unnamed_addr constant [59 x i8] c"both %<_Sat%> and %<_Decimal32%> in declaration specifiers\00", align 1
@.str.184 = private unnamed_addr constant [59 x i8] c"both %<_Sat%> and %<_Decimal64%> in declaration specifiers\00", align 1
@.str.185 = private unnamed_addr constant [60 x i8] c"both %<_Sat%> and %<_Decimal128%> in declaration specifiers\00", align 1
@.str.186 = private unnamed_addr constant [56 x i8] c"both %<_Sat%> and %<complex%> in declaration specifiers\00", align 1
@.str.187 = private unnamed_addr constant [11 x i8] c"_Decimal32\00", align 1
@.str.188 = private unnamed_addr constant [11 x i8] c"_Decimal64\00", align 1
@.str.189 = private unnamed_addr constant [12 x i8] c"_Decimal128\00", align 1
@.str.190 = private unnamed_addr constant [56 x i8] c"both %<long long%> and %<%s%> in declaration specifiers\00", align 1
@.str.191 = private unnamed_addr constant [51 x i8] c"both %<long%> and %<%s%> in declaration specifiers\00", align 1
@.str.192 = private unnamed_addr constant [52 x i8] c"both %<short%> and %<%s%> in declaration specifiers\00", align 1
@.str.193 = private unnamed_addr constant [53 x i8] c"both %<signed%> and %<%s%> in declaration specifiers\00", align 1
@.str.194 = private unnamed_addr constant [55 x i8] c"both %<unsigned%> and %<%s%> in declaration specifiers\00", align 1
@.str.195 = private unnamed_addr constant [54 x i8] c"both %<complex%> and %<%s%> in declaration specifiers\00", align 1
@.str.196 = private unnamed_addr constant [51 x i8] c"both %<_Sat%> and %<%s%> in declaration specifiers\00", align 1
@.str.197 = private unnamed_addr constant [53 x i8] c"decimal floating point not supported for this target\00", align 1
@.str.198 = private unnamed_addr constant [46 x i8] c"ISO C does not support decimal floating point\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"_Fract\00", align 1
@.str.200 = private unnamed_addr constant [7 x i8] c"_Accum\00", align 1
@.str.201 = private unnamed_addr constant [48 x i8] c"fixed-point types not supported for this target\00", align 1
@.str.202 = private unnamed_addr constant [41 x i8] c"ISO C does not support fixed-point types\00", align 1
@.str.203 = private unnamed_addr constant [51 x i8] c"C++ lookup of %qD would return a field, not a type\00", align 1
@.str.204 = private unnamed_addr constant [43 x i8] c"%qE fails to be a typedef or built in type\00", align 1
@.str.205 = private unnamed_addr constant [39 x i8] c"%qE is not at beginning of declaration\00", align 1
@.str.206 = private unnamed_addr constant [32 x i8] c"%<__thread%> used with %<auto%>\00", align 1
@.str.207 = private unnamed_addr constant [36 x i8] c"%<__thread%> used with %<register%>\00", align 1
@.str.208 = private unnamed_addr constant [35 x i8] c"%<__thread%> used with %<typedef%>\00", align 1
@.str.209 = private unnamed_addr constant [31 x i8] c"%<__thread%> before %<extern%>\00", align 1
@.str.210 = private unnamed_addr constant [31 x i8] c"%<__thread%> before %<static%>\00", align 1
@.str.211 = private unnamed_addr constant [51 x i8] c"multiple storage classes in declaration specifiers\00", align 1
@.str.212 = private unnamed_addr constant [27 x i8] c"%<__thread%> used with %qE\00", align 1
@.str.213 = private unnamed_addr constant [50 x i8] c"%<_Sat%> is used without %<_Fract%> or %<_Accum%>\00", align 1
@.str.214 = private unnamed_addr constant [68 x i8] c"ISO C does not support plain %<complex%> meaning %<double complex%>\00", align 1
@.str.215 = private unnamed_addr constant [45 x i8] c"ISO C does not support complex integer types\00", align 1
@flag_syntax_only = external local_unnamed_addr global i32, align 4
@ext_block = internal global ptr null, align 8
@global_dc = external local_unnamed_addr global ptr, align 8
@timevar_enable = external local_unnamed_addr global i8, align 1
@sdb_debug_hooks = external constant %struct.gcc_debug_hooks, align 8
@dwarf2_debug_hooks = external constant %struct.gcc_debug_hooks, align 8
@omp_clause_num_ops = external local_unnamed_addr constant [0 x i8], align 1
@gt_ggc_r_gt_c_decl_h = dso_local local_unnamed_addr constant [10 x %struct.ggc_root_tab] [%struct.ggc_root_tab { ptr @ext_block, i64 1, i64 8, ptr @gt_ggc_mx_lang_tree_node, ptr @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { ptr @c_inline_statics, i64 1, i64 8, ptr @gt_ggc_mx_c_inline_static, ptr @gt_pch_nx_c_inline_static }, %struct.ggc_root_tab { ptr @external_scope, i64 1, i64 8, ptr @gt_ggc_mx_c_scope, ptr @gt_pch_nx_c_scope }, %struct.ggc_root_tab { ptr @file_scope, i64 1, i64 8, ptr @gt_ggc_mx_c_scope, ptr @gt_pch_nx_c_scope }, %struct.ggc_root_tab { ptr @current_function_scope, i64 1, i64 8, ptr @gt_ggc_mx_c_scope, ptr @gt_pch_nx_c_scope }, %struct.ggc_root_tab { ptr @current_scope, i64 1, i64 8, ptr @gt_ggc_mx_c_scope, ptr @gt_pch_nx_c_scope }, %struct.ggc_root_tab { ptr @visible_builtins, i64 1, i64 8, ptr @gt_ggc_mx_lang_tree_node, ptr @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { ptr @all_translation_units, i64 1, i64 8, ptr @gt_ggc_mx_lang_tree_node, ptr @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { ptr @c_stmt_tree, i64 1, i64 16, ptr @gt_ggc_mx_lang_tree_node, ptr @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab zeroinitializer], align 16
@binding_freelist = internal global ptr null, align 8
@gt_ggc_rd_gt_c_decl_h = dso_local local_unnamed_addr constant [3 x %struct.ggc_root_tab] [%struct.ggc_root_tab { ptr @binding_freelist, i64 1, i64 8, ptr null, ptr null }, %struct.ggc_root_tab { ptr @scope_freelist, i64 1, i64 8, ptr null, ptr null }, %struct.ggc_root_tab zeroinitializer], align 16
@gt_pch_rs_gt_c_decl_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { ptr @c_stmt_tree, i64 1, i64 16, ptr null, ptr null }, %struct.ggc_root_tab zeroinitializer], align 16
@.str.216 = private unnamed_addr constant [66 x i8] c"%qD is static but used in inline function %qD which is not static\00", align 1
@.str.217 = private unnamed_addr constant [71 x i8] c"%q+D is static but declared in inline function %qD which is not static\00", align 1
@.str.218 = private unnamed_addr constant [44 x i8] c"%q+D redeclared as different kind of symbol\00", align 1
@.str.219 = private unnamed_addr constant [48 x i8] c"built-in function %q+D declared as non-function\00", align 1
@.str.220 = private unnamed_addr constant [48 x i8] c"declaration of %q+D shadows a built-in function\00", align 1
@.str.221 = private unnamed_addr constant [33 x i8] c"redeclaration of enumerator %q+D\00", align 1
@.str.222 = private unnamed_addr constant [45 x i8] c"conflicting types for built-in function %q+D\00", align 1
@.str.223 = private unnamed_addr constant [27 x i8] c"conflicting types for %q+D\00", align 1
@.str.224 = private unnamed_addr constant [58 x i8] c"conflicting named address spaces (generic vs %s) for %q+D\00", align 1
@.str.225 = private unnamed_addr constant [58 x i8] c"conflicting named address spaces (%s vs generic) for %q+D\00", align 1
@.str.226 = private unnamed_addr constant [53 x i8] c"conflicting named address spaces (%s vs %s) for %q+D\00", align 1
@.str.227 = private unnamed_addr constant [37 x i8] c"conflicting type qualifiers for %q+D\00", align 1
@.str.228 = private unnamed_addr constant [29 x i8] c"redefinition of typedef %q+D\00", align 1
@.str.229 = private unnamed_addr constant [21 x i8] c"redefinition of %q+D\00", align 1
@.str.230 = private unnamed_addr constant [58 x i8] c"static declaration of %q+D follows non-static declaration\00", align 1
@.str.231 = private unnamed_addr constant [58 x i8] c"non-static declaration of %q+D follows static declaration\00", align 1
@warn_traditional = external local_unnamed_addr global i32, align 4
@.str.232 = private unnamed_addr constant [41 x i8] c"%<gnu_inline%> attribute present on %q+D\00", align 1
@.str.233 = private unnamed_addr constant [13 x i8] c"but not here\00", align 1
@.str.234 = private unnamed_addr constant [70 x i8] c"thread-local declaration of %q+D follows non-thread-local declaration\00", align 1
@.str.235 = private unnamed_addr constant [70 x i8] c"non-thread-local declaration of %q+D follows thread-local declaration\00", align 1
@.str.236 = private unnamed_addr constant [63 x i8] c"extern declaration of %q+D follows declaration with no linkage\00", align 1
@.str.237 = private unnamed_addr constant [63 x i8] c"declaration of %q+D with no linkage follows extern declaration\00", align 1
@.str.238 = private unnamed_addr constant [38 x i8] c"redeclaration of %q+D with no linkage\00", align 1
@.str.239 = private unnamed_addr constant [47 x i8] c"duplicate declaration of %qD is invalid in C++\00", align 1
@.str.240 = private unnamed_addr constant [75 x i8] c"redeclaration of %q+D with different visibility (old visibility preserved)\00", align 1
@.str.241 = private unnamed_addr constant [70 x i8] c"inline declaration of %qD follows declaration with attribute noinline\00", align 1
@.str.242 = private unnamed_addr constant [72 x i8] c"declaration of %q+D with attribute noinline follows inline declaration \00", align 1
@.str.243 = private unnamed_addr constant [31 x i8] c"redefinition of parameter %q+D\00", align 1
@warn_redundant_decls = external local_unnamed_addr global i32, align 4
@.str.244 = private unnamed_addr constant [32 x i8] c"redundant redeclaration of %q+D\00", align 1
@.str.245 = private unnamed_addr constant [88 x i8] c"a parameter list with an ellipsis can%'t match an empty parameter name list declaration\00", align 1
@.str.246 = private unnamed_addr constant [100 x i8] c"an argument type that has a default promotion can%'t match an empty parameter name list declaration\00", align 1
@.str.247 = private unnamed_addr constant [78 x i8] c"prototype for %q+D declares more arguments than previous old-style definition\00", align 1
@.str.248 = private unnamed_addr constant [79 x i8] c"prototype for %q+D declares fewer arguments than previous old-style definition\00", align 1
@.str.249 = private unnamed_addr constant [63 x i8] c"prototype for %q+D declares argument %d with incompatible type\00", align 1
@.str.250 = private unnamed_addr constant [52 x i8] c"prototype for %q+D follows non-prototype definition\00", align 1
@warn_shadow = external local_unnamed_addr global i32, align 4
@.str.251 = private unnamed_addr constant [50 x i8] c"declaration of %q+D shadows previous non-variable\00", align 1
@.str.252 = private unnamed_addr constant [40 x i8] c"declaration of %q+D shadows a parameter\00", align 1
@.str.253 = private unnamed_addr constant [49 x i8] c"declaration of %q+D shadows a global declaration\00", align 1
@.str.254 = private unnamed_addr constant [45 x i8] c"declaration of %q+D shadows a previous local\00", align 1
@.str.255 = private unnamed_addr constant [29 x i8] c"shadowed declaration is here\00", align 1
@warn_implicit_function_declaration = external local_unnamed_addr global i32, align 4
@.str.256 = private unnamed_addr constant [37 x i8] c"implicit declaration of function %qE\00", align 1
@.str.257 = private unnamed_addr constant [37 x i8] c"previous definition of %q+D was here\00", align 1
@.str.258 = private unnamed_addr constant [47 x i8] c"previous implicit declaration of %q+D was here\00", align 1
@.str.259 = private unnamed_addr constant [38 x i8] c"previous declaration of %q+D was here\00", align 1
@.str.260 = private unnamed_addr constant [58 x i8] c"jump into scope of identifier with variably modified type\00", align 1
@.str.261 = private unnamed_addr constant [35 x i8] c"jump skips variable initialization\00", align 1
@warn_jump_misses_init = external local_unnamed_addr global i32, align 4
@.str.262 = private unnamed_addr constant [56 x i8] c"using %qD as both a typedef and a tag is invalid in C++\00", align 1
@.str.263 = private unnamed_addr constant [36 x i8] c"variably modified %qE at file scope\00", align 1
@.str.264 = private unnamed_addr constant [38 x i8] c"variably modified field at file scope\00", align 1
@warn_implicit_int = external local_unnamed_addr global i32, align 4
@.str.265 = private unnamed_addr constant [47 x i8] c"type defaults to %<int%> in declaration of %qE\00", align 1
@.str.266 = private unnamed_addr constant [38 x i8] c"type defaults to %<int%> in type name\00", align 1
@flag_signed_bitfields = external local_unnamed_addr global i32, align 4
@.str.267 = private unnamed_addr constant [20 x i8] c"duplicate %<const%>\00", align 1
@.str.268 = private unnamed_addr constant [23 x i8] c"duplicate %<restrict%>\00", align 1
@.str.269 = private unnamed_addr constant [23 x i8] c"duplicate %<volatile%>\00", align 1
@.str.270 = private unnamed_addr constant [44 x i8] c"conflicting named address spaces (%s vs %s)\00", align 1
@flag_gen_aux_info = external local_unnamed_addr global i32, align 4
@.str.271 = private unnamed_addr constant [38 x i8] c"function definition declared %<auto%>\00", align 1
@.str.272 = private unnamed_addr constant [42 x i8] c"function definition declared %<register%>\00", align 1
@.str.273 = private unnamed_addr constant [41 x i8] c"function definition declared %<typedef%>\00", align 1
@.str.274 = private unnamed_addr constant [42 x i8] c"function definition declared %<__thread%>\00", align 1
@.str.275 = private unnamed_addr constant [48 x i8] c"storage class specified for structure field %qE\00", align 1
@.str.276 = private unnamed_addr constant [44 x i8] c"storage class specified for structure field\00", align 1
@.str.277 = private unnamed_addr constant [42 x i8] c"storage class specified for parameter %qE\00", align 1
@.str.278 = private unnamed_addr constant [46 x i8] c"storage class specified for unnamed parameter\00", align 1
@.str.279 = private unnamed_addr constant [37 x i8] c"storage class specified for typename\00", align 1
@.str.280 = private unnamed_addr constant [40 x i8] c"%qE initialized and declared %<extern%>\00", align 1
@.str.281 = private unnamed_addr constant [40 x i8] c"%qE has both %<extern%> and initializer\00", align 1
@.str.282 = private unnamed_addr constant [49 x i8] c"file-scope declaration of %qE specifies %<auto%>\00", align 1
@.str.283 = private unnamed_addr constant [53 x i8] c"file-scope declaration of %qE specifies %<register%>\00", align 1
@.str.284 = private unnamed_addr constant [40 x i8] c"nested function %qE declared %<extern%>\00", align 1
@.str.285 = private unnamed_addr constant [61 x i8] c"function-scope %qE implicitly auto and declared %<__thread%>\00", align 1
@.str.286 = private unnamed_addr constant [60 x i8] c"static or type qualifiers in non-parameter array declarator\00", align 1
@sizetype_tab = external local_unnamed_addr global [4 x ptr], align 16
@.str.287 = private unnamed_addr constant [37 x i8] c"declaration of %qE as array of voids\00", align 1
@.str.288 = private unnamed_addr constant [43 x i8] c"declaration of type name as array of voids\00", align 1
@.str.289 = private unnamed_addr constant [41 x i8] c"declaration of %qE as array of functions\00", align 1
@.str.290 = private unnamed_addr constant [47 x i8] c"declaration of type name as array of functions\00", align 1
@.str.291 = private unnamed_addr constant [39 x i8] c"size of array %qE has non-integer type\00", align 1
@.str.292 = private unnamed_addr constant [43 x i8] c"size of unnamed array has non-integer type\00", align 1
@.str.293 = private unnamed_addr constant [34 x i8] c"ISO C forbids zero-size array %qE\00", align 1
@.str.294 = private unnamed_addr constant [30 x i8] c"ISO C forbids zero-size array\00", align 1
@.str.295 = private unnamed_addr constant [30 x i8] c"size of array %qE is negative\00", align 1
@.str.296 = private unnamed_addr constant [34 x i8] c"size of unnamed array is negative\00", align 1
@.str.297 = private unnamed_addr constant [31 x i8] c"size of array %qE is too large\00", align 1
@.str.298 = private unnamed_addr constant [35 x i8] c"size of unnamed array is too large\00", align 1
@.str.299 = private unnamed_addr constant [48 x i8] c"ISO C90 does not support flexible array members\00", align 1
@.str.300 = private unnamed_addr constant [29 x i8] c"%<[*]%> not in a declaration\00", align 1
@.str.301 = private unnamed_addr constant [39 x i8] c"array type has incomplete element type\00", align 1
@.str.302 = private unnamed_addr constant [46 x i8] c"%qE declared as function returning a function\00", align 1
@.str.303 = private unnamed_addr constant [52 x i8] c"type name declared as function returning a function\00", align 1
@.str.304 = private unnamed_addr constant [44 x i8] c"%qE declared as function returning an array\00", align 1
@.str.305 = private unnamed_addr constant [50 x i8] c"type name declared as function returning an array\00", align 1
@.str.306 = private unnamed_addr constant [51 x i8] c"function definition has qualified void return type\00", align 1
@.str.307 = private unnamed_addr constant [48 x i8] c"type qualifiers ignored on function return type\00", align 1
@.str.308 = private unnamed_addr constant [39 x i8] c"ISO C forbids qualified function types\00", align 1
@.str.309 = private unnamed_addr constant [45 x i8] c"%qs combined with %<auto%> qualifier for %qE\00", align 1
@.str.310 = private unnamed_addr constant [49 x i8] c"%qs combined with %<register%> qualifier for %qE\00", align 1
@.str.311 = private unnamed_addr constant [36 x i8] c"%qs specified for auto variable %qE\00", align 1
@.str.312 = private unnamed_addr constant [32 x i8] c"%qs specified for parameter %qE\00", align 1
@.str.313 = private unnamed_addr constant [36 x i8] c"%qs specified for unnamed parameter\00", align 1
@.str.314 = private unnamed_addr constant [38 x i8] c"%qs specified for structure field %qE\00", align 1
@.str.315 = private unnamed_addr constant [34 x i8] c"%qs specified for structure field\00", align 1
@.str.316 = private unnamed_addr constant [33 x i8] c"typedef %q+D declared %<inline%>\00", align 1
@.str.317 = private unnamed_addr constant [47 x i8] c"ISO C forbids const or volatile function types\00", align 1
@.str.318 = private unnamed_addr constant [70 x i8] c"a member of a structure or union cannot have a variably modified type\00", align 1
@.str.319 = private unnamed_addr constant [36 x i8] c"variable or field %qE declared void\00", align 1
@.str.320 = private unnamed_addr constant [49 x i8] c"attributes in parameter array declarator ignored\00", align 1
@.str.321 = private unnamed_addr constant [35 x i8] c"parameter %q+D declared %<inline%>\00", align 1
@.str.322 = private unnamed_addr constant [33 x i8] c"field %qE declared as a function\00", align 1
@.str.323 = private unnamed_addr constant [30 x i8] c"field %qE has incomplete type\00", align 1
@.str.324 = private unnamed_addr constant [34 x i8] c"unnamed field has incomplete type\00", align 1
@.str.325 = private unnamed_addr constant [39 x i8] c"invalid storage class for function %qE\00", align 1
@.str.326 = private unnamed_addr constant [45 x i8] c"%<noreturn%> function returns non-void value\00", align 1
@.str.327 = private unnamed_addr constant [32 x i8] c"cannot inline function %<main%>\00", align 1
@.str.328 = private unnamed_addr constant [62 x i8] c"variable previously declared %<static%> redeclared %<extern%>\00", align 1
@.str.329 = private unnamed_addr constant [34 x i8] c"variable %q+D declared %<inline%>\00", align 1
@.str.330 = private unnamed_addr constant [48 x i8] c"non-nested function with variably modified type\00", align 1
@.str.331 = private unnamed_addr constant [56 x i8] c"object with variably modified type must have no linkage\00", align 1
@.str.332 = private unnamed_addr constant [66 x i8] c"non-local variable %qD with anonymous type is questionable in C++\00", align 1
@warn_vla = external local_unnamed_addr global i32, align 4
@.str.333 = private unnamed_addr constant [57 x i8] c"ISO C90 forbids array %qE whose size can%'t be evaluated\00", align 1
@.str.334 = private unnamed_addr constant [53 x i8] c"ISO C90 forbids array whose size can%'t be evaluated\00", align 1
@.str.335 = private unnamed_addr constant [42 x i8] c"ISO C90 forbids variable length array %qE\00", align 1
@.str.336 = private unnamed_addr constant [38 x i8] c"ISO C90 forbids variable length array\00", align 1
@.str.337 = private unnamed_addr constant [42 x i8] c"the size of array %qE can%'t be evaluated\00", align 1
@.str.338 = private unnamed_addr constant [39 x i8] c"the size of array can %'t be evaluated\00", align 1
@.str.339 = private unnamed_addr constant [34 x i8] c"variable length array %qE is used\00", align 1
@.str.340 = private unnamed_addr constant [30 x i8] c"variable length array is used\00", align 1
@.str.341 = private unnamed_addr constant [56 x i8] c"parameter names (without types) in function declaration\00", align 1
@.str.342 = private unnamed_addr constant [40 x i8] c"parameter %u (%q+D) has incomplete type\00", align 1
@.str.343 = private unnamed_addr constant [33 x i8] c"parameter %u has incomplete type\00", align 1
@.str.344 = private unnamed_addr constant [34 x i8] c"parameter %u (%q+D) has void type\00", align 1
@.str.345 = private unnamed_addr constant [27 x i8] c"parameter %u has void type\00", align 1
@.str.346 = private unnamed_addr constant [12 x i8] c"<anonymous>\00", align 1
@.str.347 = private unnamed_addr constant [44 x i8] c"bit-field %qs width not an integer constant\00", align 1
@.str.348 = private unnamed_addr constant [55 x i8] c"bit-field %qs width not an integer constant expression\00", align 1
@.str.349 = private unnamed_addr constant [32 x i8] c"negative width in bit-field %qs\00", align 1
@.str.350 = private unnamed_addr constant [29 x i8] c"zero width for bit-field %qs\00", align 1
@.str.351 = private unnamed_addr constant [31 x i8] c"bit-field %qs has invalid type\00", align 1
@.str.352 = private unnamed_addr constant [41 x i8] c"type of bit-field %qs is a GCC extension\00", align 1
@.str.353 = private unnamed_addr constant [30 x i8] c"width of %qs exceeds its type\00", align 1
@.str.354 = private unnamed_addr constant [40 x i8] c"%qs is narrower than values of its type\00", align 1
@.str.355 = private unnamed_addr constant [22 x i8] c"duplicate member %q+D\00", align 1
@htab_hash_pointer = external local_unnamed_addr global ptr, align 8
@htab_eq_pointer = external local_unnamed_addr global ptr, align 8
@.str.356 = private unnamed_addr constant [59 x i8] c"using %qD as both field and typedef name is invalid in C++\00", align 1
@.str.357 = private unnamed_addr constant [67 x i8] c"old-style parameter declarations in prototyped function definition\00", align 1
@.str.358 = private unnamed_addr constant [55 x i8] c"traditional C rejects ISO C style function definitions\00", align 1
@.str.359 = private unnamed_addr constant [23 x i8] c"parameter name omitted\00", align 1
@.str.360 = private unnamed_addr constant [30 x i8] c"old-style function definition\00", align 1
@.str.361 = private unnamed_addr constant [43 x i8] c"parameter name missing from parameter list\00", align 1
@.str.362 = private unnamed_addr constant [32 x i8] c"%qD declared as a non-parameter\00", align 1
@.str.363 = private unnamed_addr constant [30 x i8] c"multiple parameters named %qD\00", align 1
@.str.364 = private unnamed_addr constant [38 x i8] c"parameter %qD declared with void type\00", align 1
@.str.365 = private unnamed_addr constant [32 x i8] c"type of %qD defaults to %<int%>\00", align 1
@.str.366 = private unnamed_addr constant [34 x i8] c"parameter %qD has incomplete type\00", align 1
@.str.367 = private unnamed_addr constant [52 x i8] c"declaration for parameter %qD but no such parameter\00", align 1
@.str.368 = private unnamed_addr constant [54 x i8] c"number of arguments doesn%'t match built-in prototype\00", align 1
@.str.369 = private unnamed_addr constant [45 x i8] c"number of arguments doesn%'t match prototype\00", align 1
@.str.370 = private unnamed_addr constant [22 x i8] c"prototype declaration\00", align 1
@.str.371 = private unnamed_addr constant [56 x i8] c"promoted argument %qD doesn%'t match built-in prototype\00", align 1
@.str.372 = private unnamed_addr constant [47 x i8] c"promoted argument %qD doesn%'t match prototype\00", align 1
@.str.373 = private unnamed_addr constant [47 x i8] c"argument %qD doesn%'t match built-in prototype\00", align 1
@.str.374 = private unnamed_addr constant [38 x i8] c"argument %qD doesn%'t match prototype\00", align 1
@.str.375 = private unnamed_addr constant [28 x i8] c"%q+F used but never defined\00", align 1
@tree_code_length = external local_unnamed_addr constant [0 x i8], align 1

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @vprintf(ptr noalias nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = load ptr, ptr @stdout, align 8, !tbaa !5
  %4 = tail call i32 @vfprintf(ptr noundef %3, ptr noundef %0, ptr noundef %1)
  ret i32 %4
}

; Function Attrs: nofree nounwind
declare noundef i32 @vfprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 {
  %1 = load ptr, ptr @stdin, align 8, !tbaa !5
  %2 = tail call i32 @getc(ptr noundef %1)
  ret i32 %2
}

; Function Attrs: nofree nounwind
declare noundef i32 @getc(ptr nocapture noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @fgetc_unlocked(ptr noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !14
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !15

7:                                                ; preds = %1
  %8 = tail call i32 @__uflow(ptr noundef nonnull %0) #24
  br label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !9
  %11 = load i8, ptr %3, align 1, !tbaa !16
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

declare i32 @__uflow(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @getc_unlocked(ptr noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !14
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !15

7:                                                ; preds = %1
  %8 = tail call i32 @__uflow(ptr noundef nonnull %0) #24
  br label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !9
  %11 = load i8, ptr %3, align 1, !tbaa !16
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #2 {
  %1 = load ptr, ptr @stdin, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !9
  %4 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !14
  %6 = icmp ult ptr %3, %5
  br i1 %6, label %9, label %7, !prof !15

7:                                                ; preds = %0
  %8 = tail call i32 @__uflow(ptr noundef nonnull %1) #24
  br label %13

9:                                                ; preds = %0
  %10 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %10, ptr %2, align 8, !tbaa !9
  %11 = load i8, ptr %3, align 1, !tbaa !16
  %12 = zext i8 %11 to i32
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi i32 [ %8, %7 ], [ %12, %9 ]
  ret i32 %14
}

; Function Attrs: inlinehint nofree nounwind sspstrong uwtable
define dso_local i32 @putchar(i32 noundef %0) local_unnamed_addr #0 {
  %2 = load ptr, ptr @stdout, align 8, !tbaa !5
  %3 = tail call i32 @putc(i32 noundef %0, ptr noundef %2)
  ret i32 %3
}

; Function Attrs: nofree nounwind
declare noundef i32 @putc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @fputc_unlocked(i32 noundef %0, ptr noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !18
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !15

8:                                                ; preds = %2
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %1, i32 noundef %9) #24
  br label %15

11:                                               ; preds = %2
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !17
  store i8 %12, ptr %4, align 1, !tbaa !16
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

declare i32 @__overflow(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @putc_unlocked(i32 noundef %0, ptr noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %1, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !18
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !15

8:                                                ; preds = %2
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %1, i32 noundef %9) #24
  br label %15

11:                                               ; preds = %2
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !17
  store i8 %12, ptr %4, align 1, !tbaa !16
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @putchar_unlocked(i32 noundef %0) local_unnamed_addr #2 {
  %2 = load ptr, ptr @stdout, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct._IO_FILE, ptr %2, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct._IO_FILE, ptr %2, i64 0, i32 6
  %6 = load ptr, ptr %5, align 8, !tbaa !18
  %7 = icmp ult ptr %4, %6
  br i1 %7, label %11, label %8, !prof !15

8:                                                ; preds = %1
  %9 = and i32 %0, 255
  %10 = tail call i32 @__overflow(ptr noundef nonnull %2, i32 noundef %9) #24
  br label %15

11:                                               ; preds = %1
  %12 = trunc i32 %0 to i8
  %13 = getelementptr inbounds i8, ptr %4, i64 1
  store ptr %13, ptr %3, align 8, !tbaa !17
  store i8 %12, ptr %4, align 1, !tbaa !16
  %14 = and i32 %0, 255
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %11 ]
  ret i32 %16
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @getline(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #2 {
  %4 = tail call i64 @__getdelim(ptr noundef %0, ptr noundef %1, i32 noundef 10, ptr noundef %2) #24
  ret i64 %4
}

declare i64 @__getdelim(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @feof_unlocked(ptr nocapture noundef readonly %0) local_unnamed_addr #4 {
  %2 = load i32, ptr %0, align 8, !tbaa !19
  %3 = lshr i32 %2, 4
  %4 = and i32 %3, 1
  ret i32 %4
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ferror_unlocked(ptr nocapture noundef readonly %0) local_unnamed_addr #4 {
  %2 = load i32, ptr %0, align 8, !tbaa !19
  %3 = lshr i32 %2, 5
  %4 = and i32 %3, 1
  ret i32 %4
}

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable
define dso_local i32 @tolower(i32 noundef %0) local_unnamed_addr #5 {
  %2 = add i32 %0, 128
  %3 = icmp ult i32 %2, 384
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = tail call ptr @__ctype_tolower_loc() #24
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds i32, ptr %6, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !20
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi i32 [ %9, %4 ], [ %0, %1 ]
  ret i32 %11
}

declare ptr @__ctype_tolower_loc() local_unnamed_addr #3

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable
define dso_local i32 @toupper(i32 noundef %0) local_unnamed_addr #5 {
  %2 = add i32 %0, 128
  %3 = icmp ult i32 %2, 384
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = tail call ptr @__ctype_toupper_loc() #24
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds i32, ptr %6, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !20
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi i32 [ %9, %4 ], [ %0, %1 ]
  ret i32 %11
}

declare ptr @__ctype_toupper_loc() local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i32 @atoi(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtol(ptr noundef %0, ptr noundef null, i32 noundef 10) #24
  %3 = trunc i64 %2 to i32
  ret i32 %3
}

declare i64 @__isoc23_strtol(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @atol(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtol(ptr noundef %0, ptr noundef null, i32 noundef 10) #24
  ret i64 %2
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local i64 @atoll(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call i64 @__isoc23_strtoll(ptr noundef %0, ptr noundef null, i32 noundef 10) #24
  ret i64 %2
}

declare i64 @__isoc23_strtoll(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define dso_local ptr @bsearch(ptr noundef %0, ptr noundef %1, i64 noundef %2, i64 noundef %3, ptr nocapture noundef readonly %4) local_unnamed_addr #2 {
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %5, %20
  %8 = phi i64 [ %22, %20 ], [ 0, %5 ]
  %9 = phi i64 [ %21, %20 ], [ %2, %5 ]
  %10 = add i64 %8, %9
  %11 = lshr i64 %10, 1
  %12 = mul i64 %11, %3
  %13 = getelementptr inbounds i8, ptr %1, i64 %12
  %14 = tail call i32 %4(ptr noundef %0, ptr noundef %13) #24
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %7
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %11, 1
  br label %20

20:                                               ; preds = %7, %18
  %21 = phi i64 [ %9, %18 ], [ %11, %7 ]
  %22 = phi i64 [ %19, %18 ], [ %8, %7 ]
  %23 = icmp ult i64 %22, %21
  br i1 %23, label %7, label %24, !llvm.loop !21

24:                                               ; preds = %16, %20, %5
  %25 = phi ptr [ null, %5 ], [ null, %20 ], [ %13, %16 ]
  ret ptr %25
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #6

; Function Attrs: inlinehint mustprogress nofree nounwind sspstrong willreturn uwtable
define dso_local nofpclass(nan inf) double @atof(ptr nocapture noundef readonly %0) local_unnamed_addr #7 {
  %2 = tail call fast nofpclass(nan inf) double @strtod(ptr nocapture noundef %0, ptr noundef null)
  ret double %2
}

; Function Attrs: mustprogress nofree nounwind willreturn
declare nofpclass(nan inf) double @strtod(ptr noundef readonly, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @add_stmt(ptr noundef returned %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %3
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = icmp ugt i32 %5, 3
  br i1 %6, label %7, label %17

7:                                                ; preds = %1
  %8 = icmp ult i32 %5, 11
  %9 = icmp ne i64 %3, 133
  %10 = and i1 %8, %9
  br i1 %10, label %11, label %17

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.tree_exp, ptr %0, i64 0, i32 1
  %13 = load i32, ptr %12, align 8, !tbaa !16
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = load i32, ptr @input_location, align 4, !tbaa !20
  store i32 %16, ptr %12, align 8, !tbaa !16
  br label %17

17:                                               ; preds = %11, %15, %7, %1
  %18 = trunc i64 %2 to i16
  switch i16 %18, label %23 [
    i16 139, label %19
    i16 133, label %19
  ]

19:                                               ; preds = %17, %17
  %20 = load ptr, ptr @c_stmt_tree, align 8, !tbaa !23
  %21 = load i64, ptr %20, align 8
  %22 = or i64 %21, 68719476736
  store i64 %22, ptr %20, align 8
  br label %23

23:                                               ; preds = %17, %19
  tail call void @append_to_statement_list_force(ptr noundef nonnull %0, ptr noundef nonnull @c_stmt_tree) #24
  ret ptr %0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local nonnull ptr @current_stmt_tree() local_unnamed_addr #10 {
  ret ptr @c_stmt_tree
}

declare void @append_to_statement_list_force(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @c_print_identifier(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 {
  %4 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.c_binding, ptr %5, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi ptr [ %9, %7 ], [ null, %3 ]
  %12 = add nsw i32 %2, 4
  tail call void @print_node(ptr noundef %0, ptr noundef nonnull @.str, ptr noundef %11, i32 noundef %12) #24
  %13 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !34
  %15 = icmp eq ptr %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.c_binding, ptr %14, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !32
  br label %19

19:                                               ; preds = %10, %16
  %20 = phi ptr [ %18, %16 ], [ null, %10 ]
  tail call void @print_node(ptr noundef %0, ptr noundef nonnull @.str.1, ptr noundef %20, i32 noundef %12) #24
  %21 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !35
  %23 = icmp eq ptr %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.c_binding, ptr %22, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !32
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi ptr [ %26, %24 ], [ null, %19 ]
  tail call void @print_node(ptr noundef %0, ptr noundef nonnull @.str.2, ptr noundef %28, i32 noundef %12) #24
  %29 = load i64, ptr %1, align 8
  %30 = and i64 %29, 8589934592
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.c_common_identifier, ptr %1, i64 0, i32 1, i32 2
  %34 = load i8, ptr %33, align 1, !tbaa !36
  %35 = icmp eq i8 %34, 65
  br i1 %35, label %44, label %36

36:                                               ; preds = %32
  %37 = load ptr, ptr @ridpointers, align 8, !tbaa !5
  %38 = zext i8 %34 to i64
  %39 = getelementptr inbounds ptr, ptr %37, i64 %38
  %40 = load ptr, ptr %39, align 8, !tbaa !5
  tail call void @indent_to(ptr noundef %0, i32 noundef %12) #24
  %41 = getelementptr inbounds %struct.tree_identifier, ptr %40, i64 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !16
  %43 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %0, ptr noundef nonnull @.str.3, ptr noundef %40, ptr noundef %42)
  br label %44

44:                                               ; preds = %36, %32, %27
  ret void
}

declare void @print_node(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @indent_to(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @c_finish_incomplete_decl(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65535
  %4 = icmp eq i64 %3, 32
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !16
  %8 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %9 = icmp eq ptr %7, %8
  br i1 %9, label %28, label %10

10:                                               ; preds = %5
  %11 = load i64, ptr %7, align 8
  %12 = and i64 %11, 65535
  %13 = icmp eq i64 %12, 15
  br i1 %13, label %14, label %28

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %16 = load i64, ptr %15, align 8
  %17 = and i64 %16, 33554432
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %28

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.tree_type, ptr %7, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !16
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %25 = load i32, ptr %24, align 8, !tbaa !16
  %26 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %25, i32 noundef 0, ptr noundef nonnull @.str.4, ptr noundef nonnull %0) #24
  %27 = tail call i32 @complete_array_type(ptr noundef nonnull %6, ptr noundef null, i8 noundef zeroext 1) #24
  tail call void @layout_decl(ptr noundef nonnull %0, i32 noundef 0) #24
  br label %28

28:                                               ; preds = %5, %10, %14, %19, %23, %1
  ret void
}

declare zeroext i8 @warning_at(i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

declare i32 @complete_array_type(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

declare void @layout_decl(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @record_inline_static(i32 noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #9 {
  %5 = tail call ptr @ggc_alloc_stat(i64 noundef 40) #24
  store i32 %0, ptr %5, align 8, !tbaa !37
  %6 = getelementptr inbounds %struct.c_inline_static, ptr %5, i64 0, i32 1
  store ptr %1, ptr %6, align 8, !tbaa !39
  %7 = getelementptr inbounds %struct.c_inline_static, ptr %5, i64 0, i32 2
  store ptr %2, ptr %7, align 8, !tbaa !40
  %8 = getelementptr inbounds %struct.c_inline_static, ptr %5, i64 0, i32 3
  store i32 %3, ptr %8, align 8, !tbaa !41
  %9 = load ptr, ptr @c_inline_statics, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.c_inline_static, ptr %5, i64 0, i32 4
  store ptr %9, ptr %10, align 8, !tbaa !42
  store ptr %5, ptr @c_inline_statics, align 8, !tbaa !5
  ret void
}

declare ptr @ggc_alloc_stat(i64 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local ptr @objc_get_current_scope() local_unnamed_addr #11 {
  %1 = load ptr, ptr @current_scope, align 8, !tbaa !5
  ret ptr %1
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @objc_mark_locals_volatile(ptr noundef readnone %0) local_unnamed_addr #9 {
  br label %2

2:                                                ; preds = %19, %1
  %3 = phi ptr [ @current_scope, %1 ], [ %4, %19 ]
  %4 = load ptr, ptr %3, align 8, !tbaa !5
  %5 = icmp ne ptr %4, null
  %6 = icmp ne ptr %4, %0
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %24

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.c_scope, ptr %4, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  %11 = icmp eq ptr %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %8, %12
  %13 = phi ptr [ %17, %12 ], [ %10, %8 ]
  %14 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  tail call void @objc_volatilize_decl(ptr noundef %15) #24
  %16 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !5
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %12, !llvm.loop !43

19:                                               ; preds = %12, %8
  %20 = getelementptr inbounds %struct.c_scope, ptr %4, i64 0, i32 5
  %21 = load i64, ptr %20, align 8
  %22 = and i64 %21, 2147483648
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %2, label %24, !llvm.loop !44

24:                                               ; preds = %19, %2
  ret void
}

declare void @objc_volatilize_decl(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define dso_local i32 @global_bindings_p() local_unnamed_addr #11 {
  %1 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %2 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %3 = icmp eq ptr %1, %2
  %4 = load i8, ptr @c_override_global_bindings_to_false, align 1
  %5 = icmp eq i8 %4, 0
  %6 = select i1 %3, i1 %5, i1 false
  %7 = sext i1 %6 to i32
  ret i32 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @keep_next_level() local_unnamed_addr #12 {
  store i1 true, ptr @keep_next_level_flag, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @set_float_const_decimal64() local_unnamed_addr #13 {
  %1 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.c_scope, ptr %1, i64 0, i32 5
  %3 = load i64, ptr %2, align 8
  %4 = or i64 %3, 8589934592
  store i64 %4, ptr %2, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @clear_float_const_decimal64() local_unnamed_addr #13 {
  %1 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.c_scope, ptr %1, i64 0, i32 5
  %3 = load i64, ptr %2, align 8
  %4 = and i64 %3, -8589934593
  store i64 %4, ptr %2, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local zeroext i8 @float_const_decimal64_p() local_unnamed_addr #14 {
  %1 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.c_scope, ptr %1, i64 0, i32 5
  %3 = load i64, ptr %2, align 8
  %4 = lshr i64 %3, 33
  %5 = trunc i64 %4 to i8
  %6 = and i8 %5, 1
  ret i8 %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @declare_parm_level() local_unnamed_addr #13 {
  %1 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.c_scope, ptr %1, i64 0, i32 5
  %3 = load i64, ptr %2, align 8
  %4 = or i64 %3, 268435456
  store i64 %4, ptr %2, align 8
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @push_scope() local_unnamed_addr #9 {
  %1 = load i1, ptr @next_is_function_body, align 1
  br i1 %1, label %2, label %20

2:                                                ; preds = %0
  %3 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.c_scope, ptr %3, i64 0, i32 5
  %5 = load i64, ptr %4, align 8
  %6 = and i64 %5, -6710886401
  %7 = or i64 %6, 6442450944
  store i64 %7, ptr %4, align 8
  %8 = load ptr, ptr @current_function_scope, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.c_scope, ptr %3, i64 0, i32 1
  store ptr %8, ptr %9, align 8, !tbaa !45
  store ptr %3, ptr @current_function_scope, align 8, !tbaa !5
  store i1 false, ptr @keep_next_level_flag, align 1
  store i1 false, ptr @next_is_function_body, align 1
  %10 = load ptr, ptr %3, align 8, !tbaa !47
  %11 = icmp eq ptr %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.c_scope, ptr %10, i64 0, i32 5
  %14 = load i64, ptr %13, align 8
  %15 = and i64 %14, 8589934592
  %16 = and i64 %7, -8858370049
  %17 = or i64 %15, %16
  store i64 %17, ptr %4, align 8
  br label %65

18:                                               ; preds = %2
  %19 = and i64 %7, -8858370049
  store i64 %19, ptr %4, align 8
  br label %65

20:                                               ; preds = %0
  %21 = load ptr, ptr @scope_freelist, align 8, !tbaa !5
  %22 = icmp eq ptr %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %21, align 8, !tbaa !47
  store ptr %24, ptr @scope_freelist, align 8, !tbaa !5
  br label %27

25:                                               ; preds = %20
  %26 = tail call ptr @ggc_alloc_cleared_stat(i64 noundef 48) #24
  br label %27

27:                                               ; preds = %25, %23
  %28 = phi ptr [ %21, %23 ], [ %26, %25 ]
  %29 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %30 = icmp eq ptr %29, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.c_scope, ptr %29, i64 0, i32 5
  %33 = load i64, ptr %32, align 8
  %34 = and i64 %33, 8589934592
  %35 = getelementptr inbounds %struct.c_scope, ptr %28, i64 0, i32 5
  %36 = load i64, ptr %35, align 8
  %37 = and i64 %36, -8589934593
  %38 = or i64 %37, %34
  br label %43

39:                                               ; preds = %27
  %40 = getelementptr inbounds %struct.c_scope, ptr %28, i64 0, i32 5
  %41 = load i64, ptr %40, align 8
  %42 = and i64 %41, -8589934593
  br label %43

43:                                               ; preds = %39, %31
  %44 = phi i64 [ %42, %39 ], [ %38, %31 ]
  %45 = load i1, ptr @keep_next_level_flag, align 1
  %46 = getelementptr inbounds %struct.c_scope, ptr %28, i64 0, i32 5
  %47 = select i1 %45, i64 4294967296, i64 0
  %48 = and i64 %44, -4294967297
  %49 = or i64 %48, %47
  store i64 %49, ptr %46, align 8
  store ptr %29, ptr %28, align 8, !tbaa !47
  %50 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %51 = icmp eq ptr %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %43
  %53 = and i64 %49, -268435456
  store i64 %53, ptr %46, align 8
  br label %64

54:                                               ; preds = %43
  %55 = getelementptr inbounds %struct.c_scope, ptr %50, i64 0, i32 5
  %56 = load i64, ptr %55, align 8
  %57 = add i64 %56, 1
  %58 = and i64 %57, 268435455
  %59 = and i64 %49, -268435456
  %60 = or i64 %58, %59
  store i64 %60, ptr %46, align 8
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %54
  %63 = or i64 %49, 268435455
  store i64 %63, ptr %46, align 8
  tail call void (ptr, ...) @sorry(ptr noundef nonnull @.str.5, i32 noundef 268435455) #24
  br label %64

64:                                               ; preds = %52, %62, %54
  store ptr %28, ptr @current_scope, align 8, !tbaa !5
  store i1 false, ptr @keep_next_level_flag, align 1
  br label %65

65:                                               ; preds = %12, %18, %64
  ret void
}

declare ptr @ggc_alloc_cleared_stat(i64 noundef) local_unnamed_addr #3

declare void @sorry(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @pop_scope() local_unnamed_addr #9 {
  %1 = alloca %struct.expanded_location, align 8
  %2 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.c_scope, ptr %2, i64 0, i32 5
  %4 = load i64, ptr %3, align 8
  %5 = and i64 %4, 6442450944
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %0
  %8 = getelementptr inbounds %struct.c_scope, ptr %2, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !48
  %10 = icmp eq ptr %9, null
  tail call fastcc void @update_label_decls(ptr noundef nonnull %2)
  br i1 %10, label %29, label %12

11:                                               ; preds = %0
  tail call fastcc void @update_label_decls(ptr noundef nonnull %2)
  br label %12

12:                                               ; preds = %11, %7
  %13 = tail call ptr @make_node_stat(i32 noundef 4) #24
  %14 = getelementptr inbounds %struct.c_scope, ptr %2, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !49
  %16 = getelementptr inbounds %struct.tree_block, ptr %13, i64 0, i32 5
  store ptr %15, ptr %16, align 8, !tbaa !16
  %17 = load i64, ptr %13, align 8
  %18 = or i64 %17, 16777216
  store i64 %18, ptr %13, align 8
  %19 = load ptr, ptr %14, align 8, !tbaa !16
  %20 = icmp eq ptr %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %12, %21
  %22 = phi ptr [ %25, %21 ], [ %19, %12 ]
  %23 = getelementptr inbounds %struct.tree_block, ptr %22, i64 0, i32 6
  store ptr %13, ptr %23, align 8, !tbaa !16
  %24 = getelementptr inbounds %struct.tree_common, ptr %22, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !16
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %21, !llvm.loop !50

27:                                               ; preds = %21, %12
  %28 = getelementptr inbounds %struct.tree_block, ptr %13, i64 0, i32 3
  store ptr null, ptr %28, align 8, !tbaa !16
  br label %29

29:                                               ; preds = %27, %7
  %30 = phi ptr [ %13, %27 ], [ null, %7 ]
  %31 = load i64, ptr %3, align 8
  %32 = and i64 %31, 2147483648
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  br label %43

36:                                               ; preds = %29
  %37 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %38 = icmp eq ptr %2, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %36
  %40 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 40, ptr noundef null, ptr noundef null) #24
  %41 = load ptr, ptr @all_translation_units, align 8, !tbaa !5
  %42 = getelementptr inbounds %struct.tree_common, ptr %40, i64 0, i32 1
  store ptr %41, ptr %42, align 8, !tbaa !16
  store ptr %40, ptr @all_translation_units, align 8, !tbaa !5
  br label %43

43:                                               ; preds = %36, %39, %34
  %44 = phi ptr [ %35, %34 ], [ %40, %39 ], [ %30, %36 ]
  %45 = getelementptr inbounds %struct.c_scope, ptr %2, i64 0, i32 2
  %46 = load ptr, ptr %45, align 8, !tbaa !48
  %47 = icmp eq ptr %46, null
  br i1 %47, label %288, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.expanded_location, ptr %1, i64 0, i32 3
  %50 = getelementptr inbounds %struct.tree_block, ptr %30, i64 0, i32 3
  br label %51

51:                                               ; preds = %48, %283
  %52 = phi ptr [ %46, %48 ], [ %285, %283 ]
  %53 = getelementptr inbounds %struct.c_binding, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !32
  %55 = load i64, ptr %54, align 8
  %56 = trunc i64 %55 to i16
  switch i16 %56, label %282 [
    i16 30, label %57
    i16 6, label %85
    i16 17, label %85
    i16 16, label %85
    i16 29, label %110
    i16 32, label %168
    i16 35, label %199
    i16 33, label %199
    i16 34, label %259
    i16 0, label %259
  ]

57:                                               ; preds = %51
  %58 = and i64 %55, 16777216
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %struct.tree_decl_common, ptr %54, i64 0, i32 5
  %62 = load ptr, ptr %61, align 8, !tbaa !16
  %63 = icmp eq ptr %62, null
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  call void (ptr, ...) @error(ptr noundef nonnull @.str.6, ptr noundef nonnull %54) #24
  %65 = load ptr, ptr @global_trees, align 16, !tbaa !5
  store ptr %65, ptr %61, align 8, !tbaa !16
  br label %67

66:                                               ; preds = %60, %57
  call void @warn_for_unused_label(ptr noundef nonnull %54) #24
  br label %67

67:                                               ; preds = %66, %64
  %68 = load ptr, ptr %50, align 8, !tbaa !16
  %69 = getelementptr inbounds %struct.tree_common, ptr %54, i64 0, i32 1
  store ptr %68, ptr %69, align 8, !tbaa !16
  store ptr %54, ptr %50, align 8, !tbaa !16
  %70 = getelementptr inbounds %struct.c_binding, ptr %52, i64 0, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !51
  %72 = getelementptr inbounds %struct.lang_identifier, ptr %71, i64 0, i32 3
  %73 = load ptr, ptr %72, align 8, !tbaa !35
  %74 = icmp eq ptr %73, %52
  br i1 %74, label %77, label %75

75:                                               ; preds = %67
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 1111, ptr noundef nonnull @.str.8) #24
  %76 = load ptr, ptr %70, align 8, !tbaa !51
  br label %77

77:                                               ; preds = %67, %75
  %78 = phi ptr [ %71, %67 ], [ %76, %75 ]
  %79 = getelementptr inbounds %struct.c_binding, ptr %52, i64 0, i32 4
  %80 = load ptr, ptr %79, align 8, !tbaa !52
  %81 = getelementptr inbounds %struct.lang_identifier, ptr %78, i64 0, i32 3
  store ptr %80, ptr %81, align 8, !tbaa !35
  %82 = load ptr, ptr %52, align 8, !tbaa !16
  %83 = getelementptr inbounds %struct.c_label_vars, ptr %82, i64 0, i32 2
  %84 = load ptr, ptr %83, align 8, !tbaa !53
  call void @release_tree_vector(ptr noundef %84) #24
  br label %283

85:                                               ; preds = %51, %51, %51
  %86 = getelementptr inbounds %struct.tree_type, ptr %54, i64 0, i32 16
  %87 = load ptr, ptr %86, align 8, !tbaa !16
  %88 = icmp eq ptr %87, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %85, %89
  %90 = phi ptr [ %93, %89 ], [ %87, %85 ]
  %91 = getelementptr inbounds %struct.tree_type, ptr %90, i64 0, i32 18
  store ptr %44, ptr %91, align 8, !tbaa !16
  %92 = getelementptr inbounds %struct.tree_type, ptr %90, i64 0, i32 15
  %93 = load ptr, ptr %92, align 8, !tbaa !16
  %94 = icmp eq ptr %93, null
  br i1 %94, label %95, label %89, !llvm.loop !56

95:                                               ; preds = %89, %85
  %96 = getelementptr inbounds %struct.c_binding, ptr %52, i64 0, i32 2
  %97 = load ptr, ptr %96, align 8, !tbaa !51
  %98 = icmp eq ptr %97, null
  br i1 %98, label %283, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.lang_identifier, ptr %97, i64 0, i32 2
  %101 = load ptr, ptr %100, align 8, !tbaa !34
  %102 = icmp eq ptr %101, %52
  br i1 %102, label %105, label %103

103:                                              ; preds = %99
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 1128, ptr noundef nonnull @.str.8) #24
  %104 = load ptr, ptr %96, align 8, !tbaa !51
  br label %105

105:                                              ; preds = %99, %103
  %106 = phi ptr [ %97, %99 ], [ %104, %103 ]
  %107 = getelementptr inbounds %struct.c_binding, ptr %52, i64 0, i32 4
  %108 = load ptr, ptr %107, align 8, !tbaa !52
  %109 = getelementptr inbounds %struct.lang_identifier, ptr %106, i64 0, i32 2
  store ptr %108, ptr %109, align 8, !tbaa !34
  br label %283

110:                                              ; preds = %51
  %111 = and i64 %55, 4194304
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %129

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.tree_decl_common, ptr %54, i64 0, i32 5
  %115 = load ptr, ptr %114, align 8, !tbaa !16
  %116 = icmp eq ptr %115, null
  %117 = and i64 %55, 262144
  %118 = icmp eq i64 %117, 0
  %119 = or i1 %118, %116
  br i1 %119, label %129, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds %struct.tree_decl_common, ptr %54, i64 0, i32 7
  %122 = load ptr, ptr %121, align 8, !tbaa !16
  %123 = icmp eq ptr %122, null
  %124 = icmp eq ptr %122, %54
  %125 = or i1 %123, %124
  br i1 %125, label %129, label %126

126:                                              ; preds = %120
  %127 = load i64, ptr %122, align 8
  %128 = or i64 %127, 262144
  store i64 %128, ptr %122, align 8
  br label %129

129:                                              ; preds = %126, %120, %113, %110
  %130 = getelementptr inbounds %struct.tree_decl_common, ptr %54, i64 0, i32 2
  %131 = load i64, ptr %130, align 8
  %132 = and i64 %131, 33554432
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %145

134:                                              ; preds = %129
  %135 = getelementptr inbounds %struct.tree_decl_common, ptr %54, i64 0, i32 5
  %136 = load ptr, ptr %135, align 8, !tbaa !16
  %137 = icmp ne ptr %136, null
  %138 = load ptr, ptr @file_scope, align 8
  %139 = icmp eq ptr %2, %138
  %140 = select i1 %137, i1 true, i1 %139
  %141 = load ptr, ptr @external_scope, align 8
  %142 = icmp eq ptr %2, %141
  %143 = select i1 %140, i1 true, i1 %142
  br i1 %143, label %145, label %144

144:                                              ; preds = %134
  call void (ptr, ...) @error(ptr noundef nonnull @.str.9, ptr noundef nonnull %54) #24
  store i1 true, ptr @undef_nested_function, align 1
  br label %199

145:                                              ; preds = %134, %129
  %146 = getelementptr inbounds %struct.tree_function_decl, ptr %54, i64 0, i32 5
  %147 = load i32, ptr %146, align 8
  %148 = and i32 %147, 2097152
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %199, label %150

150:                                              ; preds = %145
  %151 = load i64, ptr %54, align 8
  %152 = and i64 %151, 134217728
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %199, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.tree_decl_common, ptr %54, i64 0, i32 5
  %156 = load ptr, ptr %155, align 8, !tbaa !16
  %157 = icmp eq ptr %156, null
  br i1 %157, label %158, label %199

158:                                              ; preds = %154
  %159 = load i32, ptr @flag_gnu89_inline, align 4, !tbaa !20
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %165

161:                                              ; preds = %158
  %162 = load i32, ptr @input_location, align 4, !tbaa !20
  %163 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %162, i32 noundef 0, ptr noundef nonnull @.str.10, ptr noundef nonnull %54) #24
  %164 = load i64, ptr %130, align 8
  br label %165

165:                                              ; preds = %161, %158
  %166 = phi i64 [ %164, %161 ], [ %131, %158 ]
  %167 = or i64 %166, 33554432
  store i64 %167, ptr %130, align 8
  br label %199

168:                                              ; preds = %51
  %169 = and i64 %55, 25165824
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %193

171:                                              ; preds = %168
  %172 = getelementptr inbounds %struct.tree_decl_minimal, ptr %54, i64 0, i32 1
  %173 = load i32, ptr %172, align 8, !tbaa !16
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %1, i32 noundef %173) #24
  %174 = load i8, ptr %49, align 8, !tbaa !57
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %176, label %193

176:                                              ; preds = %171
  %177 = getelementptr inbounds %struct.tree_decl_minimal, ptr %54, i64 0, i32 3
  %178 = load ptr, ptr %177, align 8, !tbaa !16
  %179 = icmp eq ptr %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %struct.tree_decl_common, ptr %54, i64 0, i32 2
  %182 = load i64, ptr %181, align 8
  %183 = and i64 %182, 4096
  %184 = icmp ne i64 %183, 0
  %185 = load ptr, ptr @file_scope, align 8
  %186 = icmp eq ptr %2, %185
  %187 = select i1 %184, i1 true, i1 %186
  %188 = load ptr, ptr @external_scope, align 8
  %189 = icmp eq ptr %2, %188
  %190 = select i1 %187, i1 true, i1 %189
  br i1 %190, label %193, label %191

191:                                              ; preds = %180
  %192 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 230, ptr noundef nonnull @.str.11, ptr noundef nonnull %54) #24
  br label %193

193:                                              ; preds = %191, %180, %176, %171, %168
  %194 = getelementptr inbounds %struct.c_binding, ptr %52, i64 0, i32 5
  %195 = load i32, ptr %194, align 8
  %196 = and i32 %195, 1073741824
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %199, label %198

198:                                              ; preds = %193
  call void (ptr, ...) @error(ptr noundef nonnull @.str.12, ptr noundef nonnull %54) #24
  br label %199

199:                                              ; preds = %51, %51, %198, %193, %144, %165, %154, %150, %145
  %200 = getelementptr inbounds %struct.c_binding, ptr %52, i64 0, i32 5
  %201 = load i32, ptr %200, align 8
  %202 = and i32 %201, 536870912
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %232, label %204

204:                                              ; preds = %199
  %205 = load i64, ptr %54, align 8
  %206 = trunc i64 %205 to i16
  switch i16 %206, label %236 [
    i16 32, label %207
    i16 29, label %207
  ]

207:                                              ; preds = %204, %204
  %208 = call ptr @copy_node_stat(ptr noundef nonnull %54) #24
  %209 = getelementptr inbounds %struct.tree_decl_common, ptr %208, i64 0, i32 2
  %210 = load i64, ptr %209, align 8
  %211 = or i64 %210, 33554432
  store i64 %211, ptr %209, align 8
  %212 = load i64, ptr %208, align 8
  %213 = and i64 %212, -201326593
  %214 = or i64 %213, 134217728
  store i64 %214, ptr %208, align 8
  %215 = getelementptr inbounds %struct.tree_decl_common, ptr %208, i64 0, i32 5
  store ptr null, ptr %215, align 8, !tbaa !16
  %216 = getelementptr inbounds %struct.tree_decl_common, ptr %208, i64 0, i32 8
  store ptr null, ptr %216, align 8, !tbaa !16
  %217 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %218 = getelementptr inbounds %struct.tree_decl_minimal, ptr %208, i64 0, i32 4
  store ptr %217, ptr %218, align 8, !tbaa !16
  %219 = load i64, ptr %54, align 8
  %220 = and i64 %219, 65535
  %221 = icmp eq i64 %220, 29
  br i1 %221, label %222, label %226

222:                                              ; preds = %207
  %223 = getelementptr inbounds %struct.tree_decl_non_common, ptr %208, i64 0, i32 3
  store ptr null, ptr %223, align 8, !tbaa !16
  %224 = getelementptr inbounds %struct.tree_decl_non_common, ptr %208, i64 0, i32 1
  store ptr null, ptr %224, align 8, !tbaa !16
  %225 = getelementptr inbounds %struct.tree_function_decl, ptr %208, i64 0, i32 1
  store ptr null, ptr %225, align 8, !tbaa !16
  br label %226

226:                                              ; preds = %222, %207
  %227 = getelementptr inbounds %struct.c_binding, ptr %52, i64 0, i32 6
  %228 = load i32, ptr %227, align 4, !tbaa !59
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %232, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %struct.tree_decl_minimal, ptr %208, i64 0, i32 1
  store i32 %228, ptr %231, align 8, !tbaa !16
  br label %232

232:                                              ; preds = %226, %230, %199
  %233 = phi ptr [ %54, %199 ], [ %208, %230 ], [ %208, %226 ]
  %234 = load ptr, ptr %50, align 8, !tbaa !16
  %235 = getelementptr inbounds %struct.tree_common, ptr %233, i64 0, i32 1
  store ptr %234, ptr %235, align 8, !tbaa !16
  store ptr %233, ptr %50, align 8, !tbaa !16
  br label %236

236:                                              ; preds = %232, %204
  %237 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %238 = icmp eq ptr %2, %237
  %239 = load i32, ptr @num_in_fnames, align 4
  %240 = icmp ugt i32 %239, 1
  %241 = select i1 %238, i1 %240, i1 false
  br i1 %241, label %242, label %259

242:                                              ; preds = %236
  %243 = getelementptr inbounds %struct.tree_decl_minimal, ptr %54, i64 0, i32 4
  store ptr %44, ptr %243, align 8, !tbaa !16
  %244 = load i64, ptr %54, align 8
  %245 = and i64 %244, 65535
  %246 = icmp eq i64 %245, 35
  br i1 %246, label %247, label %259

247:                                              ; preds = %242
  %248 = getelementptr inbounds %struct.tree_common, ptr %54, i64 0, i32 2
  %249 = load ptr, ptr %248, align 8, !tbaa !16
  %250 = getelementptr inbounds %struct.tree_type, ptr %249, i64 0, i32 16
  %251 = load ptr, ptr %250, align 8, !tbaa !16
  %252 = icmp eq ptr %251, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %247, %253
  %254 = phi ptr [ %257, %253 ], [ %251, %247 ]
  %255 = getelementptr inbounds %struct.tree_type, ptr %254, i64 0, i32 18
  store ptr %44, ptr %255, align 8, !tbaa !16
  %256 = getelementptr inbounds %struct.tree_type, ptr %254, i64 0, i32 15
  %257 = load ptr, ptr %256, align 8, !tbaa !16
  %258 = icmp eq ptr %257, null
  br i1 %258, label %259, label %253, !llvm.loop !56

259:                                              ; preds = %253, %247, %236, %242, %51, %51
  %260 = getelementptr inbounds %struct.c_binding, ptr %52, i64 0, i32 2
  %261 = load ptr, ptr %260, align 8, !tbaa !51
  %262 = icmp eq ptr %261, null
  br i1 %262, label %283, label %263

263:                                              ; preds = %259
  %264 = getelementptr inbounds %struct.lang_identifier, ptr %261, i64 0, i32 1
  %265 = load ptr, ptr %264, align 8, !tbaa !25
  %266 = icmp eq ptr %265, %52
  br i1 %266, label %269, label %267

267:                                              ; preds = %263
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 1240, ptr noundef nonnull @.str.8) #24
  %268 = load ptr, ptr %260, align 8, !tbaa !51
  br label %269

269:                                              ; preds = %263, %267
  %270 = phi ptr [ %261, %263 ], [ %268, %267 ]
  %271 = getelementptr inbounds %struct.c_binding, ptr %52, i64 0, i32 4
  %272 = load ptr, ptr %271, align 8, !tbaa !52
  %273 = getelementptr inbounds %struct.lang_identifier, ptr %270, i64 0, i32 1
  store ptr %272, ptr %273, align 8, !tbaa !25
  %274 = icmp eq ptr %272, null
  br i1 %274, label %283, label %275

275:                                              ; preds = %269
  %276 = load ptr, ptr %272, align 8, !tbaa !16
  %277 = icmp eq ptr %276, null
  br i1 %277, label %283, label %278

278:                                              ; preds = %275
  %279 = getelementptr inbounds %struct.c_binding, ptr %272, i64 0, i32 1
  %280 = load ptr, ptr %279, align 8, !tbaa !32
  %281 = getelementptr inbounds %struct.tree_common, ptr %280, i64 0, i32 2
  store ptr %276, ptr %281, align 8, !tbaa !16
  br label %283

282:                                              ; preds = %51
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 1248, ptr noundef nonnull @.str.8) #24
  br label %283

283:                                              ; preds = %77, %282, %105, %95, %269, %275, %278, %259
  %284 = getelementptr inbounds %struct.c_binding, ptr %52, i64 0, i32 3
  %285 = load ptr, ptr %284, align 8, !tbaa !60
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %52, i8 0, i64 48, i1 false)
  %286 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  store ptr %286, ptr %284, align 8, !tbaa !60
  store ptr %52, ptr @binding_freelist, align 8, !tbaa !5
  %287 = icmp eq ptr %285, null
  br i1 %287, label %288, label %51, !llvm.loop !61

288:                                              ; preds = %283, %43
  %289 = load i64, ptr %3, align 8
  %290 = and i64 %289, 2147483648
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %297

292:                                              ; preds = %288
  %293 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %294 = icmp eq ptr %2, %293
  %295 = icmp ne ptr %44, null
  %296 = select i1 %294, i1 %295, i1 false
  br i1 %296, label %299, label %302

297:                                              ; preds = %288
  %298 = icmp eq ptr %44, null
  br i1 %298, label %302, label %299

299:                                              ; preds = %292, %297
  %300 = getelementptr inbounds %struct.tree_decl_common, ptr %44, i64 0, i32 5
  store ptr %30, ptr %300, align 8, !tbaa !16
  %301 = getelementptr inbounds %struct.tree_block, ptr %30, i64 0, i32 6
  store ptr %44, ptr %301, align 8, !tbaa !16
  br label %327

302:                                              ; preds = %297, %292
  %303 = load ptr, ptr %2, align 8, !tbaa !47
  %304 = icmp eq ptr %303, null
  br i1 %304, label %327, label %305

305:                                              ; preds = %302
  %306 = icmp eq ptr %30, null
  br i1 %306, label %314, label %307

307:                                              ; preds = %305
  %308 = getelementptr inbounds %struct.c_scope, ptr %303, i64 0, i32 4
  %309 = load ptr, ptr %308, align 8, !tbaa !62
  %310 = icmp eq ptr %309, null
  %311 = getelementptr inbounds %struct.c_scope, ptr %303, i64 0, i32 3
  %312 = getelementptr inbounds %struct.tree_common, ptr %309, i64 0, i32 1
  %313 = select i1 %310, ptr %311, ptr %312
  store ptr %30, ptr %313, align 8, !tbaa !16
  store ptr %30, ptr %308, align 8, !tbaa !62
  br label %327

314:                                              ; preds = %305
  %315 = getelementptr inbounds %struct.c_scope, ptr %2, i64 0, i32 3
  %316 = load ptr, ptr %315, align 8, !tbaa !49
  %317 = icmp eq ptr %316, null
  br i1 %317, label %327, label %318

318:                                              ; preds = %314
  %319 = getelementptr inbounds %struct.c_scope, ptr %303, i64 0, i32 4
  %320 = load ptr, ptr %319, align 8, !tbaa !62
  %321 = icmp eq ptr %320, null
  %322 = getelementptr inbounds %struct.c_scope, ptr %303, i64 0, i32 3
  %323 = getelementptr inbounds %struct.tree_common, ptr %320, i64 0, i32 1
  %324 = select i1 %321, ptr %322, ptr %323
  store ptr %316, ptr %324, align 8, !tbaa !16
  %325 = getelementptr inbounds %struct.c_scope, ptr %2, i64 0, i32 4
  %326 = load ptr, ptr %325, align 8, !tbaa !62
  store ptr %326, ptr %319, align 8, !tbaa !62
  br label %327

327:                                              ; preds = %302, %314, %318, %307, %299
  %328 = load ptr, ptr %2, align 8, !tbaa !47
  store ptr %328, ptr @current_scope, align 8, !tbaa !5
  %329 = load i64, ptr %3, align 8
  %330 = and i64 %329, 2147483648
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %335, label %332

332:                                              ; preds = %327
  %333 = getelementptr inbounds %struct.c_scope, ptr %2, i64 0, i32 1
  %334 = load ptr, ptr %333, align 8, !tbaa !45
  store ptr %334, ptr @current_function_scope, align 8, !tbaa !5
  br label %335

335:                                              ; preds = %332, %327
  %336 = getelementptr inbounds i8, ptr %2, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %336, i8 0, i64 40, i1 false)
  %337 = load ptr, ptr @scope_freelist, align 8, !tbaa !5
  store ptr %337, ptr %2, align 8, !tbaa !47
  store ptr %2, ptr @scope_freelist, align 8, !tbaa !5
  ret ptr %30
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @update_label_decls(ptr noundef readonly %0) unnamed_addr #9 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %149, label %3

3:                                                ; preds = %1, %146
  %4 = phi ptr [ %147, %146 ], [ %0, %1 ]
  %5 = getelementptr inbounds %struct.c_scope, ptr %4, i64 0, i32 5
  %6 = load i64, ptr %5, align 8
  %7 = and i64 %6, 17179869184
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %143, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.c_scope, ptr %4, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !5
  %12 = icmp eq ptr %11, null
  br i1 %12, label %143, label %13

13:                                               ; preds = %9, %139
  %14 = phi ptr [ %141, %139 ], [ %11, %9 ]
  %15 = getelementptr inbounds %struct.c_binding, ptr %14, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !32
  %17 = load i64, ptr %16, align 8
  %18 = and i64 %17, 65535
  %19 = icmp eq i64 %18, 30
  br i1 %19, label %20, label %139

20:                                               ; preds = %13
  %21 = load ptr, ptr %14, align 8, !tbaa !16
  %22 = getelementptr inbounds %struct.c_label_vars, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !63
  %24 = icmp eq ptr %23, %0
  br i1 %24, label %25, label %83

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.c_label_vars, ptr %21, i64 0, i32 1, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !64
  %28 = load ptr, ptr %0, align 8, !tbaa !47
  store ptr %28, ptr %22, align 8, !tbaa !63
  %29 = getelementptr inbounds %struct.c_scope, ptr %28, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !48
  store ptr %30, ptr %26, align 8, !tbaa !65
  %31 = icmp eq ptr %27, null
  br i1 %31, label %83, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.c_label_vars, ptr %21, i64 0, i32 2
  br label %34

34:                                               ; preds = %32, %79
  %35 = phi ptr [ %81, %79 ], [ %27, %32 ]
  %36 = getelementptr inbounds %struct.c_binding, ptr %35, i64 0, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !32
  %38 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %39 = icmp eq ptr %38, %37
  br i1 %39, label %79, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.tree_common, ptr %37, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !16
  %43 = icmp eq ptr %42, %38
  br i1 %43, label %79, label %44

44:                                               ; preds = %40
  %45 = load i64, ptr %37, align 8
  %46 = trunc i64 %45 to i16
  switch i16 %46, label %50 [
    i16 32, label %47
    i16 35, label %47
  ]

47:                                               ; preds = %44, %44
  %48 = tail call zeroext i8 @variably_modified_type_p(ptr noundef %42, ptr noundef null) #24
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %61

50:                                               ; preds = %47, %44
  %51 = load i32, ptr @warn_jump_misses_init, align 4, !tbaa !20
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %79, label %53

53:                                               ; preds = %50
  %54 = load i64, ptr %37, align 8
  %55 = and i64 %54, 67174399
  %56 = icmp eq i64 %55, 32
  br i1 %56, label %57, label %79

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.tree_decl_common, ptr %37, i64 0, i32 5
  %59 = load ptr, ptr %58, align 8, !tbaa !16
  %60 = icmp eq ptr %59, null
  br i1 %60, label %79, label %61

61:                                               ; preds = %57, %47
  %62 = load ptr, ptr %36, align 8, !tbaa !32
  %63 = load ptr, ptr %33, align 8, !tbaa !5
  %64 = icmp eq ptr %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.VEC_tree_base, ptr %63, i64 0, i32 1
  %67 = load i32, ptr %66, align 4, !tbaa !66
  %68 = load i32, ptr %63, align 8, !tbaa !68
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %70, label %73

70:                                               ; preds = %65, %61
  %71 = tail call ptr @vec_gc_p_reserve(ptr noundef %63, i32 noundef 1) #24
  store ptr %71, ptr %33, align 8, !tbaa !5
  %72 = load i32, ptr %71, align 8, !tbaa !68
  br label %73

73:                                               ; preds = %65, %70
  %74 = phi i32 [ %68, %65 ], [ %72, %70 ]
  %75 = phi ptr [ %63, %65 ], [ %71, %70 ]
  %76 = add i32 %74, 1
  store i32 %76, ptr %75, align 8, !tbaa !68
  %77 = zext i32 %74 to i64
  %78 = getelementptr inbounds %struct.VEC_tree_base, ptr %75, i64 0, i32 2, i64 %77
  store ptr %62, ptr %78, align 8, !tbaa !5
  br label %79

79:                                               ; preds = %50, %53, %57, %34, %40, %73
  %80 = getelementptr inbounds %struct.c_binding, ptr %35, i64 0, i32 3
  %81 = load ptr, ptr %80, align 8, !tbaa !60
  %82 = icmp eq ptr %81, null
  br i1 %82, label %83, label %34

83:                                               ; preds = %79, %20, %25
  %84 = getelementptr inbounds %struct.c_label_vars, ptr %21, i64 0, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !69
  %86 = icmp eq ptr %85, null
  br i1 %86, label %139, label %87

87:                                               ; preds = %83
  %88 = load i32, ptr %85, align 8, !tbaa !70
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %139, label %90

90:                                               ; preds = %87
  %91 = zext i32 %88 to i64
  %92 = and i64 %91, 1
  %93 = icmp eq i32 %88, 1
  br i1 %93, label %125, label %94

94:                                               ; preds = %90
  %95 = and i64 %91, 4294967294
  br label %96

96:                                               ; preds = %121, %94
  %97 = phi i64 [ 0, %94 ], [ %122, %121 ]
  %98 = phi i64 [ 0, %94 ], [ %123, %121 ]
  %99 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %85, i64 0, i32 2, i64 %97
  %100 = load ptr, ptr %99, align 8, !tbaa !5
  %101 = getelementptr inbounds %struct.c_goto_bindings, ptr %100, i64 0, i32 1
  %102 = load ptr, ptr %101, align 8, !tbaa !63
  %103 = icmp eq ptr %102, %0
  br i1 %103, label %104, label %109

104:                                              ; preds = %96
  %105 = load ptr, ptr %0, align 8, !tbaa !47
  store ptr %105, ptr %101, align 8, !tbaa !63
  %106 = getelementptr inbounds %struct.c_scope, ptr %105, i64 0, i32 2
  %107 = load ptr, ptr %106, align 8, !tbaa !48
  %108 = getelementptr inbounds %struct.c_goto_bindings, ptr %100, i64 0, i32 1, i32 1
  store ptr %107, ptr %108, align 8, !tbaa !65
  br label %109

109:                                              ; preds = %96, %104
  %110 = or i64 %97, 1
  %111 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %85, i64 0, i32 2, i64 %110
  %112 = load ptr, ptr %111, align 8, !tbaa !5
  %113 = getelementptr inbounds %struct.c_goto_bindings, ptr %112, i64 0, i32 1
  %114 = load ptr, ptr %113, align 8, !tbaa !63
  %115 = icmp eq ptr %114, %0
  br i1 %115, label %116, label %121

116:                                              ; preds = %109
  %117 = load ptr, ptr %0, align 8, !tbaa !47
  store ptr %117, ptr %113, align 8, !tbaa !63
  %118 = getelementptr inbounds %struct.c_scope, ptr %117, i64 0, i32 2
  %119 = load ptr, ptr %118, align 8, !tbaa !48
  %120 = getelementptr inbounds %struct.c_goto_bindings, ptr %112, i64 0, i32 1, i32 1
  store ptr %119, ptr %120, align 8, !tbaa !65
  br label %121

121:                                              ; preds = %116, %109
  %122 = add nuw nsw i64 %97, 2
  %123 = add i64 %98, 2
  %124 = icmp eq i64 %123, %95
  br i1 %124, label %125, label %96

125:                                              ; preds = %121, %90
  %126 = phi i64 [ 0, %90 ], [ %122, %121 ]
  %127 = icmp eq i64 %92, 0
  br i1 %127, label %139, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %85, i64 0, i32 2, i64 %126
  %130 = load ptr, ptr %129, align 8, !tbaa !5
  %131 = getelementptr inbounds %struct.c_goto_bindings, ptr %130, i64 0, i32 1
  %132 = load ptr, ptr %131, align 8, !tbaa !63
  %133 = icmp eq ptr %132, %0
  br i1 %133, label %134, label %139

134:                                              ; preds = %128
  %135 = load ptr, ptr %0, align 8, !tbaa !47
  store ptr %135, ptr %131, align 8, !tbaa !63
  %136 = getelementptr inbounds %struct.c_scope, ptr %135, i64 0, i32 2
  %137 = load ptr, ptr %136, align 8, !tbaa !48
  %138 = getelementptr inbounds %struct.c_goto_bindings, ptr %130, i64 0, i32 1, i32 1
  store ptr %137, ptr %138, align 8, !tbaa !65
  br label %139

139:                                              ; preds = %125, %134, %128, %83, %87, %13
  %140 = getelementptr inbounds %struct.c_binding, ptr %14, i64 0, i32 3
  %141 = load ptr, ptr %140, align 8, !tbaa !5
  %142 = icmp eq ptr %141, null
  br i1 %142, label %143, label %13, !llvm.loop !72

143:                                              ; preds = %139, %9, %3
  %144 = load ptr, ptr @current_function_scope, align 8, !tbaa !5
  %145 = icmp eq ptr %4, %144
  br i1 %145, label %149, label %146

146:                                              ; preds = %143
  %147 = load ptr, ptr %4, align 8, !tbaa !47
  %148 = icmp eq ptr %147, null
  br i1 %148, label %149, label %3, !llvm.loop !73

149:                                              ; preds = %146, %143, %1
  ret void
}

declare ptr @make_node_stat(i32 noundef) local_unnamed_addr #3

declare ptr @build_decl_stat(i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @error(ptr noundef, ...) local_unnamed_addr #3

declare void @warn_for_unused_label(ptr noundef) local_unnamed_addr #3

declare void @fancy_abort(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare void @release_tree_vector(ptr noundef) local_unnamed_addr #3

declare zeroext i8 @pedwarn(i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

declare void @expand_location(ptr sret(%struct.expanded_location) align 8, i32 noundef) local_unnamed_addr #3

declare zeroext i8 @warning(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

declare ptr @copy_node_stat(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #15

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @push_file_scope() local_unnamed_addr #9 {
  %1 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %2 = icmp eq ptr %1, null
  br i1 %2, label %3, label %79

3:                                                ; preds = %0
  tail call void @push_scope()
  %4 = load ptr, ptr @current_scope, align 8, !tbaa !5
  store ptr %4, ptr @file_scope, align 8, !tbaa !5
  tail call void @start_fname_decls() #24
  %5 = load ptr, ptr @visible_builtins, align 8, !tbaa !16
  %6 = icmp eq ptr %5, null
  br i1 %6, label %79, label %7

7:                                                ; preds = %3, %75
  %8 = phi ptr [ %77, %75 ], [ %5, %3 ]
  %9 = getelementptr inbounds %struct.tree_decl_minimal, ptr %8, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !16
  %11 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %12 = getelementptr inbounds %struct.tree_decl_minimal, ptr %8, i64 0, i32 1
  %13 = load i32, ptr %12, align 8, !tbaa !16
  %14 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %15 = icmp eq ptr %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %struct.c_binding, ptr %14, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !60
  store ptr %18, ptr @binding_freelist, align 8, !tbaa !5
  br label %21

19:                                               ; preds = %7
  %20 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %21

21:                                               ; preds = %19, %16
  %22 = phi ptr [ %14, %16 ], [ %20, %19 ]
  %23 = getelementptr inbounds %struct.c_binding, ptr %22, i64 0, i32 4
  store ptr null, ptr %23, align 8, !tbaa !52
  %24 = getelementptr inbounds %struct.c_binding, ptr %22, i64 0, i32 1
  store ptr %8, ptr %24, align 8, !tbaa !32
  %25 = getelementptr inbounds %struct.c_binding, ptr %22, i64 0, i32 2
  store ptr %10, ptr %25, align 8, !tbaa !51
  %26 = getelementptr inbounds %struct.c_scope, ptr %11, i64 0, i32 5
  %27 = load i64, ptr %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = and i32 %28, 268435455
  %30 = getelementptr inbounds %struct.c_binding, ptr %22, i64 0, i32 5
  %31 = or i32 %29, 536870912
  store i32 %31, ptr %30, align 8
  %32 = getelementptr inbounds %struct.c_binding, ptr %22, i64 0, i32 6
  store i32 %13, ptr %32, align 4, !tbaa !59
  store ptr null, ptr %22, align 8, !tbaa !16
  %33 = getelementptr inbounds %struct.c_scope, ptr %11, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !48
  %35 = getelementptr inbounds %struct.c_binding, ptr %22, i64 0, i32 3
  store ptr %34, ptr %35, align 8, !tbaa !60
  store ptr %22, ptr %33, align 8, !tbaa !48
  %36 = icmp eq ptr %10, null
  br i1 %36, label %75, label %37

37:                                               ; preds = %21
  %38 = load i64, ptr %8, align 8
  %39 = trunc i64 %38 to i16
  switch i16 %39, label %46 [
    i16 30, label %40
    i16 6, label %42
    i16 17, label %42
    i16 16, label %42
    i16 32, label %44
    i16 29, label %44
    i16 35, label %44
    i16 33, label %44
    i16 34, label %44
    i16 0, label %44
  ]

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.lang_identifier, ptr %10, i64 0, i32 3
  br label %47

42:                                               ; preds = %37, %37, %37
  %43 = getelementptr inbounds %struct.lang_identifier, ptr %10, i64 0, i32 2
  br label %47

44:                                               ; preds = %37, %37, %37, %37, %37, %37
  %45 = getelementptr inbounds %struct.lang_identifier, ptr %10, i64 0, i32 1
  br label %47

46:                                               ; preds = %37
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %47

47:                                               ; preds = %46, %44, %42, %40
  %48 = phi ptr [ undef, %46 ], [ %45, %44 ], [ %43, %42 ], [ %41, %40 ]
  %49 = load ptr, ptr %48, align 8, !tbaa !5
  %50 = icmp eq ptr %49, null
  br i1 %50, label %72, label %51

51:                                               ; preds = %47
  %52 = load i64, ptr %26, align 8
  %53 = trunc i64 %52 to i32
  %54 = and i32 %53, 268435455
  %55 = getelementptr inbounds %struct.c_binding, ptr %49, i64 0, i32 5
  %56 = load i32, ptr %55, align 8
  %57 = and i32 %56, 268435455
  %58 = icmp ugt i32 %57, %54
  br i1 %58, label %64, label %72

59:                                               ; preds = %64
  %60 = getelementptr inbounds %struct.c_binding, ptr %67, i64 0, i32 5
  %61 = load i32, ptr %60, align 8
  %62 = and i32 %61, 268435455
  %63 = icmp ugt i32 %62, %54
  br i1 %63, label %64, label %69, !llvm.loop !74

64:                                               ; preds = %51, %59
  %65 = phi ptr [ %67, %59 ], [ %49, %51 ]
  %66 = getelementptr inbounds %struct.c_binding, ptr %65, i64 0, i32 4
  %67 = load ptr, ptr %66, align 8, !tbaa !5
  %68 = icmp eq ptr %67, null
  br i1 %68, label %69, label %59, !llvm.loop !74

69:                                               ; preds = %64, %59
  %70 = phi ptr [ %67, %59 ], [ null, %64 ]
  %71 = getelementptr inbounds %struct.c_binding, ptr %65, i64 0, i32 4
  br label %72

72:                                               ; preds = %69, %51, %47
  %73 = phi ptr [ %48, %47 ], [ %48, %51 ], [ %71, %69 ]
  %74 = phi ptr [ null, %47 ], [ %49, %51 ], [ %70, %69 ]
  store ptr %74, ptr %23, align 8, !tbaa !52
  store ptr %22, ptr %73, align 8, !tbaa !5
  br label %75

75:                                               ; preds = %21, %72
  %76 = getelementptr inbounds %struct.tree_common, ptr %8, i64 0, i32 1
  %77 = load ptr, ptr %76, align 8, !tbaa !16
  %78 = icmp eq ptr %77, null
  br i1 %78, label %79, label %7, !llvm.loop !75

79:                                               ; preds = %75, %3, %0
  ret void
}

declare void @start_fname_decls() local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @pop_file_scope() local_unnamed_addr #9 {
  %1 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %2 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %3 = icmp eq ptr %1, %2
  br i1 %3, label %9, label %4

4:                                                ; preds = %0, %4
  %5 = tail call ptr @pop_scope()
  %6 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %7 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %8 = icmp eq ptr %6, %7
  br i1 %8, label %9, label %4, !llvm.loop !76

9:                                                ; preds = %4, %0
  tail call void @finish_fname_decls() #24
  %10 = load ptr, ptr @c_inline_statics, align 8, !tbaa !5
  %11 = icmp eq ptr %10, null
  br i1 %11, label %38, label %12

12:                                               ; preds = %9, %34
  %13 = phi ptr [ %36, %34 ], [ %10, %9 ]
  %14 = getelementptr inbounds %struct.c_inline_static, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !39
  %16 = getelementptr inbounds %struct.tree_decl_common, ptr %15, i64 0, i32 2
  %17 = load i64, ptr %16, align 8
  %18 = and i64 %17, 33554432
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.c_inline_static, ptr %13, i64 0, i32 3
  %22 = load i32, ptr %21, align 8, !tbaa !41
  switch i32 %22, label %33 [
    i32 0, label %23
    i32 1, label %28
  ]

23:                                               ; preds = %20
  %24 = load i32, ptr %13, align 8, !tbaa !37
  %25 = getelementptr inbounds %struct.c_inline_static, ptr %13, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !40
  %27 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %24, i32 noundef 0, ptr noundef nonnull @.str.216, ptr noundef %26, ptr noundef nonnull %15) #24
  br label %34

28:                                               ; preds = %20
  %29 = load i32, ptr %13, align 8, !tbaa !37
  %30 = getelementptr inbounds %struct.c_inline_static, ptr %13, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !40
  %32 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %29, i32 noundef 0, ptr noundef nonnull @.str.217, ptr noundef %31, ptr noundef nonnull %15) #24
  br label %34

33:                                               ; preds = %20
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 746, ptr noundef nonnull @.str.8) #24
  br label %34

34:                                               ; preds = %33, %28, %23, %12
  %35 = getelementptr inbounds %struct.c_inline_static, ptr %13, i64 0, i32 4
  %36 = load ptr, ptr %35, align 8, !tbaa !5
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %12, !llvm.loop !77

38:                                               ; preds = %34, %9
  store ptr null, ptr @c_inline_statics, align 8, !tbaa !5
  %39 = load ptr, ptr @pch_file, align 8, !tbaa !5
  %40 = icmp eq ptr %39, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  tail call void @c_common_write_pch() #24
  br label %44

42:                                               ; preds = %38
  %43 = tail call ptr @pop_scope()
  store ptr null, ptr @file_scope, align 8, !tbaa !5
  tail call void @maybe_apply_pending_pragma_weaks() #24
  br label %44

44:                                               ; preds = %42, %41
  ret void
}

declare void @finish_fname_decls() local_unnamed_addr #3

declare void @c_common_write_pch() local_unnamed_addr #3

declare void @maybe_apply_pending_pragma_weaks() local_unnamed_addr #3

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @c_bindings_start_stmt_expr(ptr noundef %0) local_unnamed_addr #16 {
  %2 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %3 = icmp eq ptr %2, null
  br i1 %3, label %88, label %4

4:                                                ; preds = %1, %85
  %5 = phi ptr [ %86, %85 ], [ %2, %1 ]
  %6 = getelementptr inbounds %struct.c_scope, ptr %5, i64 0, i32 5
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 17179869184
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %85, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.c_scope, ptr %5, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  %13 = icmp eq ptr %12, null
  br i1 %13, label %85, label %14

14:                                               ; preds = %10, %81
  %15 = phi ptr [ %83, %81 ], [ %12, %10 ]
  %16 = getelementptr inbounds %struct.c_binding, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !32
  %18 = load i64, ptr %17, align 8
  %19 = and i64 %18, 65535
  %20 = icmp eq i64 %19, 30
  br i1 %20, label %21, label %81

21:                                               ; preds = %14
  %22 = load ptr, ptr %15, align 8, !tbaa !16
  %23 = getelementptr inbounds %struct.c_label_vars, ptr %22, i64 0, i32 1, i32 2
  %24 = load i32, ptr %23, align 8, !tbaa !78
  %25 = add nsw i32 %24, 1
  store i32 %25, ptr %23, align 8, !tbaa !78
  %26 = getelementptr inbounds %struct.c_label_vars, ptr %22, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8, !tbaa !69
  %28 = icmp eq ptr %27, null
  br i1 %28, label %81, label %29

29:                                               ; preds = %21
  %30 = load i32, ptr %27, align 8, !tbaa !70
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %81, label %32

32:                                               ; preds = %29
  %33 = zext i32 %30 to i64
  %34 = and i64 %33, 3
  %35 = icmp ult i32 %30, 4
  br i1 %35, label %67, label %36

36:                                               ; preds = %32
  %37 = and i64 %33, 4294967292
  br label %38

38:                                               ; preds = %38, %36
  %39 = phi i64 [ 0, %36 ], [ %64, %38 ]
  %40 = phi i64 [ 0, %36 ], [ %65, %38 ]
  %41 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %27, i64 0, i32 2, i64 %39
  %42 = load ptr, ptr %41, align 8, !tbaa !5
  %43 = getelementptr inbounds %struct.c_goto_bindings, ptr %42, i64 0, i32 1, i32 2
  %44 = load i32, ptr %43, align 8, !tbaa !79
  %45 = add nsw i32 %44, 1
  store i32 %45, ptr %43, align 8, !tbaa !79
  %46 = or i64 %39, 1
  %47 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %27, i64 0, i32 2, i64 %46
  %48 = load ptr, ptr %47, align 8, !tbaa !5
  %49 = getelementptr inbounds %struct.c_goto_bindings, ptr %48, i64 0, i32 1, i32 2
  %50 = load i32, ptr %49, align 8, !tbaa !79
  %51 = add nsw i32 %50, 1
  store i32 %51, ptr %49, align 8, !tbaa !79
  %52 = or i64 %39, 2
  %53 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %27, i64 0, i32 2, i64 %52
  %54 = load ptr, ptr %53, align 8, !tbaa !5
  %55 = getelementptr inbounds %struct.c_goto_bindings, ptr %54, i64 0, i32 1, i32 2
  %56 = load i32, ptr %55, align 8, !tbaa !79
  %57 = add nsw i32 %56, 1
  store i32 %57, ptr %55, align 8, !tbaa !79
  %58 = or i64 %39, 3
  %59 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %27, i64 0, i32 2, i64 %58
  %60 = load ptr, ptr %59, align 8, !tbaa !5
  %61 = getelementptr inbounds %struct.c_goto_bindings, ptr %60, i64 0, i32 1, i32 2
  %62 = load i32, ptr %61, align 8, !tbaa !79
  %63 = add nsw i32 %62, 1
  store i32 %63, ptr %61, align 8, !tbaa !79
  %64 = add nuw nsw i64 %39, 4
  %65 = add i64 %40, 4
  %66 = icmp eq i64 %65, %37
  br i1 %66, label %67, label %38

67:                                               ; preds = %38, %32
  %68 = phi i64 [ 0, %32 ], [ %64, %38 ]
  %69 = icmp eq i64 %34, 0
  br i1 %69, label %81, label %70

70:                                               ; preds = %67, %70
  %71 = phi i64 [ %78, %70 ], [ %68, %67 ]
  %72 = phi i64 [ %79, %70 ], [ 0, %67 ]
  %73 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %27, i64 0, i32 2, i64 %71
  %74 = load ptr, ptr %73, align 8, !tbaa !5
  %75 = getelementptr inbounds %struct.c_goto_bindings, ptr %74, i64 0, i32 1, i32 2
  %76 = load i32, ptr %75, align 8, !tbaa !79
  %77 = add nsw i32 %76, 1
  store i32 %77, ptr %75, align 8, !tbaa !79
  %78 = add nuw nsw i64 %71, 1
  %79 = add i64 %72, 1
  %80 = icmp eq i64 %79, %34
  br i1 %80, label %81, label %70, !llvm.loop !81

81:                                               ; preds = %67, %70, %21, %29, %14
  %82 = getelementptr inbounds %struct.c_binding, ptr %15, i64 0, i32 3
  %83 = load ptr, ptr %82, align 8, !tbaa !5
  %84 = icmp eq ptr %83, null
  br i1 %84, label %85, label %14, !llvm.loop !83

85:                                               ; preds = %81, %10, %4
  %86 = load ptr, ptr %5, align 8, !tbaa !5
  %87 = icmp eq ptr %86, null
  br i1 %87, label %88, label %4, !llvm.loop !84

88:                                               ; preds = %85, %1
  %89 = icmp eq ptr %0, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %struct.c_spot_bindings, ptr %0, i64 0, i32 2
  %92 = load i32, ptr %91, align 8, !tbaa !85
  %93 = add nsw i32 %92, 1
  store i32 %93, ptr %91, align 8, !tbaa !85
  br label %94

94:                                               ; preds = %90, %88
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @c_bindings_end_stmt_expr(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %3 = icmp eq ptr %2, null
  br i1 %3, label %86, label %4

4:                                                ; preds = %1, %83
  %5 = phi ptr [ %84, %83 ], [ %2, %1 ]
  %6 = getelementptr inbounds %struct.c_scope, ptr %5, i64 0, i32 5
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 17179869184
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %83, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.c_scope, ptr %5, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  %13 = icmp eq ptr %12, null
  br i1 %13, label %83, label %14

14:                                               ; preds = %10, %79
  %15 = phi ptr [ %81, %79 ], [ %12, %10 ]
  %16 = getelementptr inbounds %struct.c_binding, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !32
  %18 = load i64, ptr %17, align 8
  %19 = and i64 %18, 65535
  %20 = icmp eq i64 %19, 30
  br i1 %20, label %21, label %79

21:                                               ; preds = %14
  %22 = load ptr, ptr %15, align 8, !tbaa !16
  %23 = getelementptr inbounds %struct.c_label_vars, ptr %22, i64 0, i32 1, i32 2
  %24 = load i32, ptr %23, align 8, !tbaa !78
  %25 = add nsw i32 %24, -1
  store i32 %25, ptr %23, align 8, !tbaa !78
  %26 = icmp slt i32 %24, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.c_label_vars, ptr %22, i64 0, i32 1, i32 3
  store i8 1, ptr %28, align 4, !tbaa !86
  store i32 0, ptr %23, align 8, !tbaa !78
  br label %29

29:                                               ; preds = %27, %21
  %30 = getelementptr inbounds %struct.c_label_vars, ptr %22, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8, !tbaa !69
  %32 = icmp eq ptr %31, null
  br i1 %32, label %79, label %33

33:                                               ; preds = %29
  %34 = load i32, ptr %31, align 8, !tbaa !70
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %33
  %37 = zext i32 %34 to i64
  %38 = and i64 %37, 1
  %39 = icmp eq i32 %34, 1
  br i1 %39, label %67, label %40

40:                                               ; preds = %36
  %41 = and i64 %37, 4294967294
  br label %42

42:                                               ; preds = %63, %40
  %43 = phi i64 [ 0, %40 ], [ %64, %63 ]
  %44 = phi i64 [ 0, %40 ], [ %65, %63 ]
  %45 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %31, i64 0, i32 2, i64 %43
  %46 = load ptr, ptr %45, align 8, !tbaa !5
  %47 = getelementptr inbounds %struct.c_goto_bindings, ptr %46, i64 0, i32 1, i32 2
  %48 = load i32, ptr %47, align 8, !tbaa !79
  %49 = add nsw i32 %48, -1
  store i32 %49, ptr %47, align 8, !tbaa !79
  %50 = icmp slt i32 %48, 1
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = getelementptr inbounds %struct.c_goto_bindings, ptr %46, i64 0, i32 1, i32 3
  store i8 1, ptr %52, align 4, !tbaa !87
  store i32 0, ptr %47, align 8, !tbaa !79
  br label %53

53:                                               ; preds = %42, %51
  %54 = or i64 %43, 1
  %55 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %31, i64 0, i32 2, i64 %54
  %56 = load ptr, ptr %55, align 8, !tbaa !5
  %57 = getelementptr inbounds %struct.c_goto_bindings, ptr %56, i64 0, i32 1, i32 2
  %58 = load i32, ptr %57, align 8, !tbaa !79
  %59 = add nsw i32 %58, -1
  store i32 %59, ptr %57, align 8, !tbaa !79
  %60 = icmp slt i32 %58, 1
  br i1 %60, label %61, label %63

61:                                               ; preds = %53
  %62 = getelementptr inbounds %struct.c_goto_bindings, ptr %56, i64 0, i32 1, i32 3
  store i8 1, ptr %62, align 4, !tbaa !87
  store i32 0, ptr %57, align 8, !tbaa !79
  br label %63

63:                                               ; preds = %61, %53
  %64 = add nuw nsw i64 %43, 2
  %65 = add i64 %44, 2
  %66 = icmp eq i64 %65, %41
  br i1 %66, label %67, label %42

67:                                               ; preds = %63, %36
  %68 = phi i64 [ 0, %36 ], [ %64, %63 ]
  %69 = icmp eq i64 %38, 0
  br i1 %69, label %79, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %31, i64 0, i32 2, i64 %68
  %72 = load ptr, ptr %71, align 8, !tbaa !5
  %73 = getelementptr inbounds %struct.c_goto_bindings, ptr %72, i64 0, i32 1, i32 2
  %74 = load i32, ptr %73, align 8, !tbaa !79
  %75 = add nsw i32 %74, -1
  store i32 %75, ptr %73, align 8, !tbaa !79
  %76 = icmp slt i32 %74, 1
  br i1 %76, label %77, label %79

77:                                               ; preds = %70
  %78 = getelementptr inbounds %struct.c_goto_bindings, ptr %72, i64 0, i32 1, i32 3
  store i8 1, ptr %78, align 4, !tbaa !87
  store i32 0, ptr %73, align 8, !tbaa !79
  br label %79

79:                                               ; preds = %67, %77, %70, %29, %33, %14
  %80 = getelementptr inbounds %struct.c_binding, ptr %15, i64 0, i32 3
  %81 = load ptr, ptr %80, align 8, !tbaa !5
  %82 = icmp eq ptr %81, null
  br i1 %82, label %83, label %14, !llvm.loop !88

83:                                               ; preds = %79, %10, %4
  %84 = load ptr, ptr %5, align 8, !tbaa !5
  %85 = icmp eq ptr %84, null
  br i1 %85, label %86, label %4, !llvm.loop !89

86:                                               ; preds = %83, %1
  %87 = icmp eq ptr %0, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %struct.c_spot_bindings, ptr %0, i64 0, i32 2
  %90 = load i32, ptr %89, align 8, !tbaa !85
  %91 = add nsw i32 %90, -1
  store i32 %91, ptr %89, align 8, !tbaa !85
  %92 = icmp sgt i32 %90, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %88
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 1411, ptr noundef nonnull @.str.8) #24
  br label %94

94:                                               ; preds = %93, %88, %86
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @pushdecl(ptr noundef %0) local_unnamed_addr #9 {
  %2 = alloca %struct.expanded_location, align 8
  %3 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !16
  %5 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !16
  %8 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %9 = icmp eq ptr %8, null
  br i1 %9, label %24, label %10

10:                                               ; preds = %1
  %11 = load i64, ptr %0, align 8
  %12 = trunc i64 %11 to i16
  switch i16 %12, label %22 [
    i16 29, label %13
    i16 32, label %13
  ]

13:                                               ; preds = %10, %10
  %14 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %15 = load ptr, ptr %14, align 8, !tbaa !16
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %19 = load i64, ptr %18, align 8
  %20 = and i64 %19, 33554432
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10, %17, %13
  %23 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  store ptr %8, ptr %23, align 8, !tbaa !16
  br label %24

24:                                               ; preds = %22, %17, %1
  %25 = icmp eq ptr %4, null
  br i1 %25, label %26, label %48

26:                                               ; preds = %24
  %27 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %28 = icmp eq ptr %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.c_binding, ptr %27, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8, !tbaa !60
  store ptr %31, ptr @binding_freelist, align 8, !tbaa !5
  br label %34

32:                                               ; preds = %26
  %33 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %34

34:                                               ; preds = %29, %32
  %35 = phi ptr [ %27, %29 ], [ %33, %32 ]
  %36 = getelementptr inbounds %struct.c_binding, ptr %35, i64 0, i32 4
  store ptr null, ptr %36, align 8, !tbaa !52
  %37 = getelementptr inbounds %struct.c_binding, ptr %35, i64 0, i32 1
  store ptr %0, ptr %37, align 8, !tbaa !32
  %38 = getelementptr inbounds %struct.c_binding, ptr %35, i64 0, i32 2
  store ptr null, ptr %38, align 8, !tbaa !51
  %39 = getelementptr inbounds %struct.c_scope, ptr %5, i64 0, i32 5
  %40 = load i64, ptr %39, align 8
  %41 = trunc i64 %40 to i32
  %42 = and i32 %41, 268435455
  %43 = getelementptr inbounds %struct.c_binding, ptr %35, i64 0, i32 5
  store i32 %42, ptr %43, align 8
  %44 = getelementptr inbounds %struct.c_binding, ptr %35, i64 0, i32 6
  store i32 %7, ptr %44, align 4, !tbaa !59
  store ptr null, ptr %35, align 8, !tbaa !16
  %45 = getelementptr inbounds %struct.c_scope, ptr %5, i64 0, i32 2
  %46 = load ptr, ptr %45, align 8, !tbaa !48
  %47 = getelementptr inbounds %struct.c_binding, ptr %35, i64 0, i32 3
  store ptr %46, ptr %47, align 8, !tbaa !60
  store ptr %35, ptr %45, align 8, !tbaa !48
  br label %563

48:                                               ; preds = %24
  %49 = getelementptr inbounds %struct.lang_identifier, ptr %4, i64 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !25
  %51 = icmp eq ptr %50, null
  br i1 %51, label %145, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.c_binding, ptr %50, i64 0, i32 5
  %54 = load i32, ptr %53, align 8
  %55 = getelementptr inbounds %struct.c_scope, ptr %5, i64 0, i32 5
  %56 = load i64, ptr %55, align 8
  %57 = trunc i64 %56 to i32
  %58 = xor i32 %54, %57
  %59 = and i32 %58, 268435455
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %145

61:                                               ; preds = %52
  %62 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8, !tbaa !16
  %64 = getelementptr inbounds %struct.c_binding, ptr %50, i64 0, i32 1
  %65 = load ptr, ptr %64, align 8, !tbaa !32
  %66 = getelementptr inbounds %struct.tree_common, ptr %65, i64 0, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !16
  %68 = load i64, ptr %63, align 8
  %69 = and i64 %68, 65535
  %70 = icmp eq i64 %69, 15
  br i1 %70, label %71, label %77

71:                                               ; preds = %61
  %72 = getelementptr inbounds %struct.tree_type, ptr %63, i64 0, i32 2
  %73 = load ptr, ptr %72, align 8, !tbaa !16
  %74 = icmp eq ptr %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = and i32 %54, -1073741825
  store i32 %76, ptr %53, align 8
  br label %77

77:                                               ; preds = %75, %71, %61
  %78 = load i64, ptr %0, align 8
  %79 = and i64 %78, 134217728
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %102, label %81

81:                                               ; preds = %77
  %82 = load i64, ptr %65, align 8
  %83 = and i64 %82, 134217728
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %102, label %85

85:                                               ; preds = %81, %91
  %86 = phi ptr [ %93, %91 ], [ %50, %81 ]
  %87 = getelementptr inbounds %struct.c_binding, ptr %86, i64 0, i32 5
  %88 = load i32, ptr %87, align 8
  %89 = and i32 %88, 268435455
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %struct.c_binding, ptr %86, i64 0, i32 4
  %93 = load ptr, ptr %92, align 8, !tbaa !52
  %94 = icmp eq ptr %93, null
  br i1 %94, label %102, label %85, !llvm.loop !90

95:                                               ; preds = %85
  %96 = load ptr, ptr %86, align 8, !tbaa !16
  %97 = icmp eq ptr %96, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct.c_binding, ptr %86, i64 0, i32 1
  %100 = load ptr, ptr %99, align 8, !tbaa !32
  %101 = getelementptr inbounds %struct.tree_common, ptr %100, i64 0, i32 2
  store ptr %96, ptr %101, align 8, !tbaa !16
  br label %102

102:                                              ; preds = %91, %98, %95, %81, %77
  %103 = phi ptr [ %86, %98 ], [ %86, %95 ], [ %50, %81 ], [ %50, %77 ], [ %50, %91 ]
  %104 = getelementptr inbounds %struct.c_binding, ptr %103, i64 0, i32 1
  %105 = load ptr, ptr %104, align 8, !tbaa !32
  %106 = tail call fastcc zeroext i8 @duplicate_decls(ptr noundef %0, ptr noundef %105), !range !91
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %457, label %108

108:                                              ; preds = %102
  %109 = icmp eq ptr %103, %50
  br i1 %109, label %143, label %110

110:                                              ; preds = %108
  %111 = tail call i32 @comptypes(ptr noundef %67, ptr noundef nonnull %63) #24
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %118, label %113

113:                                              ; preds = %110
  %114 = tail call ptr @composite_type(ptr noundef %67, ptr noundef nonnull %63) #24
  %115 = load ptr, ptr %104, align 8, !tbaa !32
  %116 = getelementptr inbounds %struct.tree_common, ptr %115, i64 0, i32 2
  %117 = load ptr, ptr %116, align 8, !tbaa !16
  br label %122

118:                                              ; preds = %110
  %119 = load ptr, ptr %104, align 8, !tbaa !32
  %120 = getelementptr inbounds %struct.tree_common, ptr %119, i64 0, i32 2
  %121 = load ptr, ptr %120, align 8, !tbaa !16
  br label %122

122:                                              ; preds = %118, %113
  %123 = phi ptr [ %117, %113 ], [ %121, %118 ]
  %124 = phi ptr [ %115, %113 ], [ %119, %118 ]
  %125 = phi ptr [ %114, %113 ], [ %121, %118 ]
  store ptr %123, ptr %103, align 8, !tbaa !16
  %126 = load i64, ptr %124, align 8
  %127 = and i64 %126, 65535
  %128 = icmp eq i64 %127, 29
  br i1 %128, label %129, label %139

129:                                              ; preds = %122
  %130 = getelementptr inbounds %struct.tree_function_decl, ptr %124, i64 0, i32 5
  %131 = load i32, ptr %130, align 8
  %132 = and i32 %131, 6144
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %139, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %struct.tree_type, ptr %123, i64 0, i32 4
  %136 = load ptr, ptr %135, align 8, !tbaa !16
  %137 = tail call ptr @build_type_attribute_variant(ptr noundef %125, ptr noundef %136) #24
  %138 = load ptr, ptr %104, align 8, !tbaa !32
  br label %139

139:                                              ; preds = %134, %129, %122
  %140 = phi ptr [ %138, %134 ], [ %124, %129 ], [ %124, %122 ]
  %141 = phi ptr [ %137, %134 ], [ %125, %129 ], [ %125, %122 ]
  %142 = getelementptr inbounds %struct.tree_common, ptr %140, i64 0, i32 2
  store ptr %141, ptr %142, align 8, !tbaa !16
  br label %143

143:                                              ; preds = %108, %139
  %144 = load ptr, ptr %104, align 8, !tbaa !32
  br label %563

145:                                              ; preds = %52, %48
  %146 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %147 = load i64, ptr %146, align 8
  %148 = and i64 %147, 33554432
  %149 = icmp ne i64 %148, 0
  %150 = load ptr, ptr @file_scope, align 8
  %151 = icmp eq ptr %5, %150
  %152 = select i1 %149, i1 true, i1 %151
  br i1 %152, label %153, label %450

153:                                              ; preds = %145
  %154 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %155 = load ptr, ptr %154, align 8, !tbaa !16
  br i1 %51, label %177, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %struct.c_binding, ptr %50, i64 0, i32 5
  %158 = load i32, ptr %157, align 8
  %159 = and i32 %158, 268435455
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %177, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %struct.c_binding, ptr %50, i64 0, i32 1
  %163 = load ptr, ptr %162, align 8, !tbaa !32
  %164 = load i64, ptr %163, align 8
  %165 = trunc i64 %164 to i16
  switch i16 %165, label %177 [
    i16 29, label %166
    i16 32, label %166
  ]

166:                                              ; preds = %161, %161
  %167 = getelementptr inbounds %struct.tree_decl_minimal, ptr %163, i64 0, i32 4
  %168 = load ptr, ptr %167, align 8, !tbaa !16
  %169 = icmp eq ptr %168, null
  br i1 %169, label %174, label %170

170:                                              ; preds = %166
  %171 = load i64, ptr %168, align 8
  %172 = and i64 %171, 65535
  %173 = icmp eq i64 %172, 40
  br i1 %173, label %174, label %177

174:                                              ; preds = %170, %166
  %175 = getelementptr inbounds %struct.tree_common, ptr %163, i64 0, i32 2
  %176 = load ptr, ptr %175, align 8, !tbaa !16
  br label %177

177:                                              ; preds = %161, %174, %170, %156, %153
  %178 = phi ptr [ null, %156 ], [ %176, %174 ], [ null, %170 ], [ null, %153 ], [ null, %161 ]
  %179 = phi ptr [ null, %156 ], [ %163, %174 ], [ null, %170 ], [ null, %153 ], [ null, %161 ]
  br i1 %151, label %186, label %180

180:                                              ; preds = %177
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %2, i32 noundef %7) #24
  %181 = getelementptr inbounds %struct.expanded_location, ptr %2, i64 0, i32 3
  %182 = load i8, ptr %181, align 8, !tbaa !57
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %184, label %186

184:                                              ; preds = %180
  %185 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 138, ptr noundef nonnull @.str.13, ptr noundef nonnull %0) #24
  br label %186

186:                                              ; preds = %184, %180, %177
  %187 = icmp eq ptr %50, null
  br i1 %187, label %373, label %188

188:                                              ; preds = %186
  %189 = getelementptr inbounds %struct.tree_type, ptr %155, i64 0, i32 1
  br label %190

190:                                              ; preds = %188, %254
  %191 = phi i8 [ 0, %188 ], [ %221, %254 ]
  %192 = phi ptr [ %50, %188 ], [ %256, %254 ]
  %193 = getelementptr inbounds %struct.c_binding, ptr %192, i64 0, i32 5
  %194 = load i32, ptr %193, align 8
  %195 = and i32 %194, 268435455
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %258, label %197

197:                                              ; preds = %190
  %198 = getelementptr inbounds %struct.c_binding, ptr %192, i64 0, i32 1
  %199 = load ptr, ptr %198, align 8, !tbaa !32
  %200 = load i64, ptr %199, align 8
  %201 = and i64 %200, 65535
  %202 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %201
  %203 = load i32, ptr %202, align 4, !tbaa !16
  %204 = icmp eq i32 %203, 3
  br i1 %204, label %205, label %220

205:                                              ; preds = %197
  %206 = getelementptr inbounds %struct.tree_decl_minimal, ptr %199, i64 0, i32 4
  %207 = load ptr, ptr %206, align 8, !tbaa !16
  %208 = icmp eq ptr %207, null
  br i1 %208, label %215, label %209

209:                                              ; preds = %205
  %210 = load i64, ptr %207, align 8
  %211 = and i64 %210, 65535
  %212 = icmp ne i64 %211, 40
  %213 = icmp ne i8 %191, 0
  %214 = select i1 %212, i1 true, i1 %213
  br i1 %214, label %220, label %217

215:                                              ; preds = %205
  %216 = icmp eq i8 %191, 0
  br i1 %216, label %217, label %220

217:                                              ; preds = %209, %215
  %218 = getelementptr inbounds %struct.tree_common, ptr %199, i64 0, i32 2
  %219 = load ptr, ptr %218, align 8, !tbaa !16
  store ptr %219, ptr %192, align 8, !tbaa !16
  br label %220

220:                                              ; preds = %217, %215, %209, %197
  %221 = phi i8 [ %191, %209 ], [ 1, %217 ], [ 1, %215 ], [ %191, %197 ]
  %222 = icmp eq i32 %195, 1
  br i1 %222, label %223, label %254

223:                                              ; preds = %220
  %224 = load i64, ptr %199, align 8
  %225 = and i64 %224, 67174399
  %226 = icmp eq i64 %225, 67108896
  br i1 %226, label %227, label %254

227:                                              ; preds = %223
  %228 = getelementptr inbounds %struct.tree_common, ptr %199, i64 0, i32 2
  %229 = load ptr, ptr %228, align 8, !tbaa !16
  %230 = load i64, ptr %229, align 8
  %231 = and i64 %230, 65535
  %232 = icmp eq i64 %231, 15
  br i1 %232, label %233, label %254

233:                                              ; preds = %227
  %234 = getelementptr inbounds %struct.tree_type, ptr %229, i64 0, i32 1
  %235 = load ptr, ptr %234, align 8, !tbaa !16
  %236 = icmp eq ptr %235, null
  br i1 %236, label %237, label %254

237:                                              ; preds = %233
  %238 = load i64, ptr %155, align 8
  %239 = and i64 %238, 65535
  %240 = icmp eq i64 %239, 15
  br i1 %240, label %241, label %254

241:                                              ; preds = %237
  %242 = load ptr, ptr %189, align 8, !tbaa !16
  %243 = icmp eq ptr %242, null
  br i1 %243, label %254, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %struct.tree_type, ptr %242, i64 0, i32 14
  %246 = load ptr, ptr %245, align 8, !tbaa !16
  %247 = icmp eq ptr %246, null
  br i1 %247, label %254, label %248

248:                                              ; preds = %244
  %249 = call i32 @integer_zerop(ptr noundef nonnull %246) #24
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %254

251:                                              ; preds = %248
  %252 = load i32, ptr %193, align 8
  %253 = or i32 %252, 1073741824
  store i32 %253, ptr %193, align 8
  br label %254

254:                                              ; preds = %251, %248, %244, %241, %237, %233, %227, %223, %220
  %255 = getelementptr inbounds %struct.c_binding, ptr %192, i64 0, i32 4
  %256 = load ptr, ptr %255, align 8, !tbaa !52
  %257 = icmp eq ptr %256, null
  br i1 %257, label %373, label %190, !llvm.loop !92

258:                                              ; preds = %190
  %259 = load i64, ptr %0, align 8
  %260 = and i64 %259, 134217728
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %267

262:                                              ; preds = %258
  %263 = getelementptr inbounds %struct.c_binding, ptr %192, i64 0, i32 1
  %264 = load ptr, ptr %263, align 8, !tbaa !32
  %265 = call i32 @same_translation_unit_p(ptr noundef nonnull %0, ptr noundef %264) #24
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %274, label %267

267:                                              ; preds = %262, %258
  %268 = load ptr, ptr %192, align 8, !tbaa !16
  %269 = icmp eq ptr %268, null
  br i1 %269, label %274, label %270

270:                                              ; preds = %267
  %271 = getelementptr inbounds %struct.c_binding, ptr %192, i64 0, i32 1
  %272 = load ptr, ptr %271, align 8, !tbaa !32
  %273 = getelementptr inbounds %struct.tree_common, ptr %272, i64 0, i32 2
  store ptr %268, ptr %273, align 8, !tbaa !16
  br label %274

274:                                              ; preds = %262, %267, %270
  %275 = load i64, ptr %0, align 8
  %276 = and i64 %275, 134217728
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %283

278:                                              ; preds = %274
  %279 = getelementptr inbounds %struct.c_binding, ptr %192, i64 0, i32 1
  %280 = load ptr, ptr %279, align 8, !tbaa !32
  %281 = call i32 @same_translation_unit_p(ptr noundef nonnull %0, ptr noundef %280) #24
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %373, label %283

283:                                              ; preds = %278, %274
  %284 = getelementptr inbounds %struct.c_binding, ptr %192, i64 0, i32 1
  %285 = load ptr, ptr %284, align 8, !tbaa !32
  %286 = call fastcc zeroext i8 @duplicate_decls(ptr noundef nonnull %0, ptr noundef %285), !range !91
  %287 = icmp eq i8 %286, 0
  br i1 %287, label %373, label %288

288:                                              ; preds = %283
  %289 = icmp eq ptr %178, null
  br i1 %289, label %299, label %290

290:                                              ; preds = %288
  %291 = call i32 @comptypes(ptr noundef nonnull %178, ptr noundef %155) #24
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %295, label %293

293:                                              ; preds = %290
  %294 = call ptr @composite_type(ptr noundef nonnull %178, ptr noundef %155) #24
  br label %299

295:                                              ; preds = %290
  %296 = load ptr, ptr %284, align 8, !tbaa !32
  %297 = getelementptr inbounds %struct.tree_common, ptr %296, i64 0, i32 2
  %298 = load ptr, ptr %297, align 8, !tbaa !16
  br label %299

299:                                              ; preds = %288, %293, %295
  %300 = phi ptr [ %294, %293 ], [ %298, %295 ], [ %155, %288 ]
  %301 = load ptr, ptr %284, align 8, !tbaa !32
  %302 = getelementptr inbounds %struct.tree_common, ptr %301, i64 0, i32 2
  %303 = load ptr, ptr %302, align 8, !tbaa !16
  store ptr %303, ptr %192, align 8, !tbaa !16
  %304 = load i64, ptr %301, align 8
  %305 = and i64 %304, 65535
  %306 = icmp eq i64 %305, 29
  br i1 %306, label %307, label %317

307:                                              ; preds = %299
  %308 = getelementptr inbounds %struct.tree_function_decl, ptr %301, i64 0, i32 5
  %309 = load i32, ptr %308, align 8
  %310 = and i32 %309, 6144
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %317, label %312

312:                                              ; preds = %307
  %313 = getelementptr inbounds %struct.tree_type, ptr %303, i64 0, i32 4
  %314 = load ptr, ptr %313, align 8, !tbaa !16
  %315 = call ptr @build_type_attribute_variant(ptr noundef %300, ptr noundef %314) #24
  %316 = load ptr, ptr %284, align 8, !tbaa !32
  br label %317

317:                                              ; preds = %312, %307, %299
  %318 = phi ptr [ %316, %312 ], [ %301, %307 ], [ %301, %299 ]
  %319 = phi ptr [ %315, %312 ], [ %300, %307 ], [ %300, %299 ]
  %320 = getelementptr inbounds %struct.tree_common, ptr %318, i64 0, i32 2
  store ptr %319, ptr %320, align 8, !tbaa !16
  %321 = load ptr, ptr %284, align 8, !tbaa !32
  %322 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %323 = icmp eq ptr %322, null
  br i1 %323, label %327, label %324

324:                                              ; preds = %317
  %325 = getelementptr inbounds %struct.c_binding, ptr %322, i64 0, i32 3
  %326 = load ptr, ptr %325, align 8, !tbaa !60
  store ptr %326, ptr @binding_freelist, align 8, !tbaa !5
  br label %329

327:                                              ; preds = %317
  %328 = call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %329

329:                                              ; preds = %324, %327
  %330 = phi ptr [ %322, %324 ], [ %328, %327 ]
  %331 = getelementptr inbounds %struct.c_binding, ptr %330, i64 0, i32 4
  store ptr null, ptr %331, align 8, !tbaa !52
  %332 = getelementptr inbounds %struct.c_binding, ptr %330, i64 0, i32 1
  store ptr %321, ptr %332, align 8, !tbaa !32
  %333 = getelementptr inbounds %struct.c_binding, ptr %330, i64 0, i32 2
  store ptr %4, ptr %333, align 8, !tbaa !51
  %334 = getelementptr inbounds %struct.c_scope, ptr %5, i64 0, i32 5
  %335 = load i64, ptr %334, align 8
  %336 = trunc i64 %335 to i32
  %337 = and i32 %336, 268435455
  %338 = getelementptr inbounds %struct.c_binding, ptr %330, i64 0, i32 5
  %339 = or i32 %337, 536870912
  store i32 %339, ptr %338, align 8
  %340 = getelementptr inbounds %struct.c_binding, ptr %330, i64 0, i32 6
  store i32 %7, ptr %340, align 4, !tbaa !59
  store ptr null, ptr %330, align 8, !tbaa !16
  %341 = getelementptr inbounds %struct.c_scope, ptr %5, i64 0, i32 2
  %342 = load ptr, ptr %341, align 8, !tbaa !48
  %343 = getelementptr inbounds %struct.c_binding, ptr %330, i64 0, i32 3
  store ptr %342, ptr %343, align 8, !tbaa !60
  store ptr %330, ptr %341, align 8, !tbaa !48
  %344 = load i64, ptr %321, align 8
  %345 = trunc i64 %344 to i16
  switch i16 %345, label %350 [
    i16 30, label %346
    i16 6, label %348
    i16 17, label %348
    i16 16, label %348
    i16 32, label %351
    i16 29, label %351
    i16 35, label %351
    i16 33, label %351
    i16 34, label %351
    i16 0, label %351
  ]

346:                                              ; preds = %329
  %347 = getelementptr inbounds %struct.lang_identifier, ptr %4, i64 0, i32 3
  br label %351

348:                                              ; preds = %329, %329, %329
  %349 = getelementptr inbounds %struct.lang_identifier, ptr %4, i64 0, i32 2
  br label %351

350:                                              ; preds = %329
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %351

351:                                              ; preds = %329, %329, %329, %329, %329, %329, %350, %348, %346
  %352 = phi ptr [ undef, %350 ], [ %349, %348 ], [ %347, %346 ], [ %49, %329 ], [ %49, %329 ], [ %49, %329 ], [ %49, %329 ], [ %49, %329 ], [ %49, %329 ]
  %353 = load ptr, ptr %352, align 8, !tbaa !5
  %354 = icmp eq ptr %353, null
  br i1 %354, label %446, label %355

355:                                              ; preds = %351
  %356 = load i64, ptr %334, align 8
  %357 = trunc i64 %356 to i32
  %358 = and i32 %357, 268435455
  %359 = getelementptr inbounds %struct.c_binding, ptr %353, i64 0, i32 5
  %360 = load i32, ptr %359, align 8
  %361 = and i32 %360, 268435455
  %362 = icmp ugt i32 %361, %358
  br i1 %362, label %368, label %446

363:                                              ; preds = %368
  %364 = getelementptr inbounds %struct.c_binding, ptr %371, i64 0, i32 5
  %365 = load i32, ptr %364, align 8
  %366 = and i32 %365, 268435455
  %367 = icmp ugt i32 %366, %358
  br i1 %367, label %368, label %443, !llvm.loop !74

368:                                              ; preds = %355, %363
  %369 = phi ptr [ %371, %363 ], [ %353, %355 ]
  %370 = getelementptr inbounds %struct.c_binding, ptr %369, i64 0, i32 4
  %371 = load ptr, ptr %370, align 8, !tbaa !5
  %372 = icmp eq ptr %371, null
  br i1 %372, label %443, label %363, !llvm.loop !74

373:                                              ; preds = %254, %186, %283, %278
  %374 = phi i1 [ true, %283 ], [ true, %278 ], [ false, %186 ], [ false, %254 ]
  %375 = load i64, ptr %0, align 8
  %376 = and i64 %375, 134217728
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %450, label %378

378:                                              ; preds = %373
  %379 = icmp eq ptr %179, null
  %380 = or i1 %379, %374
  br i1 %380, label %384, label %381

381:                                              ; preds = %378
  %382 = call fastcc zeroext i8 @duplicate_decls(ptr noundef nonnull %0, ptr noundef nonnull %179), !range !91
  %383 = icmp eq i8 %382, 0
  br i1 %383, label %384, label %450

384:                                              ; preds = %381, %378
  %385 = load ptr, ptr @external_scope, align 8, !tbaa !5
  %386 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %387 = icmp eq ptr %386, null
  br i1 %387, label %391, label %388

388:                                              ; preds = %384
  %389 = getelementptr inbounds %struct.c_binding, ptr %386, i64 0, i32 3
  %390 = load ptr, ptr %389, align 8, !tbaa !60
  store ptr %390, ptr @binding_freelist, align 8, !tbaa !5
  br label %393

391:                                              ; preds = %384
  %392 = call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %393

393:                                              ; preds = %388, %391
  %394 = phi ptr [ %386, %388 ], [ %392, %391 ]
  %395 = getelementptr inbounds %struct.c_binding, ptr %394, i64 0, i32 4
  store ptr null, ptr %395, align 8, !tbaa !52
  %396 = getelementptr inbounds %struct.c_binding, ptr %394, i64 0, i32 1
  store ptr %0, ptr %396, align 8, !tbaa !32
  %397 = getelementptr inbounds %struct.c_binding, ptr %394, i64 0, i32 2
  store ptr %4, ptr %397, align 8, !tbaa !51
  %398 = getelementptr inbounds %struct.c_scope, ptr %385, i64 0, i32 5
  %399 = load i64, ptr %398, align 8
  %400 = trunc i64 %399 to i32
  %401 = and i32 %400, 268435455
  %402 = getelementptr inbounds %struct.c_binding, ptr %394, i64 0, i32 5
  %403 = or i32 %401, 268435456
  store i32 %403, ptr %402, align 8
  %404 = getelementptr inbounds %struct.c_binding, ptr %394, i64 0, i32 6
  store i32 %7, ptr %404, align 4, !tbaa !59
  store ptr null, ptr %394, align 8, !tbaa !16
  %405 = getelementptr inbounds %struct.c_scope, ptr %385, i64 0, i32 2
  %406 = load ptr, ptr %405, align 8, !tbaa !48
  %407 = getelementptr inbounds %struct.c_binding, ptr %394, i64 0, i32 3
  store ptr %406, ptr %407, align 8, !tbaa !60
  store ptr %394, ptr %405, align 8, !tbaa !48
  %408 = load i64, ptr %0, align 8
  %409 = trunc i64 %408 to i16
  switch i16 %409, label %414 [
    i16 30, label %410
    i16 6, label %412
    i16 17, label %412
    i16 16, label %412
    i16 32, label %415
    i16 29, label %415
    i16 35, label %415
    i16 33, label %415
    i16 34, label %415
    i16 0, label %415
  ]

410:                                              ; preds = %393
  %411 = getelementptr inbounds %struct.lang_identifier, ptr %4, i64 0, i32 3
  br label %415

412:                                              ; preds = %393, %393, %393
  %413 = getelementptr inbounds %struct.lang_identifier, ptr %4, i64 0, i32 2
  br label %415

414:                                              ; preds = %393
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %415

415:                                              ; preds = %393, %393, %393, %393, %393, %393, %414, %412, %410
  %416 = phi ptr [ undef, %414 ], [ %413, %412 ], [ %411, %410 ], [ %49, %393 ], [ %49, %393 ], [ %49, %393 ], [ %49, %393 ], [ %49, %393 ], [ %49, %393 ]
  %417 = load ptr, ptr %416, align 8, !tbaa !5
  %418 = icmp eq ptr %417, null
  br i1 %418, label %440, label %419

419:                                              ; preds = %415
  %420 = load i64, ptr %398, align 8
  %421 = trunc i64 %420 to i32
  %422 = and i32 %421, 268435455
  %423 = getelementptr inbounds %struct.c_binding, ptr %417, i64 0, i32 5
  %424 = load i32, ptr %423, align 8
  %425 = and i32 %424, 268435455
  %426 = icmp ugt i32 %425, %422
  br i1 %426, label %432, label %440

427:                                              ; preds = %432
  %428 = getelementptr inbounds %struct.c_binding, ptr %435, i64 0, i32 5
  %429 = load i32, ptr %428, align 8
  %430 = and i32 %429, 268435455
  %431 = icmp ugt i32 %430, %422
  br i1 %431, label %432, label %437, !llvm.loop !74

432:                                              ; preds = %419, %427
  %433 = phi ptr [ %435, %427 ], [ %417, %419 ]
  %434 = getelementptr inbounds %struct.c_binding, ptr %433, i64 0, i32 4
  %435 = load ptr, ptr %434, align 8, !tbaa !5
  %436 = icmp eq ptr %435, null
  br i1 %436, label %437, label %427, !llvm.loop !74

437:                                              ; preds = %427, %432
  %438 = phi ptr [ null, %432 ], [ %435, %427 ]
  %439 = getelementptr inbounds %struct.c_binding, ptr %433, i64 0, i32 4
  br label %440

440:                                              ; preds = %437, %419, %415
  %441 = phi ptr [ %416, %415 ], [ %416, %419 ], [ %439, %437 ]
  %442 = phi ptr [ null, %415 ], [ %417, %419 ], [ %438, %437 ]
  store ptr %442, ptr %395, align 8, !tbaa !52
  store ptr %394, ptr %441, align 8, !tbaa !5
  br label %450

443:                                              ; preds = %368, %363
  %444 = phi ptr [ %371, %363 ], [ null, %368 ]
  %445 = getelementptr inbounds %struct.c_binding, ptr %369, i64 0, i32 4
  br label %446

446:                                              ; preds = %443, %355, %351
  %447 = phi ptr [ %352, %351 ], [ %352, %355 ], [ %445, %443 ]
  %448 = phi ptr [ null, %351 ], [ %353, %355 ], [ %444, %443 ]
  store ptr %448, ptr %331, align 8, !tbaa !52
  store ptr %330, ptr %447, align 8, !tbaa !5
  %449 = load ptr, ptr %284, align 8, !tbaa !32
  br label %563

450:                                              ; preds = %440, %373, %381, %145
  %451 = phi i8 [ 0, %145 ], [ 1, %381 ], [ 0, %373 ], [ 1, %440 ]
  %452 = phi ptr [ %0, %145 ], [ %179, %381 ], [ %0, %373 ], [ %0, %440 ]
  %453 = load i64, ptr %452, align 8
  %454 = and i64 %453, 65535
  %455 = icmp eq i64 %454, 34
  br i1 %455, label %457, label %456

456:                                              ; preds = %450
  call fastcc void @warn_if_shadowing(ptr noundef nonnull %452)
  br label %457

457:                                              ; preds = %102, %450, %456
  %458 = phi i8 [ %451, %456 ], [ %451, %450 ], [ 0, %102 ]
  %459 = phi ptr [ %452, %456 ], [ %452, %450 ], [ %0, %102 ]
  %460 = load i64, ptr %459, align 8
  %461 = and i64 %460, 65535
  %462 = icmp eq i64 %461, 35
  br i1 %462, label %463, label %464

463:                                              ; preds = %457
  call void @set_underlying_type(ptr noundef nonnull %459) #24
  br label %464

464:                                              ; preds = %463, %457
  %465 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %466 = icmp eq ptr %465, null
  br i1 %466, label %470, label %467

467:                                              ; preds = %464
  %468 = getelementptr inbounds %struct.c_binding, ptr %465, i64 0, i32 3
  %469 = load ptr, ptr %468, align 8, !tbaa !60
  store ptr %469, ptr @binding_freelist, align 8, !tbaa !5
  br label %472

470:                                              ; preds = %464
  %471 = call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %472

472:                                              ; preds = %467, %470
  %473 = phi ptr [ %465, %467 ], [ %471, %470 ]
  %474 = getelementptr inbounds %struct.c_binding, ptr %473, i64 0, i32 4
  store ptr null, ptr %474, align 8, !tbaa !52
  %475 = getelementptr inbounds %struct.c_binding, ptr %473, i64 0, i32 1
  store ptr %459, ptr %475, align 8, !tbaa !32
  %476 = getelementptr inbounds %struct.c_binding, ptr %473, i64 0, i32 2
  store ptr %4, ptr %476, align 8, !tbaa !51
  %477 = getelementptr inbounds %struct.c_scope, ptr %5, i64 0, i32 5
  %478 = load i64, ptr %477, align 8
  %479 = trunc i64 %478 to i32
  %480 = and i32 %479, 268435455
  %481 = getelementptr inbounds %struct.c_binding, ptr %473, i64 0, i32 5
  %482 = zext i8 %458 to i32
  %483 = shl nuw nsw i32 %482, 29
  %484 = or i32 %480, %483
  store i32 %484, ptr %481, align 8
  %485 = getelementptr inbounds %struct.c_binding, ptr %473, i64 0, i32 6
  store i32 %7, ptr %485, align 4, !tbaa !59
  store ptr null, ptr %473, align 8, !tbaa !16
  %486 = getelementptr inbounds %struct.c_scope, ptr %5, i64 0, i32 2
  %487 = load ptr, ptr %486, align 8, !tbaa !48
  %488 = getelementptr inbounds %struct.c_binding, ptr %473, i64 0, i32 3
  store ptr %487, ptr %488, align 8, !tbaa !60
  store ptr %473, ptr %486, align 8, !tbaa !48
  %489 = load i64, ptr %459, align 8
  %490 = trunc i64 %489 to i16
  switch i16 %490, label %495 [
    i16 30, label %491
    i16 6, label %493
    i16 17, label %493
    i16 16, label %493
    i16 32, label %496
    i16 29, label %496
    i16 35, label %496
    i16 33, label %496
    i16 34, label %496
    i16 0, label %496
  ]

491:                                              ; preds = %472
  %492 = getelementptr inbounds %struct.lang_identifier, ptr %4, i64 0, i32 3
  br label %496

493:                                              ; preds = %472, %472, %472
  %494 = getelementptr inbounds %struct.lang_identifier, ptr %4, i64 0, i32 2
  br label %496

495:                                              ; preds = %472
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %496

496:                                              ; preds = %472, %472, %472, %472, %472, %472, %495, %493, %491
  %497 = phi ptr [ undef, %495 ], [ %494, %493 ], [ %492, %491 ], [ %49, %472 ], [ %49, %472 ], [ %49, %472 ], [ %49, %472 ], [ %49, %472 ], [ %49, %472 ]
  %498 = load ptr, ptr %497, align 8, !tbaa !5
  %499 = icmp eq ptr %498, null
  br i1 %499, label %521, label %500

500:                                              ; preds = %496
  %501 = load i64, ptr %477, align 8
  %502 = trunc i64 %501 to i32
  %503 = and i32 %502, 268435455
  %504 = getelementptr inbounds %struct.c_binding, ptr %498, i64 0, i32 5
  %505 = load i32, ptr %504, align 8
  %506 = and i32 %505, 268435455
  %507 = icmp ugt i32 %506, %503
  br i1 %507, label %513, label %521

508:                                              ; preds = %513
  %509 = getelementptr inbounds %struct.c_binding, ptr %516, i64 0, i32 5
  %510 = load i32, ptr %509, align 8
  %511 = and i32 %510, 268435455
  %512 = icmp ugt i32 %511, %503
  br i1 %512, label %513, label %518, !llvm.loop !74

513:                                              ; preds = %500, %508
  %514 = phi ptr [ %516, %508 ], [ %498, %500 ]
  %515 = getelementptr inbounds %struct.c_binding, ptr %514, i64 0, i32 4
  %516 = load ptr, ptr %515, align 8, !tbaa !5
  %517 = icmp eq ptr %516, null
  br i1 %517, label %518, label %508, !llvm.loop !74

518:                                              ; preds = %508, %513
  %519 = phi ptr [ null, %513 ], [ %516, %508 ]
  %520 = getelementptr inbounds %struct.c_binding, ptr %514, i64 0, i32 4
  br label %521

521:                                              ; preds = %518, %500, %496
  %522 = phi ptr [ %497, %496 ], [ %497, %500 ], [ %520, %518 ]
  %523 = phi ptr [ null, %496 ], [ %498, %500 ], [ %519, %518 ]
  store ptr %523, ptr %474, align 8, !tbaa !52
  store ptr %473, ptr %522, align 8, !tbaa !5
  %524 = getelementptr inbounds %struct.tree_common, ptr %459, i64 0, i32 2
  %525 = load ptr, ptr %524, align 8, !tbaa !16
  %526 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %527 = icmp eq ptr %525, %526
  br i1 %527, label %563, label %528

528:                                              ; preds = %521
  %529 = getelementptr inbounds %struct.tree_type, ptr %525, i64 0, i32 2
  %530 = load ptr, ptr %529, align 8, !tbaa !16
  %531 = icmp eq ptr %530, null
  br i1 %531, label %532, label %563

532:                                              ; preds = %528
  %533 = load i64, ptr %525, align 8
  %534 = and i64 %533, 65535
  %535 = icmp eq i64 %534, 15
  br i1 %535, label %536, label %543

536:                                              ; preds = %532, %536
  %537 = phi ptr [ %539, %536 ], [ %525, %532 ]
  %538 = getelementptr inbounds %struct.tree_common, ptr %537, i64 0, i32 2
  %539 = load ptr, ptr %538, align 8, !tbaa !16
  %540 = load i64, ptr %539, align 8
  %541 = and i64 %540, 65535
  %542 = icmp eq i64 %541, 15
  br i1 %542, label %536, label %543, !llvm.loop !93

543:                                              ; preds = %536, %532
  %544 = phi ptr [ %525, %532 ], [ %539, %536 ]
  %545 = getelementptr inbounds %struct.tree_type, ptr %544, i64 0, i32 16
  %546 = load ptr, ptr %545, align 8, !tbaa !16
  %547 = load i64, ptr %546, align 8
  %548 = and i64 %547, 65534
  %549 = icmp eq i64 %548, 16
  br i1 %549, label %550, label %563

550:                                              ; preds = %543
  %551 = load i64, ptr %459, align 8
  %552 = and i64 %551, 65535
  %553 = icmp ne i64 %552, 35
  %554 = or i1 %553, %535
  br i1 %554, label %555, label %563

555:                                              ; preds = %550
  %556 = getelementptr inbounds %struct.tree_type, ptr %546, i64 0, i32 2
  %557 = load ptr, ptr %556, align 8, !tbaa !16
  %558 = icmp eq ptr %557, null
  br i1 %558, label %559, label %563

559:                                              ; preds = %555
  %560 = getelementptr inbounds %struct.tree_type, ptr %546, i64 0, i32 13
  %561 = load ptr, ptr %560, align 8, !tbaa !16
  %562 = call ptr @tree_cons_stat(ptr noundef null, ptr noundef nonnull %459, ptr noundef %561) #24
  store ptr %562, ptr %560, align 8, !tbaa !16
  br label %563

563:                                              ; preds = %550, %446, %143, %543, %521, %528, %559, %555, %34
  %564 = phi ptr [ %144, %143 ], [ %449, %446 ], [ %0, %34 ], [ %459, %555 ], [ %459, %559 ], [ %459, %543 ], [ %459, %528 ], [ %459, %521 ], [ %459, %550 ]
  ret ptr %564
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @duplicate_decls(ptr noundef %0, ptr noundef %1) unnamed_addr #9 {
  %3 = alloca %struct.expanded_location, align 8
  %4 = alloca %struct.expanded_location, align 8
  %5 = alloca %struct.expanded_location, align 8
  %6 = alloca %struct.expanded_location, align 8
  %7 = alloca %struct.expanded_location, align 8
  %8 = alloca %struct.expanded_location, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8)
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %10 = icmp eq ptr %9, %1
  %11 = icmp eq ptr %9, %0
  %12 = or i1 %10, %11
  br i1 %12, label %1146, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !16
  %16 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !16
  %18 = icmp eq ptr %15, %9
  %19 = icmp eq ptr %17, %9
  %20 = select i1 %18, i1 true, i1 %19
  br i1 %20, label %1146, label %21

21:                                               ; preds = %13
  %22 = load i64, ptr %1, align 8
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 65535
  %25 = load i64, ptr %0, align 8
  %26 = trunc i64 %25 to i32
  %27 = and i32 %26, 65535
  %28 = icmp eq i32 %24, %27
  br i1 %28, label %71, label %29

29:                                               ; preds = %21
  %30 = icmp eq i32 %24, 29
  br i1 %30, label %31, label %41

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %33 = load i32, ptr %32, align 8
  %34 = and i32 %33, 6144
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %38 = load i64, ptr %37, align 8
  %39 = and i64 %38, 262144
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %64, label %41

41:                                               ; preds = %36, %31, %29
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.218, ptr noundef nonnull %0) #24
  %42 = load i64, ptr %1, align 8
  %43 = and i64 %42, 65535
  %44 = icmp eq i64 %43, 29
  br i1 %44, label %45, label %50

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %47 = load i32, ptr %46, align 8
  %48 = and i32 %47, 6144
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %1146

50:                                               ; preds = %45, %41
  %51 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %52 = load ptr, ptr %51, align 8, !tbaa !16
  %53 = icmp eq ptr %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %55, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

56:                                               ; preds = %50
  %57 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %58 = load i64, ptr %57, align 8
  %59 = and i64 %58, 131072
  %60 = icmp eq i64 %59, 0
  %61 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %60, label %63, label %62

62:                                               ; preds = %56
  tail call void (i32, ptr, ...) @inform(i32 noundef %61, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

63:                                               ; preds = %56
  tail call void (i32, ptr, ...) @inform(i32 noundef %61, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

64:                                               ; preds = %36
  %65 = and i64 %25, 134217728
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %64
  %68 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.219, ptr noundef nonnull %0) #24
  br label %1146

69:                                               ; preds = %64
  %70 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 176, ptr noundef nonnull @.str.220, ptr noundef nonnull %0) #24
  br label %1146

71:                                               ; preds = %21
  %72 = icmp eq i32 %24, 33
  br i1 %72, label %73, label %96

73:                                               ; preds = %71
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.221, ptr noundef nonnull %0) #24
  %74 = load i64, ptr %1, align 8
  %75 = and i64 %74, 65535
  %76 = icmp eq i64 %75, 29
  br i1 %76, label %77, label %82

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %79 = load i32, ptr %78, align 8
  %80 = and i32 %79, 6144
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %1146

82:                                               ; preds = %77, %73
  %83 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %84 = load ptr, ptr %83, align 8, !tbaa !16
  %85 = icmp eq ptr %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %82
  %87 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %87, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

88:                                               ; preds = %82
  %89 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %90 = load i64, ptr %89, align 8
  %91 = and i64 %90, 131072
  %92 = icmp eq i64 %91, 0
  %93 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %92, label %95, label %94

94:                                               ; preds = %88
  tail call void (i32, ptr, ...) @inform(i32 noundef %93, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

95:                                               ; preds = %88
  tail call void (i32, ptr, ...) @inform(i32 noundef %93, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

96:                                               ; preds = %71
  %97 = tail call i32 @comptypes(ptr noundef %15, ptr noundef %17) #24
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %415

99:                                               ; preds = %96
  %100 = load i64, ptr %1, align 8
  %101 = and i64 %100, 65535
  %102 = icmp eq i64 %101, 29
  br i1 %102, label %103, label %220

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %105 = load i32, ptr %104, align 8
  %106 = and i32 %105, 6144
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %212, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %110 = load i64, ptr %109, align 8
  %111 = and i64 %110, 262144
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %212

113:                                              ; preds = %108
  %114 = getelementptr inbounds %struct.tree_common, ptr %15, i64 0, i32 2
  %115 = load ptr, ptr %114, align 8, !tbaa !16
  %116 = getelementptr inbounds %struct.tree_common, ptr %17, i64 0, i32 2
  %117 = load ptr, ptr %116, align 8, !tbaa !16
  %118 = load i64, ptr %115, align 8
  %119 = and i64 %118, 65535
  %120 = icmp eq i64 %119, 14
  br i1 %120, label %121, label %123

121:                                              ; preds = %113
  %122 = tail call i32 @vector_type_mode(ptr noundef nonnull %115) #24
  br label %128

123:                                              ; preds = %113
  %124 = getelementptr inbounds %struct.tree_type, ptr %115, i64 0, i32 6
  %125 = load i32, ptr %124, align 4
  %126 = lshr i32 %125, 16
  %127 = and i32 %126, 255
  br label %128

128:                                              ; preds = %123, %121
  %129 = phi i32 [ %122, %121 ], [ %127, %123 ]
  %130 = load i64, ptr %117, align 8
  %131 = and i64 %130, 65535
  %132 = icmp eq i64 %131, 14
  br i1 %132, label %133, label %135

133:                                              ; preds = %128
  %134 = tail call i32 @vector_type_mode(ptr noundef nonnull %117) #24
  br label %140

135:                                              ; preds = %128
  %136 = getelementptr inbounds %struct.tree_type, ptr %117, i64 0, i32 6
  %137 = load i32, ptr %136, align 4
  %138 = lshr i32 %137, 16
  %139 = and i32 %138, 255
  br label %140

140:                                              ; preds = %135, %133
  %141 = phi i32 [ %134, %133 ], [ %139, %135 ]
  %142 = icmp eq i32 %129, %141
  br i1 %142, label %143, label %210

143:                                              ; preds = %140
  %144 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 1
  %145 = getelementptr inbounds %struct.tree_type, ptr %17, i64 0, i32 1
  %146 = load ptr, ptr %145, align 8, !tbaa !16
  %147 = load ptr, ptr %144, align 8, !tbaa !16
  %148 = icmp ne ptr %147, null
  %149 = icmp ne ptr %146, null
  %150 = select i1 %148, i1 true, i1 %149
  br i1 %150, label %151, label %201

151:                                              ; preds = %143, %193
  %152 = phi i1 [ %199, %193 ], [ %149, %143 ]
  %153 = phi i1 [ %198, %193 ], [ %148, %143 ]
  %154 = phi ptr [ %197, %193 ], [ %147, %143 ]
  %155 = phi ptr [ %196, %193 ], [ %146, %143 ]
  %156 = select i1 %153, i1 %152, i1 false
  br i1 %156, label %157, label %210

157:                                              ; preds = %151
  %158 = getelementptr inbounds %struct.tree_list, ptr %154, i64 0, i32 2
  %159 = load ptr, ptr %158, align 8, !tbaa !16
  %160 = icmp eq ptr %159, null
  br i1 %160, label %210, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %struct.tree_list, ptr %155, i64 0, i32 2
  %163 = load ptr, ptr %162, align 8, !tbaa !16
  %164 = icmp eq ptr %163, null
  br i1 %164, label %210, label %165

165:                                              ; preds = %161
  %166 = load i64, ptr %159, align 8
  %167 = and i64 %166, 65535
  %168 = icmp eq i64 %167, 14
  br i1 %168, label %169, label %172

169:                                              ; preds = %165
  %170 = tail call i32 @vector_type_mode(ptr noundef nonnull %159) #24
  %171 = load ptr, ptr %162, align 8, !tbaa !16
  br label %177

172:                                              ; preds = %165
  %173 = getelementptr inbounds %struct.tree_type, ptr %159, i64 0, i32 6
  %174 = load i32, ptr %173, align 4
  %175 = lshr i32 %174, 16
  %176 = and i32 %175, 255
  br label %177

177:                                              ; preds = %172, %169
  %178 = phi ptr [ %171, %169 ], [ %163, %172 ]
  %179 = phi i32 [ %170, %169 ], [ %176, %172 ]
  %180 = load i64, ptr %178, align 8
  %181 = and i64 %180, 65535
  %182 = icmp eq i64 %181, 14
  br i1 %182, label %183, label %185

183:                                              ; preds = %177
  %184 = tail call i32 @vector_type_mode(ptr noundef nonnull %178) #24
  br label %190

185:                                              ; preds = %177
  %186 = getelementptr inbounds %struct.tree_type, ptr %178, i64 0, i32 6
  %187 = load i32, ptr %186, align 4
  %188 = lshr i32 %187, 16
  %189 = and i32 %188, 255
  br label %190

190:                                              ; preds = %185, %183
  %191 = phi i32 [ %184, %183 ], [ %189, %185 ]
  %192 = icmp eq i32 %179, %191
  br i1 %192, label %193, label %210

193:                                              ; preds = %190
  %194 = getelementptr inbounds %struct.tree_common, ptr %154, i64 0, i32 1
  %195 = getelementptr inbounds %struct.tree_common, ptr %155, i64 0, i32 1
  %196 = load ptr, ptr %195, align 8, !tbaa !16
  %197 = load ptr, ptr %194, align 8, !tbaa !16
  %198 = icmp ne ptr %197, null
  %199 = icmp ne ptr %196, null
  %200 = select i1 %198, i1 true, i1 %199
  br i1 %200, label %151, label %201, !llvm.loop !94

201:                                              ; preds = %193, %143
  %202 = tail call ptr @build_function_type(ptr noundef nonnull %117, ptr noundef %146) #24
  %203 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 4
  %204 = load ptr, ptr %203, align 8, !tbaa !16
  %205 = tail call ptr @build_type_attribute_variant(ptr noundef %202, ptr noundef %204) #24
  %206 = icmp eq ptr %205, null
  br i1 %206, label %210, label %207

207:                                              ; preds = %201
  %208 = tail call i32 @comptypes(ptr noundef %17, ptr noundef nonnull %205) #24
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %415

210:                                              ; preds = %151, %157, %161, %190, %140, %207, %201
  %211 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.222, ptr noundef nonnull %0) #24
  br label %1146

212:                                              ; preds = %108, %103
  %213 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 1
  %214 = load i32, ptr %213, align 8, !tbaa !16
  %215 = icmp ult i32 %214, 2
  br i1 %215, label %216, label %220

216:                                              ; preds = %212
  %217 = load i64, ptr %0, align 8
  %218 = and i64 %100, 524288
  %219 = or i64 %217, %218
  store i64 %219, ptr %0, align 8
  br label %1146

220:                                              ; preds = %212, %99
  %221 = load i64, ptr %0, align 8
  %222 = and i64 %221, 65535
  %223 = icmp eq i64 %222, 29
  br i1 %223, label %224, label %281

224:                                              ; preds = %220
  %225 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %226 = load ptr, ptr %225, align 8, !tbaa !16
  %227 = icmp eq ptr %226, null
  %228 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !5
  br i1 %227, label %256, label %229

229:                                              ; preds = %224
  %230 = getelementptr inbounds %struct.tree_common, ptr %15, i64 0, i32 2
  %231 = load ptr, ptr %230, align 8, !tbaa !16
  %232 = getelementptr inbounds %struct.tree_type, ptr %231, i64 0, i32 16
  %233 = load ptr, ptr %232, align 8, !tbaa !16
  %234 = icmp eq ptr %233, %228
  br i1 %234, label %235, label %256

235:                                              ; preds = %229
  %236 = getelementptr inbounds %struct.tree_common, ptr %17, i64 0, i32 2
  %237 = load ptr, ptr %236, align 8, !tbaa !16
  %238 = getelementptr inbounds %struct.tree_type, ptr %237, i64 0, i32 16
  %239 = load ptr, ptr %238, align 8, !tbaa !16
  %240 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %241 = icmp eq ptr %239, %240
  br i1 %241, label %242, label %256

242:                                              ; preds = %235
  %243 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %244 = load i64, ptr %243, align 8
  %245 = and i64 %244, 65536
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %256, label %247

247:                                              ; preds = %242
  %248 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %249 = load ptr, ptr %248, align 8, !tbaa !16
  %250 = icmp eq ptr %249, null
  br i1 %250, label %251, label %256

251:                                              ; preds = %247
  %252 = load i32, ptr @input_location, align 4, !tbaa !20
  %253 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %252, i32 noundef 0, ptr noundef nonnull @.str.223, ptr noundef nonnull %0) #24
  store ptr %15, ptr %16, align 8, !tbaa !16
  %254 = load i64, ptr %243, align 8
  %255 = and i64 %254, -65537
  store i64 %255, ptr %243, align 8
  br label %415

256:                                              ; preds = %247, %242, %235, %229, %224
  %257 = getelementptr inbounds %struct.tree_common, ptr %17, i64 0, i32 2
  %258 = load ptr, ptr %257, align 8, !tbaa !16
  %259 = getelementptr inbounds %struct.tree_type, ptr %258, i64 0, i32 16
  %260 = load ptr, ptr %259, align 8, !tbaa !16
  %261 = icmp eq ptr %260, %228
  br i1 %261, label %262, label %281

262:                                              ; preds = %256
  %263 = getelementptr inbounds %struct.tree_common, ptr %15, i64 0, i32 2
  %264 = load ptr, ptr %263, align 8, !tbaa !16
  %265 = getelementptr inbounds %struct.tree_type, ptr %264, i64 0, i32 16
  %266 = load ptr, ptr %265, align 8, !tbaa !16
  %267 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %268 = icmp eq ptr %266, %267
  br i1 %268, label %269, label %281

269:                                              ; preds = %262
  %270 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %271 = load i64, ptr %270, align 8
  %272 = and i64 %271, 131072
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %281, label %274

274:                                              ; preds = %269
  %275 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %276 = load ptr, ptr %275, align 8, !tbaa !16
  %277 = icmp eq ptr %276, null
  br i1 %277, label %278, label %281

278:                                              ; preds = %274
  %279 = load i32, ptr @input_location, align 4, !tbaa !20
  %280 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %279, i32 noundef 0, ptr noundef nonnull @.str.223, ptr noundef nonnull %0) #24
  store ptr %17, ptr %14, align 8, !tbaa !16
  br label %415

281:                                              ; preds = %274, %269, %262, %256, %220
  %282 = load i64, ptr %17, align 8
  %283 = trunc i64 %282 to i32
  %284 = lshr i32 %283, 20
  %285 = and i32 %284, 1
  %286 = lshr i32 %283, 18
  %287 = and i32 %286, 2
  %288 = or i32 %285, %287
  %289 = getelementptr inbounds %struct.tree_type, ptr %17, i64 0, i32 6
  %290 = load i32, ptr %289, align 4
  %291 = lshr i32 %290, 11
  %292 = and i32 %291, 4
  %293 = or i32 %288, %292
  %294 = lshr i64 %282, 48
  %295 = trunc i64 %294 to i32
  %296 = and i32 %295, 65280
  %297 = or i32 %293, %296
  %298 = load i64, ptr %15, align 8
  %299 = trunc i64 %298 to i32
  %300 = lshr i32 %299, 20
  %301 = and i32 %300, 1
  %302 = lshr i32 %299, 18
  %303 = and i32 %302, 2
  %304 = or i32 %301, %303
  %305 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 6
  %306 = load i32, ptr %305, align 4
  %307 = lshr i32 %306, 11
  %308 = and i32 %307, 4
  %309 = or i32 %304, %308
  %310 = lshr i64 %298, 48
  %311 = trunc i64 %310 to i32
  %312 = and i32 %311, 65280
  %313 = or i32 %309, %312
  %314 = icmp eq i32 %297, %313
  br i1 %314, label %335, label %315

315:                                              ; preds = %281
  %316 = lshr i64 %282, 56
  %317 = trunc i64 %316 to i8
  %318 = lshr i64 %298, 56
  %319 = trunc i64 %318 to i8
  %320 = trunc i64 %316 to i32
  %321 = trunc i64 %318 to i32
  %322 = icmp eq i32 %320, %321
  br i1 %322, label %333, label %323

323:                                              ; preds = %315
  %324 = icmp eq i32 %320, 0
  br i1 %324, label %325, label %327

325:                                              ; preds = %323
  %326 = tail call ptr @c_addr_space_name(i8 noundef zeroext %319) #24
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.224, ptr noundef %326, ptr noundef nonnull %0) #24
  br label %333

327:                                              ; preds = %323
  %328 = icmp eq i32 %321, 0
  %329 = tail call ptr @c_addr_space_name(i8 noundef zeroext %317) #24
  br i1 %328, label %330, label %331

330:                                              ; preds = %327
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.225, ptr noundef %329, ptr noundef nonnull %0) #24
  br label %333

331:                                              ; preds = %327
  %332 = tail call ptr @c_addr_space_name(i8 noundef zeroext %319) #24
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.226, ptr noundef %329, ptr noundef %332, ptr noundef nonnull %0) #24
  br label %333

333:                                              ; preds = %331, %330, %325, %315
  %334 = icmp eq i32 %293, %309
  br i1 %334, label %337, label %335

335:                                              ; preds = %333, %281
  %336 = phi ptr [ @.str.227, %333 ], [ @.str.223, %281 ]
  tail call void (ptr, ...) @error(ptr noundef nonnull %336, ptr noundef nonnull %0) #24
  br label %337

337:                                              ; preds = %335, %333
  %338 = load i64, ptr %1, align 8
  %339 = and i64 %338, 65535
  %340 = icmp eq i64 %339, 29
  br i1 %340, label %341, label %392

341:                                              ; preds = %337
  %342 = getelementptr inbounds %struct.tree_common, ptr %15, i64 0, i32 2
  %343 = load ptr, ptr %342, align 8, !tbaa !16
  %344 = getelementptr inbounds %struct.tree_common, ptr %17, i64 0, i32 2
  %345 = load ptr, ptr %344, align 8, !tbaa !16
  %346 = tail call i32 @comptypes(ptr noundef %343, ptr noundef %345) #24
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %392, label %348

348:                                              ; preds = %341
  %349 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 1
  %350 = load ptr, ptr %349, align 8, !tbaa !16
  %351 = icmp eq ptr %350, null
  br i1 %351, label %352, label %356

352:                                              ; preds = %348
  %353 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %354 = load ptr, ptr %353, align 8, !tbaa !16
  %355 = icmp eq ptr %354, null
  br i1 %355, label %365, label %356

356:                                              ; preds = %352, %348
  %357 = getelementptr inbounds %struct.tree_type, ptr %17, i64 0, i32 1
  %358 = load ptr, ptr %357, align 8, !tbaa !16
  %359 = icmp eq ptr %358, null
  br i1 %359, label %360, label %392

360:                                              ; preds = %356
  %361 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %362 = load ptr, ptr %361, align 8, !tbaa !16
  %363 = icmp ne ptr %362, null
  %364 = or i1 %351, %363
  br i1 %364, label %392, label %369

365:                                              ; preds = %352
  %366 = getelementptr inbounds %struct.tree_type, ptr %17, i64 0, i32 1
  %367 = load ptr, ptr %366, align 8, !tbaa !16
  %368 = icmp eq ptr %367, null
  br i1 %368, label %392, label %369

369:                                              ; preds = %365, %360
  %370 = phi ptr [ %350, %360 ], [ %367, %365 ]
  br label %371

371:                                              ; preds = %369, %386
  %372 = phi ptr [ %387, %386 ], [ %370, %369 ]
  %373 = getelementptr inbounds %struct.tree_list, ptr %372, i64 0, i32 2
  %374 = load ptr, ptr %373, align 8, !tbaa !16
  %375 = getelementptr inbounds %struct.tree_common, ptr %372, i64 0, i32 1
  %376 = load ptr, ptr %375, align 8, !tbaa !16
  %377 = icmp eq ptr %376, null
  br i1 %377, label %378, label %383

378:                                              ; preds = %371
  %379 = getelementptr inbounds %struct.tree_type, ptr %374, i64 0, i32 16
  %380 = load ptr, ptr %379, align 8, !tbaa !16
  %381 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !5
  %382 = icmp eq ptr %380, %381
  br i1 %382, label %383, label %389

383:                                              ; preds = %378, %371
  %384 = tail call ptr @c_type_promotes_to(ptr noundef %374) #24
  %385 = icmp eq ptr %384, %374
  br i1 %385, label %386, label %389

386:                                              ; preds = %383
  %387 = load ptr, ptr %375, align 8, !tbaa !16
  %388 = icmp eq ptr %387, null
  br i1 %388, label %392, label %371, !llvm.loop !95

389:                                              ; preds = %383, %378
  %390 = phi ptr [ @.str.245, %378 ], [ @.str.246, %383 ]
  %391 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %391, ptr noundef nonnull %390) #24
  br label %392

392:                                              ; preds = %386, %337, %341, %356, %360, %365, %389
  %393 = load i64, ptr %1, align 8
  %394 = and i64 %393, 65535
  %395 = icmp eq i64 %394, 29
  br i1 %395, label %396, label %401

396:                                              ; preds = %392
  %397 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %398 = load i32, ptr %397, align 8
  %399 = and i32 %398, 6144
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %1146

401:                                              ; preds = %396, %392
  %402 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %403 = load ptr, ptr %402, align 8, !tbaa !16
  %404 = icmp eq ptr %403, null
  br i1 %404, label %407, label %405

405:                                              ; preds = %401
  %406 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %406, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

407:                                              ; preds = %401
  %408 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %409 = load i64, ptr %408, align 8
  %410 = and i64 %409, 131072
  %411 = icmp eq i64 %410, 0
  %412 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %411, label %414, label %413

413:                                              ; preds = %407
  tail call void (i32, ptr, ...) @inform(i32 noundef %412, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

414:                                              ; preds = %407
  tail call void (i32, ptr, ...) @inform(i32 noundef %412, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

415:                                              ; preds = %207, %278, %251, %96
  %416 = phi ptr [ %17, %278 ], [ %15, %251 ], [ %17, %96 ], [ %17, %207 ]
  %417 = phi ptr [ %17, %278 ], [ %15, %251 ], [ %15, %96 ], [ %205, %207 ]
  %418 = phi i8 [ %280, %278 ], [ %253, %251 ], [ 0, %96 ], [ 0, %207 ]
  %419 = load i64, ptr %0, align 8
  %420 = trunc i64 %419 to i32
  %421 = trunc i64 %419 to i16
  switch i16 %421, label %971 [
    i16 35, label %422
    i16 29, label %465
    i16 32, label %736
  ]

422:                                              ; preds = %415
  %423 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %424 = load i32, ptr %423, align 8, !tbaa !16
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %7, i32 noundef %424) #24
  %425 = getelementptr inbounds %struct.expanded_location, ptr %7, i64 0, i32 3
  %426 = load i8, ptr %425, align 8, !tbaa !57
  %427 = icmp eq i8 %426, 0
  br i1 %427, label %428, label %1149

428:                                              ; preds = %422
  %429 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 1
  %430 = load i32, ptr %429, align 8, !tbaa !16
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %8, i32 noundef %430) #24
  %431 = getelementptr inbounds %struct.expanded_location, ptr %8, i64 0, i32 3
  %432 = load i8, ptr %431, align 8, !tbaa !57
  %433 = icmp eq i8 %432, 0
  br i1 %433, label %434, label %1149

434:                                              ; preds = %428
  %435 = load i64, ptr %0, align 8
  %436 = and i64 %435, 8388608
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %438, label %1149

438:                                              ; preds = %434
  %439 = load i64, ptr %1, align 8
  %440 = and i64 %439, 8388608
  %441 = icmp eq i64 %440, 0
  br i1 %441, label %442, label %1149

442:                                              ; preds = %438
  call void (ptr, ...) @error(ptr noundef nonnull @.str.228, ptr noundef nonnull %0) #24
  %443 = load i64, ptr %1, align 8
  %444 = and i64 %443, 65535
  %445 = icmp eq i64 %444, 29
  br i1 %445, label %446, label %451

446:                                              ; preds = %442
  %447 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %448 = load i32, ptr %447, align 8
  %449 = and i32 %448, 6144
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %1146

451:                                              ; preds = %446, %442
  %452 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %453 = load ptr, ptr %452, align 8, !tbaa !16
  %454 = icmp eq ptr %453, null
  br i1 %454, label %457, label %455

455:                                              ; preds = %451
  %456 = load i32, ptr @input_location, align 4, !tbaa !20
  call void (i32, ptr, ...) @inform(i32 noundef %456, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

457:                                              ; preds = %451
  %458 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %459 = load i64, ptr %458, align 8
  %460 = and i64 %459, 131072
  %461 = icmp eq i64 %460, 0
  %462 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %461, label %464, label %463

463:                                              ; preds = %457
  call void (i32, ptr, ...) @inform(i32 noundef %462, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

464:                                              ; preds = %457
  call void (i32, ptr, ...) @inform(i32 noundef %462, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

465:                                              ; preds = %415
  %466 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %467 = load i32, ptr %466, align 8
  %468 = and i32 %467, 6144
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %489, label %470

470:                                              ; preds = %465
  %471 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %472 = load i64, ptr %471, align 8
  %473 = and i64 %472, 262144
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %489

475:                                              ; preds = %470
  %476 = and i64 %419, 134217728
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %487, label %478

478:                                              ; preds = %475
  %479 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %480 = load ptr, ptr %479, align 8, !tbaa !16
  %481 = icmp eq ptr %480, null
  br i1 %481, label %489, label %482

482:                                              ; preds = %478
  %483 = load ptr, ptr %16, align 8, !tbaa !16
  %484 = getelementptr inbounds %struct.tree_type, ptr %483, i64 0, i32 1
  %485 = load ptr, ptr %484, align 8, !tbaa !16
  %486 = icmp eq ptr %485, null
  br i1 %486, label %487, label %489

487:                                              ; preds = %482, %475
  %488 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 176, ptr noundef nonnull @.str.220, ptr noundef nonnull %0) #24
  br label %1146

489:                                              ; preds = %482, %478, %470, %465
  %490 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %491 = load ptr, ptr %490, align 8, !tbaa !16
  %492 = icmp eq ptr %491, null
  %493 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %494 = load ptr, ptr %493, align 8, !tbaa !16
  %495 = icmp eq ptr %494, null
  br i1 %492, label %556, label %496

496:                                              ; preds = %489
  br i1 %495, label %637, label %497

497:                                              ; preds = %496
  %498 = and i32 %467, 2097152
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %532, label %500

500:                                              ; preds = %497
  %501 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %502 = load i64, ptr %501, align 8
  %503 = and i64 %502, 33554432
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %532, label %505

505:                                              ; preds = %500
  %506 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 5
  %507 = load i32, ptr %506, align 8
  %508 = and i32 %507, 2097152
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %515, label %510

510:                                              ; preds = %505
  %511 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %512 = load i64, ptr %511, align 8
  %513 = and i64 %512, 33554432
  %514 = icmp eq i64 %513, 0
  br i1 %514, label %515, label %532

515:                                              ; preds = %510, %505
  %516 = load i32, ptr @flag_gnu89_inline, align 4, !tbaa !20
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %518, label %637

518:                                              ; preds = %515
  %519 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  %520 = load ptr, ptr %519, align 8, !tbaa !16
  %521 = tail call ptr @lookup_attribute(ptr noundef nonnull @.str.54, ptr noundef %520) #24
  %522 = icmp eq ptr %521, null
  br i1 %522, label %523, label %637

523:                                              ; preds = %518
  %524 = load i32, ptr %506, align 8
  %525 = and i32 %524, 2097152
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %532, label %527

527:                                              ; preds = %523
  %528 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 6
  %529 = load ptr, ptr %528, align 8, !tbaa !16
  %530 = tail call ptr @lookup_attribute(ptr noundef nonnull @.str.54, ptr noundef %529) #24
  %531 = icmp eq ptr %530, null
  br i1 %531, label %532, label %637

532:                                              ; preds = %527, %523, %510, %500, %497
  %533 = tail call i32 @same_translation_unit_p(ptr noundef nonnull %0, ptr noundef nonnull %1) #24
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %637, label %535

535:                                              ; preds = %532
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.229, ptr noundef nonnull %0) #24
  %536 = load i64, ptr %1, align 8
  %537 = and i64 %536, 65535
  %538 = icmp eq i64 %537, 29
  br i1 %538, label %539, label %543

539:                                              ; preds = %535
  %540 = load i32, ptr %466, align 8
  %541 = and i32 %540, 6144
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %543, label %1146

543:                                              ; preds = %539, %535
  %544 = load ptr, ptr %493, align 8, !tbaa !16
  %545 = icmp eq ptr %544, null
  br i1 %545, label %548, label %546

546:                                              ; preds = %543
  %547 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %547, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

548:                                              ; preds = %543
  %549 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %550 = load i64, ptr %549, align 8
  %551 = and i64 %550, 131072
  %552 = icmp eq i64 %551, 0
  %553 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %552, label %555, label %554

554:                                              ; preds = %548
  tail call void (i32, ptr, ...) @inform(i32 noundef %553, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

555:                                              ; preds = %548
  tail call void (i32, ptr, ...) @inform(i32 noundef %553, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

556:                                              ; preds = %489
  br i1 %495, label %637, label %557

557:                                              ; preds = %556
  %558 = getelementptr inbounds %struct.tree_type, ptr %417, i64 0, i32 1
  %559 = load ptr, ptr %558, align 8, !tbaa !16
  %560 = icmp eq ptr %559, null
  br i1 %560, label %561, label %637

561:                                              ; preds = %557
  %562 = getelementptr %struct.tree_type, ptr %416, i64 0, i32 1
  %563 = load ptr, ptr %562, align 8, !tbaa !16
  %564 = icmp eq ptr %563, null
  br i1 %564, label %637, label %565

565:                                              ; preds = %561
  %566 = getelementptr %struct.tree_type, ptr %417, i64 0, i32 17
  %567 = load ptr, ptr %566, align 8, !tbaa !16
  %568 = icmp eq ptr %567, null
  br i1 %568, label %637, label %569

569:                                              ; preds = %565
  %570 = getelementptr inbounds %struct.tree_list, ptr %567, i64 0, i32 2
  %571 = load ptr, ptr %570, align 8, !tbaa !16
  %572 = getelementptr inbounds %struct.tree_list, ptr %563, i64 0, i32 2
  %573 = load ptr, ptr %572, align 8, !tbaa !16
  %574 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %575 = icmp eq ptr %571, %574
  %576 = icmp eq ptr %573, %574
  %577 = select i1 %575, i1 true, i1 %576
  br i1 %577, label %616, label %578

578:                                              ; preds = %569, %600
  %579 = phi ptr [ %609, %600 ], [ %573, %569 ]
  %580 = phi ptr [ %607, %600 ], [ %571, %569 ]
  %581 = phi i32 [ %605, %600 ], [ 1, %569 ]
  %582 = phi ptr [ %602, %600 ], [ %567, %569 ]
  %583 = phi ptr [ %604, %600 ], [ %563, %569 ]
  %584 = getelementptr inbounds %struct.tree_type, ptr %580, i64 0, i32 16
  %585 = load ptr, ptr %584, align 8, !tbaa !16
  %586 = getelementptr inbounds %struct.tree_type, ptr %579, i64 0, i32 16
  %587 = load ptr, ptr %586, align 8, !tbaa !16
  %588 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !5
  %589 = icmp eq ptr %585, %588
  %590 = icmp eq ptr %587, %588
  %591 = select i1 %589, i1 %590, i1 false
  br i1 %591, label %614, label %592

592:                                              ; preds = %578
  br i1 %589, label %593, label %594

593:                                              ; preds = %592
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.247, ptr noundef %0) #24
  br label %616

594:                                              ; preds = %592
  br i1 %590, label %595, label %596

595:                                              ; preds = %594
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.248, ptr noundef %0) #24
  br label %616

596:                                              ; preds = %594
  %597 = tail call i32 @comptypes(ptr noundef %585, ptr noundef %587) #24
  %598 = icmp eq i32 %597, 0
  br i1 %598, label %599, label %600

599:                                              ; preds = %596
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.249, ptr noundef %0, i32 noundef %581) #24
  br label %616

600:                                              ; preds = %596
  %601 = getelementptr inbounds %struct.tree_common, ptr %582, i64 0, i32 1
  %602 = load ptr, ptr %601, align 8, !tbaa !16
  %603 = getelementptr inbounds %struct.tree_common, ptr %583, i64 0, i32 1
  %604 = load ptr, ptr %603, align 8, !tbaa !16
  %605 = add nuw nsw i32 %581, 1
  %606 = getelementptr inbounds %struct.tree_list, ptr %602, i64 0, i32 2
  %607 = load ptr, ptr %606, align 8, !tbaa !16
  %608 = getelementptr inbounds %struct.tree_list, ptr %604, i64 0, i32 2
  %609 = load ptr, ptr %608, align 8, !tbaa !16
  %610 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %611 = icmp eq ptr %607, %610
  %612 = icmp eq ptr %609, %610
  %613 = select i1 %611, i1 true, i1 %612
  br i1 %613, label %616, label %578

614:                                              ; preds = %578
  %615 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.250, ptr noundef %0) #24
  br label %637

616:                                              ; preds = %600, %593, %595, %599, %569
  %617 = load i64, ptr %1, align 8
  %618 = and i64 %617, 65535
  %619 = icmp eq i64 %618, 29
  br i1 %619, label %620, label %624

620:                                              ; preds = %616
  %621 = load i32, ptr %466, align 8
  %622 = and i32 %621, 6144
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %624, label %1146

624:                                              ; preds = %620, %616
  %625 = load ptr, ptr %493, align 8, !tbaa !16
  %626 = icmp eq ptr %625, null
  br i1 %626, label %629, label %627

627:                                              ; preds = %624
  %628 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %628, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

629:                                              ; preds = %624
  %630 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %631 = load i64, ptr %630, align 8
  %632 = and i64 %631, 131072
  %633 = icmp eq i64 %632, 0
  %634 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %633, label %636, label %635

635:                                              ; preds = %629
  tail call void (i32, ptr, ...) @inform(i32 noundef %634, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

636:                                              ; preds = %629
  tail call void (i32, ptr, ...) @inform(i32 noundef %634, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

637:                                              ; preds = %614, %565, %561, %557, %556, %532, %527, %518, %515, %496
  %638 = load i64, ptr %1, align 8
  %639 = and i64 %638, 134217728
  %640 = icmp eq i64 %639, 0
  %641 = load i64, ptr %0, align 8
  %642 = and i64 %641, 134217728
  %643 = icmp eq i64 %642, 0
  br i1 %640, label %679, label %644

644:                                              ; preds = %637
  br i1 %643, label %645, label %710

645:                                              ; preds = %644
  %646 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 1
  %647 = load i32, ptr %646, align 8, !tbaa !16
  %648 = icmp ult i32 %647, 2
  br i1 %648, label %1146, label %649

649:                                              ; preds = %645
  %650 = load i32, ptr %466, align 8
  %651 = and i32 %650, 2097152
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %658, label %653

653:                                              ; preds = %649
  %654 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %655 = load i64, ptr %654, align 8
  %656 = and i64 %655, 33554432
  %657 = icmp eq i64 %656, 0
  br i1 %657, label %658, label %1146

658:                                              ; preds = %653, %649
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.230, ptr noundef nonnull %0) #24
  %659 = load i64, ptr %1, align 8
  %660 = and i64 %659, 65535
  %661 = icmp eq i64 %660, 29
  br i1 %661, label %662, label %666

662:                                              ; preds = %658
  %663 = load i32, ptr %466, align 8
  %664 = and i32 %663, 6144
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %666, label %1146

666:                                              ; preds = %662, %658
  %667 = load ptr, ptr %493, align 8, !tbaa !16
  %668 = icmp eq ptr %667, null
  br i1 %668, label %671, label %669

669:                                              ; preds = %666
  %670 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %670, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

671:                                              ; preds = %666
  %672 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %673 = load i64, ptr %672, align 8
  %674 = and i64 %673, 131072
  %675 = icmp eq i64 %674, 0
  %676 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %675, label %678, label %677

677:                                              ; preds = %671
  tail call void (i32, ptr, ...) @inform(i32 noundef %676, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

678:                                              ; preds = %671
  tail call void (i32, ptr, ...) @inform(i32 noundef %676, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

679:                                              ; preds = %637
  br i1 %643, label %710, label %680

680:                                              ; preds = %679
  %681 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  %682 = load ptr, ptr %681, align 8, !tbaa !16
  %683 = icmp eq ptr %682, null
  br i1 %683, label %705, label %684

684:                                              ; preds = %680
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.231, ptr noundef nonnull %0) #24
  %685 = load i64, ptr %1, align 8
  %686 = and i64 %685, 65535
  %687 = icmp eq i64 %686, 29
  br i1 %687, label %688, label %692

688:                                              ; preds = %684
  %689 = load i32, ptr %466, align 8
  %690 = and i32 %689, 6144
  %691 = icmp eq i32 %690, 0
  br i1 %691, label %692, label %1146

692:                                              ; preds = %688, %684
  %693 = load ptr, ptr %493, align 8, !tbaa !16
  %694 = icmp eq ptr %693, null
  br i1 %694, label %697, label %695

695:                                              ; preds = %692
  %696 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %696, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

697:                                              ; preds = %692
  %698 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %699 = load i64, ptr %698, align 8
  %700 = and i64 %699, 131072
  %701 = icmp eq i64 %700, 0
  %702 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %701, label %704, label %703

703:                                              ; preds = %697
  tail call void (i32, ptr, ...) @inform(i32 noundef %702, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

704:                                              ; preds = %697
  tail call void (i32, ptr, ...) @inform(i32 noundef %702, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

705:                                              ; preds = %680
  %706 = load i32, ptr @warn_traditional, align 4, !tbaa !20
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %710, label %708

708:                                              ; preds = %705
  %709 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 202, ptr noundef nonnull @.str.231, ptr noundef nonnull %0) #24
  br label %710

710:                                              ; preds = %708, %705, %679, %644
  %711 = phi i8 [ %709, %708 ], [ 0, %705 ], [ 0, %679 ], [ 0, %644 ]
  %712 = load i32, ptr %466, align 8
  %713 = and i32 %712, 2097152
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %971, label %715

715:                                              ; preds = %710
  %716 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 5
  %717 = load i32, ptr %716, align 8
  %718 = and i32 %717, 2097152
  %719 = icmp eq i32 %718, 0
  br i1 %719, label %971, label %720

720:                                              ; preds = %715
  %721 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 6
  %722 = load ptr, ptr %721, align 8, !tbaa !16
  %723 = tail call ptr @lookup_attribute(ptr noundef nonnull @.str.54, ptr noundef %722) #24
  %724 = icmp ne ptr %723, null
  %725 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  %726 = load ptr, ptr %725, align 8, !tbaa !16
  %727 = tail call ptr @lookup_attribute(ptr noundef nonnull @.str.54, ptr noundef %726) #24
  %728 = icmp eq ptr %727, null
  %729 = xor i1 %724, %728
  br i1 %729, label %971, label %730

730:                                              ; preds = %720
  %731 = load i32, ptr @input_location, align 4, !tbaa !20
  %732 = select i1 %724, ptr %0, ptr %1
  tail call void (i32, ptr, ...) @error_at(i32 noundef %731, ptr noundef nonnull @.str.232, ptr noundef nonnull %732) #24
  %733 = select i1 %724, ptr %1, ptr %0
  %734 = getelementptr inbounds %struct.tree_decl_minimal, ptr %733, i64 0, i32 1
  %735 = load i32, ptr %734, align 8, !tbaa !16
  tail call void (i32, ptr, ...) @error_at(i32 noundef %735, ptr noundef nonnull @.str.233) #24
  br label %971

736:                                              ; preds = %415
  %737 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %738 = load i64, ptr %737, align 8
  %739 = and i64 %738, 262144
  %740 = icmp ne i64 %739, 0
  %741 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %742 = load i32, ptr %741, align 8
  %743 = and i32 %742, 49152
  %744 = icmp eq i32 %743, 0
  %745 = select i1 %740, i1 %744, i1 false
  br i1 %745, label %776, label %746

746:                                              ; preds = %736
  %747 = icmp ne i32 %743, 0
  %748 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 4
  %749 = load i32, ptr %748, align 8
  %750 = and i32 %749, 49152
  %751 = icmp eq i32 %750, 0
  %752 = xor i1 %747, %751
  br i1 %752, label %776, label %753

753:                                              ; preds = %746
  %754 = select i1 %747, ptr @.str.234, ptr @.str.235
  tail call void (ptr, ...) @error(ptr noundef nonnull %754, ptr noundef nonnull %0) #24
  %755 = load i64, ptr %1, align 8
  %756 = and i64 %755, 65535
  %757 = icmp eq i64 %756, 29
  br i1 %757, label %758, label %763

758:                                              ; preds = %753
  %759 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %760 = load i32, ptr %759, align 8
  %761 = and i32 %760, 6144
  %762 = icmp eq i32 %761, 0
  br i1 %762, label %763, label %1146

763:                                              ; preds = %758, %753
  %764 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %765 = load ptr, ptr %764, align 8, !tbaa !16
  %766 = icmp eq ptr %765, null
  br i1 %766, label %769, label %767

767:                                              ; preds = %763
  %768 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %768, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

769:                                              ; preds = %763
  %770 = load i64, ptr %737, align 8
  %771 = and i64 %770, 131072
  %772 = icmp eq i64 %771, 0
  %773 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %772, label %775, label %774

774:                                              ; preds = %769
  tail call void (i32, ptr, ...) @inform(i32 noundef %773, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

775:                                              ; preds = %769
  tail call void (i32, ptr, ...) @inform(i32 noundef %773, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

776:                                              ; preds = %746, %736
  %777 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %778 = load ptr, ptr %777, align 8, !tbaa !16
  %779 = icmp eq ptr %778, null
  br i1 %779, label %805, label %780

780:                                              ; preds = %776
  %781 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %782 = load ptr, ptr %781, align 8, !tbaa !16
  %783 = icmp eq ptr %782, null
  br i1 %783, label %805, label %784

784:                                              ; preds = %780
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.229, ptr noundef nonnull %0) #24
  %785 = load i64, ptr %1, align 8
  %786 = and i64 %785, 65535
  %787 = icmp eq i64 %786, 29
  br i1 %787, label %788, label %793

788:                                              ; preds = %784
  %789 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %790 = load i32, ptr %789, align 8
  %791 = and i32 %790, 6144
  %792 = icmp eq i32 %791, 0
  br i1 %792, label %793, label %1146

793:                                              ; preds = %788, %784
  %794 = load ptr, ptr %781, align 8, !tbaa !16
  %795 = icmp eq ptr %794, null
  br i1 %795, label %798, label %796

796:                                              ; preds = %793
  %797 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %797, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

798:                                              ; preds = %793
  %799 = load i64, ptr %737, align 8
  %800 = and i64 %799, 131072
  %801 = icmp eq i64 %800, 0
  %802 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %801, label %804, label %803

803:                                              ; preds = %798
  tail call void (i32, ptr, ...) @inform(i32 noundef %802, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

804:                                              ; preds = %798
  tail call void (i32, ptr, ...) @inform(i32 noundef %802, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

805:                                              ; preds = %780, %776
  %806 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %807 = load ptr, ptr %806, align 8, !tbaa !16
  %808 = icmp eq ptr %807, null
  br i1 %808, label %813, label %809

809:                                              ; preds = %805
  %810 = load i64, ptr %807, align 8
  %811 = and i64 %810, 65535
  %812 = icmp eq i64 %811, 40
  br i1 %812, label %821, label %894

813:                                              ; preds = %805
  %814 = lshr i32 %420, 27
  %815 = and i32 %814, 1
  %816 = load i64, ptr %1, align 8
  %817 = trunc i64 %816 to i32
  %818 = lshr i32 %817, 27
  %819 = and i32 %818, 1
  %820 = icmp eq i32 %815, %819
  br i1 %820, label %946, label %829

821:                                              ; preds = %809
  %822 = lshr i32 %420, 27
  %823 = and i32 %822, 1
  %824 = load i64, ptr %1, align 8
  %825 = trunc i64 %824 to i32
  %826 = lshr i32 %825, 27
  %827 = and i32 %826, 1
  %828 = icmp eq i32 %823, %827
  br i1 %828, label %946, label %829

829:                                              ; preds = %821, %813
  %830 = phi i32 [ %823, %821 ], [ %815, %813 ]
  %831 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %832 = load i64, ptr %831, align 8
  %833 = and i64 %832, 33554432
  %834 = icmp eq i64 %833, 0
  br i1 %834, label %870, label %835

835:                                              ; preds = %829
  %836 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  %837 = load ptr, ptr %836, align 8, !tbaa !16
  %838 = icmp eq ptr %837, null
  br i1 %838, label %865, label %839

839:                                              ; preds = %835
  %840 = load i64, ptr %837, align 8
  %841 = and i64 %840, 65535
  %842 = icmp eq i64 %841, 40
  br i1 %842, label %865, label %843

843:                                              ; preds = %839
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.236, ptr noundef nonnull %0) #24
  %844 = load i64, ptr %1, align 8
  %845 = and i64 %844, 65535
  %846 = icmp eq i64 %845, 29
  br i1 %846, label %847, label %852

847:                                              ; preds = %843
  %848 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %849 = load i32, ptr %848, align 8
  %850 = and i32 %849, 6144
  %851 = icmp eq i32 %850, 0
  br i1 %851, label %852, label %1146

852:                                              ; preds = %847, %843
  %853 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %854 = load ptr, ptr %853, align 8, !tbaa !16
  %855 = icmp eq ptr %854, null
  br i1 %855, label %858, label %856

856:                                              ; preds = %852
  %857 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %857, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

858:                                              ; preds = %852
  %859 = load i64, ptr %737, align 8
  %860 = and i64 %859, 131072
  %861 = icmp eq i64 %860, 0
  %862 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %861, label %864, label %863

863:                                              ; preds = %858
  tail call void (i32, ptr, ...) @inform(i32 noundef %862, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

864:                                              ; preds = %858
  tail call void (i32, ptr, ...) @inform(i32 noundef %862, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

865:                                              ; preds = %839, %835
  %866 = load i32, ptr @warn_traditional, align 4, !tbaa !20
  %867 = icmp eq i32 %866, 0
  br i1 %867, label %946, label %868

868:                                              ; preds = %865
  %869 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 202, ptr noundef nonnull @.str.231, ptr noundef nonnull %0) #24
  br label %946

870:                                              ; preds = %829
  %871 = icmp eq i32 %830, 0
  %872 = select i1 %871, ptr @.str.230, ptr @.str.231
  tail call void (ptr, ...) @error(ptr noundef nonnull %872, ptr noundef nonnull %0) #24
  %873 = load i64, ptr %1, align 8
  %874 = and i64 %873, 65535
  %875 = icmp eq i64 %874, 29
  br i1 %875, label %876, label %881

876:                                              ; preds = %870
  %877 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %878 = load i32, ptr %877, align 8
  %879 = and i32 %878, 6144
  %880 = icmp eq i32 %879, 0
  br i1 %880, label %881, label %1146

881:                                              ; preds = %876, %870
  %882 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %883 = load ptr, ptr %882, align 8, !tbaa !16
  %884 = icmp eq ptr %883, null
  br i1 %884, label %887, label %885

885:                                              ; preds = %881
  %886 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %886, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

887:                                              ; preds = %881
  %888 = load i64, ptr %737, align 8
  %889 = and i64 %888, 131072
  %890 = icmp eq i64 %889, 0
  %891 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %890, label %893, label %892

892:                                              ; preds = %887
  tail call void (i32, ptr, ...) @inform(i32 noundef %891, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

893:                                              ; preds = %887
  tail call void (i32, ptr, ...) @inform(i32 noundef %891, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

894:                                              ; preds = %809
  %895 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %896 = load i64, ptr %895, align 8
  %897 = and i64 %896, 33554432
  %898 = icmp eq i64 %897, 0
  br i1 %898, label %899, label %1146

899:                                              ; preds = %894
  %900 = and i64 %738, 33554432
  %901 = icmp eq i64 %900, 0
  br i1 %901, label %924, label %902

902:                                              ; preds = %899
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.237, ptr noundef nonnull %0) #24
  %903 = load i64, ptr %1, align 8
  %904 = and i64 %903, 65535
  %905 = icmp eq i64 %904, 29
  br i1 %905, label %906, label %911

906:                                              ; preds = %902
  %907 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %908 = load i32, ptr %907, align 8
  %909 = and i32 %908, 6144
  %910 = icmp eq i32 %909, 0
  br i1 %910, label %911, label %1146

911:                                              ; preds = %906, %902
  %912 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %913 = load ptr, ptr %912, align 8, !tbaa !16
  %914 = icmp eq ptr %913, null
  br i1 %914, label %917, label %915

915:                                              ; preds = %911
  %916 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %916, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

917:                                              ; preds = %911
  %918 = load i64, ptr %737, align 8
  %919 = and i64 %918, 131072
  %920 = icmp eq i64 %919, 0
  %921 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %920, label %923, label %922

922:                                              ; preds = %917
  tail call void (i32, ptr, ...) @inform(i32 noundef %921, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

923:                                              ; preds = %917
  tail call void (i32, ptr, ...) @inform(i32 noundef %921, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

924:                                              ; preds = %899
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.238, ptr noundef nonnull %0) #24
  %925 = load i64, ptr %1, align 8
  %926 = and i64 %925, 65535
  %927 = icmp eq i64 %926, 29
  br i1 %927, label %928, label %933

928:                                              ; preds = %924
  %929 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %930 = load i32, ptr %929, align 8
  %931 = and i32 %930, 6144
  %932 = icmp eq i32 %931, 0
  br i1 %932, label %933, label %1146

933:                                              ; preds = %928, %924
  %934 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %935 = load ptr, ptr %934, align 8, !tbaa !16
  %936 = icmp eq ptr %935, null
  br i1 %936, label %939, label %937

937:                                              ; preds = %933
  %938 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %938, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

939:                                              ; preds = %933
  %940 = load i64, ptr %737, align 8
  %941 = and i64 %940, 131072
  %942 = icmp eq i64 %941, 0
  %943 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %942, label %945, label %944

944:                                              ; preds = %939
  tail call void (i32, ptr, ...) @inform(i32 noundef %943, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

945:                                              ; preds = %939
  tail call void (i32, ptr, ...) @inform(i32 noundef %943, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

946:                                              ; preds = %868, %865, %821, %813
  %947 = phi i8 [ %869, %868 ], [ 0, %865 ], [ 0, %813 ], [ 0, %821 ]
  %948 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %949 = icmp eq i32 %948, 0
  br i1 %949, label %971, label %950

950:                                              ; preds = %946
  %951 = load ptr, ptr %806, align 8, !tbaa !16
  %952 = icmp eq ptr %951, null
  br i1 %952, label %957, label %953

953:                                              ; preds = %950
  %954 = load i64, ptr %951, align 8
  %955 = and i64 %954, 65535
  %956 = icmp eq i64 %955, 40
  br i1 %956, label %957, label %971

957:                                              ; preds = %953, %950
  %958 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %959 = load i64, ptr %958, align 8
  %960 = and i64 %959, 33554432
  %961 = icmp eq i64 %960, 0
  br i1 %961, label %962, label %971

962:                                              ; preds = %957
  %963 = load i64, ptr %737, align 8
  %964 = and i64 %963, 33554432
  %965 = icmp eq i64 %964, 0
  br i1 %965, label %966, label %971

966:                                              ; preds = %962
  %967 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %968 = load i32, ptr %967, align 8, !tbaa !16
  %969 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %968, i32 noundef 49, ptr noundef nonnull @.str.239, ptr noundef nonnull %0) #24
  %970 = or i8 %969, %947
  br label %971

971:                                              ; preds = %966, %962, %957, %953, %946, %730, %720, %715, %710, %415
  %972 = phi i8 [ %711, %715 ], [ %711, %710 ], [ %947, %957 ], [ %947, %962 ], [ %970, %966 ], [ %947, %953 ], [ %947, %946 ], [ %711, %730 ], [ %711, %720 ], [ 0, %415 ]
  %973 = load i64, ptr %0, align 8
  %974 = and i64 %973, 65535
  %975 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %974, i64 13
  %976 = load i8, ptr %975, align 1, !tbaa !16
  %977 = icmp eq i8 %976, 0
  br i1 %977, label %996, label %978

978:                                              ; preds = %971
  %979 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %980 = load i32, ptr %979, align 8
  %981 = and i32 %980, 4096
  %982 = icmp eq i32 %981, 0
  br i1 %982, label %996, label %983

983:                                              ; preds = %978
  %984 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 4
  %985 = load i32, ptr %984, align 8
  %986 = and i32 %985, 4096
  %987 = icmp eq i32 %986, 0
  br i1 %987, label %996, label %988

988:                                              ; preds = %983
  %989 = xor i32 %985, %980
  %990 = and i32 %989, 3072
  %991 = icmp eq i32 %990, 0
  br i1 %991, label %996, label %992

992:                                              ; preds = %988
  %993 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.240, ptr noundef nonnull %0) #24
  %994 = or i8 %993, %972
  %995 = load i64, ptr %0, align 8
  br label %996

996:                                              ; preds = %992, %988, %983, %978, %971
  %997 = phi i64 [ %995, %992 ], [ %973, %988 ], [ %973, %983 ], [ %973, %978 ], [ %973, %971 ]
  %998 = phi i8 [ %994, %992 ], [ %972, %988 ], [ %972, %983 ], [ %972, %978 ], [ %972, %971 ]
  %999 = trunc i64 %997 to i16
  switch i16 %999, label %1054 [
    i16 29, label %1000
    i16 34, label %1020
  ]

1000:                                             ; preds = %996
  %1001 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 5
  %1002 = load i32, ptr %1001, align 8
  %1003 = and i32 %1002, 2097152
  %1004 = icmp eq i32 %1003, 0
  br i1 %1004, label %1010, label %1005

1005:                                             ; preds = %1000
  %1006 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  %1007 = load ptr, ptr %1006, align 8, !tbaa !16
  %1008 = tail call ptr @lookup_attribute(ptr noundef nonnull @.str.55, ptr noundef %1007) #24
  %1009 = icmp eq ptr %1008, null
  br i1 %1009, label %1010, label %1050

1010:                                             ; preds = %1005, %1000
  %1011 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %1012 = load i32, ptr %1011, align 8
  %1013 = and i32 %1012, 2097152
  %1014 = icmp eq i32 %1013, 0
  br i1 %1014, label %1054, label %1015

1015:                                             ; preds = %1010
  %1016 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 6
  %1017 = load ptr, ptr %1016, align 8, !tbaa !16
  %1018 = tail call ptr @lookup_attribute(ptr noundef nonnull @.str.55, ptr noundef %1017) #24
  %1019 = icmp eq ptr %1018, null
  br i1 %1019, label %1054, label %1050

1020:                                             ; preds = %996
  %1021 = load i64, ptr %1, align 8
  %1022 = and i64 %1021, 4194304
  %1023 = icmp ne i64 %1022, 0
  %1024 = and i64 %997, 4194304
  %1025 = icmp eq i64 %1024, 0
  %1026 = and i1 %1025, %1023
  br i1 %1026, label %1054, label %1027

1027:                                             ; preds = %1020
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.243, ptr noundef nonnull %0) #24
  %1028 = load i64, ptr %1, align 8
  %1029 = and i64 %1028, 65535
  %1030 = icmp eq i64 %1029, 29
  br i1 %1030, label %1031, label %1036

1031:                                             ; preds = %1027
  %1032 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %1033 = load i32, ptr %1032, align 8
  %1034 = and i32 %1033, 6144
  %1035 = icmp eq i32 %1034, 0
  br i1 %1035, label %1036, label %1146

1036:                                             ; preds = %1031, %1027
  %1037 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %1038 = load ptr, ptr %1037, align 8, !tbaa !16
  %1039 = icmp eq ptr %1038, null
  br i1 %1039, label %1042, label %1040

1040:                                             ; preds = %1036
  %1041 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %1041, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1146

1042:                                             ; preds = %1036
  %1043 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %1044 = load i64, ptr %1043, align 8
  %1045 = and i64 %1044, 131072
  %1046 = icmp eq i64 %1045, 0
  %1047 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %1046, label %1049, label %1048

1048:                                             ; preds = %1042
  tail call void (i32, ptr, ...) @inform(i32 noundef %1047, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1146

1049:                                             ; preds = %1042
  tail call void (i32, ptr, ...) @inform(i32 noundef %1047, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1146

1050:                                             ; preds = %1015, %1005
  %1051 = phi ptr [ @.str.241, %1005 ], [ @.str.242, %1015 ]
  %1052 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull %1051, ptr noundef nonnull %0) #24
  %1053 = or i8 %1052, %998
  br label %1054

1054:                                             ; preds = %1050, %1020, %1015, %1010, %996
  %1055 = phi i8 [ %998, %1015 ], [ %998, %1010 ], [ %998, %996 ], [ %998, %1020 ], [ %1053, %1050 ]
  %1056 = icmp eq i8 %1055, 0
  %1057 = icmp eq i8 %418, 0
  %1058 = select i1 %1056, i1 %1057, i1 false
  %1059 = load i32, ptr @warn_redundant_decls, align 4
  %1060 = icmp ne i32 %1059, 0
  %1061 = select i1 %1058, i1 %1060, i1 false
  br i1 %1061, label %1062, label %1118

1062:                                             ; preds = %1054
  %1063 = load i64, ptr %0, align 8
  %1064 = and i64 %1063, 65535
  %1065 = icmp eq i64 %1064, 29
  br i1 %1065, label %1066, label %1089

1066:                                             ; preds = %1062
  %1067 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %1068 = load ptr, ptr %1067, align 8, !tbaa !16
  %1069 = icmp eq ptr %1068, null
  br i1 %1069, label %1074, label %1070

1070:                                             ; preds = %1066
  %1071 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %1072 = load ptr, ptr %1071, align 8, !tbaa !16
  %1073 = icmp eq ptr %1072, null
  br i1 %1073, label %1118, label %1074

1074:                                             ; preds = %1070, %1066
  %1075 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 5
  %1076 = load i32, ptr %1075, align 8
  %1077 = and i32 %1076, 6144
  %1078 = icmp eq i32 %1077, 0
  br i1 %1078, label %1079, label %1089

1079:                                             ; preds = %1074
  %1080 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %1081 = load i32, ptr %1080, align 8
  %1082 = and i32 %1081, 6144
  %1083 = icmp eq i32 %1082, 0
  br i1 %1083, label %1089, label %1084

1084:                                             ; preds = %1079
  %1085 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %1086 = load i64, ptr %1085, align 8
  %1087 = and i64 %1086, 262144
  %1088 = icmp eq i64 %1087, 0
  br i1 %1088, label %1118, label %1089

1089:                                             ; preds = %1084, %1079, %1074, %1062
  %1090 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %1091 = load i64, ptr %1090, align 8
  %1092 = and i64 %1091, 33554432
  %1093 = icmp eq i64 %1092, 0
  br i1 %1093, label %1099, label %1094

1094:                                             ; preds = %1089
  %1095 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %1096 = load i64, ptr %1095, align 8
  %1097 = and i64 %1096, 33554432
  %1098 = icmp eq i64 %1097, 0
  br i1 %1098, label %1118, label %1099

1099:                                             ; preds = %1094, %1089
  %1100 = trunc i64 %1063 to i16
  switch i16 %1100, label %1116 [
    i16 34, label %1101
    i16 32, label %1108
  ]

1101:                                             ; preds = %1099
  %1102 = load i64, ptr %1, align 8
  %1103 = and i64 %1102, 4194304
  %1104 = icmp ne i64 %1103, 0
  %1105 = and i64 %1063, 4194304
  %1106 = icmp eq i64 %1105, 0
  %1107 = and i1 %1106, %1104
  br i1 %1107, label %1118, label %1116

1108:                                             ; preds = %1099
  %1109 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %1110 = load ptr, ptr %1109, align 8, !tbaa !16
  %1111 = icmp eq ptr %1110, null
  br i1 %1111, label %1116, label %1112

1112:                                             ; preds = %1108
  %1113 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %1114 = load ptr, ptr %1113, align 8, !tbaa !16
  %1115 = icmp eq ptr %1114, null
  br i1 %1115, label %1118, label %1116

1116:                                             ; preds = %1112, %1108, %1101, %1099
  %1117 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 169, ptr noundef nonnull @.str.244, ptr noundef nonnull %0) #24
  br label %1118

1118:                                             ; preds = %1116, %1112, %1101, %1094, %1084, %1070, %1054
  %1119 = phi i8 [ %1117, %1116 ], [ 0, %1112 ], [ 0, %1094 ], [ 0, %1084 ], [ 0, %1070 ], [ %1055, %1054 ], [ 0, %1101 ]
  %1120 = icmp ne i8 %1119, 0
  %1121 = icmp ne i8 %418, 0
  %1122 = select i1 %1120, i1 true, i1 %1121
  br i1 %1122, label %1123, label %1149

1123:                                             ; preds = %1118
  %1124 = load i64, ptr %1, align 8
  %1125 = and i64 %1124, 65535
  %1126 = icmp eq i64 %1125, 29
  br i1 %1126, label %1127, label %1132

1127:                                             ; preds = %1123
  %1128 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %1129 = load i32, ptr %1128, align 8
  %1130 = and i32 %1129, 6144
  %1131 = icmp eq i32 %1130, 0
  br i1 %1131, label %1132, label %1149

1132:                                             ; preds = %1127, %1123
  %1133 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %1134 = load ptr, ptr %1133, align 8, !tbaa !16
  %1135 = icmp eq ptr %1134, null
  br i1 %1135, label %1138, label %1136

1136:                                             ; preds = %1132
  %1137 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %1137, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %1149

1138:                                             ; preds = %1132
  %1139 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %1140 = load i64, ptr %1139, align 8
  %1141 = and i64 %1140, 131072
  %1142 = icmp eq i64 %1141, 0
  %1143 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %1142, label %1145, label %1144

1144:                                             ; preds = %1138
  tail call void (i32, ptr, ...) @inform(i32 noundef %1143, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %1149

1145:                                             ; preds = %1138
  tail call void (i32, ptr, ...) @inform(i32 noundef %1143, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %1149

1146:                                             ; preds = %487, %216, %210, %2, %13, %67, %69, %653, %645, %894, %45, %54, %62, %63, %77, %86, %94, %95, %396, %405, %413, %414, %446, %455, %463, %464, %539, %546, %554, %555, %620, %627, %635, %636, %662, %669, %677, %678, %688, %695, %703, %704, %758, %767, %774, %775, %788, %796, %803, %804, %847, %856, %863, %864, %876, %885, %892, %893, %906, %915, %922, %923, %928, %937, %944, %945, %1031, %1040, %1048, %1049
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8)
  %1147 = load i64, ptr %1, align 8
  %1148 = or i64 %1147, 8388608
  store i64 %1148, ptr %1, align 8
  br label %1789

1149:                                             ; preds = %1118, %438, %434, %428, %422, %1127, %1136, %1144, %1145
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6)
  %1150 = load i64, ptr %0, align 8
  %1151 = and i64 %1150, 65535
  %1152 = icmp eq i64 %1151, 29
  br i1 %1152, label %1153, label %1161

1153:                                             ; preds = %1149
  %1154 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %1155 = load ptr, ptr %1154, align 8, !tbaa !16
  %1156 = icmp ne ptr %1155, null
  %1157 = load ptr, ptr %16, align 8, !tbaa !16
  %1158 = getelementptr inbounds %struct.tree_type, ptr %1157, i64 0, i32 1
  %1159 = load ptr, ptr %1158, align 8, !tbaa !16
  %1160 = icmp ne ptr %1159, null
  br label %1161

1161:                                             ; preds = %1153, %1149
  %1162 = phi i1 [ %1156, %1153 ], [ false, %1149 ]
  %1163 = phi i1 [ %1160, %1153 ], [ false, %1149 ]
  %1164 = load i64, ptr %1, align 8
  %1165 = and i64 %1164, 65535
  %1166 = icmp eq i64 %1165, 29
  br i1 %1166, label %1167, label %1172

1167:                                             ; preds = %1161
  %1168 = load ptr, ptr %14, align 8, !tbaa !16
  %1169 = getelementptr inbounds %struct.tree_type, ptr %1168, i64 0, i32 1
  %1170 = load ptr, ptr %1169, align 8, !tbaa !16
  %1171 = icmp ne ptr %1170, null
  br label %1172

1172:                                             ; preds = %1167, %1161
  %1173 = phi i1 [ false, %1161 ], [ %1171, %1167 ]
  %1174 = icmp eq i64 %1151, 34
  br i1 %1174, label %1175, label %1216

1175:                                             ; preds = %1172
  %1176 = and i64 %1164, 4194304
  %1177 = icmp ne i64 %1176, 0
  %1178 = and i64 %1150, 4194304
  %1179 = icmp eq i64 %1178, 0
  %1180 = and i1 %1179, %1177
  br i1 %1180, label %1181, label %1216

1181:                                             ; preds = %1175
  %1182 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %1183 = getelementptr inbounds %struct.c_scope, ptr %1182, i64 0, i32 2
  %1184 = load ptr, ptr %1183, align 8, !tbaa !5
  %1185 = icmp eq ptr %1184, null
  br i1 %1185, label %1201, label %1186

1186:                                             ; preds = %1181
  %1187 = getelementptr inbounds %struct.c_binding, ptr %1184, i64 0, i32 1
  %1188 = load ptr, ptr %1187, align 8, !tbaa !32
  %1189 = icmp eq ptr %1188, %1
  br i1 %1189, label %1206, label %1190

1190:                                             ; preds = %1186, %1195
  %1191 = phi ptr [ %1193, %1195 ], [ %1184, %1186 ]
  %1192 = getelementptr inbounds %struct.c_binding, ptr %1191, i64 0, i32 3
  %1193 = load ptr, ptr %1192, align 8, !tbaa !5
  %1194 = icmp eq ptr %1193, null
  br i1 %1194, label %1199, label %1195, !llvm.loop !96

1195:                                             ; preds = %1190
  %1196 = getelementptr inbounds %struct.c_binding, ptr %1193, i64 0, i32 1
  %1197 = load ptr, ptr %1196, align 8, !tbaa !32
  %1198 = icmp eq ptr %1197, %1
  br i1 %1198, label %1204, label %1190, !llvm.loop !96

1199:                                             ; preds = %1190
  %1200 = getelementptr inbounds %struct.c_binding, ptr %1191, i64 0, i32 3
  br label %1201

1201:                                             ; preds = %1199, %1181
  %1202 = phi ptr [ %1183, %1181 ], [ %1200, %1199 ]
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 2142, ptr noundef nonnull @.str.8) #24
  %1203 = load ptr, ptr %1202, align 8, !tbaa !5
  br label %1206

1204:                                             ; preds = %1195
  %1205 = getelementptr inbounds %struct.c_binding, ptr %1191, i64 0, i32 3
  br label %1206

1206:                                             ; preds = %1204, %1186, %1201
  %1207 = phi ptr [ %1203, %1201 ], [ %1184, %1186 ], [ %1193, %1204 ]
  %1208 = phi ptr [ %1202, %1201 ], [ %1183, %1186 ], [ %1205, %1204 ]
  %1209 = getelementptr inbounds %struct.c_binding, ptr %1207, i64 0, i32 3
  %1210 = load ptr, ptr %1209, align 8, !tbaa !60
  store ptr %1210, ptr %1208, align 8, !tbaa !5
  %1211 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %1212 = getelementptr inbounds %struct.c_scope, ptr %1211, i64 0, i32 2
  %1213 = load ptr, ptr %1212, align 8, !tbaa !48
  store ptr %1213, ptr %1209, align 8, !tbaa !60
  store ptr %1207, ptr %1212, align 8, !tbaa !48
  %1214 = load i64, ptr %1, align 8
  %1215 = and i64 %1214, -4194305
  store i64 %1215, ptr %1, align 8
  br label %1216

1216:                                             ; preds = %1206, %1175, %1172
  %1217 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 11), align 8, !tbaa !97
  %1218 = call ptr %1217(ptr noundef nonnull %1, ptr noundef nonnull %0) #24
  %1219 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 6
  store ptr %1218, ptr %1219, align 8, !tbaa !16
  %1220 = call ptr @composite_type(ptr noundef %416, ptr noundef %417) #24
  store ptr %1220, ptr %14, align 8, !tbaa !16
  store ptr %1220, ptr %16, align 8, !tbaa !16
  %1221 = call i32 @comptypes(ptr noundef %417, ptr noundef %1220) #24
  %1222 = icmp eq i32 %1221, 0
  br i1 %1222, label %1223, label %1232

1223:                                             ; preds = %1216
  %1224 = load ptr, ptr %16, align 8, !tbaa !16
  %1225 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %1226 = icmp eq ptr %1224, %1225
  br i1 %1226, label %1228, label %1227

1227:                                             ; preds = %1223
  call void @layout_type(ptr noundef %1224) #24
  br label %1228

1228:                                             ; preds = %1227, %1223
  %1229 = load i64, ptr %0, align 8
  %1230 = trunc i64 %1229 to i16
  switch i16 %1230, label %1231 [
    i16 29, label %1256
    i16 35, label %1256
    i16 33, label %1256
  ]

1231:                                             ; preds = %1228
  call void @layout_decl(ptr noundef nonnull %0, i32 noundef 0) #24
  br label %1256

1232:                                             ; preds = %1216
  %1233 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 1
  %1234 = load ptr, ptr %1233, align 8, !tbaa !16
  %1235 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 1
  store ptr %1234, ptr %1235, align 8, !tbaa !16
  %1236 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 4
  %1237 = load ptr, ptr %1236, align 8, !tbaa !16
  %1238 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 4
  store ptr %1237, ptr %1238, align 8, !tbaa !16
  %1239 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %1240 = load i64, ptr %1239, align 8
  %1241 = and i64 %1240, 255
  %1242 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %1243 = load i64, ptr %1242, align 8
  %1244 = and i64 %1243, -256
  %1245 = or i64 %1244, %1241
  store i64 %1245, ptr %1242, align 8
  %1246 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 3
  %1247 = load i32, ptr %1246, align 8, !tbaa !16
  %1248 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 3
  %1249 = load i32, ptr %1248, align 8, !tbaa !16
  %1250 = icmp ugt i32 %1247, %1249
  br i1 %1250, label %1251, label %1256

1251:                                             ; preds = %1232
  store i32 %1247, ptr %1248, align 8, !tbaa !16
  %1252 = load i64, ptr %1, align 8
  %1253 = load i64, ptr %0, align 8
  %1254 = and i64 %1252, 4398046511104
  %1255 = or i64 %1254, %1253
  store i64 %1255, ptr %0, align 8
  br label %1256

1256:                                             ; preds = %1251, %1232, %1231, %1228, %1228, %1228
  %1257 = load i64, ptr %1, align 8
  %1258 = and i64 %1257, 65535
  %1259 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %1258, i64 11
  %1260 = load i8, ptr %1259, align 1, !tbaa !16
  %1261 = icmp eq i8 %1260, 0
  br i1 %1261, label %1267, label %1262

1262:                                             ; preds = %1256
  %1263 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %1, i64 0, i32 1
  %1264 = load ptr, ptr %1263, align 8, !tbaa !16
  %1265 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %0, i64 0, i32 1
  store ptr %1264, ptr %1265, align 8, !tbaa !16
  %1266 = load i64, ptr %1, align 8
  br label %1267

1267:                                             ; preds = %1262, %1256
  %1268 = phi i64 [ %1266, %1262 ], [ %1257, %1256 ]
  %1269 = load i64, ptr %0, align 8
  %1270 = and i64 %1269, 1048576
  %1271 = icmp eq i64 %1270, 0
  br i1 %1271, label %1275, label %1272

1272:                                             ; preds = %1267
  %1273 = or i64 %1268, 1048576
  store i64 %1273, ptr %1, align 8
  %1274 = load i64, ptr %0, align 8
  br label %1275

1275:                                             ; preds = %1272, %1267
  %1276 = phi i64 [ %1273, %1272 ], [ %1268, %1267 ]
  %1277 = phi i64 [ %1274, %1272 ], [ %1269, %1267 ]
  %1278 = and i64 %1277, 524288
  %1279 = icmp eq i64 %1278, 0
  br i1 %1279, label %1283, label %1280

1280:                                             ; preds = %1275
  %1281 = or i64 %1276, 524288
  store i64 %1281, ptr %1, align 8
  %1282 = load i64, ptr %0, align 8
  br label %1283

1283:                                             ; preds = %1280, %1275
  %1284 = phi i64 [ %1281, %1280 ], [ %1276, %1275 ]
  %1285 = phi i64 [ %1282, %1280 ], [ %1277, %1275 ]
  %1286 = and i64 %1285, 1073741824
  %1287 = icmp eq i64 %1286, 0
  br i1 %1287, label %1290, label %1288

1288:                                             ; preds = %1283
  %1289 = or i64 %1284, 1073741824
  store i64 %1289, ptr %1, align 8
  br label %1290

1290:                                             ; preds = %1288, %1283
  %1291 = phi i64 [ %1289, %1288 ], [ %1284, %1283 ]
  %1292 = and i64 %1291, 65535
  %1293 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %1292, i64 13
  %1294 = load i8, ptr %1293, align 1, !tbaa !16
  %1295 = icmp eq i8 %1294, 0
  br i1 %1295, label %1310, label %1296

1296:                                             ; preds = %1290
  %1297 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 1
  %1298 = load i32, ptr %1297, align 8, !tbaa !16
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %3, i32 noundef %1298) #24
  %1299 = getelementptr inbounds %struct.expanded_location, ptr %3, i64 0, i32 3
  %1300 = load i8, ptr %1299, align 8, !tbaa !57
  %1301 = icmp eq i8 %1300, 0
  br i1 %1301, label %1310, label %1302

1302:                                             ; preds = %1296
  %1303 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %1304 = load i32, ptr %1303, align 8, !tbaa !16
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %4, i32 noundef %1304) #24
  %1305 = getelementptr inbounds %struct.expanded_location, ptr %4, i64 0, i32 3
  %1306 = load i8, ptr %1305, align 8, !tbaa !57
  %1307 = icmp eq i8 %1306, 0
  br i1 %1307, label %1308, label %1310

1308:                                             ; preds = %1302
  %1309 = load i32, ptr %1297, align 8, !tbaa !16
  store i32 %1309, ptr %1303, align 8, !tbaa !16
  br label %1350

1310:                                             ; preds = %1302, %1296, %1290
  %1311 = load i64, ptr %1, align 8
  %1312 = and i64 %1311, 65535
  %1313 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %1312, i64 13
  %1314 = load i8, ptr %1313, align 1, !tbaa !16
  %1315 = icmp eq i8 %1314, 0
  br i1 %1315, label %1330, label %1316

1316:                                             ; preds = %1310
  %1317 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %1318 = load i32, ptr %1317, align 8, !tbaa !16
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %5, i32 noundef %1318) #24
  %1319 = getelementptr inbounds %struct.expanded_location, ptr %5, i64 0, i32 3
  %1320 = load i8, ptr %1319, align 8, !tbaa !57
  %1321 = icmp eq i8 %1320, 0
  br i1 %1321, label %1330, label %1322

1322:                                             ; preds = %1316
  %1323 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 1
  %1324 = load i32, ptr %1323, align 8, !tbaa !16
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %6, i32 noundef %1324) #24
  %1325 = getelementptr inbounds %struct.expanded_location, ptr %6, i64 0, i32 3
  %1326 = load i8, ptr %1325, align 8, !tbaa !57
  %1327 = icmp eq i8 %1326, 0
  br i1 %1327, label %1328, label %1330

1328:                                             ; preds = %1322
  %1329 = load i32, ptr %1317, align 8, !tbaa !16
  store i32 %1329, ptr %1323, align 8, !tbaa !16
  br label %1350

1330:                                             ; preds = %1322, %1316, %1310
  %1331 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %1332 = load ptr, ptr %1331, align 8, !tbaa !16
  %1333 = icmp eq ptr %1332, null
  br i1 %1333, label %1334, label %1338

1334:                                             ; preds = %1330
  %1335 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %1336 = load ptr, ptr %1335, align 8, !tbaa !16
  %1337 = icmp eq ptr %1336, null
  br i1 %1337, label %1338, label %1346

1338:                                             ; preds = %1334, %1330
  %1339 = xor i1 %1173, true
  %1340 = select i1 %1339, i1 true, i1 %1163
  br i1 %1340, label %1350, label %1341

1341:                                             ; preds = %1338
  %1342 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %1343 = load i64, ptr %1342, align 8
  %1344 = and i64 %1343, 2097152
  %1345 = icmp eq i64 %1344, 0
  br i1 %1345, label %1346, label %1350

1346:                                             ; preds = %1341, %1334
  %1347 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 1
  %1348 = load i32, ptr %1347, align 8, !tbaa !16
  %1349 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  store i32 %1348, ptr %1349, align 8, !tbaa !16
  br label %1350

1350:                                             ; preds = %1346, %1341, %1338, %1328, %1308
  %1351 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %1352 = load ptr, ptr %1351, align 8, !tbaa !16
  %1353 = icmp eq ptr %1352, null
  br i1 %1353, label %1354, label %1357

1354:                                             ; preds = %1350
  %1355 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %1356 = load ptr, ptr %1355, align 8, !tbaa !16
  store ptr %1356, ptr %1351, align 8, !tbaa !16
  br label %1357

1357:                                             ; preds = %1354, %1350
  %1358 = load i64, ptr %1, align 8
  %1359 = and i64 %1358, 65535
  %1360 = icmp eq i64 %1359, 32
  br i1 %1360, label %1361, label %1379

1361:                                             ; preds = %1357
  %1362 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %1363 = load i64, ptr %1362, align 8
  %1364 = and i64 %1363, 262144
  %1365 = icmp eq i64 %1364, 0
  br i1 %1365, label %1379, label %1366

1366:                                             ; preds = %1361
  %1367 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 4
  %1368 = load i32, ptr %1367, align 8
  %1369 = and i32 %1368, 57344
  %1370 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %1371 = load i32, ptr %1370, align 8
  %1372 = and i32 %1371, -57345
  %1373 = or i32 %1372, %1369
  store i32 %1373, ptr %1370, align 8
  %1374 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %1375 = load i64, ptr %1374, align 8
  %1376 = or i64 %1375, 262144
  store i64 %1376, ptr %1374, align 8
  %1377 = load i64, ptr %1, align 8
  %1378 = and i64 %1377, 65535
  br label %1379

1379:                                             ; preds = %1366, %1361, %1357
  %1380 = phi i64 [ %1378, %1366 ], [ 32, %1361 ], [ %1359, %1357 ]
  %1381 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %1380, i64 13
  %1382 = load i8, ptr %1381, align 1, !tbaa !16
  %1383 = icmp eq i8 %1382, 0
  br i1 %1383, label %1482, label %1384

1384:                                             ; preds = %1379
  %1385 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 2
  %1386 = load ptr, ptr %1385, align 8, !tbaa !16
  %1387 = icmp eq ptr %1386, null
  br i1 %1387, label %1388, label %1396

1388:                                             ; preds = %1384
  %1389 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 2
  %1390 = load ptr, ptr %1389, align 8, !tbaa !16
  store ptr %1390, ptr %1385, align 8, !tbaa !16
  %1391 = load i64, ptr %1, align 8
  %1392 = and i64 %1391, 65535
  %1393 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %1392, i64 13
  %1394 = load i8, ptr %1393, align 1, !tbaa !16
  %1395 = icmp eq i8 %1394, 0
  br i1 %1395, label %1403, label %1396

1396:                                             ; preds = %1388, %1384
  %1397 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 1
  %1398 = load ptr, ptr %1397, align 8, !tbaa !16
  %1399 = icmp eq ptr %1398, null
  br i1 %1399, label %1403, label %1400

1400:                                             ; preds = %1396
  %1401 = call ptr @decl_assembler_name(ptr noundef nonnull %1) #24
  %1402 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 1
  store ptr %1401, ptr %1402, align 8, !tbaa !16
  br label %1403

1403:                                             ; preds = %1400, %1396, %1388
  %1404 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 4
  %1405 = load i32, ptr %1404, align 8
  %1406 = and i32 %1405, 4096
  %1407 = icmp eq i32 %1406, 0
  br i1 %1407, label %1415, label %1408

1408:                                             ; preds = %1403
  %1409 = and i32 %1405, 3072
  %1410 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %1411 = load i32, ptr %1410, align 8
  %1412 = and i32 %1411, -7169
  %1413 = or i32 %1409, %1412
  %1414 = or i32 %1413, 4096
  store i32 %1414, ptr %1410, align 8
  br label %1415

1415:                                             ; preds = %1408, %1403
  %1416 = load i64, ptr %0, align 8
  %1417 = and i64 %1416, 65535
  %1418 = icmp eq i64 %1417, 29
  br i1 %1418, label %1419, label %1463

1419:                                             ; preds = %1415
  %1420 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %1421 = load i32, ptr %1420, align 8
  %1422 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 5
  %1423 = load i32, ptr %1422, align 8
  %1424 = and i32 %1421, 8192
  %1425 = or i32 %1424, %1423
  store i32 %1425, ptr %1422, align 8
  %1426 = load i32, ptr %1420, align 8
  %1427 = or i32 %1426, %1423
  %1428 = and i32 %1427, 16384
  %1429 = and i32 %1425, -16385
  %1430 = or i32 %1428, %1429
  store i32 %1430, ptr %1422, align 8
  %1431 = load i32, ptr %1420, align 8
  %1432 = or i32 %1431, %1423
  %1433 = and i32 %1432, 33554432
  %1434 = and i32 %1430, -33554433
  %1435 = or i32 %1434, %1433
  store i32 %1435, ptr %1422, align 8
  %1436 = load i32, ptr %1420, align 8
  %1437 = or i32 %1436, %1423
  %1438 = and i32 %1437, 16777216
  %1439 = and i32 %1435, -16777217
  %1440 = or i32 %1439, %1438
  store i32 %1440, ptr %1422, align 8
  %1441 = load i64, ptr %1, align 8
  %1442 = and i64 %1441, 524288
  %1443 = or i64 %1442, %1416
  store i64 %1443, ptr %0, align 8
  %1444 = load i32, ptr %1420, align 8
  %1445 = and i32 %1444, 524288
  %1446 = or i32 %1445, %1440
  store i32 %1446, ptr %1422, align 8
  %1447 = load i32, ptr %1420, align 8
  %1448 = or i32 %1447, %1423
  %1449 = and i32 %1448, 1048576
  %1450 = and i32 %1446, -1048577
  %1451 = or i32 %1449, %1450
  store i32 %1451, ptr %1422, align 8
  %1452 = load i64, ptr %1, align 8
  %1453 = and i64 %1452, 1048576
  %1454 = or i64 %1453, %1443
  store i64 %1454, ptr %0, align 8
  %1455 = load i32, ptr %1420, align 8
  %1456 = and i32 %1455, 134217728
  %1457 = or i32 %1456, %1451
  store i32 %1457, ptr %1422, align 8
  %1458 = load i32, ptr %1420, align 8
  %1459 = or i32 %1458, %1423
  %1460 = and i32 %1459, 131072
  %1461 = and i32 %1457, -131073
  %1462 = or i32 %1460, %1461
  store i32 %1462, ptr %1422, align 8
  br label %1463

1463:                                             ; preds = %1419, %1415
  call void @merge_weak(ptr noundef nonnull %0, ptr noundef nonnull %1) #24
  %1464 = load i64, ptr %0, align 8
  %1465 = and i64 %1464, 65535
  %1466 = icmp eq i64 %1465, 29
  br i1 %1466, label %1467, label %1482

1467:                                             ; preds = %1463
  %1468 = load i64, ptr %1, align 8
  %1469 = and i64 %1464, 134217728
  %1470 = and i64 %1469, %1468
  %1471 = and i64 %1464, -134217729
  %1472 = or i64 %1470, %1471
  store i64 %1472, ptr %0, align 8
  %1473 = load i64, ptr %1, align 8
  %1474 = and i64 %1473, -134217729
  %1475 = or i64 %1474, %1470
  store i64 %1475, ptr %1, align 8
  %1476 = icmp eq i64 %1470, 0
  br i1 %1476, label %1477, label %1482

1477:                                             ; preds = %1467
  %1478 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  %1479 = load ptr, ptr %1478, align 8, !tbaa !16
  %1480 = load i64, ptr %1479, align 8
  %1481 = and i64 %1480, -134217729
  store i64 %1481, ptr %1479, align 8
  br label %1482

1482:                                             ; preds = %1477, %1467, %1463, %1379
  %1483 = load i64, ptr %0, align 8
  %1484 = and i64 %1483, 65535
  %1485 = icmp ne i64 %1484, 29
  %1486 = load i32, ptr @flag_gnu89_inline, align 4
  %1487 = icmp ne i32 %1486, 0
  %1488 = select i1 %1485, i1 true, i1 %1487
  br i1 %1488, label %1520, label %1489

1489:                                             ; preds = %1482
  %1490 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 5
  %1491 = load i32, ptr %1490, align 8
  %1492 = and i32 %1491, 2097152
  %1493 = icmp eq i32 %1492, 0
  %1494 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %1495 = load i32, ptr %1494, align 8
  %1496 = and i32 %1495, 2097152
  %1497 = icmp eq i32 %1496, 0
  br i1 %1493, label %1498, label %1499

1498:                                             ; preds = %1489
  br i1 %1497, label %1520, label %1505

1499:                                             ; preds = %1489
  br i1 %1497, label %1505, label %1500

1500:                                             ; preds = %1499
  %1501 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %1502 = load i64, ptr %1501, align 8
  %1503 = and i64 %1502, 33554432
  %1504 = icmp eq i64 %1503, 0
  br i1 %1504, label %1505, label %1520

1505:                                             ; preds = %1500, %1499, %1498
  %1506 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %1507 = load i64, ptr %1506, align 8
  %1508 = and i64 %1507, 33554432
  %1509 = icmp eq i64 %1508, 0
  br i1 %1509, label %1520, label %1510

1510:                                             ; preds = %1505
  %1511 = load ptr, ptr %1219, align 8, !tbaa !16
  %1512 = call ptr @lookup_attribute(ptr noundef nonnull @.str.54, ptr noundef %1511) #24
  %1513 = icmp ne ptr %1512, null
  %1514 = load ptr, ptr @current_function_decl, align 8
  %1515 = icmp ne ptr %1514, null
  %1516 = select i1 %1513, i1 true, i1 %1515
  br i1 %1516, label %1520, label %1517

1517:                                             ; preds = %1510
  %1518 = load i64, ptr %1506, align 8
  %1519 = and i64 %1518, -33554433
  store i64 %1519, ptr %1506, align 8
  br label %1520

1520:                                             ; preds = %1517, %1510, %1505, %1500, %1498, %1482
  %1521 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %1522 = load i64, ptr %1521, align 8
  %1523 = and i64 %1522, 33554432
  %1524 = icmp eq i64 %1523, 0
  br i1 %1524, label %1552, label %1525

1525:                                             ; preds = %1520
  %1526 = load i64, ptr %1, align 8
  %1527 = and i64 %1526, 67108864
  %1528 = load i64, ptr %0, align 8
  %1529 = and i64 %1528, -67108865
  %1530 = or i64 %1529, %1527
  store i64 %1530, ptr %0, align 8
  %1531 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %1532 = load i64, ptr %1531, align 8
  %1533 = and i64 %1532, 33554432
  %1534 = and i64 %1522, -33554433
  %1535 = or i64 %1533, %1534
  store i64 %1535, ptr %1521, align 8
  %1536 = load i64, ptr %1, align 8
  %1537 = and i64 %1536, 134217728
  %1538 = and i64 %1530, -134217729
  %1539 = or i64 %1537, %1538
  store i64 %1539, ptr %0, align 8
  %1540 = icmp eq i64 %1533, 0
  br i1 %1540, label %1541, label %1563

1541:                                             ; preds = %1525
  %1542 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  %1543 = load ptr, ptr %1542, align 8, !tbaa !16
  %1544 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  store ptr %1543, ptr %1544, align 8, !tbaa !16
  %1545 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 4
  %1546 = load i32, ptr %1545, align 8
  %1547 = and i32 %1546, 8
  %1548 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %1549 = load i32, ptr %1548, align 8
  %1550 = and i32 %1549, -9
  %1551 = or i32 %1550, %1547
  store i32 %1551, ptr %1548, align 8
  br label %1563

1552:                                             ; preds = %1520
  %1553 = load i64, ptr %0, align 8
  %1554 = and i64 %1553, 67108864
  %1555 = load i64, ptr %1, align 8
  %1556 = and i64 %1555, -67108865
  %1557 = or i64 %1556, %1554
  store i64 %1557, ptr %1, align 8
  %1558 = load i64, ptr %0, align 8
  %1559 = and i64 %1558, 134217728
  %1560 = and i64 %1557, -134217729
  %1561 = or i64 %1560, %1559
  store i64 %1561, ptr %1, align 8
  %1562 = load i64, ptr %0, align 8
  br label %1563

1563:                                             ; preds = %1552, %1541, %1525
  %1564 = phi i64 [ %1539, %1525 ], [ %1539, %1541 ], [ %1562, %1552 ]
  %1565 = and i64 %1564, 65535
  %1566 = icmp eq i64 %1565, 29
  br i1 %1566, label %1567, label %1689

1567:                                             ; preds = %1563
  br i1 %1162, label %1568, label %1576

1568:                                             ; preds = %1567
  %1569 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %1570 = load ptr, ptr %1569, align 8, !tbaa !16
  %1571 = icmp eq ptr %1570, null
  br i1 %1571, label %1576, label %1572

1572:                                             ; preds = %1568
  %1573 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 5
  %1574 = load i32, ptr %1573, align 8
  %1575 = or i32 %1574, 32768
  store i32 %1575, ptr %1573, align 8
  br label %1611

1576:                                             ; preds = %1568, %1567
  %1577 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 5
  %1578 = load i32, ptr %1577, align 8
  %1579 = and i32 %1578, 2097152
  %1580 = icmp eq i32 %1579, 0
  br i1 %1580, label %1581, label %1586

1581:                                             ; preds = %1576
  %1582 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %1583 = load i32, ptr %1582, align 8
  %1584 = and i32 %1583, 2097152
  %1585 = icmp eq i32 %1584, 0
  br i1 %1585, label %1590, label %1586

1586:                                             ; preds = %1581, %1576
  %1587 = or i32 %1578, 2097152
  store i32 %1587, ptr %1577, align 8
  %1588 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %1589 = load i32, ptr %1588, align 8
  br label %1590

1590:                                             ; preds = %1586, %1581
  %1591 = phi i32 [ %1589, %1586 ], [ %1583, %1581 ]
  %1592 = phi i32 [ %1587, %1586 ], [ %1578, %1581 ]
  %1593 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %1594 = freeze i32 %1591
  %1595 = or i32 %1594, %1592
  %1596 = and i32 %1595, 32768
  %1597 = and i32 %1592, 32768
  %1598 = or i32 %1594, %1597
  store i32 %1598, ptr %1593, align 8
  %1599 = load i32, ptr %1577, align 8
  %1600 = and i32 %1599, -32769
  %1601 = or i32 %1600, %1596
  store i32 %1601, ptr %1577, align 8
  %1602 = load i32, ptr %1593, align 8
  %1603 = freeze i32 %1602
  %1604 = or i32 %1603, %1599
  %1605 = and i32 %1604, 67108864
  %1606 = and i32 %1599, 67108864
  %1607 = or i32 %1603, %1606
  store i32 %1607, ptr %1593, align 8
  %1608 = load i32, ptr %1577, align 8
  %1609 = and i32 %1608, -67108865
  %1610 = or i32 %1609, %1605
  store i32 %1610, ptr %1577, align 8
  br label %1611

1611:                                             ; preds = %1590, %1572
  %1612 = phi i32 [ %1610, %1590 ], [ %1575, %1572 ]
  %1613 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %1614 = load i32, ptr %1613, align 8
  %1615 = lshr i32 %1614, 11
  %1616 = and i32 %1615, 3
  %1617 = icmp eq i32 %1616, 0
  br i1 %1617, label %1639, label %1618

1618:                                             ; preds = %1611
  %1619 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 5
  %1620 = shl nuw nsw i32 %1616, 11
  %1621 = and i32 %1612, -6145
  %1622 = or i32 %1620, %1621
  store i32 %1622, ptr %1619, align 8
  %1623 = load i32, ptr %1613, align 8
  %1624 = and i32 %1623, 2047
  %1625 = and i32 %1622, -2048
  %1626 = or i32 %1624, %1625
  store i32 %1626, ptr %1619, align 8
  %1627 = load i64, ptr %1521, align 8
  %1628 = or i64 %1627, 262144
  store i64 %1628, ptr %1521, align 8
  br i1 %1163, label %1629, label %1631

1629:                                             ; preds = %1618
  %1630 = and i64 %1628, -2097153
  br label %1637

1631:                                             ; preds = %1618
  %1632 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %1633 = load i64, ptr %1632, align 8
  %1634 = and i64 %1633, 2097152
  %1635 = and i64 %1628, -2097153
  %1636 = or i64 %1634, %1635
  br label %1637

1637:                                             ; preds = %1631, %1629
  %1638 = phi i64 [ %1630, %1629 ], [ %1636, %1631 ]
  store i64 %1638, ptr %1521, align 8
  br label %1639

1639:                                             ; preds = %1637, %1611
  %1640 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 3
  %1641 = load ptr, ptr %1640, align 8, !tbaa !16
  %1642 = icmp eq ptr %1641, null
  br i1 %1642, label %1648, label %1643

1643:                                             ; preds = %1639
  %1644 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 3
  %1645 = load ptr, ptr %1644, align 8, !tbaa !16
  %1646 = icmp eq ptr %1645, null
  br i1 %1646, label %1647, label %1648

1647:                                             ; preds = %1643
  store ptr %1641, ptr %1644, align 8, !tbaa !16
  br label %1648

1648:                                             ; preds = %1647, %1643, %1639
  %1649 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 4
  %1650 = load ptr, ptr %1649, align 8, !tbaa !16
  %1651 = icmp eq ptr %1650, null
  br i1 %1651, label %1657, label %1652

1652:                                             ; preds = %1648
  %1653 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 4
  %1654 = load ptr, ptr %1653, align 8, !tbaa !16
  %1655 = icmp eq ptr %1654, null
  br i1 %1655, label %1656, label %1657

1656:                                             ; preds = %1652
  store ptr %1650, ptr %1653, align 8, !tbaa !16
  br label %1657

1657:                                             ; preds = %1656, %1652, %1648
  br i1 %1162, label %1689, label %1658

1658:                                             ; preds = %1657
  %1659 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 3
  %1660 = load ptr, ptr %1659, align 8, !tbaa !16
  %1661 = getelementptr inbounds %struct.tree_decl_non_common, ptr %0, i64 0, i32 3
  store ptr %1660, ptr %1661, align 8, !tbaa !16
  %1662 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %1663 = load ptr, ptr %1662, align 8, !tbaa !16
  store ptr %1663, ptr %1351, align 8, !tbaa !16
  %1664 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 1
  %1665 = load ptr, ptr %1664, align 8, !tbaa !16
  %1666 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 1
  store ptr %1665, ptr %1666, align 8, !tbaa !16
  %1667 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 1
  %1668 = load ptr, ptr %1667, align 8, !tbaa !16
  %1669 = getelementptr inbounds %struct.tree_decl_non_common, ptr %0, i64 0, i32 1
  store ptr %1668, ptr %1669, align 8, !tbaa !16
  %1670 = call ptr @gimple_body(ptr noundef nonnull %1) #24
  call void @gimple_set_body(ptr noundef nonnull %0, ptr noundef %1670) #24
  %1671 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 2
  %1672 = load ptr, ptr %1671, align 8, !tbaa !16
  %1673 = call ptr @copy_list(ptr noundef %1672) #24
  %1674 = getelementptr inbounds %struct.tree_decl_non_common, ptr %0, i64 0, i32 2
  store ptr %1673, ptr %1674, align 8, !tbaa !16
  %1675 = icmp eq ptr %1673, null
  br i1 %1675, label %1682, label %1676

1676:                                             ; preds = %1658, %1676
  %1677 = phi ptr [ %1680, %1676 ], [ %1673, %1658 ]
  %1678 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1677, i64 0, i32 4
  store ptr %0, ptr %1678, align 8, !tbaa !16
  %1679 = getelementptr inbounds %struct.tree_common, ptr %1677, i64 0, i32 1
  %1680 = load ptr, ptr %1679, align 8, !tbaa !16
  %1681 = icmp eq ptr %1680, null
  br i1 %1681, label %1682, label %1676, !llvm.loop !109

1682:                                             ; preds = %1676, %1658
  %1683 = load ptr, ptr %1667, align 8, !tbaa !16
  %1684 = icmp eq ptr %1683, null
  br i1 %1684, label %1689, label %1685

1685:                                             ; preds = %1682
  %1686 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  %1687 = load ptr, ptr %1686, align 8, !tbaa !16
  %1688 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  store ptr %1687, ptr %1688, align 8, !tbaa !16
  br label %1689

1689:                                             ; preds = %1685, %1682, %1657, %1563
  %1690 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %1691 = load i64, ptr %1690, align 8
  %1692 = and i64 %1691, 33554432
  %1693 = icmp eq i64 %1692, 0
  br i1 %1693, label %1699, label %1694

1694:                                             ; preds = %1689
  %1695 = load i64, ptr %1521, align 8
  %1696 = and i64 %1695, 33554432
  %1697 = icmp eq i64 %1696, 0
  %1698 = zext i1 %1697 to i32
  br label %1699

1699:                                             ; preds = %1694, %1689
  %1700 = phi i32 [ 0, %1689 ], [ %1698, %1694 ]
  %1701 = load i64, ptr %1, align 8
  %1702 = and i64 %1701, 16777216
  %1703 = icmp eq i64 %1702, 0
  %1704 = load i64, ptr %0, align 8
  br i1 %1703, label %1708, label %1705

1705:                                             ; preds = %1699
  %1706 = or i64 %1704, 16777216
  store i64 %1706, ptr %0, align 8
  %1707 = load i64, ptr %1690, align 8
  br label %1713

1708:                                             ; preds = %1699
  %1709 = and i64 %1704, 16777216
  %1710 = icmp eq i64 %1709, 0
  br i1 %1710, label %1713, label %1711

1711:                                             ; preds = %1708
  %1712 = or i64 %1701, 16777216
  store i64 %1712, ptr %1, align 8
  br label %1713

1713:                                             ; preds = %1711, %1708, %1705
  %1714 = phi i64 [ %1691, %1708 ], [ %1691, %1711 ], [ %1707, %1705 ]
  %1715 = and i64 %1714, 8192
  %1716 = icmp eq i64 %1715, 0
  %1717 = load i64, ptr %1521, align 8
  br i1 %1716, label %1718, label %1721

1718:                                             ; preds = %1713
  %1719 = and i64 %1717, 8192
  %1720 = icmp eq i64 %1719, 0
  br i1 %1720, label %1725, label %1721

1721:                                             ; preds = %1718, %1713
  %1722 = phi i64 [ %1717, %1713 ], [ %1714, %1718 ]
  %1723 = phi ptr [ %1521, %1713 ], [ %1690, %1718 ]
  %1724 = or i64 %1722, 8192
  store i64 %1724, ptr %1723, align 8
  br label %1725

1725:                                             ; preds = %1721, %1718
  %1726 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 2
  %1727 = load i32, ptr %1726, align 4, !tbaa !16
  %1728 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  %1729 = load ptr, ptr %1728, align 8, !tbaa !16
  %1730 = load i64, ptr %1, align 8
  %1731 = and i64 %1730, 65535
  %1732 = icmp eq i64 %1731, 29
  br i1 %1732, label %1733, label %1736

1733:                                             ; preds = %1725
  %1734 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 2
  %1735 = load ptr, ptr %1734, align 8, !tbaa !16
  br label %1736

1736:                                             ; preds = %1733, %1725
  %1737 = phi ptr [ %1735, %1733 ], [ null, %1725 ]
  %1738 = getelementptr inbounds i8, ptr %1, i64 24
  %1739 = getelementptr inbounds i8, ptr %0, i64 24
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(88) %1738, ptr noundef nonnull align 1 dereferenceable(88) %1739, i64 88, i1 false)
  %1740 = trunc i64 %1730 to i16
  switch i16 %1740, label %1753 [
    i16 29, label %1741
    i16 31, label %1744
    i16 32, label %1744
    i16 34, label %1744
    i16 30, label %1744
    i16 36, label %1744
    i16 33, label %1744
    i16 35, label %1744
  ]

1741:                                             ; preds = %1736
  %1742 = call ptr @gimple_body(ptr noundef nonnull %0) #24
  call void @gimple_set_body(ptr noundef nonnull %1, ptr noundef %1742) #24
  %1743 = load i64, ptr %1, align 8
  br label %1744

1744:                                             ; preds = %1741, %1736, %1736, %1736, %1736, %1736, %1736, %1736
  %1745 = phi i64 [ %1730, %1736 ], [ %1730, %1736 ], [ %1730, %1736 ], [ %1730, %1736 ], [ %1730, %1736 ], [ %1730, %1736 ], [ %1730, %1736 ], [ %1743, %1741 ]
  %1746 = getelementptr inbounds i8, ptr %1, i64 112
  %1747 = getelementptr inbounds i8, ptr %0, i64 112
  %1748 = trunc i64 %1745 to i32
  %1749 = and i32 %1748, 65535
  %1750 = call i64 @tree_code_size(i32 noundef %1749) #24
  %1751 = add i64 %1750, -112
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1746, ptr nonnull align 1 %1747, i64 %1751, i1 false)
  %1752 = load i64, ptr %1, align 8
  br label %1756

1753:                                             ; preds = %1736
  %1754 = getelementptr inbounds i8, ptr %1, i64 112
  %1755 = getelementptr inbounds i8, ptr %0, i64 112
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(72) %1754, ptr noundef nonnull align 1 dereferenceable(72) %1755, i64 72, i1 false)
  br label %1756

1756:                                             ; preds = %1753, %1744
  %1757 = phi i64 [ %1730, %1753 ], [ %1752, %1744 ]
  store i32 %1727, ptr %1726, align 4, !tbaa !16
  store ptr %1729, ptr %1728, align 8, !tbaa !16
  %1758 = and i64 %1757, 65535
  %1759 = icmp eq i64 %1758, 29
  br i1 %1759, label %1760, label %1762

1760:                                             ; preds = %1756
  %1761 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 2
  store ptr %1737, ptr %1761, align 8, !tbaa !16
  br label %1762

1762:                                             ; preds = %1760, %1756
  %1763 = trunc i64 %1757 to i16
  %1764 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %1758, i64 11
  %1765 = load i8, ptr %1764, align 1, !tbaa !16
  %1766 = icmp eq i8 %1765, 0
  br i1 %1766, label %1776, label %1767

1767:                                             ; preds = %1762
  %1768 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %1, i64 0, i32 1
  %1769 = load ptr, ptr %1768, align 8, !tbaa !16
  %1770 = icmp eq ptr %1769, null
  br i1 %1770, label %1776, label %1771

1771:                                             ; preds = %1767
  switch i16 %1763, label %1776 [
    i16 29, label %1775
    i16 32, label %1772
  ]

1772:                                             ; preds = %1771
  %1773 = and i64 %1757, 67108864
  %1774 = icmp eq i64 %1773, 0
  br i1 %1774, label %1776, label %1775

1775:                                             ; preds = %1772, %1771
  call void @make_decl_rtl(ptr noundef nonnull %1) #24
  br label %1776

1776:                                             ; preds = %1775, %1772, %1771, %1767, %1762
  %1777 = icmp eq i32 %1700, 0
  %1778 = select i1 %1777, i1 true, i1 %1162
  br i1 %1778, label %1788, label %1779

1779:                                             ; preds = %1776
  %1780 = load i64, ptr %1, align 8
  %1781 = and i64 %1780, 65535
  %1782 = icmp eq i64 %1781, 29
  br i1 %1782, label %1783, label %1788

1783:                                             ; preds = %1779
  %1784 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %1785 = load ptr, ptr %1784, align 8, !tbaa !16
  %1786 = icmp eq ptr %1785, null
  br i1 %1786, label %1788, label %1787

1787:                                             ; preds = %1783
  call void @cgraph_mark_if_needed(ptr noundef nonnull %1) #24
  br label %1788

1788:                                             ; preds = %1776, %1779, %1783, %1787
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6)
  br label %1789

1789:                                             ; preds = %1788, %1146
  %1790 = phi i8 [ 1, %1788 ], [ 0, %1146 ]
  ret i8 %1790
}

declare i32 @comptypes(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @composite_type(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @build_type_attribute_variant(ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @integer_zerop(ptr noundef) local_unnamed_addr #3

declare i32 @same_translation_unit_p(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @warn_if_shadowing(ptr noundef %0) unnamed_addr #9 {
  %2 = load i32, ptr @warn_shadow, align 4, !tbaa !20
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %69, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !16
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %69, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %9, align 8, !tbaa !16
  %11 = icmp eq ptr %10, null
  %12 = icmp eq ptr %10, %0
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %69

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !16
  %17 = getelementptr inbounds %struct.lang_identifier, ptr %16, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = icmp eq ptr %18, null
  br i1 %19, label %69, label %20

20:                                               ; preds = %14, %65
  %21 = phi ptr [ %67, %65 ], [ %18, %14 ]
  %22 = getelementptr inbounds %struct.c_binding, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !32
  %24 = icmp eq ptr %23, null
  %25 = icmp eq ptr %23, %0
  %26 = or i1 %24, %25
  br i1 %26, label %65, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.c_binding, ptr %21, i64 0, i32 5
  %29 = load i32, ptr %28, align 8
  %30 = and i32 %29, 268435456
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %65

32:                                               ; preds = %27
  %33 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %34 = icmp eq ptr %23, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 176, ptr noundef nonnull @.str.251, ptr noundef %0) #24
  br label %69

37:                                               ; preds = %32
  %38 = load i64, ptr %23, align 8
  %39 = trunc i64 %38 to i32
  %40 = and i32 %39, 65535
  %41 = icmp eq i32 %40, 34
  br i1 %41, label %59, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.tree_decl_minimal, ptr %23, i64 0, i32 4
  %44 = load ptr, ptr %43, align 8, !tbaa !16
  %45 = icmp eq ptr %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %42
  %47 = load i64, ptr %44, align 8
  %48 = and i64 %47, 65535
  %49 = icmp eq i64 %48, 40
  br i1 %49, label %59, label %50

50:                                               ; preds = %46
  %51 = icmp eq i32 %40, 29
  br i1 %51, label %52, label %59

52:                                               ; preds = %50
  %53 = getelementptr inbounds %struct.tree_function_decl, ptr %23, i64 0, i32 5
  %54 = load i32, ptr %53, align 8
  %55 = and i32 %54, 6144
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %52
  %58 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 176, ptr noundef nonnull @.str.220, ptr noundef %0) #24
  br label %69

59:                                               ; preds = %50, %52, %42, %46, %37
  %60 = phi ptr [ @.str.252, %37 ], [ @.str.253, %46 ], [ @.str.253, %42 ], [ @.str.254, %52 ], [ @.str.254, %50 ]
  %61 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 176, ptr noundef nonnull %60, ptr noundef %0) #24
  %62 = getelementptr inbounds %struct.tree_decl_minimal, ptr %23, i64 0, i32 1
  %63 = load i32, ptr %62, align 8, !tbaa !16
  %64 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %63, i32 noundef 176, ptr noundef nonnull @.str.255) #24
  br label %69

65:                                               ; preds = %20, %27
  %66 = getelementptr inbounds %struct.c_binding, ptr %21, i64 0, i32 4
  %67 = load ptr, ptr %66, align 8, !tbaa !5
  %68 = icmp eq ptr %67, null
  br i1 %68, label %69, label %20, !llvm.loop !110

69:                                               ; preds = %65, %14, %59, %57, %35, %1, %4, %8
  ret void
}

declare void @set_underlying_type(ptr noundef) local_unnamed_addr #3

declare ptr @tree_cons_stat(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @pushdecl_top_level(ptr noundef returned %0) local_unnamed_addr #9 {
  %2 = load i64, ptr %0, align 8
  %3 = and i64 %2, 65534
  %4 = icmp eq i64 %3, 32
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 2791, ptr noundef nonnull @.str.8) #24
  %6 = load i64, ptr %0, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i64 [ %2, %1 ], [ %6, %5 ]
  %9 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !16
  %11 = and i64 %8, 65535
  %12 = icmp eq i64 %11, 33
  br i1 %12, label %19, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.lang_identifier, ptr %10, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !25
  %16 = icmp eq ptr %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 2795, ptr noundef nonnull @.str.8) #24
  %18 = load i64, ptr %0, align 8
  br label %19

19:                                               ; preds = %7, %13, %17
  %20 = phi i64 [ %8, %7 ], [ %8, %13 ], [ %18, %17 ]
  %21 = and i64 %20, 134217728
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %86, label %23

23:                                               ; preds = %19
  %24 = load ptr, ptr @external_scope, align 8, !tbaa !5
  %25 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %26 = icmp eq ptr %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.c_binding, ptr %25, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !60
  store ptr %29, ptr @binding_freelist, align 8, !tbaa !5
  br label %32

30:                                               ; preds = %23
  %31 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %32

32:                                               ; preds = %30, %27
  %33 = phi ptr [ %25, %27 ], [ %31, %30 ]
  %34 = getelementptr inbounds %struct.c_binding, ptr %33, i64 0, i32 4
  store ptr null, ptr %34, align 8, !tbaa !52
  %35 = getelementptr inbounds %struct.c_binding, ptr %33, i64 0, i32 1
  store ptr %0, ptr %35, align 8, !tbaa !32
  %36 = getelementptr inbounds %struct.c_binding, ptr %33, i64 0, i32 2
  store ptr %10, ptr %36, align 8, !tbaa !51
  %37 = getelementptr inbounds %struct.c_scope, ptr %24, i64 0, i32 5
  %38 = load i64, ptr %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = and i32 %39, 268435455
  %41 = getelementptr inbounds %struct.c_binding, ptr %33, i64 0, i32 5
  %42 = or i32 %40, 268435456
  store i32 %42, ptr %41, align 8
  %43 = getelementptr inbounds %struct.c_binding, ptr %33, i64 0, i32 6
  store i32 0, ptr %43, align 4, !tbaa !59
  store ptr null, ptr %33, align 8, !tbaa !16
  %44 = getelementptr inbounds %struct.c_scope, ptr %24, i64 0, i32 2
  %45 = load ptr, ptr %44, align 8, !tbaa !48
  %46 = getelementptr inbounds %struct.c_binding, ptr %33, i64 0, i32 3
  store ptr %45, ptr %46, align 8, !tbaa !60
  store ptr %33, ptr %44, align 8, !tbaa !48
  %47 = icmp eq ptr %10, null
  br i1 %47, label %86, label %48

48:                                               ; preds = %32
  %49 = load i64, ptr %0, align 8
  %50 = trunc i64 %49 to i16
  switch i16 %50, label %57 [
    i16 30, label %51
    i16 6, label %53
    i16 17, label %53
    i16 16, label %53
    i16 32, label %55
    i16 29, label %55
    i16 35, label %55
    i16 33, label %55
    i16 34, label %55
    i16 0, label %55
  ]

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.lang_identifier, ptr %10, i64 0, i32 3
  br label %58

53:                                               ; preds = %48, %48, %48
  %54 = getelementptr inbounds %struct.lang_identifier, ptr %10, i64 0, i32 2
  br label %58

55:                                               ; preds = %48, %48, %48, %48, %48, %48
  %56 = getelementptr inbounds %struct.lang_identifier, ptr %10, i64 0, i32 1
  br label %58

57:                                               ; preds = %48
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %58

58:                                               ; preds = %57, %55, %53, %51
  %59 = phi ptr [ undef, %57 ], [ %56, %55 ], [ %54, %53 ], [ %52, %51 ]
  %60 = load ptr, ptr %59, align 8, !tbaa !5
  %61 = icmp eq ptr %60, null
  br i1 %61, label %83, label %62

62:                                               ; preds = %58
  %63 = load i64, ptr %37, align 8
  %64 = trunc i64 %63 to i32
  %65 = and i32 %64, 268435455
  %66 = getelementptr inbounds %struct.c_binding, ptr %60, i64 0, i32 5
  %67 = load i32, ptr %66, align 8
  %68 = and i32 %67, 268435455
  %69 = icmp ugt i32 %68, %65
  br i1 %69, label %75, label %83

70:                                               ; preds = %75
  %71 = getelementptr inbounds %struct.c_binding, ptr %78, i64 0, i32 5
  %72 = load i32, ptr %71, align 8
  %73 = and i32 %72, 268435455
  %74 = icmp ugt i32 %73, %65
  br i1 %74, label %75, label %80, !llvm.loop !74

75:                                               ; preds = %62, %70
  %76 = phi ptr [ %78, %70 ], [ %60, %62 ]
  %77 = getelementptr inbounds %struct.c_binding, ptr %76, i64 0, i32 4
  %78 = load ptr, ptr %77, align 8, !tbaa !5
  %79 = icmp eq ptr %78, null
  br i1 %79, label %80, label %70, !llvm.loop !74

80:                                               ; preds = %75, %70
  %81 = phi ptr [ %78, %70 ], [ null, %75 ]
  %82 = getelementptr inbounds %struct.c_binding, ptr %76, i64 0, i32 4
  br label %83

83:                                               ; preds = %80, %62, %58
  %84 = phi ptr [ %59, %58 ], [ %59, %62 ], [ %82, %80 ]
  %85 = phi ptr [ null, %58 ], [ %60, %62 ], [ %81, %80 ]
  store ptr %85, ptr %34, align 8, !tbaa !52
  store ptr %33, ptr %84, align 8, !tbaa !5
  br label %86

86:                                               ; preds = %83, %32, %19
  %87 = phi i32 [ 0, %19 ], [ 536870912, %32 ], [ 536870912, %83 ]
  %88 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %89 = icmp eq ptr %88, null
  br i1 %89, label %152, label %90

90:                                               ; preds = %86
  %91 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %92 = icmp eq ptr %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %struct.c_binding, ptr %91, i64 0, i32 3
  %95 = load ptr, ptr %94, align 8, !tbaa !60
  store ptr %95, ptr @binding_freelist, align 8, !tbaa !5
  br label %98

96:                                               ; preds = %90
  %97 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %98

98:                                               ; preds = %96, %93
  %99 = phi ptr [ %91, %93 ], [ %97, %96 ]
  %100 = getelementptr inbounds %struct.c_binding, ptr %99, i64 0, i32 4
  store ptr null, ptr %100, align 8, !tbaa !52
  %101 = getelementptr inbounds %struct.c_binding, ptr %99, i64 0, i32 1
  store ptr %0, ptr %101, align 8, !tbaa !32
  %102 = getelementptr inbounds %struct.c_binding, ptr %99, i64 0, i32 2
  store ptr %10, ptr %102, align 8, !tbaa !51
  %103 = getelementptr inbounds %struct.c_scope, ptr %88, i64 0, i32 5
  %104 = load i64, ptr %103, align 8
  %105 = trunc i64 %104 to i32
  %106 = and i32 %105, 268435455
  %107 = getelementptr inbounds %struct.c_binding, ptr %99, i64 0, i32 5
  %108 = or i32 %106, %87
  store i32 %108, ptr %107, align 8
  %109 = getelementptr inbounds %struct.c_binding, ptr %99, i64 0, i32 6
  store i32 0, ptr %109, align 4, !tbaa !59
  store ptr null, ptr %99, align 8, !tbaa !16
  %110 = getelementptr inbounds %struct.c_scope, ptr %88, i64 0, i32 2
  %111 = load ptr, ptr %110, align 8, !tbaa !48
  %112 = getelementptr inbounds %struct.c_binding, ptr %99, i64 0, i32 3
  store ptr %111, ptr %112, align 8, !tbaa !60
  store ptr %99, ptr %110, align 8, !tbaa !48
  %113 = icmp eq ptr %10, null
  br i1 %113, label %152, label %114

114:                                              ; preds = %98
  %115 = load i64, ptr %0, align 8
  %116 = trunc i64 %115 to i16
  switch i16 %116, label %123 [
    i16 30, label %117
    i16 6, label %119
    i16 17, label %119
    i16 16, label %119
    i16 32, label %121
    i16 29, label %121
    i16 35, label %121
    i16 33, label %121
    i16 34, label %121
    i16 0, label %121
  ]

117:                                              ; preds = %114
  %118 = getelementptr inbounds %struct.lang_identifier, ptr %10, i64 0, i32 3
  br label %124

119:                                              ; preds = %114, %114, %114
  %120 = getelementptr inbounds %struct.lang_identifier, ptr %10, i64 0, i32 2
  br label %124

121:                                              ; preds = %114, %114, %114, %114, %114, %114
  %122 = getelementptr inbounds %struct.lang_identifier, ptr %10, i64 0, i32 1
  br label %124

123:                                              ; preds = %114
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %124

124:                                              ; preds = %123, %121, %119, %117
  %125 = phi ptr [ undef, %123 ], [ %122, %121 ], [ %120, %119 ], [ %118, %117 ]
  %126 = load ptr, ptr %125, align 8, !tbaa !5
  %127 = icmp eq ptr %126, null
  br i1 %127, label %149, label %128

128:                                              ; preds = %124
  %129 = load i64, ptr %103, align 8
  %130 = trunc i64 %129 to i32
  %131 = and i32 %130, 268435455
  %132 = getelementptr inbounds %struct.c_binding, ptr %126, i64 0, i32 5
  %133 = load i32, ptr %132, align 8
  %134 = and i32 %133, 268435455
  %135 = icmp ugt i32 %134, %131
  br i1 %135, label %141, label %149

136:                                              ; preds = %141
  %137 = getelementptr inbounds %struct.c_binding, ptr %144, i64 0, i32 5
  %138 = load i32, ptr %137, align 8
  %139 = and i32 %138, 268435455
  %140 = icmp ugt i32 %139, %131
  br i1 %140, label %141, label %146, !llvm.loop !74

141:                                              ; preds = %128, %136
  %142 = phi ptr [ %144, %136 ], [ %126, %128 ]
  %143 = getelementptr inbounds %struct.c_binding, ptr %142, i64 0, i32 4
  %144 = load ptr, ptr %143, align 8, !tbaa !5
  %145 = icmp eq ptr %144, null
  br i1 %145, label %146, label %136, !llvm.loop !74

146:                                              ; preds = %141, %136
  %147 = phi ptr [ %144, %136 ], [ null, %141 ]
  %148 = getelementptr inbounds %struct.c_binding, ptr %142, i64 0, i32 4
  br label %149

149:                                              ; preds = %146, %128, %124
  %150 = phi ptr [ %125, %124 ], [ %125, %128 ], [ %148, %146 ]
  %151 = phi ptr [ null, %124 ], [ %126, %128 ], [ %147, %146 ]
  store ptr %151, ptr %100, align 8, !tbaa !52
  store ptr %99, ptr %150, align 8, !tbaa !5
  br label %152

152:                                              ; preds = %149, %98, %86
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @implicitly_declare(i32 noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #24
  %4 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  %6 = icmp eq ptr %5, null
  br i1 %6, label %227, label %7

7:                                                ; preds = %2
  %8 = load ptr, ptr @external_scope, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.c_scope, ptr %8, i64 0, i32 5
  %10 = load i64, ptr %9, align 8
  %11 = trunc i64 %10 to i32
  br label %12

12:                                               ; preds = %7, %19
  %13 = phi ptr [ %5, %7 ], [ %21, %19 ]
  %14 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 5
  %15 = load i32, ptr %14, align 8
  %16 = xor i32 %15, %11
  %17 = and i32 %16, 268435455
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 4
  %21 = load ptr, ptr %20, align 8, !tbaa !5
  %22 = icmp eq ptr %21, null
  br i1 %22, label %227, label %12, !llvm.loop !111

23:                                               ; preds = %12
  %24 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !32
  store ptr %25, ptr %3, align 8, !tbaa !5
  %26 = icmp eq ptr %25, null
  br i1 %26, label %227, label %27

27:                                               ; preds = %23
  %28 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %29 = icmp eq ptr %25, %28
  br i1 %29, label %258, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.tree_function_decl, ptr %25, i64 0, i32 5
  %32 = load i32, ptr %31, align 8
  %33 = and i32 %32, 6144
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %102

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.tree_decl_minimal, ptr %25, i64 0, i32 1
  %37 = load i32, ptr %36, align 8, !tbaa !16
  %38 = icmp ult i32 %37, 2
  br i1 %38, label %39, label %102

39:                                               ; preds = %35
  %40 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %41 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %42 = icmp eq ptr %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.c_binding, ptr %41, i64 0, i32 3
  %45 = load ptr, ptr %44, align 8, !tbaa !60
  store ptr %45, ptr @binding_freelist, align 8, !tbaa !5
  br label %48

46:                                               ; preds = %39
  %47 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %48

48:                                               ; preds = %46, %43
  %49 = phi ptr [ %41, %43 ], [ %47, %46 ]
  %50 = getelementptr inbounds %struct.c_binding, ptr %49, i64 0, i32 4
  store ptr null, ptr %50, align 8, !tbaa !52
  %51 = getelementptr inbounds %struct.c_binding, ptr %49, i64 0, i32 1
  store ptr %25, ptr %51, align 8, !tbaa !32
  %52 = getelementptr inbounds %struct.c_binding, ptr %49, i64 0, i32 2
  store ptr %1, ptr %52, align 8, !tbaa !51
  %53 = getelementptr inbounds %struct.c_scope, ptr %40, i64 0, i32 5
  %54 = load i64, ptr %53, align 8
  %55 = trunc i64 %54 to i32
  %56 = and i32 %55, 268435455
  %57 = getelementptr inbounds %struct.c_binding, ptr %49, i64 0, i32 5
  %58 = or i32 %56, 536870912
  store i32 %58, ptr %57, align 8
  %59 = getelementptr inbounds %struct.c_binding, ptr %49, i64 0, i32 6
  store i32 %37, ptr %59, align 4, !tbaa !59
  store ptr null, ptr %49, align 8, !tbaa !16
  %60 = getelementptr inbounds %struct.c_scope, ptr %40, i64 0, i32 2
  %61 = load ptr, ptr %60, align 8, !tbaa !48
  %62 = getelementptr inbounds %struct.c_binding, ptr %49, i64 0, i32 3
  store ptr %61, ptr %62, align 8, !tbaa !60
  store ptr %49, ptr %60, align 8, !tbaa !48
  %63 = icmp eq ptr %1, null
  br i1 %63, label %100, label %64

64:                                               ; preds = %48
  %65 = load i64, ptr %25, align 8
  %66 = trunc i64 %65 to i16
  switch i16 %66, label %71 [
    i16 30, label %67
    i16 6, label %69
    i16 17, label %69
    i16 16, label %69
    i16 32, label %72
    i16 29, label %72
    i16 35, label %72
    i16 33, label %72
    i16 34, label %72
    i16 0, label %72
  ]

67:                                               ; preds = %64
  %68 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 3
  br label %72

69:                                               ; preds = %64, %64, %64
  %70 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 2
  br label %72

71:                                               ; preds = %64
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %72

72:                                               ; preds = %64, %64, %64, %64, %64, %64, %71, %69, %67
  %73 = phi ptr [ undef, %71 ], [ %70, %69 ], [ %68, %67 ], [ %4, %64 ], [ %4, %64 ], [ %4, %64 ], [ %4, %64 ], [ %4, %64 ], [ %4, %64 ]
  %74 = load ptr, ptr %73, align 8, !tbaa !5
  %75 = icmp eq ptr %74, null
  br i1 %75, label %97, label %76

76:                                               ; preds = %72
  %77 = load i64, ptr %53, align 8
  %78 = trunc i64 %77 to i32
  %79 = and i32 %78, 268435455
  %80 = getelementptr inbounds %struct.c_binding, ptr %74, i64 0, i32 5
  %81 = load i32, ptr %80, align 8
  %82 = and i32 %81, 268435455
  %83 = icmp ugt i32 %82, %79
  br i1 %83, label %89, label %97

84:                                               ; preds = %89
  %85 = getelementptr inbounds %struct.c_binding, ptr %92, i64 0, i32 5
  %86 = load i32, ptr %85, align 8
  %87 = and i32 %86, 268435455
  %88 = icmp ugt i32 %87, %79
  br i1 %88, label %89, label %94, !llvm.loop !74

89:                                               ; preds = %76, %84
  %90 = phi ptr [ %92, %84 ], [ %74, %76 ]
  %91 = getelementptr inbounds %struct.c_binding, ptr %90, i64 0, i32 4
  %92 = load ptr, ptr %91, align 8, !tbaa !5
  %93 = icmp eq ptr %92, null
  br i1 %93, label %94, label %84, !llvm.loop !74

94:                                               ; preds = %89, %84
  %95 = phi ptr [ %92, %84 ], [ null, %89 ]
  %96 = getelementptr inbounds %struct.c_binding, ptr %90, i64 0, i32 4
  br label %97

97:                                               ; preds = %94, %76, %72
  %98 = phi ptr [ %73, %72 ], [ %73, %76 ], [ %96, %94 ]
  %99 = phi ptr [ null, %72 ], [ %74, %76 ], [ %95, %94 ]
  store ptr %99, ptr %50, align 8, !tbaa !52
  store ptr %49, ptr %98, align 8, !tbaa !5
  br label %100

100:                                              ; preds = %48, %97
  %101 = load ptr, ptr %3, align 8, !tbaa !5
  br label %258

102:                                              ; preds = %35, %30
  %103 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 48), align 16, !tbaa !5
  %104 = load ptr, ptr %13, align 8, !tbaa !16
  %105 = icmp eq ptr %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.tree_common, ptr %25, i64 0, i32 2
  store ptr %104, ptr %107, align 8, !tbaa !16
  br label %108

108:                                              ; preds = %106, %102
  %109 = getelementptr inbounds %struct.tree_decl_common, ptr %25, i64 0, i32 2
  %110 = load i64, ptr %109, align 8
  %111 = and i64 %110, 131072
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %117

113:                                              ; preds = %108
  tail call fastcc void @implicit_decl_warning(ptr noundef %1, ptr noundef nonnull %25)
  %114 = load i64, ptr %109, align 8
  %115 = or i64 %114, 131072
  store i64 %115, ptr %109, align 8
  %116 = load i32, ptr %31, align 8
  br label %117

117:                                              ; preds = %113, %108
  %118 = phi i32 [ %116, %113 ], [ %32, %108 ]
  %119 = and i32 %118, 6144
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %struct.tree_common, ptr %25, i64 0, i32 2
  %122 = load ptr, ptr %121, align 8, !tbaa !16
  br i1 %120, label %133, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %struct.tree_type, ptr %122, i64 0, i32 4
  %125 = load ptr, ptr %124, align 8, !tbaa !16
  %126 = tail call ptr @build_type_attribute_variant(ptr noundef %103, ptr noundef %125) #24
  %127 = load ptr, ptr %121, align 8, !tbaa !16
  %128 = tail call i32 @comptypes(ptr noundef %126, ptr noundef %127) #24
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %157

130:                                              ; preds = %123
  %131 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 0, ptr noundef nonnull @.str.14, ptr noundef nonnull %25) #24
  %132 = load ptr, ptr %121, align 8, !tbaa !16
  br label %157

133:                                              ; preds = %117
  %134 = tail call i32 @comptypes(ptr noundef %103, ptr noundef %122) #24
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %157

136:                                              ; preds = %133
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.15, ptr noundef nonnull %25) #24
  %137 = load i64, ptr %25, align 8
  %138 = and i64 %137, 65535
  %139 = icmp eq i64 %138, 29
  br i1 %139, label %140, label %144

140:                                              ; preds = %136
  %141 = load i32, ptr %31, align 8
  %142 = and i32 %141, 6144
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %157

144:                                              ; preds = %140, %136
  %145 = getelementptr inbounds %struct.tree_decl_common, ptr %25, i64 0, i32 5
  %146 = load ptr, ptr %145, align 8, !tbaa !16
  %147 = icmp eq ptr %146, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %144
  %149 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %149, ptr noundef nonnull @.str.257, ptr noundef nonnull %25) #24
  br label %157

150:                                              ; preds = %144
  %151 = load i64, ptr %109, align 8
  %152 = and i64 %151, 131072
  %153 = icmp eq i64 %152, 0
  %154 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %153, label %156, label %155

155:                                              ; preds = %150
  tail call void (i32, ptr, ...) @inform(i32 noundef %154, ptr noundef nonnull @.str.258, ptr noundef nonnull %25) #24
  br label %157

156:                                              ; preds = %150
  tail call void (i32, ptr, ...) @inform(i32 noundef %154, ptr noundef nonnull @.str.259, ptr noundef nonnull %25) #24
  br label %157

157:                                              ; preds = %156, %155, %148, %140, %133, %123, %130
  %158 = phi ptr [ %126, %123 ], [ %132, %130 ], [ %103, %133 ], [ %103, %140 ], [ %103, %148 ], [ %103, %155 ], [ %103, %156 ]
  %159 = getelementptr inbounds %struct.tree_common, ptr %25, i64 0, i32 2
  %160 = load ptr, ptr %159, align 8, !tbaa !16
  store ptr %160, ptr %13, align 8, !tbaa !16
  %161 = load ptr, ptr %3, align 8, !tbaa !5
  %162 = getelementptr inbounds %struct.tree_common, ptr %161, i64 0, i32 2
  store ptr %158, ptr %162, align 8, !tbaa !16
  %163 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %164 = getelementptr inbounds %struct.tree_decl_minimal, ptr %161, i64 0, i32 1
  %165 = load i32, ptr %164, align 8, !tbaa !16
  %166 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %167 = icmp eq ptr %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %157
  %169 = getelementptr inbounds %struct.c_binding, ptr %166, i64 0, i32 3
  %170 = load ptr, ptr %169, align 8, !tbaa !60
  store ptr %170, ptr @binding_freelist, align 8, !tbaa !5
  br label %173

171:                                              ; preds = %157
  %172 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %173

173:                                              ; preds = %171, %168
  %174 = phi ptr [ %166, %168 ], [ %172, %171 ]
  %175 = getelementptr inbounds %struct.c_binding, ptr %174, i64 0, i32 4
  store ptr null, ptr %175, align 8, !tbaa !52
  %176 = getelementptr inbounds %struct.c_binding, ptr %174, i64 0, i32 1
  store ptr %161, ptr %176, align 8, !tbaa !32
  %177 = getelementptr inbounds %struct.c_binding, ptr %174, i64 0, i32 2
  store ptr %1, ptr %177, align 8, !tbaa !51
  %178 = getelementptr inbounds %struct.c_scope, ptr %163, i64 0, i32 5
  %179 = load i64, ptr %178, align 8
  %180 = trunc i64 %179 to i32
  %181 = and i32 %180, 268435455
  %182 = getelementptr inbounds %struct.c_binding, ptr %174, i64 0, i32 5
  %183 = or i32 %181, 536870912
  store i32 %183, ptr %182, align 8
  %184 = getelementptr inbounds %struct.c_binding, ptr %174, i64 0, i32 6
  store i32 %165, ptr %184, align 4, !tbaa !59
  store ptr null, ptr %174, align 8, !tbaa !16
  %185 = getelementptr inbounds %struct.c_scope, ptr %163, i64 0, i32 2
  %186 = load ptr, ptr %185, align 8, !tbaa !48
  %187 = getelementptr inbounds %struct.c_binding, ptr %174, i64 0, i32 3
  store ptr %186, ptr %187, align 8, !tbaa !60
  store ptr %174, ptr %185, align 8, !tbaa !48
  %188 = icmp eq ptr %1, null
  br i1 %188, label %225, label %189

189:                                              ; preds = %173
  %190 = load i64, ptr %161, align 8
  %191 = trunc i64 %190 to i16
  switch i16 %191, label %196 [
    i16 30, label %192
    i16 6, label %194
    i16 17, label %194
    i16 16, label %194
    i16 32, label %197
    i16 29, label %197
    i16 35, label %197
    i16 33, label %197
    i16 34, label %197
    i16 0, label %197
  ]

192:                                              ; preds = %189
  %193 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 3
  br label %197

194:                                              ; preds = %189, %189, %189
  %195 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 2
  br label %197

196:                                              ; preds = %189
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %197

197:                                              ; preds = %189, %189, %189, %189, %189, %189, %196, %194, %192
  %198 = phi ptr [ undef, %196 ], [ %195, %194 ], [ %193, %192 ], [ %4, %189 ], [ %4, %189 ], [ %4, %189 ], [ %4, %189 ], [ %4, %189 ], [ %4, %189 ]
  %199 = load ptr, ptr %198, align 8, !tbaa !5
  %200 = icmp eq ptr %199, null
  br i1 %200, label %222, label %201

201:                                              ; preds = %197
  %202 = load i64, ptr %178, align 8
  %203 = trunc i64 %202 to i32
  %204 = and i32 %203, 268435455
  %205 = getelementptr inbounds %struct.c_binding, ptr %199, i64 0, i32 5
  %206 = load i32, ptr %205, align 8
  %207 = and i32 %206, 268435455
  %208 = icmp ugt i32 %207, %204
  br i1 %208, label %214, label %222

209:                                              ; preds = %214
  %210 = getelementptr inbounds %struct.c_binding, ptr %217, i64 0, i32 5
  %211 = load i32, ptr %210, align 8
  %212 = and i32 %211, 268435455
  %213 = icmp ugt i32 %212, %204
  br i1 %213, label %214, label %219, !llvm.loop !74

214:                                              ; preds = %201, %209
  %215 = phi ptr [ %217, %209 ], [ %199, %201 ]
  %216 = getelementptr inbounds %struct.c_binding, ptr %215, i64 0, i32 4
  %217 = load ptr, ptr %216, align 8, !tbaa !5
  %218 = icmp eq ptr %217, null
  br i1 %218, label %219, label %209, !llvm.loop !74

219:                                              ; preds = %214, %209
  %220 = phi ptr [ %217, %209 ], [ null, %214 ]
  %221 = getelementptr inbounds %struct.c_binding, ptr %215, i64 0, i32 4
  br label %222

222:                                              ; preds = %219, %201, %197
  %223 = phi ptr [ %198, %197 ], [ %198, %201 ], [ %221, %219 ]
  %224 = phi ptr [ null, %197 ], [ %199, %201 ], [ %220, %219 ]
  store ptr %224, ptr %175, align 8, !tbaa !52
  store ptr %174, ptr %223, align 8, !tbaa !5
  br label %225

225:                                              ; preds = %173, %222
  %226 = load ptr, ptr %3, align 8, !tbaa !5
  br label %258

227:                                              ; preds = %19, %2, %23
  %228 = load ptr, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 48), align 16, !tbaa !5
  %229 = tail call ptr @build_decl_stat(i32 noundef %0, i32 noundef 29, ptr noundef %1, ptr noundef %228) #24
  store ptr %229, ptr %3, align 8, !tbaa !5
  %230 = getelementptr inbounds %struct.tree_decl_common, ptr %229, i64 0, i32 2
  %231 = load i64, ptr %230, align 8
  %232 = or i64 %231, 33554432
  store i64 %232, ptr %230, align 8
  %233 = load i64, ptr %229, align 8
  %234 = or i64 %233, 134217728
  store i64 %234, ptr %229, align 8
  %235 = load ptr, ptr %3, align 8, !tbaa !5
  %236 = getelementptr inbounds %struct.tree_decl_common, ptr %235, i64 0, i32 2
  %237 = load i64, ptr %236, align 8
  %238 = or i64 %237, 131072
  store i64 %238, ptr %236, align 8
  %239 = load i32, ptr @warn_implicit_function_declaration, align 4, !tbaa !20
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %249, label %241

241:                                              ; preds = %227
  %242 = load i32, ptr @flag_isoc99, align 4, !tbaa !20
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %247, label %244

244:                                              ; preds = %241
  %245 = load i32, ptr @input_location, align 4, !tbaa !20
  %246 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %245, i32 noundef 103, ptr noundef nonnull @.str.256, ptr noundef %1) #24
  br label %249

247:                                              ; preds = %241
  %248 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 103, ptr noundef nonnull @.str.256, ptr noundef %1) #24
  br label %249

249:                                              ; preds = %244, %247, %227
  %250 = tail call ptr @maybe_apply_renaming_pragma(ptr noundef nonnull %235, ptr noundef null) #24
  %251 = icmp eq ptr %250, null
  br i1 %251, label %254, label %252

252:                                              ; preds = %249
  %253 = getelementptr inbounds %struct.tree_string, ptr %250, i64 0, i32 2
  tail call void @set_user_assembler_name(ptr noundef nonnull %235, ptr noundef nonnull %253) #24
  br label %254

254:                                              ; preds = %252, %249
  %255 = tail call ptr @pushdecl(ptr noundef nonnull %235)
  store ptr %255, ptr %3, align 8, !tbaa !5
  tail call void @rest_of_decl_compilation(ptr noundef %255, i32 noundef 0, i32 noundef 0) #24
  tail call void @gen_aux_info_record(ptr noundef %255, i32 noundef 0, i32 noundef 1, i32 noundef 0) #24
  %256 = call ptr @decl_attributes(ptr noundef nonnull %3, ptr noundef null, i32 noundef 0) #24
  %257 = load ptr, ptr %3, align 8, !tbaa !5
  br label %258

258:                                              ; preds = %27, %254, %225, %100
  %259 = phi ptr [ %226, %225 ], [ %101, %100 ], [ %257, %254 ], [ %25, %27 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #24
  ret ptr %259
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @implicit_decl_warning(ptr noundef %0, ptr noundef %1) unnamed_addr #9 {
  %3 = load i32, ptr @warn_implicit_function_declaration, align 4, !tbaa !20
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %41, label %5

5:                                                ; preds = %2
  %6 = load i32, ptr @flag_isoc99, align 4, !tbaa !20
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  %9 = load i32, ptr @input_location, align 4, !tbaa !20
  %10 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %9, i32 noundef 103, ptr noundef nonnull @.str.256, ptr noundef %0) #24
  br label %13

11:                                               ; preds = %5
  %12 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 103, ptr noundef nonnull @.str.256, ptr noundef %0) #24
  br label %13

13:                                               ; preds = %11, %8
  %14 = phi i8 [ %10, %8 ], [ %12, %11 ]
  %15 = icmp ne ptr %1, null
  %16 = icmp ne i8 %14, 0
  %17 = select i1 %15, i1 %16, i1 false
  br i1 %17, label %18, label %41

18:                                               ; preds = %13
  %19 = load i64, ptr %1, align 8
  %20 = and i64 %19, 65535
  %21 = icmp eq i64 %20, 29
  br i1 %21, label %22, label %27

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %24 = load i32, ptr %23, align 8
  %25 = and i32 %24, 6144
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %41

27:                                               ; preds = %22, %18
  %28 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %29 = load ptr, ptr %28, align 8, !tbaa !16
  %30 = icmp eq ptr %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %32, ptr noundef nonnull @.str.257, ptr noundef nonnull %1) #24
  br label %41

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %35 = load i64, ptr %34, align 8
  %36 = and i64 %35, 131072
  %37 = icmp eq i64 %36, 0
  %38 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %37, label %40, label %39

39:                                               ; preds = %33
  tail call void (i32, ptr, ...) @inform(i32 noundef %38, ptr noundef nonnull @.str.258, ptr noundef nonnull %1) #24
  br label %41

40:                                               ; preds = %33
  tail call void (i32, ptr, ...) @inform(i32 noundef %38, ptr noundef nonnull @.str.259, ptr noundef nonnull %1) #24
  br label %41

41:                                               ; preds = %40, %39, %31, %22, %13, %2
  ret void
}

declare void @error_at(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

declare ptr @maybe_apply_renaming_pragma(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @set_user_assembler_name(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @rest_of_decl_compilation(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare void @gen_aux_info_record(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @decl_attributes(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @undeclared_variable(i32 noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.16, ptr noundef %1) #24
  %6 = load ptr, ptr @current_scope, align 8, !tbaa !5
  br label %15

7:                                                ; preds = %2
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.17, ptr noundef %1) #24
  %8 = load i1, ptr @undeclared_variable.already, align 1
  br i1 %8, label %10, label %9

9:                                                ; preds = %7
  tail call void (i32, ptr, ...) @inform(i32 noundef %0, ptr noundef nonnull @.str.18) #24
  store i1 true, ptr @undeclared_variable.already, align 1
  br label %10

10:                                               ; preds = %9, %7
  %11 = load ptr, ptr @current_function_scope, align 8
  %12 = icmp eq ptr %11, null
  %13 = load ptr, ptr @current_scope, align 8
  %14 = select i1 %12, ptr %13, ptr %11
  br label %15

15:                                               ; preds = %10, %5
  %16 = phi ptr [ %6, %5 ], [ %14, %10 ]
  %17 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %18 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %19 = icmp eq ptr %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.c_binding, ptr %18, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !60
  store ptr %22, ptr @binding_freelist, align 8, !tbaa !5
  br label %25

23:                                               ; preds = %15
  %24 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %25

25:                                               ; preds = %23, %20
  %26 = phi ptr [ %18, %20 ], [ %24, %23 ]
  %27 = getelementptr inbounds %struct.c_binding, ptr %26, i64 0, i32 4
  store ptr null, ptr %27, align 8, !tbaa !52
  %28 = getelementptr inbounds %struct.c_binding, ptr %26, i64 0, i32 1
  store ptr %17, ptr %28, align 8, !tbaa !32
  %29 = getelementptr inbounds %struct.c_binding, ptr %26, i64 0, i32 2
  store ptr %1, ptr %29, align 8, !tbaa !51
  %30 = getelementptr inbounds %struct.c_scope, ptr %16, i64 0, i32 5
  %31 = load i64, ptr %30, align 8
  %32 = trunc i64 %31 to i32
  %33 = and i32 %32, 268435455
  %34 = getelementptr inbounds %struct.c_binding, ptr %26, i64 0, i32 5
  store i32 %33, ptr %34, align 8
  %35 = getelementptr inbounds %struct.c_binding, ptr %26, i64 0, i32 6
  store i32 0, ptr %35, align 4, !tbaa !59
  store ptr null, ptr %26, align 8, !tbaa !16
  %36 = getelementptr inbounds %struct.c_scope, ptr %16, i64 0, i32 2
  %37 = load ptr, ptr %36, align 8, !tbaa !48
  %38 = getelementptr inbounds %struct.c_binding, ptr %26, i64 0, i32 3
  store ptr %37, ptr %38, align 8, !tbaa !60
  store ptr %26, ptr %36, align 8, !tbaa !48
  %39 = icmp eq ptr %1, null
  br i1 %39, label %78, label %40

40:                                               ; preds = %25
  %41 = load i64, ptr %17, align 8
  %42 = trunc i64 %41 to i16
  switch i16 %42, label %49 [
    i16 30, label %43
    i16 6, label %45
    i16 17, label %45
    i16 16, label %45
    i16 32, label %47
    i16 29, label %47
    i16 35, label %47
    i16 33, label %47
    i16 34, label %47
    i16 0, label %47
  ]

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 3
  br label %50

45:                                               ; preds = %40, %40, %40
  %46 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 2
  br label %50

47:                                               ; preds = %40, %40, %40, %40, %40, %40
  %48 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 1
  br label %50

49:                                               ; preds = %40
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %50

50:                                               ; preds = %49, %47, %45, %43
  %51 = phi ptr [ undef, %49 ], [ %48, %47 ], [ %46, %45 ], [ %44, %43 ]
  %52 = load ptr, ptr %51, align 8, !tbaa !5
  %53 = icmp eq ptr %52, null
  br i1 %53, label %75, label %54

54:                                               ; preds = %50
  %55 = load i64, ptr %30, align 8
  %56 = trunc i64 %55 to i32
  %57 = and i32 %56, 268435455
  %58 = getelementptr inbounds %struct.c_binding, ptr %52, i64 0, i32 5
  %59 = load i32, ptr %58, align 8
  %60 = and i32 %59, 268435455
  %61 = icmp ugt i32 %60, %57
  br i1 %61, label %67, label %75

62:                                               ; preds = %67
  %63 = getelementptr inbounds %struct.c_binding, ptr %70, i64 0, i32 5
  %64 = load i32, ptr %63, align 8
  %65 = and i32 %64, 268435455
  %66 = icmp ugt i32 %65, %57
  br i1 %66, label %67, label %72, !llvm.loop !74

67:                                               ; preds = %54, %62
  %68 = phi ptr [ %70, %62 ], [ %52, %54 ]
  %69 = getelementptr inbounds %struct.c_binding, ptr %68, i64 0, i32 4
  %70 = load ptr, ptr %69, align 8, !tbaa !5
  %71 = icmp eq ptr %70, null
  br i1 %71, label %72, label %62, !llvm.loop !74

72:                                               ; preds = %67, %62
  %73 = phi ptr [ %70, %62 ], [ null, %67 ]
  %74 = getelementptr inbounds %struct.c_binding, ptr %68, i64 0, i32 4
  br label %75

75:                                               ; preds = %72, %54, %50
  %76 = phi ptr [ %51, %50 ], [ %51, %54 ], [ %74, %72 ]
  %77 = phi ptr [ null, %50 ], [ %52, %54 ], [ %73, %72 ]
  store ptr %77, ptr %27, align 8, !tbaa !52
  store ptr %26, ptr %76, align 8, !tbaa !5
  br label %78

78:                                               ; preds = %25, %75
  ret void
}

declare void @inform(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @lookup_label(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.19, ptr noundef %0) #24
  br label %43

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.lang_identifier, ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !35
  %8 = icmp eq ptr %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.c_binding, ptr %7, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq ptr %11, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.tree_decl_minimal, ptr %11, i64 0, i32 4
  %15 = load ptr, ptr %14, align 8, !tbaa !16
  %16 = icmp eq ptr %15, %2
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = load i64, ptr %11, align 8
  %19 = and i64 %18, 17179869184
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %17, %13
  %22 = getelementptr inbounds %struct.tree_decl_common, ptr %11, i64 0, i32 5
  %23 = load ptr, ptr %22, align 8, !tbaa !16
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %43

25:                                               ; preds = %21
  %26 = load i32, ptr @input_location, align 4, !tbaa !20
  %27 = getelementptr inbounds %struct.tree_decl_minimal, ptr %11, i64 0, i32 1
  store i32 %26, ptr %27, align 8, !tbaa !16
  br label %43

28:                                               ; preds = %5, %17, %9
  %29 = load i32, ptr @input_location, align 4, !tbaa !20
  %30 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !5
  %31 = tail call ptr @build_decl_stat(i32 noundef %29, i32 noundef 30, ptr noundef nonnull %0, ptr noundef %30) #24
  %32 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %33 = getelementptr inbounds %struct.tree_decl_minimal, ptr %31, i64 0, i32 4
  store ptr %32, ptr %33, align 8, !tbaa !16
  %34 = getelementptr inbounds %struct.tree_decl_common, ptr %31, i64 0, i32 2
  %35 = load i64, ptr %34, align 8
  %36 = and i64 %35, -256
  store i64 %36, ptr %34, align 8
  %37 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(29) %37, i8 0, i64 29, i1 false)
  %38 = tail call ptr @make_tree_vector() #24
  %39 = getelementptr inbounds %struct.c_label_vars, ptr %37, i64 0, i32 2
  store ptr %38, ptr %39, align 8, !tbaa !53
  %40 = tail call ptr @vec_gc_p_reserve_exact(ptr noundef null, i32 noundef 0) #24
  %41 = getelementptr inbounds %struct.c_label_vars, ptr %37, i64 0, i32 3
  store ptr %40, ptr %41, align 8, !tbaa !69
  %42 = load ptr, ptr @current_function_scope, align 8, !tbaa !5
  tail call fastcc void @bind_label(ptr noundef nonnull %0, ptr noundef %31, ptr noundef %42, ptr noundef nonnull %37)
  br label %43

43:                                               ; preds = %21, %25, %28, %4
  %44 = phi ptr [ null, %4 ], [ %31, %28 ], [ %11, %25 ], [ %11, %21 ]
  ret ptr %44
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @bind_label(ptr noundef %0, ptr noundef %1, ptr nocapture noundef %2, ptr noundef %3) unnamed_addr #9 {
  %5 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %6 = icmp eq ptr %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.c_binding, ptr %5, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !60
  store ptr %9, ptr @binding_freelist, align 8, !tbaa !5
  br label %12

10:                                               ; preds = %4
  %11 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %12

12:                                               ; preds = %10, %7
  %13 = phi ptr [ %5, %7 ], [ %11, %10 ]
  %14 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 4
  store ptr null, ptr %14, align 8, !tbaa !52
  %15 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 1
  store ptr %1, ptr %15, align 8, !tbaa !32
  %16 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 2
  store ptr %0, ptr %16, align 8, !tbaa !51
  %17 = getelementptr inbounds %struct.c_scope, ptr %2, i64 0, i32 5
  %18 = load i64, ptr %17, align 8
  %19 = trunc i64 %18 to i32
  %20 = and i32 %19, 268435455
  %21 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 5
  store i32 %20, ptr %21, align 8
  %22 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 6
  store i32 0, ptr %22, align 4, !tbaa !59
  store ptr null, ptr %13, align 8, !tbaa !16
  %23 = getelementptr inbounds %struct.c_scope, ptr %2, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !48
  %25 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 3
  store ptr %24, ptr %25, align 8, !tbaa !60
  store ptr %13, ptr %23, align 8, !tbaa !48
  %26 = icmp eq ptr %0, null
  br i1 %26, label %66, label %27

27:                                               ; preds = %12
  %28 = load i64, ptr %1, align 8
  %29 = trunc i64 %28 to i16
  switch i16 %29, label %36 [
    i16 30, label %30
    i16 6, label %32
    i16 17, label %32
    i16 16, label %32
    i16 32, label %34
    i16 29, label %34
    i16 35, label %34
    i16 33, label %34
    i16 34, label %34
    i16 0, label %34
  ]

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.lang_identifier, ptr %0, i64 0, i32 3
  br label %37

32:                                               ; preds = %27, %27, %27
  %33 = getelementptr inbounds %struct.lang_identifier, ptr %0, i64 0, i32 2
  br label %37

34:                                               ; preds = %27, %27, %27, %27, %27, %27
  %35 = getelementptr inbounds %struct.lang_identifier, ptr %0, i64 0, i32 1
  br label %37

36:                                               ; preds = %27
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %37

37:                                               ; preds = %36, %34, %32, %30
  %38 = phi ptr [ undef, %36 ], [ %35, %34 ], [ %33, %32 ], [ %31, %30 ]
  %39 = load ptr, ptr %38, align 8, !tbaa !5
  %40 = icmp eq ptr %39, null
  br i1 %40, label %62, label %41

41:                                               ; preds = %37
  %42 = load i64, ptr %17, align 8
  %43 = trunc i64 %42 to i32
  %44 = and i32 %43, 268435455
  %45 = getelementptr inbounds %struct.c_binding, ptr %39, i64 0, i32 5
  %46 = load i32, ptr %45, align 8
  %47 = and i32 %46, 268435455
  %48 = icmp ugt i32 %47, %44
  br i1 %48, label %54, label %62

49:                                               ; preds = %54
  %50 = getelementptr inbounds %struct.c_binding, ptr %57, i64 0, i32 5
  %51 = load i32, ptr %50, align 8
  %52 = and i32 %51, 268435455
  %53 = icmp ugt i32 %52, %44
  br i1 %53, label %54, label %59, !llvm.loop !74

54:                                               ; preds = %41, %49
  %55 = phi ptr [ %57, %49 ], [ %39, %41 ]
  %56 = getelementptr inbounds %struct.c_binding, ptr %55, i64 0, i32 4
  %57 = load ptr, ptr %56, align 8, !tbaa !5
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %49, !llvm.loop !74

59:                                               ; preds = %54, %49
  %60 = phi ptr [ %57, %49 ], [ null, %54 ]
  %61 = getelementptr inbounds %struct.c_binding, ptr %55, i64 0, i32 4
  br label %62

62:                                               ; preds = %59, %41, %37
  %63 = phi ptr [ %38, %37 ], [ %38, %41 ], [ %61, %59 ]
  %64 = phi ptr [ null, %37 ], [ %39, %41 ], [ %60, %59 ]
  store ptr %64, ptr %14, align 8, !tbaa !52
  store ptr %13, ptr %63, align 8, !tbaa !5
  %65 = load ptr, ptr %23, align 8, !tbaa !48
  br label %66

66:                                               ; preds = %12, %62
  %67 = phi ptr [ %13, %12 ], [ %65, %62 ]
  %68 = load i64, ptr %17, align 8
  %69 = or i64 %68, 17179869184
  store i64 %69, ptr %17, align 8
  %70 = getelementptr inbounds %struct.c_binding, ptr %67, i64 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !32
  %72 = icmp eq ptr %71, %1
  br i1 %72, label %74, label %73

73:                                               ; preds = %66
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 676, ptr noundef nonnull @.str.8) #24
  br label %74

74:                                               ; preds = %66, %73
  %75 = load ptr, ptr %67, align 8, !tbaa !16
  store ptr %75, ptr %3, align 8, !tbaa !112
  store ptr %3, ptr %67, align 8, !tbaa !16
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @lookup_label_for_goto(i32 noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = tail call ptr @lookup_label(ptr noundef %1)
  %4 = icmp eq ptr %3, null
  br i1 %4, label %84, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 4
  %7 = load ptr, ptr %6, align 8, !tbaa !16
  %8 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %9 = icmp eq ptr %7, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = load i64, ptr %3, align 8
  %12 = and i64 %11, 17179869184
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %84

14:                                               ; preds = %10
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 3067, ptr noundef nonnull @.str.8) #24
  br label %84

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !35
  %18 = load ptr, ptr %17, align 8, !tbaa !16
  %19 = getelementptr inbounds %struct.c_label_vars, ptr %18, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !113
  %21 = icmp eq ptr %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.c_label_vars, ptr %18, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !53
  %25 = icmp eq ptr %24, null
  br i1 %25, label %77, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 1
  br label %54

28:                                               ; preds = %15
  %29 = tail call ptr @ggc_alloc_stat(i64 noundef 32) #24
  store i32 %0, ptr %29, align 8, !tbaa !114
  %30 = getelementptr inbounds %struct.c_goto_bindings, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr @current_scope, align 8, !tbaa !5
  store ptr %31, ptr %30, align 8, !tbaa !63
  %32 = getelementptr inbounds %struct.c_scope, ptr %31, i64 0, i32 2
  %33 = load ptr, ptr %32, align 8, !tbaa !48
  %34 = getelementptr inbounds %struct.c_goto_bindings, ptr %29, i64 0, i32 1, i32 1
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds %struct.c_goto_bindings, ptr %29, i64 0, i32 1, i32 2
  store i32 0, ptr %35, align 8, !tbaa !85
  %36 = getelementptr inbounds %struct.c_goto_bindings, ptr %29, i64 0, i32 1, i32 3
  store i8 0, ptr %36, align 4, !tbaa !115
  %37 = getelementptr inbounds %struct.c_label_vars, ptr %18, i64 0, i32 3
  %38 = load ptr, ptr %37, align 8, !tbaa !5
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %28
  %41 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %38, i64 0, i32 1
  %42 = load i32, ptr %41, align 4, !tbaa !116
  %43 = load i32, ptr %38, align 8, !tbaa !70
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %45, label %48

45:                                               ; preds = %40, %28
  %46 = tail call ptr @vec_gc_p_reserve(ptr noundef %38, i32 noundef 1) #24
  store ptr %46, ptr %37, align 8, !tbaa !5
  %47 = load i32, ptr %46, align 8, !tbaa !70
  br label %48

48:                                               ; preds = %40, %45
  %49 = phi i32 [ %43, %40 ], [ %47, %45 ]
  %50 = phi ptr [ %38, %40 ], [ %46, %45 ]
  %51 = add i32 %49, 1
  store i32 %51, ptr %50, align 8, !tbaa !70
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %50, i64 0, i32 2, i64 %52
  store ptr %29, ptr %53, align 8, !tbaa !5
  br label %84

54:                                               ; preds = %26, %70
  %55 = phi i64 [ 0, %26 ], [ %74, %70 ]
  %56 = phi ptr [ %24, %26 ], [ %75, %70 ]
  %57 = load i32, ptr %56, align 8, !tbaa !68
  %58 = zext i32 %57 to i64
  %59 = icmp ult i64 %55, %58
  br i1 %59, label %60, label %77

60:                                               ; preds = %54
  %61 = getelementptr inbounds %struct.VEC_tree_base, ptr %56, i64 0, i32 2, i64 %55
  %62 = load ptr, ptr %61, align 8, !tbaa !5
  %63 = getelementptr inbounds %struct.tree_common, ptr %62, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !16
  %65 = tail call zeroext i8 @variably_modified_type_p(ptr noundef %64, ptr noundef null) #24
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %60
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.260) #24
  br label %70

68:                                               ; preds = %60
  %69 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 119, ptr noundef nonnull @.str.261) #24
  br label %70

70:                                               ; preds = %67, %68
  %71 = load i32, ptr %27, align 8, !tbaa !16
  tail call void (i32, ptr, ...) @inform(i32 noundef %71, ptr noundef nonnull @.str.21, ptr noundef nonnull %3) #24
  %72 = getelementptr inbounds %struct.tree_decl_minimal, ptr %62, i64 0, i32 1
  %73 = load i32, ptr %72, align 8, !tbaa !16
  tail call void (i32, ptr, ...) @inform(i32 noundef %73, ptr noundef nonnull @.str.28, ptr noundef nonnull %62) #24
  %74 = add nuw i64 %55, 1
  %75 = load ptr, ptr %23, align 8, !tbaa !53
  %76 = icmp eq ptr %75, null
  br i1 %76, label %77, label %54, !llvm.loop !117

77:                                               ; preds = %70, %54, %22
  %78 = getelementptr inbounds %struct.c_label_vars, ptr %18, i64 0, i32 1, i32 3
  %79 = load i8, ptr %78, align 4, !tbaa !86
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %77
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.20) #24
  %82 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 1
  %83 = load i32, ptr %82, align 8, !tbaa !16
  tail call void (i32, ptr, ...) @inform(i32 noundef %83, ptr noundef nonnull @.str.21, ptr noundef nonnull %3) #24
  br label %84

84:                                               ; preds = %77, %81, %14, %10, %2, %48
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @declare_label(ptr noundef %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.lang_identifier, ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !35
  %4 = icmp eq ptr %3, null
  br i1 %4, label %42, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.c_binding, ptr %3, i64 0, i32 5
  %7 = load i32, ptr %6, align 8
  %8 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.c_scope, ptr %8, i64 0, i32 5
  %10 = load i64, ptr %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = xor i32 %7, %11
  %13 = and i32 %12, 268435455
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %42

15:                                               ; preds = %5
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.22, ptr noundef nonnull %0) #24
  %16 = getelementptr inbounds %struct.c_binding, ptr %3, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !32
  %18 = load i64, ptr %17, align 8
  %19 = and i64 %18, 65535
  %20 = icmp eq i64 %19, 29
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.tree_function_decl, ptr %17, i64 0, i32 5
  %23 = load i32, ptr %22, align 8
  %24 = and i32 %23, 6144
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %40

26:                                               ; preds = %21, %15
  %27 = getelementptr inbounds %struct.tree_decl_common, ptr %17, i64 0, i32 5
  %28 = load ptr, ptr %27, align 8, !tbaa !16
  %29 = icmp eq ptr %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %31, ptr noundef nonnull @.str.257, ptr noundef nonnull %17) #24
  br label %40

32:                                               ; preds = %26
  %33 = getelementptr inbounds %struct.tree_decl_common, ptr %17, i64 0, i32 2
  %34 = load i64, ptr %33, align 8
  %35 = and i64 %34, 131072
  %36 = icmp eq i64 %35, 0
  %37 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %36, label %39, label %38

38:                                               ; preds = %32
  tail call void (i32, ptr, ...) @inform(i32 noundef %37, ptr noundef nonnull @.str.258, ptr noundef nonnull %17) #24
  br label %40

39:                                               ; preds = %32
  tail call void (i32, ptr, ...) @inform(i32 noundef %37, ptr noundef nonnull @.str.259, ptr noundef nonnull %17) #24
  br label %40

40:                                               ; preds = %21, %30, %38, %39
  %41 = load ptr, ptr %16, align 8, !tbaa !32
  br label %59

42:                                               ; preds = %5, %1
  %43 = load i32, ptr @input_location, align 4, !tbaa !20
  %44 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !5
  %45 = tail call ptr @build_decl_stat(i32 noundef %43, i32 noundef 30, ptr noundef nonnull %0, ptr noundef %44) #24
  %46 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %47 = getelementptr inbounds %struct.tree_decl_minimal, ptr %45, i64 0, i32 4
  store ptr %46, ptr %47, align 8, !tbaa !16
  %48 = getelementptr inbounds %struct.tree_decl_common, ptr %45, i64 0, i32 2
  %49 = load i64, ptr %48, align 8
  %50 = and i64 %49, -256
  store i64 %50, ptr %48, align 8
  %51 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(29) %51, i8 0, i64 29, i1 false)
  %52 = tail call ptr @make_tree_vector() #24
  %53 = getelementptr inbounds %struct.c_label_vars, ptr %51, i64 0, i32 2
  store ptr %52, ptr %53, align 8, !tbaa !53
  %54 = tail call ptr @vec_gc_p_reserve_exact(ptr noundef null, i32 noundef 0) #24
  %55 = getelementptr inbounds %struct.c_label_vars, ptr %51, i64 0, i32 3
  store ptr %54, ptr %55, align 8, !tbaa !69
  %56 = load i64, ptr %45, align 8
  %57 = or i64 %56, 17179869184
  store i64 %57, ptr %45, align 8
  %58 = load ptr, ptr @current_scope, align 8, !tbaa !5
  tail call fastcc void @bind_label(ptr noundef nonnull %0, ptr noundef nonnull %45, ptr noundef %58, ptr noundef nonnull %51)
  br label %59

59:                                               ; preds = %42, %40
  %60 = phi ptr [ %41, %40 ], [ %45, %42 ]
  ret ptr %60
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @define_label(i32 noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = alloca %struct.expanded_location, align 8
  %4 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !35
  %6 = icmp eq ptr %5, null
  br i1 %6, label %201, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.c_binding, ptr %5, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !32
  %10 = icmp eq ptr %9, null
  br i1 %10, label %201, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.tree_decl_minimal, ptr %9, i64 0, i32 4
  %13 = load ptr, ptr %12, align 8, !tbaa !16
  %14 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %15 = icmp eq ptr %13, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.tree_decl_common, ptr %9, i64 0, i32 5
  %18 = load ptr, ptr %17, align 8, !tbaa !16
  %19 = icmp eq ptr %18, null
  br i1 %19, label %47, label %24

20:                                               ; preds = %11
  %21 = load i64, ptr %9, align 8
  %22 = and i64 %21, 17179869184
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %201, label %24

24:                                               ; preds = %20, %16
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.23, ptr noundef nonnull %9) #24
  %25 = load i64, ptr %9, align 8
  %26 = and i64 %25, 65535
  %27 = icmp eq i64 %26, 29
  br i1 %27, label %28, label %33

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.tree_function_decl, ptr %9, i64 0, i32 5
  %30 = load i32, ptr %29, align 8
  %31 = and i32 %30, 6144
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %246

33:                                               ; preds = %28, %24
  %34 = getelementptr inbounds %struct.tree_decl_common, ptr %9, i64 0, i32 5
  %35 = load ptr, ptr %34, align 8, !tbaa !16
  %36 = icmp eq ptr %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @inform(i32 noundef %38, ptr noundef nonnull @.str.257, ptr noundef nonnull %9) #24
  br label %246

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.tree_decl_common, ptr %9, i64 0, i32 2
  %41 = load i64, ptr %40, align 8
  %42 = and i64 %41, 131072
  %43 = icmp eq i64 %42, 0
  %44 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %43, label %46, label %45

45:                                               ; preds = %39
  tail call void (i32, ptr, ...) @inform(i32 noundef %44, ptr noundef nonnull @.str.258, ptr noundef nonnull %9) #24
  br label %246

46:                                               ; preds = %39
  tail call void (i32, ptr, ...) @inform(i32 noundef %44, ptr noundef nonnull @.str.259, ptr noundef nonnull %9) #24
  br label %246

47:                                               ; preds = %16
  %48 = load ptr, ptr %5, align 8, !tbaa !16
  %49 = getelementptr inbounds %struct.tree_decl_minimal, ptr %9, i64 0, i32 1
  store i32 %0, ptr %49, align 8, !tbaa !16
  %50 = getelementptr inbounds %struct.c_label_vars, ptr %48, i64 0, i32 1
  %51 = load ptr, ptr @current_scope, align 8, !tbaa !5
  store ptr %51, ptr %50, align 8, !tbaa !63
  %52 = getelementptr inbounds %struct.c_scope, ptr %51, i64 0, i32 2
  %53 = load ptr, ptr %52, align 8, !tbaa !48
  %54 = getelementptr inbounds %struct.c_label_vars, ptr %48, i64 0, i32 1, i32 1
  store ptr %53, ptr %54, align 8
  %55 = getelementptr inbounds %struct.c_label_vars, ptr %48, i64 0, i32 1, i32 2
  store i32 0, ptr %55, align 8, !tbaa !85
  %56 = getelementptr inbounds %struct.c_label_vars, ptr %48, i64 0, i32 1, i32 3
  store i8 0, ptr %56, align 4, !tbaa !115
  %57 = getelementptr inbounds %struct.c_label_vars, ptr %48, i64 0, i32 3
  %58 = load ptr, ptr %57, align 8, !tbaa !69
  %59 = icmp eq ptr %58, null
  br i1 %59, label %200, label %60

60:                                               ; preds = %47, %195
  %61 = phi ptr [ %197, %195 ], [ %58, %47 ]
  %62 = phi i32 [ %196, %195 ], [ 0, %47 ]
  %63 = load i32, ptr %61, align 8, !tbaa !70
  %64 = icmp ugt i32 %63, %62
  br i1 %64, label %65, label %199

65:                                               ; preds = %60
  %66 = zext i32 %62 to i64
  %67 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %61, i64 0, i32 2, i64 %66
  %68 = load ptr, ptr %67, align 8, !tbaa !5
  %69 = getelementptr inbounds %struct.c_goto_bindings, ptr %68, i64 0, i32 1
  %70 = load ptr, ptr %69, align 8, !tbaa !118
  %71 = getelementptr inbounds %struct.c_scope, ptr %70, i64 0, i32 2
  %72 = getelementptr inbounds %struct.c_goto_bindings, ptr %68, i64 0, i32 1, i32 1
  %73 = load ptr, ptr %71, align 8, !tbaa !5
  %74 = load ptr, ptr %72, align 8, !tbaa !119
  %75 = icmp eq ptr %73, %74
  br i1 %75, label %124, label %76

76:                                               ; preds = %65, %117
  %77 = phi ptr [ %119, %117 ], [ %73, %65 ]
  %78 = getelementptr inbounds %struct.c_binding, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %78, align 8, !tbaa !32
  %80 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %81 = icmp eq ptr %80, %79
  br i1 %81, label %117, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %struct.tree_common, ptr %79, i64 0, i32 2
  %84 = load ptr, ptr %83, align 8, !tbaa !16
  %85 = icmp eq ptr %84, %80
  br i1 %85, label %117, label %86

86:                                               ; preds = %82
  %87 = load i64, ptr %79, align 8
  %88 = trunc i64 %87 to i16
  switch i16 %88, label %92 [
    i16 32, label %89
    i16 35, label %89
  ]

89:                                               ; preds = %86, %86
  %90 = tail call zeroext i8 @variably_modified_type_p(ptr noundef %84, ptr noundef null) #24
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %103

92:                                               ; preds = %89, %86
  %93 = load i32, ptr @warn_jump_misses_init, align 4, !tbaa !20
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %117, label %95

95:                                               ; preds = %92
  %96 = load i64, ptr %79, align 8
  %97 = and i64 %96, 67174399
  %98 = icmp eq i64 %97, 32
  br i1 %98, label %99, label %117

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.tree_decl_common, ptr %79, i64 0, i32 5
  %101 = load ptr, ptr %100, align 8, !tbaa !16
  %102 = icmp eq ptr %101, null
  br i1 %102, label %117, label %103

103:                                              ; preds = %99, %89
  %104 = load i32, ptr %68, align 8, !tbaa !114
  %105 = load ptr, ptr %78, align 8, !tbaa !32
  %106 = getelementptr inbounds %struct.tree_common, ptr %105, i64 0, i32 2
  %107 = load ptr, ptr %106, align 8, !tbaa !16
  %108 = tail call zeroext i8 @variably_modified_type_p(ptr noundef %107, ptr noundef null) #24
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %103
  tail call void (i32, ptr, ...) @error_at(i32 noundef %104, ptr noundef nonnull @.str.260) #24
  br label %113

111:                                              ; preds = %103
  %112 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %104, i32 noundef 119, ptr noundef nonnull @.str.261) #24
  br label %113

113:                                              ; preds = %111, %110
  %114 = load i32, ptr %49, align 8, !tbaa !16
  tail call void (i32, ptr, ...) @inform(i32 noundef %114, ptr noundef nonnull @.str.21, ptr noundef nonnull %9) #24
  %115 = getelementptr inbounds %struct.tree_decl_minimal, ptr %105, i64 0, i32 1
  %116 = load i32, ptr %115, align 8, !tbaa !16
  tail call void (i32, ptr, ...) @inform(i32 noundef %116, ptr noundef nonnull @.str.28, ptr noundef nonnull %105) #24
  br label %117

117:                                              ; preds = %113, %99, %95, %92, %82, %76
  %118 = getelementptr inbounds %struct.c_binding, ptr %77, i64 0, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !5
  %120 = load ptr, ptr %72, align 8, !tbaa !119
  %121 = icmp eq ptr %119, %120
  br i1 %121, label %122, label %76, !llvm.loop !120

122:                                              ; preds = %117
  %123 = load ptr, ptr %69, align 8, !tbaa !118
  br label %124

124:                                              ; preds = %122, %65
  %125 = phi ptr [ %123, %122 ], [ %70, %65 ]
  %126 = load ptr, ptr %50, align 8, !tbaa !5
  %127 = icmp eq ptr %126, %125
  br i1 %127, label %188, label %132

128:                                              ; preds = %184, %136
  %129 = load ptr, ptr %133, align 8, !tbaa !5
  %130 = load ptr, ptr %69, align 8, !tbaa !118
  %131 = icmp eq ptr %129, %130
  br i1 %131, label %188, label %132, !llvm.loop !121

132:                                              ; preds = %124, %128
  %133 = phi ptr [ %129, %128 ], [ %126, %124 ]
  %134 = icmp eq ptr %133, null
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 3170, ptr noundef nonnull @.str.8) #24
  br label %136

136:                                              ; preds = %135, %132
  %137 = load ptr, ptr %50, align 8, !tbaa !113
  %138 = icmp eq ptr %133, %137
  %139 = getelementptr inbounds %struct.c_scope, ptr %133, i64 0, i32 2
  %140 = select i1 %138, ptr %54, ptr %139
  %141 = load ptr, ptr %140, align 8, !tbaa !5
  %142 = icmp eq ptr %141, null
  br i1 %142, label %128, label %143

143:                                              ; preds = %136, %184
  %144 = phi ptr [ %186, %184 ], [ %141, %136 ]
  %145 = getelementptr inbounds %struct.c_binding, ptr %144, i64 0, i32 1
  %146 = load ptr, ptr %145, align 8, !tbaa !32
  %147 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %148 = icmp eq ptr %147, %146
  br i1 %148, label %184, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %struct.tree_common, ptr %146, i64 0, i32 2
  %151 = load ptr, ptr %150, align 8, !tbaa !16
  %152 = icmp eq ptr %151, %147
  br i1 %152, label %184, label %153

153:                                              ; preds = %149
  %154 = load i64, ptr %146, align 8
  %155 = trunc i64 %154 to i16
  switch i16 %155, label %159 [
    i16 32, label %156
    i16 35, label %156
  ]

156:                                              ; preds = %153, %153
  %157 = tail call zeroext i8 @variably_modified_type_p(ptr noundef %151, ptr noundef null) #24
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %159, label %170

159:                                              ; preds = %156, %153
  %160 = load i32, ptr @warn_jump_misses_init, align 4, !tbaa !20
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %184, label %162

162:                                              ; preds = %159
  %163 = load i64, ptr %146, align 8
  %164 = and i64 %163, 67174399
  %165 = icmp eq i64 %164, 32
  br i1 %165, label %166, label %184

166:                                              ; preds = %162
  %167 = getelementptr inbounds %struct.tree_decl_common, ptr %146, i64 0, i32 5
  %168 = load ptr, ptr %167, align 8, !tbaa !16
  %169 = icmp eq ptr %168, null
  br i1 %169, label %184, label %170

170:                                              ; preds = %166, %156
  %171 = load i32, ptr %68, align 8, !tbaa !114
  %172 = load ptr, ptr %145, align 8, !tbaa !32
  %173 = getelementptr inbounds %struct.tree_common, ptr %172, i64 0, i32 2
  %174 = load ptr, ptr %173, align 8, !tbaa !16
  %175 = tail call zeroext i8 @variably_modified_type_p(ptr noundef %174, ptr noundef null) #24
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %178, label %177

177:                                              ; preds = %170
  tail call void (i32, ptr, ...) @error_at(i32 noundef %171, ptr noundef nonnull @.str.260) #24
  br label %180

178:                                              ; preds = %170
  %179 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %171, i32 noundef 119, ptr noundef nonnull @.str.261) #24
  br label %180

180:                                              ; preds = %178, %177
  %181 = load i32, ptr %49, align 8, !tbaa !16
  tail call void (i32, ptr, ...) @inform(i32 noundef %181, ptr noundef nonnull @.str.21, ptr noundef nonnull %9) #24
  %182 = getelementptr inbounds %struct.tree_decl_minimal, ptr %172, i64 0, i32 1
  %183 = load i32, ptr %182, align 8, !tbaa !16
  tail call void (i32, ptr, ...) @inform(i32 noundef %183, ptr noundef nonnull @.str.28, ptr noundef nonnull %172) #24
  br label %184

184:                                              ; preds = %180, %166, %162, %159, %149, %143
  %185 = getelementptr inbounds %struct.c_binding, ptr %144, i64 0, i32 3
  %186 = load ptr, ptr %185, align 8, !tbaa !5
  %187 = icmp eq ptr %186, null
  br i1 %187, label %128, label %143, !llvm.loop !122

188:                                              ; preds = %128, %124
  %189 = getelementptr inbounds %struct.c_goto_bindings, ptr %68, i64 0, i32 1, i32 2
  %190 = load i32, ptr %189, align 8, !tbaa !79
  %191 = icmp sgt i32 %190, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %188
  %193 = load i32, ptr %68, align 8, !tbaa !114
  tail call void (i32, ptr, ...) @error_at(i32 noundef %193, ptr noundef nonnull @.str.20) #24
  %194 = load i32, ptr %49, align 8, !tbaa !16
  tail call void (i32, ptr, ...) @inform(i32 noundef %194, ptr noundef nonnull @.str.21, ptr noundef nonnull %9) #24
  br label %195

195:                                              ; preds = %192, %188
  %196 = add i32 %62, 1
  %197 = load ptr, ptr %57, align 8, !tbaa !69
  %198 = icmp eq ptr %197, null
  br i1 %198, label %200, label %60, !llvm.loop !123

199:                                              ; preds = %60
  store i32 0, ptr %61, align 8, !tbaa !70
  br label %200

200:                                              ; preds = %195, %47, %199
  store ptr null, ptr %57, align 8, !tbaa !69
  br label %222

201:                                              ; preds = %2, %20, %7
  %202 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !5
  %203 = tail call ptr @build_decl_stat(i32 noundef %0, i32 noundef 30, ptr noundef nonnull %1, ptr noundef %202) #24
  %204 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %205 = getelementptr inbounds %struct.tree_decl_minimal, ptr %203, i64 0, i32 4
  store ptr %204, ptr %205, align 8, !tbaa !16
  %206 = getelementptr inbounds %struct.tree_decl_common, ptr %203, i64 0, i32 2
  %207 = load i64, ptr %206, align 8
  %208 = and i64 %207, -256
  store i64 %208, ptr %206, align 8
  %209 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  store ptr null, ptr %209, align 8, !tbaa !112
  %210 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %211 = getelementptr inbounds %struct.c_scope, ptr %210, i64 0, i32 2
  %212 = load ptr, ptr %211, align 8, !tbaa !48
  %213 = getelementptr inbounds %struct.c_label_vars, ptr %209, i64 0, i32 1
  store ptr %210, ptr %213, align 8
  %214 = getelementptr inbounds %struct.c_label_vars, ptr %209, i64 0, i32 1, i32 1
  store ptr %212, ptr %214, align 8
  %215 = getelementptr inbounds %struct.c_label_vars, ptr %209, i64 0, i32 1, i32 2
  store i32 0, ptr %215, align 8, !tbaa !85
  %216 = getelementptr inbounds %struct.c_label_vars, ptr %209, i64 0, i32 1, i32 3
  store i8 0, ptr %216, align 4, !tbaa !115
  %217 = tail call ptr @make_tree_vector() #24
  %218 = getelementptr inbounds %struct.c_label_vars, ptr %209, i64 0, i32 2
  store ptr %217, ptr %218, align 8, !tbaa !53
  %219 = tail call ptr @vec_gc_p_reserve_exact(ptr noundef null, i32 noundef 0) #24
  %220 = getelementptr inbounds %struct.c_label_vars, ptr %209, i64 0, i32 3
  store ptr %219, ptr %220, align 8, !tbaa !69
  %221 = load ptr, ptr @current_function_scope, align 8, !tbaa !5
  tail call fastcc void @bind_label(ptr noundef nonnull %1, ptr noundef %203, ptr noundef %221, ptr noundef nonnull %209)
  br label %222

222:                                              ; preds = %200, %201
  %223 = phi ptr [ %9, %200 ], [ %203, %201 ]
  %224 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %3, i32 noundef %224) #24
  %225 = getelementptr inbounds %struct.expanded_location, ptr %3, i64 0, i32 3
  %226 = load i8, ptr %225, align 8, !tbaa !57
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %228, label %243

228:                                              ; preds = %222
  %229 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 1
  %230 = load ptr, ptr %229, align 8, !tbaa !25
  %231 = icmp eq ptr %230, null
  br i1 %231, label %243, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %struct.c_binding, ptr %230, i64 0, i32 5
  %234 = load i32, ptr %233, align 8
  %235 = and i32 %234, 268435456
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %243

237:                                              ; preds = %232
  %238 = getelementptr inbounds %struct.c_binding, ptr %230, i64 0, i32 1
  %239 = load ptr, ptr %238, align 8, !tbaa !32
  %240 = icmp eq ptr %239, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %237
  %242 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 202, ptr noundef nonnull @.str.24, ptr noundef nonnull %1) #24
  br label %243

243:                                              ; preds = %228, %232, %241, %237, %222
  %244 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %245 = getelementptr inbounds %struct.tree_decl_common, ptr %223, i64 0, i32 5
  store ptr %244, ptr %245, align 8, !tbaa !16
  br label %246

246:                                              ; preds = %46, %45, %37, %28, %243
  %247 = phi ptr [ %223, %243 ], [ null, %28 ], [ null, %37 ], [ null, %45 ], [ null, %46 ]
  ret ptr %247
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @lookup_name(ptr nocapture noundef readonly %0) local_unnamed_addr #14 {
  %2 = getelementptr inbounds %struct.lang_identifier, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !25
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.c_binding, ptr %3, i64 0, i32 5
  %7 = load i32, ptr %6, align 8
  %8 = and i32 %7, 268435456
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.c_binding, ptr %3, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !32
  br label %13

13:                                               ; preds = %1, %5, %10
  %14 = phi ptr [ %12, %10 ], [ null, %5 ], [ null, %1 ]
  ret ptr %14
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_get_switch_bindings() local_unnamed_addr #9 {
  %1 = tail call ptr @xmalloc(i64 noundef 24) #24
  %2 = load ptr, ptr @current_scope, align 8, !tbaa !5
  store ptr %2, ptr %1, align 8, !tbaa !63
  %3 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.c_scope, ptr %3, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !48
  %6 = getelementptr inbounds %struct.c_spot_bindings, ptr %1, i64 0, i32 1
  store ptr %5, ptr %6, align 8
  %7 = getelementptr inbounds %struct.c_spot_bindings, ptr %1, i64 0, i32 2
  store i32 0, ptr %7, align 8, !tbaa !85
  %8 = getelementptr inbounds %struct.c_spot_bindings, ptr %1, i64 0, i32 3
  store i8 0, ptr %8, align 4, !tbaa !115
  ret ptr %1
}

declare ptr @xmalloc(i64 noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @c_release_switch_bindings(ptr nocapture noundef %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.c_spot_bindings, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 8, !tbaa !85
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.c_spot_bindings, ptr %0, i64 0, i32 3
  %7 = load i8, ptr %6, align 4, !tbaa !115
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %5, %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 3271, ptr noundef nonnull @.str.8) #24
  br label %10

10:                                               ; preds = %5, %9
  tail call void @free(ptr noundef nonnull %0)
  ret void
}

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) #17

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @c_check_switch_jump_warnings(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 {
  %4 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %5 = load ptr, ptr %0, align 8, !tbaa !63
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %68, label %12

7:                                                ; preds = %63, %17
  %8 = phi i8 [ %14, %17 ], [ %64, %63 ]
  %9 = load ptr, ptr %13, align 8, !tbaa !5
  %10 = load ptr, ptr %0, align 8, !tbaa !63
  %11 = icmp eq ptr %9, %10
  br i1 %11, label %68, label %12, !llvm.loop !124

12:                                               ; preds = %3, %7
  %13 = phi ptr [ %9, %7 ], [ %4, %3 ]
  %14 = phi i8 [ %8, %7 ], [ 0, %3 ]
  %15 = icmp eq ptr %13, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 3293, ptr noundef nonnull @.str.8) #24
  br label %17

17:                                               ; preds = %12, %16
  %18 = getelementptr inbounds %struct.c_scope, ptr %13, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !5
  %20 = icmp eq ptr %19, null
  br i1 %20, label %7, label %21

21:                                               ; preds = %17, %63
  %22 = phi ptr [ %66, %63 ], [ %19, %17 ]
  %23 = phi i8 [ %64, %63 ], [ %14, %17 ]
  %24 = getelementptr inbounds %struct.c_binding, ptr %22, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !32
  %26 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %27 = icmp eq ptr %26, %25
  br i1 %27, label %63, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.tree_common, ptr %25, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !16
  %31 = icmp eq ptr %30, %26
  br i1 %31, label %63, label %32

32:                                               ; preds = %28
  %33 = load i64, ptr %25, align 8
  %34 = trunc i64 %33 to i16
  switch i16 %34, label %38 [
    i16 32, label %35
    i16 35, label %35
  ]

35:                                               ; preds = %32, %32
  %36 = tail call zeroext i8 @variably_modified_type_p(ptr noundef %30, ptr noundef null) #24
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %49

38:                                               ; preds = %35, %32
  %39 = load i32, ptr @warn_jump_misses_init, align 4, !tbaa !20
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %63, label %41

41:                                               ; preds = %38
  %42 = load i64, ptr %25, align 8
  %43 = and i64 %42, 67174399
  %44 = icmp eq i64 %43, 32
  br i1 %44, label %45, label %63

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.tree_decl_common, ptr %25, i64 0, i32 5
  %47 = load ptr, ptr %46, align 8, !tbaa !16
  %48 = icmp eq ptr %47, null
  br i1 %48, label %63, label %49

49:                                               ; preds = %45, %35
  %50 = load ptr, ptr %24, align 8, !tbaa !32
  %51 = getelementptr inbounds %struct.tree_common, ptr %50, i64 0, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !16
  %53 = tail call zeroext i8 @variably_modified_type_p(ptr noundef %52, ptr noundef null) #24
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %49
  tail call void (i32, ptr, ...) @error_at(i32 noundef %2, ptr noundef nonnull @.str.25) #24
  br label %58

56:                                               ; preds = %49
  %57 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %2, i32 noundef 119, ptr noundef nonnull @.str.26) #24
  br label %58

58:                                               ; preds = %56, %55
  %59 = phi i8 [ 1, %55 ], [ %23, %56 ]
  tail call void (i32, ptr, ...) @inform(i32 noundef %1, ptr noundef nonnull @.str.27) #24
  %60 = load ptr, ptr %24, align 8, !tbaa !32
  %61 = getelementptr inbounds %struct.tree_decl_minimal, ptr %60, i64 0, i32 1
  %62 = load i32, ptr %61, align 8, !tbaa !16
  tail call void (i32, ptr, ...) @inform(i32 noundef %62, ptr noundef nonnull @.str.28, ptr noundef %60) #24
  br label %63

63:                                               ; preds = %38, %41, %45, %21, %28, %58
  %64 = phi i8 [ %59, %58 ], [ %23, %28 ], [ %23, %21 ], [ %23, %45 ], [ %23, %41 ], [ %23, %38 ]
  %65 = getelementptr inbounds %struct.c_binding, ptr %22, i64 0, i32 3
  %66 = load ptr, ptr %65, align 8, !tbaa !5
  %67 = icmp eq ptr %66, null
  br i1 %67, label %7, label %21, !llvm.loop !125

68:                                               ; preds = %7, %3
  %69 = phi i8 [ 0, %3 ], [ %8, %7 ]
  %70 = getelementptr inbounds %struct.c_spot_bindings, ptr %0, i64 0, i32 2
  %71 = load i32, ptr %70, align 8, !tbaa !85
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %68
  tail call void (i32, ptr, ...) @error_at(i32 noundef %2, ptr noundef nonnull @.str.29) #24
  tail call void (i32, ptr, ...) @inform(i32 noundef %1, ptr noundef nonnull @.str.27) #24
  br label %74

74:                                               ; preds = %73, %68
  %75 = phi i8 [ 1, %73 ], [ %69, %68 ]
  ret i8 %75
}

declare zeroext i8 @variably_modified_type_p(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @pending_xref_error() local_unnamed_addr #9 {
  %1 = load ptr, ptr @pending_invalid_xref, align 8, !tbaa !5
  %2 = icmp eq ptr %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  %4 = load i32, ptr @pending_invalid_xref_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @error_at(i32 noundef %4, ptr noundef nonnull @.str.30, ptr noundef nonnull %1) #24
  br label %5

5:                                                ; preds = %3, %0
  store ptr null, ptr @pending_invalid_xref, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @c_init_decl_processing() local_unnamed_addr #9 {
  %1 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call void @c_parse_init() #24
  store ptr null, ptr @current_function_decl, align 8, !tbaa !5
  %2 = tail call i32 @_obstack_begin(ptr noundef nonnull @parser_obstack, i32 noundef 0, i32 noundef 0, ptr noundef nonnull @xmalloc, ptr noundef nonnull @free) #24
  tail call void @push_scope()
  %3 = load ptr, ptr @current_scope, align 8, !tbaa !5
  store ptr %3, ptr @external_scope, align 8, !tbaa !5
  store i32 1, ptr @input_location, align 4, !tbaa !20
  %4 = load i32, ptr @flag_signed_char, align 4, !tbaa !20
  %5 = trunc i32 %4 to i8
  tail call void @build_common_tree_nodes(i8 noundef zeroext %5, i8 noundef zeroext 0) #24
  tail call void @c_common_nodes_and_builtins() #24
  %6 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  store ptr %6, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 45), align 8, !tbaa !5
  %7 = load <2 x ptr>, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 13), align 8, !tbaa !5
  %8 = shufflevector <2 x ptr> %7, <2 x ptr> poison, <2 x i32> <i32 1, i32 0>
  store <2 x ptr> %8, ptr getelementptr inbounds ([55 x ptr], ptr @c_global_trees, i64 0, i64 46), align 16, !tbaa !5
  %9 = tail call ptr @get_identifier(ptr noundef nonnull @.str.31) #24
  %10 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !5
  %11 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef %9, ptr noundef %10) #24
  %12 = tail call ptr @pushdecl(ptr noundef %11)
  store i32 %1, ptr @input_location, align 4, !tbaa !20
  store i32 1, ptr @pedantic_lvalues, align 4, !tbaa !20
  store ptr @c_make_fname_decl, ptr @make_fname_decl, align 8, !tbaa !5
  tail call void @start_fname_decls() #24
  ret void
}

declare void @c_parse_init() local_unnamed_addr #3

declare i32 @_obstack_begin(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @build_common_tree_nodes(i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #3

declare void @c_common_nodes_and_builtins() local_unnamed_addr #3

declare ptr @get_identifier(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal ptr @c_make_fname_decl(i32 noundef %0, ptr noundef %1, i32 noundef %2) #9 {
  %4 = tail call ptr @fname_as_string(i32 noundef %2) #24
  %5 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %4)
  %6 = load ptr, ptr @integer_types, align 16, !tbaa !5
  %7 = tail call ptr @size_int_kind(i64 noundef %5, i32 noundef 0) #24
  %8 = tail call ptr @build_index_type(ptr noundef %7) #24
  %9 = tail call ptr @build_array_type(ptr noundef %6, ptr noundef %8) #24
  %10 = tail call ptr @c_build_qualified_type(ptr noundef %9, i32 noundef 1) #24
  %11 = tail call ptr @build_decl_stat(i32 noundef %0, i32 noundef 32, ptr noundef %1, ptr noundef %10) #24
  %12 = load i64, ptr %11, align 8
  %13 = or i64 %12, 68157440
  store i64 %13, ptr %11, align 8
  %14 = getelementptr inbounds %struct.tree_decl_common, ptr %11, i64 0, i32 2
  %15 = load i64, ptr %14, align 8
  %16 = or i64 %15, 4096
  store i64 %16, ptr %14, align 8
  %17 = trunc i64 %5 to i32
  %18 = add i32 %17, 1
  %19 = tail call ptr @build_string(i32 noundef %18, ptr noundef %4) #24
  tail call void @free(ptr noundef %4)
  %20 = getelementptr inbounds %struct.tree_common, ptr %19, i64 0, i32 2
  store ptr %10, ptr %20, align 8, !tbaa !16
  %21 = getelementptr inbounds %struct.tree_decl_common, ptr %11, i64 0, i32 5
  store ptr %19, ptr %21, align 8, !tbaa !16
  %22 = load i64, ptr %11, align 8
  %23 = or i64 %22, 16777216
  store i64 %23, ptr %11, align 8
  %24 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %25 = icmp eq ptr %24, null
  br i1 %25, label %96, label %26

26:                                               ; preds = %3
  %27 = load ptr, ptr @global_dc, align 8, !tbaa !5
  %28 = getelementptr inbounds %struct.diagnostic_context, ptr %27, i64 0, i32 1, i64 4
  %29 = load i32, ptr %28, align 8, !tbaa !20
  %30 = icmp eq i32 %29, 0
  %31 = load ptr, ptr @current_function_scope, align 8
  %32 = icmp ne ptr %31, null
  %33 = select i1 %30, i1 true, i1 %32
  br i1 %33, label %34, label %96

34:                                               ; preds = %26
  %35 = getelementptr inbounds %struct.tree_decl_minimal, ptr %11, i64 0, i32 4
  store ptr %24, ptr %35, align 8, !tbaa !16
  %36 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %37 = icmp eq ptr %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.c_binding, ptr %36, i64 0, i32 3
  %40 = load ptr, ptr %39, align 8, !tbaa !60
  store ptr %40, ptr @binding_freelist, align 8, !tbaa !5
  br label %43

41:                                               ; preds = %34
  %42 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %43

43:                                               ; preds = %41, %38
  %44 = phi ptr [ %36, %38 ], [ %42, %41 ]
  %45 = getelementptr inbounds %struct.c_binding, ptr %44, i64 0, i32 4
  store ptr null, ptr %45, align 8, !tbaa !52
  %46 = getelementptr inbounds %struct.c_binding, ptr %44, i64 0, i32 1
  store ptr %11, ptr %46, align 8, !tbaa !32
  %47 = getelementptr inbounds %struct.c_binding, ptr %44, i64 0, i32 2
  store ptr %1, ptr %47, align 8, !tbaa !51
  %48 = getelementptr inbounds %struct.c_scope, ptr %31, i64 0, i32 5
  %49 = load i64, ptr %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = and i32 %50, 268435455
  %52 = getelementptr inbounds %struct.c_binding, ptr %44, i64 0, i32 5
  store i32 %51, ptr %52, align 8
  %53 = getelementptr inbounds %struct.c_binding, ptr %44, i64 0, i32 6
  store i32 0, ptr %53, align 4, !tbaa !59
  store ptr null, ptr %44, align 8, !tbaa !16
  %54 = getelementptr inbounds %struct.c_scope, ptr %31, i64 0, i32 2
  %55 = load ptr, ptr %54, align 8, !tbaa !48
  %56 = getelementptr inbounds %struct.c_binding, ptr %44, i64 0, i32 3
  store ptr %55, ptr %56, align 8, !tbaa !60
  store ptr %44, ptr %54, align 8, !tbaa !48
  %57 = icmp eq ptr %1, null
  br i1 %57, label %96, label %58

58:                                               ; preds = %43
  %59 = load i64, ptr %11, align 8
  %60 = trunc i64 %59 to i16
  switch i16 %60, label %67 [
    i16 30, label %61
    i16 6, label %63
    i16 17, label %63
    i16 16, label %63
    i16 32, label %65
    i16 29, label %65
    i16 35, label %65
    i16 33, label %65
    i16 34, label %65
    i16 0, label %65
  ]

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 3
  br label %68

63:                                               ; preds = %58, %58, %58
  %64 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 2
  br label %68

65:                                               ; preds = %58, %58, %58, %58, %58, %58
  %66 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 1
  br label %68

67:                                               ; preds = %58
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %68

68:                                               ; preds = %67, %65, %63, %61
  %69 = phi ptr [ undef, %67 ], [ %66, %65 ], [ %64, %63 ], [ %62, %61 ]
  %70 = load ptr, ptr %69, align 8, !tbaa !5
  %71 = icmp eq ptr %70, null
  br i1 %71, label %93, label %72

72:                                               ; preds = %68
  %73 = load i64, ptr %48, align 8
  %74 = trunc i64 %73 to i32
  %75 = and i32 %74, 268435455
  %76 = getelementptr inbounds %struct.c_binding, ptr %70, i64 0, i32 5
  %77 = load i32, ptr %76, align 8
  %78 = and i32 %77, 268435455
  %79 = icmp ugt i32 %78, %75
  br i1 %79, label %85, label %93

80:                                               ; preds = %85
  %81 = getelementptr inbounds %struct.c_binding, ptr %88, i64 0, i32 5
  %82 = load i32, ptr %81, align 8
  %83 = and i32 %82, 268435455
  %84 = icmp ugt i32 %83, %75
  br i1 %84, label %85, label %90, !llvm.loop !74

85:                                               ; preds = %72, %80
  %86 = phi ptr [ %88, %80 ], [ %70, %72 ]
  %87 = getelementptr inbounds %struct.c_binding, ptr %86, i64 0, i32 4
  %88 = load ptr, ptr %87, align 8, !tbaa !5
  %89 = icmp eq ptr %88, null
  br i1 %89, label %90, label %80, !llvm.loop !74

90:                                               ; preds = %85, %80
  %91 = phi ptr [ %88, %80 ], [ null, %85 ]
  %92 = getelementptr inbounds %struct.c_binding, ptr %86, i64 0, i32 4
  br label %93

93:                                               ; preds = %90, %72, %68
  %94 = phi ptr [ %69, %68 ], [ %69, %72 ], [ %92, %90 ]
  %95 = phi ptr [ null, %68 ], [ %70, %72 ], [ %91, %90 ]
  store ptr %95, ptr %45, align 8, !tbaa !52
  store ptr %44, ptr %94, align 8, !tbaa !5
  br label %96

96:                                               ; preds = %93, %43, %26, %3
  tail call void @finish_decl(ptr noundef nonnull %11, i32 noundef %0, ptr noundef %19, ptr noundef null, ptr noundef null)
  ret ptr %11
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_builtin_function(ptr noundef returned %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !16
  %4 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !16
  %6 = getelementptr inbounds %struct.tree_identifier, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !16
  %8 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !16
  %10 = icmp eq ptr %9, null
  %11 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %12 = load i64, ptr %11, align 8
  %13 = select i1 %10, i64 0, i64 2097152
  %14 = and i64 %12, -2097153
  %15 = or i64 %14, %13
  store i64 %15, ptr %11, align 8
  %16 = getelementptr inbounds %struct.lang_identifier, ptr %5, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !25
  %18 = icmp eq ptr %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 3532, ptr noundef nonnull @.str.8) #24
  br label %20

20:                                               ; preds = %1, %19
  %21 = load ptr, ptr @external_scope, align 8, !tbaa !5
  %22 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %23 = icmp eq ptr %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.c_binding, ptr %22, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !60
  store ptr %26, ptr @binding_freelist, align 8, !tbaa !5
  br label %29

27:                                               ; preds = %20
  %28 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %29

29:                                               ; preds = %24, %27
  %30 = phi ptr [ %22, %24 ], [ %28, %27 ]
  %31 = getelementptr inbounds %struct.c_binding, ptr %30, i64 0, i32 4
  store ptr null, ptr %31, align 8, !tbaa !52
  %32 = getelementptr inbounds %struct.c_binding, ptr %30, i64 0, i32 1
  store ptr %0, ptr %32, align 8, !tbaa !32
  %33 = getelementptr inbounds %struct.c_binding, ptr %30, i64 0, i32 2
  store ptr %5, ptr %33, align 8, !tbaa !51
  %34 = getelementptr inbounds %struct.c_scope, ptr %21, i64 0, i32 5
  %35 = load i64, ptr %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = and i32 %36, 268435455
  %38 = getelementptr inbounds %struct.c_binding, ptr %30, i64 0, i32 5
  %39 = or i32 %37, 268435456
  store i32 %39, ptr %38, align 8
  %40 = getelementptr inbounds %struct.c_binding, ptr %30, i64 0, i32 6
  store i32 0, ptr %40, align 4, !tbaa !59
  store ptr null, ptr %30, align 8, !tbaa !16
  %41 = getelementptr inbounds %struct.c_scope, ptr %21, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !48
  %43 = getelementptr inbounds %struct.c_binding, ptr %30, i64 0, i32 3
  store ptr %42, ptr %43, align 8, !tbaa !60
  store ptr %30, ptr %41, align 8, !tbaa !48
  %44 = load i64, ptr %0, align 8
  %45 = trunc i64 %44 to i16
  switch i16 %45, label %50 [
    i16 30, label %46
    i16 6, label %48
    i16 17, label %48
    i16 16, label %48
    i16 32, label %51
    i16 29, label %51
    i16 35, label %51
    i16 33, label %51
    i16 34, label %51
    i16 0, label %51
  ]

46:                                               ; preds = %29
  %47 = getelementptr inbounds %struct.lang_identifier, ptr %5, i64 0, i32 3
  br label %51

48:                                               ; preds = %29, %29, %29
  %49 = getelementptr inbounds %struct.lang_identifier, ptr %5, i64 0, i32 2
  br label %51

50:                                               ; preds = %29
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %51

51:                                               ; preds = %29, %29, %29, %29, %29, %29, %50, %48, %46
  %52 = phi ptr [ undef, %50 ], [ %49, %48 ], [ %47, %46 ], [ %16, %29 ], [ %16, %29 ], [ %16, %29 ], [ %16, %29 ], [ %16, %29 ], [ %16, %29 ]
  %53 = load ptr, ptr %52, align 8, !tbaa !5
  %54 = icmp eq ptr %53, null
  br i1 %54, label %76, label %55

55:                                               ; preds = %51
  %56 = load i64, ptr %34, align 8
  %57 = trunc i64 %56 to i32
  %58 = and i32 %57, 268435455
  %59 = getelementptr inbounds %struct.c_binding, ptr %53, i64 0, i32 5
  %60 = load i32, ptr %59, align 8
  %61 = and i32 %60, 268435455
  %62 = icmp ugt i32 %61, %58
  br i1 %62, label %68, label %76

63:                                               ; preds = %68
  %64 = getelementptr inbounds %struct.c_binding, ptr %71, i64 0, i32 5
  %65 = load i32, ptr %64, align 8
  %66 = and i32 %65, 268435455
  %67 = icmp ugt i32 %66, %58
  br i1 %67, label %68, label %73, !llvm.loop !74

68:                                               ; preds = %55, %63
  %69 = phi ptr [ %71, %63 ], [ %53, %55 ]
  %70 = getelementptr inbounds %struct.c_binding, ptr %69, i64 0, i32 4
  %71 = load ptr, ptr %70, align 8, !tbaa !5
  %72 = icmp eq ptr %71, null
  br i1 %72, label %73, label %63, !llvm.loop !74

73:                                               ; preds = %63, %68
  %74 = phi ptr [ null, %68 ], [ %71, %63 ]
  %75 = getelementptr inbounds %struct.c_binding, ptr %69, i64 0, i32 4
  br label %76

76:                                               ; preds = %73, %55, %51
  %77 = phi ptr [ %52, %51 ], [ %52, %55 ], [ %75, %73 ]
  %78 = phi ptr [ null, %51 ], [ %53, %55 ], [ %74, %73 ]
  store ptr %78, ptr %31, align 8, !tbaa !52
  store ptr %30, ptr %77, align 8, !tbaa !5
  %79 = load i8, ptr %7, align 1, !tbaa !16
  %80 = icmp eq i8 %79, 95
  br i1 %80, label %81, label %94

81:                                               ; preds = %76
  %82 = getelementptr inbounds i8, ptr %7, i64 1
  %83 = load i8, ptr %82, align 1, !tbaa !16
  %84 = icmp eq i8 %83, 95
  br i1 %84, label %91, label %85

85:                                               ; preds = %81
  %86 = zext i8 %83 to i64
  %87 = getelementptr inbounds [256 x i16], ptr @_sch_istable, i64 0, i64 %86
  %88 = load i16, ptr %87, align 2, !tbaa !126
  %89 = and i16 %88, 128
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %85, %81
  %92 = load ptr, ptr @visible_builtins, align 8, !tbaa !5
  %93 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 1
  store ptr %92, ptr %93, align 8, !tbaa !16
  store ptr %0, ptr @visible_builtins, align 8, !tbaa !5
  br label %94

94:                                               ; preds = %91, %85, %76
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @c_builtin_function_ext_scope(ptr noundef returned %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !16
  %4 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !16
  %6 = getelementptr inbounds %struct.tree_identifier, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !16
  %8 = getelementptr inbounds %struct.tree_type, ptr %3, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !16
  %10 = icmp eq ptr %9, null
  %11 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %12 = load i64, ptr %11, align 8
  %13 = select i1 %10, i64 0, i64 2097152
  %14 = and i64 %12, -2097153
  %15 = or i64 %14, %13
  store i64 %15, ptr %11, align 8
  %16 = getelementptr inbounds %struct.lang_identifier, ptr %5, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !25
  %18 = icmp eq ptr %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 3558, ptr noundef nonnull @.str.8) #24
  br label %20

20:                                               ; preds = %1, %19
  %21 = load ptr, ptr @external_scope, align 8, !tbaa !5
  %22 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %23 = icmp eq ptr %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.c_binding, ptr %22, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !60
  store ptr %26, ptr @binding_freelist, align 8, !tbaa !5
  br label %29

27:                                               ; preds = %20
  %28 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %29

29:                                               ; preds = %24, %27
  %30 = phi ptr [ %22, %24 ], [ %28, %27 ]
  %31 = getelementptr inbounds %struct.c_binding, ptr %30, i64 0, i32 4
  store ptr null, ptr %31, align 8, !tbaa !52
  %32 = getelementptr inbounds %struct.c_binding, ptr %30, i64 0, i32 1
  store ptr %0, ptr %32, align 8, !tbaa !32
  %33 = getelementptr inbounds %struct.c_binding, ptr %30, i64 0, i32 2
  store ptr %5, ptr %33, align 8, !tbaa !51
  %34 = getelementptr inbounds %struct.c_scope, ptr %21, i64 0, i32 5
  %35 = load i64, ptr %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = and i32 %36, 268435455
  %38 = getelementptr inbounds %struct.c_binding, ptr %30, i64 0, i32 5
  store i32 %37, ptr %38, align 8
  %39 = getelementptr inbounds %struct.c_binding, ptr %30, i64 0, i32 6
  store i32 0, ptr %39, align 4, !tbaa !59
  store ptr null, ptr %30, align 8, !tbaa !16
  %40 = getelementptr inbounds %struct.c_scope, ptr %21, i64 0, i32 2
  %41 = load ptr, ptr %40, align 8, !tbaa !48
  %42 = getelementptr inbounds %struct.c_binding, ptr %30, i64 0, i32 3
  store ptr %41, ptr %42, align 8, !tbaa !60
  store ptr %30, ptr %40, align 8, !tbaa !48
  %43 = load i64, ptr %0, align 8
  %44 = trunc i64 %43 to i16
  switch i16 %44, label %49 [
    i16 30, label %45
    i16 6, label %47
    i16 17, label %47
    i16 16, label %47
    i16 32, label %50
    i16 29, label %50
    i16 35, label %50
    i16 33, label %50
    i16 34, label %50
    i16 0, label %50
  ]

45:                                               ; preds = %29
  %46 = getelementptr inbounds %struct.lang_identifier, ptr %5, i64 0, i32 3
  br label %50

47:                                               ; preds = %29, %29, %29
  %48 = getelementptr inbounds %struct.lang_identifier, ptr %5, i64 0, i32 2
  br label %50

49:                                               ; preds = %29
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %50

50:                                               ; preds = %29, %29, %29, %29, %29, %29, %49, %47, %45
  %51 = phi ptr [ undef, %49 ], [ %48, %47 ], [ %46, %45 ], [ %16, %29 ], [ %16, %29 ], [ %16, %29 ], [ %16, %29 ], [ %16, %29 ], [ %16, %29 ]
  %52 = load ptr, ptr %51, align 8, !tbaa !5
  %53 = icmp eq ptr %52, null
  br i1 %53, label %75, label %54

54:                                               ; preds = %50
  %55 = load i64, ptr %34, align 8
  %56 = trunc i64 %55 to i32
  %57 = and i32 %56, 268435455
  %58 = getelementptr inbounds %struct.c_binding, ptr %52, i64 0, i32 5
  %59 = load i32, ptr %58, align 8
  %60 = and i32 %59, 268435455
  %61 = icmp ugt i32 %60, %57
  br i1 %61, label %67, label %75

62:                                               ; preds = %67
  %63 = getelementptr inbounds %struct.c_binding, ptr %70, i64 0, i32 5
  %64 = load i32, ptr %63, align 8
  %65 = and i32 %64, 268435455
  %66 = icmp ugt i32 %65, %57
  br i1 %66, label %67, label %72, !llvm.loop !74

67:                                               ; preds = %54, %62
  %68 = phi ptr [ %70, %62 ], [ %52, %54 ]
  %69 = getelementptr inbounds %struct.c_binding, ptr %68, i64 0, i32 4
  %70 = load ptr, ptr %69, align 8, !tbaa !5
  %71 = icmp eq ptr %70, null
  br i1 %71, label %72, label %62, !llvm.loop !74

72:                                               ; preds = %62, %67
  %73 = phi ptr [ null, %67 ], [ %70, %62 ]
  %74 = getelementptr inbounds %struct.c_binding, ptr %68, i64 0, i32 4
  br label %75

75:                                               ; preds = %72, %54, %50
  %76 = phi ptr [ %51, %50 ], [ %51, %54 ], [ %74, %72 ]
  %77 = phi ptr [ null, %50 ], [ %52, %54 ], [ %73, %72 ]
  store ptr %77, ptr %31, align 8, !tbaa !52
  store ptr %30, ptr %76, align 8, !tbaa !5
  %78 = load i8, ptr %7, align 1, !tbaa !16
  %79 = icmp eq i8 %78, 95
  br i1 %79, label %80, label %93

80:                                               ; preds = %75
  %81 = getelementptr inbounds i8, ptr %7, i64 1
  %82 = load i8, ptr %81, align 1, !tbaa !16
  %83 = icmp eq i8 %82, 95
  br i1 %83, label %90, label %84

84:                                               ; preds = %80
  %85 = zext i8 %82 to i64
  %86 = getelementptr inbounds [256 x i16], ptr @_sch_istable, i64 0, i64 %85
  %87 = load i16, ptr %86, align 2, !tbaa !126
  %88 = and i16 %87, 128
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %84, %80
  %91 = load ptr, ptr @visible_builtins, align 8, !tbaa !5
  %92 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 1
  store ptr %91, ptr %92, align 8, !tbaa !16
  store ptr %0, ptr @visible_builtins, align 8, !tbaa !5
  br label %93

93:                                               ; preds = %90, %84, %75
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @shadow_tag(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  tail call void @shadow_tag_warned(ptr noundef %0, i32 noundef 0)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @shadow_tag_warned(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = alloca %struct.expanded_location, align 8
  %4 = alloca %struct.expanded_location, align 8
  %5 = alloca %struct.expanded_location, align 8
  %6 = alloca %struct.expanded_location, align 8
  %7 = alloca %struct.expanded_location, align 8
  %8 = load ptr, ptr %0, align 8, !tbaa !127
  %9 = icmp eq ptr %8, null
  br i1 %9, label %97, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 7
  %12 = load i32, ptr %11, align 4, !tbaa !129
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %97

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 6
  %16 = load i8, ptr %15, align 8
  %17 = and i8 %16, 16
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %97

19:                                               ; preds = %14
  %20 = load i64, ptr %8, align 8
  %21 = trunc i64 %20 to i32
  %22 = and i32 %21, 65535
  %23 = and i32 %21, 65534
  %24 = icmp eq i32 %23, 16
  %25 = icmp eq i32 %22, 6
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %87

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.tree_type, ptr %8, i64 0, i32 12
  %29 = load ptr, ptr %28, align 8, !tbaa !16
  %30 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %31 = load i16, ptr %30, align 8
  %32 = and i16 %31, 1024
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %27
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.32) #24
  br label %35

35:                                               ; preds = %34, %27
  %36 = phi i32 [ 1, %34 ], [ %1, %27 ]
  %37 = icmp eq ptr %29, null
  br i1 %37, label %38, label %45

38:                                               ; preds = %35
  %39 = icmp ne i32 %36, 1
  %40 = icmp ne i32 %22, 6
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %112

42:                                               ; preds = %38
  %43 = load i32, ptr @input_location, align 4, !tbaa !20
  %44 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %43, i32 noundef 0, ptr noundef nonnull @.str.33) #24
  br label %112

45:                                               ; preds = %35
  %46 = load i8, ptr %15, align 8
  %47 = and i8 %46, 32
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %81

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 5
  %51 = load i32, ptr %50, align 4, !tbaa !130
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %63, label %53

53:                                               ; preds = %49
  %54 = icmp eq i32 %36, 1
  br i1 %54, label %58, label %55

55:                                               ; preds = %53
  %56 = load i32, ptr @input_location, align 4, !tbaa !20
  %57 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %56, i32 noundef 0, ptr noundef nonnull @.str.34) #24
  br label %58

58:                                               ; preds = %55, %53
  %59 = load ptr, ptr @pending_invalid_xref, align 8, !tbaa !5
  %60 = icmp eq ptr %59, null
  br i1 %60, label %112, label %61

61:                                               ; preds = %58
  %62 = load i32, ptr @pending_invalid_xref_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @error_at(i32 noundef %62, ptr noundef nonnull @.str.30, ptr noundef nonnull %59) #24
  br label %112

63:                                               ; preds = %49
  %64 = load i16, ptr %30, align 8
  %65 = and i16 %64, 1792
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 9
  %69 = load i8, ptr %68, align 2, !tbaa !131
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %67, %63
  %72 = icmp eq i32 %36, 1
  br i1 %72, label %76, label %73

73:                                               ; preds = %71
  %74 = load i32, ptr @input_location, align 4, !tbaa !20
  %75 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %74, i32 noundef 0, ptr noundef nonnull @.str.35) #24
  br label %76

76:                                               ; preds = %73, %71
  %77 = load ptr, ptr @pending_invalid_xref, align 8, !tbaa !5
  %78 = icmp eq ptr %77, null
  br i1 %78, label %112, label %79

79:                                               ; preds = %76
  %80 = load i32, ptr @pending_invalid_xref_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @error_at(i32 noundef %80, ptr noundef nonnull @.str.30, ptr noundef nonnull %77) #24
  br label %112

81:                                               ; preds = %45, %67
  store ptr null, ptr @pending_invalid_xref, align 8, !tbaa !5
  %82 = tail call fastcc ptr @lookup_tag(i32 noundef %22, ptr noundef nonnull %29, i32 noundef 1, ptr noundef null)
  %83 = icmp eq ptr %82, null
  br i1 %83, label %84, label %112

84:                                               ; preds = %81
  %85 = tail call ptr @make_node_stat(i32 noundef %22) #24
  %86 = load i32, ptr @input_location, align 4, !tbaa !20
  tail call fastcc void @pushtag(i32 noundef %86, ptr noundef nonnull %29, ptr noundef %85)
  br label %112

87:                                               ; preds = %19
  %88 = icmp eq i32 %1, 1
  br i1 %88, label %112, label %89

89:                                               ; preds = %87
  %90 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %3, i32 noundef %90) #24
  %91 = getelementptr inbounds %struct.expanded_location, ptr %3, i64 0, i32 3
  %92 = load i8, ptr %91, align 8, !tbaa !57
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %112

94:                                               ; preds = %89
  %95 = load i32, ptr @input_location, align 4, !tbaa !20
  %96 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %95, i32 noundef 0, ptr noundef nonnull @.str.36) #24
  br label %112

97:                                               ; preds = %14, %10, %2
  %98 = icmp eq i32 %1, 1
  br i1 %98, label %112, label %99

99:                                               ; preds = %97
  %100 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %4, i32 noundef %100) #24
  %101 = getelementptr inbounds %struct.expanded_location, ptr %4, i64 0, i32 3
  %102 = load i8, ptr %101, align 8, !tbaa !57
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %112

104:                                              ; preds = %99
  %105 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 6
  %106 = load i8, ptr %105, align 8
  %107 = and i8 %106, 16
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %104
  %110 = load i32, ptr @input_location, align 4, !tbaa !20
  %111 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %110, i32 noundef 0, ptr noundef nonnull @.str.36) #24
  br label %112

112:                                              ; preds = %79, %76, %61, %58, %94, %89, %87, %81, %84, %38, %42, %97, %99, %104, %109
  %113 = phi i1 [ false, %99 ], [ false, %109 ], [ false, %104 ], [ false, %97 ], [ false, %89 ], [ false, %94 ], [ false, %87 ], [ true, %81 ], [ true, %84 ], [ true, %38 ], [ true, %42 ], [ true, %58 ], [ true, %61 ], [ true, %76 ], [ true, %79 ]
  %114 = phi i32 [ %1, %99 ], [ 1, %109 ], [ %1, %104 ], [ 1, %97 ], [ %1, %89 ], [ 1, %94 ], [ 1, %87 ], [ %36, %81 ], [ %36, %84 ], [ %36, %38 ], [ 1, %42 ], [ 1, %58 ], [ 1, %61 ], [ 1, %76 ], [ 1, %79 ]
  store ptr null, ptr @pending_invalid_xref, align 8, !tbaa !5
  %115 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %116 = load i16, ptr %115, align 8
  %117 = and i16 %116, 64
  %118 = icmp eq i16 %117, 0
  br i1 %118, label %120, label %119

119:                                              ; preds = %112
  call void (ptr, ...) @error(ptr noundef nonnull @.str.37) #24
  br label %120

120:                                              ; preds = %119, %112
  %121 = phi i32 [ 1, %119 ], [ %114, %112 ]
  %122 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %123 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %124 = icmp eq ptr %122, %123
  br i1 %124, label %125, label %132

125:                                              ; preds = %120
  %126 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 5
  %127 = load i32, ptr %126, align 4, !tbaa !130
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %137

129:                                              ; preds = %125
  call void (ptr, ...) @error(ptr noundef nonnull @.str.38) #24
  %130 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %131 = load ptr, ptr @file_scope, align 8, !tbaa !5
  br label %132

132:                                              ; preds = %129, %120
  %133 = phi ptr [ %131, %129 ], [ %123, %120 ]
  %134 = phi ptr [ %130, %129 ], [ %122, %120 ]
  %135 = phi i32 [ 1, %129 ], [ %121, %120 ]
  %136 = icmp eq ptr %134, %133
  br i1 %136, label %137, label %143

137:                                              ; preds = %125, %132
  %138 = phi i32 [ %135, %132 ], [ %121, %125 ]
  %139 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 5
  %140 = load i32, ptr %139, align 4, !tbaa !130
  %141 = icmp eq i32 %140, 3
  br i1 %141, label %142, label %143

142:                                              ; preds = %137
  call void (ptr, ...) @error(ptr noundef nonnull @.str.39) #24
  br label %187

143:                                              ; preds = %137, %132
  %144 = phi i32 [ %138, %137 ], [ %135, %132 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %180

146:                                              ; preds = %143
  %147 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %5, i32 noundef %147) #24
  %148 = getelementptr inbounds %struct.expanded_location, ptr %5, i64 0, i32 3
  %149 = load i8, ptr %148, align 8, !tbaa !57
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %151, label %155

151:                                              ; preds = %146
  %152 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 5
  %153 = load i32, ptr %152, align 4, !tbaa !130
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %177

155:                                              ; preds = %146, %151
  %156 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %6, i32 noundef %156) #24
  %157 = getelementptr inbounds %struct.expanded_location, ptr %6, i64 0, i32 3
  %158 = load i8, ptr %157, align 8, !tbaa !57
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %164

160:                                              ; preds = %155
  %161 = load i16, ptr %115, align 8
  %162 = and i16 %161, 128
  %163 = icmp eq i16 %162, 0
  br i1 %163, label %164, label %177

164:                                              ; preds = %155, %160
  %165 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %7, i32 noundef %165) #24
  %166 = getelementptr inbounds %struct.expanded_location, ptr %7, i64 0, i32 3
  %167 = load i8, ptr %166, align 8, !tbaa !57
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %180

169:                                              ; preds = %164
  %170 = load i16, ptr %115, align 8
  %171 = and i16 %170, 1792
  %172 = icmp eq i16 %171, 0
  br i1 %172, label %173, label %177

173:                                              ; preds = %169
  %174 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 9
  %175 = load i8, ptr %174, align 2, !tbaa !131
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %169, %173, %160, %151
  %178 = phi ptr [ @.str.40, %151 ], [ @.str.41, %160 ], [ @.str.42, %173 ], [ @.str.42, %169 ]
  %179 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull %178) #24
  br label %180

180:                                              ; preds = %177, %143, %173, %164
  %181 = phi i32 [ 0, %164 ], [ 0, %173 ], [ %144, %143 ], [ 2, %177 ]
  %182 = icmp eq i32 %181, 1
  %183 = or i1 %113, %182
  br i1 %183, label %187, label %184

184:                                              ; preds = %180
  %185 = load i32, ptr @input_location, align 4, !tbaa !20
  %186 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %185, i32 noundef 0, ptr noundef nonnull @.str.43) #24
  br label %187

187:                                              ; preds = %142, %184, %180
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @lookup_tag(i32 noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef writeonly %3) unnamed_addr #9 {
  %5 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !34
  %7 = icmp eq ptr %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.c_binding, ptr %6, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !32
  %11 = icmp eq ptr %10, null
  br i1 %11, label %58, label %12

12:                                               ; preds = %8
  %13 = icmp eq i32 %2, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %12
  %15 = load i64, ptr %10, align 8
  %16 = trunc i64 %15 to i32
  %17 = and i32 %16, 65535
  %18 = icmp eq i32 %17, %0
  br i1 %18, label %51, label %19

19:                                               ; preds = %14, %12
  %20 = getelementptr inbounds %struct.c_binding, ptr %6, i64 0, i32 5
  %21 = load i32, ptr %20, align 8
  %22 = and i32 %21, 268435455
  %23 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %24 = getelementptr inbounds %struct.c_scope, ptr %23, i64 0, i32 5
  %25 = load i64, ptr %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = and i32 %26, 268435455
  %28 = icmp eq i32 %22, %27
  br i1 %28, label %40, label %29

29:                                               ; preds = %19
  %30 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %31 = icmp eq ptr %23, %30
  %32 = icmp eq i32 %22, 0
  %33 = and i1 %32, %31
  %34 = or i1 %13, %33
  br i1 %34, label %35, label %58

35:                                               ; preds = %29
  %36 = load i64, ptr %10, align 8
  %37 = trunc i64 %36 to i32
  %38 = and i32 %37, 65535
  %39 = icmp eq i32 %38, %0
  br i1 %39, label %51, label %47

40:                                               ; preds = %19
  %41 = load i64, ptr %10, align 8
  %42 = trunc i64 %41 to i32
  %43 = and i32 %42, 65535
  %44 = icmp eq i32 %43, %0
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  store ptr %1, ptr @pending_invalid_xref, align 8, !tbaa !5
  %46 = load i32, ptr @input_location, align 4, !tbaa !20
  store i32 %46, ptr @pending_invalid_xref_location, align 4, !tbaa !20
  br label %49

47:                                               ; preds = %35
  store ptr %1, ptr @pending_invalid_xref, align 8, !tbaa !5
  %48 = load i32, ptr @input_location, align 4, !tbaa !20
  store i32 %48, ptr @pending_invalid_xref_location, align 4, !tbaa !20
  br i1 %33, label %49, label %51

49:                                               ; preds = %45, %47
  %50 = phi i32 [ %46, %45 ], [ %48, %47 ]
  tail call void (i32, ptr, ...) @error_at(i32 noundef %50, ptr noundef nonnull @.str.30, ptr noundef nonnull %1) #24
  store ptr null, ptr @pending_invalid_xref, align 8, !tbaa !5
  br label %51

51:                                               ; preds = %40, %14, %47, %49, %35
  %52 = icmp eq ptr %3, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %struct.c_binding, ptr %6, i64 0, i32 6
  %55 = load i32, ptr %54, align 4, !tbaa !59
  store i32 %55, ptr %3, align 4, !tbaa !20
  br label %56

56:                                               ; preds = %53, %51
  %57 = load ptr, ptr %9, align 8, !tbaa !32
  br label %58

58:                                               ; preds = %29, %4, %8, %56
  %59 = phi ptr [ %57, %56 ], [ null, %8 ], [ null, %4 ], [ null, %29 ]
  ret ptr %59
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @pushtag(i32 noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #9 {
  %4 = icmp ne ptr %1, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 12
  %7 = load ptr, ptr %6, align 8, !tbaa !16
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store ptr %1, ptr %6, align 8, !tbaa !16
  br label %10

10:                                               ; preds = %9, %5, %3
  %11 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %12 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %13 = icmp eq ptr %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.c_binding, ptr %12, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !60
  store ptr %16, ptr @binding_freelist, align 8, !tbaa !5
  br label %19

17:                                               ; preds = %10
  %18 = tail call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi ptr [ %12, %14 ], [ %18, %17 ]
  %21 = getelementptr inbounds %struct.c_binding, ptr %20, i64 0, i32 4
  store ptr null, ptr %21, align 8, !tbaa !52
  %22 = getelementptr inbounds %struct.c_binding, ptr %20, i64 0, i32 1
  store ptr %2, ptr %22, align 8, !tbaa !32
  %23 = getelementptr inbounds %struct.c_binding, ptr %20, i64 0, i32 2
  store ptr %1, ptr %23, align 8, !tbaa !51
  %24 = getelementptr inbounds %struct.c_scope, ptr %11, i64 0, i32 5
  %25 = load i64, ptr %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = and i32 %26, 268435455
  %28 = getelementptr inbounds %struct.c_binding, ptr %20, i64 0, i32 5
  store i32 %27, ptr %28, align 8
  %29 = getelementptr inbounds %struct.c_binding, ptr %20, i64 0, i32 6
  store i32 %0, ptr %29, align 4, !tbaa !59
  store ptr null, ptr %20, align 8, !tbaa !16
  %30 = getelementptr inbounds %struct.c_scope, ptr %11, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !48
  %32 = getelementptr inbounds %struct.c_binding, ptr %20, i64 0, i32 3
  store ptr %31, ptr %32, align 8, !tbaa !60
  store ptr %20, ptr %30, align 8, !tbaa !48
  %33 = icmp eq ptr %1, null
  br i1 %33, label %72, label %34

34:                                               ; preds = %19
  %35 = load i64, ptr %2, align 8
  %36 = trunc i64 %35 to i16
  switch i16 %36, label %43 [
    i16 30, label %37
    i16 6, label %39
    i16 17, label %39
    i16 16, label %39
    i16 32, label %41
    i16 29, label %41
    i16 35, label %41
    i16 33, label %41
    i16 34, label %41
    i16 0, label %41
  ]

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 3
  br label %44

39:                                               ; preds = %34, %34, %34
  %40 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 2
  br label %44

41:                                               ; preds = %34, %34, %34, %34, %34, %34
  %42 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 1
  br label %44

43:                                               ; preds = %34
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %44

44:                                               ; preds = %43, %41, %39, %37
  %45 = phi ptr [ undef, %43 ], [ %42, %41 ], [ %40, %39 ], [ %38, %37 ]
  %46 = load ptr, ptr %45, align 8, !tbaa !5
  %47 = icmp eq ptr %46, null
  br i1 %47, label %69, label %48

48:                                               ; preds = %44
  %49 = load i64, ptr %24, align 8
  %50 = trunc i64 %49 to i32
  %51 = and i32 %50, 268435455
  %52 = getelementptr inbounds %struct.c_binding, ptr %46, i64 0, i32 5
  %53 = load i32, ptr %52, align 8
  %54 = and i32 %53, 268435455
  %55 = icmp ugt i32 %54, %51
  br i1 %55, label %61, label %69

56:                                               ; preds = %61
  %57 = getelementptr inbounds %struct.c_binding, ptr %64, i64 0, i32 5
  %58 = load i32, ptr %57, align 8
  %59 = and i32 %58, 268435455
  %60 = icmp ugt i32 %59, %51
  br i1 %60, label %61, label %66, !llvm.loop !74

61:                                               ; preds = %48, %56
  %62 = phi ptr [ %64, %56 ], [ %46, %48 ]
  %63 = getelementptr inbounds %struct.c_binding, ptr %62, i64 0, i32 4
  %64 = load ptr, ptr %63, align 8, !tbaa !5
  %65 = icmp eq ptr %64, null
  br i1 %65, label %66, label %56, !llvm.loop !74

66:                                               ; preds = %61, %56
  %67 = phi ptr [ %64, %56 ], [ null, %61 ]
  %68 = getelementptr inbounds %struct.c_binding, ptr %62, i64 0, i32 4
  br label %69

69:                                               ; preds = %66, %48, %44
  %70 = phi ptr [ %45, %44 ], [ %45, %48 ], [ %68, %66 ]
  %71 = phi ptr [ null, %44 ], [ %46, %48 ], [ %67, %66 ]
  store ptr %71, ptr %21, align 8, !tbaa !52
  store ptr %20, ptr %70, align 8, !tbaa !5
  br label %72

72:                                               ; preds = %19, %69
  %73 = tail call ptr @build_decl_stat(i32 noundef %0, i32 noundef 35, ptr noundef null, ptr noundef %2) #24
  %74 = tail call ptr @pushdecl(ptr noundef %73)
  %75 = getelementptr inbounds %struct.tree_common, ptr %2, i64 0, i32 1
  store ptr %74, ptr %75, align 8, !tbaa !16
  %76 = getelementptr inbounds %struct.tree_decl_minimal, ptr %74, i64 0, i32 4
  %77 = load ptr, ptr %76, align 8, !tbaa !16
  %78 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 18
  store ptr %77, ptr %78, align 8, !tbaa !16
  %79 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %80 = icmp ne i32 %79, 0
  %81 = and i1 %4, %80
  br i1 %81, label %82, label %123

82:                                               ; preds = %72
  %83 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 1
  %84 = load ptr, ptr %83, align 8, !tbaa !25
  %85 = icmp eq ptr %84, null
  br i1 %85, label %123, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.c_binding, ptr %84, i64 0, i32 1
  %88 = load ptr, ptr %87, align 8, !tbaa !32
  %89 = icmp eq ptr %88, null
  br i1 %89, label %123, label %90

90:                                               ; preds = %86
  %91 = load i64, ptr %88, align 8
  %92 = and i64 %91, 65535
  %93 = icmp eq i64 %92, 35
  br i1 %93, label %94, label %123

94:                                               ; preds = %90
  %95 = getelementptr inbounds %struct.c_binding, ptr %84, i64 0, i32 5
  %96 = load i32, ptr %95, align 8
  %97 = and i32 %96, 268435455
  %98 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %99 = getelementptr inbounds %struct.c_scope, ptr %98, i64 0, i32 5
  %100 = load i64, ptr %99, align 8
  %101 = trunc i64 %100 to i32
  %102 = and i32 %101, 268435455
  %103 = icmp eq i32 %97, %102
  br i1 %103, label %109, label %104

104:                                              ; preds = %94
  %105 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %106 = icmp eq ptr %98, %105
  %107 = icmp eq i32 %97, 0
  %108 = and i1 %107, %106
  br i1 %108, label %109, label %123

109:                                              ; preds = %104, %94
  %110 = getelementptr inbounds %struct.tree_common, ptr %88, i64 0, i32 2
  %111 = load ptr, ptr %110, align 8, !tbaa !16
  %112 = getelementptr inbounds %struct.tree_type, ptr %111, i64 0, i32 16
  %113 = load ptr, ptr %112, align 8, !tbaa !16
  %114 = getelementptr inbounds %struct.tree_type, ptr %2, i64 0, i32 16
  %115 = load ptr, ptr %114, align 8, !tbaa !16
  %116 = icmp eq ptr %113, %115
  br i1 %116, label %123, label %117

117:                                              ; preds = %109
  %118 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 49, ptr noundef nonnull @.str.262, ptr noundef nonnull %88) #24
  %119 = getelementptr inbounds %struct.c_binding, ptr %84, i64 0, i32 6
  %120 = load i32, ptr %119, align 4, !tbaa !59
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %123, label %122

122:                                              ; preds = %117
  tail call void (i32, ptr, ...) @inform(i32 noundef %120, ptr noundef nonnull @.str.85) #24
  br label %123

123:                                              ; preds = %82, %86, %90, %104, %109, %122, %117, %72
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @quals_from_declspecs(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %3 = load i16, ptr %2, align 8
  %4 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 9
  %5 = load i8, ptr %4, align 2, !tbaa !131
  %6 = load ptr, ptr %0, align 8, !tbaa !127
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !132
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %33

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 4
  %14 = load i32, ptr %13, align 8, !tbaa !133
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %33

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 5
  %18 = load i32, ptr %17, align 4, !tbaa !130
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %33

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 6
  %22 = load i8, ptr %21, align 8
  %23 = and i8 %22, -48
  %24 = icmp eq i8 %23, 0
  %25 = insertelement <8 x i16> poison, i16 %3, i64 0
  %26 = shufflevector <8 x i16> %25, <8 x i16> poison, <8 x i32> zeroinitializer
  %27 = freeze <8 x i16> %26
  %28 = and <8 x i16> %27, <i16 1, i16 2, i16 4, i16 8, i16 16, i16 32, i16 64, i16 128>
  %29 = icmp ne <8 x i16> %28, zeroinitializer
  %30 = bitcast <8 x i1> %29 to i8
  %31 = icmp eq i8 %30, 0
  %32 = select i1 %31, i1 %24, i1 false
  br i1 %32, label %34, label %33

33:                                               ; preds = %20, %16, %12, %8, %1
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 3750, ptr noundef nonnull @.str.8) #24
  br label %34

34:                                               ; preds = %20, %33
  %35 = lshr i16 %3, 8
  %36 = and i16 %35, 7
  %37 = zext i16 %36 to i32
  %38 = zext i8 %5 to i32
  %39 = shl nuw nsw i32 %38, 8
  %40 = or i32 %39, %37
  ret i32 %40
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_array_declarator(i32 noundef %0, ptr noundef %1, ptr noundef readonly %2, i8 noundef zeroext %3, i8 noundef zeroext %4) local_unnamed_addr #9 {
  store i64 56, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %6 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %7 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = icmp slt i64 %10, 56
  br i1 %11, label %12, label %15

12:                                               ; preds = %5
  tail call void @_obstack_newchunk(ptr noundef nonnull @parser_obstack, i32 noundef 56) #24
  %13 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %14 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  br label %15

15:                                               ; preds = %5, %12
  %16 = phi ptr [ %7, %5 ], [ %14, %12 ]
  %17 = phi i64 [ 56, %5 ], [ %13, %12 ]
  %18 = getelementptr inbounds i8, ptr %16, i64 %17
  %19 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  %20 = icmp eq ptr %18, %19
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  %23 = or i8 %22, 2
  store i8 %23, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  br label %24

24:                                               ; preds = %15, %21
  %25 = ptrtoint ptr %19 to i64
  store i64 %25, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %26 = ptrtoint ptr %18 to i64
  %27 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 6), align 8, !tbaa !139
  %28 = sext i32 %27 to i64
  %29 = add nsw i64 %28, %26
  %30 = xor i32 %27, -1
  %31 = sext i32 %30 to i64
  %32 = and i64 %29, %31
  %33 = inttoptr i64 %32 to ptr
  %34 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 1), align 8, !tbaa !140
  %35 = ptrtoint ptr %34 to i64
  %36 = sub i64 %32, %35
  %37 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %38 = ptrtoint ptr %37 to i64
  %39 = sub i64 %38, %35
  %40 = icmp sgt i64 %36, %39
  %41 = select i1 %40, ptr %37, ptr %33
  store ptr %41, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8
  store ptr %41, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  %42 = getelementptr inbounds %struct.c_declarator, ptr %19, i64 0, i32 2
  store i32 %0, ptr %42, align 8, !tbaa !141
  store i32 2, ptr %19, align 8, !tbaa !143
  %43 = getelementptr inbounds %struct.c_declarator, ptr %19, i64 0, i32 1
  store ptr null, ptr %43, align 8, !tbaa !144
  %44 = getelementptr inbounds %struct.c_declarator, ptr %19, i64 0, i32 3
  store ptr %1, ptr %44, align 8, !tbaa !16
  %45 = icmp ne ptr %2, null
  br i1 %45, label %46, label %89

46:                                               ; preds = %24
  %47 = getelementptr inbounds %struct.c_declspecs, ptr %2, i64 0, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !145
  %49 = getelementptr inbounds %struct.c_declarator, ptr %19, i64 0, i32 3, i32 0, i32 2
  store ptr %48, ptr %49, align 8, !tbaa !16
  %50 = getelementptr inbounds %struct.c_declspecs, ptr %2, i64 0, i32 8
  %51 = load i16, ptr %50, align 8
  %52 = getelementptr inbounds %struct.c_declspecs, ptr %2, i64 0, i32 9
  %53 = load i8, ptr %52, align 2, !tbaa !131
  %54 = load ptr, ptr %2, align 8, !tbaa !127
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %81

56:                                               ; preds = %46
  %57 = getelementptr inbounds %struct.c_declspecs, ptr %2, i64 0, i32 2
  %58 = load ptr, ptr %57, align 8, !tbaa !132
  %59 = icmp eq ptr %58, null
  br i1 %59, label %60, label %81

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.c_declspecs, ptr %2, i64 0, i32 4
  %62 = load i32, ptr %61, align 8, !tbaa !133
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %81

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.c_declspecs, ptr %2, i64 0, i32 5
  %66 = load i32, ptr %65, align 4, !tbaa !130
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.c_declspecs, ptr %2, i64 0, i32 6
  %70 = load i8, ptr %69, align 8
  %71 = and i8 %70, -48
  %72 = icmp eq i8 %71, 0
  %73 = insertelement <8 x i16> poison, i16 %51, i64 0
  %74 = shufflevector <8 x i16> %73, <8 x i16> poison, <8 x i32> zeroinitializer
  %75 = freeze <8 x i16> %74
  %76 = and <8 x i16> %75, <i16 1, i16 2, i16 4, i16 8, i16 16, i16 32, i16 64, i16 128>
  %77 = icmp ne <8 x i16> %76, zeroinitializer
  %78 = bitcast <8 x i1> %77 to i8
  %79 = icmp eq i8 %78, 0
  %80 = select i1 %79, i1 %72, i1 false
  br i1 %80, label %82, label %81

81:                                               ; preds = %68, %64, %60, %56, %46
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 3750, ptr noundef nonnull @.str.8) #24
  br label %82

82:                                               ; preds = %68, %81
  %83 = lshr i16 %51, 8
  %84 = and i16 %83, 7
  %85 = zext i16 %84 to i32
  %86 = zext i8 %53 to i32
  %87 = shl nuw nsw i32 %86, 8
  %88 = or i32 %87, %85
  br label %91

89:                                               ; preds = %24
  %90 = getelementptr inbounds %struct.c_declarator, ptr %19, i64 0, i32 3, i32 0, i32 2
  store ptr null, ptr %90, align 8, !tbaa !16
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ 0, %89 ], [ %88, %82 ]
  %93 = getelementptr inbounds %struct.c_declarator, ptr %19, i64 0, i32 3, i32 0, i32 1
  store i32 %92, ptr %93, align 8, !tbaa !16
  %94 = getelementptr inbounds %struct.c_declarator, ptr %19, i64 0, i32 3, i32 0, i32 3
  %95 = load i8, ptr %94, align 8
  %96 = and i8 %3, 1
  %97 = and i8 %95, -4
  %98 = shl i8 %4, 1
  %99 = and i8 %98, 2
  %100 = or i8 %99, %96
  %101 = or i8 %100, %97
  store i8 %101, ptr %94, align 8
  %102 = load i32, ptr @flag_isoc99, align 4, !tbaa !20
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %113

104:                                              ; preds = %91
  %105 = icmp ne i8 %3, 0
  %106 = or i1 %45, %105
  br i1 %106, label %107, label %109

107:                                              ; preds = %104
  %108 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef 834, ptr noundef nonnull @.str.44) #24
  br label %109

109:                                              ; preds = %104, %107
  %110 = icmp eq i8 %4, 0
  br i1 %110, label %126, label %111

111:                                              ; preds = %109
  %112 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef 834, ptr noundef nonnull @.str.45) #24
  br label %115

113:                                              ; preds = %91
  %114 = icmp eq i8 %4, 0
  br i1 %114, label %126, label %115

115:                                              ; preds = %111, %113
  %116 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %117 = getelementptr inbounds %struct.c_scope, ptr %116, i64 0, i32 5
  %118 = load i64, ptr %117, align 8
  %119 = and i64 %118, 268435456
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.46) #24
  %122 = load i8, ptr %94, align 8
  %123 = and i8 %122, -3
  store i8 %123, ptr %94, align 8
  br label %126

124:                                              ; preds = %115
  %125 = or i64 %118, 536870912
  store i64 %125, ptr %117, align 8
  br label %126

126:                                              ; preds = %109, %113, %124, %121
  %127 = phi ptr [ null, %121 ], [ %19, %109 ], [ %19, %124 ], [ %19, %113 ]
  ret ptr %127
}

declare void @_obstack_newchunk(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: write) uwtable
define dso_local ptr @set_array_declarator_inner(ptr noundef returned writeonly %0, ptr noundef %1) local_unnamed_addr #18 {
  %3 = getelementptr inbounds %struct.c_declarator, ptr %0, i64 0, i32 1
  store ptr %1, ptr %3, align 8, !tbaa !144
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @groktypename(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #24
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #24
  %6 = load ptr, ptr %0, align 8, !tbaa !146
  %7 = getelementptr inbounds %struct.c_declspecs, ptr %6, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !145
  store ptr %8, ptr %5, align 8, !tbaa !5
  store ptr null, ptr %7, align 8, !tbaa !145
  %9 = getelementptr inbounds %struct.c_type_name, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !148
  %11 = call fastcc ptr @grokdeclarator(ptr noundef %10, ptr noundef %6, i32 noundef 4, i8 noundef zeroext 0, ptr noundef null, ptr noundef nonnull %5, ptr noundef %1, ptr noundef %2, i32 noundef 0)
  store ptr %11, ptr %4, align 8, !tbaa !5
  %12 = load ptr, ptr %5, align 8, !tbaa !5
  %13 = call ptr @decl_attributes(ptr noundef nonnull %4, ptr noundef %12, i32 noundef 0) #24
  %14 = load ptr, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #24
  ret ptr %14
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @grokdeclarator(ptr noundef readonly %0, ptr nocapture noundef %1, i32 noundef %2, i8 noundef zeroext %3, ptr noundef %4, ptr nocapture noundef %5, ptr noundef %6, ptr noundef %7, i32 noundef %8) unnamed_addr #9 {
  %10 = alloca %struct.expanded_location, align 8
  %11 = alloca %struct.expanded_location, align 8
  %12 = alloca ptr, align 8
  %13 = alloca %struct.expanded_location, align 8
  %14 = alloca %struct.expanded_location, align 8
  %15 = alloca i8, align 1
  %16 = alloca %struct.expanded_location, align 8
  %17 = alloca %struct.expanded_location, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #24
  %18 = load ptr, ptr %1, align 8, !tbaa !127
  store ptr %18, ptr %12, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %20 = load i16, ptr %19, align 8
  %21 = freeze i16 %20
  %22 = trunc i16 %21 to i8
  %23 = lshr i8 %22, 7
  %24 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 5
  %25 = load i32, ptr %24, align 4, !tbaa !130
  %26 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8, !tbaa !132
  %28 = icmp ne ptr %4, null
  %29 = icmp eq ptr %6, null
  %30 = icmp eq ptr %7, null
  %31 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !149
  br i1 %29, label %34, label %33

33:                                               ; preds = %9
  store ptr %32, ptr %6, align 8, !tbaa !5
  br label %34

34:                                               ; preds = %9, %33
  %35 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 6
  br i1 %30, label %39, label %36

36:                                               ; preds = %34
  %37 = load i8, ptr %35, align 8
  %38 = and i8 %37, 1
  store i8 %38, ptr %7, align 1, !tbaa !16
  br label %39

39:                                               ; preds = %34, %36
  %40 = icmp ne i32 %2, 1
  %41 = select i1 %40, i32 %2, i32 0
  %42 = xor i1 %40, true
  %43 = icmp eq ptr %0, null
  br i1 %43, label %77, label %44

44:                                               ; preds = %39, %67
  %45 = phi i8 [ %70, %67 ], [ 0, %39 ]
  %46 = phi ptr [ %69, %67 ], [ %0, %39 ]
  %47 = phi i32 [ %68, %67 ], [ 0, %39 ]
  %48 = load i32, ptr %46, align 8, !tbaa !143
  switch i32 %48, label %66 [
    i32 2, label %49
    i32 1, label %52
    i32 3, label %52
    i32 4, label %58
    i32 0, label %61
  ]

49:                                               ; preds = %44
  %50 = getelementptr inbounds %struct.c_declarator, ptr %46, i64 0, i32 2
  %51 = load i32, ptr %50, align 8, !tbaa !141
  br label %52

52:                                               ; preds = %44, %44, %49
  %53 = phi i32 [ %47, %44 ], [ %47, %44 ], [ %51, %49 ]
  %54 = icmp eq i32 %48, 1
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.c_declarator, ptr %46, i64 0, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !144
  br label %67

58:                                               ; preds = %44
  %59 = getelementptr inbounds %struct.c_declarator, ptr %46, i64 0, i32 1
  %60 = load ptr, ptr %59, align 8, !tbaa !144
  br label %67

61:                                               ; preds = %44
  %62 = getelementptr inbounds %struct.c_declarator, ptr %46, i64 0, i32 2
  %63 = load i32, ptr %62, align 8, !tbaa !141
  %64 = getelementptr inbounds %struct.c_declarator, ptr %46, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !16
  br label %72

66:                                               ; preds = %44
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 4846, ptr noundef nonnull @.str.8) #24
  br label %67

67:                                               ; preds = %66, %58, %52
  %68 = phi i32 [ %47, %66 ], [ %47, %58 ], [ %53, %52 ]
  %69 = phi ptr [ %46, %66 ], [ %60, %58 ], [ %57, %52 ]
  %70 = phi i8 [ %45, %66 ], [ %45, %58 ], [ %55, %52 ]
  %71 = icmp eq ptr %69, null
  br i1 %71, label %72, label %44, !llvm.loop !150

72:                                               ; preds = %67, %61
  %73 = phi i32 [ %63, %61 ], [ %68, %67 ]
  %74 = phi i8 [ %45, %61 ], [ %70, %67 ]
  %75 = phi ptr [ %65, %61 ], [ null, %67 ]
  %76 = icmp eq ptr %75, null
  br i1 %76, label %77, label %87

77:                                               ; preds = %39, %72
  %78 = phi i8 [ %74, %72 ], [ 0, %39 ]
  %79 = phi i32 [ %73, %72 ], [ 0, %39 ]
  switch i32 %41, label %83 [
    i32 4, label %84
    i32 2, label %84
    i32 3, label %80
  ]

80:                                               ; preds = %77
  %81 = load i32, ptr %0, align 8, !tbaa !143
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83

83:                                               ; preds = %77, %80
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 4853, ptr noundef nonnull @.str.8) #24
  br label %84

84:                                               ; preds = %77, %77, %80, %83
  %85 = icmp eq i8 %3, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %84
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 4854, ptr noundef nonnull @.str.8) #24
  br label %87

87:                                               ; preds = %86, %84, %72
  %88 = phi i1 [ true, %86 ], [ true, %84 ], [ false, %72 ]
  %89 = phi ptr [ null, %86 ], [ null, %84 ], [ %75, %72 ]
  %90 = phi i8 [ %78, %86 ], [ %78, %84 ], [ %74, %72 ]
  %91 = phi i32 [ %79, %86 ], [ %79, %84 ], [ %73, %72 ]
  %92 = icmp ne i8 %90, 0
  %93 = select i1 %40, i1 true, i1 %92
  br i1 %93, label %94, label %1856

94:                                               ; preds = %87
  %95 = icmp eq i32 %41, 0
  %96 = and i1 %40, %95
  br i1 %96, label %97, label %104

97:                                               ; preds = %94
  %98 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %99 = getelementptr inbounds %struct.c_scope, ptr %98, i64 0, i32 5
  %100 = load i64, ptr %99, align 8
  %101 = trunc i64 %100 to i32
  %102 = lshr i32 %101, 27
  %103 = and i32 %102, 2
  br label %104

104:                                              ; preds = %97, %94
  %105 = phi i32 [ %41, %94 ], [ %103, %97 ]
  %106 = load i8, ptr %35, align 8
  %107 = icmp slt i8 %106, 0
  %108 = icmp ne i32 %8, 1
  %109 = and i1 %108, %107
  br i1 %109, label %110, label %113

110:                                              ; preds = %104
  %111 = load ptr, ptr %1, align 8, !tbaa !127
  %112 = load ptr, ptr %26, align 8, !tbaa !132
  tail call void @warn_deprecated_use(ptr noundef %111, ptr noundef %112) #24
  br label %113

113:                                              ; preds = %110, %104
  %114 = icmp eq i32 %105, 3
  switch i32 %105, label %127 [
    i32 3, label %115
    i32 0, label %115
  ]

115:                                              ; preds = %113, %113
  %116 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %117 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %118 = icmp eq ptr %116, %117
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = tail call zeroext i8 @variably_modified_type_p(ptr noundef %18, ptr noundef null) #24
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %119
  br i1 %88, label %124, label %123

123:                                              ; preds = %122
  tail call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.263, ptr noundef nonnull %89) #24
  br label %125

124:                                              ; preds = %122
  tail call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.264) #24
  br label %125

125:                                              ; preds = %124, %123
  %126 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  store ptr %126, ptr %12, align 8, !tbaa !5
  br label %127

127:                                              ; preds = %113, %125, %119, %115
  %128 = phi ptr [ %18, %113 ], [ %126, %125 ], [ %18, %119 ], [ %18, %115 ]
  %129 = getelementptr inbounds %struct.tree_type, ptr %128, i64 0, i32 6
  %130 = load i32, ptr %129, align 4
  %131 = lshr i32 %130, 26
  %132 = trunc i32 %131 to i8
  %133 = and i8 %132, 1
  %134 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 7
  %135 = load i32, ptr %134, align 4, !tbaa !129
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %159, label %137

137:                                              ; preds = %127
  %138 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %13, i32 noundef %138) #24
  %139 = getelementptr inbounds %struct.expanded_location, ptr %13, i64 0, i32 3
  %140 = load i8, ptr %139, align 8, !tbaa !57
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %159

142:                                              ; preds = %137
  %143 = load i32, ptr @warn_implicit_int, align 4, !tbaa !20
  %144 = icmp ne i32 %143, 0
  %145 = load i32, ptr @warn_return_type, align 4
  %146 = icmp ne i32 %145, 0
  %147 = select i1 %144, i1 true, i1 %146
  %148 = load i32, ptr @flag_isoc99, align 4
  %149 = icmp ne i32 %148, 0
  %150 = select i1 %147, i1 true, i1 %149
  %151 = and i1 %150, %42
  br i1 %151, label %152, label %153

152:                                              ; preds = %142
  store i32 1, ptr @warn_about_return_type, align 4, !tbaa !20
  br label %159

153:                                              ; preds = %142
  br i1 %88, label %156, label %154

154:                                              ; preds = %153
  %155 = select i1 %149, i32 0, i32 104
  call void (i32, i32, ptr, ...) @pedwarn_c99(i32 noundef %91, i32 noundef %155, ptr noundef nonnull @.str.265, ptr noundef nonnull %89) #24
  br label %159

156:                                              ; preds = %153
  %157 = load i32, ptr @input_location, align 4, !tbaa !20
  %158 = select i1 %149, i32 0, i32 104
  call void (i32, i32, ptr, ...) @pedwarn_c99(i32 noundef %157, i32 noundef %158, ptr noundef nonnull @.str.266) #24
  br label %159

159:                                              ; preds = %152, %156, %154, %137, %127
  %160 = load i32, ptr @flag_signed_bitfields, align 4
  %161 = icmp eq i32 %160, 0
  %162 = select i1 %28, i1 %161, i1 false
  br i1 %162, label %165, label %163

163:                                              ; preds = %159
  %164 = load ptr, ptr %12, align 8, !tbaa !5
  br label %176

165:                                              ; preds = %159
  %166 = load i8, ptr %35, align 8
  %167 = and i8 %166, 64
  %168 = icmp eq i8 %167, 0
  %169 = load ptr, ptr %12, align 8, !tbaa !5
  br i1 %168, label %170, label %176

170:                                              ; preds = %165
  %171 = load i64, ptr %169, align 8
  %172 = and i64 %171, 65535
  %173 = icmp eq i64 %172, 8
  br i1 %173, label %174, label %176

174:                                              ; preds = %170
  %175 = call ptr @unsigned_type_for(ptr noundef nonnull %169) #24
  store ptr %175, ptr %12, align 8, !tbaa !5
  br label %176

176:                                              ; preds = %163, %174, %170, %165
  %177 = phi ptr [ %164, %163 ], [ %175, %174 ], [ %169, %170 ], [ %169, %165 ]
  %178 = call ptr @strip_array_types(ptr noundef %177) #24
  %179 = load i16, ptr %19, align 8
  %180 = lshr i16 %179, 8
  %181 = and i16 %180, 1
  %182 = zext i16 %181 to i32
  %183 = load i64, ptr %178, align 8
  %184 = trunc i64 %183 to i32
  %185 = lshr i32 %184, 20
  %186 = and i32 %185, 1
  %187 = add nuw nsw i32 %186, %182
  %188 = lshr i16 %179, 10
  %189 = and i16 %188, 1
  %190 = zext i16 %189 to i32
  %191 = getelementptr inbounds %struct.tree_type, ptr %178, i64 0, i32 6
  %192 = load i32, ptr %191, align 4
  %193 = lshr i32 %192, 13
  %194 = and i32 %193, 1
  %195 = add nuw nsw i32 %194, %190
  %196 = lshr i16 %179, 9
  %197 = and i16 %196, 1
  %198 = zext i16 %197 to i32
  %199 = lshr i32 %184, 19
  %200 = and i32 %199, 1
  %201 = add nuw nsw i32 %200, %198
  %202 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 9
  %203 = load i8, ptr %202, align 2, !tbaa !131
  %204 = lshr i64 %183, 56
  %205 = trunc i64 %204 to i8
  %206 = zext i8 %203 to i32
  %207 = icmp eq i8 %203, 0
  %208 = trunc i64 %204 to i32
  %209 = select i1 %207, i32 %208, i32 %206
  %210 = load i32, ptr @pedantic, align 4, !tbaa !20
  %211 = icmp eq i32 %210, 0
  %212 = load i32, ptr @flag_isoc99, align 4
  %213 = icmp ne i32 %212, 0
  %214 = select i1 %211, i1 true, i1 %213
  br i1 %214, label %227, label %215

215:                                              ; preds = %176
  %216 = icmp ugt i32 %187, 1
  br i1 %216, label %217, label %219

217:                                              ; preds = %215
  %218 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 834, ptr noundef nonnull @.str.267) #24
  br label %219

219:                                              ; preds = %217, %215
  %220 = icmp ugt i32 %195, 1
  br i1 %220, label %221, label %223

221:                                              ; preds = %219
  %222 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 834, ptr noundef nonnull @.str.268) #24
  br label %223

223:                                              ; preds = %221, %219
  %224 = icmp ugt i32 %201, 1
  br i1 %224, label %225, label %227

225:                                              ; preds = %223
  %226 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 834, ptr noundef nonnull @.str.269) #24
  br label %227

227:                                              ; preds = %223, %225, %176
  %228 = icmp eq i32 %208, 0
  %229 = select i1 %207, i1 true, i1 %228
  %230 = icmp eq i32 %206, %208
  %231 = select i1 %229, i1 true, i1 %230
  br i1 %231, label %235, label %232

232:                                              ; preds = %227
  %233 = call ptr @c_addr_space_name(i8 noundef zeroext %203) #24
  %234 = call ptr @c_addr_space_name(i8 noundef zeroext %205) #24
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.270, ptr noundef %233, ptr noundef %234) #24
  br label %235

235:                                              ; preds = %232, %227
  %236 = load i32, ptr @flag_gen_aux_info, align 4, !tbaa !20
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %259

238:                                              ; preds = %235
  %239 = load i64, ptr %178, align 8
  %240 = trunc i64 %239 to i32
  %241 = lshr i32 %240, 20
  %242 = and i32 %241, 1
  %243 = lshr i32 %240, 18
  %244 = and i32 %243, 2
  %245 = or i32 %242, %244
  %246 = load i32, ptr %191, align 4
  %247 = lshr i32 %246, 11
  %248 = and i32 %247, 4
  %249 = or i32 %245, %248
  %250 = lshr i64 %239, 48
  %251 = trunc i64 %250 to i32
  %252 = and i32 %251, 65280
  %253 = or i32 %249, %252
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %259, label %255

255:                                              ; preds = %238
  %256 = load ptr, ptr %12, align 8, !tbaa !5
  %257 = getelementptr inbounds %struct.tree_type, ptr %256, i64 0, i32 16
  %258 = load ptr, ptr %257, align 8, !tbaa !16
  store ptr %258, ptr %12, align 8, !tbaa !5
  br label %259

259:                                              ; preds = %255, %238, %235
  %260 = icmp ne i32 %187, 0
  %261 = zext i1 %260 to i32
  %262 = icmp eq i32 %195, 0
  %263 = select i1 %262, i32 0, i32 4
  %264 = icmp eq i32 %201, 0
  %265 = select i1 %264, i32 0, i32 2
  %266 = shl nuw nsw i32 %209, 8
  %267 = or i32 %266, %261
  %268 = or i32 %267, %263
  %269 = or i32 %268, %265
  br i1 %40, label %294, label %270

270:                                              ; preds = %259
  %271 = icmp slt i8 %22, 0
  %272 = icmp eq i32 %25, 1
  %273 = icmp eq i32 %25, 3
  %274 = icmp eq i32 %25, 5
  br i1 %271, label %276, label %275

275:                                              ; preds = %270
  switch i32 %25, label %294 [
    i32 5, label %276
    i32 3, label %276
    i32 1, label %276
  ]

276:                                              ; preds = %275, %275, %275, %270
  br i1 %272, label %277, label %283

277:                                              ; preds = %276
  %278 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %279 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %280 = icmp eq ptr %278, %279
  %281 = select i1 %280, i32 0, i32 834
  %282 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef %281, ptr noundef nonnull @.str.271) #24
  br label %287

283:                                              ; preds = %276
  br i1 %273, label %284, label %285

284:                                              ; preds = %283
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.272) #24
  br label %287

285:                                              ; preds = %283
  br i1 %274, label %286, label %287

286:                                              ; preds = %285
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.273) #24
  br label %287

287:                                              ; preds = %284, %277, %286, %285
  %288 = icmp sgt i8 %22, -1
  br i1 %288, label %290, label %289

289:                                              ; preds = %287
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.274) #24
  br label %290

290:                                              ; preds = %289, %287
  %291 = or i1 %272, %273
  %292 = or i1 %274, %291
  %293 = select i1 %292, i32 0, i32 %25
  br label %348

294:                                              ; preds = %275, %259
  %295 = icmp eq i32 %105, 0
  br i1 %295, label %312, label %296

296:                                              ; preds = %294
  %297 = icmp ne i32 %25, 0
  %298 = icmp slt i8 %22, 0
  %299 = or i1 %297, %298
  br i1 %299, label %300, label %348

300:                                              ; preds = %296
  %301 = icmp eq i32 %105, 2
  %302 = icmp eq i32 %25, 3
  %303 = select i1 %301, i1 %302, i1 false
  br i1 %303, label %348, label %304

304:                                              ; preds = %300
  switch i32 %105, label %311 [
    i32 3, label %305
    i32 2, label %308
  ]

305:                                              ; preds = %304
  br i1 %88, label %307, label %306

306:                                              ; preds = %305
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.275, ptr noundef nonnull %89) #24
  br label %348

307:                                              ; preds = %305
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.276) #24
  br label %348

308:                                              ; preds = %304
  br i1 %88, label %310, label %309

309:                                              ; preds = %308
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.277, ptr noundef nonnull %89) #24
  br label %348

310:                                              ; preds = %308
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.278) #24
  br label %348

311:                                              ; preds = %304
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.279) #24
  br label %348

312:                                              ; preds = %294
  %313 = icmp eq i32 %25, 2
  %314 = icmp ne i8 %3, 0
  %315 = and i1 %314, %313
  %316 = and i1 %40, %315
  %317 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %318 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %319 = icmp eq ptr %317, %318
  br i1 %316, label %320, label %328

320:                                              ; preds = %312
  br i1 %319, label %321, label %327

321:                                              ; preds = %320
  %322 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %323 = icmp ne i32 %322, 0
  %324 = select i1 %323, i1 %260, i1 false
  br i1 %324, label %348, label %325

325:                                              ; preds = %321
  %326 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %91, i32 noundef 0, ptr noundef nonnull @.str.280, ptr noundef %89) #24
  br label %348

327:                                              ; preds = %320
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.281, ptr noundef %89) #24
  br label %348

328:                                              ; preds = %312
  br i1 %319, label %329, label %340

329:                                              ; preds = %328
  %330 = icmp eq i32 %25, 1
  br i1 %330, label %331, label %332

331:                                              ; preds = %329
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.282, ptr noundef %89) #24
  br label %348

332:                                              ; preds = %329
  %333 = load i32, ptr @pedantic, align 4, !tbaa !20
  %334 = icmp ne i32 %333, 0
  %335 = icmp eq i32 %25, 3
  %336 = select i1 %334, i1 %335, i1 false
  br i1 %336, label %337, label %348

337:                                              ; preds = %332
  %338 = load i32, ptr @input_location, align 4, !tbaa !20
  %339 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %338, i32 noundef 834, ptr noundef nonnull @.str.283, ptr noundef %89) #24
  br label %348

340:                                              ; preds = %328
  %341 = and i1 %313, %42
  br i1 %341, label %342, label %343

342:                                              ; preds = %340
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.284, ptr noundef %89) #24
  br label %348

343:                                              ; preds = %340
  %344 = icmp slt i8 %22, 0
  %345 = icmp eq i32 %25, 0
  %346 = select i1 %344, i1 %345, i1 false
  br i1 %346, label %347, label %348

347:                                              ; preds = %343
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.285, ptr noundef %89) #24
  br label %348

348:                                              ; preds = %296, %331, %311, %307, %306, %310, %309, %290, %300, %337, %332, %343, %347, %342, %327, %321, %325
  %349 = phi i1 [ %88, %290 ], [ %88, %300 ], [ %88, %337 ], [ %88, %332 ], [ %88, %342 ], [ %88, %347 ], [ %88, %343 ], [ %88, %321 ], [ %88, %325 ], [ %88, %327 ], [ false, %309 ], [ true, %310 ], [ false, %306 ], [ true, %307 ], [ %88, %311 ], [ %88, %331 ], [ %88, %296 ]
  %350 = phi i32 [ %293, %290 ], [ 3, %300 ], [ 3, %337 ], [ %25, %332 ], [ 2, %342 ], [ 0, %347 ], [ %25, %343 ], [ 2, %321 ], [ 2, %325 ], [ 2, %327 ], [ 0, %309 ], [ 0, %310 ], [ 0, %306 ], [ 0, %307 ], [ 0, %311 ], [ 1, %331 ], [ 0, %296 ]
  %351 = phi i8 [ 0, %290 ], [ %23, %300 ], [ %23, %337 ], [ %23, %332 ], [ %23, %342 ], [ 0, %347 ], [ %23, %343 ], [ %23, %321 ], [ %23, %325 ], [ %23, %327 ], [ 0, %309 ], [ 0, %310 ], [ 0, %306 ], [ 0, %307 ], [ 0, %311 ], [ %23, %331 ], [ %23, %296 ]
  br i1 %43, label %1113, label %352

352:                                              ; preds = %348
  %353 = getelementptr inbounds %struct.expanded_location, ptr %14, i64 0, i32 3
  %354 = getelementptr inbounds %struct.expanded_location, ptr %11, i64 0, i32 3
  %355 = icmp eq i32 %105, 2
  %356 = icmp eq i32 %105, 4
  %357 = getelementptr inbounds %struct.expanded_location, ptr %16, i64 0, i32 3
  br label %358

358:                                              ; preds = %352, %1102
  %359 = phi ptr [ %0, %352 ], [ %1111, %1102 ]
  %360 = phi i32 [ %269, %352 ], [ %1110, %1102 ]
  %361 = phi i8 [ %133, %352 ], [ %1109, %1102 ]
  %362 = phi i32 [ 0, %352 ], [ %1108, %1102 ]
  %363 = phi ptr [ null, %352 ], [ %1107, %1102 ]
  %364 = phi i32 [ 0, %352 ], [ %1106, %1102 ]
  %365 = phi ptr [ null, %352 ], [ %1105, %1102 ]
  %366 = phi ptr [ null, %352 ], [ %1104, %1102 ]
  %367 = phi ptr [ %32, %352 ], [ %1103, %1102 ]
  br label %368

368:                                              ; preds = %358, %812
  %369 = phi ptr [ %359, %358 ], [ %460, %812 ]
  %370 = phi i8 [ %361, %358 ], [ %813, %812 ]
  %371 = phi i32 [ %362, %358 ], [ %452, %812 ]
  %372 = phi ptr [ %363, %358 ], [ %454, %812 ]
  %373 = phi i32 [ %364, %358 ], [ %458, %812 ]
  %374 = load ptr, ptr %12, align 8
  %375 = load ptr, ptr @global_trees, align 16
  br i1 %40, label %376, label %396

376:                                              ; preds = %368
  %377 = icmp eq ptr %374, %375
  %378 = freeze i1 %377
  br i1 %378, label %404, label %379

379:                                              ; preds = %376
  %380 = load i32, ptr %369, align 8, !tbaa !143
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %1113, label %382

382:                                              ; preds = %379
  %383 = icmp ne i32 %371, 0
  %384 = icmp ne ptr %372, null
  %385 = select i1 %383, i1 true, i1 %384
  %386 = icmp ne i32 %373, 0
  %387 = select i1 %385, i1 true, i1 %386
  br i1 %387, label %388, label %390

388:                                              ; preds = %382
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.286) #24
  %389 = load i32, ptr %369, align 8, !tbaa !143
  br label %390

390:                                              ; preds = %388, %382
  %391 = phi i32 [ %389, %388 ], [ %380, %382 ]
  switch i32 %391, label %1101 [
    i32 4, label %428
    i32 2, label %446
    i32 1, label %392
    i32 3, label %1058
  ]

392:                                              ; preds = %390
  %393 = load ptr, ptr %12, align 8
  %394 = load ptr, ptr @global_trees, align 16
  %395 = icmp eq ptr %393, %394
  br i1 %395, label %404, label %828

396:                                              ; preds = %368, %821
  %397 = phi ptr [ %822, %821 ], [ %375, %368 ]
  %398 = phi ptr [ %822, %821 ], [ %374, %368 ]
  %399 = phi i32 [ 0, %821 ], [ %373, %368 ]
  %400 = phi ptr [ null, %821 ], [ %372, %368 ]
  %401 = phi i32 [ 0, %821 ], [ %371, %368 ]
  %402 = icmp eq ptr %398, %397
  %403 = freeze i1 %402
  br i1 %403, label %404, label %415

404:                                              ; preds = %392, %376, %396
  %405 = phi ptr [ %400, %396 ], [ %372, %376 ], [ null, %392 ]
  %406 = phi i32 [ %401, %396 ], [ %371, %376 ], [ 0, %392 ]
  br label %407

407:                                              ; preds = %411, %404
  %408 = phi ptr [ %369, %404 ], [ %413, %411 ]
  %409 = load i32, ptr %408, align 8, !tbaa !143
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %1113, label %411

411:                                              ; preds = %407
  %412 = getelementptr inbounds %struct.c_declarator, ptr %408, i64 0, i32 1
  %413 = load ptr, ptr %412, align 8, !tbaa !144
  %414 = icmp eq ptr %413, null
  br i1 %414, label %1113, label %407, !llvm.loop !151

415:                                              ; preds = %396
  %416 = load i32, ptr %369, align 8, !tbaa !143
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %1113, label %418

418:                                              ; preds = %415
  %419 = icmp ne i32 %401, 0
  %420 = icmp ne ptr %400, null
  %421 = select i1 %419, i1 true, i1 %420
  %422 = icmp ne i32 %399, 0
  %423 = select i1 %421, i1 true, i1 %422
  br i1 %423, label %424, label %426

424:                                              ; preds = %418
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.286) #24
  %425 = load i32, ptr %369, align 8, !tbaa !143
  br label %426

426:                                              ; preds = %418, %424
  %427 = phi i32 [ %416, %418 ], [ %425, %424 ]
  switch i32 %427, label %1101 [
    i32 4, label %428
    i32 2, label %446
    i32 1, label %815
    i32 3, label %1058
  ]

428:                                              ; preds = %390, %426
  %429 = getelementptr inbounds %struct.c_declarator, ptr %369, i64 0, i32 3
  %430 = load ptr, ptr %429, align 8, !tbaa !16
  %431 = getelementptr inbounds %struct.c_declarator, ptr %369, i64 0, i32 1
  %432 = load ptr, ptr %431, align 8, !tbaa !144
  br label %433

433:                                              ; preds = %436, %428
  %434 = phi ptr [ %432, %428 ], [ %438, %436 ]
  %435 = load i32, ptr %434, align 8, !tbaa !143
  switch i32 %435, label %440 [
    i32 4, label %436
    i32 0, label %441
    i32 1, label %442
    i32 2, label %439
  ]

436:                                              ; preds = %433
  %437 = getelementptr inbounds %struct.c_declarator, ptr %434, i64 0, i32 1
  %438 = load ptr, ptr %437, align 8, !tbaa !144
  br label %433, !llvm.loop !152

439:                                              ; preds = %433
  br label %442

440:                                              ; preds = %433
  br label %442

441:                                              ; preds = %433
  br label %442

442:                                              ; preds = %433, %441, %440, %439
  %443 = phi i32 [ 4, %439 ], [ 0, %440 ], [ 1, %441 ], [ 2, %433 ]
  %444 = call ptr @chainon(ptr noundef %366, ptr noundef %430) #24
  %445 = call ptr @decl_attributes(ptr noundef nonnull %12, ptr noundef %444, i32 noundef %443) #24
  br label %1102

446:                                              ; preds = %426, %390
  %447 = getelementptr inbounds %struct.c_declarator, ptr %369, i64 0, i32 3
  %448 = load ptr, ptr %447, align 8, !tbaa !16
  %449 = load ptr, ptr @sizetype_tab, align 16, !tbaa !5
  %450 = call ptr @c_common_signed_type(ptr noundef %449) #24
  %451 = getelementptr inbounds %struct.c_declarator, ptr %369, i64 0, i32 3, i32 0, i32 1
  %452 = load i32, ptr %451, align 8, !tbaa !16
  %453 = getelementptr inbounds %struct.c_declarator, ptr %369, i64 0, i32 3, i32 0, i32 2
  %454 = load ptr, ptr %453, align 8, !tbaa !16
  %455 = getelementptr inbounds %struct.c_declarator, ptr %369, i64 0, i32 3, i32 0, i32 3
  %456 = load i8, ptr %455, align 8
  %457 = and i8 %456, 1
  %458 = zext i8 %457 to i32
  %459 = getelementptr inbounds %struct.c_declarator, ptr %369, i64 0, i32 1
  %460 = load ptr, ptr %459, align 8, !tbaa !144
  %461 = load ptr, ptr %12, align 8
  %462 = load i64, ptr %461, align 8
  %463 = and i64 %462, 65535
  %464 = icmp eq i64 %463, 19
  br i1 %464, label %465, label %471

465:                                              ; preds = %446
  br i1 %349, label %467, label %466

466:                                              ; preds = %465
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.287, ptr noundef nonnull %89) #24
  br label %468

467:                                              ; preds = %465
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.288) #24
  br label %468

468:                                              ; preds = %467, %466
  %469 = load ptr, ptr @global_trees, align 16, !tbaa !5
  store ptr %469, ptr %12, align 8, !tbaa !5
  %470 = load i64, ptr %469, align 8
  br label %471

471:                                              ; preds = %468, %446
  %472 = phi i64 [ %470, %468 ], [ %462, %446 ]
  %473 = and i64 %472, 65535
  %474 = icmp eq i64 %473, 20
  br i1 %474, label %475, label %480

475:                                              ; preds = %471
  br i1 %349, label %477, label %476

476:                                              ; preds = %475
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.289, ptr noundef nonnull %89) #24
  br label %478

477:                                              ; preds = %475
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.290) #24
  br label %478

478:                                              ; preds = %477, %476
  %479 = load ptr, ptr @global_trees, align 16, !tbaa !5
  store ptr %479, ptr %12, align 8, !tbaa !5
  br label %480

480:                                              ; preds = %478, %471
  %481 = load i32, ptr @pedantic, align 4, !tbaa !20
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %493, label %483

483:                                              ; preds = %480
  %484 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %14, i32 noundef %484) #24
  %485 = load i8, ptr %353, align 8, !tbaa !57
  %486 = icmp eq i8 %485, 0
  br i1 %486, label %487, label %493

487:                                              ; preds = %483
  %488 = load ptr, ptr %12, align 8
  %489 = call fastcc zeroext i8 @flexible_array_type_p(ptr noundef %488), !range !91
  %490 = icmp eq i8 %489, 0
  br i1 %490, label %493, label %491

491:                                              ; preds = %487
  %492 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 834, ptr noundef nonnull @.str.101) #24
  br label %493

493:                                              ; preds = %491, %487, %483, %480
  %494 = load ptr, ptr @global_trees, align 16
  %495 = icmp eq ptr %448, %494
  br i1 %495, label %498, label %496

496:                                              ; preds = %493
  %497 = load ptr, ptr %12, align 8
  br label %499

498:                                              ; preds = %493
  store ptr %448, ptr %12, align 8, !tbaa !5
  br label %499

499:                                              ; preds = %496, %498
  %500 = phi ptr [ %497, %496 ], [ %448, %498 ]
  %501 = icmp eq ptr %500, %494
  br i1 %501, label %812, label %502, !llvm.loop !151

502:                                              ; preds = %499
  %503 = icmp eq ptr %448, null
  br i1 %503, label %676, label %504

504:                                              ; preds = %502
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %15) #24
  store i8 1, ptr %15, align 1, !tbaa !16
  %505 = load i64, ptr %448, align 8
  %506 = and i64 %505, 134283263
  %507 = icmp eq i64 %506, 23
  br label %508

508:                                              ; preds = %516, %504
  %509 = phi ptr [ %448, %504 ], [ %514, %516 ]
  %510 = load i64, ptr %509, align 8
  %511 = trunc i64 %510 to i16
  switch i16 %511, label %522 [
    i16 116, label %512
    i16 113, label %512
    i16 117, label %512
  ]

512:                                              ; preds = %508, %508, %508
  %513 = getelementptr inbounds %struct.tree_exp, ptr %509, i64 0, i32 3
  %514 = load ptr, ptr %513, align 8, !tbaa !16
  %515 = icmp eq ptr %514, %494
  br i1 %515, label %522, label %516

516:                                              ; preds = %512
  %517 = getelementptr inbounds %struct.tree_common, ptr %509, i64 0, i32 2
  %518 = load ptr, ptr %517, align 8, !tbaa !16
  %519 = getelementptr inbounds %struct.tree_common, ptr %514, i64 0, i32 2
  %520 = load ptr, ptr %519, align 8, !tbaa !16
  %521 = icmp eq ptr %518, %520
  br i1 %521, label %508, label %522, !llvm.loop !153

522:                                              ; preds = %508, %512, %516
  %523 = getelementptr inbounds %struct.tree_common, ptr %509, i64 0, i32 2
  %524 = load ptr, ptr %523, align 8, !tbaa !16
  %525 = load i64, ptr %524, align 8
  %526 = trunc i64 %525 to i32
  %527 = and i32 %526, 65535
  %528 = add nsw i32 %527, -6
  %529 = icmp ult i32 %528, 3
  br i1 %529, label %535, label %530

530:                                              ; preds = %522
  br i1 %349, label %532, label %531

531:                                              ; preds = %530
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.291, ptr noundef nonnull %89) #24
  br label %533

532:                                              ; preds = %530
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.292) #24
  br label %533

533:                                              ; preds = %532, %531
  %534 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 14), align 16, !tbaa !5
  br label %535

535:                                              ; preds = %522, %533
  %536 = phi ptr [ %534, %533 ], [ %509, %522 ]
  %537 = call ptr @c_fully_fold(ptr noundef %536, i8 noundef zeroext 0, ptr noundef nonnull %15) #24
  %538 = load i32, ptr @pedantic, align 4, !tbaa !20
  %539 = icmp ne i32 %538, 0
  %540 = load i8, ptr %15, align 1
  %541 = icmp ne i8 %540, 0
  %542 = select i1 %539, i1 %541, i1 false
  br i1 %542, label %543, label %551

543:                                              ; preds = %535
  %544 = call i32 @integer_zerop(ptr noundef %537) #24
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %551, label %546

546:                                              ; preds = %543
  br i1 %349, label %549, label %547

547:                                              ; preds = %546
  %548 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 834, ptr noundef nonnull @.str.293, ptr noundef nonnull %89) #24
  br label %551

549:                                              ; preds = %546
  %550 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 834, ptr noundef nonnull @.str.294) #24
  br label %551

551:                                              ; preds = %547, %549, %543, %535
  %552 = load i64, ptr %537, align 8
  %553 = and i64 %552, 65535
  %554 = icmp eq i64 %553, 23
  %555 = load i8, ptr %15, align 1
  %556 = icmp ne i8 %555, 0
  %557 = select i1 %554, i1 %556, i1 false
  br i1 %557, label %558, label %580

558:                                              ; preds = %551
  call void @constant_expression_warning(ptr noundef nonnull %537) #24
  %559 = call i32 @tree_int_cst_sgn(ptr noundef nonnull %537) #24
  %560 = icmp slt i32 %559, 0
  br i1 %560, label %561, label %566

561:                                              ; preds = %558
  br i1 %349, label %563, label %562

562:                                              ; preds = %561
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.295, ptr noundef nonnull %89) #24
  br label %564

563:                                              ; preds = %561
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.296) #24
  br label %564

564:                                              ; preds = %563, %562
  %565 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 14), align 16, !tbaa !5
  br label %566

566:                                              ; preds = %564, %558
  %567 = phi ptr [ %565, %564 ], [ %537, %558 ]
  br i1 %507, label %588, label %568

568:                                              ; preds = %566
  switch i32 %105, label %576 [
    i32 3, label %569
    i32 0, label %569
  ]

569:                                              ; preds = %568, %568
  %570 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %571 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %572 = icmp eq ptr %570, %571
  br i1 %572, label %573, label %576

573:                                              ; preds = %569
  %574 = load i32, ptr @input_location, align 4, !tbaa !20
  %575 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %574, i32 noundef 0, ptr noundef nonnull @.str.263, ptr noundef %89) #24
  br label %576

576:                                              ; preds = %569, %568, %573
  %577 = phi i8 [ %370, %573 ], [ 1, %568 ], [ 1, %569 ]
  %578 = phi i8 [ 0, %573 ], [ 1, %568 ], [ 1, %569 ]
  %579 = load i64, ptr %567, align 8
  call fastcc void @warn_variable_length_array(ptr noundef %89, i64 %579)
  br label %588

580:                                              ; preds = %551
  switch i32 %105, label %587 [
    i32 3, label %581
    i32 0, label %581
  ]

581:                                              ; preds = %580, %580
  %582 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %583 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %584 = icmp eq ptr %582, %583
  br i1 %584, label %585, label %587

585:                                              ; preds = %581
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.263, ptr noundef %89) #24
  %586 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 14), align 16, !tbaa !5
  br label %588

587:                                              ; preds = %580, %581
  call fastcc void @warn_variable_length_array(ptr noundef %89, i64 %552)
  br label %588

588:                                              ; preds = %585, %587, %566, %576
  %589 = phi i8 [ %370, %566 ], [ %577, %576 ], [ %370, %585 ], [ 1, %587 ]
  %590 = phi ptr [ %567, %566 ], [ %567, %576 ], [ %586, %585 ], [ %537, %587 ]
  %591 = phi i8 [ 0, %566 ], [ %578, %576 ], [ 0, %585 ], [ 1, %587 ]
  %592 = call i32 @integer_zerop(ptr noundef %590) #24
  %593 = icmp eq i32 %592, 0
  %594 = icmp ne i8 %591, 0
  %595 = or i1 %594, %593
  br i1 %595, label %599, label %596

596:                                              ; preds = %588
  %597 = load ptr, ptr @sizetype_tab, align 16, !tbaa !5
  %598 = call ptr @build_range_type(ptr noundef %597, ptr noundef %590, ptr noundef null) #24
  br label %668

599:                                              ; preds = %588
  %600 = icmp eq i8 %589, 0
  br i1 %600, label %623, label %601

601:                                              ; preds = %599
  %602 = load i64, ptr %590, align 8
  %603 = and i64 %602, 131072
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %605, label %623

605:                                              ; preds = %601
  %606 = call ptr @save_expr(ptr noundef nonnull %590) #24
  %607 = call ptr @skip_simple_arithmetic(ptr noundef %606) #24
  %608 = load ptr, ptr @cfun, align 8, !tbaa !5
  %609 = icmp eq ptr %608, null
  br i1 %609, label %615, label %610

610:                                              ; preds = %605
  %611 = getelementptr inbounds %struct.function, ptr %608, i64 0, i32 20
  %612 = load i32, ptr %611, align 8
  %613 = and i32 %612, 8388608
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %615, label %623

615:                                              ; preds = %610, %605
  %616 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %617 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %618 = icmp ne ptr %616, %617
  %619 = load i8, ptr @c_override_global_bindings_to_false, align 1
  %620 = icmp ne i8 %619, 0
  %621 = select i1 %618, i1 true, i1 %620
  br i1 %621, label %622, label %623

622:                                              ; preds = %615
  call void @put_pending_size(ptr noundef %607) #24
  br label %623

623:                                              ; preds = %622, %615, %610, %601, %599
  %624 = phi ptr [ %590, %599 ], [ %590, %601 ], [ %606, %610 ], [ %606, %622 ], [ %606, %615 ]
  %625 = icmp eq i8 %591, 0
  br i1 %625, label %635, label %626

626:                                              ; preds = %623
  %627 = load i64, ptr %624, align 8
  %628 = and i64 %627, 65535
  %629 = icmp eq i64 %628, 23
  br i1 %629, label %630, label %635

630:                                              ; preds = %626
  %631 = getelementptr inbounds %struct.tree_common, ptr %624, i64 0, i32 2
  %632 = load ptr, ptr %631, align 8, !tbaa !16
  %633 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 13), align 8, !tbaa !5
  %634 = call ptr @build2_stat(i32 noundef 52, ptr noundef %632, ptr noundef %633, ptr noundef nonnull %624) #24
  br label %635

635:                                              ; preds = %630, %626, %623
  %636 = phi ptr [ %634, %630 ], [ %624, %626 ], [ %624, %623 ]
  %637 = call ptr @convert(ptr noundef %450, ptr noundef %636) #24
  %638 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 18), align 16, !tbaa !5
  %639 = call ptr @convert(ptr noundef %450, ptr noundef %638) #24
  %640 = call ptr @fold_build2_stat_loc(i32 noundef %91, i32 noundef 64, ptr noundef %450, ptr noundef %637, ptr noundef %639) #24
  %641 = load i64, ptr %640, align 8
  %642 = and i64 %641, 134283263
  %643 = icmp eq i64 %642, 134217751
  br i1 %643, label %644, label %647

644:                                              ; preds = %635
  br i1 %349, label %646, label %645

645:                                              ; preds = %644
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.297, ptr noundef nonnull %89) #24
  br label %674

646:                                              ; preds = %644
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.298) #24
  br label %674

647:                                              ; preds = %635
  %648 = call ptr @build_index_type(ptr noundef nonnull %640) #24
  br i1 %594, label %649, label %668

649:                                              ; preds = %647
  br i1 %29, label %652, label %650

650:                                              ; preds = %649
  %651 = load ptr, ptr %6, align 8, !tbaa !5
  br label %652

652:                                              ; preds = %649, %650
  %653 = phi ptr [ %367, %649 ], [ %651, %650 ]
  %654 = icmp eq ptr %653, null
  br i1 %654, label %659, label %655

655:                                              ; preds = %652
  %656 = getelementptr inbounds %struct.tree_common, ptr %636, i64 0, i32 2
  %657 = load ptr, ptr %656, align 8, !tbaa !16
  %658 = call ptr @build2_stat(i32 noundef 52, ptr noundef %657, ptr noundef nonnull %653, ptr noundef %636) #24
  br label %659

659:                                              ; preds = %652, %655
  %660 = phi ptr [ %658, %655 ], [ %636, %652 ]
  br i1 %29, label %662, label %661

661:                                              ; preds = %659
  store ptr %660, ptr %6, align 8, !tbaa !5
  br label %662

662:                                              ; preds = %659, %661
  %663 = phi ptr [ %367, %661 ], [ %660, %659 ]
  br i1 %30, label %668, label %664

664:                                              ; preds = %662
  %665 = load i8, ptr %15, align 1, !tbaa !16
  %666 = load i8, ptr %7, align 1, !tbaa !16
  %667 = and i8 %666, %665
  store i8 %667, ptr %7, align 1, !tbaa !16
  br label %668

668:                                              ; preds = %662, %647, %596, %664
  %669 = phi ptr [ %663, %664 ], [ %367, %596 ], [ %367, %647 ], [ %663, %662 ]
  %670 = phi ptr [ %648, %664 ], [ %598, %596 ], [ %648, %647 ], [ %648, %662 ]
  %671 = phi ptr [ %636, %664 ], [ %590, %596 ], [ %636, %647 ], [ %636, %662 ]
  %672 = lshr i8 %456, 1
  %673 = and i8 %672, 1
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %15) #24
  br label %731

674:                                              ; preds = %645, %646
  %675 = load ptr, ptr @global_trees, align 16
  store ptr %675, ptr %12, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %15) #24
  br label %812

676:                                              ; preds = %502
  %677 = lshr i8 %456, 1
  %678 = and i8 %677, 1
  br i1 %114, label %679, label %716

679:                                              ; preds = %676
  %680 = icmp eq i8 %678, 0
  br i1 %680, label %681, label %693

681:                                              ; preds = %679
  %682 = load i32, ptr %460, align 8, !tbaa !143
  %683 = icmp eq i32 %682, 4
  br i1 %683, label %684, label %690

684:                                              ; preds = %681, %684
  %685 = phi ptr [ %687, %684 ], [ %460, %681 ]
  %686 = getelementptr inbounds %struct.c_declarator, ptr %685, i64 0, i32 1
  %687 = load ptr, ptr %686, align 8, !tbaa !144
  %688 = load i32, ptr %687, align 8, !tbaa !143
  %689 = icmp eq i32 %688, 4
  br i1 %689, label %684, label %690, !llvm.loop !154

690:                                              ; preds = %684, %681
  %691 = phi i32 [ %682, %681 ], [ %688, %684 ]
  %692 = icmp eq i32 %691, 0
  br label %693

693:                                              ; preds = %679, %690
  %694 = phi i8 [ %370, %690 ], [ 1, %679 ]
  %695 = phi i1 [ %692, %690 ], [ false, %679 ]
  %696 = load i32, ptr @pedantic, align 4
  %697 = icmp eq i32 %696, 0
  %698 = xor i1 %695, true
  %699 = select i1 %698, i1 true, i1 %697
  %700 = load i32, ptr @flag_isoc99, align 4
  %701 = icmp ne i32 %700, 0
  %702 = select i1 %699, i1 true, i1 %701
  br i1 %702, label %709, label %703

703:                                              ; preds = %693
  %704 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %16, i32 noundef %704) #24
  %705 = load i8, ptr %357, align 8, !tbaa !57
  %706 = icmp eq i8 %705, 0
  br i1 %706, label %707, label %709

707:                                              ; preds = %703
  %708 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 834, ptr noundef nonnull @.str.299) #24
  br label %709

709:                                              ; preds = %707, %703, %693
  %710 = icmp ne i8 %678, 0
  %711 = select i1 %695, i1 true, i1 %710
  br i1 %711, label %712, label %731

712:                                              ; preds = %709
  %713 = load ptr, ptr @sizetype_tab, align 16, !tbaa !5
  %714 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !5
  %715 = call ptr @build_range_type(ptr noundef %713, ptr noundef %714, ptr noundef null) #24
  br label %731

716:                                              ; preds = %676
  br i1 %355, label %717, label %723

717:                                              ; preds = %716
  %718 = icmp eq i8 %678, 0
  br i1 %718, label %731, label %719

719:                                              ; preds = %717
  %720 = load ptr, ptr @sizetype_tab, align 16, !tbaa !5
  %721 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !5
  %722 = call ptr @build_range_type(ptr noundef %720, ptr noundef %721, ptr noundef null) #24
  br label %731

723:                                              ; preds = %716
  %724 = icmp ne i8 %678, 0
  %725 = select i1 %356, i1 %724, i1 false
  br i1 %725, label %726, label %731

726:                                              ; preds = %723
  %727 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.300) #24
  %728 = load ptr, ptr @sizetype_tab, align 16, !tbaa !5
  %729 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !5
  %730 = call ptr @build_range_type(ptr noundef %728, ptr noundef %729, ptr noundef null) #24
  br label %731

731:                                              ; preds = %668, %712, %709, %723, %726, %717, %719
  %732 = phi i8 [ %678, %712 ], [ 0, %709 ], [ 0, %717 ], [ 1, %719 ], [ 1, %726 ], [ %678, %723 ], [ %673, %668 ]
  %733 = phi ptr [ %367, %712 ], [ %367, %709 ], [ %367, %717 ], [ %367, %719 ], [ %367, %726 ], [ %367, %723 ], [ %669, %668 ]
  %734 = phi i8 [ %694, %712 ], [ %694, %709 ], [ %370, %717 ], [ 1, %719 ], [ 1, %726 ], [ %370, %723 ], [ %589, %668 ]
  %735 = phi ptr [ %715, %712 ], [ null, %709 ], [ null, %717 ], [ %722, %719 ], [ %730, %726 ], [ null, %723 ], [ %670, %668 ]
  %736 = phi ptr [ null, %712 ], [ null, %709 ], [ null, %717 ], [ null, %719 ], [ null, %726 ], [ null, %723 ], [ %671, %668 ]
  %737 = load ptr, ptr %12, align 8, !tbaa !5
  %738 = getelementptr inbounds %struct.tree_type, ptr %737, i64 0, i32 2
  %739 = load ptr, ptr %738, align 8, !tbaa !16
  %740 = icmp eq ptr %739, null
  br i1 %740, label %741, label %743

741:                                              ; preds = %731
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.301) #24
  %742 = load ptr, ptr @global_trees, align 16
  store ptr %742, ptr %12, align 8, !tbaa !5
  br label %804

743:                                              ; preds = %731
  %744 = lshr i32 %360, 8
  %745 = and i32 %744, 255
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %755, label %747

747:                                              ; preds = %743
  %748 = load i64, ptr %737, align 8
  %749 = lshr i64 %748, 56
  %750 = trunc i64 %749 to i32
  %751 = icmp eq i32 %745, %750
  br i1 %751, label %755, label %752

752:                                              ; preds = %747
  %753 = shl nuw nsw i32 %745, 8
  %754 = call ptr @build_qualified_type(ptr noundef nonnull %737, i32 noundef %753) #24
  store ptr %754, ptr %12, align 8, !tbaa !5
  br label %755

755:                                              ; preds = %743, %747, %752
  %756 = phi ptr [ %754, %752 ], [ %737, %747 ], [ %737, %743 ]
  %757 = call ptr @build_array_type(ptr noundef %756, ptr noundef %735) #24
  %758 = load ptr, ptr @global_trees, align 16
  store ptr %757, ptr %12, align 8, !tbaa !5
  %759 = icmp eq ptr %757, %758
  br i1 %759, label %804, label %760

760:                                              ; preds = %755
  %761 = icmp eq i8 %734, 0
  br i1 %761, label %777, label %762

762:                                              ; preds = %760
  %763 = icmp eq ptr %736, null
  br i1 %763, label %772, label %764

764:                                              ; preds = %762
  %765 = load i64, ptr %736, align 8
  %766 = and i64 %765, 65535
  %767 = icmp eq i64 %766, 23
  br i1 %767, label %768, label %772

768:                                              ; preds = %764
  %769 = getelementptr inbounds %struct.tree_type, ptr %757, i64 0, i32 16
  %770 = load ptr, ptr %769, align 8, !tbaa !16
  %771 = call ptr @build_distinct_type_copy(ptr noundef %770) #24
  store ptr %771, ptr %12, align 8, !tbaa !5
  br label %772

772:                                              ; preds = %768, %764, %762
  %773 = phi ptr [ %771, %768 ], [ %757, %764 ], [ %757, %762 ]
  %774 = getelementptr inbounds %struct.tree_type, ptr %773, i64 0, i32 6
  %775 = load i32, ptr %774, align 4
  %776 = or i32 %775, 67108864
  store i32 %776, ptr %774, align 4
  br label %777

777:                                              ; preds = %772, %760
  %778 = icmp eq ptr %736, null
  br i1 %778, label %792, label %779

779:                                              ; preds = %777
  %780 = call i32 @integer_zerop(ptr noundef nonnull %736) #24
  %781 = icmp eq i32 %780, 0
  br i1 %781, label %792, label %782

782:                                              ; preds = %779
  %783 = icmp eq ptr %735, null
  br i1 %783, label %784, label %785

784:                                              ; preds = %782
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 5398, ptr noundef nonnull @.str.8) #24
  br label %785

785:                                              ; preds = %782, %784
  %786 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 19), align 8, !tbaa !5
  %787 = load ptr, ptr %12, align 8
  %788 = getelementptr inbounds %struct.tree_type, ptr %787, i64 0, i32 2
  store ptr %786, ptr %788, align 8, !tbaa !16
  %789 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !5
  %790 = getelementptr inbounds %struct.tree_type, ptr %787, i64 0, i32 3
  store ptr %789, ptr %790, align 8, !tbaa !16
  %791 = getelementptr inbounds %struct.tree_type, ptr %787, i64 0, i32 19
  store ptr null, ptr %791, align 8, !tbaa !16
  br label %792

792:                                              ; preds = %785, %779, %777
  %793 = icmp eq i8 %732, 0
  br i1 %793, label %804, label %794

794:                                              ; preds = %792
  %795 = icmp eq ptr %735, null
  br i1 %795, label %796, label %797

796:                                              ; preds = %794
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 5405, ptr noundef nonnull @.str.8) #24
  br label %797

797:                                              ; preds = %794, %796
  %798 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 19), align 8, !tbaa !5
  %799 = load ptr, ptr %12, align 8
  %800 = getelementptr inbounds %struct.tree_type, ptr %799, i64 0, i32 2
  store ptr %798, ptr %800, align 8, !tbaa !16
  %801 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !5
  %802 = getelementptr inbounds %struct.tree_type, ptr %799, i64 0, i32 3
  store ptr %801, ptr %802, align 8, !tbaa !16
  %803 = getelementptr inbounds %struct.tree_type, ptr %799, i64 0, i32 19
  store ptr null, ptr %803, align 8, !tbaa !16
  br label %804

804:                                              ; preds = %741, %792, %797, %755
  br i1 %355, label %1102, label %805

805:                                              ; preds = %804
  %806 = icmp ne i32 %452, 0
  %807 = icmp ne ptr %454, null
  %808 = select i1 %806, i1 true, i1 %807
  %809 = icmp ne i8 %457, 0
  %810 = select i1 %808, i1 true, i1 %809
  br i1 %810, label %811, label %1102

811:                                              ; preds = %805
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.286) #24
  br label %1102

812:                                              ; preds = %674, %499
  %813 = phi i8 [ %589, %674 ], [ %370, %499 ]
  %814 = icmp eq ptr %460, null
  br i1 %814, label %1113, label %368

815:                                              ; preds = %426, %815
  %816 = phi ptr [ %818, %815 ], [ %369, %426 ]
  %817 = getelementptr inbounds %struct.c_declarator, ptr %816, i64 0, i32 1
  %818 = load ptr, ptr %817, align 8, !tbaa !144
  %819 = load i32, ptr %818, align 8, !tbaa !143
  %820 = icmp eq i32 %819, 4
  br i1 %820, label %815, label %821, !llvm.loop !155

821:                                              ; preds = %815
  %822 = load ptr, ptr %12, align 8
  %823 = load ptr, ptr @global_trees, align 16
  %824 = icmp eq ptr %822, %823
  br i1 %824, label %396, label %825, !llvm.loop !151

825:                                              ; preds = %821
  %826 = icmp eq i32 %819, 0
  %827 = zext i1 %826 to i8
  br label %828

828:                                              ; preds = %392, %825
  %829 = phi i8 [ %827, %825 ], [ 0, %392 ]
  %830 = phi ptr [ %822, %825 ], [ %393, %392 ]
  %831 = load i64, ptr %830, align 8
  %832 = and i64 %831, 65535
  %833 = icmp eq i64 %832, 20
  br i1 %833, label %834, label %840

834:                                              ; preds = %828
  br i1 %349, label %836, label %835

835:                                              ; preds = %834
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.302, ptr noundef nonnull %89) #24
  br label %837

836:                                              ; preds = %834
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.303) #24
  br label %837

837:                                              ; preds = %836, %835
  %838 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  store ptr %838, ptr %12, align 8, !tbaa !5
  %839 = load i64, ptr %838, align 8
  br label %840

840:                                              ; preds = %837, %828
  %841 = phi i64 [ %839, %837 ], [ %831, %828 ]
  %842 = phi ptr [ %838, %837 ], [ %830, %828 ]
  %843 = and i64 %841, 65535
  %844 = icmp eq i64 %843, 15
  br i1 %844, label %845, label %850

845:                                              ; preds = %840
  br i1 %349, label %847, label %846

846:                                              ; preds = %845
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.304, ptr noundef nonnull %89) #24
  br label %848

847:                                              ; preds = %845
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.305) #24
  br label %848

848:                                              ; preds = %847, %846
  %849 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  store ptr %849, ptr %12, align 8, !tbaa !5
  br label %850

850:                                              ; preds = %848, %840
  %851 = phi ptr [ %849, %848 ], [ %842, %840 ]
  %852 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 93), align 8, !tbaa !156
  %853 = call ptr %852(ptr noundef %851) #24
  %854 = icmp eq ptr %853, null
  br i1 %854, label %857, label %855

855:                                              ; preds = %850
  call void (ptr, ...) @error(ptr noundef nonnull %853) #24
  %856 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  store ptr %856, ptr %12, align 8, !tbaa !5
  br label %857

857:                                              ; preds = %855, %850
  %858 = getelementptr inbounds %struct.c_declarator, ptr %369, i64 0, i32 3
  %859 = load ptr, ptr %858, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11)
  %860 = getelementptr inbounds %struct.c_arg_info, ptr %859, i64 0, i32 2
  %861 = load ptr, ptr %860, align 8, !tbaa !157
  %862 = icmp eq i8 %829, 0
  br i1 %862, label %871, label %863

863:                                              ; preds = %857
  %864 = getelementptr inbounds %struct.c_arg_info, ptr %859, i64 0, i32 5
  %865 = load i8, ptr %864, align 8
  %866 = and i8 %865, 1
  %867 = icmp eq i8 %866, 0
  br i1 %867, label %869, label %868

868:                                              ; preds = %863
  call void (ptr, ...) @error(ptr noundef nonnull @.str.46) #24
  br label %869

869:                                              ; preds = %868, %863
  %870 = icmp ne ptr %861, null
  br label %879

871:                                              ; preds = %857
  %872 = icmp eq ptr %861, null
  br i1 %872, label %873, label %883

873:                                              ; preds = %871
  %874 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %11, i32 noundef %874) #24
  %875 = load i8, ptr %354, align 8, !tbaa !57
  %876 = icmp eq i8 %875, 0
  br i1 %876, label %877, label %879

877:                                              ; preds = %873
  %878 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 189, ptr noundef nonnull @.str.114) #24
  br label %879

879:                                              ; preds = %877, %873, %869
  %880 = phi i1 [ %870, %869 ], [ false, %877 ], [ false, %873 ]
  %881 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %882 = icmp eq ptr %861, %881
  br i1 %882, label %1020, label %886

883:                                              ; preds = %871
  %884 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %885 = icmp eq ptr %861, %884
  br i1 %885, label %1018, label %893

886:                                              ; preds = %879
  br i1 %880, label %887, label %905

887:                                              ; preds = %886
  %888 = getelementptr inbounds %struct.tree_list, ptr %861, i64 0, i32 2
  %889 = load ptr, ptr %888, align 8, !tbaa !16
  %890 = load i64, ptr %889, align 8
  %891 = and i64 %890, 65535
  %892 = icmp eq i64 %891, 1
  br i1 %892, label %899, label %905

893:                                              ; preds = %883
  %894 = getelementptr inbounds %struct.tree_list, ptr %861, i64 0, i32 2
  %895 = load ptr, ptr %894, align 8, !tbaa !16
  %896 = load i64, ptr %895, align 8
  %897 = and i64 %896, 65535
  %898 = icmp eq i64 %897, 1
  br i1 %898, label %900, label %908

899:                                              ; preds = %887
  br i1 %862, label %900, label %903

900:                                              ; preds = %899, %893
  %901 = load i32, ptr @input_location, align 4, !tbaa !20
  %902 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %901, i32 noundef 0, ptr noundef nonnull @.str.341) #24
  br label %903

903:                                              ; preds = %900, %899
  %904 = load ptr, ptr %860, align 8, !tbaa !157
  store ptr %904, ptr %859, align 8, !tbaa !159
  store ptr null, ptr %860, align 8, !tbaa !157
  br label %1020

905:                                              ; preds = %887, %886
  %906 = load ptr, ptr %859, align 8, !tbaa !16
  %907 = icmp eq ptr %906, null
  br i1 %907, label %1020, label %911

908:                                              ; preds = %893
  %909 = load ptr, ptr %859, align 8, !tbaa !16
  %910 = icmp eq ptr %909, null
  br i1 %910, label %1018, label %912

911:                                              ; preds = %905
  br i1 %862, label %912, label %967

912:                                              ; preds = %911, %908
  %913 = phi ptr [ %909, %908 ], [ %906, %911 ]
  br label %914

914:                                              ; preds = %912, %959
  %915 = phi ptr [ %965, %959 ], [ %913, %912 ]
  %916 = phi i32 [ %964, %959 ], [ 1, %912 ]
  %917 = phi ptr [ %963, %959 ], [ %861, %912 ]
  %918 = phi ptr [ %960, %959 ], [ %861, %912 ]
  %919 = getelementptr inbounds %struct.tree_list, ptr %917, i64 0, i32 2
  %920 = load ptr, ptr %919, align 8, !tbaa !16
  %921 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %922 = icmp eq ptr %920, %921
  br i1 %922, label %959, label %923

923:                                              ; preds = %914
  %924 = getelementptr inbounds %struct.tree_type, ptr %920, i64 0, i32 2
  %925 = load ptr, ptr %924, align 8, !tbaa !16
  %926 = icmp eq ptr %925, null
  br i1 %926, label %927, label %942

927:                                              ; preds = %923
  %928 = load i64, ptr %920, align 8
  %929 = and i64 %928, 65535
  %930 = icmp eq i64 %929, 19
  br i1 %930, label %931, label %942

931:                                              ; preds = %927
  %932 = getelementptr inbounds %struct.tree_decl_minimal, ptr %915, i64 0, i32 3
  %933 = load ptr, ptr %932, align 8, !tbaa !16
  %934 = icmp eq ptr %933, null
  br i1 %934, label %938, label %935

935:                                              ; preds = %931
  %936 = load i32, ptr @input_location, align 4, !tbaa !20
  %937 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %936, i32 noundef 0, ptr noundef nonnull @.str.344, i32 noundef %916, ptr noundef nonnull %915) #24
  br label %942

938:                                              ; preds = %931
  %939 = getelementptr inbounds %struct.tree_decl_minimal, ptr %915, i64 0, i32 1
  %940 = load i32, ptr %939, align 8, !tbaa !16
  %941 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %940, i32 noundef 0, ptr noundef nonnull @.str.345, i32 noundef %916) #24
  br label %942

942:                                              ; preds = %938, %935, %927, %923
  %943 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 92), align 8, !tbaa !160
  %944 = call ptr %943(ptr noundef nonnull %920) #24
  %945 = icmp eq ptr %944, null
  br i1 %945, label %949, label %946

946:                                              ; preds = %942
  call void (ptr, ...) @error(ptr noundef nonnull %944) #24
  %947 = load ptr, ptr @global_trees, align 16, !tbaa !5
  store ptr %947, ptr %919, align 8, !tbaa !16
  %948 = getelementptr inbounds %struct.tree_common, ptr %915, i64 0, i32 2
  store ptr %947, ptr %948, align 8, !tbaa !16
  br label %949

949:                                              ; preds = %946, %942
  %950 = phi ptr [ null, %946 ], [ %918, %942 ]
  %951 = getelementptr inbounds %struct.tree_decl_minimal, ptr %915, i64 0, i32 3
  %952 = load ptr, ptr %951, align 8, !tbaa !16
  %953 = icmp eq ptr %952, null
  br i1 %953, label %959, label %954

954:                                              ; preds = %949
  %955 = load i64, ptr %915, align 8
  %956 = and i64 %955, 16777216
  %957 = icmp eq i64 %956, 0
  br i1 %957, label %959, label %958

958:                                              ; preds = %954
  call fastcc void @warn_if_shadowing(ptr noundef nonnull %915)
  br label %959

959:                                              ; preds = %958, %954, %949, %914
  %960 = phi ptr [ %918, %914 ], [ %950, %958 ], [ %950, %954 ], [ %950, %949 ]
  %961 = getelementptr inbounds %struct.tree_common, ptr %915, i64 0, i32 1
  %962 = getelementptr inbounds %struct.tree_common, ptr %917, i64 0, i32 1
  %963 = load ptr, ptr %962, align 8, !tbaa !16
  %964 = add i32 %916, 1
  %965 = load ptr, ptr %961, align 8, !tbaa !16
  %966 = icmp eq ptr %965, null
  br i1 %966, label %1020, label %914, !llvm.loop !161

967:                                              ; preds = %911, %1010
  %968 = phi ptr [ %1016, %1010 ], [ %906, %911 ]
  %969 = phi i32 [ %1015, %1010 ], [ 1, %911 ]
  %970 = phi ptr [ %1014, %1010 ], [ %861, %911 ]
  %971 = phi ptr [ %1011, %1010 ], [ %861, %911 ]
  %972 = getelementptr inbounds %struct.tree_list, ptr %970, i64 0, i32 2
  %973 = load ptr, ptr %972, align 8, !tbaa !16
  %974 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %975 = icmp eq ptr %973, %974
  br i1 %975, label %1010, label %976

976:                                              ; preds = %967
  %977 = getelementptr inbounds %struct.tree_type, ptr %973, i64 0, i32 2
  %978 = load ptr, ptr %977, align 8, !tbaa !16
  %979 = icmp eq ptr %978, null
  br i1 %979, label %980, label %992

980:                                              ; preds = %976
  %981 = getelementptr inbounds %struct.tree_decl_minimal, ptr %968, i64 0, i32 3
  %982 = load ptr, ptr %981, align 8, !tbaa !16
  %983 = icmp eq ptr %982, null
  br i1 %983, label %986, label %984

984:                                              ; preds = %980
  %985 = load i32, ptr @input_location, align 4, !tbaa !20
  call void (i32, ptr, ...) @error_at(i32 noundef %985, ptr noundef nonnull @.str.342, i32 noundef %969, ptr noundef nonnull %968) #24
  br label %989

986:                                              ; preds = %980
  %987 = getelementptr inbounds %struct.tree_decl_minimal, ptr %968, i64 0, i32 1
  %988 = load i32, ptr %987, align 8, !tbaa !16
  call void (i32, ptr, ...) @error_at(i32 noundef %988, ptr noundef nonnull @.str.343, i32 noundef %969) #24
  br label %989

989:                                              ; preds = %986, %984
  %990 = load ptr, ptr @global_trees, align 16, !tbaa !5
  store ptr %990, ptr %972, align 8, !tbaa !16
  %991 = getelementptr inbounds %struct.tree_common, ptr %968, i64 0, i32 2
  store ptr %990, ptr %991, align 8, !tbaa !16
  br label %992

992:                                              ; preds = %989, %976
  %993 = phi ptr [ %971, %976 ], [ null, %989 ]
  %994 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 92), align 8, !tbaa !160
  %995 = call ptr %994(ptr noundef nonnull %973) #24
  %996 = icmp eq ptr %995, null
  br i1 %996, label %1000, label %997

997:                                              ; preds = %992
  call void (ptr, ...) @error(ptr noundef nonnull %995) #24
  %998 = load ptr, ptr @global_trees, align 16, !tbaa !5
  store ptr %998, ptr %972, align 8, !tbaa !16
  %999 = getelementptr inbounds %struct.tree_common, ptr %968, i64 0, i32 2
  store ptr %998, ptr %999, align 8, !tbaa !16
  br label %1000

1000:                                             ; preds = %997, %992
  %1001 = phi ptr [ null, %997 ], [ %993, %992 ]
  %1002 = getelementptr inbounds %struct.tree_decl_minimal, ptr %968, i64 0, i32 3
  %1003 = load ptr, ptr %1002, align 8, !tbaa !16
  %1004 = icmp eq ptr %1003, null
  br i1 %1004, label %1010, label %1005

1005:                                             ; preds = %1000
  %1006 = load i64, ptr %968, align 8
  %1007 = and i64 %1006, 16777216
  %1008 = icmp eq i64 %1007, 0
  br i1 %1008, label %1010, label %1009

1009:                                             ; preds = %1005
  call fastcc void @warn_if_shadowing(ptr noundef nonnull %968)
  br label %1010

1010:                                             ; preds = %1009, %1005, %1000, %967
  %1011 = phi ptr [ %971, %967 ], [ %1001, %1009 ], [ %1001, %1005 ], [ %1001, %1000 ]
  %1012 = getelementptr inbounds %struct.tree_common, ptr %968, i64 0, i32 1
  %1013 = getelementptr inbounds %struct.tree_common, ptr %970, i64 0, i32 1
  %1014 = load ptr, ptr %1013, align 8, !tbaa !16
  %1015 = add i32 %969, 1
  %1016 = load ptr, ptr %1012, align 8, !tbaa !16
  %1017 = icmp eq ptr %1016, null
  br i1 %1017, label %1020, label %967, !llvm.loop !161

1018:                                             ; preds = %883, %908
  %1019 = phi ptr [ %861, %908 ], [ null, %883 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11)
  br label %1025

1020:                                             ; preds = %1010, %959, %879, %903, %905
  %1021 = phi ptr [ null, %903 ], [ null, %879 ], [ %861, %905 ], [ %960, %959 ], [ %1011, %1010 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11)
  br i1 %862, label %1025, label %1022

1022:                                             ; preds = %1020
  %1023 = getelementptr inbounds %struct.c_arg_info, ptr %859, i64 0, i32 4
  %1024 = load ptr, ptr %1023, align 8, !tbaa !162
  call void @put_pending_sizes(ptr noundef %1024) #24
  br label %1025

1025:                                             ; preds = %1018, %1022, %1020
  %1026 = phi ptr [ %1019, %1018 ], [ %1021, %1022 ], [ %1021, %1020 ]
  %1027 = icmp eq i32 %360, 0
  %1028 = load ptr, ptr %12, align 8, !tbaa !5
  br i1 %1027, label %1042, label %1029

1029:                                             ; preds = %1025
  %1030 = load i64, ptr %1028, align 8
  %1031 = and i64 %1030, 65535
  %1032 = icmp eq i64 %1031, 19
  %1033 = icmp ne i8 %829, 0
  %1034 = and i1 %1033, %1032
  br i1 %1034, label %1035, label %1037

1035:                                             ; preds = %1029
  %1036 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 0, ptr noundef nonnull @.str.306) #24
  br label %1039

1037:                                             ; preds = %1029
  %1038 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %91, i32 noundef 101, ptr noundef nonnull @.str.307) #24
  br label %1039

1039:                                             ; preds = %1037, %1035
  %1040 = load ptr, ptr %12, align 8, !tbaa !5
  %1041 = call ptr @c_build_qualified_type(ptr noundef %1040, i32 noundef %360) #24
  store ptr %1041, ptr %12, align 8, !tbaa !5
  br label %1042

1042:                                             ; preds = %1039, %1025
  %1043 = phi ptr [ %1041, %1039 ], [ %1028, %1025 ]
  %1044 = call ptr @build_function_type(ptr noundef %1043, ptr noundef %1026) #24
  store ptr %1044, ptr %12, align 8, !tbaa !5
  %1045 = getelementptr inbounds %struct.c_declarator, ptr %369, i64 0, i32 1
  %1046 = load ptr, ptr %1045, align 8, !tbaa !144
  %1047 = getelementptr inbounds %struct.c_arg_info, ptr %859, i64 0, i32 1
  %1048 = load ptr, ptr %1047, align 8, !tbaa !16
  %1049 = icmp eq ptr %1048, null
  br i1 %1049, label %1102, label %1050

1050:                                             ; preds = %1042, %1050
  %1051 = phi ptr [ %1056, %1050 ], [ %1048, %1042 ]
  %1052 = getelementptr inbounds %struct.tree_list, ptr %1051, i64 0, i32 2
  %1053 = load ptr, ptr %1052, align 8, !tbaa !16
  %1054 = getelementptr inbounds %struct.tree_type, ptr %1053, i64 0, i32 18
  store ptr %1044, ptr %1054, align 8, !tbaa !16
  %1055 = getelementptr inbounds %struct.tree_common, ptr %1051, i64 0, i32 1
  %1056 = load ptr, ptr %1055, align 8, !tbaa !16
  %1057 = icmp eq ptr %1056, null
  br i1 %1057, label %1102, label %1050, !llvm.loop !163

1058:                                             ; preds = %390, %426
  %1059 = load i32, ptr @pedantic, align 4, !tbaa !20
  %1060 = icmp eq i32 %1059, 0
  %1061 = load ptr, ptr %12, align 8, !tbaa !5
  br i1 %1060, label %1071, label %1062

1062:                                             ; preds = %1058
  %1063 = load i64, ptr %1061, align 8
  %1064 = and i64 %1063, 65535
  %1065 = icmp eq i64 %1064, 20
  %1066 = icmp ne i32 %360, 0
  %1067 = select i1 %1065, i1 %1066, i1 false
  br i1 %1067, label %1068, label %1071

1068:                                             ; preds = %1062
  %1069 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 834, ptr noundef nonnull @.str.308) #24
  %1070 = load ptr, ptr %12, align 8, !tbaa !5
  br label %1073

1071:                                             ; preds = %1062, %1058
  %1072 = icmp eq i32 %360, 0
  br i1 %1072, label %1076, label %1073

1073:                                             ; preds = %1068, %1071
  %1074 = phi ptr [ %1070, %1068 ], [ %1061, %1071 ]
  %1075 = call ptr @c_build_qualified_type(ptr noundef %1074, i32 noundef %360) #24
  store ptr %1075, ptr %12, align 8, !tbaa !5
  br label %1076

1076:                                             ; preds = %1071, %1073
  %1077 = phi ptr [ %1075, %1073 ], [ %1061, %1071 ]
  %1078 = getelementptr inbounds %struct.tree_type, ptr %1077, i64 0, i32 12
  %1079 = load ptr, ptr %1078, align 8, !tbaa !16
  %1080 = icmp eq ptr %1079, null
  br i1 %1080, label %1081, label %1094

1081:                                             ; preds = %1076
  switch i32 %105, label %1094 [
    i32 3, label %1082
    i32 0, label %1082
  ]

1082:                                             ; preds = %1081, %1081
  %1083 = call zeroext i8 @variably_modified_type_p(ptr noundef nonnull %1077, ptr noundef null) #24
  %1084 = icmp eq i8 %1083, 0
  %1085 = load ptr, ptr %12, align 8, !tbaa !5
  br i1 %1084, label %1094, label %1086

1086:                                             ; preds = %1082
  %1087 = call ptr @build_decl_stat(i32 noundef %91, i32 noundef 35, ptr noundef null, ptr noundef %1085) #24
  %1088 = getelementptr inbounds %struct.tree_decl_common, ptr %1087, i64 0, i32 2
  %1089 = load i64, ptr %1088, align 8
  %1090 = or i64 %1089, 4096
  store i64 %1090, ptr %1088, align 8
  %1091 = call ptr @pushdecl(ptr noundef %1087)
  call void @finish_decl(ptr noundef %1087, i32 noundef %91, ptr noundef null, ptr noundef null, ptr noundef null)
  %1092 = load ptr, ptr %12, align 8, !tbaa !5
  %1093 = getelementptr inbounds %struct.tree_type, ptr %1092, i64 0, i32 12
  store ptr %1087, ptr %1093, align 8, !tbaa !16
  br label %1094

1094:                                             ; preds = %1081, %1086, %1082, %1076
  %1095 = phi ptr [ %1077, %1081 ], [ %1092, %1086 ], [ %1085, %1082 ], [ %1077, %1076 ]
  %1096 = call ptr @build_pointer_type(ptr noundef %1095) #24
  store ptr %1096, ptr %12, align 8, !tbaa !5
  %1097 = getelementptr inbounds %struct.c_declarator, ptr %369, i64 0, i32 3
  %1098 = load i32, ptr %1097, align 8, !tbaa !16
  %1099 = getelementptr inbounds %struct.c_declarator, ptr %369, i64 0, i32 1
  %1100 = load ptr, ptr %1099, align 8, !tbaa !144
  br label %1102

1101:                                             ; preds = %390, %426
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 5576, ptr noundef nonnull @.str.8) #24
  br label %1102

1102:                                             ; preds = %1050, %1042, %804, %811, %805, %1101, %1094, %442
  %1103 = phi ptr [ %367, %1101 ], [ %367, %1094 ], [ %367, %442 ], [ %733, %805 ], [ %733, %811 ], [ %733, %804 ], [ %367, %1042 ], [ %367, %1050 ]
  %1104 = phi ptr [ %366, %1101 ], [ %366, %1094 ], [ %445, %442 ], [ %366, %805 ], [ %366, %811 ], [ %366, %804 ], [ %366, %1042 ], [ %366, %1050 ]
  %1105 = phi ptr [ %365, %1101 ], [ %365, %1094 ], [ %365, %442 ], [ %365, %805 ], [ %365, %811 ], [ %365, %804 ], [ %859, %1042 ], [ %859, %1050 ]
  %1106 = phi i32 [ 0, %1101 ], [ 0, %1094 ], [ 0, %442 ], [ 0, %805 ], [ 0, %811 ], [ %458, %804 ], [ 0, %1042 ], [ 0, %1050 ]
  %1107 = phi ptr [ null, %1101 ], [ null, %1094 ], [ null, %442 ], [ null, %805 ], [ null, %811 ], [ %454, %804 ], [ null, %1042 ], [ null, %1050 ]
  %1108 = phi i32 [ 0, %1101 ], [ 0, %1094 ], [ 0, %442 ], [ 0, %805 ], [ 0, %811 ], [ %452, %804 ], [ 0, %1042 ], [ 0, %1050 ]
  %1109 = phi i8 [ %370, %1101 ], [ 0, %1094 ], [ %370, %442 ], [ %734, %805 ], [ %734, %811 ], [ %734, %804 ], [ 0, %1042 ], [ 0, %1050 ]
  %1110 = phi i32 [ %360, %1101 ], [ %1098, %1094 ], [ %360, %442 ], [ %360, %805 ], [ %360, %811 ], [ %360, %804 ], [ 0, %1042 ], [ 0, %1050 ]
  %1111 = phi ptr [ %369, %1101 ], [ %1100, %1094 ], [ %432, %442 ], [ %460, %805 ], [ %460, %811 ], [ %460, %804 ], [ %1046, %1042 ], [ %1046, %1050 ]
  %1112 = icmp eq ptr %1111, null
  br i1 %1112, label %1113, label %358, !llvm.loop !151

1113:                                             ; preds = %1102, %812, %379, %415, %407, %411, %348
  %1114 = phi ptr [ null, %348 ], [ %366, %411 ], [ %366, %407 ], [ %366, %415 ], [ %366, %379 ], [ %366, %812 ], [ %1104, %1102 ]
  %1115 = phi ptr [ null, %348 ], [ %365, %411 ], [ %365, %407 ], [ %365, %415 ], [ %365, %379 ], [ %365, %812 ], [ %1105, %1102 ]
  %1116 = phi i32 [ %269, %348 ], [ %360, %411 ], [ %360, %407 ], [ %360, %415 ], [ %360, %379 ], [ %360, %812 ], [ %1110, %1102 ]
  %1117 = phi i8 [ %133, %348 ], [ %370, %411 ], [ %370, %407 ], [ %370, %415 ], [ %813, %812 ], [ %370, %379 ], [ %1109, %1102 ]
  %1118 = phi ptr [ null, %348 ], [ %405, %411 ], [ %405, %407 ], [ %400, %415 ], [ %454, %812 ], [ %372, %379 ], [ %1107, %1102 ]
  %1119 = phi i32 [ 0, %348 ], [ %406, %411 ], [ %406, %407 ], [ %401, %415 ], [ %452, %812 ], [ %371, %379 ], [ %1108, %1102 ]
  %1120 = phi ptr [ null, %348 ], [ %408, %407 ], [ null, %411 ], [ %369, %415 ], [ null, %812 ], [ %369, %379 ], [ null, %1102 ]
  %1121 = load ptr, ptr %5, align 8, !tbaa !5
  %1122 = call ptr @chainon(ptr noundef %1114, ptr noundef %1121) #24
  store ptr %1122, ptr %5, align 8, !tbaa !5
  %1123 = lshr i32 %1116, 8
  %1124 = trunc i32 %1123 to i8
  %1125 = and i32 %1116, 65280
  %1126 = icmp eq i32 %1125, 0
  br i1 %1126, label %1153, label %1127

1127:                                             ; preds = %1113
  switch i32 %105, label %1148 [
    i32 0, label %1128
    i32 2, label %1139
  ]

1128:                                             ; preds = %1127
  switch i32 %350, label %1138 [
    i32 1, label %1129
    i32 3, label %1131
    i32 0, label %1133
    i32 4, label %1153
    i32 2, label %1153
    i32 5, label %1153
  ]

1129:                                             ; preds = %1128
  %1130 = call ptr @c_addr_space_name(i8 noundef zeroext %1124) #24
  call void (ptr, ...) @error(ptr noundef nonnull @.str.309, ptr noundef %1130, ptr noundef %89) #24
  br label %1153

1131:                                             ; preds = %1128
  %1132 = call ptr @c_addr_space_name(i8 noundef zeroext %1124) #24
  call void (ptr, ...) @error(ptr noundef nonnull @.str.310, ptr noundef %1132, ptr noundef %89) #24
  br label %1153

1133:                                             ; preds = %1128
  %1134 = load ptr, ptr @current_function_scope, align 8, !tbaa !5
  %1135 = icmp eq ptr %1134, null
  br i1 %1135, label %1153, label %1136

1136:                                             ; preds = %1133
  %1137 = call ptr @c_addr_space_name(i8 noundef zeroext %1124) #24
  call void (ptr, ...) @error(ptr noundef nonnull @.str.311, ptr noundef %1137, ptr noundef %89) #24
  br label %1153

1138:                                             ; preds = %1128
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 5614, ptr noundef nonnull @.str.8) #24
  br label %1153

1139:                                             ; preds = %1127
  %1140 = load ptr, ptr %12, align 8, !tbaa !5
  %1141 = load i64, ptr %1140, align 8
  %1142 = and i64 %1141, 65535
  %1143 = icmp eq i64 %1142, 15
  br i1 %1143, label %1153, label %1144

1144:                                             ; preds = %1139
  %1145 = call ptr @c_addr_space_name(i8 noundef zeroext %1124) #24
  br i1 %349, label %1147, label %1146

1146:                                             ; preds = %1144
  call void (ptr, ...) @error(ptr noundef nonnull @.str.312, ptr noundef %1145, ptr noundef nonnull %89) #24
  br label %1153

1147:                                             ; preds = %1144
  call void (ptr, ...) @error(ptr noundef nonnull @.str.313, ptr noundef %1145) #24
  br label %1153

1148:                                             ; preds = %1127
  br i1 %114, label %1149, label %1153

1149:                                             ; preds = %1148
  %1150 = call ptr @c_addr_space_name(i8 noundef zeroext %1124) #24
  br i1 %349, label %1152, label %1151

1151:                                             ; preds = %1149
  call void (ptr, ...) @error(ptr noundef nonnull @.str.314, ptr noundef %1150, ptr noundef nonnull %89) #24
  br label %1153

1152:                                             ; preds = %1149
  call void (ptr, ...) @error(ptr noundef nonnull @.str.315, ptr noundef %1150) #24
  br label %1153

1153:                                             ; preds = %1139, %1128, %1128, %1128, %1133, %1138, %1136, %1131, %1129, %1148, %1152, %1151, %1146, %1147, %1113
  br i1 %28, label %1154, label %1280

1154:                                             ; preds = %1153
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10)
  %1155 = icmp ne ptr %89, null
  br i1 %1155, label %1156, label %1160

1156:                                             ; preds = %1154
  %1157 = getelementptr inbounds %struct.tree_identifier, ptr %89, i64 0, i32 1
  %1158 = load ptr, ptr %1157, align 8, !tbaa !16
  %1159 = call ptr @identifier_to_locale(ptr noundef %1158) #24
  br label %1160

1160:                                             ; preds = %1156, %1154
  %1161 = phi ptr [ %1159, %1156 ], [ @.str.346, %1154 ]
  %1162 = load ptr, ptr %4, align 8, !tbaa !5
  %1163 = getelementptr inbounds %struct.tree_common, ptr %1162, i64 0, i32 2
  %1164 = load ptr, ptr %1163, align 8, !tbaa !16
  %1165 = load i64, ptr %1164, align 8
  %1166 = trunc i64 %1165 to i32
  %1167 = and i32 %1166, 65535
  %1168 = add nsw i32 %1167, -6
  %1169 = icmp ult i32 %1168, 3
  br i1 %1169, label %1170, label %1201

1170:                                             ; preds = %1160
  %1171 = load i64, ptr %1162, align 8
  %1172 = and i64 %1171, 65535
  %1173 = icmp eq i64 %1172, 23
  br i1 %1173, label %1191, label %1174

1174:                                             ; preds = %1170
  %1175 = call ptr @c_fully_fold(ptr noundef nonnull %1162, i8 noundef zeroext 0, ptr noundef null) #24
  store ptr %1175, ptr %4, align 8, !tbaa !5
  %1176 = load i64, ptr %1175, align 8
  %1177 = and i64 %1176, 65535
  %1178 = icmp eq i64 %1177, 23
  br i1 %1178, label %1179, label %1185

1179:                                             ; preds = %1174
  %1180 = load i32, ptr @input_location, align 4, !tbaa !20
  %1181 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %1180, i32 noundef 834, ptr noundef nonnull @.str.348, ptr noundef %1161) #24
  %1182 = load ptr, ptr %4, align 8, !tbaa !5
  %1183 = load i64, ptr %1182, align 8
  %1184 = and i64 %1183, 65535
  br label %1185

1185:                                             ; preds = %1179, %1174
  %1186 = phi i64 [ %1177, %1174 ], [ %1184, %1179 ]
  %1187 = phi ptr [ %1175, %1174 ], [ %1182, %1179 ]
  %1188 = icmp eq i64 %1186, 23
  br i1 %1188, label %1191, label %1189

1189:                                             ; preds = %1185
  call void (ptr, ...) @error(ptr noundef nonnull @.str.347, ptr noundef %1161) #24
  %1190 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 14), align 16, !tbaa !5
  store ptr %1190, ptr %4, align 8, !tbaa !5
  br label %1191

1191:                                             ; preds = %1189, %1185, %1170
  %1192 = phi ptr [ %1190, %1189 ], [ %1187, %1185 ], [ %1162, %1170 ]
  call void @constant_expression_warning(ptr noundef %1192) #24
  %1193 = load ptr, ptr %4, align 8, !tbaa !5
  %1194 = call i32 @tree_int_cst_sgn(ptr noundef %1193) #24
  %1195 = icmp slt i32 %1194, 0
  br i1 %1195, label %1201, label %1196

1196:                                             ; preds = %1191
  %1197 = load ptr, ptr %4, align 8, !tbaa !5
  %1198 = call i32 @integer_zerop(ptr noundef %1197) #24
  %1199 = icmp ne i32 %1198, 0
  %1200 = and i1 %1155, %1199
  br i1 %1200, label %1201, label %1204

1201:                                             ; preds = %1196, %1191, %1160
  %1202 = phi ptr [ @.str.347, %1160 ], [ @.str.349, %1191 ], [ @.str.350, %1196 ]
  call void (ptr, ...) @error(ptr noundef nonnull %1202, ptr noundef %1161) #24
  %1203 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 14), align 16, !tbaa !5
  store ptr %1203, ptr %4, align 8, !tbaa !5
  br label %1204

1204:                                             ; preds = %1201, %1196
  %1205 = load ptr, ptr %12, align 8, !tbaa !5
  %1206 = load i64, ptr %1205, align 8
  %1207 = trunc i64 %1206 to i32
  %1208 = and i32 %1207, 65535
  %1209 = add nsw i32 %1208, -6
  %1210 = icmp ult i32 %1209, 3
  br i1 %1210, label %1213, label %1211

1211:                                             ; preds = %1204
  call void (ptr, ...) @error(ptr noundef nonnull @.str.351, ptr noundef %1161) #24
  %1212 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16, !tbaa !5
  store ptr %1212, ptr %12, align 8, !tbaa !5
  br label %1213

1213:                                             ; preds = %1211, %1204
  %1214 = phi ptr [ %1205, %1204 ], [ %1212, %1211 ]
  %1215 = getelementptr inbounds %struct.tree_type, ptr %1214, i64 0, i32 16
  %1216 = load ptr, ptr %1215, align 8, !tbaa !16
  %1217 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %10, i32 noundef %1217) #24
  %1218 = getelementptr inbounds %struct.expanded_location, ptr %10, i64 0, i32 3
  %1219 = load i8, ptr %1218, align 8, !tbaa !57
  %1220 = icmp ne i8 %1219, 0
  %1221 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %1222 = icmp eq ptr %1216, %1221
  %1223 = select i1 %1220, i1 true, i1 %1222
  %1224 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16
  %1225 = icmp eq ptr %1216, %1224
  %1226 = select i1 %1223, i1 true, i1 %1225
  %1227 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8
  %1228 = icmp eq ptr %1216, %1227
  %1229 = select i1 %1226, i1 true, i1 %1228
  br i1 %1229, label %1233, label %1230

1230:                                             ; preds = %1213
  %1231 = load i32, ptr @input_location, align 4, !tbaa !20
  %1232 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %1231, i32 noundef 834, ptr noundef nonnull @.str.352, ptr noundef %1161) #24
  br label %1233

1233:                                             ; preds = %1230, %1213
  %1234 = load ptr, ptr %12, align 8, !tbaa !5
  %1235 = getelementptr inbounds %struct.tree_type, ptr %1234, i64 0, i32 6
  %1236 = load i32, ptr %1235, align 4
  %1237 = and i32 %1236, 1023
  %1238 = load ptr, ptr %4, align 8, !tbaa !5
  %1239 = zext i32 %1237 to i64
  %1240 = call i32 @compare_tree_int(ptr noundef %1238, i64 noundef %1239) #24
  %1241 = icmp sgt i32 %1240, 0
  br i1 %1241, label %1242, label %1244

1242:                                             ; preds = %1233
  call void (ptr, ...) @error(ptr noundef nonnull @.str.353, ptr noundef %1161) #24
  %1243 = call ptr @build_int_cst(ptr noundef null, i64 noundef %1239) #24
  store ptr %1243, ptr %4, align 8, !tbaa !5
  br label %1247

1244:                                             ; preds = %1233
  %1245 = load ptr, ptr %4, align 8, !tbaa !5
  %1246 = call i64 @tree_low_cst(ptr noundef %1245, i32 noundef 1) #24
  br label %1247

1247:                                             ; preds = %1244, %1242
  %1248 = phi i64 [ %1239, %1242 ], [ %1246, %1244 ]
  %1249 = load ptr, ptr %12, align 8, !tbaa !5
  %1250 = load i64, ptr %1249, align 8
  %1251 = and i64 %1250, 65535
  %1252 = icmp eq i64 %1251, 6
  br i1 %1252, label %1253, label %1279

1253:                                             ; preds = %1247
  %1254 = getelementptr inbounds %struct.tree_type, ptr %1249, i64 0, i32 20
  %1255 = load ptr, ptr %1254, align 8, !tbaa !16
  %1256 = icmp eq ptr %1255, null
  br i1 %1256, label %1277, label %1257

1257:                                             ; preds = %1253
  %1258 = getelementptr inbounds %struct.lang_type, ptr %1255, i64 0, i32 1
  %1259 = load ptr, ptr %1258, align 8, !tbaa !164
  %1260 = lshr i64 %1250, 21
  %1261 = trunc i64 %1260 to i8
  %1262 = and i8 %1261, 1
  %1263 = call i32 @tree_int_cst_min_precision(ptr noundef %1259, i8 noundef zeroext %1262) #24
  %1264 = zext i32 %1263 to i64
  %1265 = icmp ult i64 %1248, %1264
  br i1 %1265, label %1277, label %1266

1266:                                             ; preds = %1257
  %1267 = getelementptr inbounds %struct.lang_type, ptr %1255, i64 0, i32 2
  %1268 = load ptr, ptr %1267, align 8, !tbaa !166
  %1269 = load ptr, ptr %12, align 8, !tbaa !5
  %1270 = load i64, ptr %1269, align 8
  %1271 = lshr i64 %1270, 21
  %1272 = trunc i64 %1271 to i8
  %1273 = and i8 %1272, 1
  %1274 = call i32 @tree_int_cst_min_precision(ptr noundef %1268, i8 noundef zeroext %1273) #24
  %1275 = zext i32 %1274 to i64
  %1276 = icmp ult i64 %1248, %1275
  br i1 %1276, label %1277, label %1279

1277:                                             ; preds = %1266, %1257, %1253
  %1278 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.354, ptr noundef %1161) #24
  br label %1279

1279:                                             ; preds = %1247, %1266, %1277
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10)
  br label %1280

1280:                                             ; preds = %1279, %1153
  %1281 = load ptr, ptr %12, align 8, !tbaa !5
  %1282 = load i64, ptr %1281, align 8
  %1283 = and i64 %1282, 65535
  %1284 = icmp eq i64 %1283, 15
  br i1 %1284, label %1285, label %1300

1285:                                             ; preds = %1280
  %1286 = getelementptr inbounds %struct.tree_type, ptr %1281, i64 0, i32 2
  %1287 = load ptr, ptr %1286, align 8, !tbaa !16
  %1288 = icmp eq ptr %1287, null
  br i1 %1288, label %1300, label %1289

1289:                                             ; preds = %1285
  %1290 = getelementptr inbounds %struct.tree_type, ptr %1281, i64 0, i32 3
  %1291 = load ptr, ptr %1290, align 8, !tbaa !16
  %1292 = load i64, ptr %1291, align 8
  %1293 = and i64 %1292, 134283263
  %1294 = icmp eq i64 %1293, 134217751
  br i1 %1294, label %1295, label %1300

1295:                                             ; preds = %1289
  br i1 %349, label %1297, label %1296

1296:                                             ; preds = %1295
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.297, ptr noundef nonnull %89) #24
  br label %1298

1297:                                             ; preds = %1295
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.298) #24
  br label %1298

1298:                                             ; preds = %1297, %1296
  %1299 = load ptr, ptr @global_trees, align 16, !tbaa !5
  store ptr %1299, ptr %12, align 8, !tbaa !5
  br label %1300

1300:                                             ; preds = %1298, %1289, %1285, %1280
  %1301 = phi ptr [ %1299, %1298 ], [ %1281, %1289 ], [ %1281, %1285 ], [ %1281, %1280 ]
  %1302 = icmp eq i32 %350, 5
  br i1 %1302, label %1303, label %1383

1303:                                             ; preds = %1300
  %1304 = load i32, ptr @pedantic, align 4, !tbaa !20
  %1305 = icmp eq i32 %1304, 0
  br i1 %1305, label %1315, label %1306

1306:                                             ; preds = %1303
  %1307 = load i64, ptr %1301, align 8
  %1308 = and i64 %1307, 65535
  %1309 = icmp eq i64 %1308, 20
  %1310 = icmp ne i32 %1116, 0
  %1311 = select i1 %1309, i1 %1310, i1 false
  br i1 %1311, label %1312, label %1315

1312:                                             ; preds = %1306
  %1313 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 834, ptr noundef nonnull @.str.308) #24
  %1314 = load ptr, ptr %12, align 8, !tbaa !5
  br label %1317

1315:                                             ; preds = %1306, %1303
  %1316 = icmp eq i32 %1116, 0
  br i1 %1316, label %1320, label %1317

1317:                                             ; preds = %1312, %1315
  %1318 = phi ptr [ %1314, %1312 ], [ %1301, %1315 ]
  %1319 = call ptr @c_build_qualified_type(ptr noundef %1318, i32 noundef %1116) #24
  store ptr %1319, ptr %12, align 8, !tbaa !5
  br label %1320

1320:                                             ; preds = %1317, %1315
  %1321 = phi ptr [ %1319, %1317 ], [ %1301, %1315 ]
  %1322 = getelementptr inbounds %struct.c_declarator, ptr %1120, i64 0, i32 2
  %1323 = load i32, ptr %1322, align 8, !tbaa !141
  %1324 = getelementptr inbounds %struct.c_declarator, ptr %1120, i64 0, i32 3
  %1325 = load ptr, ptr %1324, align 8, !tbaa !16
  %1326 = call ptr @build_decl_stat(i32 noundef %1323, i32 noundef 35, ptr noundef %1325, ptr noundef %1321) #24
  %1327 = load i8, ptr %35, align 8
  %1328 = and i8 %1327, 64
  %1329 = icmp eq i8 %1328, 0
  br i1 %1329, label %1334, label %1330

1330:                                             ; preds = %1320
  %1331 = getelementptr inbounds %struct.tree_decl_common, ptr %1326, i64 0, i32 2
  %1332 = load i64, ptr %1331, align 8
  %1333 = or i64 %1332, 65536
  store i64 %1333, ptr %1331, align 8
  br label %1334

1334:                                             ; preds = %1330, %1320
  %1335 = load i16, ptr %19, align 8
  %1336 = and i16 %1335, 64
  %1337 = icmp eq i16 %1336, 0
  br i1 %1337, label %1340, label %1338

1338:                                             ; preds = %1334
  %1339 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 0, ptr noundef nonnull @.str.316, ptr noundef %1326) #24
  br label %1340

1340:                                             ; preds = %1338, %1334
  %1341 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %1342 = icmp eq i32 %1341, 0
  br i1 %1342, label %1856, label %1343

1343:                                             ; preds = %1340
  %1344 = load ptr, ptr %1324, align 8, !tbaa !16
  %1345 = icmp eq ptr %1344, null
  br i1 %1345, label %1856, label %1346

1346:                                             ; preds = %1343
  %1347 = getelementptr inbounds %struct.lang_identifier, ptr %1344, i64 0, i32 2
  %1348 = load ptr, ptr %1347, align 8, !tbaa !34
  %1349 = icmp eq ptr %1348, null
  br i1 %1349, label %1856, label %1350

1350:                                             ; preds = %1346
  %1351 = getelementptr inbounds %struct.c_binding, ptr %1348, i64 0, i32 1
  %1352 = load ptr, ptr %1351, align 8, !tbaa !32
  %1353 = icmp eq ptr %1352, null
  br i1 %1353, label %1856, label %1354

1354:                                             ; preds = %1350
  %1355 = getelementptr inbounds %struct.c_binding, ptr %1348, i64 0, i32 5
  %1356 = load i32, ptr %1355, align 8
  %1357 = and i32 %1356, 268435455
  %1358 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %1359 = getelementptr inbounds %struct.c_scope, ptr %1358, i64 0, i32 5
  %1360 = load i64, ptr %1359, align 8
  %1361 = trunc i64 %1360 to i32
  %1362 = and i32 %1361, 268435455
  %1363 = icmp eq i32 %1357, %1362
  br i1 %1363, label %1369, label %1364

1364:                                             ; preds = %1354
  %1365 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %1366 = icmp eq ptr %1358, %1365
  %1367 = icmp eq i32 %1357, 0
  %1368 = and i1 %1367, %1366
  br i1 %1368, label %1369, label %1856

1369:                                             ; preds = %1364, %1354
  %1370 = getelementptr inbounds %struct.tree_type, ptr %1352, i64 0, i32 16
  %1371 = load ptr, ptr %1370, align 8, !tbaa !16
  %1372 = load ptr, ptr %12, align 8, !tbaa !5
  %1373 = getelementptr inbounds %struct.tree_type, ptr %1372, i64 0, i32 16
  %1374 = load ptr, ptr %1373, align 8, !tbaa !16
  %1375 = icmp eq ptr %1371, %1374
  br i1 %1375, label %1856, label %1376

1376:                                             ; preds = %1369
  %1377 = load i32, ptr %1322, align 8, !tbaa !141
  %1378 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %1377, i32 noundef 49, ptr noundef nonnull @.str.262, ptr noundef %1326) #24
  %1379 = getelementptr inbounds %struct.c_binding, ptr %1348, i64 0, i32 6
  %1380 = load i32, ptr %1379, align 4, !tbaa !59
  %1381 = icmp eq i32 %1380, 0
  br i1 %1381, label %1856, label %1382

1382:                                             ; preds = %1376
  call void (i32, ptr, ...) @inform(i32 noundef %1380, ptr noundef nonnull @.str.85) #24
  br label %1856

1383:                                             ; preds = %1300
  %1384 = icmp eq i32 %105, 4
  br i1 %1384, label %1385, label %1413

1385:                                             ; preds = %1383
  %1386 = icmp ne i32 %350, 0
  %1387 = icmp ne i8 %351, 0
  %1388 = or i1 %1386, %1387
  br i1 %1388, label %1393, label %1389

1389:                                             ; preds = %1385
  %1390 = load i16, ptr %19, align 8
  %1391 = and i16 %1390, 64
  %1392 = icmp eq i16 %1391, 0
  br i1 %1392, label %1395, label %1393

1393:                                             ; preds = %1389, %1385
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 5705, ptr noundef nonnull @.str.8) #24
  %1394 = load ptr, ptr %12, align 8, !tbaa !5
  br label %1395

1395:                                             ; preds = %1389, %1393
  %1396 = phi ptr [ %1301, %1389 ], [ %1394, %1393 ]
  %1397 = load i32, ptr @pedantic, align 4, !tbaa !20
  %1398 = icmp eq i32 %1397, 0
  br i1 %1398, label %1408, label %1399

1399:                                             ; preds = %1395
  %1400 = load i64, ptr %1396, align 8
  %1401 = and i64 %1400, 65535
  %1402 = icmp eq i64 %1401, 20
  %1403 = icmp ne i32 %1116, 0
  %1404 = select i1 %1402, i1 %1403, i1 false
  br i1 %1404, label %1405, label %1408

1405:                                             ; preds = %1399
  %1406 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 834, ptr noundef nonnull @.str.317) #24
  %1407 = load ptr, ptr %12, align 8, !tbaa !5
  br label %1410

1408:                                             ; preds = %1399, %1395
  %1409 = icmp eq i32 %1116, 0
  br i1 %1409, label %1856, label %1410

1410:                                             ; preds = %1405, %1408
  %1411 = phi ptr [ %1407, %1405 ], [ %1396, %1408 ]
  %1412 = call ptr @c_build_qualified_type(ptr noundef %1411, i32 noundef %1116) #24
  br label %1856

1413:                                             ; preds = %1383
  %1414 = load i32, ptr @pedantic, align 4, !tbaa !20
  %1415 = icmp ne i32 %1414, 0
  %1416 = and i1 %114, %1415
  br i1 %1416, label %1417, label %1422

1417:                                             ; preds = %1413
  %1418 = call zeroext i8 @variably_modified_type_p(ptr noundef %1301, ptr noundef null) #24
  %1419 = icmp eq i8 %1418, 0
  br i1 %1419, label %1422, label %1420

1420:                                             ; preds = %1417
  %1421 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 834, ptr noundef nonnull @.str.318) #24
  br label %1422

1422:                                             ; preds = %1420, %1417, %1413
  %1423 = load ptr, ptr %12, align 8, !tbaa !5
  %1424 = load i64, ptr %1423, align 8
  %1425 = and i64 %1424, 65535
  %1426 = icmp eq i64 %1425, 19
  %1427 = icmp ne i32 %105, 2
  %1428 = and i1 %1427, %1426
  br i1 %1428, label %1429, label %1442

1429:                                             ; preds = %1422
  br i1 %114, label %1440, label %1430

1430:                                             ; preds = %1429
  %1431 = icmp eq i32 %350, 2
  br i1 %1431, label %1442, label %1432

1432:                                             ; preds = %1430
  %1433 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %1434 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %1435 = icmp ne ptr %1433, %1434
  %1436 = freeze i1 %1435
  %1437 = add i32 %350, -3
  %1438 = icmp ult i32 %1437, 2
  %1439 = select i1 %1436, i1 true, i1 %1438
  br i1 %1439, label %1440, label %1442

1440:                                             ; preds = %1432, %1429
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.319, ptr noundef %89) #24
  %1441 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  store ptr %1441, ptr %12, align 8, !tbaa !5
  br label %1442

1442:                                             ; preds = %1432, %1440, %1430, %1422
  %1443 = phi ptr [ %1423, %1432 ], [ %1441, %1440 ], [ %1423, %1430 ], [ %1423, %1422 ]
  %1444 = icmp eq i32 %105, 2
  br i1 %1444, label %1445, label %1507

1445:                                             ; preds = %1442
  %1446 = load i64, ptr %1443, align 8
  %1447 = trunc i64 %1446 to i16
  switch i16 %1447, label %1475 [
    i16 15, label %1448
    i16 20, label %1466
  ]

1448:                                             ; preds = %1445
  %1449 = getelementptr inbounds %struct.tree_common, ptr %1443, i64 0, i32 2
  %1450 = load ptr, ptr %1449, align 8, !tbaa !16
  store ptr %1450, ptr %12, align 8, !tbaa !5
  %1451 = icmp eq i32 %1116, 0
  br i1 %1451, label %1454, label %1452

1452:                                             ; preds = %1448
  %1453 = call ptr @c_build_qualified_type(ptr noundef %1450, i32 noundef %1116) #24
  store ptr %1453, ptr %12, align 8, !tbaa !5
  br label %1454

1454:                                             ; preds = %1452, %1448
  %1455 = phi ptr [ %1453, %1452 ], [ %1450, %1448 ]
  %1456 = call ptr @build_pointer_type(ptr noundef %1455) #24
  store ptr %1456, ptr %12, align 8, !tbaa !5
  %1457 = icmp eq i32 %1119, 0
  br i1 %1457, label %1460, label %1458

1458:                                             ; preds = %1454
  %1459 = call ptr @c_build_qualified_type(ptr noundef %1456, i32 noundef %1119) #24
  store ptr %1459, ptr %12, align 8, !tbaa !5
  br label %1460

1460:                                             ; preds = %1458, %1454
  %1461 = phi ptr [ %1459, %1458 ], [ %1456, %1454 ]
  %1462 = icmp eq ptr %1118, null
  br i1 %1462, label %1479, label %1463

1463:                                             ; preds = %1460
  %1464 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %91, i32 noundef 45, ptr noundef nonnull @.str.320) #24
  %1465 = load ptr, ptr %12, align 8, !tbaa !5
  br label %1479

1466:                                             ; preds = %1445
  %1467 = icmp eq i32 %1116, 0
  br i1 %1467, label %1472, label %1468

1468:                                             ; preds = %1466
  %1469 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 834, ptr noundef nonnull @.str.308) #24
  %1470 = load ptr, ptr %12, align 8, !tbaa !5
  %1471 = call ptr @c_build_qualified_type(ptr noundef %1470, i32 noundef %1116) #24
  store ptr %1471, ptr %12, align 8, !tbaa !5
  br label %1472

1472:                                             ; preds = %1466, %1468
  %1473 = phi ptr [ %1443, %1466 ], [ %1471, %1468 ]
  %1474 = call ptr @build_pointer_type(ptr noundef %1473) #24
  store ptr %1474, ptr %12, align 8, !tbaa !5
  br label %1479

1475:                                             ; preds = %1445
  %1476 = icmp eq i32 %1116, 0
  br i1 %1476, label %1479, label %1477

1477:                                             ; preds = %1475
  %1478 = call ptr @c_build_qualified_type(ptr noundef nonnull %1443, i32 noundef %1116) #24
  store ptr %1478, ptr %12, align 8, !tbaa !5
  br label %1479

1479:                                             ; preds = %1460, %1463, %1472, %1477, %1475
  %1480 = phi ptr [ %1474, %1472 ], [ %1478, %1477 ], [ %1443, %1475 ], [ %1465, %1463 ], [ %1461, %1460 ]
  %1481 = phi i8 [ %1117, %1472 ], [ %1117, %1477 ], [ %1117, %1475 ], [ 0, %1463 ], [ 0, %1460 ]
  %1482 = phi i32 [ 0, %1472 ], [ %1116, %1477 ], [ 0, %1475 ], [ %1119, %1463 ], [ %1119, %1460 ]
  %1483 = getelementptr inbounds %struct.c_declarator, ptr %1120, i64 0, i32 2
  %1484 = load i32, ptr %1483, align 8, !tbaa !141
  %1485 = getelementptr inbounds %struct.c_declarator, ptr %1120, i64 0, i32 3
  %1486 = load ptr, ptr %1485, align 8, !tbaa !16
  %1487 = call ptr @build_decl_stat(i32 noundef %1484, i32 noundef 34, ptr noundef %1486, ptr noundef %1480) #24
  %1488 = icmp eq i8 %1481, 0
  br i1 %1488, label %1493, label %1489

1489:                                             ; preds = %1479
  %1490 = getelementptr inbounds %struct.tree_decl_common, ptr %1487, i64 0, i32 2
  %1491 = load i64, ptr %1490, align 8
  %1492 = or i64 %1491, 32768
  store i64 %1492, ptr %1490, align 8
  br label %1493

1493:                                             ; preds = %1489, %1479
  %1494 = load ptr, ptr %12, align 8, !tbaa !5
  %1495 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %1496 = icmp eq ptr %1494, %1495
  br i1 %1496, label %1499, label %1497

1497:                                             ; preds = %1493
  %1498 = call ptr @c_type_promotes_to(ptr noundef %1494) #24
  br label %1499

1499:                                             ; preds = %1493, %1497
  %1500 = phi ptr [ %1498, %1497 ], [ %1494, %1493 ]
  %1501 = getelementptr inbounds %struct.tree_decl_common, ptr %1487, i64 0, i32 5
  store ptr %1500, ptr %1501, align 8, !tbaa !16
  %1502 = load i16, ptr %19, align 8
  %1503 = and i16 %1502, 64
  %1504 = icmp eq i16 %1503, 0
  br i1 %1504, label %1780, label %1505

1505:                                             ; preds = %1499
  %1506 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 0, ptr noundef nonnull @.str.321, ptr noundef nonnull %1487) #24
  br label %1780

1507:                                             ; preds = %1442
  br i1 %114, label %1508, label %1561

1508:                                             ; preds = %1507
  %1509 = icmp ne i32 %350, 0
  %1510 = icmp ne i8 %351, 0
  %1511 = or i1 %1509, %1510
  br i1 %1511, label %1516, label %1512

1512:                                             ; preds = %1508
  %1513 = load i16, ptr %19, align 8
  %1514 = and i16 %1513, 64
  %1515 = icmp eq i16 %1514, 0
  br i1 %1515, label %1518, label %1516

1516:                                             ; preds = %1512, %1508
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 5808, ptr noundef nonnull @.str.8) #24
  %1517 = load ptr, ptr %12, align 8, !tbaa !5
  br label %1518

1518:                                             ; preds = %1512, %1516
  %1519 = phi ptr [ %1443, %1512 ], [ %1517, %1516 ]
  %1520 = load i64, ptr %1519, align 8
  %1521 = trunc i64 %1520 to i16
  switch i16 %1521, label %1528 [
    i16 20, label %1522
    i16 0, label %1538
    i16 15, label %1525
  ]

1522:                                             ; preds = %1518
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.322, ptr noundef %89) #24
  %1523 = load ptr, ptr %12, align 8, !tbaa !5
  %1524 = call ptr @build_pointer_type(ptr noundef %1523) #24
  store ptr %1524, ptr %12, align 8, !tbaa !5
  br label %1538

1525:                                             ; preds = %1518
  %1526 = getelementptr inbounds %struct.tree_common, ptr %1519, i64 0, i32 2
  %1527 = load ptr, ptr %1526, align 8, !tbaa !16
  br label %1528

1528:                                             ; preds = %1518, %1525
  %1529 = phi ptr [ %1527, %1525 ], [ %1519, %1518 ]
  %1530 = getelementptr inbounds %struct.tree_type, ptr %1529, i64 0, i32 2
  %1531 = load ptr, ptr %1530, align 8, !tbaa !16
  %1532 = icmp eq ptr %1531, null
  br i1 %1532, label %1533, label %1538

1533:                                             ; preds = %1528
  br i1 %349, label %1535, label %1534

1534:                                             ; preds = %1533
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.323, ptr noundef nonnull %89) #24
  br label %1536

1535:                                             ; preds = %1533
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.324) #24
  br label %1536

1536:                                             ; preds = %1535, %1534
  %1537 = load ptr, ptr @global_trees, align 16, !tbaa !5
  store ptr %1537, ptr %12, align 8, !tbaa !5
  br label %1538

1538:                                             ; preds = %1518, %1528, %1536, %1522
  %1539 = phi ptr [ %1519, %1518 ], [ %1519, %1528 ], [ %1537, %1536 ], [ %1524, %1522 ]
  %1540 = call ptr @c_build_qualified_type(ptr noundef %1539, i32 noundef %1116) #24
  store ptr %1540, ptr %12, align 8, !tbaa !5
  %1541 = getelementptr inbounds %struct.c_declarator, ptr %1120, i64 0, i32 2
  %1542 = load i32, ptr %1541, align 8, !tbaa !141
  %1543 = getelementptr inbounds %struct.c_declarator, ptr %1120, i64 0, i32 3
  %1544 = load ptr, ptr %1543, align 8, !tbaa !16
  %1545 = call ptr @build_decl_stat(i32 noundef %1542, i32 noundef 31, ptr noundef %1544, ptr noundef %1540) #24
  %1546 = getelementptr inbounds %struct.tree_decl_common, ptr %1545, i64 0, i32 2
  %1547 = load i64, ptr %1546, align 8
  %1548 = select i1 %28, i64 67108864, i64 0
  %1549 = and i64 %1547, -67108865
  %1550 = or i64 %1549, %1548
  store i64 %1550, ptr %1546, align 8
  br i1 %28, label %1551, label %1557

1551:                                             ; preds = %1538
  %1552 = load ptr, ptr %1543, align 8, !tbaa !16
  %1553 = icmp eq ptr %1552, null
  br i1 %1553, label %1554, label %1557

1554:                                             ; preds = %1551
  %1555 = load i64, ptr %1545, align 8
  %1556 = or i64 %1555, 8388608
  store i64 %1556, ptr %1545, align 8
  br label %1557

1557:                                             ; preds = %1554, %1551, %1538
  %1558 = icmp eq i8 %1117, 0
  br i1 %1558, label %1780, label %1559

1559:                                             ; preds = %1557
  %1560 = or i64 %1550, 32768
  store i64 %1560, ptr %1546, align 8
  br label %1780

1561:                                             ; preds = %1507
  %1562 = load i64, ptr %1443, align 8
  %1563 = and i64 %1562, 65535
  %1564 = icmp eq i64 %1563, 20
  br i1 %1564, label %1565, label %1682

1565:                                             ; preds = %1561
  %1566 = icmp eq i32 %350, 3
  %1567 = icmp ne i8 %351, 0
  %1568 = or i1 %1566, %1567
  br i1 %1568, label %1569, label %1570

1569:                                             ; preds = %1565
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.325, ptr noundef %89) #24
  br label %1579

1570:                                             ; preds = %1565
  %1571 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %1572 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %1573 = icmp eq ptr %1571, %1572
  br i1 %1573, label %1579, label %1574

1574:                                             ; preds = %1570
  switch i32 %350, label %1579 [
    i32 1, label %1575
    i32 4, label %1577
  ]

1575:                                             ; preds = %1574
  %1576 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 834, ptr noundef nonnull @.str.325, ptr noundef %89) #24
  br label %1579

1577:                                             ; preds = %1574
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.325, ptr noundef %89) #24
  br i1 %40, label %1856, label %1578

1578:                                             ; preds = %1577
  store i32 0, ptr %24, align 4, !tbaa !130
  br label %1579

1579:                                             ; preds = %1574, %1570, %1578, %1575, %1569
  %1580 = phi i32 [ %350, %1569 ], [ 1, %1575 ], [ 0, %1578 ], [ %350, %1570 ], [ %350, %1574 ]
  %1581 = getelementptr inbounds %struct.c_declarator, ptr %1120, i64 0, i32 2
  %1582 = load i32, ptr %1581, align 8, !tbaa !141
  %1583 = getelementptr inbounds %struct.c_declarator, ptr %1120, i64 0, i32 3
  %1584 = load ptr, ptr %1583, align 8, !tbaa !16
  %1585 = load ptr, ptr %12, align 8, !tbaa !5
  %1586 = call ptr @build_decl_stat(i32 noundef %1582, i32 noundef 29, ptr noundef %1584, ptr noundef %1585) #24
  %1587 = call ptr @build_decl_attribute_variant(ptr noundef %1586, ptr noundef %27) #24
  %1588 = load i32, ptr @pedantic, align 4, !tbaa !20
  %1589 = icmp ne i32 %1588, 0
  %1590 = icmp ne i32 %1116, 0
  %1591 = select i1 %1589, i1 %1590, i1 false
  br i1 %1591, label %1592, label %1600

1592:                                             ; preds = %1579
  %1593 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1587, i64 0, i32 1
  %1594 = load i32, ptr %1593, align 8, !tbaa !16
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %17, i32 noundef %1594) #24
  %1595 = getelementptr inbounds %struct.expanded_location, ptr %17, i64 0, i32 3
  %1596 = load i8, ptr %1595, align 8, !tbaa !57
  %1597 = icmp eq i8 %1596, 0
  br i1 %1597, label %1598, label %1600

1598:                                             ; preds = %1592
  %1599 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 834, ptr noundef nonnull @.str.308) #24
  br label %1600

1600:                                             ; preds = %1598, %1592, %1579
  %1601 = and i32 %1116, 2
  %1602 = icmp eq i32 %1601, 0
  br i1 %1602, label %1613, label %1603

1603:                                             ; preds = %1600
  %1604 = getelementptr inbounds %struct.tree_common, ptr %1587, i64 0, i32 2
  %1605 = load ptr, ptr %1604, align 8, !tbaa !16
  %1606 = getelementptr inbounds %struct.tree_common, ptr %1605, i64 0, i32 2
  %1607 = load ptr, ptr %1606, align 8, !tbaa !16
  %1608 = load i64, ptr %1607, align 8
  %1609 = and i64 %1608, 65535
  %1610 = icmp eq i64 %1609, 19
  br i1 %1610, label %1613, label %1611

1611:                                             ; preds = %1603
  %1612 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %91, i32 noundef 0, ptr noundef nonnull @.str.326) #24
  br label %1613

1613:                                             ; preds = %1611, %1603, %1600
  %1614 = icmp ne i32 %1580, 1
  br i1 %1614, label %1623, label %1615

1615:                                             ; preds = %1613
  %1616 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %1617 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %1618 = icmp eq ptr %1616, %1617
  br i1 %1618, label %1623, label %1619

1619:                                             ; preds = %1615
  %1620 = getelementptr inbounds %struct.tree_decl_common, ptr %1587, i64 0, i32 2
  %1621 = load i64, ptr %1620, align 8
  %1622 = and i64 %1621, -33554433
  store i64 %1622, ptr %1620, align 8
  br label %1646

1623:                                             ; preds = %1615, %1613
  %1624 = load i16, ptr %19, align 8
  %1625 = and i16 %1624, 64
  %1626 = icmp ne i16 %1625, 0
  %1627 = icmp ne i32 %1580, 4
  %1628 = select i1 %1626, i1 %1627, i1 false
  br i1 %1628, label %1629, label %1639

1629:                                             ; preds = %1623
  %1630 = icmp eq i32 %1580, 2
  %1631 = zext i1 %1630 to i32
  %1632 = load i32, ptr @flag_gnu89_inline, align 4, !tbaa !20
  %1633 = icmp eq i32 %1632, %1631
  %1634 = getelementptr inbounds %struct.tree_decl_common, ptr %1587, i64 0, i32 2
  %1635 = load i64, ptr %1634, align 8
  %1636 = select i1 %1633, i64 33554432, i64 0
  %1637 = and i64 %1635, -33554433
  %1638 = or i64 %1637, %1636
  store i64 %1638, ptr %1634, align 8
  br label %1646

1639:                                             ; preds = %1623
  %1640 = icmp eq i8 %3, 0
  %1641 = getelementptr inbounds %struct.tree_decl_common, ptr %1587, i64 0, i32 2
  %1642 = load i64, ptr %1641, align 8
  %1643 = select i1 %1640, i64 33554432, i64 0
  %1644 = and i64 %1642, -33554433
  %1645 = or i64 %1644, %1643
  store i64 %1645, ptr %1641, align 8
  br label %1646

1646:                                             ; preds = %1629, %1639, %1619
  %1647 = phi i64 [ %1638, %1629 ], [ %1645, %1639 ], [ %1622, %1619 ]
  %1648 = icmp ne i32 %1580, 4
  %1649 = and i1 %1648, %1614
  %1650 = load i64, ptr %1587, align 8
  %1651 = select i1 %1649, i64 134217728, i64 0
  %1652 = and i64 %1650, -134217729
  %1653 = or i64 %1652, %1651
  store i64 %1653, ptr %1587, align 8
  br i1 %40, label %1655, label %1654

1654:                                             ; preds = %1646
  store ptr %1115, ptr @current_function_arg_info, align 8, !tbaa !5
  br label %1655

1655:                                             ; preds = %1654, %1646
  %1656 = load i32, ptr %134, align 4, !tbaa !129
  %1657 = icmp eq i32 %1656, 0
  br i1 %1657, label %1661, label %1658

1658:                                             ; preds = %1655
  %1659 = getelementptr inbounds %struct.tree_decl_common, ptr %1587, i64 0, i32 2
  %1660 = or i64 %1647, 65536
  store i64 %1660, ptr %1659, align 8
  br label %1661

1661:                                             ; preds = %1658, %1655
  %1662 = load i32, ptr @flag_hosted, align 4, !tbaa !20
  %1663 = icmp eq i32 %1662, 0
  br i1 %1663, label %1674, label %1664

1664:                                             ; preds = %1661
  %1665 = load ptr, ptr %1583, align 8, !tbaa !16
  %1666 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 56), align 16, !tbaa !5
  %1667 = icmp eq ptr %1665, %1666
  br i1 %1667, label %1668, label %1674

1668:                                             ; preds = %1664
  %1669 = load i16, ptr %19, align 8
  %1670 = and i16 %1669, 64
  %1671 = icmp eq i16 %1670, 0
  br i1 %1671, label %1780, label %1672

1672:                                             ; preds = %1668
  %1673 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 0, ptr noundef nonnull @.str.327) #24
  br label %1780

1674:                                             ; preds = %1664, %1661
  %1675 = load i16, ptr %19, align 8
  %1676 = and i16 %1675, 64
  %1677 = icmp eq i16 %1676, 0
  br i1 %1677, label %1780, label %1678

1678:                                             ; preds = %1674
  %1679 = getelementptr inbounds %struct.tree_function_decl, ptr %1587, i64 0, i32 5
  %1680 = load i32, ptr %1679, align 8
  %1681 = or i32 %1680, 2097152
  store i32 %1681, ptr %1679, align 8
  br label %1780

1682:                                             ; preds = %1561
  %1683 = icmp ne i8 %3, 0
  %1684 = icmp ne i32 %350, 2
  %1685 = select i1 %1683, i1 true, i1 %1684
  %1686 = call ptr @c_build_qualified_type(ptr noundef nonnull %1443, i32 noundef %1116) #24
  store ptr %1686, ptr %12, align 8, !tbaa !5
  br i1 %1685, label %1730, label %1687

1687:                                             ; preds = %1682
  %1688 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %1689 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %1690 = icmp eq ptr %1688, %1689
  br i1 %1690, label %1730, label %1691

1691:                                             ; preds = %1687
  %1692 = getelementptr inbounds %struct.c_declarator, ptr %1120, i64 0, i32 3
  %1693 = load ptr, ptr %1692, align 8, !tbaa !16
  %1694 = getelementptr inbounds %struct.lang_identifier, ptr %1693, i64 0, i32 1
  %1695 = load ptr, ptr %1694, align 8, !tbaa !5
  %1696 = icmp eq ptr %1695, null
  br i1 %1696, label %1730, label %1697

1697:                                             ; preds = %1691, %1706
  %1698 = phi ptr [ %1708, %1706 ], [ %1695, %1691 ]
  %1699 = getelementptr inbounds %struct.c_binding, ptr %1698, i64 0, i32 5
  %1700 = load i32, ptr %1699, align 8
  %1701 = and i32 %1700, 268435454
  %1702 = icmp eq i32 %1701, 0
  br i1 %1702, label %1703, label %1706

1703:                                             ; preds = %1697
  %1704 = getelementptr inbounds %struct.c_binding, ptr %1698, i64 0, i32 1
  %1705 = load ptr, ptr %1704, align 8, !tbaa !32
  br label %1710

1706:                                             ; preds = %1697
  %1707 = getelementptr inbounds %struct.c_binding, ptr %1698, i64 0, i32 4
  %1708 = load ptr, ptr %1707, align 8, !tbaa !5
  %1709 = icmp eq ptr %1708, null
  br i1 %1709, label %1710, label %1697, !llvm.loop !167

1710:                                             ; preds = %1706, %1703
  %1711 = phi ptr [ %1705, %1703 ], [ null, %1706 ]
  %1712 = getelementptr inbounds %struct.c_binding, ptr %1695, i64 0, i32 5
  %1713 = load i32, ptr %1712, align 8
  %1714 = and i32 %1713, 268435456
  %1715 = icmp eq i32 %1714, 0
  br i1 %1715, label %1716, label %1719

1716:                                             ; preds = %1710
  %1717 = getelementptr inbounds %struct.c_binding, ptr %1695, i64 0, i32 1
  %1718 = load ptr, ptr %1717, align 8, !tbaa !32
  br label %1719

1719:                                             ; preds = %1710, %1716
  %1720 = phi ptr [ %1718, %1716 ], [ null, %1710 ]
  %1721 = icmp eq ptr %1711, null
  %1722 = icmp eq ptr %1711, %1720
  %1723 = select i1 %1721, i1 true, i1 %1722
  br i1 %1723, label %1730, label %1724

1724:                                             ; preds = %1719
  %1725 = load i64, ptr %1711, align 8
  %1726 = and i64 %1725, 134283263
  %1727 = icmp eq i64 %1726, 32
  br i1 %1727, label %1728, label %1730

1728:                                             ; preds = %1724
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.328) #24
  %1729 = load ptr, ptr %12, align 8, !tbaa !5
  br label %1730

1730:                                             ; preds = %1691, %1719, %1724, %1728, %1687, %1682
  %1731 = phi ptr [ %1686, %1691 ], [ %1686, %1719 ], [ %1686, %1724 ], [ %1729, %1728 ], [ %1686, %1687 ], [ %1686, %1682 ]
  %1732 = getelementptr inbounds %struct.c_declarator, ptr %1120, i64 0, i32 2
  %1733 = load i32, ptr %1732, align 8, !tbaa !141
  %1734 = getelementptr inbounds %struct.c_declarator, ptr %1120, i64 0, i32 3
  %1735 = load ptr, ptr %1734, align 8, !tbaa !16
  %1736 = call ptr @build_decl_stat(i32 noundef %1733, i32 noundef 32, ptr noundef %1735, ptr noundef %1731) #24
  %1737 = icmp eq i8 %1117, 0
  br i1 %1737, label %1742, label %1738

1738:                                             ; preds = %1730
  %1739 = getelementptr inbounds %struct.tree_decl_common, ptr %1736, i64 0, i32 2
  %1740 = load i64, ptr %1739, align 8
  %1741 = or i64 %1740, 32768
  store i64 %1741, ptr %1739, align 8
  br label %1742

1742:                                             ; preds = %1738, %1730
  %1743 = load i16, ptr %19, align 8
  %1744 = and i16 %1743, 64
  %1745 = icmp eq i16 %1744, 0
  br i1 %1745, label %1748, label %1746

1746:                                             ; preds = %1742
  %1747 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %91, i32 noundef 0, ptr noundef nonnull @.str.329, ptr noundef %1736) #24
  br label %1748

1748:                                             ; preds = %1746, %1742
  %1749 = getelementptr inbounds %struct.tree_decl_common, ptr %1736, i64 0, i32 2
  %1750 = load i64, ptr %1749, align 8
  %1751 = select i1 %1684, i64 0, i64 33554432
  %1752 = and i64 %1750, -33554433
  %1753 = or i64 %1752, %1751
  store i64 %1753, ptr %1749, align 8
  %1754 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %1755 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %1756 = icmp eq ptr %1754, %1755
  %1757 = icmp eq i32 %350, 4
  %1758 = load i64, ptr %1736, align 8
  %1759 = and i64 %1758, -201326593
  br i1 %1756, label %1760, label %1764

1760:                                             ; preds = %1748
  %1761 = select i1 %1757, i64 0, i64 134217728
  %1762 = select i1 %1685, i64 67108864, i64 0
  %1763 = or i64 %1762, %1761
  br label %1768

1764:                                             ; preds = %1748
  %1765 = select i1 %1757, i64 67108864, i64 0
  %1766 = select i1 %1685, i64 0, i64 134217728
  %1767 = or i64 %1766, %1765
  br label %1768

1768:                                             ; preds = %1764, %1760
  %1769 = phi i64 [ %1767, %1764 ], [ %1763, %1760 ]
  %1770 = or i64 %1769, %1759
  store i64 %1770, ptr %1736, align 8
  %1771 = icmp eq i8 %351, 0
  br i1 %1771, label %1780, label %1772

1772:                                             ; preds = %1768
  %1773 = call i32 @decl_default_tls_model(ptr noundef nonnull %1736) #24
  %1774 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1736, i64 0, i32 4
  %1775 = load i32, ptr %1774, align 8
  %1776 = shl i32 %1773, 13
  %1777 = and i32 %1776, 57344
  %1778 = and i32 %1775, -57345
  %1779 = or i32 %1778, %1777
  store i32 %1779, ptr %1774, align 8
  br label %1780

1780:                                             ; preds = %1768, %1772, %1499, %1505, %1559, %1557, %1672, %1668, %1678, %1674
  %1781 = phi i32 [ %1116, %1559 ], [ %1116, %1557 ], [ %1116, %1672 ], [ %1116, %1668 ], [ %1116, %1678 ], [ %1116, %1674 ], [ %1482, %1505 ], [ %1482, %1499 ], [ %1116, %1772 ], [ %1116, %1768 ]
  %1782 = phi i32 [ %350, %1559 ], [ %350, %1557 ], [ %1580, %1672 ], [ %1580, %1668 ], [ %1580, %1678 ], [ %1580, %1674 ], [ %350, %1505 ], [ %350, %1499 ], [ %350, %1772 ], [ %350, %1768 ]
  %1783 = phi ptr [ %1545, %1559 ], [ %1545, %1557 ], [ %1587, %1672 ], [ %1587, %1668 ], [ %1587, %1678 ], [ %1587, %1674 ], [ %1487, %1505 ], [ %1487, %1499 ], [ %1736, %1772 ], [ %1736, %1768 ]
  switch i32 %1782, label %1807 [
    i32 2, label %1784
    i32 0, label %1786
    i32 3, label %1803
  ]

1784:                                             ; preds = %1780
  %1785 = load ptr, ptr %12, align 8, !tbaa !5
  br label %1792

1786:                                             ; preds = %1780
  %1787 = load ptr, ptr %12, align 8, !tbaa !5
  %1788 = load i64, ptr %1787, align 8
  %1789 = and i64 %1788, 65535
  %1790 = icmp eq i64 %1789, 20
  %1791 = and i1 %40, %1790
  br i1 %1791, label %1792, label %1807

1792:                                             ; preds = %1784, %1786
  %1793 = phi ptr [ %1785, %1784 ], [ %1787, %1786 ]
  %1794 = call zeroext i8 @variably_modified_type_p(ptr noundef %1793, ptr noundef null) #24
  %1795 = icmp eq i8 %1794, 0
  br i1 %1795, label %1807, label %1796

1796:                                             ; preds = %1792
  %1797 = load ptr, ptr %12, align 8, !tbaa !5
  %1798 = load i64, ptr %1797, align 8
  %1799 = and i64 %1798, 65535
  %1800 = icmp eq i64 %1799, 20
  br i1 %1800, label %1801, label %1802

1801:                                             ; preds = %1796
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.330) #24
  br label %1807

1802:                                             ; preds = %1796
  call void (i32, ptr, ...) @error_at(i32 noundef %91, ptr noundef nonnull @.str.331) #24
  br label %1807

1803:                                             ; preds = %1780
  %1804 = getelementptr inbounds %struct.tree_decl_common, ptr %1783, i64 0, i32 2
  %1805 = load i64, ptr %1804, align 8
  %1806 = or i64 %1805, 17301504
  store i64 %1806, ptr %1804, align 8
  br label %1807

1807:                                             ; preds = %1786, %1792, %1802, %1801, %1780, %1803
  call void @c_apply_type_quals_to_decl(i32 noundef %1781, ptr noundef nonnull %1783) #24
  %1808 = getelementptr inbounds %struct.tree_common, ptr %1783, i64 0, i32 2
  %1809 = load ptr, ptr %1808, align 8, !tbaa !16
  %1810 = load i64, ptr %1809, align 8
  %1811 = and i64 %1810, 34359738368
  %1812 = icmp eq i64 %1811, 0
  %1813 = load i64, ptr %1783, align 8
  br i1 %1812, label %1826, label %1814

1814:                                             ; preds = %1807
  %1815 = trunc i64 %1813 to i16
  switch i16 %1815, label %1826 [
    i16 32, label %1816
    i16 34, label %1816
    i16 36, label %1816
  ]

1816:                                             ; preds = %1814, %1814, %1814
  %1817 = getelementptr inbounds %struct.tree_decl_common, ptr %1783, i64 0, i32 2
  %1818 = load i64, ptr %1817, align 8
  %1819 = and i64 %1818, 524288
  %1820 = and i64 %1818, -17301505
  store i64 %1820, ptr %1817, align 8
  %1821 = call zeroext i8 @c_mark_addressable(ptr noundef nonnull %1783) #24
  %1822 = load i64, ptr %1817, align 8
  %1823 = and i64 %1822, -524289
  %1824 = or i64 %1823, %1819
  store i64 %1824, ptr %1817, align 8
  %1825 = load i64, ptr %1783, align 8
  br label %1826

1826:                                             ; preds = %1814, %1816, %1807
  %1827 = phi i64 [ %1813, %1814 ], [ %1825, %1816 ], [ %1813, %1807 ]
  %1828 = and i64 %1827, 65535
  %1829 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %1828, i64 13
  %1830 = load i8, ptr %1829, align 1, !tbaa !16
  %1831 = icmp eq i8 %1830, 0
  br i1 %1831, label %1837, label %1832

1832:                                             ; preds = %1826
  %1833 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1783, i64 0, i32 1
  %1834 = load ptr, ptr %1833, align 8, !tbaa !16
  %1835 = icmp eq ptr %1834, null
  br i1 %1835, label %1837, label %1836

1836:                                             ; preds = %1832
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 6022, ptr noundef nonnull @.str.8) #24
  br label %1837

1837:                                             ; preds = %1826, %1832, %1836
  %1838 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %1839 = icmp eq i32 %1838, 0
  br i1 %1839, label %1856, label %1840

1840:                                             ; preds = %1837
  %1841 = load i64, ptr %1783, align 8
  %1842 = and i64 %1841, 201392127
  %1843 = icmp eq i64 %1842, 201326624
  br i1 %1843, label %1844, label %1856

1844:                                             ; preds = %1840
  %1845 = load ptr, ptr %1808, align 8, !tbaa !16
  %1846 = load i64, ptr %1845, align 8
  %1847 = trunc i64 %1846 to i16
  switch i16 %1847, label %1856 [
    i16 16, label %1848
    i16 17, label %1848
    i16 6, label %1848
  ]

1848:                                             ; preds = %1844, %1844, %1844
  %1849 = getelementptr inbounds %struct.tree_type, ptr %1845, i64 0, i32 12
  %1850 = load ptr, ptr %1849, align 8, !tbaa !16
  %1851 = icmp eq ptr %1850, null
  br i1 %1851, label %1852, label %1856

1852:                                             ; preds = %1848
  %1853 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1783, i64 0, i32 1
  %1854 = load i32, ptr %1853, align 8, !tbaa !16
  %1855 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %1854, i32 noundef 49, ptr noundef nonnull @.str.332, ptr noundef nonnull %1783) #24
  br label %1856

1856:                                             ; preds = %1410, %1408, %1577, %1844, %1852, %1848, %1840, %1837, %1340, %1343, %1376, %1382, %1369, %1364, %1350, %1346, %87
  %1857 = phi ptr [ null, %87 ], [ %1326, %1346 ], [ %1326, %1350 ], [ %1326, %1364 ], [ %1326, %1369 ], [ %1326, %1382 ], [ %1326, %1376 ], [ %1326, %1343 ], [ %1326, %1340 ], [ null, %1577 ], [ %1783, %1844 ], [ %1783, %1852 ], [ %1783, %1848 ], [ %1783, %1840 ], [ %1783, %1837 ], [ %1412, %1410 ], [ %1396, %1408 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #24
  ret ptr %1857
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @start_decl(ptr noundef %0, ptr nocapture noundef %1, i8 noundef zeroext %2, ptr noundef %3) local_unnamed_addr #9 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %3, ptr %5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #24
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #24
  store ptr null, ptr %7, align 8, !tbaa !5
  %8 = tail call ptr @lookup_attribute(ptr noundef nonnull @.str.47, ptr noundef %3) #24
  %9 = icmp ne ptr %8, null
  %10 = zext i1 %9 to i32
  %11 = call fastcc ptr @grokdeclarator(ptr noundef %0, ptr noundef %1, i32 noundef 0, i8 noundef zeroext %2, ptr noundef null, ptr noundef nonnull %5, ptr noundef nonnull %7, ptr noundef null, i32 noundef %10)
  store ptr %11, ptr %6, align 8, !tbaa !5
  %12 = icmp eq ptr %11, null
  br i1 %12, label %287, label %13

13:                                               ; preds = %4
  %14 = load ptr, ptr %7, align 8, !tbaa !5
  %15 = icmp eq ptr %14, null
  br i1 %15, label %40, label %16

16:                                               ; preds = %13
  %17 = load i64, ptr %14, align 8
  %18 = and i64 %17, 65535
  %19 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %18
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = icmp ugt i32 %20, 3
  br i1 %21, label %22, label %32

22:                                               ; preds = %16
  %23 = icmp ult i32 %20, 11
  %24 = icmp ne i64 %18, 133
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.tree_exp, ptr %14, i64 0, i32 1
  %28 = load i32, ptr %27, align 8, !tbaa !16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = load i32, ptr @input_location, align 4, !tbaa !20
  store i32 %31, ptr %27, align 8, !tbaa !16
  br label %32

32:                                               ; preds = %30, %26, %22, %16
  %33 = trunc i64 %17 to i16
  switch i16 %33, label %38 [
    i16 139, label %34
    i16 133, label %34
  ]

34:                                               ; preds = %32, %32
  %35 = load ptr, ptr @c_stmt_tree, align 8, !tbaa !23
  %36 = load i64, ptr %35, align 8
  %37 = or i64 %36, 68719476736
  store i64 %37, ptr %35, align 8
  br label %38

38:                                               ; preds = %32, %34
  call void @append_to_statement_list_force(ptr noundef nonnull %14, ptr noundef nonnull @c_stmt_tree) #24
  %39 = load ptr, ptr %6, align 8, !tbaa !5
  br label %40

40:                                               ; preds = %38, %13
  %41 = phi ptr [ %39, %38 ], [ %11, %13 ]
  %42 = load i64, ptr %41, align 8
  %43 = and i64 %42, 65535
  %44 = icmp eq i64 %43, 29
  br i1 %44, label %52, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.tree_decl_minimal, ptr %41, i64 0, i32 3
  %47 = load ptr, ptr %46, align 8, !tbaa !16
  %48 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 56), align 16, !tbaa !5
  %49 = icmp eq ptr %47, %48
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 126, ptr noundef nonnull @.str.48, ptr noundef nonnull %41) #24
  br label %52

52:                                               ; preds = %50, %45, %40
  %53 = icmp eq i8 %2, 0
  br i1 %53, label %103, label %54

54:                                               ; preds = %52
  %55 = load ptr, ptr %6, align 8, !tbaa !5
  %56 = load i64, ptr %55, align 8
  %57 = trunc i64 %56 to i16
  switch i16 %57, label %61 [
    i16 35, label %58
    i16 29, label %59
    i16 34, label %60
  ]

58:                                               ; preds = %54
  call void (ptr, ...) @error(ptr noundef nonnull @.str.49, ptr noundef nonnull %55) #24
  br label %103

59:                                               ; preds = %54
  call void (ptr, ...) @error(ptr noundef nonnull @.str.50, ptr noundef nonnull %55) #24
  br label %103

60:                                               ; preds = %54
  call void (ptr, ...) @error(ptr noundef nonnull @.str.51, ptr noundef nonnull %55) #24
  br label %103

61:                                               ; preds = %54
  %62 = getelementptr inbounds %struct.tree_common, ptr %55, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8, !tbaa !16
  %64 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %65 = icmp eq ptr %63, %64
  br i1 %65, label %103, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.tree_type, ptr %63, i64 0, i32 2
  %68 = load ptr, ptr %67, align 8, !tbaa !16
  %69 = icmp eq ptr %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %66
  %71 = load i64, ptr %68, align 8
  %72 = and i64 %71, 65535
  %73 = icmp eq i64 %72, 23
  br i1 %73, label %74, label %79

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.tree_decl_common, ptr %55, i64 0, i32 2
  %76 = load i64, ptr %75, align 8
  %77 = and i64 %76, 32768
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %91, label %79

79:                                               ; preds = %74, %70
  call void (ptr, ...) @error(ptr noundef nonnull @.str.52) #24
  br label %103

80:                                               ; preds = %66
  %81 = load i64, ptr %63, align 8
  %82 = and i64 %81, 65535
  %83 = icmp eq i64 %82, 15
  br i1 %83, label %85, label %84

84:                                               ; preds = %80
  call void (ptr, ...) @error(ptr noundef nonnull @.str.53, ptr noundef nonnull %55) #24
  br label %103

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.tree_decl_common, ptr %55, i64 0, i32 2
  %87 = load i64, ptr %86, align 8
  %88 = and i64 %87, 32768
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %91, label %90

90:                                               ; preds = %85
  call void (ptr, ...) @error(ptr noundef nonnull @.str.52) #24
  br label %103

91:                                               ; preds = %85, %74
  %92 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %93 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %94 = icmp eq ptr %92, %93
  br i1 %94, label %95, label %99

95:                                               ; preds = %91
  %96 = or i64 %56, 67108864
  store i64 %96, ptr %55, align 8
  %97 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %98 = load ptr, ptr %6, align 8, !tbaa !5
  br label %99

99:                                               ; preds = %95, %91
  %100 = phi ptr [ %98, %95 ], [ %55, %91 ]
  %101 = phi ptr [ %97, %95 ], [ %64, %91 ]
  %102 = getelementptr inbounds %struct.tree_decl_common, ptr %100, i64 0, i32 5
  store ptr %101, ptr %102, align 8, !tbaa !16
  br label %103

103:                                              ; preds = %61, %52, %58, %59, %60, %90, %84, %79, %99
  %104 = phi i1 [ true, %99 ], [ false, %79 ], [ false, %84 ], [ false, %90 ], [ false, %60 ], [ false, %59 ], [ false, %58 ], [ false, %52 ], [ false, %61 ]
  %105 = phi i1 [ false, %99 ], [ true, %79 ], [ true, %84 ], [ true, %90 ], [ true, %60 ], [ true, %59 ], [ true, %58 ], [ true, %52 ], [ true, %61 ]
  %106 = load ptr, ptr %6, align 8, !tbaa !5
  %107 = load i64, ptr %106, align 8
  %108 = and i64 %107, 65535
  %109 = icmp eq i64 %108, 29
  br i1 %109, label %110, label %119

110:                                              ; preds = %103
  %111 = getelementptr inbounds %struct.tree_common, ptr %106, i64 0, i32 2
  %112 = load ptr, ptr %111, align 8, !tbaa !16
  %113 = getelementptr inbounds %struct.tree_type, ptr %112, i64 0, i32 1
  %114 = load ptr, ptr %113, align 8, !tbaa !16
  %115 = icmp ne ptr %114, null
  %116 = zext i1 %115 to i32
  call void @gen_aux_info_record(ptr noundef nonnull %106, i32 noundef 0, i32 noundef 0, i32 noundef %116) #24
  %117 = load ptr, ptr %6, align 8, !tbaa !5
  %118 = load i64, ptr %117, align 8
  br label %119

119:                                              ; preds = %110, %103
  %120 = phi i64 [ %118, %110 ], [ %107, %103 ]
  %121 = phi ptr [ %117, %110 ], [ %106, %103 ]
  %122 = and i64 %120, 134283263
  %123 = icmp ne i64 %122, 134217760
  %124 = or i1 %104, %123
  br i1 %124, label %135, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %121, i64 0, i32 4
  %127 = load i32, ptr %126, align 8
  %128 = and i32 %127, 49152
  %129 = icmp ne i32 %128, 0
  %130 = load i32, ptr @flag_no_common, align 4
  %131 = icmp ne i32 %130, 0
  %132 = select i1 %129, i1 true, i1 %131
  br i1 %132, label %135, label %133

133:                                              ; preds = %125
  %134 = or i32 %127, 8
  store i32 %134, ptr %126, align 8
  br label %135

135:                                              ; preds = %133, %125, %119
  %136 = load ptr, ptr %5, align 8, !tbaa !5
  %137 = call ptr @decl_attributes(ptr noundef nonnull %6, ptr noundef %136, i32 noundef 0) #24
  %138 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %139 = load i16, ptr %138, align 8
  %140 = and i16 %139, 64
  %141 = icmp eq i16 %140, 0
  %142 = load i32, ptr @flag_gnu89_inline, align 4
  %143 = icmp ne i32 %142, 0
  %144 = select i1 %141, i1 true, i1 %143
  br i1 %144, label %170, label %145

145:                                              ; preds = %135
  %146 = load ptr, ptr %6, align 8, !tbaa !5
  %147 = load i64, ptr %146, align 8
  %148 = and i64 %147, 65535
  %149 = icmp eq i64 %148, 29
  br i1 %149, label %150, label %170

150:                                              ; preds = %145
  %151 = getelementptr inbounds %struct.tree_decl_common, ptr %146, i64 0, i32 6
  %152 = load ptr, ptr %151, align 8, !tbaa !16
  %153 = call ptr @lookup_attribute(ptr noundef nonnull @.str.54, ptr noundef %152) #24
  %154 = icmp ne ptr %153, null
  %155 = load ptr, ptr @current_function_decl, align 8
  %156 = icmp ne ptr %155, null
  %157 = select i1 %154, i1 true, i1 %156
  br i1 %157, label %158, label %170

158:                                              ; preds = %150
  %159 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 5
  %160 = load i32, ptr %159, align 4, !tbaa !130
  switch i32 %160, label %165 [
    i32 1, label %161
    i32 4, label %170
  ]

161:                                              ; preds = %158
  %162 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %163 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %164 = icmp eq ptr %162, %163
  br i1 %164, label %165, label %170

165:                                              ; preds = %158, %161
  %166 = load ptr, ptr %6, align 8, !tbaa !5
  %167 = getelementptr inbounds %struct.tree_decl_common, ptr %166, i64 0, i32 2
  %168 = load i64, ptr %167, align 8
  %169 = xor i64 %168, 33554432
  store i64 %169, ptr %167, align 8
  br label %170

170:                                              ; preds = %158, %161, %165, %150, %145, %135
  %171 = load ptr, ptr %6, align 8, !tbaa !5
  %172 = load i64, ptr %171, align 8
  %173 = and i64 %172, 65535
  %174 = icmp eq i64 %173, 29
  br i1 %174, label %175, label %224

175:                                              ; preds = %170
  %176 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 88, i32 1), align 8, !tbaa !168
  %177 = getelementptr inbounds %struct.tree_common, ptr %171, i64 0, i32 2
  %178 = load ptr, ptr %177, align 8, !tbaa !16
  %179 = call zeroext i8 %176(ptr noundef %178) #24
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %224, label %181

181:                                              ; preds = %175
  %182 = load i32, ptr %0, align 8, !tbaa !143
  %183 = icmp eq i32 %182, 3
  br i1 %183, label %184, label %188

184:                                              ; preds = %181
  %185 = getelementptr inbounds %struct.c_declarator, ptr %0, i64 0, i32 1
  %186 = load ptr, ptr %185, align 8, !tbaa !144
  %187 = load i32, ptr %186, align 8, !tbaa !143
  br label %188

188:                                              ; preds = %184, %181
  %189 = phi i32 [ %187, %184 ], [ %182, %181 ]
  %190 = phi ptr [ %186, %184 ], [ %0, %181 ]
  %191 = icmp eq i32 %189, 1
  br i1 %191, label %192, label %224

192:                                              ; preds = %188
  %193 = getelementptr inbounds %struct.c_declarator, ptr %190, i64 0, i32 3
  %194 = load ptr, ptr %193, align 8, !tbaa !16
  %195 = load ptr, ptr %194, align 8, !tbaa !16
  %196 = icmp eq ptr %195, null
  br i1 %196, label %224, label %197

197:                                              ; preds = %192
  %198 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %199 = getelementptr inbounds %struct.tree_type, ptr %198, i64 0, i32 6
  br label %200

200:                                              ; preds = %197, %220
  %201 = phi ptr [ %195, %197 ], [ %222, %220 ]
  %202 = getelementptr inbounds %struct.tree_common, ptr %201, i64 0, i32 2
  %203 = load ptr, ptr %202, align 8, !tbaa !16
  %204 = icmp eq ptr %203, null
  br i1 %204, label %220, label %205

205:                                              ; preds = %200
  %206 = load i64, ptr %203, align 8
  %207 = trunc i64 %206 to i32
  %208 = and i32 %207, 65535
  %209 = add nsw i32 %208, -6
  %210 = icmp ult i32 %209, 3
  br i1 %210, label %211, label %220

211:                                              ; preds = %205
  %212 = getelementptr inbounds %struct.tree_type, ptr %203, i64 0, i32 6
  %213 = load i32, ptr %212, align 4
  %214 = and i32 %213, 1023
  %215 = load i32, ptr %199, align 4
  %216 = and i32 %215, 1023
  %217 = icmp ult i32 %214, %216
  br i1 %217, label %218, label %220

218:                                              ; preds = %211
  %219 = getelementptr inbounds %struct.tree_decl_common, ptr %201, i64 0, i32 5
  store ptr %198, ptr %219, align 8, !tbaa !16
  br label %220

220:                                              ; preds = %205, %218, %211, %200
  %221 = getelementptr inbounds %struct.tree_common, ptr %201, i64 0, i32 1
  %222 = load ptr, ptr %221, align 8, !tbaa !16
  %223 = icmp eq ptr %222, null
  br i1 %223, label %224, label %200, !llvm.loop !169

224:                                              ; preds = %220, %192, %188, %175, %170
  %225 = load ptr, ptr %6, align 8, !tbaa !5
  %226 = load i64, ptr %225, align 8
  %227 = and i64 %226, 65535
  %228 = icmp eq i64 %227, 29
  br i1 %228, label %229, label %243

229:                                              ; preds = %224
  %230 = getelementptr inbounds %struct.tree_function_decl, ptr %225, i64 0, i32 5
  %231 = load i32, ptr %230, align 8
  %232 = and i32 %231, 2129920
  %233 = icmp eq i32 %232, 2129920
  br i1 %233, label %234, label %243

234:                                              ; preds = %229
  %235 = getelementptr inbounds %struct.tree_decl_common, ptr %225, i64 0, i32 6
  %236 = load ptr, ptr %235, align 8, !tbaa !16
  %237 = call ptr @lookup_attribute(ptr noundef nonnull @.str.55, ptr noundef %236) #24
  %238 = icmp eq ptr %237, null
  %239 = load ptr, ptr %6, align 8, !tbaa !5
  br i1 %238, label %243, label %240

240:                                              ; preds = %234
  %241 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 45, ptr noundef nonnull @.str.56, ptr noundef %239) #24
  %242 = load ptr, ptr %6, align 8, !tbaa !5
  br label %243

243:                                              ; preds = %240, %234, %229, %224
  %244 = phi ptr [ %242, %240 ], [ %239, %234 ], [ %225, %229 ], [ %225, %224 ]
  %245 = load i64, ptr %244, align 8
  %246 = and i64 %245, 65535
  %247 = icmp eq i64 %246, 32
  br i1 %247, label %248, label %275

248:                                              ; preds = %243
  %249 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %250 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %251 = icmp ne ptr %249, %250
  %252 = and i64 %245, 68157440
  %253 = icmp eq i64 %252, 67108864
  %254 = and i1 %253, %251
  br i1 %254, label %255, label %275

255:                                              ; preds = %248
  %256 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %257 = getelementptr inbounds %struct.tree_function_decl, ptr %256, i64 0, i32 5
  %258 = load i32, ptr %257, align 8
  %259 = and i32 %258, 2097152
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %275, label %261

261:                                              ; preds = %255
  %262 = getelementptr inbounds %struct.tree_decl_common, ptr %256, i64 0, i32 2
  %263 = load i64, ptr %262, align 8
  %264 = and i64 %263, 33554432
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %275, label %266

266:                                              ; preds = %261
  %267 = load i32, ptr @input_location, align 4, !tbaa !20
  %268 = call ptr @ggc_alloc_stat(i64 noundef 40) #24
  store i32 %267, ptr %268, align 8, !tbaa !37
  %269 = getelementptr inbounds %struct.c_inline_static, ptr %268, i64 0, i32 1
  store ptr %256, ptr %269, align 8, !tbaa !39
  %270 = getelementptr inbounds %struct.c_inline_static, ptr %268, i64 0, i32 2
  store ptr %244, ptr %270, align 8, !tbaa !40
  %271 = getelementptr inbounds %struct.c_inline_static, ptr %268, i64 0, i32 3
  store i32 1, ptr %271, align 8, !tbaa !41
  %272 = load ptr, ptr @c_inline_statics, align 8, !tbaa !5
  %273 = getelementptr inbounds %struct.c_inline_static, ptr %268, i64 0, i32 4
  store ptr %272, ptr %273, align 8, !tbaa !42
  store ptr %268, ptr @c_inline_statics, align 8, !tbaa !5
  %274 = load ptr, ptr %6, align 8, !tbaa !5
  br label %275

275:                                              ; preds = %266, %261, %255, %248, %243
  %276 = phi ptr [ %274, %266 ], [ %244, %261 ], [ %244, %255 ], [ %244, %248 ], [ %244, %243 ]
  %277 = call ptr @pushdecl(ptr noundef %276)
  br i1 %105, label %287, label %278

278:                                              ; preds = %275
  %279 = getelementptr inbounds %struct.tree_decl_common, ptr %277, i64 0, i32 2
  %280 = load i64, ptr %279, align 8
  %281 = and i64 %280, 33554432
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %287, label %283

283:                                              ; preds = %278
  %284 = and i64 %280, -33554433
  store i64 %284, ptr %279, align 8
  %285 = load i64, ptr %277, align 8
  %286 = or i64 %285, 67108864
  store i64 %286, ptr %277, align 8
  br label %287

287:                                              ; preds = %275, %278, %283, %4
  %288 = phi ptr [ null, %4 ], [ %277, %283 ], [ %277, %278 ], [ %277, %275 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #24
  ret ptr %288
}

declare ptr @lookup_attribute(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @finish_decl(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) local_unnamed_addr #9 {
  %6 = alloca ptr, align 8
  %7 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !16
  %9 = icmp eq ptr %8, null
  %10 = load i64, ptr %0, align 8
  %11 = trunc i64 %10 to i16
  switch i16 %11, label %23 [
    i16 29, label %12
    i16 32, label %12
  ]

12:                                               ; preds = %5, %5
  %13 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %14 = load ptr, ptr %13, align 8, !tbaa !16
  %15 = icmp eq ptr %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = load i64, ptr %14, align 8
  %18 = and i64 %17, 65535
  %19 = icmp eq i64 %18, 40
  br i1 %19, label %20, label %23

20:                                               ; preds = %16, %12
  %21 = tail call ptr @maybe_apply_renaming_pragma(ptr noundef nonnull %0, ptr noundef %4) #24
  %22 = load i64, ptr %0, align 8
  br label %23

23:                                               ; preds = %5, %20, %16
  %24 = phi i64 [ %22, %20 ], [ %10, %16 ], [ %10, %5 ]
  %25 = phi ptr [ %21, %20 ], [ %4, %16 ], [ %4, %5 ]
  %26 = icmp ne ptr %25, null
  %27 = getelementptr inbounds %struct.tree_string, ptr %25, i64 0, i32 2
  %28 = select i1 %26, ptr %27, ptr null
  %29 = and i64 %24, 67174399
  %30 = icmp eq i64 %29, 67108896
  br i1 %30, label %31, label %39

31:                                               ; preds = %23
  %32 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %33 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %34 = icmp ne ptr %32, %33
  %35 = load i8, ptr @c_override_global_bindings_to_false, align 1
  %36 = icmp ne i8 %35, 0
  %37 = select i1 %34, i1 true, i1 %36
  br i1 %37, label %39, label %38

38:                                               ; preds = %31
  tail call void @record_types_used_by_current_var_decl(ptr noundef nonnull %0) #24
  br label %39

39:                                               ; preds = %38, %31, %23
  %40 = icmp eq ptr %2, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %43 = load ptr, ptr %42, align 8, !tbaa !16
  %44 = icmp eq ptr %43, null
  %45 = select i1 %44, ptr null, ptr %2
  br label %46

46:                                               ; preds = %41, %39
  %47 = phi ptr [ null, %39 ], [ %45, %41 ]
  %48 = load i64, ptr %0, align 8
  %49 = and i64 %48, 65535
  %50 = icmp eq i64 %49, 34
  %51 = select i1 %50, ptr null, ptr %47
  %52 = icmp eq ptr %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %46
  tail call void @store_init_value(i32 noundef %1, ptr noundef nonnull %0, ptr noundef nonnull %51, ptr noundef %3) #24
  br label %54

54:                                               ; preds = %53, %46
  %55 = load i32, ptr @c_language, align 4, !tbaa !16
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = load i64, ptr %0, align 8
  %60 = trunc i64 %59 to i16
  switch i16 %60, label %62 [
    i16 32, label %61
    i16 29, label %61
    i16 31, label %61
  ]

61:                                               ; preds = %58, %58, %58
  tail call void @objc_check_decl(ptr noundef nonnull %0) #24
  br label %62

62:                                               ; preds = %58, %61, %54
  %63 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !16
  %65 = load i64, ptr %64, align 8
  %66 = and i64 %65, 65535
  %67 = icmp eq i64 %66, 15
  br i1 %67, label %68, label %145

68:                                               ; preds = %62
  %69 = getelementptr inbounds %struct.tree_type, ptr %64, i64 0, i32 1
  %70 = load ptr, ptr %69, align 8, !tbaa !16
  %71 = icmp eq ptr %70, null
  br i1 %71, label %72, label %145

72:                                               ; preds = %68
  %73 = load i64, ptr %0, align 8
  %74 = and i64 %73, 65535
  %75 = icmp eq i64 %74, 35
  br i1 %75, label %145, label %76

76:                                               ; preds = %72
  %77 = and i64 %73, 67108864
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %76
  %80 = load i32, ptr @pedantic, align 4, !tbaa !20
  %81 = icmp ne i32 %80, 0
  %82 = and i64 %73, 134217728
  %83 = icmp eq i64 %82, 0
  %84 = and i1 %83, %81
  br label %90

85:                                               ; preds = %76
  %86 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %87 = load i64, ptr %86, align 8
  %88 = and i64 %87, 33554432
  %89 = icmp eq i64 %88, 0
  br label %90

90:                                               ; preds = %85, %79
  %91 = phi i1 [ %84, %79 ], [ %89, %85 ]
  %92 = zext i1 %91 to i8
  %93 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %94 = load ptr, ptr %93, align 8, !tbaa !16
  %95 = tail call i32 @complete_array_type(ptr noundef nonnull %63, ptr noundef %94, i8 noundef zeroext %92) #24
  %96 = load ptr, ptr %63, align 8, !tbaa !16
  switch i32 %95, label %138 [
    i32 1, label %97
    i32 2, label %98
    i32 3, label %111
    i32 0, label %112
  ]

97:                                               ; preds = %90
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.57, ptr noundef nonnull %0) #24
  br label %139

98:                                               ; preds = %90
  br i1 %91, label %99, label %100

99:                                               ; preds = %98
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.58, ptr noundef nonnull %0) #24
  br label %139

100:                                              ; preds = %98
  %101 = load i32, ptr @pedantic, align 4, !tbaa !20
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %139

103:                                              ; preds = %100
  %104 = load i64, ptr %0, align 8
  %105 = and i64 %104, 201326592
  %106 = icmp eq i64 %105, 67108864
  br i1 %106, label %107, label %139

107:                                              ; preds = %103
  %108 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %109 = load i64, ptr %108, align 8
  %110 = or i64 %109, 33554432
  store i64 %110, ptr %108, align 8
  br label %139

111:                                              ; preds = %90
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.59, ptr noundef nonnull %0) #24
  br label %139

112:                                              ; preds = %90
  %113 = load i64, ptr %0, align 8
  %114 = and i64 %113, 134217728
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %139, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !16
  %119 = getelementptr inbounds %struct.lang_identifier, ptr %118, i64 0, i32 1
  %120 = load ptr, ptr %119, align 8, !tbaa !5
  %121 = icmp eq ptr %120, null
  br i1 %121, label %139, label %122

122:                                              ; preds = %116, %128
  %123 = phi ptr [ %130, %128 ], [ %120, %116 ]
  %124 = getelementptr inbounds %struct.c_binding, ptr %123, i64 0, i32 5
  %125 = load i32, ptr %124, align 8
  %126 = and i32 %125, 268435455
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %122
  %129 = getelementptr inbounds %struct.c_binding, ptr %123, i64 0, i32 4
  %130 = load ptr, ptr %129, align 8, !tbaa !5
  %131 = icmp eq ptr %130, null
  br i1 %131, label %139, label %122, !llvm.loop !170

132:                                              ; preds = %122
  %133 = load ptr, ptr %123, align 8, !tbaa !16
  %134 = icmp eq ptr %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = tail call ptr @composite_type(ptr noundef nonnull %133, ptr noundef %96) #24
  store ptr %136, ptr %123, align 8, !tbaa !16
  br label %139

137:                                              ; preds = %132
  store ptr %96, ptr %123, align 8, !tbaa !16
  br label %139

138:                                              ; preds = %90
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 4185, ptr noundef nonnull @.str.8) #24
  br label %139

139:                                              ; preds = %128, %116, %137, %135, %112, %99, %107, %103, %100, %138, %111, %97
  %140 = load ptr, ptr %93, align 8, !tbaa !16
  %141 = icmp eq ptr %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %struct.tree_common, ptr %140, i64 0, i32 2
  store ptr %96, ptr %143, align 8, !tbaa !16
  br label %144

144:                                              ; preds = %142, %139
  tail call void @layout_decl(ptr noundef nonnull %0, i32 noundef 0) #24
  br label %145

145:                                              ; preds = %144, %72, %68, %62
  %146 = phi ptr [ %96, %144 ], [ %64, %72 ], [ %64, %68 ], [ %64, %62 ]
  %147 = load i64, ptr %0, align 8
  %148 = and i64 %147, 65535
  %149 = icmp eq i64 %148, 32
  br i1 %149, label %150, label %265

150:                                              ; preds = %145
  br i1 %52, label %198, label %151

151:                                              ; preds = %150
  %152 = load i64, ptr %51, align 8
  %153 = and i64 %152, 65535
  %154 = icmp eq i64 %153, 51
  br i1 %154, label %155, label %198

155:                                              ; preds = %151
  %156 = getelementptr i8, ptr %51, i64 24
  %157 = load ptr, ptr %156, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #24
  %158 = icmp eq ptr %157, null
  br i1 %158, label %197, label %159

159:                                              ; preds = %155
  %160 = load i32, ptr %157, align 8, !tbaa !171
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %197, label %162

162:                                              ; preds = %159
  %163 = add i32 %160, -1
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds %struct.VEC_constructor_elt_base, ptr %157, i64 0, i32 2, i64 %164, i32 1
  %166 = load ptr, ptr %165, align 8, !tbaa !173
  %167 = getelementptr inbounds %struct.tree_common, ptr %166, i64 0, i32 2
  %168 = load ptr, ptr %167, align 8, !tbaa !16
  store ptr %168, ptr %6, align 8, !tbaa !5
  %169 = load i64, ptr %168, align 8
  %170 = and i64 %169, 65535
  %171 = icmp eq i64 %170, 15
  br i1 %171, label %172, label %197

172:                                              ; preds = %162
  %173 = getelementptr inbounds %struct.tree_type, ptr %168, i64 0, i32 2
  %174 = load ptr, ptr %173, align 8, !tbaa !16
  %175 = icmp eq ptr %174, null
  br i1 %175, label %176, label %197

176:                                              ; preds = %172
  %177 = getelementptr inbounds %struct.tree_type, ptr %168, i64 0, i32 1
  %178 = load ptr, ptr %177, align 8, !tbaa !16
  %179 = icmp eq ptr %178, null
  br i1 %179, label %197, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %struct.tree_type, ptr %178, i64 0, i32 14
  %182 = load ptr, ptr %181, align 8, !tbaa !16
  %183 = icmp eq ptr %182, null
  br i1 %183, label %184, label %197

184:                                              ; preds = %180
  %185 = call i32 @complete_array_type(ptr noundef nonnull %6, ptr noundef nonnull %166, i8 noundef zeroext 0) #24
  %186 = load ptr, ptr %7, align 8, !tbaa !16
  %187 = load ptr, ptr %6, align 8, !tbaa !5
  %188 = getelementptr inbounds %struct.tree_type, ptr %187, i64 0, i32 2
  %189 = load ptr, ptr %188, align 8, !tbaa !16
  %190 = call ptr @size_binop_loc(i32 noundef 0, i32 noundef 63, ptr noundef %186, ptr noundef %189) #24
  store ptr %190, ptr %7, align 8, !tbaa !16
  %191 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 4
  %192 = load ptr, ptr %191, align 8, !tbaa !16
  %193 = load ptr, ptr %6, align 8, !tbaa !5
  %194 = getelementptr inbounds %struct.tree_type, ptr %193, i64 0, i32 3
  %195 = load ptr, ptr %194, align 8, !tbaa !16
  %196 = call ptr @size_binop_loc(i32 noundef 0, i32 noundef 63, ptr noundef %192, ptr noundef %195) #24
  store ptr %196, ptr %191, align 8, !tbaa !16
  br label %197

197:                                              ; preds = %155, %159, %162, %172, %176, %180, %184
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #24
  br label %198

198:                                              ; preds = %197, %151, %150
  %199 = load ptr, ptr %7, align 8, !tbaa !16
  %200 = icmp eq ptr %199, null
  br i1 %200, label %201, label %239

201:                                              ; preds = %198
  %202 = load ptr, ptr %63, align 8, !tbaa !16
  %203 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %204 = icmp eq ptr %202, %203
  br i1 %204, label %212, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct.tree_type, ptr %202, i64 0, i32 2
  %207 = load ptr, ptr %206, align 8, !tbaa !16
  %208 = icmp eq ptr %207, null
  br i1 %208, label %212, label %209

209:                                              ; preds = %205
  call void @layout_decl(ptr noundef nonnull %0, i32 noundef 0) #24
  %210 = load ptr, ptr %7, align 8, !tbaa !16
  %211 = icmp eq ptr %210, null
  br i1 %211, label %212, label %239

212:                                              ; preds = %201, %205, %209
  %213 = load ptr, ptr %63, align 8, !tbaa !16
  %214 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %215 = icmp eq ptr %213, %214
  br i1 %215, label %239, label %216

216:                                              ; preds = %212
  %217 = load i64, ptr %0, align 8
  %218 = and i64 %217, 67108864
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %232, label %220

220:                                              ; preds = %216
  %221 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %222 = load ptr, ptr %221, align 8, !tbaa !16
  %223 = icmp eq ptr %222, null
  br i1 %223, label %224, label %237

224:                                              ; preds = %220
  %225 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %226 = load ptr, ptr %225, align 8, !tbaa !16
  %227 = icmp eq ptr %226, null
  br i1 %227, label %239, label %228

228:                                              ; preds = %224
  %229 = load i64, ptr %226, align 8
  %230 = and i64 %229, 65535
  %231 = icmp eq i64 %230, 40
  br i1 %231, label %239, label %237

232:                                              ; preds = %216
  %233 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %234 = load i64, ptr %233, align 8
  %235 = and i64 %234, 33554432
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %232, %228, %220
  call void (ptr, ...) @error(ptr noundef nonnull @.str.60, ptr noundef nonnull %0) #24
  %238 = load ptr, ptr @global_trees, align 16, !tbaa !5
  store ptr %238, ptr %63, align 8, !tbaa !16
  br label %239

239:                                              ; preds = %198, %237, %232, %228, %224, %212, %209
  %240 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %241 = load i64, ptr %240, align 8
  %242 = and i64 %241, 33554432
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %248

244:                                              ; preds = %239
  %245 = load i64, ptr %0, align 8
  %246 = and i64 %245, 67108864
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %258, label %248

248:                                              ; preds = %244, %239
  %249 = load ptr, ptr %7, align 8, !tbaa !16
  %250 = icmp eq ptr %249, null
  br i1 %250, label %258, label %251

251:                                              ; preds = %248
  %252 = load i64, ptr %249, align 8
  %253 = and i64 %252, 65535
  %254 = icmp eq i64 %253, 23
  br i1 %254, label %255, label %256

255:                                              ; preds = %251
  call void @constant_expression_warning(ptr noundef nonnull %249) #24
  br label %258

256:                                              ; preds = %251
  call void (ptr, ...) @error(ptr noundef nonnull @.str.61, ptr noundef nonnull %0) #24
  %257 = load ptr, ptr @global_trees, align 16, !tbaa !5
  store ptr %257, ptr %63, align 8, !tbaa !16
  br label %258

258:                                              ; preds = %255, %256, %248, %244
  %259 = load i64, ptr %146, align 8
  %260 = and i64 %259, 16777216
  %261 = icmp eq i64 %260, 0
  %262 = load i64, ptr %0, align 8
  br i1 %261, label %265, label %263

263:                                              ; preds = %258
  %264 = or i64 %262, 16777216
  store i64 %264, ptr %0, align 8
  br label %265

265:                                              ; preds = %258, %263, %145
  %266 = phi i64 [ %262, %258 ], [ %264, %263 ], [ %147, %145 ]
  %267 = and i64 %266, 65535
  %268 = icmp eq i64 %267, 29
  %269 = select i1 %268, i1 %26, i1 false
  br i1 %269, label %270, label %277

270:                                              ; preds = %265
  %271 = getelementptr inbounds %struct.tree_function_decl, ptr %0, i64 0, i32 5
  %272 = load i32, ptr %271, align 8
  %273 = and i32 %272, 6144
  %274 = icmp eq i32 %273, 6144
  br i1 %274, label %275, label %276

275:                                              ; preds = %270
  call void @set_builtin_user_assembler_name(ptr noundef nonnull %0, ptr noundef nonnull %28) #24
  br label %276

276:                                              ; preds = %275, %270
  call void @set_user_assembler_name(ptr noundef nonnull %0, ptr noundef nonnull %28) #24
  br label %277

277:                                              ; preds = %276, %265
  call void @maybe_apply_pragma_weak(ptr noundef nonnull %0) #24
  %278 = load i64, ptr %0, align 8
  %279 = trunc i64 %278 to i16
  switch i16 %279, label %424 [
    i16 32, label %280
    i16 29, label %280
  ]

280:                                              ; preds = %277, %277
  %281 = and i64 %278, 134217728
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %285, label %283

283:                                              ; preds = %280
  %284 = call zeroext i8 @c_determine_visibility(ptr noundef nonnull %0) #24
  br label %285

285:                                              ; preds = %283, %280
  %286 = load i32, ptr @c_language, align 4, !tbaa !16
  %287 = and i32 %286, 1
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %290, label %289

289:                                              ; preds = %285
  call void @objc_check_decl(ptr noundef nonnull %0) #24
  br label %290

290:                                              ; preds = %289, %285
  br i1 %26, label %291, label %313

291:                                              ; preds = %290
  %292 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %293 = load ptr, ptr %292, align 8, !tbaa !16
  %294 = icmp eq ptr %293, null
  br i1 %294, label %312, label %295

295:                                              ; preds = %291
  %296 = load i64, ptr %293, align 8
  %297 = and i64 %296, 65535
  %298 = icmp eq i64 %297, 40
  br i1 %298, label %312, label %299

299:                                              ; preds = %295
  %300 = load i64, ptr %0, align 8
  %301 = and i64 %300, 65535
  %302 = icmp eq i64 %301, 32
  br i1 %302, label %303, label %312

303:                                              ; preds = %299
  %304 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %305 = load i64, ptr %304, align 8
  %306 = and i64 %305, 524288
  %307 = and i64 %300, 67108864
  %308 = or i64 %306, %307
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %312

310:                                              ; preds = %303
  %311 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.62, ptr noundef nonnull %0) #24
  br label %313

312:                                              ; preds = %303, %299, %295, %291
  call void @set_user_assembler_name(ptr noundef nonnull %0, ptr noundef nonnull %27) #24
  br label %313

313:                                              ; preds = %310, %312, %290
  %314 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %315 = load ptr, ptr %314, align 8, !tbaa !16
  %316 = icmp eq ptr %315, null
  br i1 %316, label %321, label %317

317:                                              ; preds = %313
  %318 = load i64, ptr %315, align 8
  %319 = and i64 %318, 65535
  %320 = icmp eq i64 %319, 40
  br i1 %320, label %321, label %333

321:                                              ; preds = %317, %313
  %322 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %323 = load ptr, ptr %322, align 8, !tbaa !16
  %324 = icmp eq ptr %323, null
  %325 = load ptr, ptr @global_trees, align 16
  %326 = icmp eq ptr %323, %325
  %327 = select i1 %324, i1 true, i1 %326
  br i1 %327, label %328, label %332

328:                                              ; preds = %321
  %329 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %330 = load i32, ptr %329, align 8
  %331 = or i32 %330, 1
  store i32 %331, ptr %329, align 8
  br label %332

332:                                              ; preds = %321, %328
  call void @rest_of_decl_compilation(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 0) #24
  br label %396

333:                                              ; preds = %317
  br i1 %26, label %334, label %346

334:                                              ; preds = %333
  %335 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %336 = load i64, ptr %335, align 8
  %337 = and i64 %336, 524288
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %346, label %339

339:                                              ; preds = %334
  %340 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %0, i64 0, i32 4
  %341 = load i32, ptr %340, align 8
  %342 = or i32 %341, 2
  store i32 %342, ptr %340, align 8
  %343 = and i64 %336, 16777216
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %339
  call void (ptr, ...) @error(ptr noundef nonnull @.str.63) #24
  br label %346

346:                                              ; preds = %339, %345, %334, %333
  %347 = load i64, ptr %0, align 8
  %348 = and i64 %347, 65535
  %349 = icmp eq i64 %348, 29
  br i1 %349, label %396, label %350

350:                                              ; preds = %346
  %351 = load ptr, ptr %7, align 8, !tbaa !16
  %352 = icmp eq ptr %351, null
  br i1 %352, label %370, label %353

353:                                              ; preds = %350
  %354 = load i64, ptr %351, align 8
  %355 = and i64 %354, 131072
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %370

357:                                              ; preds = %353
  %358 = load ptr, ptr @c_stmt_tree, align 8, !tbaa !23
  %359 = load i64, ptr %358, align 8
  %360 = and i64 %359, 68719476736
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %370, label %362

362:                                              ; preds = %357
  %363 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !5
  %364 = call ptr @build3_stat(i32 noundef 58, ptr noundef %363, ptr noundef null, ptr noundef null, ptr noundef null) #24
  %365 = load i64, ptr %364, align 8
  %366 = or i64 %365, 65536
  store i64 %366, ptr %364, align 8
  %367 = call ptr @add_stmt(ptr noundef nonnull %364)
  %368 = call ptr @push_stmt_list() #24
  %369 = getelementptr inbounds %struct.tree_exp, ptr %364, i64 1
  store ptr %368, ptr %369, align 8, !tbaa !16
  br label %370

370:                                              ; preds = %362, %357, %353, %350
  %371 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %372 = load i32, ptr %371, align 8, !tbaa !16
  %373 = call ptr (i32, i32, ...) @build_stmt(i32 noundef %372, i32 noundef 132, ptr noundef nonnull %0) #24
  %374 = load i64, ptr %373, align 8
  %375 = and i64 %374, 65535
  %376 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %375
  %377 = load i32, ptr %376, align 4, !tbaa !16
  %378 = icmp ugt i32 %377, 3
  br i1 %378, label %379, label %389

379:                                              ; preds = %370
  %380 = icmp ult i32 %377, 11
  %381 = icmp ne i64 %375, 133
  %382 = and i1 %380, %381
  br i1 %382, label %383, label %389

383:                                              ; preds = %379
  %384 = getelementptr inbounds %struct.tree_exp, ptr %373, i64 0, i32 1
  %385 = load i32, ptr %384, align 8, !tbaa !16
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %387, label %389

387:                                              ; preds = %383
  %388 = load i32, ptr @input_location, align 4, !tbaa !20
  store i32 %388, ptr %384, align 8, !tbaa !16
  br label %389

389:                                              ; preds = %387, %383, %379, %370
  %390 = trunc i64 %374 to i16
  switch i16 %390, label %395 [
    i16 139, label %391
    i16 133, label %391
  ]

391:                                              ; preds = %389, %389
  %392 = load ptr, ptr @c_stmt_tree, align 8, !tbaa !23
  %393 = load i64, ptr %392, align 8
  %394 = or i64 %393, 68719476736
  store i64 %394, ptr %392, align 8
  br label %395

395:                                              ; preds = %389, %391
  call void @append_to_statement_list_force(ptr noundef nonnull %373, ptr noundef nonnull @c_stmt_tree) #24
  br label %396

396:                                              ; preds = %346, %395, %332
  %397 = load ptr, ptr %314, align 8, !tbaa !16
  %398 = icmp eq ptr %397, null
  br i1 %398, label %399, label %401

399:                                              ; preds = %396
  %400 = load i64, ptr %0, align 8
  br label %424

401:                                              ; preds = %396
  %402 = load i64, ptr %397, align 8
  %403 = and i64 %402, 65535
  %404 = icmp ne i64 %403, 40
  %405 = select i1 %404, i1 %9, i1 false
  %406 = load i64, ptr %0, align 8
  %407 = and i64 %406, 67108864
  %408 = icmp eq i64 %407, 0
  %409 = select i1 %405, i1 %408, i1 false
  br i1 %409, label %410, label %424

410:                                              ; preds = %401
  %411 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %412 = load i64, ptr %411, align 8
  %413 = and i64 %412, 33554432
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %415, label %424

415:                                              ; preds = %410
  %416 = lshr i64 %406, 6
  %417 = and i64 %416, 262144
  %418 = and i64 %406, -262145
  %419 = or i64 %417, %418
  store i64 %419, ptr %0, align 8
  %420 = load ptr, ptr %7, align 8, !tbaa !16
  %421 = icmp eq ptr %420, null
  br i1 %421, label %422, label %424

422:                                              ; preds = %415
  %423 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  store ptr null, ptr %423, align 8, !tbaa !16
  br label %424

424:                                              ; preds = %399, %277, %401, %415, %422, %410
  %425 = phi i64 [ %400, %399 ], [ %278, %277 ], [ %406, %401 ], [ %419, %415 ], [ %419, %422 ], [ %406, %410 ]
  %426 = and i64 %425, 65535
  %427 = icmp eq i64 %426, 35
  br i1 %427, label %428, label %476

428:                                              ; preds = %424
  %429 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 4
  %430 = load ptr, ptr %429, align 8, !tbaa !16
  %431 = icmp eq ptr %430, null
  br i1 %431, label %474, label %432

432:                                              ; preds = %428
  %433 = load i64, ptr %430, align 8
  %434 = and i64 %433, 65535
  %435 = icmp eq i64 %434, 40
  br i1 %435, label %466, label %436

436:                                              ; preds = %432
  %437 = load ptr, ptr %63, align 8, !tbaa !16
  %438 = call zeroext i8 @variably_modified_type_p(ptr noundef %437, ptr noundef null) #24
  %439 = icmp eq i8 %438, 0
  br i1 %439, label %466, label %440

440:                                              ; preds = %436
  %441 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %442 = load i32, ptr %441, align 8, !tbaa !16
  %443 = call ptr (i32, i32, ...) @build_stmt(i32 noundef %442, i32 noundef 132, ptr noundef nonnull %0) #24
  %444 = load i64, ptr %443, align 8
  %445 = and i64 %444, 65535
  %446 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %445
  %447 = load i32, ptr %446, align 4, !tbaa !16
  %448 = icmp ugt i32 %447, 3
  br i1 %448, label %449, label %459

449:                                              ; preds = %440
  %450 = icmp ult i32 %447, 11
  %451 = icmp ne i64 %445, 133
  %452 = and i1 %450, %451
  br i1 %452, label %453, label %459

453:                                              ; preds = %449
  %454 = getelementptr inbounds %struct.tree_exp, ptr %443, i64 0, i32 1
  %455 = load i32, ptr %454, align 8, !tbaa !16
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %459

457:                                              ; preds = %453
  %458 = load i32, ptr @input_location, align 4, !tbaa !20
  store i32 %458, ptr %454, align 8, !tbaa !16
  br label %459

459:                                              ; preds = %457, %453, %449, %440
  %460 = trunc i64 %444 to i16
  switch i16 %460, label %465 [
    i16 139, label %461
    i16 133, label %461
  ]

461:                                              ; preds = %459, %459
  %462 = load ptr, ptr @c_stmt_tree, align 8, !tbaa !23
  %463 = load i64, ptr %462, align 8
  %464 = or i64 %463, 68719476736
  store i64 %464, ptr %462, align 8
  br label %465

465:                                              ; preds = %459, %461
  call void @append_to_statement_list_force(ptr noundef nonnull %443, ptr noundef nonnull @c_stmt_tree) #24
  br label %466

466:                                              ; preds = %465, %436, %432
  %467 = load ptr, ptr %429, align 8, !tbaa !16
  %468 = icmp eq ptr %467, null
  br i1 %468, label %474, label %469

469:                                              ; preds = %466
  %470 = load i64, ptr %467, align 8
  %471 = and i64 %470, 65535
  %472 = icmp eq i64 %471, 40
  %473 = zext i1 %472 to i32
  br label %474

474:                                              ; preds = %428, %469, %466
  %475 = phi i32 [ 1, %466 ], [ %473, %469 ], [ 1, %428 ]
  call void @rest_of_decl_compilation(ptr noundef nonnull %0, i32 noundef %475, i32 noundef 0) #24
  br label %476

476:                                              ; preds = %474, %424
  %477 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %478 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %479 = icmp eq ptr %477, %478
  br i1 %479, label %480, label %482

480:                                              ; preds = %476
  %481 = call ptr @get_pending_sizes() #24
  br label %482

482:                                              ; preds = %480, %476
  %483 = load i64, ptr %0, align 8
  %484 = and i64 %483, 67174399
  %485 = icmp eq i64 %484, 32
  br i1 %485, label %486, label %523

486:                                              ; preds = %482
  %487 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 6
  %488 = load ptr, ptr %487, align 8, !tbaa !16
  %489 = call ptr @lookup_attribute(ptr noundef nonnull @.str.64, ptr noundef %488) #24
  %490 = icmp eq ptr %489, null
  br i1 %490, label %523, label %491

491:                                              ; preds = %486
  %492 = getelementptr inbounds %struct.tree_list, ptr %489, i64 0, i32 2
  %493 = load ptr, ptr %492, align 8, !tbaa !16
  %494 = getelementptr inbounds %struct.tree_list, ptr %493, i64 0, i32 2
  %495 = load ptr, ptr %494, align 8, !tbaa !16
  %496 = getelementptr inbounds %struct.lang_identifier, ptr %495, i64 0, i32 1
  %497 = load ptr, ptr %496, align 8, !tbaa !25
  %498 = icmp eq ptr %497, null
  br i1 %498, label %507, label %499

499:                                              ; preds = %491
  %500 = getelementptr inbounds %struct.c_binding, ptr %497, i64 0, i32 5
  %501 = load i32, ptr %500, align 8
  %502 = and i32 %501, 268435456
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %504, label %507

504:                                              ; preds = %499
  %505 = getelementptr inbounds %struct.c_binding, ptr %497, i64 0, i32 1
  %506 = load ptr, ptr %505, align 8, !tbaa !32
  br label %507

507:                                              ; preds = %491, %499, %504
  %508 = phi ptr [ %506, %504 ], [ null, %499 ], [ null, %491 ]
  %509 = load i32, ptr @input_location, align 4, !tbaa !20
  %510 = call ptr @build_unary_op(i32 noundef %509, i32 noundef 121, ptr noundef nonnull %0, i32 noundef 0) #24
  %511 = call ptr @vec_gc_p_reserve_exact(ptr noundef null, i32 noundef 1) #24
  %512 = load i32, ptr %511, align 8, !tbaa !68
  %513 = add i32 %512, 1
  store i32 %513, ptr %511, align 8, !tbaa !68
  %514 = zext i32 %512 to i64
  %515 = getelementptr inbounds %struct.VEC_tree_base, ptr %511, i64 0, i32 2, i64 %514
  store ptr %510, ptr %515, align 8, !tbaa !5
  %516 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %517 = load i32, ptr %516, align 8, !tbaa !16
  %518 = call ptr @build_function_call_vec(i32 noundef %517, ptr noundef %508, ptr noundef nonnull %511, ptr noundef null) #24
  call void @ggc_free(ptr noundef nonnull %511) #24
  %519 = load i64, ptr %0, align 8
  %520 = or i64 %519, 16777216
  store i64 %520, ptr %0, align 8
  %521 = load i64, ptr %508, align 8
  %522 = or i64 %521, 16777216
  store i64 %522, ptr %508, align 8
  call void @push_cleanup(ptr noundef nonnull %0, ptr noundef %518, i8 noundef zeroext 0) #24
  br label %523

523:                                              ; preds = %486, %507, %482
  %524 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %543, label %526

526:                                              ; preds = %523
  %527 = load i64, ptr %0, align 8
  %528 = and i64 %527, 1114111
  %529 = icmp eq i64 %528, 1048608
  br i1 %529, label %530, label %543

530:                                              ; preds = %526
  %531 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 2
  %532 = load i64, ptr %531, align 8
  %533 = and i64 %532, 33554432
  %534 = icmp eq i64 %533, 0
  br i1 %534, label %535, label %543

535:                                              ; preds = %530
  %536 = getelementptr inbounds %struct.tree_decl_common, ptr %0, i64 0, i32 5
  %537 = load ptr, ptr %536, align 8, !tbaa !16
  %538 = icmp eq ptr %537, null
  br i1 %538, label %539, label %543

539:                                              ; preds = %535
  %540 = getelementptr inbounds %struct.tree_decl_minimal, ptr %0, i64 0, i32 1
  %541 = load i32, ptr %540, align 8, !tbaa !16
  %542 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %541, i32 noundef 49, ptr noundef nonnull @.str.65, ptr noundef nonnull %0) #24
  br label %543

543:                                              ; preds = %539, %535, %530, %526, %523
  ret void
}

declare void @record_types_used_by_current_var_decl(ptr noundef) local_unnamed_addr #3

declare void @store_init_value(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @objc_check_decl(ptr noundef) local_unnamed_addr #3

declare void @constant_expression_warning(ptr noundef) local_unnamed_addr #3

declare void @set_builtin_user_assembler_name(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @maybe_apply_pragma_weak(ptr noundef) local_unnamed_addr #3

declare zeroext i8 @c_determine_visibility(ptr noundef) local_unnamed_addr #3

declare ptr @build3_stat(i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @push_stmt_list() local_unnamed_addr #3

declare ptr @build_stmt(i32 noundef, i32 noundef, ...) local_unnamed_addr #3

declare ptr @get_pending_sizes() local_unnamed_addr #3

declare ptr @build_unary_op(i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @build_function_call_vec(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @push_cleanup(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @grokparm(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #24
  %4 = getelementptr inbounds %struct.c_parm, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !175
  store ptr %5, ptr %2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #24
  %6 = getelementptr inbounds %struct.c_parm, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !177
  %8 = load ptr, ptr %0, align 8, !tbaa !178
  %9 = call fastcc ptr @grokdeclarator(ptr noundef %7, ptr noundef %8, i32 noundef 2, i8 noundef zeroext 0, ptr noundef null, ptr noundef nonnull %2, ptr noundef null, ptr noundef null, i32 noundef 0)
  store ptr %9, ptr %3, align 8, !tbaa !5
  %10 = load ptr, ptr %2, align 8, !tbaa !5
  %11 = call ptr @decl_attributes(ptr noundef nonnull %3, ptr noundef %10, i32 noundef 0) #24
  %12 = load ptr, ptr %3, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #24
  ret ptr %12
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @push_parm_decl(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #24
  %4 = getelementptr inbounds %struct.c_parm, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !175
  store ptr %5, ptr %2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #24
  %6 = getelementptr inbounds %struct.c_parm, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !177
  %8 = load ptr, ptr %0, align 8, !tbaa !178
  %9 = call fastcc ptr @grokdeclarator(ptr noundef %7, ptr noundef %8, i32 noundef 2, i8 noundef zeroext 0, ptr noundef null, ptr noundef nonnull %2, ptr noundef null, ptr noundef null, i32 noundef 0)
  store ptr %9, ptr %3, align 8, !tbaa !5
  %10 = load ptr, ptr %2, align 8, !tbaa !5
  %11 = call ptr @decl_attributes(ptr noundef nonnull %3, ptr noundef %10, i32 noundef 0) #24
  %12 = load ptr, ptr %3, align 8, !tbaa !5
  %13 = call ptr @pushdecl(ptr noundef %12)
  store ptr %13, ptr %3, align 8, !tbaa !5
  %14 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @finish_decl(ptr noundef %13, i32 noundef %14, ptr noundef null, ptr noundef null, ptr noundef null)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #24
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @mark_forward_parm_decls() local_unnamed_addr #9 {
  %1 = load i32, ptr @pedantic, align 4, !tbaa !20
  %2 = icmp eq i32 %1, 0
  %3 = load ptr, ptr @current_scope, align 8, !tbaa !5
  br i1 %2, label %16, label %4

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct.c_scope, ptr %3, i64 0, i32 5
  %6 = load i64, ptr %5, align 8
  %7 = and i64 %6, 1073741824
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = load i32, ptr @input_location, align 4, !tbaa !20
  %11 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %10, i32 noundef 834, ptr noundef nonnull @.str.66) #24
  %12 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %13 = getelementptr inbounds %struct.c_scope, ptr %12, i64 0, i32 5
  %14 = load i64, ptr %13, align 8
  %15 = or i64 %14, 1073741824
  store i64 %15, ptr %13, align 8
  br label %16

16:                                               ; preds = %9, %4, %0
  %17 = phi ptr [ %12, %9 ], [ %3, %4 ], [ %3, %0 ]
  %18 = getelementptr inbounds %struct.c_scope, ptr %17, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !5
  %20 = icmp eq ptr %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16, %30
  %22 = phi ptr [ %32, %30 ], [ %19, %16 ]
  %23 = getelementptr inbounds %struct.c_binding, ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !32
  %25 = load i64, ptr %24, align 8
  %26 = and i64 %25, 65535
  %27 = icmp eq i64 %26, 34
  br i1 %27, label %28, label %30

28:                                               ; preds = %21
  %29 = or i64 %25, 4194304
  store i64 %29, ptr %24, align 8
  br label %30

30:                                               ; preds = %21, %28
  %31 = getelementptr inbounds %struct.c_binding, ptr %22, i64 0, i32 3
  %32 = load ptr, ptr %31, align 8, !tbaa !5
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %21, !llvm.loop !179

34:                                               ; preds = %30, %16
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_compound_literal(i32 noundef %0, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3) local_unnamed_addr #9 {
  %5 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %6 = icmp eq ptr %5, %1
  %7 = icmp eq ptr %5, %2
  %8 = or i1 %6, %7
  br i1 %8, label %78, label %9

9:                                                ; preds = %4
  %10 = tail call ptr @build_decl_stat(i32 noundef %0, i32 noundef 32, ptr noundef null, ptr noundef %1) #24
  %11 = getelementptr inbounds %struct.tree_decl_common, ptr %10, i64 0, i32 2
  %12 = load i64, ptr %11, align 8
  %13 = and i64 %12, -33554433
  store i64 %13, ptr %11, align 8
  %14 = load i64, ptr %10, align 8
  %15 = and i64 %14, -134217729
  store i64 %15, ptr %10, align 8
  %16 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %17 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %18 = icmp eq ptr %16, %17
  %19 = select i1 %18, i64 67108864, i64 0
  %20 = and i64 %14, -201326593
  %21 = or i64 %19, %20
  store i64 %21, ptr %10, align 8
  %22 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %23 = getelementptr inbounds %struct.tree_decl_minimal, ptr %10, i64 0, i32 4
  store ptr %22, ptr %23, align 8, !tbaa !16
  %24 = or i64 %21, 16777216
  store i64 %24, ptr %10, align 8
  %25 = getelementptr inbounds %struct.tree_common, ptr %10, i64 0, i32 2
  store ptr %1, ptr %25, align 8, !tbaa !16
  %26 = load i64, ptr %1, align 8
  %27 = and i64 %26, 1048576
  %28 = and i64 %24, -135266305
  %29 = or i64 %27, %28
  store i64 %29, ptr %10, align 8
  tail call void @store_init_value(i32 noundef %0, ptr noundef nonnull %10, ptr noundef %2, ptr noundef null) #24
  %30 = load i64, ptr %1, align 8
  %31 = and i64 %30, 65535
  %32 = icmp eq i64 %31, 15
  br i1 %32, label %33, label %47

33:                                               ; preds = %9
  %34 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !16
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %47

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.tree_decl_common, ptr %10, i64 0, i32 5
  %39 = load ptr, ptr %38, align 8, !tbaa !16
  %40 = tail call i32 @complete_array_type(ptr noundef nonnull %25, ptr noundef %39, i8 noundef zeroext 1) #24
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %37
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 4483, ptr noundef nonnull @.str.8) #24
  br label %43

43:                                               ; preds = %37, %42
  %44 = load ptr, ptr %25, align 8, !tbaa !16
  %45 = load ptr, ptr %38, align 8, !tbaa !16
  %46 = getelementptr inbounds %struct.tree_common, ptr %45, i64 0, i32 2
  store ptr %44, ptr %46, align 8, !tbaa !16
  br label %47

47:                                               ; preds = %43, %33, %9
  %48 = phi ptr [ %1, %33 ], [ %44, %43 ], [ %1, %9 ]
  %49 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %50 = icmp eq ptr %48, %49
  br i1 %50, label %78, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.tree_type, ptr %48, i64 0, i32 2
  %53 = load ptr, ptr %52, align 8, !tbaa !16
  %54 = icmp eq ptr %53, null
  br i1 %54, label %78, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.tree_decl_minimal, ptr %10, i64 0, i32 1
  %57 = load i32, ptr %56, align 8, !tbaa !16
  %58 = tail call ptr (i32, i32, ...) @build_stmt(i32 noundef %57, i32 noundef 132, ptr noundef nonnull %10) #24
  %59 = tail call ptr @build1_stat(i32 noundef 119, ptr noundef nonnull %48, ptr noundef %58) #24
  %60 = load i64, ptr %59, align 8
  %61 = or i64 %60, 65536
  store i64 %61, ptr %59, align 8
  tail call void @layout_decl(ptr noundef nonnull %10, i32 noundef 0) #24
  %62 = load i64, ptr %10, align 8
  %63 = and i64 %62, 67108864
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %55
  tail call void @set_compound_literal_name(ptr noundef nonnull %10) #24
  %66 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %10, i64 0, i32 4
  %67 = load i32, ptr %66, align 8
  %68 = or i32 %67, 513
  store i32 %68, ptr %66, align 8
  %69 = load i64, ptr %11, align 8
  %70 = or i64 %69, 5120
  store i64 %70, ptr %11, align 8
  %71 = tail call ptr @pushdecl(ptr noundef nonnull %10)
  tail call void @rest_of_decl_compilation(ptr noundef nonnull %10, i32 noundef 1, i32 noundef 0) #24
  br label %72

72:                                               ; preds = %65, %55
  %73 = icmp eq i8 %3, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %72
  %75 = tail call ptr @build2_stat(i32 noundef 189, ptr noundef nonnull %48, ptr noundef null, ptr noundef nonnull %59) #24
  %76 = load i64, ptr %75, align 8
  %77 = or i64 %76, 17179869184
  store i64 %77, ptr %75, align 8
  br label %78

78:                                               ; preds = %47, %51, %4, %72, %74
  %79 = phi ptr [ %75, %74 ], [ %59, %72 ], [ %5, %4 ], [ %49, %51 ], [ %48, %47 ]
  ret ptr %79
}

declare ptr @build1_stat(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @set_compound_literal_name(ptr noundef) local_unnamed_addr #3

declare ptr @build2_stat(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @check_compound_literal_type(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = load ptr, ptr %1, align 8, !tbaa !146
  %7 = getelementptr inbounds %struct.c_declspecs, ptr %6, i64 0, i32 6
  %8 = load i8, ptr %7, align 8
  %9 = and i8 %8, 32
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 49, ptr noundef nonnull @.str.67) #24
  br label %13

13:                                               ; preds = %11, %5, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @get_parm_info(i8 noundef zeroext %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.c_scope, ptr %2, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !48
  store i64 48, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %5 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %6 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = icmp slt i64 %9, 48
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  tail call void @_obstack_newchunk(ptr noundef nonnull @parser_obstack, i32 noundef 48) #24
  %12 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %13 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi ptr [ %6, %1 ], [ %13, %11 ]
  %16 = phi i64 [ 48, %1 ], [ %12, %11 ]
  %17 = getelementptr inbounds i8, ptr %15, i64 %16
  %18 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  %19 = icmp eq ptr %17, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  %22 = or i8 %21, 2
  store i8 %22, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  br label %23

23:                                               ; preds = %14, %20
  %24 = ptrtoint ptr %18 to i64
  store i64 %24, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %25 = ptrtoint ptr %17 to i64
  %26 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 6), align 8, !tbaa !139
  %27 = sext i32 %26 to i64
  %28 = add nsw i64 %27, %25
  %29 = xor i32 %26, -1
  %30 = sext i32 %29 to i64
  %31 = and i64 %28, %30
  %32 = inttoptr i64 %31 to ptr
  %33 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 1), align 8, !tbaa !140
  %34 = ptrtoint ptr %33 to i64
  %35 = sub i64 %31, %34
  %36 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %37 = ptrtoint ptr %36 to i64
  %38 = sub i64 %37, %34
  %39 = icmp sgt i64 %35, %38
  %40 = select i1 %39, ptr %36, ptr %32
  store ptr %40, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8
  store ptr %40, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  %41 = getelementptr inbounds %struct.c_arg_info, ptr %18, i64 0, i32 1
  %42 = getelementptr inbounds %struct.c_arg_info, ptr %18, i64 0, i32 2
  %43 = getelementptr inbounds %struct.c_arg_info, ptr %18, i64 0, i32 3
  %44 = getelementptr inbounds %struct.c_arg_info, ptr %18, i64 0, i32 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %18, i8 0, i64 40, i1 false)
  %45 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %46 = getelementptr inbounds %struct.c_scope, ptr %45, i64 0, i32 5
  %47 = load i64, ptr %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = lshr i32 %48, 29
  %50 = getelementptr inbounds %struct.c_arg_info, ptr %18, i64 0, i32 5
  %51 = trunc i32 %49 to i8
  %52 = and i8 %51, 1
  %53 = load i8, ptr %50, align 8
  %54 = and i8 %53, -2
  %55 = or i8 %52, %54
  store i8 %55, ptr %50, align 8
  %56 = getelementptr inbounds %struct.c_scope, ptr %45, i64 0, i32 2
  store ptr null, ptr %56, align 8, !tbaa !48
  %57 = icmp eq ptr %4, null
  br i1 %57, label %58, label %59

58:                                               ; preds = %23
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 6187, ptr noundef nonnull @.str.8) #24
  br label %59

59:                                               ; preds = %23, %58
  %60 = getelementptr inbounds %struct.c_binding, ptr %4, i64 0, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !60
  %62 = icmp eq ptr %61, null
  br i1 %62, label %63, label %93

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.c_binding, ptr %4, i64 0, i32 1
  %65 = load ptr, ptr %64, align 8, !tbaa !32
  %66 = load i64, ptr %65, align 8
  %67 = and i64 %66, 65535
  %68 = icmp eq i64 %67, 34
  br i1 %68, label %69, label %93

69:                                               ; preds = %63
  %70 = getelementptr inbounds %struct.tree_decl_minimal, ptr %65, i64 0, i32 3
  %71 = load ptr, ptr %70, align 8, !tbaa !16
  %72 = icmp eq ptr %71, null
  br i1 %72, label %73, label %93

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.tree_common, ptr %65, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8, !tbaa !16
  %76 = load i64, ptr %75, align 8
  %77 = and i64 %76, 65535
  %78 = icmp eq i64 %77, 19
  br i1 %78, label %79, label %93

79:                                               ; preds = %73
  %80 = and i64 %66, 1572864
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %87

82:                                               ; preds = %79
  %83 = getelementptr inbounds %struct.tree_decl_common, ptr %65, i64 0, i32 2
  %84 = load i64, ptr %83, align 8
  %85 = and i64 %84, 524288
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %82, %79
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.68) #24
  br label %88

88:                                               ; preds = %87, %82
  %89 = icmp eq i8 %0, 0
  br i1 %89, label %91, label %90

90:                                               ; preds = %88
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.69) #24
  br label %91

91:                                               ; preds = %90, %88
  %92 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8, !tbaa !5
  store ptr %92, ptr %42, align 8, !tbaa !157
  br label %218

93:                                               ; preds = %59, %63, %69, %73
  %94 = icmp eq i8 %0, 0
  %95 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 55), align 8
  %96 = select i1 %94, ptr %95, ptr null
  br label %97

97:                                               ; preds = %93, %206
  %98 = phi ptr [ %213, %206 ], [ %4, %93 ]
  %99 = phi i8 [ %211, %206 ], [ 0, %93 ]
  %100 = phi ptr [ %210, %206 ], [ null, %93 ]
  %101 = phi ptr [ %209, %206 ], [ %96, %93 ]
  %102 = phi ptr [ %208, %206 ], [ null, %93 ]
  %103 = phi ptr [ %207, %206 ], [ null, %93 ]
  %104 = getelementptr inbounds %struct.c_binding, ptr %98, i64 0, i32 1
  %105 = load ptr, ptr %104, align 8, !tbaa !32
  %106 = getelementptr inbounds %struct.tree_common, ptr %105, i64 0, i32 2
  %107 = load ptr, ptr %106, align 8, !tbaa !16
  %108 = load i64, ptr %105, align 8
  %109 = trunc i64 %108 to i16
  switch i16 %109, label %205 [
    i16 34, label %110
    i16 6, label %148
    i16 17, label %146
    i16 16, label %147
    i16 33, label %177
    i16 35, label %177
    i16 29, label %177
    i16 0, label %189
  ]

110:                                              ; preds = %97
  %111 = getelementptr inbounds %struct.c_binding, ptr %98, i64 0, i32 2
  %112 = load ptr, ptr %111, align 8, !tbaa !51
  %113 = icmp eq ptr %112, null
  br i1 %113, label %126, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.lang_identifier, ptr %112, i64 0, i32 1
  %116 = load ptr, ptr %115, align 8, !tbaa !25
  %117 = icmp eq ptr %116, %98
  br i1 %117, label %120, label %118

118:                                              ; preds = %114
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 6228, ptr noundef nonnull @.str.8) #24
  %119 = load ptr, ptr %111, align 8, !tbaa !51
  br label %120

120:                                              ; preds = %114, %118
  %121 = phi ptr [ %112, %114 ], [ %119, %118 ]
  %122 = getelementptr inbounds %struct.c_binding, ptr %98, i64 0, i32 4
  %123 = load ptr, ptr %122, align 8, !tbaa !52
  %124 = getelementptr inbounds %struct.lang_identifier, ptr %121, i64 0, i32 1
  store ptr %123, ptr %124, align 8, !tbaa !25
  %125 = load i64, ptr %105, align 8
  br label %126

126:                                              ; preds = %120, %110
  %127 = phi i64 [ %125, %120 ], [ %108, %110 ]
  %128 = and i64 %127, 4194304
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %131, label %130

130:                                              ; preds = %126
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.70, ptr noundef nonnull %105) #24
  br label %206

131:                                              ; preds = %126
  %132 = load i64, ptr %107, align 8
  %133 = and i64 %132, 65535
  %134 = icmp eq i64 %133, 19
  br i1 %134, label %135, label %142

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.tree_decl_minimal, ptr %105, i64 0, i32 3
  %137 = load ptr, ptr %136, align 8, !tbaa !16
  %138 = icmp eq ptr %137, null
  br i1 %138, label %139, label %142

139:                                              ; preds = %135
  %140 = icmp eq i8 %99, 0
  br i1 %140, label %141, label %206

141:                                              ; preds = %139
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.69) #24
  br label %206

142:                                              ; preds = %135, %131
  %143 = getelementptr inbounds %struct.tree_common, ptr %105, i64 0, i32 1
  store ptr %103, ptr %143, align 8, !tbaa !16
  %144 = getelementptr inbounds %struct.tree_decl_common, ptr %105, i64 0, i32 5
  store ptr %107, ptr %144, align 8, !tbaa !16
  %145 = tail call ptr @tree_cons_stat(ptr noundef null, ptr noundef nonnull %107, ptr noundef %101) #24
  br label %206

146:                                              ; preds = %97
  br label %148

147:                                              ; preds = %97
  br label %148

148:                                              ; preds = %97, %147, %146
  %149 = phi ptr [ @.str.73, %147 ], [ @.str.72, %146 ], [ @.str.71, %97 ]
  %150 = getelementptr inbounds %struct.c_binding, ptr %98, i64 0, i32 2
  %151 = load ptr, ptr %150, align 8, !tbaa !51
  %152 = icmp eq ptr %151, null
  br i1 %152, label %165, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %struct.lang_identifier, ptr %151, i64 0, i32 2
  %155 = load ptr, ptr %154, align 8, !tbaa !34
  %156 = icmp eq ptr %155, %98
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 6265, ptr noundef nonnull @.str.8) #24
  %158 = load ptr, ptr %150, align 8, !tbaa !51
  br label %159

159:                                              ; preds = %157, %153
  %160 = phi ptr [ %151, %153 ], [ %158, %157 ]
  %161 = getelementptr inbounds %struct.c_binding, ptr %98, i64 0, i32 4
  %162 = load ptr, ptr %161, align 8, !tbaa !52
  %163 = getelementptr inbounds %struct.lang_identifier, ptr %160, i64 0, i32 2
  store ptr %162, ptr %163, align 8, !tbaa !34
  %164 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.74, ptr noundef nonnull %149, ptr noundef nonnull %160) #24
  br label %170

165:                                              ; preds = %148
  %166 = and i64 %108, 65535
  %167 = icmp eq i64 %166, 17
  br i1 %167, label %174, label %168

168:                                              ; preds = %165
  %169 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.75, ptr noundef nonnull %149) #24
  br label %170

170:                                              ; preds = %168, %159
  %171 = load i1, ptr @get_parm_info.explained_incomplete_types, align 1
  br i1 %171, label %174, label %172

172:                                              ; preds = %170
  %173 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.76) #24
  store i1 true, ptr @get_parm_info.explained_incomplete_types, align 1
  br label %174

174:                                              ; preds = %165, %170, %172
  %175 = load ptr, ptr %150, align 8, !tbaa !51
  %176 = tail call ptr @tree_cons_stat(ptr noundef %175, ptr noundef nonnull %105, ptr noundef %102) #24
  br label %206

177:                                              ; preds = %97, %97, %97
  %178 = and i64 %108, 65535
  %179 = icmp eq i64 %178, 29
  %180 = getelementptr inbounds %struct.c_binding, ptr %98, i64 0, i32 5
  %181 = load i32, ptr %180, align 8
  %182 = and i32 %181, 536870912
  %183 = icmp eq i32 %182, 0
  br i1 %179, label %184, label %185

184:                                              ; preds = %177
  br i1 %183, label %186, label %187

185:                                              ; preds = %177
  br i1 %183, label %187, label %186

186:                                              ; preds = %185, %184
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 6310, ptr noundef nonnull @.str.8) #24
  br label %187

187:                                              ; preds = %184, %185, %186
  %188 = getelementptr inbounds %struct.tree_common, ptr %105, i64 0, i32 1
  store ptr %100, ptr %188, align 8, !tbaa !16
  br label %189

189:                                              ; preds = %97, %187
  %190 = phi ptr [ %100, %97 ], [ %105, %187 ]
  %191 = getelementptr inbounds %struct.c_binding, ptr %98, i64 0, i32 2
  %192 = load ptr, ptr %191, align 8, !tbaa !51
  %193 = icmp eq ptr %192, null
  br i1 %193, label %206, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %struct.lang_identifier, ptr %192, i64 0, i32 1
  %196 = load ptr, ptr %195, align 8, !tbaa !25
  %197 = icmp eq ptr %196, %98
  br i1 %197, label %200, label %198

198:                                              ; preds = %194
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 6320, ptr noundef nonnull @.str.8) #24
  %199 = load ptr, ptr %191, align 8, !tbaa !51
  br label %200

200:                                              ; preds = %194, %198
  %201 = phi ptr [ %192, %194 ], [ %199, %198 ]
  %202 = getelementptr inbounds %struct.c_binding, ptr %98, i64 0, i32 4
  %203 = load ptr, ptr %202, align 8, !tbaa !52
  %204 = getelementptr inbounds %struct.lang_identifier, ptr %201, i64 0, i32 1
  store ptr %203, ptr %204, align 8, !tbaa !25
  br label %206

205:                                              ; preds = %97
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 6329, ptr noundef nonnull @.str.8) #24
  br label %206

206:                                              ; preds = %189, %200, %130, %139, %141, %142, %205, %174
  %207 = phi ptr [ %103, %205 ], [ %103, %200 ], [ %103, %189 ], [ %103, %174 ], [ %103, %130 ], [ %105, %142 ], [ %103, %139 ], [ %103, %141 ]
  %208 = phi ptr [ %102, %205 ], [ %102, %200 ], [ %102, %189 ], [ %176, %174 ], [ %102, %130 ], [ %102, %142 ], [ %102, %139 ], [ %102, %141 ]
  %209 = phi ptr [ %101, %205 ], [ %101, %200 ], [ %101, %189 ], [ %101, %174 ], [ %101, %130 ], [ %145, %142 ], [ %101, %139 ], [ %101, %141 ]
  %210 = phi ptr [ %100, %205 ], [ %190, %200 ], [ %190, %189 ], [ %100, %174 ], [ %100, %130 ], [ %100, %142 ], [ %100, %139 ], [ %100, %141 ]
  %211 = phi i8 [ %99, %205 ], [ %99, %200 ], [ %99, %189 ], [ %99, %174 ], [ %99, %130 ], [ %99, %142 ], [ 1, %139 ], [ 1, %141 ]
  %212 = getelementptr inbounds %struct.c_binding, ptr %98, i64 0, i32 3
  %213 = load ptr, ptr %212, align 8, !tbaa !60
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %98, i8 0, i64 48, i1 false)
  %214 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  store ptr %214, ptr %212, align 8, !tbaa !60
  store ptr %98, ptr @binding_freelist, align 8, !tbaa !5
  %215 = icmp eq ptr %213, null
  br i1 %215, label %216, label %97, !llvm.loop !180

216:                                              ; preds = %206
  store ptr %207, ptr %18, align 8, !tbaa !159
  store ptr %208, ptr %41, align 8, !tbaa !181
  store ptr %209, ptr %42, align 8, !tbaa !157
  store ptr %210, ptr %43, align 8, !tbaa !182
  %217 = tail call ptr @get_pending_sizes() #24
  store ptr %217, ptr %44, align 8, !tbaa !162
  br label %218

218:                                              ; preds = %216, %91
  ret ptr %18
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @parser_xref_tag(ptr noalias nocapture writeonly sret(%struct.c_typespec) align 8 %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) local_unnamed_addr #9 {
  %5 = getelementptr inbounds %struct.c_typespec, ptr %0, i64 0, i32 2
  store ptr null, ptr %5, align 8, !tbaa !183
  %6 = getelementptr inbounds %struct.c_typespec, ptr %0, i64 0, i32 3
  store i8 1, ptr %6, align 8, !tbaa !185
  %7 = getelementptr inbounds %struct.lang_identifier, ptr %3, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !34
  %9 = icmp eq ptr %8, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.c_binding, ptr %8, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !32
  %13 = icmp eq ptr %12, null
  br i1 %13, label %37, label %14

14:                                               ; preds = %10
  %15 = load i64, ptr %12, align 8
  %16 = trunc i64 %15 to i32
  %17 = and i32 %16, 65535
  %18 = icmp eq i32 %17, %2
  br i1 %18, label %38, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.c_binding, ptr %8, i64 0, i32 5
  %21 = load i32, ptr %20, align 8
  %22 = and i32 %21, 268435455
  %23 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %24 = getelementptr inbounds %struct.c_scope, ptr %23, i64 0, i32 5
  %25 = load i64, ptr %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = and i32 %26, 268435455
  %28 = icmp eq i32 %22, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %19
  store ptr %3, ptr @pending_invalid_xref, align 8, !tbaa !5
  %30 = load i32, ptr @input_location, align 4, !tbaa !20
  store i32 %30, ptr @pending_invalid_xref_location, align 4, !tbaa !20
  br label %41

31:                                               ; preds = %19
  %32 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %33 = icmp eq ptr %23, %32
  %34 = icmp eq i32 %22, 0
  %35 = and i1 %34, %33
  store ptr %3, ptr @pending_invalid_xref, align 8, !tbaa !5
  %36 = load i32, ptr @input_location, align 4, !tbaa !20
  store i32 %36, ptr @pending_invalid_xref_location, align 4, !tbaa !20
  br i1 %35, label %41, label %38

37:                                               ; preds = %10, %4
  store i32 2, ptr %0, align 8, !tbaa !186
  br label %73

38:                                               ; preds = %14, %31
  %39 = getelementptr inbounds %struct.c_binding, ptr %8, i64 0, i32 6
  %40 = load i32, ptr %39, align 4, !tbaa !59
  store i32 1, ptr %0, align 8, !tbaa !186
  br label %48

41:                                               ; preds = %29, %31
  %42 = phi i32 [ %30, %29 ], [ %36, %31 ]
  tail call void (i32, ptr, ...) @error_at(i32 noundef %42, ptr noundef nonnull @.str.30, ptr noundef nonnull %3) #24
  store ptr null, ptr @pending_invalid_xref, align 8, !tbaa !5
  %43 = load ptr, ptr %11, align 8, !tbaa !32
  %44 = getelementptr inbounds %struct.c_binding, ptr %8, i64 0, i32 6
  %45 = load i32, ptr %44, align 4, !tbaa !59
  %46 = icmp eq ptr %43, null
  %47 = select i1 %46, i32 2, i32 1
  store i32 %47, ptr %0, align 8, !tbaa !186
  br i1 %46, label %73, label %48

48:                                               ; preds = %38, %41
  %49 = phi i32 [ %40, %38 ], [ %45, %41 ]
  %50 = phi ptr [ %12, %38 ], [ %43, %41 ]
  %51 = load i64, ptr %50, align 8
  %52 = trunc i64 %51 to i32
  %53 = and i32 %52, 65535
  %54 = icmp eq i32 %53, %2
  br i1 %54, label %55, label %73

55:                                               ; preds = %48
  %56 = getelementptr inbounds %struct.tree_type, ptr %50, i64 0, i32 6
  %57 = load i32, ptr %56, align 4
  %58 = and i32 %57, 134217728
  %59 = icmp ne i32 %58, 0
  %60 = icmp ne i32 %1, 0
  %61 = and i1 %60, %59
  %62 = load i32, ptr @warn_cxx_compat, align 4
  %63 = icmp ne i32 %62, 0
  %64 = select i1 %61, i1 %63, i1 false
  br i1 %64, label %65, label %116

65:                                               ; preds = %55
  switch i32 %2, label %72 [
    i32 6, label %66
    i32 16, label %68
    i32 17, label %70
  ]

66:                                               ; preds = %65
  %67 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %1, i32 noundef 49, ptr noundef nonnull @.str.77) #24
  tail call void (i32, ptr, ...) @inform(i32 noundef %49, ptr noundef nonnull @.str.78) #24
  br label %116

68:                                               ; preds = %65
  %69 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %1, i32 noundef 49, ptr noundef nonnull @.str.79) #24
  tail call void (i32, ptr, ...) @inform(i32 noundef %49, ptr noundef nonnull @.str.80) #24
  br label %116

70:                                               ; preds = %65
  %71 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %1, i32 noundef 49, ptr noundef nonnull @.str.81) #24
  tail call void (i32, ptr, ...) @inform(i32 noundef %49, ptr noundef nonnull @.str.82) #24
  br label %116

72:                                               ; preds = %65
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 6401, ptr noundef nonnull @.str.8) #24
  br label %116

73:                                               ; preds = %37, %48, %41
  %74 = tail call ptr @make_node_stat(i32 noundef %2) #24
  %75 = icmp eq i32 %2, 6
  br i1 %75, label %76, label %115

76:                                               ; preds = %73
  %77 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16, !tbaa !5
  %78 = load i64, ptr %77, align 8
  %79 = and i64 %78, 65535
  %80 = icmp eq i64 %79, 14
  br i1 %80, label %81, label %84

81:                                               ; preds = %76
  %82 = tail call i32 @vector_type_mode(ptr noundef nonnull %77) #24
  %83 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16, !tbaa !5
  br label %88

84:                                               ; preds = %76
  %85 = getelementptr inbounds %struct.tree_type, ptr %77, i64 0, i32 6
  %86 = load i32, ptr %85, align 4
  %87 = lshr i32 %86, 16
  br label %88

88:                                               ; preds = %84, %81
  %89 = phi ptr [ %83, %81 ], [ %77, %84 ]
  %90 = phi i32 [ %82, %81 ], [ %87, %84 ]
  %91 = getelementptr inbounds %struct.tree_type, ptr %74, i64 0, i32 6
  %92 = load i32, ptr %91, align 4
  %93 = shl i32 %90, 16
  %94 = and i32 %93, 16711680
  %95 = and i32 %92, -16711681
  %96 = or i32 %95, %94
  store i32 %96, ptr %91, align 4
  %97 = getelementptr inbounds %struct.tree_type, ptr %89, i64 0, i32 7
  %98 = load i32, ptr %97, align 8, !tbaa !16
  %99 = getelementptr inbounds %struct.tree_type, ptr %74, i64 0, i32 7
  store i32 %98, ptr %99, align 8, !tbaa !16
  %100 = load i64, ptr %74, align 8
  %101 = and i64 %100, -4398048608257
  %102 = or i64 %101, 2097152
  store i64 %102, ptr %74, align 8
  %103 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16, !tbaa !5
  %104 = getelementptr inbounds %struct.tree_type, ptr %103, i64 0, i32 6
  %105 = load i32, ptr %104, align 4
  %106 = and i32 %105, 1023
  %107 = and i32 %96, -1024
  %108 = or i32 %106, %107
  store i32 %108, ptr %91, align 4
  %109 = getelementptr inbounds %struct.tree_type, ptr %103, i64 0, i32 13
  %110 = load ptr, ptr %109, align 8, !tbaa !16
  %111 = getelementptr inbounds %struct.tree_type, ptr %74, i64 0, i32 13
  store ptr %110, ptr %111, align 8, !tbaa !16
  %112 = getelementptr inbounds %struct.tree_type, ptr %103, i64 0, i32 14
  %113 = load ptr, ptr %112, align 8, !tbaa !16
  %114 = getelementptr inbounds %struct.tree_type, ptr %74, i64 0, i32 14
  store ptr %113, ptr %114, align 8, !tbaa !16
  br label %115

115:                                              ; preds = %88, %73
  tail call fastcc void @pushtag(i32 noundef %1, ptr noundef nonnull %3, ptr noundef %74)
  br label %116

116:                                              ; preds = %55, %72, %70, %68, %66, %115
  %117 = phi ptr [ %74, %115 ], [ %50, %66 ], [ %50, %68 ], [ %50, %70 ], [ %50, %72 ], [ %50, %55 ]
  %118 = getelementptr inbounds %struct.c_typespec, ptr %0, i64 0, i32 1
  store ptr %117, ptr %118, align 8, !tbaa !187
  ret void
}

declare i32 @vector_type_mode(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @xref_tag(i32 noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = alloca %struct.c_typespec, align 8
  %4 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @parser_xref_tag(ptr nonnull sret(%struct.c_typespec) align 8 %3, i32 noundef %4, i32 noundef %0, ptr noundef %1)
  %5 = getelementptr inbounds %struct.c_typespec, ptr %3, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !187
  ret ptr %6
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @start_struct(i32 noundef %0, i32 noundef %1, ptr noundef %2, ptr nocapture noundef writeonly %3) local_unnamed_addr #9 {
  %5 = icmp eq ptr %2, null
  br i1 %5, label %69, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.lang_identifier, ptr %2, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !34
  %9 = icmp eq ptr %8, null
  br i1 %9, label %69, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.c_binding, ptr %8, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !32
  %13 = icmp eq ptr %12, null
  br i1 %13, label %69, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.c_binding, ptr %8, i64 0, i32 5
  %16 = load i32, ptr %15, align 8
  %17 = and i32 %16, 268435455
  %18 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.c_scope, ptr %18, i64 0, i32 5
  %20 = load i64, ptr %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = and i32 %21, 268435455
  %23 = icmp eq i32 %17, %22
  br i1 %23, label %34, label %24

24:                                               ; preds = %14
  %25 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %26 = icmp eq ptr %18, %25
  %27 = icmp eq i32 %17, 0
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %69

29:                                               ; preds = %24
  %30 = load i64, ptr %12, align 8
  %31 = trunc i64 %30 to i32
  %32 = and i32 %31, 65535
  %33 = icmp eq i32 %32, %1
  br i1 %33, label %43, label %39

34:                                               ; preds = %14
  %35 = load i64, ptr %12, align 8
  %36 = trunc i64 %35 to i32
  %37 = and i32 %36, 65535
  %38 = icmp eq i32 %37, %1
  br i1 %38, label %43, label %39

39:                                               ; preds = %34, %29
  store ptr %2, ptr @pending_invalid_xref, align 8, !tbaa !5
  %40 = load i32, ptr @input_location, align 4, !tbaa !20
  store i32 %40, ptr @pending_invalid_xref_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @error_at(i32 noundef %40, ptr noundef nonnull @.str.30, ptr noundef nonnull %2) #24
  store ptr null, ptr @pending_invalid_xref, align 8, !tbaa !5
  %41 = load ptr, ptr %11, align 8, !tbaa !32
  %42 = icmp eq ptr %41, null
  br i1 %42, label %69, label %43

43:                                               ; preds = %34, %29, %39
  %44 = phi ptr [ %41, %39 ], [ %12, %29 ], [ %12, %34 ]
  %45 = getelementptr inbounds %struct.c_binding, ptr %8, i64 0, i32 6
  %46 = load i32, ptr %45, align 4, !tbaa !59
  %47 = load i64, ptr %44, align 8
  %48 = trunc i64 %47 to i32
  %49 = and i32 %48, 65535
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %51, label %69

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.tree_type, ptr %44, i64 0, i32 2
  %53 = load ptr, ptr %52, align 8, !tbaa !16
  %54 = icmp eq ptr %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = icmp eq i32 %1, 17
  %57 = select i1 %56, ptr @.str.83, ptr @.str.84
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull %57, ptr noundef nonnull %2) #24
  %58 = icmp eq i32 %46, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %55
  tail call void (i32, ptr, ...) @inform(i32 noundef %46, ptr noundef nonnull @.str.85) #24
  br label %69

60:                                               ; preds = %51
  %61 = getelementptr inbounds %struct.tree_type, ptr %44, i64 0, i32 6
  %62 = load i32, ptr %61, align 4
  %63 = and i32 %62, 33554432
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %60
  %66 = icmp eq i32 %1, 17
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.86, ptr noundef nonnull %2) #24
  br label %69

68:                                               ; preds = %65
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.87, ptr noundef nonnull %2) #24
  br label %69

69:                                               ; preds = %43, %24, %6, %10, %4, %67, %68, %55, %59, %39
  %70 = tail call ptr @make_node_stat(i32 noundef %1) #24
  tail call fastcc void @pushtag(i32 noundef %0, ptr noundef %2, ptr noundef %70)
  %71 = load i64, ptr %70, align 8
  br label %72

72:                                               ; preds = %60, %69
  %73 = phi i64 [ %71, %69 ], [ %47, %60 ]
  %74 = phi ptr [ %70, %69 ], [ %44, %60 ]
  %75 = getelementptr inbounds %struct.tree_type, ptr %74, i64 0, i32 6
  %76 = load i32, ptr %75, align 4
  %77 = or i32 %76, 33554432
  store i32 %77, ptr %75, align 4
  %78 = load i32, ptr @flag_pack_struct, align 4, !tbaa !20
  %79 = and i32 %78, 1
  %80 = zext i32 %79 to i64
  %81 = shl nuw nsw i64 %80, 41
  %82 = and i64 %73, -2199023255553
  %83 = or i64 %81, %82
  store i64 %83, ptr %74, align 8
  %84 = load ptr, ptr @struct_parse_info, align 8, !tbaa !5
  store ptr %84, ptr %3, align 8, !tbaa !5
  %85 = tail call ptr @xmalloc(i64 noundef 24) #24
  store ptr %85, ptr @struct_parse_info, align 8, !tbaa !5
  %86 = tail call ptr @vec_heap_p_reserve_exact(ptr noundef null, i32 noundef 0) #24
  %87 = load ptr, ptr @struct_parse_info, align 8, !tbaa !5
  store ptr %86, ptr %87, align 8, !tbaa !188
  %88 = tail call ptr @vec_heap_p_reserve_exact(ptr noundef null, i32 noundef 0) #24
  %89 = load ptr, ptr @struct_parse_info, align 8, !tbaa !5
  %90 = getelementptr inbounds %struct.c_struct_parse_info, ptr %89, i64 0, i32 1
  store ptr %88, ptr %90, align 8, !tbaa !190
  %91 = tail call ptr @vec_heap_p_reserve_exact(ptr noundef null, i32 noundef 0) #24
  %92 = load ptr, ptr @struct_parse_info, align 8, !tbaa !5
  %93 = getelementptr inbounds %struct.c_struct_parse_info, ptr %92, i64 0, i32 2
  store ptr %91, ptr %93, align 8, !tbaa !191
  %94 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %109, label %96

96:                                               ; preds = %72
  %97 = load i32, ptr @in_sizeof, align 4, !tbaa !20
  %98 = icmp ne i32 %97, 0
  %99 = load i32, ptr @in_typeof, align 4
  %100 = icmp ne i32 %99, 0
  %101 = select i1 %98, i1 true, i1 %100
  %102 = load i32, ptr @in_alignof, align 4
  %103 = icmp ne i32 %102, 0
  %104 = select i1 %101, i1 true, i1 %103
  br i1 %104, label %105, label %109

105:                                              ; preds = %96
  %106 = select i1 %100, ptr @.str.90, ptr @.str.91
  %107 = select i1 %98, ptr @.str.89, ptr %106
  %108 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 49, ptr noundef nonnull @.str.88, ptr noundef nonnull %107) #24
  br label %109

109:                                              ; preds = %96, %105, %72
  ret ptr %74
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @grokfield(i32 noundef %0, ptr noundef %1, ptr nocapture noundef %2, ptr noundef %3, ptr nocapture noundef %4) local_unnamed_addr #9 {
  %6 = alloca ptr, align 8
  store ptr %3, ptr %6, align 8, !tbaa !5
  %7 = load i32, ptr %1, align 8, !tbaa !143
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %39

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.c_declarator, ptr %1, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !16
  %12 = icmp eq ptr %11, null
  %13 = icmp eq ptr %3, null
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %39

15:                                               ; preds = %9
  %16 = load ptr, ptr %2, align 8, !tbaa !127
  %17 = load i64, ptr %16, align 8
  %18 = and i64 %17, 65534
  %19 = icmp eq i64 %18, 16
  br i1 %19, label %20, label %35

20:                                               ; preds = %15
  %21 = load i32, ptr @flag_ms_extensions, align 4, !tbaa !20
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %37

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.c_declspecs, ptr %2, i64 0, i32 6
  %25 = load i8, ptr %24, align 8
  %26 = and i8 %25, 16
  %27 = icmp eq i8 %26, 0
  %28 = load i32, ptr @flag_iso, align 4
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %27, i1 %29, i1 false
  br i1 %30, label %31, label %35

31:                                               ; preds = %23
  %32 = getelementptr inbounds %struct.tree_type, ptr %16, i64 0, i32 12
  %33 = load ptr, ptr %32, align 8, !tbaa !16
  %34 = icmp eq ptr %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %31, %23, %15
  %36 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef 0, ptr noundef nonnull @.str.92) #24
  br label %80

37:                                               ; preds = %20, %31
  %38 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef 834, ptr noundef nonnull @.str.93) #24
  br label %39

39:                                               ; preds = %37, %9, %5
  %40 = icmp eq ptr %3, null
  %41 = select i1 %40, ptr null, ptr %6
  %42 = call fastcc ptr @grokdeclarator(ptr noundef nonnull %1, ptr noundef %2, i32 noundef 3, i8 noundef zeroext 0, ptr noundef %41, ptr noundef %4, ptr noundef null, ptr noundef null, i32 noundef 0)
  call void @finish_decl(ptr noundef %42, i32 noundef %0, ptr noundef null, ptr noundef null, ptr noundef null)
  %43 = load ptr, ptr %6, align 8, !tbaa !5
  %44 = getelementptr inbounds %struct.tree_decl_common, ptr %42, i64 0, i32 5
  store ptr %43, ptr %44, align 8, !tbaa !16
  %45 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %80, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %struct.tree_decl_minimal, ptr %42, i64 0, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !16
  %50 = icmp eq ptr %49, null
  br i1 %50, label %80, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.lang_identifier, ptr %49, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !25
  %54 = icmp eq ptr %53, null
  br i1 %54, label %80, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.c_binding, ptr %53, i64 0, i32 5
  %57 = load i32, ptr %56, align 8
  %58 = icmp sgt i32 %57, -1
  br i1 %58, label %59, label %80

59:                                               ; preds = %55
  %60 = load ptr, ptr @struct_parse_info, align 8, !tbaa !5
  %61 = getelementptr inbounds %struct.c_struct_parse_info, ptr %60, i64 0, i32 1
  %62 = load ptr, ptr %61, align 8, !tbaa !5
  %63 = icmp eq ptr %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %struct.VEC_c_binding_ptr_base, ptr %62, i64 0, i32 1
  %66 = load i32, ptr %65, align 4, !tbaa !192
  %67 = load i32, ptr %62, align 8, !tbaa !194
  %68 = icmp eq i32 %66, %67
  br i1 %68, label %69, label %72

69:                                               ; preds = %64, %59
  %70 = call ptr @vec_heap_p_reserve(ptr noundef %62, i32 noundef 1) #24
  store ptr %70, ptr %61, align 8, !tbaa !5
  %71 = load i32, ptr %70, align 8, !tbaa !194
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i32 [ %67, %64 ], [ %71, %69 ]
  %74 = phi ptr [ %62, %64 ], [ %70, %69 ]
  %75 = add i32 %73, 1
  store i32 %75, ptr %74, align 8, !tbaa !194
  %76 = zext i32 %73 to i64
  %77 = getelementptr inbounds %struct.VEC_c_binding_ptr_base, ptr %74, i64 0, i32 2, i64 %76
  store ptr %53, ptr %77, align 8, !tbaa !5
  %78 = load i32, ptr %56, align 8
  %79 = or i32 %78, -2147483648
  store i32 %79, ptr %56, align 8
  br label %80

80:                                               ; preds = %35, %39, %47, %55, %72, %51
  %81 = phi ptr [ %42, %51 ], [ %42, %72 ], [ %42, %55 ], [ %42, %47 ], [ %42, %39 ], [ null, %35 ]
  ret ptr %81
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @finish_struct(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) local_unnamed_addr #9 {
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  store ptr %1, ptr %6, align 8, !tbaa !5
  store ptr %2, ptr %7, align 8, !tbaa !5
  %8 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %9 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %10 = icmp eq ptr %8, %9
  %11 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 2
  store ptr null, ptr %11, align 8, !tbaa !16
  %12 = call ptr @decl_attributes(ptr noundef nonnull %6, ptr noundef %3, i32 noundef 8) #24
  %13 = load i32, ptr @pedantic, align 4, !tbaa !20
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %42, label %15

15:                                               ; preds = %5
  %16 = icmp eq ptr %2, null
  br i1 %16, label %31, label %21

17:                                               ; preds = %21
  %18 = getelementptr inbounds %struct.tree_common, ptr %22, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !16
  %20 = icmp eq ptr %19, null
  br i1 %20, label %26, label %21, !llvm.loop !195

21:                                               ; preds = %15, %17
  %22 = phi ptr [ %19, %17 ], [ %2, %15 ]
  %23 = getelementptr inbounds %struct.tree_decl_minimal, ptr %22, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !16
  %25 = icmp eq ptr %24, null
  br i1 %25, label %17, label %42

26:                                               ; preds = %17
  %27 = load ptr, ptr %6, align 8, !tbaa !5
  %28 = load i64, ptr %27, align 8
  %29 = and i64 %28, 65535
  %30 = icmp eq i64 %29, 17
  br i1 %30, label %36, label %37

31:                                               ; preds = %15
  %32 = load ptr, ptr %6, align 8, !tbaa !5
  %33 = load i64, ptr %32, align 8
  %34 = and i64 %33, 65535
  %35 = icmp eq i64 %34, 17
  br i1 %35, label %232, label %38

36:                                               ; preds = %26
  br i1 %16, label %232, label %39

37:                                               ; preds = %26
  br i1 %16, label %38, label %39

38:                                               ; preds = %31, %37
  br label %232

39:                                               ; preds = %37, %36
  %40 = phi ptr [ @.str.94, %36 ], [ @.str.96, %37 ]
  %41 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef 834, ptr noundef nonnull %40) #24
  br label %44

42:                                               ; preds = %21, %5
  %43 = icmp eq ptr %2, null
  br i1 %43, label %235, label %44

44:                                               ; preds = %39, %42
  br label %45

45:                                               ; preds = %44, %170
  %46 = phi ptr [ %173, %170 ], [ %2, %44 ]
  %47 = phi i32 [ %171, %170 ], [ 0, %44 ]
  %48 = getelementptr inbounds %struct.tree_common, ptr %46, i64 0, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !16
  %50 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %51 = icmp eq ptr %49, %50
  br i1 %51, label %170, label %52

52:                                               ; preds = %45
  %53 = load ptr, ptr %6, align 8, !tbaa !5
  %54 = getelementptr inbounds %struct.tree_decl_minimal, ptr %46, i64 0, i32 4
  store ptr %53, ptr %54, align 8, !tbaa !16
  %55 = load i64, ptr %46, align 8
  %56 = and i64 %55, 1048576
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %68

58:                                               ; preds = %52, %62
  %59 = phi ptr [ %64, %62 ], [ %49, %52 ]
  %60 = load i64, ptr %59, align 8
  %61 = trunc i64 %60 to i16
  switch i16 %61, label %71 [
    i16 15, label %62
    i16 16, label %65
    i16 17, label %65
  ]

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.tree_common, ptr %59, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !16
  br label %58, !llvm.loop !196

65:                                               ; preds = %58, %58
  %66 = and i64 %60, 17179869184
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %65, %52
  %69 = load i64, ptr %53, align 8
  %70 = or i64 %69, 17179869184
  store i64 %70, ptr %53, align 8
  br label %71

71:                                               ; preds = %58, %68, %65
  %72 = load i64, ptr %46, align 8
  %73 = and i64 %72, 524288
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %71
  %76 = load ptr, ptr %6, align 8, !tbaa !5
  %77 = load i64, ptr %76, align 8
  %78 = or i64 %77, 34359738368
  store i64 %78, ptr %76, align 8
  br label %79

79:                                               ; preds = %75, %71
  %80 = getelementptr inbounds %struct.tree_decl_common, ptr %46, i64 0, i32 2
  %81 = load i64, ptr %80, align 8
  %82 = and i64 %81, 32768
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %89, label %84

84:                                               ; preds = %79
  %85 = load ptr, ptr %6, align 8, !tbaa !5
  %86 = getelementptr inbounds %struct.tree_type, ptr %85, i64 0, i32 6
  %87 = load i32, ptr %86, align 4
  %88 = or i32 %87, 67108864
  store i32 %88, ptr %86, align 4
  br label %89

89:                                               ; preds = %84, %79
  %90 = getelementptr inbounds %struct.tree_decl_common, ptr %46, i64 0, i32 5
  %91 = load ptr, ptr %90, align 8, !tbaa !16
  %92 = icmp eq ptr %91, null
  br i1 %92, label %99, label %93

93:                                               ; preds = %89
  %94 = call i64 @tree_low_cst(ptr noundef nonnull %91, i32 noundef 1) #24
  %95 = call ptr @size_int_kind(i64 noundef %94, i32 noundef 2) #24
  %96 = getelementptr inbounds %struct.tree_decl_common, ptr %46, i64 0, i32 1
  store ptr %95, ptr %96, align 8, !tbaa !16
  %97 = load i64, ptr %80, align 8
  %98 = or i64 %97, 34078720
  store i64 %98, ptr %80, align 8
  br label %99

99:                                               ; preds = %93, %89
  %100 = load ptr, ptr %6, align 8, !tbaa !5
  %101 = load i64, ptr %100, align 8
  %102 = and i64 %101, 2199023255552
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %116, label %104

104:                                              ; preds = %99
  %105 = load i64, ptr %80, align 8
  %106 = and i64 %105, 33554432
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %113

108:                                              ; preds = %104
  %109 = load ptr, ptr %48, align 8, !tbaa !16
  %110 = getelementptr inbounds %struct.tree_type, ptr %109, i64 0, i32 7
  %111 = load i32, ptr %110, align 8, !tbaa !16
  %112 = icmp ugt i32 %111, 8
  br i1 %112, label %113, label %116

113:                                              ; preds = %108, %104
  %114 = load i64, ptr %46, align 8
  %115 = or i64 %114, 2199023255552
  store i64 %115, ptr %46, align 8
  br label %116

116:                                              ; preds = %113, %108, %99
  %117 = load ptr, ptr %48, align 8, !tbaa !16
  %118 = load i64, ptr %117, align 8
  %119 = and i64 %118, 65535
  %120 = icmp eq i64 %119, 15
  br i1 %120, label %121, label %149

121:                                              ; preds = %116
  %122 = getelementptr inbounds %struct.tree_type, ptr %117, i64 0, i32 2
  %123 = load ptr, ptr %122, align 8, !tbaa !16
  %124 = icmp eq ptr %123, null
  br i1 %124, label %125, label %149

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.tree_type, ptr %117, i64 0, i32 1
  %127 = load ptr, ptr %126, align 8, !tbaa !16
  %128 = icmp eq ptr %127, null
  br i1 %128, label %149, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %struct.tree_type, ptr %127, i64 0, i32 14
  %131 = load ptr, ptr %130, align 8, !tbaa !16
  %132 = icmp eq ptr %131, null
  br i1 %132, label %133, label %149

133:                                              ; preds = %129
  %134 = load ptr, ptr %6, align 8, !tbaa !5
  %135 = load i64, ptr %134, align 8
  %136 = and i64 %135, 65535
  %137 = icmp eq i64 %136, 17
  br i1 %137, label %144, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %struct.tree_common, ptr %46, i64 0, i32 1
  %140 = load ptr, ptr %139, align 8, !tbaa !16
  %141 = icmp eq ptr %140, null
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = icmp eq i32 %47, 0
  br i1 %143, label %144, label %149

144:                                              ; preds = %142, %138, %133
  %145 = phi ptr [ @.str.98, %133 ], [ @.str.99, %138 ], [ @.str.100, %142 ]
  %146 = getelementptr inbounds %struct.tree_decl_minimal, ptr %46, i64 0, i32 1
  %147 = load i32, ptr %146, align 8, !tbaa !16
  call void (i32, ptr, ...) @error_at(i32 noundef %147, ptr noundef nonnull %145) #24
  %148 = load ptr, ptr @global_trees, align 16, !tbaa !5
  store ptr %148, ptr %48, align 8, !tbaa !16
  br label %149

149:                                              ; preds = %144, %142, %129, %125, %121, %116
  %150 = phi ptr [ %117, %142 ], [ %117, %129 ], [ %117, %125 ], [ %117, %121 ], [ %117, %116 ], [ %148, %144 ]
  %151 = load i32, ptr @pedantic, align 4, !tbaa !20
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %165, label %153

153:                                              ; preds = %149
  %154 = load ptr, ptr %6, align 8, !tbaa !5
  %155 = load i64, ptr %154, align 8
  %156 = and i64 %155, 65535
  %157 = icmp eq i64 %156, 16
  br i1 %157, label %158, label %165

158:                                              ; preds = %153
  %159 = call fastcc zeroext i8 @flexible_array_type_p(ptr noundef %150), !range !91
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %165, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %struct.tree_decl_minimal, ptr %46, i64 0, i32 1
  %163 = load i32, ptr %162, align 8, !tbaa !16
  %164 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %163, i32 noundef 834, ptr noundef nonnull @.str.101) #24
  br label %165

165:                                              ; preds = %161, %158, %153, %149
  %166 = getelementptr inbounds %struct.tree_decl_minimal, ptr %46, i64 0, i32 3
  %167 = load ptr, ptr %166, align 8, !tbaa !16
  %168 = icmp eq ptr %167, null
  %169 = select i1 %168, i32 %47, i32 1
  br label %170

170:                                              ; preds = %165, %45
  %171 = phi i32 [ %47, %45 ], [ %169, %165 ]
  %172 = getelementptr inbounds %struct.tree_common, ptr %46, i64 0, i32 1
  %173 = load ptr, ptr %172, align 8, !tbaa !16
  %174 = icmp eq ptr %173, null
  br i1 %174, label %175, label %45, !llvm.loop !197

175:                                              ; preds = %170
  %176 = getelementptr inbounds %struct.tree_common, ptr %2, i64 0, i32 1
  %177 = load ptr, ptr %176, align 8, !tbaa !16
  %178 = icmp eq ptr %177, null
  br i1 %178, label %240, label %179

179:                                              ; preds = %175, %179
  %180 = phi i32 [ %182, %179 ], [ 10, %175 ]
  %181 = phi ptr [ %184, %179 ], [ %177, %175 ]
  %182 = add nsw i32 %180, -1
  %183 = getelementptr inbounds %struct.tree_common, ptr %181, i64 0, i32 1
  %184 = load ptr, ptr %183, align 8, !tbaa !16
  %185 = icmp ugt i32 %180, 1
  %186 = icmp ne ptr %184, null
  %187 = select i1 %185, i1 %186, i1 false
  br i1 %187, label %179, label %188, !llvm.loop !198

188:                                              ; preds = %179
  br i1 %185, label %189, label %212

189:                                              ; preds = %188, %208
  %190 = phi ptr [ %210, %208 ], [ %177, %188 ]
  %191 = getelementptr inbounds %struct.tree_decl_minimal, ptr %190, i64 0, i32 3
  %192 = load ptr, ptr %191, align 8, !tbaa !16
  %193 = icmp eq ptr %192, null
  %194 = icmp eq ptr %190, %2
  %195 = or i1 %194, %193
  br i1 %195, label %208, label %196

196:                                              ; preds = %189, %203
  %197 = phi ptr [ %204, %203 ], [ %192, %189 ]
  %198 = phi ptr [ %206, %203 ], [ %2, %189 ]
  %199 = getelementptr inbounds %struct.tree_decl_minimal, ptr %198, i64 0, i32 3
  %200 = load ptr, ptr %199, align 8, !tbaa !16
  %201 = icmp eq ptr %200, %197
  br i1 %201, label %202, label %203

202:                                              ; preds = %196
  call void (ptr, ...) @error(ptr noundef nonnull @.str.355, ptr noundef nonnull %190) #24
  store ptr null, ptr %191, align 8, !tbaa !16
  br label %203

203:                                              ; preds = %202, %196
  %204 = phi ptr [ %197, %196 ], [ null, %202 ]
  %205 = getelementptr inbounds %struct.tree_common, ptr %198, i64 0, i32 1
  %206 = load ptr, ptr %205, align 8, !tbaa !16
  %207 = icmp eq ptr %206, %190
  br i1 %207, label %208, label %196, !llvm.loop !199

208:                                              ; preds = %203, %189
  %209 = getelementptr inbounds %struct.tree_common, ptr %190, i64 0, i32 1
  %210 = load ptr, ptr %209, align 8, !tbaa !16
  %211 = icmp eq ptr %210, null
  br i1 %211, label %240, label %189, !llvm.loop !200

212:                                              ; preds = %188
  %213 = load ptr, ptr @htab_hash_pointer, align 8, !tbaa !5
  %214 = load ptr, ptr @htab_eq_pointer, align 8, !tbaa !5
  %215 = call ptr @htab_create(i64 noundef 37, ptr noundef %213, ptr noundef %214, ptr noundef null) #24
  br label %216

216:                                              ; preds = %227, %212
  %217 = phi ptr [ %2, %212 ], [ %229, %227 ]
  %218 = getelementptr inbounds %struct.tree_decl_minimal, ptr %217, i64 0, i32 3
  %219 = load ptr, ptr %218, align 8, !tbaa !16
  %220 = icmp eq ptr %219, null
  br i1 %220, label %227, label %221

221:                                              ; preds = %216
  %222 = call ptr @htab_find_slot(ptr noundef %215, ptr noundef nonnull %219, i32 noundef 1) #24
  %223 = load ptr, ptr %222, align 8, !tbaa !5
  %224 = icmp eq ptr %223, null
  br i1 %224, label %226, label %225

225:                                              ; preds = %221
  call void (ptr, ...) @error(ptr noundef nonnull @.str.355, ptr noundef nonnull %217) #24
  store ptr null, ptr %218, align 8, !tbaa !16
  br label %226

226:                                              ; preds = %225, %221
  store ptr %219, ptr %222, align 8, !tbaa !5
  br label %227

227:                                              ; preds = %226, %216
  %228 = getelementptr inbounds %struct.tree_common, ptr %217, i64 0, i32 1
  %229 = load ptr, ptr %228, align 8, !tbaa !16
  %230 = icmp eq ptr %229, null
  br i1 %230, label %231, label %216, !llvm.loop !201

231:                                              ; preds = %227
  call void @htab_delete(ptr noundef %215) #24
  br label %240

232:                                              ; preds = %36, %31, %38
  %233 = phi ptr [ @.str.97, %38 ], [ @.str.95, %31 ], [ @.str.95, %36 ]
  %234 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef 834, ptr noundef nonnull %233) #24
  br label %235

235:                                              ; preds = %232, %42
  %236 = load ptr, ptr %6, align 8, !tbaa !5
  %237 = getelementptr inbounds %struct.tree_type, ptr %236, i64 0, i32 1
  store ptr %2, ptr %237, align 8, !tbaa !16
  call void @layout_type(ptr noundef %236) #24
  %238 = load ptr, ptr %6, align 8, !tbaa !5
  %239 = getelementptr inbounds %struct.tree_type, ptr %238, i64 0, i32 1
  store ptr %2, ptr %239, align 8, !tbaa !16
  br label %356

240:                                              ; preds = %208, %175, %231
  %241 = load ptr, ptr %6, align 8, !tbaa !5
  %242 = getelementptr inbounds %struct.tree_type, ptr %241, i64 0, i32 1
  store ptr %2, ptr %242, align 8, !tbaa !16
  call void @layout_type(ptr noundef %241) #24
  br label %243

243:                                              ; preds = %240, %305
  %244 = phi ptr [ %307, %305 ], [ %2, %240 ]
  %245 = phi ptr [ %306, %305 ], [ %7, %240 ]
  %246 = load i64, ptr %244, align 8
  %247 = and i64 %246, 65535
  %248 = icmp eq i64 %247, 31
  br i1 %248, label %249, label %303

249:                                              ; preds = %243
  %250 = getelementptr inbounds %struct.tree_decl_common, ptr %244, i64 0, i32 5
  %251 = load ptr, ptr %250, align 8, !tbaa !16
  %252 = icmp eq ptr %251, null
  br i1 %252, label %303, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %struct.tree_common, ptr %244, i64 0, i32 2
  %255 = load ptr, ptr %254, align 8, !tbaa !16
  %256 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %257 = icmp eq ptr %255, %256
  br i1 %257, label %303, label %258

258:                                              ; preds = %253
  %259 = call i64 @tree_low_cst(ptr noundef nonnull %251, i32 noundef 1) #24
  %260 = load ptr, ptr %245, align 8, !tbaa !5
  %261 = getelementptr inbounds %struct.tree_common, ptr %260, i64 0, i32 2
  %262 = load ptr, ptr %261, align 8, !tbaa !16
  %263 = getelementptr inbounds %struct.tree_type, ptr %262, i64 0, i32 6
  %264 = load i32, ptr %263, align 4
  %265 = and i32 %264, 1023
  %266 = zext i32 %265 to i64
  %267 = icmp eq i64 %259, %266
  br i1 %267, label %300, label %268

268:                                              ; preds = %258
  %269 = load i64, ptr %262, align 8
  %270 = trunc i64 %269 to i32
  %271 = lshr i32 %270, 21
  %272 = and i32 %271, 1
  %273 = call ptr @c_build_bitfield_integer_type(i64 noundef %259, i32 noundef %272) #24
  %274 = load ptr, ptr %245, align 8, !tbaa !5
  %275 = getelementptr inbounds %struct.tree_common, ptr %274, i64 0, i32 2
  store ptr %273, ptr %275, align 8, !tbaa !16
  %276 = load ptr, ptr %245, align 8, !tbaa !5
  %277 = getelementptr inbounds %struct.tree_common, ptr %276, i64 0, i32 2
  %278 = load ptr, ptr %277, align 8, !tbaa !16
  %279 = load i64, ptr %278, align 8
  %280 = and i64 %279, 65535
  %281 = icmp eq i64 %280, 14
  br i1 %281, label %282, label %285

282:                                              ; preds = %268
  %283 = call i32 @vector_type_mode(ptr noundef nonnull %278) #24
  %284 = load ptr, ptr %245, align 8, !tbaa !5
  br label %290

285:                                              ; preds = %268
  %286 = getelementptr inbounds %struct.tree_type, ptr %278, i64 0, i32 6
  %287 = load i32, ptr %286, align 4
  %288 = lshr i32 %287, 16
  %289 = and i32 %288, 255
  br label %290

290:                                              ; preds = %285, %282
  %291 = phi ptr [ %284, %282 ], [ %276, %285 ]
  %292 = phi i32 [ %283, %282 ], [ %289, %285 ]
  %293 = getelementptr inbounds %struct.tree_decl_common, ptr %291, i64 0, i32 2
  %294 = load i64, ptr %293, align 8
  %295 = and i32 %292, 255
  %296 = zext i32 %295 to i64
  %297 = and i64 %294, -256
  %298 = or i64 %297, %296
  store i64 %298, ptr %293, align 8
  %299 = load ptr, ptr %245, align 8, !tbaa !5
  br label %300

300:                                              ; preds = %290, %258
  %301 = phi ptr [ %299, %290 ], [ %260, %258 ]
  %302 = getelementptr inbounds %struct.tree_decl_common, ptr %301, i64 0, i32 5
  store ptr null, ptr %302, align 8, !tbaa !16
  br label %305

303:                                              ; preds = %253, %249, %243
  %304 = getelementptr inbounds %struct.tree_common, ptr %244, i64 0, i32 1
  br label %305

305:                                              ; preds = %303, %300
  %306 = phi ptr [ %245, %300 ], [ %304, %303 ]
  %307 = load ptr, ptr %306, align 8, !tbaa !5
  %308 = icmp eq ptr %307, null
  br i1 %308, label %309, label %243, !llvm.loop !202

309:                                              ; preds = %305
  %310 = load ptr, ptr %6, align 8, !tbaa !5
  %311 = getelementptr inbounds %struct.tree_type, ptr %310, i64 0, i32 1
  store ptr %2, ptr %311, align 8, !tbaa !16
  br label %312

312:                                              ; preds = %309, %318
  %313 = phi ptr [ %321, %318 ], [ %2, %309 ]
  %314 = phi i32 [ %319, %318 ], [ 0, %309 ]
  %315 = getelementptr inbounds %struct.tree_decl_minimal, ptr %313, i64 0, i32 3
  %316 = load ptr, ptr %315, align 8, !tbaa !16
  %317 = icmp eq ptr %316, null
  br i1 %317, label %356, label %318

318:                                              ; preds = %312
  %319 = add nuw nsw i32 %314, 1
  %320 = getelementptr inbounds %struct.tree_common, ptr %313, i64 0, i32 1
  %321 = load ptr, ptr %320, align 8, !tbaa !16
  %322 = icmp eq ptr %321, null
  %323 = icmp ugt i32 %314, 14
  %324 = select i1 %322, i1 true, i1 %323
  br i1 %324, label %325, label %312, !llvm.loop !203

325:                                              ; preds = %318
  br i1 %323, label %326, label %356

326:                                              ; preds = %325
  %327 = call i32 @list_length(ptr noundef %321) #24
  %328 = add nsw i32 %327, %319
  %329 = call ptr @ggc_alloc_cleared_stat(i64 noundef 32) #24
  %330 = sext i32 %328 to i64
  %331 = shl nsw i64 %330, 3
  %332 = add nsw i64 %331, 16
  %333 = call ptr @ggc_alloc_stat(i64 noundef %332) #24
  store ptr %333, ptr %329, align 8, !tbaa !204
  %334 = getelementptr inbounds %struct.sorted_fields_type, ptr %333, i64 0, i32 1
  br label %335

335:                                              ; preds = %326, %342
  %336 = phi i64 [ 0, %326 ], [ %343, %342 ]
  %337 = phi ptr [ %2, %326 ], [ %345, %342 ]
  %338 = getelementptr inbounds ptr, ptr %334, i64 %336
  store ptr %337, ptr %338, align 8, !tbaa !5
  %339 = getelementptr inbounds %struct.tree_decl_minimal, ptr %337, i64 0, i32 3
  %340 = load ptr, ptr %339, align 8, !tbaa !16
  %341 = icmp eq ptr %340, null
  br i1 %341, label %356, label %342

342:                                              ; preds = %335
  %343 = add nuw i64 %336, 1
  %344 = getelementptr inbounds %struct.tree_common, ptr %337, i64 0, i32 1
  %345 = load ptr, ptr %344, align 8, !tbaa !16
  %346 = icmp eq ptr %345, null
  br i1 %346, label %347, label %335, !llvm.loop !205

347:                                              ; preds = %342
  %348 = trunc i64 %343 to i32
  %349 = load ptr, ptr %6, align 8, !tbaa !5
  %350 = getelementptr inbounds %struct.tree_type, ptr %349, i64 0, i32 20
  store ptr %329, ptr %350, align 8, !tbaa !16
  %351 = load ptr, ptr %329, align 8, !tbaa !204
  store i32 %348, ptr %351, align 8, !tbaa !206
  %352 = load ptr, ptr %350, align 8, !tbaa !16
  %353 = load ptr, ptr %352, align 8, !tbaa !204
  %354 = getelementptr inbounds %struct.sorted_fields_type, ptr %353, i64 0, i32 1
  %355 = and i64 %343, 4294967295
  call void @spec_qsort(ptr noundef nonnull %354, i64 noundef %355, i64 noundef 8, ptr noundef nonnull @field_decl_cmp) #24
  br label %356

356:                                              ; preds = %312, %335, %235, %347, %325
  %357 = load ptr, ptr %6, align 8, !tbaa !5
  %358 = getelementptr inbounds %struct.tree_type, ptr %357, i64 0, i32 16
  %359 = load ptr, ptr %358, align 8, !tbaa !16
  %360 = icmp eq ptr %359, null
  br i1 %360, label %391, label %361

361:                                              ; preds = %356, %361
  %362 = phi ptr [ %380, %361 ], [ %357, %356 ]
  %363 = phi ptr [ %389, %361 ], [ %359, %356 ]
  %364 = getelementptr inbounds %struct.tree_type, ptr %362, i64 0, i32 1
  %365 = load ptr, ptr %364, align 8, !tbaa !16
  %366 = getelementptr inbounds %struct.tree_type, ptr %363, i64 0, i32 1
  store ptr %365, ptr %366, align 8, !tbaa !16
  %367 = getelementptr inbounds %struct.tree_type, ptr %362, i64 0, i32 20
  %368 = load ptr, ptr %367, align 8, !tbaa !16
  %369 = getelementptr inbounds %struct.tree_type, ptr %363, i64 0, i32 20
  store ptr %368, ptr %369, align 8, !tbaa !16
  %370 = load i64, ptr %362, align 8
  %371 = and i64 %370, 17179869184
  %372 = load i64, ptr %363, align 8
  %373 = and i64 %372, -17179869185
  %374 = or i64 %373, %371
  store i64 %374, ptr %363, align 8
  %375 = load ptr, ptr %6, align 8, !tbaa !5
  %376 = load i64, ptr %375, align 8
  %377 = and i64 %376, 34359738368
  %378 = and i64 %374, -34359738369
  %379 = or i64 %377, %378
  store i64 %379, ptr %363, align 8
  %380 = load ptr, ptr %6, align 8, !tbaa !5
  %381 = getelementptr inbounds %struct.tree_type, ptr %380, i64 0, i32 6
  %382 = load i32, ptr %381, align 4
  %383 = and i32 %382, 67108864
  %384 = getelementptr inbounds %struct.tree_type, ptr %363, i64 0, i32 6
  %385 = load i32, ptr %384, align 4
  %386 = and i32 %385, -67108865
  %387 = or i32 %386, %383
  store i32 %387, ptr %384, align 4
  %388 = getelementptr inbounds %struct.tree_type, ptr %363, i64 0, i32 15
  %389 = load ptr, ptr %388, align 8, !tbaa !16
  %390 = icmp eq ptr %389, null
  br i1 %390, label %391, label %361, !llvm.loop !208

391:                                              ; preds = %361, %356
  %392 = phi ptr [ %357, %356 ], [ %380, %361 ]
  %393 = load i64, ptr %392, align 8
  %394 = and i64 %393, 65535
  %395 = icmp eq i64 %394, 17
  br i1 %395, label %396, label %417

396:                                              ; preds = %391
  %397 = getelementptr inbounds %struct.tree_type, ptr %392, i64 0, i32 6
  %398 = load i32, ptr %397, align 4
  %399 = and i32 %398, 4096
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %417, label %401

401:                                              ; preds = %396
  %402 = getelementptr inbounds %struct.tree_type, ptr %392, i64 0, i32 1
  %403 = load ptr, ptr %402, align 8, !tbaa !16
  %404 = icmp eq ptr %403, null
  br i1 %404, label %413, label %405

405:                                              ; preds = %401
  %406 = lshr i32 %398, 16
  %407 = getelementptr inbounds %struct.tree_decl_common, ptr %403, i64 0, i32 2
  %408 = load i64, ptr %407, align 8
  %409 = trunc i64 %408 to i32
  %410 = xor i32 %406, %409
  %411 = and i32 %410, 255
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %417, label %413

413:                                              ; preds = %405, %401
  %414 = and i32 %398, -4097
  store i32 %414, ptr %397, align 4
  %415 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 0, ptr noundef nonnull @.str.102) #24
  %416 = load ptr, ptr %6, align 8, !tbaa !5
  br label %417

417:                                              ; preds = %413, %405, %396, %391
  %418 = phi ptr [ %416, %413 ], [ %392, %405 ], [ %392, %396 ], [ %392, %391 ]
  %419 = getelementptr inbounds %struct.tree_type, ptr %418, i64 0, i32 16
  %420 = load ptr, ptr %419, align 8, !tbaa !16
  %421 = getelementptr inbounds %struct.tree_type, ptr %420, i64 0, i32 13
  %422 = load ptr, ptr %421, align 8, !tbaa !16
  %423 = icmp eq ptr %422, null
  br i1 %423, label %455, label %424

424:                                              ; preds = %417
  %425 = zext i1 %10 to i32
  br label %426

426:                                              ; preds = %424, %447
  %427 = phi ptr [ %422, %424 ], [ %449, %447 ]
  %428 = getelementptr inbounds %struct.tree_list, ptr %427, i64 0, i32 2
  %429 = load ptr, ptr %428, align 8, !tbaa !16
  %430 = getelementptr inbounds %struct.tree_common, ptr %429, i64 0, i32 2
  %431 = load ptr, ptr %430, align 8, !tbaa !16
  %432 = load i64, ptr %431, align 8
  %433 = and i64 %432, 65535
  %434 = icmp eq i64 %433, 15
  br i1 %434, label %435, label %436

435:                                              ; preds = %426
  call fastcc void @layout_array_type(ptr noundef nonnull %431)
  br label %436

436:                                              ; preds = %435, %426
  %437 = load i64, ptr %429, align 8
  %438 = and i64 %437, 65535
  %439 = icmp eq i64 %438, 35
  br i1 %439, label %447, label %440

440:                                              ; preds = %436
  call void @layout_decl(ptr noundef nonnull %429, i32 noundef 0) #24
  %441 = load i32, ptr @c_language, align 4, !tbaa !16
  %442 = and i32 %441, 1
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %445, label %444

444:                                              ; preds = %440
  call void @objc_check_decl(ptr noundef nonnull %429) #24
  br label %445

445:                                              ; preds = %444, %440
  call void @rest_of_decl_compilation(ptr noundef nonnull %429, i32 noundef %425, i32 noundef 0) #24
  br i1 %10, label %447, label %446

446:                                              ; preds = %445
  call void @expand_decl(ptr noundef nonnull %429) #24
  br label %447

447:                                              ; preds = %445, %446, %436
  %448 = getelementptr inbounds %struct.tree_common, ptr %427, i64 0, i32 1
  %449 = load ptr, ptr %448, align 8, !tbaa !16
  %450 = icmp eq ptr %449, null
  br i1 %450, label %451, label %426, !llvm.loop !209

451:                                              ; preds = %447
  %452 = load ptr, ptr %6, align 8, !tbaa !5
  %453 = getelementptr inbounds %struct.tree_type, ptr %452, i64 0, i32 16
  %454 = load ptr, ptr %453, align 8, !tbaa !16
  br label %455

455:                                              ; preds = %451, %417
  %456 = phi ptr [ %454, %451 ], [ %420, %417 ]
  %457 = phi ptr [ %452, %451 ], [ %418, %417 ]
  %458 = getelementptr inbounds %struct.tree_type, ptr %456, i64 0, i32 13
  store ptr null, ptr %458, align 8, !tbaa !16
  %459 = getelementptr inbounds %struct.tree_common, ptr %457, i64 0, i32 1
  %460 = load ptr, ptr %459, align 8, !tbaa !16
  %461 = icmp eq ptr %460, null
  br i1 %461, label %464, label %462

462:                                              ; preds = %455
  %463 = getelementptr inbounds %struct.tree_decl_minimal, ptr %460, i64 0, i32 1
  store i32 %0, ptr %463, align 8, !tbaa !16
  br label %464

464:                                              ; preds = %462, %455
  %465 = zext i1 %10 to i32
  call void @rest_of_type_compilation(ptr noundef nonnull %457, i32 noundef %465) #24
  %466 = load ptr, ptr @c_stmt_tree, align 8, !tbaa !23
  %467 = icmp eq ptr %466, null
  br i1 %467, label %498, label %468

468:                                              ; preds = %464
  %469 = load ptr, ptr %6, align 8, !tbaa !5
  %470 = call zeroext i8 @variably_modified_type_p(ptr noundef %469, ptr noundef null) #24
  %471 = icmp eq i8 %470, 0
  br i1 %471, label %498, label %472

472:                                              ; preds = %468
  %473 = load ptr, ptr %6, align 8, !tbaa !5
  %474 = call ptr @build_decl_stat(i32 noundef %0, i32 noundef 35, ptr noundef null, ptr noundef %473) #24
  %475 = call ptr (i32, i32, ...) @build_stmt(i32 noundef %0, i32 noundef 132, ptr noundef %474) #24
  %476 = load i64, ptr %475, align 8
  %477 = and i64 %476, 65535
  %478 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %477
  %479 = load i32, ptr %478, align 4, !tbaa !16
  %480 = icmp ugt i32 %479, 3
  br i1 %480, label %481, label %491

481:                                              ; preds = %472
  %482 = icmp ult i32 %479, 11
  %483 = icmp ne i64 %477, 133
  %484 = and i1 %482, %483
  br i1 %484, label %485, label %491

485:                                              ; preds = %481
  %486 = getelementptr inbounds %struct.tree_exp, ptr %475, i64 0, i32 1
  %487 = load i32, ptr %486, align 8, !tbaa !16
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %491

489:                                              ; preds = %485
  %490 = load i32, ptr @input_location, align 4, !tbaa !20
  store i32 %490, ptr %486, align 8, !tbaa !16
  br label %491

491:                                              ; preds = %489, %485, %481, %472
  %492 = trunc i64 %476 to i16
  switch i16 %492, label %497 [
    i16 139, label %493
    i16 133, label %493
  ]

493:                                              ; preds = %491, %491
  %494 = load ptr, ptr @c_stmt_tree, align 8, !tbaa !23
  %495 = load i64, ptr %494, align 8
  %496 = or i64 %495, 68719476736
  store i64 %496, ptr %494, align 8
  br label %497

497:                                              ; preds = %491, %493
  call void @append_to_statement_list_force(ptr noundef nonnull %475, ptr noundef nonnull @c_stmt_tree) #24
  br label %498

498:                                              ; preds = %497, %468, %464
  %499 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %500 = icmp eq i32 %499, 0
  %501 = load ptr, ptr @struct_parse_info, align 8, !tbaa !5
  br i1 %500, label %589, label %502

502:                                              ; preds = %498
  %503 = load ptr, ptr %501, align 8, !tbaa !188
  %504 = icmp eq ptr %503, null
  br i1 %504, label %520, label %505

505:                                              ; preds = %502, %511
  %506 = phi i64 [ %517, %511 ], [ 0, %502 ]
  %507 = phi ptr [ %518, %511 ], [ %503, %502 ]
  %508 = load i32, ptr %507, align 8, !tbaa !68
  %509 = zext i32 %508 to i64
  %510 = icmp ult i64 %506, %509
  br i1 %510, label %511, label %520

511:                                              ; preds = %505
  %512 = getelementptr inbounds %struct.VEC_tree_base, ptr %507, i64 0, i32 2, i64 %506
  %513 = load ptr, ptr %512, align 8, !tbaa !5
  %514 = getelementptr inbounds %struct.tree_type, ptr %513, i64 0, i32 6
  %515 = load i32, ptr %514, align 4
  %516 = or i32 %515, 134217728
  store i32 %516, ptr %514, align 4
  %517 = add nuw nsw i64 %506, 1
  %518 = load ptr, ptr %501, align 8, !tbaa !188
  %519 = icmp eq ptr %518, null
  br i1 %519, label %520, label %505, !llvm.loop !210

520:                                              ; preds = %511, %505, %502
  %521 = getelementptr inbounds %struct.c_struct_parse_info, ptr %501, i64 0, i32 2
  %522 = load ptr, ptr %521, align 8, !tbaa !191
  %523 = icmp eq ptr %522, null
  br i1 %523, label %569, label %524

524:                                              ; preds = %520
  %525 = load i32, ptr %522, align 8, !tbaa !68
  %526 = icmp ne i32 %525, 0
  %527 = icmp ne ptr %2, null
  %528 = and i1 %527, %526
  br i1 %528, label %529, label %569

529:                                              ; preds = %524
  %530 = call ptr @pointer_set_create() #24
  %531 = load ptr, ptr @struct_parse_info, align 8, !tbaa !5
  %532 = getelementptr inbounds %struct.c_struct_parse_info, ptr %531, i64 0, i32 2
  %533 = load ptr, ptr %532, align 8, !tbaa !191
  %534 = icmp eq ptr %533, null
  br i1 %534, label %552, label %535

535:                                              ; preds = %529, %541
  %536 = phi i64 [ %547, %541 ], [ 0, %529 ]
  %537 = phi ptr [ %550, %541 ], [ %533, %529 ]
  %538 = load i32, ptr %537, align 8, !tbaa !68
  %539 = zext i32 %538 to i64
  %540 = icmp ult i64 %536, %539
  br i1 %540, label %541, label %552

541:                                              ; preds = %535
  %542 = getelementptr inbounds %struct.VEC_tree_base, ptr %537, i64 0, i32 2, i64 %536
  %543 = load ptr, ptr %542, align 8, !tbaa !5
  %544 = getelementptr inbounds %struct.tree_decl_minimal, ptr %543, i64 0, i32 3
  %545 = load ptr, ptr %544, align 8, !tbaa !16
  %546 = call i32 @pointer_set_insert(ptr noundef %530, ptr noundef %545) #24
  %547 = add nuw nsw i64 %536, 1
  %548 = load ptr, ptr @struct_parse_info, align 8, !tbaa !5
  %549 = getelementptr inbounds %struct.c_struct_parse_info, ptr %548, i64 0, i32 2
  %550 = load ptr, ptr %549, align 8, !tbaa !191
  %551 = icmp eq ptr %550, null
  br i1 %551, label %552, label %535, !llvm.loop !211

552:                                              ; preds = %541, %535, %529
  br label %553

553:                                              ; preds = %552, %563
  %554 = phi ptr [ %565, %563 ], [ %2, %552 ]
  %555 = getelementptr inbounds %struct.tree_decl_minimal, ptr %554, i64 0, i32 3
  %556 = load ptr, ptr %555, align 8, !tbaa !16
  %557 = call i32 @pointer_set_contains(ptr noundef %530, ptr noundef %556) #24
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %563, label %559

559:                                              ; preds = %553
  %560 = getelementptr inbounds %struct.tree_decl_minimal, ptr %554, i64 0, i32 1
  %561 = load i32, ptr %560, align 8, !tbaa !16
  %562 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %561, i32 noundef 49, ptr noundef nonnull @.str.356, ptr noundef nonnull %554) #24
  br label %563

563:                                              ; preds = %559, %553
  %564 = getelementptr inbounds %struct.tree_common, ptr %554, i64 0, i32 1
  %565 = load ptr, ptr %564, align 8, !tbaa !16
  %566 = icmp eq ptr %565, null
  br i1 %566, label %567, label %553, !llvm.loop !212

567:                                              ; preds = %563
  call void @pointer_set_destroy(ptr noundef %530) #24
  %568 = load ptr, ptr @struct_parse_info, align 8, !tbaa !5
  br label %569

569:                                              ; preds = %567, %524, %520
  %570 = phi ptr [ %501, %520 ], [ %568, %567 ], [ %501, %524 ]
  %571 = getelementptr inbounds %struct.c_struct_parse_info, ptr %570, i64 0, i32 1
  %572 = load ptr, ptr %571, align 8, !tbaa !190
  %573 = icmp eq ptr %572, null
  br i1 %573, label %589, label %574

574:                                              ; preds = %569, %580
  %575 = phi i64 [ %586, %580 ], [ 0, %569 ]
  %576 = phi ptr [ %587, %580 ], [ %572, %569 ]
  %577 = load i32, ptr %576, align 8, !tbaa !194
  %578 = zext i32 %577 to i64
  %579 = icmp ult i64 %575, %578
  br i1 %579, label %580, label %589

580:                                              ; preds = %574
  %581 = getelementptr inbounds %struct.VEC_c_binding_ptr_base, ptr %576, i64 0, i32 2, i64 %575
  %582 = load ptr, ptr %581, align 8, !tbaa !5
  %583 = getelementptr inbounds %struct.c_binding, ptr %582, i64 0, i32 5
  %584 = load i32, ptr %583, align 8
  %585 = and i32 %584, 2147483647
  store i32 %585, ptr %583, align 8
  %586 = add nuw nsw i64 %575, 1
  %587 = load ptr, ptr %571, align 8, !tbaa !190
  %588 = icmp eq ptr %587, null
  br i1 %588, label %589, label %574, !llvm.loop !213

589:                                              ; preds = %580, %574, %569, %498
  %590 = phi ptr [ %570, %569 ], [ %501, %498 ], [ %570, %574 ], [ %570, %580 ]
  %591 = load ptr, ptr %590, align 8, !tbaa !5
  %592 = icmp eq ptr %591, null
  br i1 %592, label %594, label %593

593:                                              ; preds = %589
  call void @free(ptr noundef nonnull %591)
  br label %594

594:                                              ; preds = %589, %593
  store ptr null, ptr %590, align 8, !tbaa !5
  %595 = getelementptr inbounds %struct.c_struct_parse_info, ptr %590, i64 0, i32 1
  %596 = load ptr, ptr %595, align 8, !tbaa !5
  %597 = icmp eq ptr %596, null
  br i1 %597, label %599, label %598

598:                                              ; preds = %594
  call void @free(ptr noundef nonnull %596)
  br label %599

599:                                              ; preds = %594, %598
  store ptr null, ptr %595, align 8, !tbaa !5
  %600 = getelementptr inbounds %struct.c_struct_parse_info, ptr %590, i64 0, i32 2
  %601 = load ptr, ptr %600, align 8, !tbaa !5
  %602 = icmp eq ptr %601, null
  br i1 %602, label %604, label %603

603:                                              ; preds = %599
  call void @free(ptr noundef nonnull %601)
  br label %604

604:                                              ; preds = %599, %603
  call void @free(ptr noundef nonnull %590)
  store ptr %4, ptr @struct_parse_info, align 8, !tbaa !5
  %605 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %606 = icmp eq i32 %605, 0
  %607 = icmp eq ptr %4, null
  %608 = or i1 %607, %606
  %609 = load i32, ptr @in_sizeof, align 4
  %610 = icmp ne i32 %609, 0
  %611 = select i1 %608, i1 true, i1 %610
  %612 = load i32, ptr @in_typeof, align 4
  %613 = icmp ne i32 %612, 0
  %614 = select i1 %611, i1 true, i1 %613
  %615 = load i32, ptr @in_alignof, align 4
  %616 = icmp ne i32 %615, 0
  %617 = select i1 %614, i1 true, i1 %616
  br i1 %617, label %636, label %618

618:                                              ; preds = %604
  %619 = load ptr, ptr %6, align 8, !tbaa !5
  %620 = load ptr, ptr %4, align 8, !tbaa !5
  %621 = icmp eq ptr %620, null
  br i1 %621, label %627, label %622

622:                                              ; preds = %618
  %623 = getelementptr inbounds %struct.VEC_tree_base, ptr %620, i64 0, i32 1
  %624 = load i32, ptr %623, align 4, !tbaa !66
  %625 = load i32, ptr %620, align 8, !tbaa !68
  %626 = icmp eq i32 %624, %625
  br i1 %626, label %627, label %630

627:                                              ; preds = %622, %618
  %628 = call ptr @vec_heap_p_reserve(ptr noundef %620, i32 noundef 1) #24
  store ptr %628, ptr %4, align 8, !tbaa !5
  %629 = load i32, ptr %628, align 8, !tbaa !68
  br label %630

630:                                              ; preds = %622, %627
  %631 = phi i32 [ %625, %622 ], [ %629, %627 ]
  %632 = phi ptr [ %620, %622 ], [ %628, %627 ]
  %633 = add i32 %631, 1
  store i32 %633, ptr %632, align 8, !tbaa !68
  %634 = zext i32 %631 to i64
  %635 = getelementptr inbounds %struct.VEC_tree_base, ptr %632, i64 0, i32 2, i64 %634
  store ptr %619, ptr %635, align 8, !tbaa !5
  br label %636

636:                                              ; preds = %630, %604
  %637 = load ptr, ptr %6, align 8, !tbaa !5
  ret ptr %637
}

declare i64 @tree_low_cst(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @size_int_kind(i64 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nofree nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define internal fastcc zeroext i8 @flexible_array_type_p(ptr nocapture noundef readonly %0) unnamed_addr #19 {
  %2 = load i64, ptr %0, align 8
  %3 = trunc i64 %2 to i16
  switch i16 %3, label %46 [
    i16 16, label %4
    i16 17, label %32
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !16
  %7 = icmp eq ptr %6, null
  br i1 %7, label %46, label %8

8:                                                ; preds = %4, %8
  %9 = phi ptr [ %11, %8 ], [ %6, %4 ]
  %10 = getelementptr inbounds %struct.tree_common, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !16
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %8, !llvm.loop !214

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.tree_common, ptr %9, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !16
  %16 = load i64, ptr %15, align 8
  %17 = and i64 %16, 65535
  %18 = icmp eq i64 %17, 15
  br i1 %18, label %19, label %31

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !16
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.tree_type, ptr %15, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !16
  %26 = icmp eq ptr %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tree_type, ptr %25, i64 0, i32 14
  %29 = load ptr, ptr %28, align 8, !tbaa !16
  %30 = icmp eq ptr %29, null
  br i1 %30, label %46, label %31

31:                                               ; preds = %27, %23, %19, %13
  br label %46

32:                                               ; preds = %1
  %33 = getelementptr inbounds %struct.tree_type, ptr %0, i64 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !16
  %35 = icmp eq ptr %34, null
  br i1 %35, label %46, label %40

36:                                               ; preds = %40
  %37 = getelementptr inbounds %struct.tree_common, ptr %41, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !16
  %39 = icmp eq ptr %38, null
  br i1 %39, label %46, label %40, !llvm.loop !215

40:                                               ; preds = %32, %36
  %41 = phi ptr [ %38, %36 ], [ %34, %32 ]
  %42 = getelementptr inbounds %struct.tree_common, ptr %41, i64 0, i32 2
  %43 = load ptr, ptr %42, align 8, !tbaa !16
  %44 = tail call fastcc zeroext i8 @flexible_array_type_p(ptr noundef %43), !range !91
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %36, label %46

46:                                               ; preds = %40, %36, %32, %1, %27, %4, %31
  %47 = phi i8 [ 0, %31 ], [ 0, %4 ], [ 1, %27 ], [ 0, %1 ], [ 0, %32 ], [ 1, %40 ], [ 0, %36 ]
  ret i8 %47
}

declare void @layout_type(ptr noundef) local_unnamed_addr #3

declare ptr @c_build_bitfield_integer_type(i64 noundef, i32 noundef) local_unnamed_addr #3

declare i32 @list_length(ptr noundef) local_unnamed_addr #3

declare void @spec_qsort(ptr noundef, i64 noundef, i64 noundef, ptr noundef) local_unnamed_addr #3

declare i32 @field_decl_cmp(ptr noundef, ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @layout_array_type(ptr noundef %0) unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.tree_common, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !16
  %4 = load i64, ptr %3, align 8
  %5 = and i64 %4, 65535
  %6 = icmp eq i64 %5, 15
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  tail call fastcc void @layout_array_type(ptr noundef nonnull %3)
  br label %8

8:                                                ; preds = %7, %1
  tail call void @layout_type(ptr noundef nonnull %0) #24
  ret void
}

declare void @expand_decl(ptr noundef) local_unnamed_addr #3

declare void @rest_of_type_compilation(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind sspstrong uwtable
define internal fastcc void @VEC_tree_heap_safe_push(ptr nocapture noundef %0, ptr noundef %1) unnamed_addr #2 {
  %3 = load ptr, ptr %0, align 8, !tbaa !5
  %4 = icmp eq ptr %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.VEC_tree_base, ptr %3, i64 0, i32 1
  %7 = load i32, ptr %6, align 4, !tbaa !66
  %8 = load i32, ptr %3, align 8, !tbaa !68
  %9 = icmp eq i32 %7, %8
  br i1 %9, label %10, label %13

10:                                               ; preds = %5, %2
  %11 = tail call ptr @vec_heap_p_reserve(ptr noundef %3, i32 noundef 1) #24
  store ptr %11, ptr %0, align 8, !tbaa !5
  %12 = load i32, ptr %11, align 8, !tbaa !68
  br label %13

13:                                               ; preds = %5, %10
  %14 = phi i32 [ %8, %5 ], [ %12, %10 ]
  %15 = phi ptr [ %3, %5 ], [ %11, %10 ]
  %16 = add i32 %14, 1
  store i32 %16, ptr %15, align 8, !tbaa !68
  %17 = zext i32 %14 to i64
  %18 = getelementptr inbounds %struct.VEC_tree_base, ptr %15, i64 0, i32 2, i64 %17
  store ptr %1, ptr %18, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @start_enum(i32 noundef %0, ptr nocapture noundef writeonly %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = icmp eq ptr %2, null
  br i1 %4, label %51, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.lang_identifier, ptr %2, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !34
  %8 = icmp eq ptr %7, null
  br i1 %8, label %51, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.c_binding, ptr %7, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !32
  %12 = icmp eq ptr %11, null
  br i1 %12, label %51, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.c_binding, ptr %7, i64 0, i32 5
  %15 = load i32, ptr %14, align 8
  %16 = and i32 %15, 268435455
  %17 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %18 = getelementptr inbounds %struct.c_scope, ptr %17, i64 0, i32 5
  %19 = load i64, ptr %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = and i32 %20, 268435455
  %22 = icmp eq i32 %16, %21
  br i1 %22, label %32, label %23

23:                                               ; preds = %13
  %24 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %25 = icmp eq ptr %17, %24
  %26 = icmp eq i32 %16, 0
  %27 = and i1 %26, %25
  br i1 %27, label %28, label %51

28:                                               ; preds = %23
  %29 = load i64, ptr %11, align 8
  %30 = and i64 %29, 65535
  %31 = icmp eq i64 %30, 6
  br i1 %31, label %36, label %39

32:                                               ; preds = %13
  %33 = load i64, ptr %11, align 8
  %34 = and i64 %33, 65535
  %35 = icmp eq i64 %34, 6
  br i1 %35, label %36, label %39

36:                                               ; preds = %28, %32
  %37 = getelementptr inbounds %struct.c_binding, ptr %7, i64 0, i32 6
  %38 = load i32, ptr %37, align 4, !tbaa !59
  br label %45

39:                                               ; preds = %32, %28
  store ptr %2, ptr @pending_invalid_xref, align 8, !tbaa !5
  %40 = load i32, ptr @input_location, align 4, !tbaa !20
  store i32 %40, ptr @pending_invalid_xref_location, align 4, !tbaa !20
  tail call void (i32, ptr, ...) @error_at(i32 noundef %40, ptr noundef nonnull @.str.30, ptr noundef nonnull %2) #24
  store ptr null, ptr @pending_invalid_xref, align 8, !tbaa !5
  %41 = load ptr, ptr %10, align 8, !tbaa !32
  %42 = getelementptr inbounds %struct.c_binding, ptr %7, i64 0, i32 6
  %43 = load i32, ptr %42, align 4, !tbaa !59
  %44 = icmp eq ptr %41, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %36, %39
  %46 = phi i32 [ %38, %36 ], [ %43, %39 ]
  %47 = phi ptr [ %11, %36 ], [ %41, %39 ]
  %48 = load i64, ptr %47, align 8
  %49 = and i64 %48, 65535
  %50 = icmp eq i64 %49, 6
  br i1 %50, label %54, label %51

51:                                               ; preds = %23, %5, %9, %3, %45, %39
  %52 = phi i32 [ %46, %45 ], [ %43, %39 ], [ 0, %3 ], [ 0, %9 ], [ 0, %5 ], [ 0, %23 ]
  %53 = tail call ptr @make_node_stat(i32 noundef 6) #24
  tail call fastcc void @pushtag(i32 noundef %0, ptr noundef %2, ptr noundef %53)
  br label %54

54:                                               ; preds = %51, %45
  %55 = phi i32 [ %52, %51 ], [ %46, %45 ]
  %56 = phi ptr [ %53, %51 ], [ %47, %45 ]
  %57 = getelementptr inbounds %struct.tree_type, ptr %56, i64 0, i32 6
  %58 = load i32, ptr %57, align 4
  %59 = and i32 %58, 33554432
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %54
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.103, ptr noundef %2) #24
  %62 = load i32, ptr %57, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %58, %54 ]
  %65 = or i32 %64, 33554432
  store i32 %65, ptr %57, align 4
  %66 = getelementptr inbounds %struct.tree_type, ptr %56, i64 0, i32 1
  %67 = load ptr, ptr %66, align 8, !tbaa !16
  %68 = icmp eq ptr %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %63
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.104, ptr noundef %2) #24
  %70 = icmp eq i32 %55, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %69
  tail call void (i32, ptr, ...) @inform(i32 noundef %55, ptr noundef nonnull @.str.85) #24
  br label %72

72:                                               ; preds = %71, %69
  store ptr null, ptr %66, align 8, !tbaa !16
  br label %73

73:                                               ; preds = %72, %63
  %74 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 13), align 8, !tbaa !5
  store ptr %74, ptr %1, align 8, !tbaa !216
  %75 = getelementptr inbounds %struct.c_enum_contents, ptr %1, i64 0, i32 1
  store i32 0, ptr %75, align 8, !tbaa !218
  %76 = load i32, ptr @flag_short_enums, align 4, !tbaa !20
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %73
  %79 = load i64, ptr %56, align 8
  %80 = or i64 %79, 2199023255552
  store i64 %80, ptr %56, align 8
  br label %81

81:                                               ; preds = %78, %73
  %82 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %97, label %84

84:                                               ; preds = %81
  %85 = load i32, ptr @in_sizeof, align 4, !tbaa !20
  %86 = icmp ne i32 %85, 0
  %87 = load i32, ptr @in_typeof, align 4
  %88 = icmp ne i32 %87, 0
  %89 = select i1 %86, i1 true, i1 %88
  %90 = load i32, ptr @in_alignof, align 4
  %91 = icmp ne i32 %90, 0
  %92 = select i1 %89, i1 true, i1 %91
  br i1 %92, label %93, label %97

93:                                               ; preds = %84
  %94 = select i1 %88, ptr @.str.90, ptr @.str.91
  %95 = select i1 %86, ptr @.str.89, ptr %94
  %96 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 49, ptr noundef nonnull @.str.88, ptr noundef nonnull %95) #24
  br label %97

97:                                               ; preds = %84, %93, %81
  ret ptr %56
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @finish_enum(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8, !tbaa !5
  %5 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %6 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %7 = icmp eq ptr %5, %6
  %8 = call ptr @decl_attributes(ptr noundef nonnull %4, ptr noundef %2, i32 noundef 8) #24
  %9 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %10 = icmp eq ptr %9, %1
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 13), align 8, !tbaa !5
  br label %34

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.tree_list, ptr %1, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !16
  %16 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !16
  %18 = icmp eq ptr %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %13, %19
  %20 = phi ptr [ %32, %19 ], [ %17, %13 ]
  %21 = phi ptr [ %30, %19 ], [ %15, %13 ]
  %22 = phi ptr [ %27, %19 ], [ %15, %13 ]
  %23 = getelementptr inbounds %struct.tree_list, ptr %20, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !16
  %25 = call i32 @tree_int_cst_lt(ptr noundef %22, ptr noundef %24) #24
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %26, ptr %22, ptr %24
  %28 = call i32 @tree_int_cst_lt(ptr noundef %24, ptr noundef %21) #24
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %29, ptr %21, ptr %24
  %31 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !16
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %19, !llvm.loop !219

34:                                               ; preds = %19, %13, %11
  %35 = phi ptr [ %12, %11 ], [ %15, %13 ], [ %27, %19 ]
  %36 = phi ptr [ %12, %11 ], [ %15, %13 ], [ %30, %19 ]
  %37 = call i32 @tree_int_cst_sgn(ptr noundef %36) #24
  %38 = icmp sgt i32 %37, -1
  %39 = zext i1 %38 to i32
  %40 = zext i1 %38 to i8
  %41 = call i32 @tree_int_cst_min_precision(ptr noundef %36, i8 noundef zeroext %40) #24
  %42 = call i32 @tree_int_cst_min_precision(ptr noundef %35, i8 noundef zeroext %40) #24
  %43 = icmp ugt i32 %41, %42
  %44 = select i1 %43, ptr %36, ptr %35
  %45 = call i32 @tree_int_cst_min_precision(ptr noundef %44, i8 noundef zeroext %40) #24
  %46 = load ptr, ptr %4, align 8, !tbaa !5
  %47 = load i64, ptr %46, align 8
  %48 = and i64 %47, 2199023255552
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %34
  %51 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %52 = getelementptr inbounds %struct.tree_type, ptr %51, i64 0, i32 6
  %53 = load i32, ptr %52, align 4
  %54 = and i32 %53, 1023
  %55 = icmp sgt i32 %45, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %50, %34
  %57 = call ptr @c_common_type_for_size(i32 noundef %45, i32 noundef %39) #24
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %65

59:                                               ; preds = %56
  %60 = call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 0, ptr noundef nonnull @.str.105) #24
  %61 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), align 8, !tbaa !5
  br label %65

62:                                               ; preds = %50
  %63 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), align 16
  %64 = select i1 %38, ptr %63, ptr %51
  br label %65

65:                                               ; preds = %56, %59, %62
  %66 = phi ptr [ %61, %59 ], [ %57, %56 ], [ %64, %62 ]
  %67 = getelementptr inbounds %struct.tree_type, ptr %66, i64 0, i32 13
  %68 = load ptr, ptr %67, align 8, !tbaa !16
  %69 = load ptr, ptr %4, align 8, !tbaa !5
  %70 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 13
  store ptr %68, ptr %70, align 8, !tbaa !16
  %71 = getelementptr inbounds %struct.tree_type, ptr %66, i64 0, i32 14
  %72 = load ptr, ptr %71, align 8, !tbaa !16
  %73 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 14
  store ptr %72, ptr %73, align 8, !tbaa !16
  %74 = load i64, ptr %66, align 8
  %75 = and i64 %74, 2097152
  %76 = load i64, ptr %69, align 8
  %77 = and i64 %76, -2097153
  %78 = or i64 %77, %75
  store i64 %78, ptr %69, align 8
  %79 = load ptr, ptr %4, align 8, !tbaa !5
  %80 = getelementptr inbounds %struct.tree_type, ptr %79, i64 0, i32 2
  store ptr null, ptr %80, align 8, !tbaa !16
  %81 = getelementptr inbounds %struct.tree_type, ptr %79, i64 0, i32 6
  %82 = load i32, ptr %81, align 4
  %83 = and i32 %82, 1023
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %65
  %86 = icmp sgt i32 %45, %83
  br i1 %86, label %87, label %95

87:                                               ; preds = %85
  call void (ptr, ...) @error(ptr noundef nonnull @.str.106) #24
  %88 = load ptr, ptr %4, align 8, !tbaa !5
  br label %95

89:                                               ; preds = %65
  %90 = getelementptr inbounds %struct.tree_type, ptr %66, i64 0, i32 6
  %91 = load i32, ptr %90, align 4
  %92 = and i32 %91, 1023
  %93 = and i32 %82, -1024
  %94 = or i32 %92, %93
  store i32 %94, ptr %81, align 4
  br label %95

95:                                               ; preds = %85, %87, %89
  %96 = phi ptr [ %79, %85 ], [ %88, %87 ], [ %79, %89 ]
  call void @layout_type(ptr noundef %96) #24
  %97 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %98 = icmp eq ptr %97, %1
  br i1 %98, label %126, label %99

99:                                               ; preds = %95
  %100 = icmp eq ptr %1, null
  br i1 %100, label %123, label %101

101:                                              ; preds = %99, %115
  %102 = phi ptr [ %121, %115 ], [ %1, %99 ]
  %103 = getelementptr inbounds %struct.tree_list, ptr %102, i64 0, i32 1
  %104 = load ptr, ptr %103, align 8, !tbaa !16
  %105 = getelementptr inbounds %struct.tree_decl_common, ptr %104, i64 0, i32 5
  %106 = load ptr, ptr %105, align 8, !tbaa !16
  %107 = load ptr, ptr %4, align 8, !tbaa !5
  %108 = getelementptr inbounds %struct.tree_common, ptr %104, i64 0, i32 2
  store ptr %107, ptr %108, align 8, !tbaa !16
  %109 = getelementptr inbounds %struct.tree_common, ptr %106, i64 0, i32 2
  %110 = load ptr, ptr %109, align 8, !tbaa !16
  %111 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %112 = icmp eq ptr %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %101
  %114 = call ptr @convert(ptr noundef %107, ptr noundef nonnull %106) #24
  br label %115

115:                                              ; preds = %113, %101
  %116 = phi ptr [ %114, %113 ], [ %106, %101 ]
  store ptr %116, ptr %105, align 8, !tbaa !16
  %117 = getelementptr inbounds %struct.tree_decl_minimal, ptr %104, i64 0, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !16
  store ptr %118, ptr %103, align 8, !tbaa !16
  %119 = getelementptr inbounds %struct.tree_list, ptr %102, i64 0, i32 2
  store ptr %116, ptr %119, align 8, !tbaa !16
  %120 = getelementptr inbounds %struct.tree_common, ptr %102, i64 0, i32 1
  %121 = load ptr, ptr %120, align 8, !tbaa !16
  %122 = icmp eq ptr %121, null
  br i1 %122, label %123, label %101, !llvm.loop !220

123:                                              ; preds = %115, %99
  %124 = load ptr, ptr %4, align 8, !tbaa !5
  %125 = getelementptr inbounds %struct.tree_type, ptr %124, i64 0, i32 1
  store ptr %1, ptr %125, align 8, !tbaa !16
  br label %126

126:                                              ; preds = %123, %95
  %127 = call ptr @ggc_alloc_cleared_stat(i64 noundef 32) #24
  %128 = getelementptr inbounds %struct.lang_type, ptr %127, i64 0, i32 1
  store ptr %36, ptr %128, align 8, !tbaa !164
  %129 = getelementptr inbounds %struct.lang_type, ptr %127, i64 0, i32 2
  store ptr %35, ptr %129, align 8, !tbaa !166
  %130 = load ptr, ptr %4, align 8, !tbaa !5
  %131 = getelementptr inbounds %struct.tree_type, ptr %130, i64 0, i32 20
  store ptr %127, ptr %131, align 8, !tbaa !16
  %132 = getelementptr inbounds %struct.tree_type, ptr %130, i64 0, i32 16
  %133 = load ptr, ptr %132, align 8, !tbaa !16
  %134 = icmp eq ptr %133, null
  br i1 %134, label %204, label %135

135:                                              ; preds = %126, %198
  %136 = phi ptr [ %199, %198 ], [ %130, %126 ]
  %137 = phi ptr [ %200, %198 ], [ %130, %126 ]
  %138 = phi ptr [ %202, %198 ], [ %133, %126 ]
  %139 = icmp eq ptr %138, %137
  br i1 %139, label %198, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %struct.tree_type, ptr %137, i64 0, i32 1
  %142 = load ptr, ptr %141, align 8, !tbaa !16
  %143 = getelementptr inbounds %struct.tree_type, ptr %138, i64 0, i32 1
  store ptr %142, ptr %143, align 8, !tbaa !16
  %144 = getelementptr inbounds %struct.tree_type, ptr %137, i64 0, i32 13
  %145 = load ptr, ptr %144, align 8, !tbaa !16
  %146 = getelementptr inbounds %struct.tree_type, ptr %138, i64 0, i32 13
  store ptr %145, ptr %146, align 8, !tbaa !16
  %147 = getelementptr inbounds %struct.tree_type, ptr %137, i64 0, i32 14
  %148 = load ptr, ptr %147, align 8, !tbaa !16
  %149 = getelementptr inbounds %struct.tree_type, ptr %138, i64 0, i32 14
  store ptr %148, ptr %149, align 8, !tbaa !16
  %150 = getelementptr inbounds %struct.tree_type, ptr %137, i64 0, i32 2
  %151 = load ptr, ptr %150, align 8, !tbaa !16
  %152 = getelementptr inbounds %struct.tree_type, ptr %138, i64 0, i32 2
  store ptr %151, ptr %152, align 8, !tbaa !16
  %153 = getelementptr inbounds %struct.tree_type, ptr %137, i64 0, i32 3
  %154 = load ptr, ptr %153, align 8, !tbaa !16
  %155 = getelementptr inbounds %struct.tree_type, ptr %138, i64 0, i32 3
  store ptr %154, ptr %155, align 8, !tbaa !16
  %156 = load i64, ptr %137, align 8
  %157 = and i64 %156, 65535
  %158 = icmp eq i64 %157, 14
  br i1 %158, label %159, label %162

159:                                              ; preds = %140
  %160 = call i32 @vector_type_mode(ptr noundef nonnull %137) #24
  %161 = load ptr, ptr %4, align 8, !tbaa !5
  br label %167

162:                                              ; preds = %140
  %163 = getelementptr inbounds %struct.tree_type, ptr %137, i64 0, i32 6
  %164 = load i32, ptr %163, align 4
  %165 = lshr i32 %164, 16
  %166 = and i32 %165, 255
  br label %167

167:                                              ; preds = %162, %159
  %168 = phi ptr [ %161, %159 ], [ %136, %162 ]
  %169 = phi i32 [ %160, %159 ], [ %166, %162 ]
  %170 = getelementptr inbounds %struct.tree_type, ptr %138, i64 0, i32 6
  %171 = load i32, ptr %170, align 4
  %172 = shl i32 %169, 16
  %173 = and i32 %172, 16711680
  %174 = and i32 %171, -16711681
  %175 = or i32 %174, %173
  store i32 %175, ptr %170, align 4
  %176 = getelementptr inbounds %struct.tree_type, ptr %168, i64 0, i32 6
  %177 = load i32, ptr %176, align 4
  %178 = and i32 %177, 1023
  %179 = and i32 %175, -1024
  %180 = or i32 %178, %179
  store i32 %180, ptr %170, align 4
  %181 = getelementptr inbounds %struct.tree_type, ptr %168, i64 0, i32 7
  %182 = load i32, ptr %181, align 8, !tbaa !16
  %183 = getelementptr inbounds %struct.tree_type, ptr %138, i64 0, i32 7
  store i32 %182, ptr %183, align 8, !tbaa !16
  %184 = load i64, ptr %168, align 8
  %185 = and i64 %184, 4398046511104
  %186 = load i64, ptr %138, align 8
  %187 = and i64 %186, -4398046511105
  %188 = or i64 %187, %185
  store i64 %188, ptr %138, align 8
  %189 = load ptr, ptr %4, align 8, !tbaa !5
  %190 = load i64, ptr %189, align 8
  %191 = and i64 %190, 2097152
  %192 = and i64 %188, -2097153
  %193 = or i64 %191, %192
  store i64 %193, ptr %138, align 8
  %194 = load ptr, ptr %4, align 8, !tbaa !5
  %195 = getelementptr inbounds %struct.tree_type, ptr %194, i64 0, i32 20
  %196 = load ptr, ptr %195, align 8, !tbaa !16
  %197 = getelementptr inbounds %struct.tree_type, ptr %138, i64 0, i32 20
  store ptr %196, ptr %197, align 8, !tbaa !16
  br label %198

198:                                              ; preds = %135, %167
  %199 = phi ptr [ %136, %135 ], [ %194, %167 ]
  %200 = phi ptr [ %137, %135 ], [ %194, %167 ]
  %201 = getelementptr inbounds %struct.tree_type, ptr %138, i64 0, i32 15
  %202 = load ptr, ptr %201, align 8, !tbaa !16
  %203 = icmp eq ptr %202, null
  br i1 %203, label %204, label %135, !llvm.loop !221

204:                                              ; preds = %198, %126
  %205 = phi ptr [ %130, %126 ], [ %199, %198 ]
  %206 = zext i1 %7 to i32
  call void @rest_of_type_compilation(ptr noundef %205, i32 noundef %206) #24
  %207 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %208 = icmp eq i32 %207, 0
  %209 = load ptr, ptr @struct_parse_info, align 8
  %210 = icmp eq ptr %209, null
  %211 = select i1 %208, i1 true, i1 %210
  %212 = load i32, ptr @in_sizeof, align 4
  %213 = icmp ne i32 %212, 0
  %214 = select i1 %211, i1 true, i1 %213
  %215 = load i32, ptr @in_typeof, align 4
  %216 = icmp ne i32 %215, 0
  %217 = select i1 %214, i1 true, i1 %216
  %218 = load i32, ptr @in_alignof, align 4
  %219 = icmp ne i32 %218, 0
  %220 = select i1 %217, i1 true, i1 %219
  br i1 %220, label %239, label %221

221:                                              ; preds = %204
  %222 = load ptr, ptr %4, align 8, !tbaa !5
  %223 = load ptr, ptr %209, align 8, !tbaa !5
  %224 = icmp eq ptr %223, null
  br i1 %224, label %230, label %225

225:                                              ; preds = %221
  %226 = getelementptr inbounds %struct.VEC_tree_base, ptr %223, i64 0, i32 1
  %227 = load i32, ptr %226, align 4, !tbaa !66
  %228 = load i32, ptr %223, align 8, !tbaa !68
  %229 = icmp eq i32 %227, %228
  br i1 %229, label %230, label %233

230:                                              ; preds = %225, %221
  %231 = call ptr @vec_heap_p_reserve(ptr noundef %223, i32 noundef 1) #24
  store ptr %231, ptr %209, align 8, !tbaa !5
  %232 = load i32, ptr %231, align 8, !tbaa !68
  br label %233

233:                                              ; preds = %225, %230
  %234 = phi i32 [ %228, %225 ], [ %232, %230 ]
  %235 = phi ptr [ %223, %225 ], [ %231, %230 ]
  %236 = add i32 %234, 1
  store i32 %236, ptr %235, align 8, !tbaa !68
  %237 = zext i32 %234 to i64
  %238 = getelementptr inbounds %struct.VEC_tree_base, ptr %235, i64 0, i32 2, i64 %237
  store ptr %222, ptr %238, align 8, !tbaa !5
  br label %239

239:                                              ; preds = %233, %204
  %240 = load ptr, ptr %4, align 8, !tbaa !5
  ret ptr %240
}

declare i32 @tree_int_cst_lt(ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @tree_int_cst_sgn(ptr noundef) local_unnamed_addr #3

declare i32 @tree_int_cst_min_precision(ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

declare ptr @c_common_type_for_size(i32 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @convert(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_enumerator(i32 noundef %0, ptr nocapture noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #9 {
  %5 = icmp eq ptr %3, null
  %6 = load ptr, ptr @global_trees, align 16
  %7 = icmp eq ptr %6, %3
  %8 = select i1 %5, i1 true, i1 %7
  br i1 %8, label %39, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !16
  %12 = load i64, ptr %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = and i32 %13, 65535
  %15 = add nsw i32 %14, -6
  %16 = icmp ult i32 %15, 3
  br i1 %16, label %18, label %17

17:                                               ; preds = %9
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.107, ptr noundef %2) #24
  br label %39

18:                                               ; preds = %9
  %19 = load i64, ptr %3, align 8
  %20 = and i64 %19, 65535
  %21 = icmp eq i64 %20, 23
  br i1 %21, label %30, label %22

22:                                               ; preds = %18
  %23 = tail call ptr @c_fully_fold(ptr noundef nonnull %3, i8 noundef zeroext 0, ptr noundef null) #24
  %24 = load i64, ptr %23, align 8
  %25 = and i64 %24, 65535
  %26 = icmp eq i64 %25, 23
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef 834, ptr noundef nonnull @.str.108, ptr noundef %2) #24
  %29 = load i64, ptr %23, align 8
  br label %30

30:                                               ; preds = %22, %27, %18
  %31 = phi i64 [ %29, %27 ], [ %24, %22 ], [ %19, %18 ]
  %32 = phi ptr [ %23, %27 ], [ %23, %22 ], [ %3, %18 ]
  %33 = and i64 %31, 65535
  %34 = icmp eq i64 %33, 23
  br i1 %34, label %36, label %35

35:                                               ; preds = %30
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.107, ptr noundef %2) #24
  br label %39

36:                                               ; preds = %30
  %37 = tail call ptr @default_conversion(ptr noundef nonnull %32) #24
  tail call void @constant_expression_warning(ptr noundef %37) #24
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %45

39:                                               ; preds = %4, %17, %35, %36
  %40 = load ptr, ptr %1, align 8, !tbaa !216
  %41 = getelementptr inbounds %struct.c_enum_contents, ptr %1, i64 0, i32 1
  %42 = load i32, ptr %41, align 8, !tbaa !218
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %51, label %44

44:                                               ; preds = %39
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.109) #24
  br label %51

45:                                               ; preds = %36
  %46 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %47 = tail call i32 @int_fits_type_p(ptr noundef nonnull %37, ptr noundef %46) #24
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef 834, ptr noundef nonnull @.str.110) #24
  br label %51

51:                                               ; preds = %45, %49, %39, %44
  %52 = phi ptr [ %40, %44 ], [ %40, %39 ], [ %37, %45 ], [ %37, %49 ]
  %53 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %54 = tail call i32 @int_fits_type_p(ptr noundef %52, ptr noundef %53) #24
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %51
  %57 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %58 = tail call ptr @convert(ptr noundef %57, ptr noundef %52) #24
  br label %59

59:                                               ; preds = %56, %51
  %60 = phi ptr [ %58, %56 ], [ %52, %51 ]
  %61 = load i64, ptr %60, align 8
  %62 = and i64 %61, 65535
  %63 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !16
  %65 = add i32 %64, -4
  %66 = icmp ult i32 %65, 7
  br i1 %66, label %67, label %71

67:                                               ; preds = %59
  %68 = getelementptr inbounds %struct.tree_exp, ptr %60, i64 0, i32 1
  %69 = load i32, ptr %68, align 8, !tbaa !16
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %59, %67
  %72 = load i32, ptr @input_location, align 4, !tbaa !20
  br label %73

73:                                               ; preds = %67, %71
  %74 = phi i32 [ %72, %71 ], [ %69, %67 ]
  %75 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 14), align 16, !tbaa !5
  %76 = tail call ptr @build_binary_op(i32 noundef %74, i32 noundef 63, ptr noundef nonnull %60, ptr noundef %75, i32 noundef 0) #24
  store ptr %76, ptr %1, align 8, !tbaa !216
  %77 = tail call i32 @tree_int_cst_lt(ptr noundef %76, ptr noundef nonnull %60) #24
  %78 = getelementptr inbounds %struct.c_enum_contents, ptr %1, i64 0, i32 1
  store i32 %77, ptr %78, align 8, !tbaa !218
  %79 = getelementptr inbounds %struct.tree_common, ptr %60, i64 0, i32 2
  %80 = load ptr, ptr %79, align 8, !tbaa !16
  %81 = getelementptr inbounds %struct.tree_type, ptr %80, i64 0, i32 6
  %82 = load i32, ptr %81, align 4
  %83 = and i32 %82, 1023
  %84 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %85 = getelementptr inbounds %struct.tree_type, ptr %84, i64 0, i32 6
  %86 = load i32, ptr %85, align 4
  %87 = and i32 %86, 1023
  %88 = icmp ult i32 %83, %87
  br i1 %88, label %94, label %89

89:                                               ; preds = %73
  %90 = load i64, ptr %80, align 8
  %91 = trunc i64 %90 to i32
  %92 = lshr i32 %91, 21
  %93 = and i32 %92, 1
  br label %94

94:                                               ; preds = %89, %73
  %95 = phi i32 [ 0, %73 ], [ %93, %89 ]
  %96 = tail call i32 @llvm.umax.i32(i32 %83, i32 %87)
  %97 = tail call ptr @c_common_type_for_size(i32 noundef %96, i32 noundef %95) #24
  %98 = tail call ptr @build_decl_stat(i32 noundef %0, i32 noundef 33, ptr noundef %2, ptr noundef %97) #24
  %99 = tail call ptr @convert(ptr noundef %97, ptr noundef nonnull %60) #24
  %100 = getelementptr inbounds %struct.tree_decl_common, ptr %98, i64 0, i32 5
  store ptr %99, ptr %100, align 8, !tbaa !16
  %101 = tail call ptr @pushdecl(ptr noundef %98)
  %102 = tail call ptr @tree_cons_stat(ptr noundef %98, ptr noundef nonnull %60, ptr noundef null) #24
  ret ptr %102
}

declare ptr @c_fully_fold(ptr noundef, i8 noundef zeroext, ptr noundef) local_unnamed_addr #3

declare ptr @default_conversion(ptr noundef) local_unnamed_addr #3

declare i32 @int_fits_type_p(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @build_binary_op(i32 noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @start_function(ptr nocapture noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  store ptr %2, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #24
  store i32 0, ptr @current_function_returns_value, align 4, !tbaa !20
  store i32 0, ptr @current_function_returns_null, align 4, !tbaa !20
  store i32 0, ptr @current_function_returns_abnormally, align 4, !tbaa !20
  store i32 0, ptr @warn_about_return_type, align 4, !tbaa !20
  store ptr null, ptr @c_switch_stack, align 8, !tbaa !5
  %6 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 17), align 8, !tbaa !5
  store ptr %6, ptr @c_cont_label, align 8, !tbaa !5
  store ptr %6, ptr @c_break_label, align 8, !tbaa !5
  %7 = call fastcc ptr @grokdeclarator(ptr noundef %1, ptr noundef %0, i32 noundef 1, i8 noundef zeroext 1, ptr noundef null, ptr noundef nonnull %4, ptr noundef null, ptr noundef null, i32 noundef 0)
  store ptr %7, ptr %5, align 8, !tbaa !5
  %8 = icmp eq ptr %7, null
  br i1 %8, label %409, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tree_decl_minimal, ptr %7, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !16
  %12 = load ptr, ptr %4, align 8, !tbaa !5
  %13 = call ptr @decl_attributes(ptr noundef nonnull %5, ptr noundef %12, i32 noundef 0) #24
  %14 = load ptr, ptr %5, align 8, !tbaa !5
  %15 = getelementptr inbounds %struct.tree_function_decl, ptr %14, i64 0, i32 5
  %16 = load i32, ptr %15, align 8
  %17 = and i32 %16, 2129920
  %18 = icmp eq i32 %17, 2129920
  br i1 %18, label %19, label %28

19:                                               ; preds = %9
  %20 = getelementptr inbounds %struct.tree_decl_common, ptr %14, i64 0, i32 6
  %21 = load ptr, ptr %20, align 8, !tbaa !16
  %22 = call ptr @lookup_attribute(ptr noundef nonnull @.str.55, ptr noundef %21) #24
  %23 = icmp eq ptr %22, null
  %24 = load ptr, ptr %5, align 8, !tbaa !5
  br i1 %23, label %28, label %25

25:                                               ; preds = %19
  %26 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %11, i32 noundef 45, ptr noundef nonnull @.str.111, ptr noundef %24) #24
  %27 = load ptr, ptr %5, align 8, !tbaa !5
  br label %28

28:                                               ; preds = %25, %19, %9
  %29 = phi ptr [ %27, %25 ], [ %24, %19 ], [ %14, %9 ]
  %30 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %31 = load i16, ptr %30, align 8
  %32 = and i16 %31, 64
  %33 = icmp eq i16 %32, 0
  %34 = load i32, ptr @flag_gnu89_inline, align 4
  %35 = icmp ne i32 %34, 0
  %36 = select i1 %33, i1 true, i1 %35
  br i1 %36, label %60, label %37

37:                                               ; preds = %28
  %38 = load i64, ptr %29, align 8
  %39 = and i64 %38, 65535
  %40 = icmp eq i64 %39, 29
  br i1 %40, label %41, label %60

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.tree_decl_common, ptr %29, i64 0, i32 6
  %43 = load ptr, ptr %42, align 8, !tbaa !16
  %44 = call ptr @lookup_attribute(ptr noundef nonnull @.str.54, ptr noundef %43) #24
  %45 = icmp ne ptr %44, null
  %46 = load ptr, ptr @current_function_decl, align 8
  %47 = icmp ne ptr %46, null
  %48 = select i1 %45, i1 true, i1 %47
  br i1 %48, label %51, label %49

49:                                               ; preds = %41
  %50 = load ptr, ptr %5, align 8, !tbaa !5
  br label %60

51:                                               ; preds = %41
  %52 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 5
  %53 = load i32, ptr %52, align 4, !tbaa !130
  %54 = icmp eq i32 %53, 4
  %55 = load ptr, ptr %5, align 8, !tbaa !5
  br i1 %54, label %60, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.tree_decl_common, ptr %55, i64 0, i32 2
  %58 = load i64, ptr %57, align 8
  %59 = xor i64 %58, 33554432
  store i64 %59, ptr %57, align 8
  br label %60

60:                                               ; preds = %49, %51, %56, %37, %28
  %61 = phi ptr [ %50, %49 ], [ %55, %51 ], [ %55, %56 ], [ %29, %37 ], [ %29, %28 ]
  call void @announce_function(ptr noundef %61) #24
  %62 = load ptr, ptr %5, align 8, !tbaa !5
  %63 = getelementptr inbounds %struct.tree_common, ptr %62, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !16
  %65 = getelementptr inbounds %struct.tree_common, ptr %64, i64 0, i32 2
  %66 = load ptr, ptr %65, align 8, !tbaa !16
  %67 = getelementptr inbounds %struct.tree_type, ptr %66, i64 0, i32 2
  %68 = load ptr, ptr %67, align 8, !tbaa !16
  %69 = icmp eq ptr %68, null
  br i1 %69, label %70, label %84

70:                                               ; preds = %60
  %71 = load i64, ptr %66, align 8
  %72 = and i64 %71, 65535
  %73 = icmp eq i64 %72, 19
  br i1 %73, label %84, label %74

74:                                               ; preds = %70
  call void (i32, ptr, ...) @error_at(i32 noundef %11, ptr noundef nonnull @.str.112) #24
  %75 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !5
  %76 = load ptr, ptr %5, align 8, !tbaa !5
  %77 = getelementptr inbounds %struct.tree_common, ptr %76, i64 0, i32 2
  %78 = load ptr, ptr %77, align 8, !tbaa !16
  %79 = getelementptr inbounds %struct.tree_type, ptr %78, i64 0, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !16
  %81 = call ptr @build_function_type(ptr noundef %75, ptr noundef %80) #24
  %82 = load ptr, ptr %5, align 8, !tbaa !5
  %83 = getelementptr inbounds %struct.tree_common, ptr %82, i64 0, i32 2
  store ptr %81, ptr %83, align 8, !tbaa !16
  br label %84

84:                                               ; preds = %74, %70, %60
  %85 = phi ptr [ %82, %74 ], [ %62, %70 ], [ %62, %60 ]
  %86 = load i32, ptr @warn_about_return_type, align 4, !tbaa !20
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %96, label %88

88:                                               ; preds = %84
  %89 = load i32, ptr @flag_isoc99, align 4, !tbaa !20
  %90 = icmp eq i32 %89, 0
  %91 = load i32, ptr @warn_return_type, align 4
  %92 = icmp eq i32 %91, 0
  %93 = select i1 %92, i32 104, i32 172
  %94 = select i1 %90, i32 %93, i32 0
  call void (i32, i32, ptr, ...) @pedwarn_c99(i32 noundef %11, i32 noundef %94, ptr noundef nonnull @.str.113) #24
  %95 = load ptr, ptr %5, align 8, !tbaa !5
  br label %96

96:                                               ; preds = %88, %84
  %97 = phi ptr [ %95, %88 ], [ %85, %84 ]
  %98 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %99 = getelementptr inbounds %struct.tree_decl_common, ptr %97, i64 0, i32 5
  store ptr %98, ptr %99, align 8, !tbaa !16
  %100 = getelementptr inbounds %struct.tree_decl_minimal, ptr %97, i64 0, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !16
  %102 = getelementptr inbounds %struct.lang_identifier, ptr %101, i64 0, i32 1
  %103 = load ptr, ptr %102, align 8, !tbaa !5
  %104 = icmp eq ptr %103, null
  br i1 %104, label %130, label %105

105:                                              ; preds = %96
  %106 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %107 = getelementptr inbounds %struct.c_scope, ptr %106, i64 0, i32 5
  %108 = load i64, ptr %107, align 8
  %109 = trunc i64 %108 to i32
  br label %110

110:                                              ; preds = %117, %105
  %111 = phi ptr [ %103, %105 ], [ %119, %117 ]
  %112 = getelementptr inbounds %struct.c_binding, ptr %111, i64 0, i32 5
  %113 = load i32, ptr %112, align 8
  %114 = xor i32 %113, %109
  %115 = and i32 %114, 268435455
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %110
  %118 = getelementptr inbounds %struct.c_binding, ptr %111, i64 0, i32 4
  %119 = load ptr, ptr %118, align 8, !tbaa !5
  %120 = icmp eq ptr %119, null
  br i1 %120, label %130, label %110, !llvm.loop !222

121:                                              ; preds = %110
  %122 = getelementptr inbounds %struct.c_binding, ptr %111, i64 0, i32 1
  %123 = load ptr, ptr %122, align 8, !tbaa !32
  %124 = icmp eq ptr %123, null
  br i1 %124, label %130, label %125

125:                                              ; preds = %121
  %126 = load i64, ptr %123, align 8
  %127 = and i64 %126, 65535
  %128 = icmp eq i64 %127, 29
  %129 = select i1 %128, ptr %123, ptr null
  br label %130

130:                                              ; preds = %117, %96, %125, %121
  %131 = phi ptr [ %129, %125 ], [ null, %121 ], [ null, %96 ], [ null, %117 ]
  store i32 0, ptr @current_function_prototype_locus, align 4, !tbaa !20
  store i8 0, ptr @current_function_prototype_built_in, align 1, !tbaa !16
  store ptr null, ptr @current_function_prototype_arg_types, align 8, !tbaa !5
  %132 = getelementptr inbounds %struct.tree_common, ptr %97, i64 0, i32 2
  %133 = load ptr, ptr %132, align 8, !tbaa !16
  %134 = getelementptr inbounds %struct.tree_type, ptr %133, i64 0, i32 1
  %135 = load ptr, ptr %134, align 8, !tbaa !16
  %136 = icmp eq ptr %135, null
  br i1 %136, label %137, label %228

137:                                              ; preds = %130
  %138 = icmp eq ptr %131, null
  br i1 %138, label %169, label %139

139:                                              ; preds = %137
  %140 = getelementptr inbounds %struct.tree_common, ptr %131, i64 0, i32 2
  %141 = load ptr, ptr %140, align 8, !tbaa !16
  %142 = load i64, ptr %141, align 8
  %143 = and i64 %142, 65535
  %144 = icmp eq i64 %143, 20
  br i1 %144, label %145, label %169

145:                                              ; preds = %139
  %146 = getelementptr inbounds %struct.tree_common, ptr %133, i64 0, i32 2
  %147 = load ptr, ptr %146, align 8, !tbaa !16
  %148 = getelementptr inbounds %struct.tree_common, ptr %141, i64 0, i32 2
  %149 = load ptr, ptr %148, align 8, !tbaa !16
  %150 = call i32 @comptypes(ptr noundef %147, ptr noundef %149) #24
  %151 = icmp eq i32 %150, 0
  %152 = load ptr, ptr %5, align 8, !tbaa !5
  br i1 %151, label %169, label %153

153:                                              ; preds = %145
  %154 = load ptr, ptr %140, align 8, !tbaa !16
  %155 = getelementptr inbounds %struct.tree_common, ptr %152, i64 0, i32 2
  %156 = load ptr, ptr %155, align 8, !tbaa !16
  %157 = call ptr @composite_type(ptr noundef %154, ptr noundef %156) #24
  %158 = load ptr, ptr %5, align 8, !tbaa !5
  %159 = getelementptr inbounds %struct.tree_common, ptr %158, i64 0, i32 2
  store ptr %157, ptr %159, align 8, !tbaa !16
  %160 = getelementptr inbounds %struct.tree_decl_minimal, ptr %131, i64 0, i32 1
  %161 = load i32, ptr %160, align 8, !tbaa !16
  store i32 %161, ptr @current_function_prototype_locus, align 4, !tbaa !20
  %162 = getelementptr inbounds %struct.tree_decl_common, ptr %131, i64 0, i32 2
  %163 = load i64, ptr %162, align 8
  %164 = lshr i64 %163, 21
  %165 = trunc i64 %164 to i8
  %166 = and i8 %165, 1
  store i8 %166, ptr @current_function_prototype_built_in, align 1, !tbaa !16
  %167 = getelementptr inbounds %struct.tree_type, ptr %157, i64 0, i32 1
  %168 = load ptr, ptr %167, align 8, !tbaa !16
  store ptr %168, ptr @current_function_prototype_arg_types, align 8, !tbaa !5
  br label %169

169:                                              ; preds = %153, %145, %139, %137
  %170 = phi ptr [ %158, %153 ], [ %152, %145 ], [ %97, %139 ], [ %97, %137 ]
  %171 = load i64, ptr %170, align 8
  %172 = and i64 %171, 134217728
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %228, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %struct.tree_decl_minimal, ptr %170, i64 0, i32 3
  %176 = load ptr, ptr %175, align 8, !tbaa !16
  %177 = getelementptr inbounds %struct.lang_identifier, ptr %176, i64 0, i32 1
  %178 = load ptr, ptr %177, align 8, !tbaa !5
  %179 = icmp eq ptr %178, null
  br i1 %179, label %228, label %180

180:                                              ; preds = %174
  %181 = load ptr, ptr @external_scope, align 8, !tbaa !5
  %182 = getelementptr inbounds %struct.c_scope, ptr %181, i64 0, i32 5
  %183 = load i64, ptr %182, align 8
  %184 = trunc i64 %183 to i32
  br label %185

185:                                              ; preds = %180, %192
  %186 = phi ptr [ %178, %180 ], [ %194, %192 ]
  %187 = getelementptr inbounds %struct.c_binding, ptr %186, i64 0, i32 5
  %188 = load i32, ptr %187, align 8
  %189 = xor i32 %188, %184
  %190 = and i32 %189, 268435455
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %196, label %192

192:                                              ; preds = %185
  %193 = getelementptr inbounds %struct.c_binding, ptr %186, i64 0, i32 4
  %194 = load ptr, ptr %193, align 8, !tbaa !5
  %195 = icmp eq ptr %194, null
  br i1 %195, label %228, label %185, !llvm.loop !223

196:                                              ; preds = %185
  %197 = getelementptr inbounds %struct.c_binding, ptr %186, i64 0, i32 1
  %198 = load ptr, ptr %197, align 8, !tbaa !32
  %199 = load ptr, ptr %186, align 8, !tbaa !16
  %200 = icmp eq ptr %199, null
  br i1 %200, label %201, label %204

201:                                              ; preds = %196
  %202 = getelementptr inbounds %struct.tree_common, ptr %198, i64 0, i32 2
  %203 = load ptr, ptr %202, align 8, !tbaa !16
  br label %204

204:                                              ; preds = %196, %201
  %205 = phi ptr [ %203, %201 ], [ %199, %196 ]
  %206 = load i64, ptr %205, align 8
  %207 = and i64 %206, 65535
  %208 = icmp eq i64 %207, 20
  br i1 %208, label %209, label %228

209:                                              ; preds = %204
  %210 = getelementptr inbounds %struct.tree_common, ptr %170, i64 0, i32 2
  %211 = load ptr, ptr %210, align 8, !tbaa !16
  %212 = getelementptr inbounds %struct.tree_common, ptr %211, i64 0, i32 2
  %213 = load ptr, ptr %212, align 8, !tbaa !16
  %214 = getelementptr inbounds %struct.tree_common, ptr %205, i64 0, i32 2
  %215 = load ptr, ptr %214, align 8, !tbaa !16
  %216 = call i32 @comptypes(ptr noundef %213, ptr noundef %215) #24
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %228, label %218

218:                                              ; preds = %209
  %219 = getelementptr inbounds %struct.tree_decl_minimal, ptr %198, i64 0, i32 1
  %220 = load i32, ptr %219, align 8, !tbaa !16
  store i32 %220, ptr @current_function_prototype_locus, align 4, !tbaa !20
  %221 = getelementptr inbounds %struct.tree_decl_common, ptr %198, i64 0, i32 2
  %222 = load i64, ptr %221, align 8
  %223 = lshr i64 %222, 21
  %224 = trunc i64 %223 to i8
  %225 = and i8 %224, 1
  store i8 %225, ptr @current_function_prototype_built_in, align 1, !tbaa !16
  %226 = getelementptr inbounds %struct.tree_type, ptr %205, i64 0, i32 1
  %227 = load ptr, ptr %226, align 8, !tbaa !16
  store ptr %227, ptr @current_function_prototype_arg_types, align 8, !tbaa !5
  br label %228

228:                                              ; preds = %192, %174, %218, %209, %204, %169, %130
  %229 = load i32, ptr @warn_strict_prototypes, align 4, !tbaa !20
  %230 = icmp eq i32 %229, 0
  %231 = load ptr, ptr @global_trees, align 16
  %232 = icmp eq ptr %131, %231
  %233 = select i1 %230, i1 true, i1 %232
  br i1 %233, label %256, label %234

234:                                              ; preds = %228
  %235 = load ptr, ptr %5, align 8, !tbaa !5
  %236 = getelementptr inbounds %struct.tree_common, ptr %235, i64 0, i32 2
  %237 = load ptr, ptr %236, align 8, !tbaa !16
  %238 = getelementptr inbounds %struct.tree_type, ptr %237, i64 0, i32 1
  %239 = load ptr, ptr %238, align 8, !tbaa !16
  %240 = icmp eq ptr %239, null
  br i1 %240, label %241, label %256

241:                                              ; preds = %234
  %242 = icmp eq ptr %131, null
  br i1 %242, label %254, label %243

243:                                              ; preds = %241
  %244 = getelementptr inbounds %struct.tree_common, ptr %131, i64 0, i32 2
  %245 = load ptr, ptr %244, align 8, !tbaa !16
  %246 = getelementptr inbounds %struct.tree_type, ptr %245, i64 0, i32 1
  %247 = load ptr, ptr %246, align 8, !tbaa !16
  %248 = icmp eq ptr %247, null
  br i1 %248, label %249, label %256

249:                                              ; preds = %243
  %250 = getelementptr inbounds %struct.tree_function_decl, ptr %131, i64 0, i32 5
  %251 = load i32, ptr %250, align 8
  %252 = and i32 %251, 6144
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %256

254:                                              ; preds = %249, %241
  %255 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %11, i32 noundef 189, ptr noundef nonnull @.str.114) #24
  br label %331

256:                                              ; preds = %249, %243, %234, %228
  %257 = load i32, ptr @warn_missing_prototypes, align 4, !tbaa !20
  %258 = icmp eq i32 %257, 0
  %259 = select i1 %258, i1 true, i1 %232
  br i1 %259, label %285, label %260

260:                                              ; preds = %256
  %261 = load ptr, ptr %5, align 8, !tbaa !5
  %262 = load i64, ptr %261, align 8
  %263 = and i64 %262, 134217728
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %285, label %265

265:                                              ; preds = %260
  %266 = getelementptr inbounds %struct.tree_decl_minimal, ptr %261, i64 0, i32 3
  %267 = load ptr, ptr %266, align 8, !tbaa !16
  %268 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 56), align 16, !tbaa !5
  %269 = icmp eq ptr %267, %268
  br i1 %269, label %285, label %270

270:                                              ; preds = %265
  %271 = icmp eq ptr %131, null
  br i1 %271, label %283, label %272

272:                                              ; preds = %270
  %273 = getelementptr inbounds %struct.tree_common, ptr %131, i64 0, i32 2
  %274 = load ptr, ptr %273, align 8, !tbaa !16
  %275 = getelementptr inbounds %struct.tree_type, ptr %274, i64 0, i32 1
  %276 = load ptr, ptr %275, align 8, !tbaa !16
  %277 = icmp eq ptr %276, null
  br i1 %277, label %278, label %285

278:                                              ; preds = %272
  %279 = getelementptr inbounds %struct.tree_function_decl, ptr %131, i64 0, i32 5
  %280 = load i32, ptr %279, align 8
  %281 = and i32 %280, 6144
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %285

283:                                              ; preds = %278, %270
  %284 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %11, i32 noundef 135, ptr noundef nonnull @.str.115, ptr noundef nonnull %261) #24
  br label %331

285:                                              ; preds = %278, %272, %265, %260, %256
  %286 = icmp eq ptr %131, null
  %287 = select i1 %258, i1 true, i1 %286
  %288 = select i1 %287, i1 true, i1 %232
  br i1 %288, label %302, label %289

289:                                              ; preds = %285
  %290 = load i64, ptr %131, align 8
  %291 = and i64 %290, 16777216
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %302, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds %struct.tree_common, ptr %131, i64 0, i32 2
  %295 = load ptr, ptr %294, align 8, !tbaa !16
  %296 = getelementptr inbounds %struct.tree_type, ptr %295, i64 0, i32 1
  %297 = load ptr, ptr %296, align 8, !tbaa !16
  %298 = icmp eq ptr %297, null
  br i1 %298, label %299, label %302

299:                                              ; preds = %293
  %300 = load ptr, ptr %5, align 8, !tbaa !5
  %301 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %11, i32 noundef 135, ptr noundef nonnull @.str.116, ptr noundef %300) #24
  br label %331

302:                                              ; preds = %293, %289, %285
  %303 = load i32, ptr @warn_missing_declarations, align 4, !tbaa !20
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %331, label %305

305:                                              ; preds = %302
  %306 = load ptr, ptr %5, align 8, !tbaa !5
  %307 = load i64, ptr %306, align 8
  %308 = and i64 %307, 134217728
  %309 = icmp ne i64 %308, 0
  %310 = select i1 %309, i1 %286, i1 false
  br i1 %310, label %311, label %318

311:                                              ; preds = %305
  %312 = getelementptr inbounds %struct.tree_decl_minimal, ptr %306, i64 0, i32 3
  %313 = load ptr, ptr %312, align 8, !tbaa !16
  %314 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 56), align 16, !tbaa !5
  %315 = icmp eq ptr %313, %314
  br i1 %315, label %331, label %316

316:                                              ; preds = %311
  %317 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %11, i32 noundef 129, ptr noundef nonnull @.str.117, ptr noundef nonnull %306) #24
  br label %331

318:                                              ; preds = %305
  %319 = select i1 %286, i1 true, i1 %232
  br i1 %319, label %331, label %320

320:                                              ; preds = %318
  %321 = load i64, ptr %131, align 8
  %322 = and i64 %321, 16777216
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %331, label %324

324:                                              ; preds = %320
  %325 = getelementptr inbounds %struct.tree_decl_common, ptr %131, i64 0, i32 2
  %326 = load i64, ptr %325, align 8
  %327 = and i64 %326, 131072
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %331, label %329

329:                                              ; preds = %324
  %330 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %11, i32 noundef 129, ptr noundef nonnull @.str.118, ptr noundef nonnull %306) #24
  br label %331

331:                                              ; preds = %311, %302, %283, %316, %329, %324, %320, %318, %299, %254
  %332 = load ptr, ptr %5, align 8, !tbaa !5
  %333 = load i64, ptr %332, align 8
  %334 = or i64 %333, 67108864
  store i64 %334, ptr %332, align 8
  %335 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %336 = icmp eq ptr %335, null
  br i1 %336, label %341, label %337

337:                                              ; preds = %331
  %338 = load ptr, ptr %5, align 8, !tbaa !5
  %339 = load i64, ptr %338, align 8
  %340 = and i64 %339, -134217729
  store i64 %340, ptr %338, align 8
  br label %341

341:                                              ; preds = %337, %331
  %342 = load ptr, ptr %5, align 8, !tbaa !5
  %343 = load i64, ptr %342, align 8
  %344 = and i64 %343, 65535
  %345 = getelementptr inbounds [191 x [64 x i8]], ptr @tree_contains_struct, i64 0, i64 %344, i64 13
  %346 = load i8, ptr %345, align 1, !tbaa !16
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %354, label %348

348:                                              ; preds = %341
  %349 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %342, i64 0, i32 1
  %350 = load ptr, ptr %349, align 8, !tbaa !16
  %351 = icmp eq ptr %350, null
  br i1 %351, label %354, label %352

352:                                              ; preds = %348
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 7542, ptr noundef nonnull @.str.8) #24
  %353 = load ptr, ptr %5, align 8, !tbaa !5
  br label %354

354:                                              ; preds = %341, %348, %352
  %355 = phi ptr [ %342, %341 ], [ %342, %348 ], [ %353, %352 ]
  %356 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %357 = load ptr, ptr @file_scope, align 8, !tbaa !5
  %358 = icmp eq ptr %356, %357
  br i1 %358, label %359, label %361

359:                                              ; preds = %354
  call void @maybe_apply_pragma_weak(ptr noundef %355) #24
  %360 = load ptr, ptr %5, align 8, !tbaa !5
  br label %361

361:                                              ; preds = %359, %354
  %362 = phi ptr [ %360, %359 ], [ %355, %354 ]
  %363 = load i32, ptr @warn_main, align 4, !tbaa !20
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %391, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds %struct.tree_decl_minimal, ptr %362, i64 0, i32 3
  %367 = load ptr, ptr %366, align 8, !tbaa !16
  %368 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 56), align 16, !tbaa !5
  %369 = icmp eq ptr %367, %368
  br i1 %369, label %370, label %391

370:                                              ; preds = %365
  %371 = getelementptr inbounds %struct.tree_common, ptr %362, i64 0, i32 2
  %372 = load ptr, ptr %371, align 8, !tbaa !16
  %373 = getelementptr inbounds %struct.tree_common, ptr %372, i64 0, i32 2
  %374 = load ptr, ptr %373, align 8, !tbaa !16
  %375 = getelementptr inbounds %struct.tree_type, ptr %374, i64 0, i32 16
  %376 = load ptr, ptr %375, align 8, !tbaa !16
  %377 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %378 = icmp eq ptr %376, %377
  br i1 %378, label %382, label %379

379:                                              ; preds = %370
  %380 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %11, i32 noundef 126, ptr noundef nonnull @.str.119, ptr noundef nonnull %362) #24
  %381 = load ptr, ptr %5, align 8, !tbaa !5
  br label %382

382:                                              ; preds = %379, %370
  %383 = phi ptr [ %381, %379 ], [ %362, %370 ]
  call void @check_main_parameter_types(ptr noundef %383) #24
  %384 = load ptr, ptr %5, align 8, !tbaa !5
  %385 = load i64, ptr %384, align 8
  %386 = and i64 %385, 134217728
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %388, label %391

388:                                              ; preds = %382
  %389 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %11, i32 noundef 126, ptr noundef nonnull @.str.120, ptr noundef nonnull %384) #24
  %390 = load ptr, ptr %5, align 8, !tbaa !5
  br label %391

391:                                              ; preds = %382, %388, %365, %361
  %392 = phi ptr [ %384, %382 ], [ %390, %388 ], [ %362, %365 ], [ %362, %361 ]
  %393 = call ptr @pushdecl(ptr noundef %392)
  store ptr %393, ptr @current_function_decl, align 8, !tbaa !5
  call void @push_scope()
  %394 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %395 = getelementptr inbounds %struct.c_scope, ptr %394, i64 0, i32 5
  %396 = load i64, ptr %395, align 8
  %397 = or i64 %396, 268435456
  store i64 %397, ptr %395, align 8
  %398 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %399 = getelementptr inbounds %struct.tree_common, ptr %398, i64 0, i32 2
  %400 = load ptr, ptr %399, align 8, !tbaa !16
  %401 = getelementptr inbounds %struct.tree_common, ptr %400, i64 0, i32 2
  %402 = load ptr, ptr %401, align 8, !tbaa !16
  %403 = call ptr @build_decl_stat(i32 noundef %11, i32 noundef 36, ptr noundef null, ptr noundef %402) #24
  %404 = getelementptr inbounds %struct.tree_decl_common, ptr %403, i64 0, i32 2
  %405 = load i64, ptr %404, align 8
  %406 = or i64 %405, 5120
  store i64 %406, ptr %404, align 8
  %407 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %408 = getelementptr inbounds %struct.tree_decl_non_common, ptr %407, i64 0, i32 3
  store ptr %403, ptr %408, align 8, !tbaa !16
  call void @start_fname_decls() #24
  br label %409

409:                                              ; preds = %3, %391
  %410 = phi i32 [ 1, %391 ], [ 0, %3 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #24
  ret i32 %410
}

declare void @announce_function(ptr noundef) local_unnamed_addr #3

declare ptr @build_function_type(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @pedwarn_c99(i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

declare void @check_main_parameter_types(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @store_parm_decls_from(ptr noundef %0) local_unnamed_addr #9 {
  store ptr %0, ptr @current_function_arg_info, align 8, !tbaa !5
  tail call void @store_parm_decls()
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @store_parm_decls() local_unnamed_addr #9 {
  %1 = alloca %struct.expanded_location, align 8
  %2 = alloca %struct.expanded_location, align 8
  %3 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %4 = load ptr, ptr @current_function_arg_info, align 8, !tbaa !5
  store ptr null, ptr @current_function_arg_info, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.c_arg_info, ptr %4, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !157
  %7 = icmp ne ptr %6, null
  br i1 %7, label %8, label %278

8:                                                ; preds = %0
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2)
  %9 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.c_scope, ptr %9, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !48
  %12 = icmp eq ptr %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 1
  %15 = load i32, ptr %14, align 8, !tbaa !16
  tail call void (i32, ptr, ...) @error_at(i32 noundef %15, ptr noundef nonnull @.str.357) #24
  %16 = tail call ptr @pop_scope()
  tail call void @push_scope()
  br label %33

17:                                               ; preds = %8
  %18 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %2, i32 noundef %18) #24
  %19 = getelementptr inbounds %struct.expanded_location, ptr %2, i64 0, i32 3
  %20 = load i8, ptr %19, align 8, !tbaa !57
  %21 = icmp ne i8 %20, 0
  %22 = load ptr, ptr @current_function_scope, align 8
  %23 = icmp ne ptr %22, null
  %24 = select i1 %21, i1 true, i1 %23
  br i1 %24, label %33, label %25

25:                                               ; preds = %17
  %26 = load ptr, ptr %5, align 8, !tbaa !157
  %27 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 1
  %31 = load i32, ptr %30, align 8, !tbaa !16
  %32 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %31, i32 noundef 202, ptr noundef nonnull @.str.358) #24
  br label %33

33:                                               ; preds = %29, %25, %17, %13
  %34 = load ptr, ptr %4, align 8, !tbaa !16
  %35 = icmp eq ptr %34, null
  br i1 %35, label %116, label %36

36:                                               ; preds = %33, %110
  %37 = phi ptr [ %112, %110 ], [ %34, %33 ]
  %38 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %39 = getelementptr inbounds %struct.tree_decl_minimal, ptr %37, i64 0, i32 4
  store ptr %38, ptr %39, align 8, !tbaa !16
  %40 = getelementptr inbounds %struct.tree_decl_minimal, ptr %37, i64 0, i32 3
  %41 = load ptr, ptr %40, align 8, !tbaa !16
  %42 = icmp eq ptr %41, null
  br i1 %42, label %107, label %43

43:                                               ; preds = %36
  %44 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %45 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %46 = icmp eq ptr %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.c_binding, ptr %45, i64 0, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !60
  store ptr %49, ptr @binding_freelist, align 8, !tbaa !5
  br label %52

50:                                               ; preds = %43
  %51 = call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %52

52:                                               ; preds = %50, %47
  %53 = phi ptr [ %45, %47 ], [ %51, %50 ]
  %54 = getelementptr inbounds %struct.c_binding, ptr %53, i64 0, i32 4
  store ptr null, ptr %54, align 8, !tbaa !52
  %55 = getelementptr inbounds %struct.c_binding, ptr %53, i64 0, i32 1
  store ptr %37, ptr %55, align 8, !tbaa !32
  %56 = getelementptr inbounds %struct.c_binding, ptr %53, i64 0, i32 2
  store ptr %41, ptr %56, align 8, !tbaa !51
  %57 = getelementptr inbounds %struct.c_scope, ptr %44, i64 0, i32 5
  %58 = load i64, ptr %57, align 8
  %59 = trunc i64 %58 to i32
  %60 = and i32 %59, 268435455
  %61 = getelementptr inbounds %struct.c_binding, ptr %53, i64 0, i32 5
  store i32 %60, ptr %61, align 8
  %62 = getelementptr inbounds %struct.c_binding, ptr %53, i64 0, i32 6
  store i32 0, ptr %62, align 4, !tbaa !59
  store ptr null, ptr %53, align 8, !tbaa !16
  %63 = getelementptr inbounds %struct.c_scope, ptr %44, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !48
  %65 = getelementptr inbounds %struct.c_binding, ptr %53, i64 0, i32 3
  store ptr %64, ptr %65, align 8, !tbaa !60
  store ptr %53, ptr %63, align 8, !tbaa !48
  %66 = load i64, ptr %37, align 8
  %67 = trunc i64 %66 to i16
  switch i16 %67, label %74 [
    i16 30, label %68
    i16 6, label %70
    i16 17, label %70
    i16 16, label %70
    i16 32, label %72
    i16 29, label %72
    i16 35, label %72
    i16 33, label %72
    i16 34, label %72
    i16 0, label %72
  ]

68:                                               ; preds = %52
  %69 = getelementptr inbounds %struct.lang_identifier, ptr %41, i64 0, i32 3
  br label %75

70:                                               ; preds = %52, %52, %52
  %71 = getelementptr inbounds %struct.lang_identifier, ptr %41, i64 0, i32 2
  br label %75

72:                                               ; preds = %52, %52, %52, %52, %52, %52
  %73 = getelementptr inbounds %struct.lang_identifier, ptr %41, i64 0, i32 1
  br label %75

74:                                               ; preds = %52
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %75

75:                                               ; preds = %74, %72, %70, %68
  %76 = phi ptr [ undef, %74 ], [ %73, %72 ], [ %71, %70 ], [ %69, %68 ]
  %77 = load ptr, ptr %76, align 8, !tbaa !5
  %78 = icmp eq ptr %77, null
  br i1 %78, label %100, label %79

79:                                               ; preds = %75
  %80 = load i64, ptr %57, align 8
  %81 = trunc i64 %80 to i32
  %82 = and i32 %81, 268435455
  %83 = getelementptr inbounds %struct.c_binding, ptr %77, i64 0, i32 5
  %84 = load i32, ptr %83, align 8
  %85 = and i32 %84, 268435455
  %86 = icmp ugt i32 %85, %82
  br i1 %86, label %92, label %100

87:                                               ; preds = %92
  %88 = getelementptr inbounds %struct.c_binding, ptr %95, i64 0, i32 5
  %89 = load i32, ptr %88, align 8
  %90 = and i32 %89, 268435455
  %91 = icmp ugt i32 %90, %82
  br i1 %91, label %92, label %97, !llvm.loop !74

92:                                               ; preds = %79, %87
  %93 = phi ptr [ %95, %87 ], [ %77, %79 ]
  %94 = getelementptr inbounds %struct.c_binding, ptr %93, i64 0, i32 4
  %95 = load ptr, ptr %94, align 8, !tbaa !5
  %96 = icmp eq ptr %95, null
  br i1 %96, label %97, label %87, !llvm.loop !74

97:                                               ; preds = %92, %87
  %98 = phi ptr [ null, %92 ], [ %95, %87 ]
  %99 = getelementptr inbounds %struct.c_binding, ptr %93, i64 0, i32 4
  br label %100

100:                                              ; preds = %97, %79, %75
  %101 = phi ptr [ %76, %75 ], [ %76, %79 ], [ %99, %97 ]
  %102 = phi ptr [ null, %75 ], [ %77, %79 ], [ %98, %97 ]
  store ptr %102, ptr %54, align 8, !tbaa !52
  store ptr %53, ptr %101, align 8, !tbaa !5
  %103 = load i64, ptr %37, align 8
  %104 = and i64 %103, 16777216
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %100
  call fastcc void @warn_if_shadowing(ptr noundef nonnull %37)
  br label %110

107:                                              ; preds = %36
  %108 = getelementptr inbounds %struct.tree_decl_minimal, ptr %37, i64 0, i32 1
  %109 = load i32, ptr %108, align 8, !tbaa !16
  call void (i32, ptr, ...) @error_at(i32 noundef %109, ptr noundef nonnull @.str.359) #24
  br label %110

110:                                              ; preds = %107, %106, %100
  %111 = getelementptr inbounds %struct.tree_common, ptr %37, i64 0, i32 1
  %112 = load ptr, ptr %111, align 8, !tbaa !16
  %113 = icmp eq ptr %112, null
  br i1 %113, label %114, label %36, !llvm.loop !224

114:                                              ; preds = %110
  %115 = load ptr, ptr %4, align 8, !tbaa !159
  br label %116

116:                                              ; preds = %114, %33
  %117 = phi ptr [ %115, %114 ], [ null, %33 ]
  %118 = getelementptr inbounds %struct.tree_decl_non_common, ptr %3, i64 0, i32 2
  store ptr %117, ptr %118, align 8, !tbaa !16
  %119 = getelementptr inbounds %struct.c_arg_info, ptr %4, i64 0, i32 3
  %120 = load ptr, ptr %119, align 8, !tbaa !16
  %121 = icmp eq ptr %120, null
  br i1 %121, label %202, label %122

122:                                              ; preds = %116
  %123 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  br label %124

124:                                              ; preds = %197, %122
  %125 = phi ptr [ %198, %197 ], [ %123, %122 ]
  %126 = phi ptr [ %200, %197 ], [ %120, %122 ]
  %127 = getelementptr inbounds %struct.tree_decl_minimal, ptr %126, i64 0, i32 4
  store ptr %125, ptr %127, align 8, !tbaa !16
  %128 = getelementptr inbounds %struct.tree_decl_minimal, ptr %126, i64 0, i32 3
  %129 = load ptr, ptr %128, align 8, !tbaa !16
  %130 = icmp eq ptr %129, null
  br i1 %130, label %197, label %131

131:                                              ; preds = %124
  %132 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %133 = load i64, ptr %126, align 8
  %134 = and i64 %133, 65535
  %135 = icmp eq i64 %134, 29
  %136 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %137 = icmp eq ptr %136, null
  br i1 %137, label %141, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %struct.c_binding, ptr %136, i64 0, i32 3
  %140 = load ptr, ptr %139, align 8, !tbaa !60
  store ptr %140, ptr @binding_freelist, align 8, !tbaa !5
  br label %143

141:                                              ; preds = %131
  %142 = call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %143

143:                                              ; preds = %141, %138
  %144 = phi ptr [ %136, %138 ], [ %142, %141 ]
  %145 = getelementptr inbounds %struct.c_binding, ptr %144, i64 0, i32 4
  store ptr null, ptr %145, align 8, !tbaa !52
  %146 = getelementptr inbounds %struct.c_binding, ptr %144, i64 0, i32 1
  store ptr %126, ptr %146, align 8, !tbaa !32
  %147 = getelementptr inbounds %struct.c_binding, ptr %144, i64 0, i32 2
  store ptr %129, ptr %147, align 8, !tbaa !51
  %148 = getelementptr inbounds %struct.c_scope, ptr %132, i64 0, i32 5
  %149 = load i64, ptr %148, align 8
  %150 = trunc i64 %149 to i32
  %151 = and i32 %150, 268435455
  %152 = getelementptr inbounds %struct.c_binding, ptr %144, i64 0, i32 5
  %153 = select i1 %135, i32 536870912, i32 0
  %154 = or i32 %151, %153
  store i32 %154, ptr %152, align 8
  %155 = getelementptr inbounds %struct.c_binding, ptr %144, i64 0, i32 6
  store i32 0, ptr %155, align 4, !tbaa !59
  store ptr null, ptr %144, align 8, !tbaa !16
  %156 = getelementptr inbounds %struct.c_scope, ptr %132, i64 0, i32 2
  %157 = load ptr, ptr %156, align 8, !tbaa !48
  %158 = getelementptr inbounds %struct.c_binding, ptr %144, i64 0, i32 3
  store ptr %157, ptr %158, align 8, !tbaa !60
  store ptr %144, ptr %156, align 8, !tbaa !48
  %159 = load i64, ptr %126, align 8
  %160 = trunc i64 %159 to i16
  switch i16 %160, label %167 [
    i16 30, label %161
    i16 6, label %163
    i16 17, label %163
    i16 16, label %163
    i16 32, label %165
    i16 29, label %165
    i16 35, label %165
    i16 33, label %165
    i16 34, label %165
    i16 0, label %165
  ]

161:                                              ; preds = %143
  %162 = getelementptr inbounds %struct.lang_identifier, ptr %129, i64 0, i32 3
  br label %168

163:                                              ; preds = %143, %143, %143
  %164 = getelementptr inbounds %struct.lang_identifier, ptr %129, i64 0, i32 2
  br label %168

165:                                              ; preds = %143, %143, %143, %143, %143, %143
  %166 = getelementptr inbounds %struct.lang_identifier, ptr %129, i64 0, i32 1
  br label %168

167:                                              ; preds = %143
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %168

168:                                              ; preds = %167, %165, %163, %161
  %169 = phi ptr [ undef, %167 ], [ %166, %165 ], [ %164, %163 ], [ %162, %161 ]
  %170 = load ptr, ptr %169, align 8, !tbaa !5
  %171 = icmp eq ptr %170, null
  br i1 %171, label %193, label %172

172:                                              ; preds = %168
  %173 = load i64, ptr %148, align 8
  %174 = trunc i64 %173 to i32
  %175 = and i32 %174, 268435455
  %176 = getelementptr inbounds %struct.c_binding, ptr %170, i64 0, i32 5
  %177 = load i32, ptr %176, align 8
  %178 = and i32 %177, 268435455
  %179 = icmp ugt i32 %178, %175
  br i1 %179, label %185, label %193

180:                                              ; preds = %185
  %181 = getelementptr inbounds %struct.c_binding, ptr %188, i64 0, i32 5
  %182 = load i32, ptr %181, align 8
  %183 = and i32 %182, 268435455
  %184 = icmp ugt i32 %183, %175
  br i1 %184, label %185, label %190, !llvm.loop !74

185:                                              ; preds = %172, %180
  %186 = phi ptr [ %188, %180 ], [ %170, %172 ]
  %187 = getelementptr inbounds %struct.c_binding, ptr %186, i64 0, i32 4
  %188 = load ptr, ptr %187, align 8, !tbaa !5
  %189 = icmp eq ptr %188, null
  br i1 %189, label %190, label %180, !llvm.loop !74

190:                                              ; preds = %185, %180
  %191 = phi ptr [ null, %185 ], [ %188, %180 ]
  %192 = getelementptr inbounds %struct.c_binding, ptr %186, i64 0, i32 4
  br label %193

193:                                              ; preds = %190, %172, %168
  %194 = phi ptr [ %169, %168 ], [ %169, %172 ], [ %192, %190 ]
  %195 = phi ptr [ null, %168 ], [ %170, %172 ], [ %191, %190 ]
  store ptr %195, ptr %145, align 8, !tbaa !52
  store ptr %144, ptr %194, align 8, !tbaa !5
  %196 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  br label %197

197:                                              ; preds = %193, %124
  %198 = phi ptr [ %125, %124 ], [ %196, %193 ]
  %199 = getelementptr inbounds %struct.tree_common, ptr %126, i64 0, i32 1
  %200 = load ptr, ptr %199, align 8, !tbaa !16
  %201 = icmp eq ptr %200, null
  br i1 %201, label %202, label %124, !llvm.loop !225

202:                                              ; preds = %197, %116
  %203 = getelementptr inbounds %struct.c_arg_info, ptr %4, i64 0, i32 1
  %204 = load ptr, ptr %203, align 8, !tbaa !16
  %205 = icmp eq ptr %204, null
  br i1 %205, label %277, label %206

206:                                              ; preds = %202, %273
  %207 = phi ptr [ %275, %273 ], [ %204, %202 ]
  %208 = getelementptr inbounds %struct.tree_list, ptr %207, i64 0, i32 1
  %209 = load ptr, ptr %208, align 8, !tbaa !16
  %210 = icmp eq ptr %209, null
  br i1 %210, label %273, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %struct.tree_list, ptr %207, i64 0, i32 2
  %213 = load ptr, ptr %212, align 8, !tbaa !16
  %214 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %215 = load ptr, ptr @binding_freelist, align 8, !tbaa !5
  %216 = icmp eq ptr %215, null
  br i1 %216, label %220, label %217

217:                                              ; preds = %211
  %218 = getelementptr inbounds %struct.c_binding, ptr %215, i64 0, i32 3
  %219 = load ptr, ptr %218, align 8, !tbaa !60
  store ptr %219, ptr @binding_freelist, align 8, !tbaa !5
  br label %222

220:                                              ; preds = %211
  %221 = call ptr @ggc_alloc_stat(i64 noundef 48) #24
  br label %222

222:                                              ; preds = %220, %217
  %223 = phi ptr [ %215, %217 ], [ %221, %220 ]
  %224 = getelementptr inbounds %struct.c_binding, ptr %223, i64 0, i32 4
  store ptr null, ptr %224, align 8, !tbaa !52
  %225 = getelementptr inbounds %struct.c_binding, ptr %223, i64 0, i32 1
  store ptr %213, ptr %225, align 8, !tbaa !32
  %226 = getelementptr inbounds %struct.c_binding, ptr %223, i64 0, i32 2
  store ptr %209, ptr %226, align 8, !tbaa !51
  %227 = getelementptr inbounds %struct.c_scope, ptr %214, i64 0, i32 5
  %228 = load i64, ptr %227, align 8
  %229 = trunc i64 %228 to i32
  %230 = and i32 %229, 268435455
  %231 = getelementptr inbounds %struct.c_binding, ptr %223, i64 0, i32 5
  store i32 %230, ptr %231, align 8
  %232 = getelementptr inbounds %struct.c_binding, ptr %223, i64 0, i32 6
  store i32 0, ptr %232, align 4, !tbaa !59
  store ptr null, ptr %223, align 8, !tbaa !16
  %233 = getelementptr inbounds %struct.c_scope, ptr %214, i64 0, i32 2
  %234 = load ptr, ptr %233, align 8, !tbaa !48
  %235 = getelementptr inbounds %struct.c_binding, ptr %223, i64 0, i32 3
  store ptr %234, ptr %235, align 8, !tbaa !60
  store ptr %223, ptr %233, align 8, !tbaa !48
  %236 = load i64, ptr %213, align 8
  %237 = trunc i64 %236 to i16
  switch i16 %237, label %244 [
    i16 30, label %238
    i16 6, label %240
    i16 17, label %240
    i16 16, label %240
    i16 32, label %242
    i16 29, label %242
    i16 35, label %242
    i16 33, label %242
    i16 34, label %242
    i16 0, label %242
  ]

238:                                              ; preds = %222
  %239 = getelementptr inbounds %struct.lang_identifier, ptr %209, i64 0, i32 3
  br label %245

240:                                              ; preds = %222, %222, %222
  %241 = getelementptr inbounds %struct.lang_identifier, ptr %209, i64 0, i32 2
  br label %245

242:                                              ; preds = %222, %222, %222, %222, %222, %222
  %243 = getelementptr inbounds %struct.lang_identifier, ptr %209, i64 0, i32 1
  br label %245

244:                                              ; preds = %222
  call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 633, ptr noundef nonnull @.str.8) #24
  br label %245

245:                                              ; preds = %244, %242, %240, %238
  %246 = phi ptr [ undef, %244 ], [ %243, %242 ], [ %241, %240 ], [ %239, %238 ]
  %247 = load ptr, ptr %246, align 8, !tbaa !5
  %248 = icmp eq ptr %247, null
  br i1 %248, label %270, label %249

249:                                              ; preds = %245
  %250 = load i64, ptr %227, align 8
  %251 = trunc i64 %250 to i32
  %252 = and i32 %251, 268435455
  %253 = getelementptr inbounds %struct.c_binding, ptr %247, i64 0, i32 5
  %254 = load i32, ptr %253, align 8
  %255 = and i32 %254, 268435455
  %256 = icmp ugt i32 %255, %252
  br i1 %256, label %262, label %270

257:                                              ; preds = %262
  %258 = getelementptr inbounds %struct.c_binding, ptr %265, i64 0, i32 5
  %259 = load i32, ptr %258, align 8
  %260 = and i32 %259, 268435455
  %261 = icmp ugt i32 %260, %252
  br i1 %261, label %262, label %267, !llvm.loop !74

262:                                              ; preds = %249, %257
  %263 = phi ptr [ %265, %257 ], [ %247, %249 ]
  %264 = getelementptr inbounds %struct.c_binding, ptr %263, i64 0, i32 4
  %265 = load ptr, ptr %264, align 8, !tbaa !5
  %266 = icmp eq ptr %265, null
  br i1 %266, label %267, label %257, !llvm.loop !74

267:                                              ; preds = %262, %257
  %268 = phi ptr [ null, %262 ], [ %265, %257 ]
  %269 = getelementptr inbounds %struct.c_binding, ptr %263, i64 0, i32 4
  br label %270

270:                                              ; preds = %267, %249, %245
  %271 = phi ptr [ %246, %245 ], [ %246, %249 ], [ %269, %267 ]
  %272 = phi ptr [ null, %245 ], [ %247, %249 ], [ %268, %267 ]
  store ptr %272, ptr %224, align 8, !tbaa !52
  store ptr %223, ptr %271, align 8, !tbaa !5
  br label %273

273:                                              ; preds = %270, %206
  %274 = getelementptr inbounds %struct.tree_common, ptr %207, i64 0, i32 1
  %275 = load ptr, ptr %274, align 8, !tbaa !16
  %276 = icmp eq ptr %275, null
  br i1 %276, label %277, label %206, !llvm.loop !226

277:                                              ; preds = %273, %202
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2)
  br label %592

278:                                              ; preds = %0
  %279 = load ptr, ptr %4, align 8, !tbaa !159
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %1)
  %280 = tail call ptr @pointer_set_create() #24
  %281 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %1, i32 noundef %281) #24
  %282 = getelementptr inbounds %struct.expanded_location, ptr %1, i64 0, i32 3
  %283 = load i8, ptr %282, align 8, !tbaa !57
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %285, label %289

285:                                              ; preds = %278
  %286 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 1
  %287 = load i32, ptr %286, align 8, !tbaa !16
  %288 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %287, i32 noundef 148, ptr noundef nonnull @.str.360) #24
  br label %289

289:                                              ; preds = %285, %278
  %290 = icmp eq ptr %279, null
  br i1 %290, label %368, label %291

291:                                              ; preds = %289
  %292 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 1
  br label %293

293:                                              ; preds = %364, %291
  %294 = phi ptr [ %279, %291 ], [ %366, %364 ]
  %295 = getelementptr inbounds %struct.tree_list, ptr %294, i64 0, i32 2
  %296 = load ptr, ptr %295, align 8, !tbaa !16
  %297 = icmp eq ptr %296, null
  br i1 %297, label %298, label %301

298:                                              ; preds = %293
  %299 = load i32, ptr %292, align 8, !tbaa !16
  call void (i32, ptr, ...) @error_at(i32 noundef %299, ptr noundef nonnull @.str.361) #24
  %300 = getelementptr inbounds %struct.tree_list, ptr %294, i64 0, i32 1
  store ptr null, ptr %300, align 8, !tbaa !16
  br label %364

301:                                              ; preds = %293
  %302 = getelementptr inbounds %struct.lang_identifier, ptr %296, i64 0, i32 1
  %303 = load ptr, ptr %302, align 8, !tbaa !25
  %304 = icmp eq ptr %303, null
  br i1 %304, label %344, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %struct.c_binding, ptr %303, i64 0, i32 5
  %307 = load i32, ptr %306, align 8
  %308 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %309 = getelementptr inbounds %struct.c_scope, ptr %308, i64 0, i32 5
  %310 = load i64, ptr %309, align 8
  %311 = trunc i64 %310 to i32
  %312 = xor i32 %307, %311
  %313 = and i32 %312, 268435455
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %344

315:                                              ; preds = %305
  %316 = getelementptr inbounds %struct.c_binding, ptr %303, i64 0, i32 1
  %317 = load ptr, ptr %316, align 8, !tbaa !32
  %318 = load i64, ptr %317, align 8
  %319 = and i64 %318, 65535
  %320 = icmp eq i64 %319, 34
  br i1 %320, label %324, label %321

321:                                              ; preds = %315
  %322 = getelementptr inbounds %struct.tree_decl_minimal, ptr %317, i64 0, i32 1
  %323 = load i32, ptr %322, align 8, !tbaa !16
  call void (i32, ptr, ...) @error_at(i32 noundef %323, ptr noundef nonnull @.str.362, ptr noundef nonnull %317) #24
  br label %343

324:                                              ; preds = %315
  %325 = call i32 @pointer_set_contains(ptr noundef %280, ptr noundef nonnull %317) #24
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %331, label %327

327:                                              ; preds = %324
  %328 = getelementptr inbounds %struct.tree_decl_minimal, ptr %317, i64 0, i32 1
  %329 = load i32, ptr %328, align 8, !tbaa !16
  call void (i32, ptr, ...) @error_at(i32 noundef %329, ptr noundef nonnull @.str.363, ptr noundef nonnull %317) #24
  %330 = getelementptr inbounds %struct.tree_list, ptr %294, i64 0, i32 1
  store ptr null, ptr %330, align 8, !tbaa !16
  br label %364

331:                                              ; preds = %324
  %332 = getelementptr inbounds %struct.tree_common, ptr %317, i64 0, i32 2
  %333 = load ptr, ptr %332, align 8, !tbaa !16
  %334 = load i64, ptr %333, align 8
  %335 = and i64 %334, 65535
  %336 = icmp eq i64 %335, 19
  br i1 %336, label %337, label %343

337:                                              ; preds = %331
  %338 = getelementptr inbounds %struct.tree_decl_minimal, ptr %317, i64 0, i32 1
  %339 = load i32, ptr %338, align 8, !tbaa !16
  call void (i32, ptr, ...) @error_at(i32 noundef %339, ptr noundef nonnull @.str.364, ptr noundef nonnull %317) #24
  %340 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  store ptr %340, ptr %332, align 8, !tbaa !16
  %341 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %342 = getelementptr inbounds %struct.tree_decl_common, ptr %317, i64 0, i32 5
  store ptr %341, ptr %342, align 8, !tbaa !16
  call void @layout_decl(ptr noundef nonnull %317, i32 noundef 0) #24
  br label %343

343:                                              ; preds = %337, %331, %321
  call fastcc void @warn_if_shadowing(ptr noundef nonnull %317)
  br label %360

344:                                              ; preds = %305, %301
  %345 = load i32, ptr %292, align 8, !tbaa !16
  %346 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %347 = call ptr @build_decl_stat(i32 noundef %345, i32 noundef 34, ptr noundef nonnull %296, ptr noundef %346) #24
  %348 = getelementptr inbounds %struct.tree_common, ptr %347, i64 0, i32 2
  %349 = load ptr, ptr %348, align 8, !tbaa !16
  %350 = getelementptr inbounds %struct.tree_decl_common, ptr %347, i64 0, i32 5
  store ptr %349, ptr %350, align 8, !tbaa !16
  %351 = call ptr @pushdecl(ptr noundef %347)
  call fastcc void @warn_if_shadowing(ptr noundef %347)
  %352 = load i32, ptr @flag_isoc99, align 4, !tbaa !20
  %353 = icmp eq i32 %352, 0
  %354 = getelementptr inbounds %struct.tree_decl_minimal, ptr %347, i64 0, i32 1
  %355 = load i32, ptr %354, align 8, !tbaa !16
  br i1 %353, label %358, label %356

356:                                              ; preds = %344
  %357 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %355, i32 noundef 0, ptr noundef nonnull @.str.365, ptr noundef nonnull %347) #24
  br label %360

358:                                              ; preds = %344
  %359 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %355, i32 noundef 134, ptr noundef nonnull @.str.365, ptr noundef nonnull %347) #24
  br label %360

360:                                              ; preds = %358, %356, %343
  %361 = phi ptr [ %317, %343 ], [ %347, %356 ], [ %347, %358 ]
  %362 = getelementptr inbounds %struct.tree_list, ptr %294, i64 0, i32 1
  store ptr %361, ptr %362, align 8, !tbaa !16
  %363 = call i32 @pointer_set_insert(ptr noundef %280, ptr noundef nonnull %361) #24
  br label %364

364:                                              ; preds = %360, %327, %298
  %365 = getelementptr inbounds %struct.tree_common, ptr %294, i64 0, i32 1
  %366 = load ptr, ptr %365, align 8, !tbaa !16
  %367 = icmp eq ptr %366, null
  br i1 %367, label %368, label %293, !llvm.loop !227

368:                                              ; preds = %364, %289
  %369 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %370 = getelementptr inbounds %struct.c_scope, ptr %369, i64 0, i32 2
  %371 = load ptr, ptr %370, align 8, !tbaa !5
  %372 = icmp eq ptr %371, null
  br i1 %372, label %407, label %373

373:                                              ; preds = %368, %402
  %374 = phi ptr [ %405, %402 ], [ %371, %368 ]
  %375 = phi ptr [ %403, %402 ], [ %279, %368 ]
  %376 = getelementptr inbounds %struct.c_binding, ptr %374, i64 0, i32 1
  %377 = load ptr, ptr %376, align 8, !tbaa !32
  %378 = load i64, ptr %377, align 8
  %379 = and i64 %378, 65535
  %380 = icmp eq i64 %379, 34
  br i1 %380, label %381, label %402

381:                                              ; preds = %373
  %382 = getelementptr inbounds %struct.tree_common, ptr %377, i64 0, i32 2
  %383 = load ptr, ptr %382, align 8, !tbaa !16
  %384 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %385 = icmp eq ptr %383, %384
  br i1 %385, label %394, label %386

386:                                              ; preds = %381
  %387 = getelementptr inbounds %struct.tree_type, ptr %383, i64 0, i32 2
  %388 = load ptr, ptr %387, align 8, !tbaa !16
  %389 = icmp eq ptr %388, null
  br i1 %389, label %390, label %394

390:                                              ; preds = %386
  %391 = getelementptr inbounds %struct.tree_decl_minimal, ptr %377, i64 0, i32 1
  %392 = load i32, ptr %391, align 8, !tbaa !16
  call void (i32, ptr, ...) @error_at(i32 noundef %392, ptr noundef nonnull @.str.366, ptr noundef nonnull %377) #24
  %393 = load ptr, ptr @global_trees, align 16, !tbaa !5
  store ptr %393, ptr %382, align 8, !tbaa !16
  br label %394

394:                                              ; preds = %390, %386, %381
  %395 = call i32 @pointer_set_contains(ptr noundef %280, ptr noundef nonnull %377) #24
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %402

397:                                              ; preds = %394
  %398 = getelementptr inbounds %struct.tree_decl_minimal, ptr %377, i64 0, i32 1
  %399 = load i32, ptr %398, align 8, !tbaa !16
  call void (i32, ptr, ...) @error_at(i32 noundef %399, ptr noundef nonnull @.str.367, ptr noundef nonnull %377) #24
  %400 = call ptr @tree_cons_stat(ptr noundef nonnull %377, ptr noundef null, ptr noundef null) #24
  %401 = call ptr @chainon(ptr noundef %375, ptr noundef %400) #24
  br label %402

402:                                              ; preds = %397, %394, %373
  %403 = phi ptr [ %375, %373 ], [ %375, %394 ], [ %401, %397 ]
  %404 = getelementptr inbounds %struct.c_binding, ptr %374, i64 0, i32 3
  %405 = load ptr, ptr %404, align 8, !tbaa !5
  %406 = icmp eq ptr %405, null
  br i1 %406, label %407, label %373, !llvm.loop !228

407:                                              ; preds = %402, %368
  %408 = phi ptr [ %279, %368 ], [ %403, %402 ]
  %409 = getelementptr inbounds %struct.tree_decl_non_common, ptr %3, i64 0, i32 2
  store ptr null, ptr %409, align 8, !tbaa !16
  %410 = icmp eq ptr %408, null
  br i1 %410, label %441, label %411

411:                                              ; preds = %407, %416
  %412 = phi ptr [ %418, %416 ], [ %408, %407 ]
  %413 = getelementptr inbounds %struct.tree_list, ptr %412, i64 0, i32 1
  %414 = load ptr, ptr %413, align 8, !tbaa !16
  %415 = icmp eq ptr %414, null
  br i1 %415, label %416, label %420

416:                                              ; preds = %411
  %417 = getelementptr inbounds %struct.tree_common, ptr %412, i64 0, i32 1
  %418 = load ptr, ptr %417, align 8, !tbaa !16
  %419 = icmp eq ptr %418, null
  br i1 %419, label %441, label %411, !llvm.loop !229

420:                                              ; preds = %411
  store ptr %414, ptr %409, align 8, !tbaa !16
  %421 = getelementptr inbounds %struct.tree_common, ptr %412, i64 0, i32 1
  %422 = load ptr, ptr %421, align 8, !tbaa !16
  %423 = icmp eq ptr %422, null
  br i1 %423, label %438, label %424

424:                                              ; preds = %420, %433
  %425 = phi ptr [ %436, %433 ], [ %422, %420 ]
  %426 = phi ptr [ %434, %433 ], [ %414, %420 ]
  %427 = getelementptr inbounds %struct.tree_list, ptr %425, i64 0, i32 1
  %428 = load ptr, ptr %427, align 8, !tbaa !16
  %429 = icmp eq ptr %428, null
  br i1 %429, label %433, label %430

430:                                              ; preds = %424
  %431 = getelementptr inbounds %struct.tree_common, ptr %426, i64 0, i32 1
  store ptr %428, ptr %431, align 8, !tbaa !16
  %432 = load ptr, ptr %427, align 8, !tbaa !16
  br label %433

433:                                              ; preds = %430, %424
  %434 = phi ptr [ %432, %430 ], [ %426, %424 ]
  %435 = getelementptr inbounds %struct.tree_common, ptr %425, i64 0, i32 1
  %436 = load ptr, ptr %435, align 8, !tbaa !16
  %437 = icmp eq ptr %436, null
  br i1 %437, label %438, label %424, !llvm.loop !230

438:                                              ; preds = %433, %420
  %439 = phi ptr [ %414, %420 ], [ %434, %433 ]
  %440 = getelementptr inbounds %struct.tree_common, ptr %439, i64 0, i32 1
  store ptr null, ptr %440, align 8, !tbaa !16
  br label %441

441:                                              ; preds = %416, %438, %407
  call void @pointer_set_destroy(ptr noundef %280) #24
  %442 = load ptr, ptr @current_function_prototype_arg_types, align 8, !tbaa !5
  %443 = icmp eq ptr %442, null
  %444 = load ptr, ptr %409, align 8, !tbaa !16
  %445 = icmp eq ptr %444, null
  br i1 %443, label %447, label %446

446:                                              ; preds = %441
  br i1 %445, label %453, label %464

447:                                              ; preds = %441
  br i1 %445, label %448, label %562

448:                                              ; preds = %447
  %449 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !5
  %450 = call ptr @tree_cons_stat(ptr noundef null, ptr noundef %449, ptr noundef null) #24
  br label %583

451:                                              ; preds = %553
  %452 = icmp eq ptr %556, null
  br i1 %452, label %559, label %453

453:                                              ; preds = %451, %446
  %454 = phi ptr [ %556, %451 ], [ %442, %446 ]
  %455 = getelementptr inbounds %struct.tree_list, ptr %454, i64 0, i32 2
  %456 = load ptr, ptr %455, align 8, !tbaa !16
  %457 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %458 = icmp eq ptr %456, %457
  br i1 %458, label %559, label %459

459:                                              ; preds = %453
  %460 = getelementptr inbounds %struct.tree_type, ptr %456, i64 0, i32 16
  %461 = load ptr, ptr %460, align 8, !tbaa !16
  %462 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !5
  %463 = icmp eq ptr %461, %462
  br i1 %463, label %559, label %475

464:                                              ; preds = %446, %553
  %465 = phi ptr [ %557, %553 ], [ %444, %446 ]
  %466 = phi ptr [ %556, %553 ], [ %442, %446 ]
  %467 = icmp eq ptr %466, null
  br i1 %467, label %475, label %468

468:                                              ; preds = %464
  %469 = getelementptr inbounds %struct.tree_list, ptr %466, i64 0, i32 2
  %470 = load ptr, ptr %469, align 8, !tbaa !16
  %471 = getelementptr inbounds %struct.tree_type, ptr %470, i64 0, i32 16
  %472 = load ptr, ptr %471, align 8, !tbaa !16
  %473 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !5
  %474 = icmp eq ptr %472, %473
  br i1 %474, label %475, label %485

475:                                              ; preds = %468, %464, %459
  %476 = load i8, ptr @current_function_prototype_built_in, align 1, !tbaa !16
  %477 = icmp eq i8 %476, 0
  br i1 %477, label %482, label %478

478:                                              ; preds = %475
  %479 = getelementptr inbounds %struct.tree_decl_minimal, ptr %3, i64 0, i32 1
  %480 = load i32, ptr %479, align 8, !tbaa !16
  %481 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %480, i32 noundef 0, ptr noundef nonnull @.str.368) #24
  br label %559

482:                                              ; preds = %475
  %483 = load i32, ptr @input_location, align 4, !tbaa !20
  call void (i32, ptr, ...) @error_at(i32 noundef %483, ptr noundef nonnull @.str.369) #24
  %484 = load i32, ptr @current_function_prototype_locus, align 4, !tbaa !20
  call void (i32, ptr, ...) @error_at(i32 noundef %484, ptr noundef nonnull @.str.370) #24
  br label %559

485:                                              ; preds = %468
  %486 = getelementptr inbounds %struct.tree_common, ptr %465, i64 0, i32 2
  %487 = load ptr, ptr %486, align 8, !tbaa !16
  %488 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %489 = icmp eq ptr %487, %488
  br i1 %489, label %553, label %490

490:                                              ; preds = %485
  %491 = getelementptr inbounds %struct.tree_common, ptr %466, i64 0, i32 2
  %492 = load ptr, ptr %491, align 8, !tbaa !16
  %493 = icmp eq ptr %492, %488
  br i1 %493, label %553, label %494

494:                                              ; preds = %490
  %495 = getelementptr inbounds %struct.tree_decl_common, ptr %465, i64 0, i32 5
  %496 = load ptr, ptr %495, align 8, !tbaa !16
  %497 = getelementptr inbounds %struct.tree_type, ptr %496, i64 0, i32 16
  %498 = load ptr, ptr %497, align 8, !tbaa !16
  %499 = call i32 @comptypes(ptr noundef %498, ptr noundef %472) #24
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %553

501:                                              ; preds = %494
  %502 = load ptr, ptr %486, align 8, !tbaa !16
  %503 = getelementptr inbounds %struct.tree_type, ptr %502, i64 0, i32 16
  %504 = load ptr, ptr %503, align 8, !tbaa !16
  %505 = load ptr, ptr %469, align 8, !tbaa !16
  %506 = getelementptr inbounds %struct.tree_type, ptr %505, i64 0, i32 16
  %507 = load ptr, ptr %506, align 8, !tbaa !16
  %508 = icmp eq ptr %504, %507
  br i1 %508, label %509, label %544

509:                                              ; preds = %501
  store ptr %502, ptr %495, align 8, !tbaa !16
  %510 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 88, i32 1), align 8, !tbaa !168
  %511 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %512 = getelementptr inbounds %struct.tree_common, ptr %511, i64 0, i32 2
  %513 = load ptr, ptr %512, align 8, !tbaa !16
  %514 = call zeroext i8 %510(ptr noundef %513) #24
  %515 = icmp eq i8 %514, 0
  br i1 %515, label %533, label %516

516:                                              ; preds = %509
  %517 = load ptr, ptr %486, align 8, !tbaa !16
  %518 = load i64, ptr %517, align 8
  %519 = trunc i64 %518 to i32
  %520 = and i32 %519, 65535
  %521 = add nsw i32 %520, -6
  %522 = icmp ult i32 %521, 3
  br i1 %522, label %523, label %533

523:                                              ; preds = %516
  %524 = getelementptr inbounds %struct.tree_type, ptr %517, i64 0, i32 6
  %525 = load i32, ptr %524, align 4
  %526 = and i32 %525, 1023
  %527 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %528 = getelementptr inbounds %struct.tree_type, ptr %527, i64 0, i32 6
  %529 = load i32, ptr %528, align 4
  %530 = and i32 %529, 1023
  %531 = icmp ult i32 %526, %530
  br i1 %531, label %532, label %533

532:                                              ; preds = %523
  store ptr %527, ptr %495, align 8, !tbaa !16
  br label %533

533:                                              ; preds = %532, %523, %516, %509
  %534 = load i8, ptr @current_function_prototype_built_in, align 1, !tbaa !16
  %535 = icmp eq i8 %534, 0
  %536 = getelementptr inbounds %struct.tree_decl_minimal, ptr %465, i64 0, i32 1
  %537 = load i32, ptr %536, align 8, !tbaa !16
  br i1 %535, label %540, label %538

538:                                              ; preds = %533
  %539 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %537, i32 noundef 834, ptr noundef nonnull @.str.371, ptr noundef nonnull %465) #24
  br label %553

540:                                              ; preds = %533
  %541 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %537, i32 noundef 834, ptr noundef nonnull @.str.372, ptr noundef nonnull %465) #24
  %542 = load i32, ptr @current_function_prototype_locus, align 4, !tbaa !20
  %543 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %542, i32 noundef 834, ptr noundef nonnull @.str.370) #24
  br label %553

544:                                              ; preds = %501
  %545 = load i8, ptr @current_function_prototype_built_in, align 1, !tbaa !16
  %546 = icmp eq i8 %545, 0
  %547 = getelementptr inbounds %struct.tree_decl_minimal, ptr %465, i64 0, i32 1
  %548 = load i32, ptr %547, align 8, !tbaa !16
  br i1 %546, label %551, label %549

549:                                              ; preds = %544
  %550 = call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %548, i32 noundef 0, ptr noundef nonnull @.str.373, ptr noundef nonnull %465) #24
  br label %553

551:                                              ; preds = %544
  call void (i32, ptr, ...) @error_at(i32 noundef %548, ptr noundef nonnull @.str.374, ptr noundef nonnull %465) #24
  %552 = load i32, ptr @current_function_prototype_locus, align 4, !tbaa !20
  call void (i32, ptr, ...) @error_at(i32 noundef %552, ptr noundef nonnull @.str.370) #24
  br label %553

553:                                              ; preds = %551, %549, %540, %538, %494, %490, %485
  %554 = getelementptr inbounds %struct.tree_common, ptr %465, i64 0, i32 1
  %555 = getelementptr inbounds %struct.tree_common, ptr %466, i64 0, i32 1
  %556 = load ptr, ptr %555, align 8, !tbaa !16
  %557 = load ptr, ptr %554, align 8, !tbaa !16
  %558 = icmp eq ptr %557, null
  br i1 %558, label %451, label %464, !llvm.loop !231

559:                                              ; preds = %482, %478, %459, %453, %451
  %560 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %561 = load ptr, ptr %560, align 8, !tbaa !16
  br label %588

562:                                              ; preds = %447, %572
  %563 = phi ptr [ %575, %572 ], [ %444, %447 ]
  %564 = phi ptr [ %568, %572 ], [ null, %447 ]
  %565 = phi ptr [ %573, %572 ], [ null, %447 ]
  %566 = getelementptr inbounds %struct.tree_decl_common, ptr %563, i64 0, i32 5
  %567 = load ptr, ptr %566, align 8, !tbaa !16
  %568 = call ptr @tree_cons_stat(ptr noundef null, ptr noundef %567, ptr noundef null) #24
  %569 = icmp eq ptr %564, null
  br i1 %569, label %572, label %570

570:                                              ; preds = %562
  %571 = getelementptr inbounds %struct.tree_common, ptr %564, i64 0, i32 1
  store ptr %568, ptr %571, align 8, !tbaa !16
  br label %572

572:                                              ; preds = %570, %562
  %573 = phi ptr [ %565, %570 ], [ %568, %562 ]
  %574 = getelementptr inbounds %struct.tree_common, ptr %563, i64 0, i32 1
  %575 = load ptr, ptr %574, align 8, !tbaa !16
  %576 = icmp eq ptr %575, null
  br i1 %576, label %577, label %562, !llvm.loop !232

577:                                              ; preds = %572
  %578 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !5
  %579 = call ptr @tree_cons_stat(ptr noundef null, ptr noundef %578, ptr noundef null) #24
  %580 = icmp eq ptr %568, null
  br i1 %580, label %583, label %581

581:                                              ; preds = %577
  %582 = getelementptr inbounds %struct.tree_common, ptr %568, i64 0, i32 1
  store ptr %579, ptr %582, align 8, !tbaa !16
  br label %583

583:                                              ; preds = %581, %577, %448
  %584 = phi ptr [ %573, %581 ], [ %579, %577 ], [ %450, %448 ]
  %585 = getelementptr inbounds %struct.tree_common, ptr %3, i64 0, i32 2
  %586 = load ptr, ptr %585, align 8, !tbaa !16
  %587 = call ptr @build_variant_type_copy(ptr noundef %586) #24
  store ptr %587, ptr %585, align 8, !tbaa !16
  br label %588

588:                                              ; preds = %559, %583
  %589 = phi ptr [ %587, %583 ], [ %561, %559 ]
  %590 = phi ptr [ %584, %583 ], [ null, %559 ]
  %591 = getelementptr inbounds %struct.tree_type, ptr %589, i64 0, i32 17
  store ptr %590, ptr %591, align 8, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %1)
  br label %592

592:                                              ; preds = %588, %277
  store i1 true, ptr @next_is_function_body, align 1
  %593 = zext i1 %7 to i32
  call void @gen_aux_info_record(ptr noundef %3, i32 noundef 1, i32 noundef 0, i32 noundef %593) #24
  call void @allocate_struct_function(ptr noundef %3, i8 noundef zeroext 0) #24
  %594 = call ptr @push_stmt_list() #24
  %595 = getelementptr inbounds %struct.tree_decl_non_common, ptr %3, i64 0, i32 1
  store ptr %594, ptr %595, align 8, !tbaa !16
  %596 = call ptr @get_pending_sizes() #24
  %597 = call ptr @nreverse(ptr noundef %596) #24
  %598 = icmp eq ptr %597, null
  br i1 %598, label %628, label %599

599:                                              ; preds = %592, %624
  %600 = phi ptr [ %626, %624 ], [ %597, %592 ]
  %601 = getelementptr inbounds %struct.tree_list, ptr %600, i64 0, i32 2
  %602 = load ptr, ptr %601, align 8, !tbaa !16
  %603 = load i64, ptr %602, align 8
  %604 = and i64 %603, 65535
  %605 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %604
  %606 = load i32, ptr %605, align 4, !tbaa !16
  %607 = icmp ugt i32 %606, 3
  br i1 %607, label %608, label %618

608:                                              ; preds = %599
  %609 = icmp ult i32 %606, 11
  %610 = icmp ne i64 %604, 133
  %611 = and i1 %609, %610
  br i1 %611, label %612, label %618

612:                                              ; preds = %608
  %613 = getelementptr inbounds %struct.tree_exp, ptr %602, i64 0, i32 1
  %614 = load i32, ptr %613, align 8, !tbaa !16
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %616, label %618

616:                                              ; preds = %612
  %617 = load i32, ptr @input_location, align 4, !tbaa !20
  store i32 %617, ptr %613, align 8, !tbaa !16
  br label %618

618:                                              ; preds = %616, %612, %608, %599
  %619 = trunc i64 %603 to i16
  switch i16 %619, label %624 [
    i16 139, label %620
    i16 133, label %620
  ]

620:                                              ; preds = %618, %618
  %621 = load ptr, ptr @c_stmt_tree, align 8, !tbaa !23
  %622 = load i64, ptr %621, align 8
  %623 = or i64 %622, 68719476736
  store i64 %623, ptr %621, align 8
  br label %624

624:                                              ; preds = %618, %620
  call void @append_to_statement_list_force(ptr noundef nonnull %602, ptr noundef nonnull @c_stmt_tree) #24
  %625 = getelementptr inbounds %struct.tree_common, ptr %600, i64 0, i32 1
  %626 = load ptr, ptr %625, align 8, !tbaa !16
  %627 = icmp eq ptr %626, null
  br i1 %627, label %628, label %599, !llvm.loop !233

628:                                              ; preds = %624, %592
  %629 = load ptr, ptr @cfun, align 8, !tbaa !5
  %630 = getelementptr inbounds %struct.function, ptr %629, i64 0, i32 20
  %631 = load i32, ptr %630, align 8
  %632 = or i32 %631, 8388608
  store i32 %632, ptr %630, align 8
  ret void
}

declare void @allocate_struct_function(ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

declare ptr @nreverse(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @finish_function() local_unnamed_addr #9 {
  %1 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %2 = load i64, ptr %1, align 8
  %3 = and i64 %2, 65535
  %4 = icmp eq i64 %3, 29
  br i1 %4, label %5, label %40

5:                                                ; preds = %0
  %6 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 88, i32 1), align 8, !tbaa !168
  %7 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !16
  %9 = tail call zeroext i8 %6(ptr noundef %8) #24
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %40, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !16
  %14 = icmp eq ptr %13, null
  br i1 %14, label %40, label %15

15:                                               ; preds = %11
  %16 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8
  %17 = getelementptr inbounds %struct.tree_type, ptr %16, i64 0, i32 6
  br label %18

18:                                               ; preds = %15, %36
  %19 = phi ptr [ %13, %15 ], [ %38, %36 ]
  %20 = getelementptr inbounds %struct.tree_common, ptr %19, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !16
  %22 = load i64, ptr %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 65535
  %25 = add nsw i32 %24, -6
  %26 = icmp ult i32 %25, 3
  br i1 %26, label %27, label %36

27:                                               ; preds = %18
  %28 = getelementptr inbounds %struct.tree_type, ptr %21, i64 0, i32 6
  %29 = load i32, ptr %28, align 4
  %30 = and i32 %29, 1023
  %31 = load i32, ptr %17, align 4
  %32 = and i32 %31, 1023
  %33 = icmp ult i32 %30, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.tree_decl_common, ptr %19, i64 0, i32 5
  store ptr %16, ptr %35, align 8, !tbaa !16
  br label %36

36:                                               ; preds = %18, %34, %27
  %37 = getelementptr inbounds %struct.tree_common, ptr %19, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !16
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %18, !llvm.loop !234

40:                                               ; preds = %36, %11, %5, %0
  %41 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  %42 = load ptr, ptr %41, align 8, !tbaa !16
  %43 = icmp eq ptr %42, null
  %44 = load ptr, ptr @global_trees, align 16
  %45 = icmp eq ptr %42, %44
  %46 = select i1 %43, i1 true, i1 %45
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.tree_block, ptr %42, i64 0, i32 6
  store ptr %1, ptr %48, align 8, !tbaa !16
  br label %49

49:                                               ; preds = %47, %40
  %50 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 3
  %51 = load ptr, ptr %50, align 8, !tbaa !16
  %52 = icmp eq ptr %51, null
  %53 = icmp eq ptr %51, %44
  %54 = select i1 %52, i1 true, i1 %53
  br i1 %54, label %57, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct.tree_decl_minimal, ptr %51, i64 0, i32 4
  store ptr %1, ptr %56, align 8, !tbaa !16
  br label %57

57:                                               ; preds = %55, %49
  %58 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !16
  %60 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 56), align 16, !tbaa !5
  %61 = icmp eq ptr %59, %60
  %62 = load i32, ptr @flag_hosted, align 4
  %63 = icmp ne i32 %62, 0
  %64 = select i1 %61, i1 %63, i1 false
  br i1 %64, label %65, label %80

65:                                               ; preds = %57
  %66 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !16
  %68 = getelementptr inbounds %struct.tree_common, ptr %67, i64 0, i32 2
  %69 = load ptr, ptr %68, align 8, !tbaa !16
  %70 = getelementptr inbounds %struct.tree_type, ptr %69, i64 0, i32 16
  %71 = load ptr, ptr %70, align 8, !tbaa !16
  %72 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  %73 = icmp eq ptr %71, %72
  %74 = load i32, ptr @flag_isoc99, align 4
  %75 = icmp ne i32 %74, 0
  %76 = select i1 %73, i1 %75, i1 false
  br i1 %76, label %77, label %80

77:                                               ; preds = %65
  %78 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 13), align 8, !tbaa !5
  %79 = tail call ptr @c_finish_return(i32 noundef 1, ptr noundef %78, ptr noundef null) #24
  br label %80

80:                                               ; preds = %77, %65, %57
  %81 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 1
  %82 = load ptr, ptr %81, align 8, !tbaa !16
  %83 = tail call ptr @pop_stmt_list(ptr noundef %82) #24
  store ptr %83, ptr %81, align 8, !tbaa !16
  tail call void @finish_fname_decls() #24
  %84 = load i32, ptr @warn_return_type, align 4, !tbaa !20
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %122, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  %88 = load ptr, ptr %87, align 8, !tbaa !16
  %89 = getelementptr inbounds %struct.tree_common, ptr %88, i64 0, i32 2
  %90 = load ptr, ptr %89, align 8, !tbaa !16
  %91 = load i64, ptr %90, align 8
  %92 = and i64 %91, 65535
  %93 = icmp eq i64 %92, 19
  %94 = load i32, ptr @current_function_returns_value, align 4
  %95 = icmp ne i32 %94, 0
  %96 = select i1 %93, i1 true, i1 %95
  %97 = load i32, ptr @current_function_returns_null, align 4
  %98 = icmp ne i32 %97, 0
  %99 = select i1 %96, i1 true, i1 %98
  %100 = load i32, ptr @current_function_returns_abnormally, align 4
  %101 = icmp ne i32 %100, 0
  %102 = select i1 %99, i1 true, i1 %101
  br i1 %102, label %122, label %103

103:                                              ; preds = %86
  %104 = load i64, ptr %1, align 8
  %105 = and i64 %104, 524288
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %122

107:                                              ; preds = %103
  %108 = load ptr, ptr %58, align 8, !tbaa !16
  %109 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 56), align 16, !tbaa !5
  %110 = icmp eq ptr %108, %109
  br i1 %110, label %122, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %113 = load i64, ptr %112, align 8
  %114 = and i64 %113, 65536
  %115 = and i64 %104, 134217728
  %116 = or i64 %114, %115
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %111
  %119 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 172, ptr noundef nonnull @.str.121) #24
  %120 = load i64, ptr %1, align 8
  %121 = or i64 %120, 8388608
  store i64 %121, ptr %1, align 8
  br label %122

122:                                              ; preds = %118, %111, %107, %103, %86, %80
  %123 = load i32, ptr @input_location, align 4, !tbaa !20
  %124 = load ptr, ptr @cfun, align 8, !tbaa !5
  %125 = getelementptr inbounds %struct.function, ptr %124, i64 0, i32 16
  store i32 %123, ptr %125, align 4, !tbaa !235
  %126 = tail call zeroext i8 @c_determine_visibility(ptr noundef nonnull %1) #24
  %127 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 2
  %128 = load i64, ptr %127, align 8
  %129 = and i64 %128, 33554432
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %138, label %131

131:                                              ; preds = %122
  %132 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 5
  %133 = load i32, ptr %132, align 8
  %134 = and i32 %133, 2097152
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %131
  %137 = or i32 %133, 67108864
  store i32 %137, ptr %132, align 8
  br label %138

138:                                              ; preds = %136, %131, %122
  %139 = load ptr, ptr %41, align 8, !tbaa !16
  %140 = icmp eq ptr %139, null
  br i1 %140, label %157, label %141

141:                                              ; preds = %138
  %142 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %143 = icmp eq ptr %139, %142
  %144 = load i1, ptr @undef_nested_function, align 1
  %145 = select i1 %143, i1 true, i1 %144
  br i1 %145, label %157, label %146

146:                                              ; preds = %141
  %147 = tail call ptr @decl_function_context(ptr noundef nonnull %1) #24
  %148 = icmp eq ptr %147, null
  br i1 %148, label %149, label %155

149:                                              ; preds = %146
  %150 = tail call i32 @invoke_plugin_callbacks(i32 noundef 3, ptr noundef nonnull %1) #24
  tail call void @c_genericize(ptr noundef nonnull %1) #24
  %151 = load i8, ptr @cgraph_global_info_ready, align 1, !tbaa !16
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %154, label %153

153:                                              ; preds = %149
  tail call void @cgraph_add_new_function(ptr noundef nonnull %1, i8 noundef zeroext 0) #24
  br label %162

154:                                              ; preds = %149
  tail call void @cgraph_finalize_function(ptr noundef nonnull %1, i8 noundef zeroext 0) #24
  br label %157

155:                                              ; preds = %146
  %156 = tail call ptr @cgraph_node(ptr noundef nonnull %1) #24
  br label %157

157:                                              ; preds = %154, %155, %141, %138
  %158 = tail call ptr @decl_function_context(ptr noundef nonnull %1) #24
  %159 = icmp eq ptr %158, null
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  store i1 false, ptr @undef_nested_function, align 1
  br label %161

161:                                              ; preds = %160, %157
  tail call void @set_cfun(ptr noundef null) #24
  store ptr null, ptr @current_function_decl, align 8, !tbaa !5
  br label %162

162:                                              ; preds = %161, %153
  ret void
}

declare ptr @c_finish_return(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @pop_stmt_list(ptr noundef) local_unnamed_addr #3

declare ptr @decl_function_context(ptr noundef) local_unnamed_addr #3

declare i32 @invoke_plugin_callbacks(i32 noundef, ptr noundef) local_unnamed_addr #3

declare void @c_genericize(ptr noundef) local_unnamed_addr #3

declare void @cgraph_add_new_function(ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

declare void @cgraph_finalize_function(ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

declare ptr @cgraph_node(ptr noundef) local_unnamed_addr #3

declare void @set_cfun(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @check_for_loop_decls(i32 noundef %0) local_unnamed_addr #9 {
  %2 = load i32, ptr @flag_isoc99, align 4, !tbaa !20
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.122) #24
  %5 = load i1, ptr @check_for_loop_decls.hint, align 1
  br i1 %5, label %52, label %6

6:                                                ; preds = %4
  tail call void (i32, ptr, ...) @inform(i32 noundef %0, ptr noundef nonnull @.str.123) #24
  store i1 true, ptr @check_for_loop_decls.hint, align 1
  br label %52

7:                                                ; preds = %1
  %8 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.c_scope, ptr %8, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  %11 = icmp eq ptr %10, null
  br i1 %11, label %52, label %12

12:                                               ; preds = %7, %42
  %13 = phi ptr [ %47, %42 ], [ %10, %7 ]
  %14 = phi ptr [ %44, %42 ], [ null, %7 ]
  %15 = phi i32 [ %45, %42 ], [ 0, %7 ]
  %16 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !51
  %18 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !32
  %20 = icmp eq ptr %17, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %12
  %22 = load i64, ptr %19, align 8
  %23 = trunc i64 %22 to i16
  switch i16 %23, label %39 [
    i16 32, label %24
    i16 16, label %36
    i16 17, label %37
    i16 6, label %38
  ]

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.tree_decl_minimal, ptr %19, i64 0, i32 1
  %26 = load i32, ptr %25, align 8, !tbaa !16
  %27 = and i64 %22, 67108864
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %24
  tail call void (i32, ptr, ...) @error_at(i32 noundef %26, ptr noundef nonnull @.str.124, ptr noundef nonnull %19) #24
  br label %40

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.tree_decl_common, ptr %19, i64 0, i32 2
  %32 = load i64, ptr %31, align 8
  %33 = and i64 %32, 33554432
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  tail call void (i32, ptr, ...) @error_at(i32 noundef %26, ptr noundef nonnull @.str.125, ptr noundef nonnull %19) #24
  br label %40

36:                                               ; preds = %21
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.126, ptr noundef nonnull %17) #24
  br label %40

37:                                               ; preds = %21
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.127, ptr noundef nonnull %17) #24
  br label %40

38:                                               ; preds = %21
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.128, ptr noundef nonnull %17) #24
  br label %40

39:                                               ; preds = %21
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.129, ptr noundef nonnull %19) #24
  br label %40

40:                                               ; preds = %29, %35, %30, %39, %38, %37, %36
  %41 = add nsw i32 %15, 1
  br label %42

42:                                               ; preds = %12, %40
  %43 = phi i32 [ %41, %40 ], [ %15, %12 ]
  %44 = phi ptr [ %19, %40 ], [ %14, %12 ]
  %45 = freeze i32 %43
  %46 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 3
  %47 = load ptr, ptr %46, align 8, !tbaa !5
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %12, !llvm.loop !237

49:                                               ; preds = %42
  %50 = icmp eq i32 %45, 1
  %51 = select i1 %50, ptr %44, ptr null
  br label %52

52:                                               ; preds = %49, %7, %4, %6
  %53 = phi ptr [ null, %6 ], [ null, %4 ], [ null, %7 ], [ %51, %49 ]
  ret ptr %53
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @c_push_function_context() local_unnamed_addr #9 {
  %1 = tail call ptr @ggc_alloc_stat(i64 noundef 64) #24
  %2 = load ptr, ptr @cfun, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.function, ptr %2, i64 0, i32 11
  store ptr %1, ptr %3, align 8, !tbaa !238
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 8 dereferenceable(16) @c_stmt_tree, i64 16, i1 false), !tbaa.struct !239
  %4 = load ptr, ptr @c_break_label, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.language_function, ptr %1, i64 0, i32 1
  store ptr %4, ptr %5, align 8, !tbaa !240
  %6 = load ptr, ptr @c_cont_label, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.language_function, ptr %1, i64 0, i32 2
  store ptr %6, ptr %7, align 8, !tbaa !243
  %8 = load ptr, ptr @c_switch_stack, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.language_function, ptr %1, i64 0, i32 3
  store ptr %8, ptr %9, align 8, !tbaa !244
  %10 = load ptr, ptr @current_function_arg_info, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.language_function, ptr %1, i64 0, i32 4
  store ptr %10, ptr %11, align 8, !tbaa !245
  %12 = load i32, ptr @current_function_returns_value, align 4, !tbaa !20
  %13 = getelementptr inbounds %struct.language_function, ptr %1, i64 0, i32 5
  store i32 %12, ptr %13, align 8, !tbaa !246
  %14 = load i32, ptr @current_function_returns_null, align 4, !tbaa !20
  %15 = getelementptr inbounds %struct.language_function, ptr %1, i64 0, i32 6
  store i32 %14, ptr %15, align 4, !tbaa !247
  %16 = load i32, ptr @current_function_returns_abnormally, align 4, !tbaa !20
  %17 = getelementptr inbounds %struct.language_function, ptr %1, i64 0, i32 7
  store i32 %16, ptr %17, align 8, !tbaa !248
  %18 = load i32, ptr @warn_about_return_type, align 4, !tbaa !20
  %19 = getelementptr inbounds %struct.language_function, ptr %1, i64 0, i32 8
  store i32 %18, ptr %19, align 4, !tbaa !249
  tail call void @push_function_context() #24
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #20

declare void @push_function_context() local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @c_pop_function_context() local_unnamed_addr #9 {
  tail call void @pop_function_context() #24
  %1 = load ptr, ptr @cfun, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.function, ptr %1, i64 0, i32 11
  %3 = load ptr, ptr %2, align 8, !tbaa !238
  store ptr null, ptr %2, align 8, !tbaa !238
  %4 = load ptr, ptr @current_function_decl, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.tree_function_decl, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !16
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %16

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.tree_decl_non_common, ptr %4, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !16
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %14 = getelementptr inbounds %struct.tree_decl_common, ptr %4, i64 0, i32 5
  store ptr %13, ptr %14, align 8, !tbaa !16
  %15 = getelementptr inbounds %struct.tree_decl_non_common, ptr %4, i64 0, i32 2
  store ptr null, ptr %15, align 8, !tbaa !16
  br label %16

16:                                               ; preds = %12, %8, %0
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) @c_stmt_tree, ptr noundef nonnull align 8 dereferenceable(16) %3, i64 16, i1 false), !tbaa.struct !239
  %17 = getelementptr inbounds %struct.language_function, ptr %3, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !240
  store ptr %18, ptr @c_break_label, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.language_function, ptr %3, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !243
  store ptr %20, ptr @c_cont_label, align 8, !tbaa !5
  %21 = getelementptr inbounds %struct.language_function, ptr %3, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !244
  store ptr %22, ptr @c_switch_stack, align 8, !tbaa !5
  %23 = getelementptr inbounds %struct.language_function, ptr %3, i64 0, i32 4
  %24 = load ptr, ptr %23, align 8, !tbaa !245
  store ptr %24, ptr @current_function_arg_info, align 8, !tbaa !5
  %25 = getelementptr inbounds %struct.language_function, ptr %3, i64 0, i32 5
  %26 = load i32, ptr %25, align 8, !tbaa !246
  store i32 %26, ptr @current_function_returns_value, align 4, !tbaa !20
  %27 = getelementptr inbounds %struct.language_function, ptr %3, i64 0, i32 6
  %28 = load i32, ptr %27, align 4, !tbaa !247
  store i32 %28, ptr @current_function_returns_null, align 4, !tbaa !20
  %29 = getelementptr inbounds %struct.language_function, ptr %3, i64 0, i32 7
  %30 = load i32, ptr %29, align 8, !tbaa !248
  store i32 %30, ptr @current_function_returns_abnormally, align 4, !tbaa !20
  %31 = getelementptr inbounds %struct.language_function, ptr %3, i64 0, i32 8
  %32 = load i32, ptr %31, align 4, !tbaa !249
  store i32 %32, ptr @warn_about_return_type, align 4, !tbaa !20
  ret void
}

declare void @pop_function_context() local_unnamed_addr #3

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @identifier_global_value(ptr nocapture noundef readonly %0) local_unnamed_addr #21 {
  %2 = getelementptr inbounds %struct.lang_identifier, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = icmp eq ptr %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1, %14
  %6 = phi ptr [ %16, %14 ], [ %3, %1 ]
  %7 = getelementptr inbounds %struct.c_binding, ptr %6, i64 0, i32 5
  %8 = load i32, ptr %7, align 8
  %9 = and i32 %8, 268435454
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.c_binding, ptr %6, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !32
  br label %18

14:                                               ; preds = %5
  %15 = getelementptr inbounds %struct.c_binding, ptr %6, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %5, !llvm.loop !167

18:                                               ; preds = %14, %1, %11
  %19 = phi ptr [ %13, %11 ], [ null, %1 ], [ null, %14 ]
  ret ptr %19
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @record_builtin_type(i32 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = load ptr, ptr @ridpointers, align 8, !tbaa !5
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds ptr, ptr %6, i64 %7
  %9 = load ptr, ptr %8, align 8, !tbaa !5
  br label %12

10:                                               ; preds = %3
  %11 = tail call ptr @get_identifier(ptr noundef nonnull %1) #24
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi ptr [ %9, %5 ], [ %11, %10 ]
  %14 = tail call ptr @build_decl_stat(i32 noundef 0, i32 noundef 35, ptr noundef %13, ptr noundef %2) #24
  %15 = tail call ptr @pushdecl(ptr noundef %14)
  %16 = load ptr, ptr @debug_hooks, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.gcc_debug_hooks, ptr %16, i64 0, i32 18
  %18 = load ptr, ptr %17, align 8, !tbaa !250
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %12
  tail call void %18(ptr noundef %14, i32 noundef 0) #24
  br label %21

21:                                               ; preds = %20, %12
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_void_list_node() local_unnamed_addr #9 {
  %1 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !5
  %2 = tail call ptr @build_tree_list_stat(ptr noundef null, ptr noundef %1) #24
  ret ptr %2
}

declare ptr @build_tree_list_stat(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_c_parm(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #9 {
  store i64 24, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %4 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %5 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = icmp slt i64 %8, 24
  br i1 %9, label %10, label %13

10:                                               ; preds = %3
  tail call void @_obstack_newchunk(ptr noundef nonnull @parser_obstack, i32 noundef 24) #24
  %11 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %12 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  br label %13

13:                                               ; preds = %3, %10
  %14 = phi ptr [ %5, %3 ], [ %12, %10 ]
  %15 = phi i64 [ 24, %3 ], [ %11, %10 ]
  %16 = getelementptr inbounds i8, ptr %14, i64 %15
  %17 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  %18 = icmp eq ptr %16, %17
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  %21 = or i8 %20, 2
  store i8 %21, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  br label %22

22:                                               ; preds = %13, %19
  %23 = ptrtoint ptr %17 to i64
  store i64 %23, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %24 = ptrtoint ptr %16 to i64
  %25 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 6), align 8, !tbaa !139
  %26 = sext i32 %25 to i64
  %27 = add nsw i64 %26, %24
  %28 = xor i32 %25, -1
  %29 = sext i32 %28 to i64
  %30 = and i64 %27, %29
  %31 = inttoptr i64 %30 to ptr
  %32 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 1), align 8, !tbaa !140
  %33 = ptrtoint ptr %32 to i64
  %34 = sub i64 %30, %33
  %35 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %36 = ptrtoint ptr %35 to i64
  %37 = sub i64 %36, %33
  %38 = icmp sgt i64 %34, %37
  %39 = select i1 %38, ptr %35, ptr %31
  store ptr %39, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8
  store ptr %39, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  store ptr %0, ptr %17, align 8, !tbaa !178
  %40 = getelementptr inbounds %struct.c_parm, ptr %17, i64 0, i32 1
  store ptr %1, ptr %40, align 8, !tbaa !175
  %41 = getelementptr inbounds %struct.c_parm, ptr %17, i64 0, i32 2
  store ptr %2, ptr %41, align 8, !tbaa !177
  ret ptr %17
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_attrs_declarator(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  store i64 56, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %3 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %4 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  %5 = ptrtoint ptr %3 to i64
  %6 = ptrtoint ptr %4 to i64
  %7 = sub i64 %5, %6
  %8 = icmp slt i64 %7, 56
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  tail call void @_obstack_newchunk(ptr noundef nonnull @parser_obstack, i32 noundef 56) #24
  %10 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %11 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi ptr [ %4, %2 ], [ %11, %9 ]
  %14 = phi i64 [ 56, %2 ], [ %10, %9 ]
  %15 = getelementptr inbounds i8, ptr %13, i64 %14
  %16 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  %17 = icmp eq ptr %15, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  %20 = or i8 %19, 2
  store i8 %20, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  br label %21

21:                                               ; preds = %12, %18
  %22 = ptrtoint ptr %16 to i64
  store i64 %22, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %23 = ptrtoint ptr %15 to i64
  %24 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 6), align 8, !tbaa !139
  %25 = sext i32 %24 to i64
  %26 = add nsw i64 %25, %23
  %27 = xor i32 %24, -1
  %28 = sext i32 %27 to i64
  %29 = and i64 %26, %28
  %30 = inttoptr i64 %29 to ptr
  %31 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 1), align 8, !tbaa !140
  %32 = ptrtoint ptr %31 to i64
  %33 = sub i64 %29, %32
  %34 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %35 = ptrtoint ptr %34 to i64
  %36 = sub i64 %35, %32
  %37 = icmp sgt i64 %33, %36
  %38 = select i1 %37, ptr %34, ptr %30
  store ptr %38, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8
  store ptr %38, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  store i32 4, ptr %16, align 8, !tbaa !143
  %39 = getelementptr inbounds %struct.c_declarator, ptr %16, i64 0, i32 1
  store ptr %1, ptr %39, align 8, !tbaa !144
  %40 = getelementptr inbounds %struct.c_declarator, ptr %16, i64 0, i32 3
  store ptr %0, ptr %40, align 8, !tbaa !16
  ret ptr %16
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_function_declarator(ptr noundef %0, ptr noundef %1) local_unnamed_addr #9 {
  store i64 56, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %3 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %4 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  %5 = ptrtoint ptr %3 to i64
  %6 = ptrtoint ptr %4 to i64
  %7 = sub i64 %5, %6
  %8 = icmp slt i64 %7, 56
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  tail call void @_obstack_newchunk(ptr noundef nonnull @parser_obstack, i32 noundef 56) #24
  %10 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %11 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi ptr [ %4, %2 ], [ %11, %9 ]
  %14 = phi i64 [ 56, %2 ], [ %10, %9 ]
  %15 = getelementptr inbounds i8, ptr %13, i64 %14
  %16 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  %17 = icmp eq ptr %15, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  %20 = or i8 %19, 2
  store i8 %20, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  br label %21

21:                                               ; preds = %12, %18
  %22 = ptrtoint ptr %16 to i64
  store i64 %22, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %23 = ptrtoint ptr %15 to i64
  %24 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 6), align 8, !tbaa !139
  %25 = sext i32 %24 to i64
  %26 = add nsw i64 %25, %23
  %27 = xor i32 %24, -1
  %28 = sext i32 %27 to i64
  %29 = and i64 %26, %28
  %30 = inttoptr i64 %29 to ptr
  %31 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 1), align 8, !tbaa !140
  %32 = ptrtoint ptr %31 to i64
  %33 = sub i64 %29, %32
  %34 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %35 = ptrtoint ptr %34 to i64
  %36 = sub i64 %35, %32
  %37 = icmp sgt i64 %33, %36
  %38 = select i1 %37, ptr %34, ptr %30
  store ptr %38, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8
  store ptr %38, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  store i32 1, ptr %16, align 8, !tbaa !143
  %39 = getelementptr inbounds %struct.c_declarator, ptr %16, i64 0, i32 1
  store ptr %1, ptr %39, align 8, !tbaa !144
  %40 = getelementptr inbounds %struct.c_declarator, ptr %16, i64 0, i32 3
  store ptr %0, ptr %40, align 8, !tbaa !16
  ret ptr %16
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_id_declarator(ptr noundef %0) local_unnamed_addr #9 {
  store i64 56, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %2 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %3 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  %4 = ptrtoint ptr %2 to i64
  %5 = ptrtoint ptr %3 to i64
  %6 = sub i64 %4, %5
  %7 = icmp slt i64 %6, 56
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  tail call void @_obstack_newchunk(ptr noundef nonnull @parser_obstack, i32 noundef 56) #24
  %9 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %10 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi ptr [ %3, %1 ], [ %10, %8 ]
  %13 = phi i64 [ 56, %1 ], [ %9, %8 ]
  %14 = getelementptr inbounds i8, ptr %12, i64 %13
  %15 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  %16 = icmp eq ptr %14, %15
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  %19 = or i8 %18, 2
  store i8 %19, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  br label %20

20:                                               ; preds = %11, %17
  %21 = ptrtoint ptr %15 to i64
  store i64 %21, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %22 = ptrtoint ptr %14 to i64
  %23 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 6), align 8, !tbaa !139
  %24 = sext i32 %23 to i64
  %25 = add nsw i64 %24, %22
  %26 = xor i32 %23, -1
  %27 = sext i32 %26 to i64
  %28 = and i64 %25, %27
  %29 = inttoptr i64 %28 to ptr
  %30 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 1), align 8, !tbaa !140
  %31 = ptrtoint ptr %30 to i64
  %32 = sub i64 %28, %31
  %33 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %34 = ptrtoint ptr %33 to i64
  %35 = sub i64 %34, %31
  %36 = icmp sgt i64 %32, %35
  %37 = select i1 %36, ptr %33, ptr %29
  store ptr %37, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8
  store ptr %37, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  store i32 0, ptr %15, align 8, !tbaa !143
  %38 = getelementptr inbounds %struct.c_declarator, ptr %15, i64 0, i32 1
  store ptr null, ptr %38, align 8, !tbaa !144
  %39 = getelementptr inbounds %struct.c_declarator, ptr %15, i64 0, i32 3
  store ptr %0, ptr %39, align 8, !tbaa !16
  %40 = load i32, ptr @input_location, align 4, !tbaa !20
  %41 = getelementptr inbounds %struct.c_declarator, ptr %15, i64 0, i32 2
  store i32 %40, ptr %41, align 8, !tbaa !141
  ret ptr %15
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @make_pointer_declarator(ptr noundef readonly %0, ptr noundef %1) local_unnamed_addr #9 {
  store i64 56, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %3 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %4 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  %5 = ptrtoint ptr %3 to i64
  %6 = ptrtoint ptr %4 to i64
  %7 = sub i64 %5, %6
  %8 = icmp slt i64 %7, 56
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  tail call void @_obstack_newchunk(ptr noundef nonnull @parser_obstack, i32 noundef 56) #24
  %10 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %11 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi ptr [ %4, %2 ], [ %11, %9 ]
  %14 = phi i64 [ 56, %2 ], [ %10, %9 ]
  %15 = getelementptr inbounds i8, ptr %13, i64 %14
  %16 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  %17 = icmp eq ptr %15, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  %20 = or i8 %19, 2
  store i8 %20, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  br label %21

21:                                               ; preds = %12, %18
  %22 = ptrtoint ptr %16 to i64
  store i64 %22, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %23 = ptrtoint ptr %15 to i64
  %24 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 6), align 8, !tbaa !139
  %25 = sext i32 %24 to i64
  %26 = add nsw i64 %25, %23
  %27 = xor i32 %24, -1
  %28 = sext i32 %27 to i64
  %29 = and i64 %26, %28
  %30 = inttoptr i64 %29 to ptr
  %31 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 1), align 8, !tbaa !140
  %32 = ptrtoint ptr %31 to i64
  %33 = sub i64 %29, %32
  %34 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %35 = ptrtoint ptr %34 to i64
  %36 = sub i64 %35, %32
  %37 = icmp sgt i64 %33, %36
  %38 = select i1 %37, ptr %34, ptr %30
  store ptr %38, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8
  store ptr %38, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  %39 = icmp eq ptr %0, null
  br i1 %39, label %122, label %40

40:                                               ; preds = %21
  %41 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 3
  %42 = load ptr, ptr %41, align 8, !tbaa !145
  %43 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %44 = load i16, ptr %43, align 8
  %45 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 9
  %46 = load i8, ptr %45, align 2, !tbaa !131
  %47 = load ptr, ptr %0, align 8, !tbaa !127
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %74

49:                                               ; preds = %40
  %50 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 2
  %51 = load ptr, ptr %50, align 8, !tbaa !132
  %52 = icmp eq ptr %51, null
  br i1 %52, label %53, label %74

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 4
  %55 = load i32, ptr %54, align 8, !tbaa !133
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %74

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 5
  %59 = load i32, ptr %58, align 4, !tbaa !130
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %74

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 6
  %63 = load i8, ptr %62, align 8
  %64 = and i8 %63, -48
  %65 = icmp eq i8 %64, 0
  %66 = insertelement <8 x i16> poison, i16 %44, i64 0
  %67 = shufflevector <8 x i16> %66, <8 x i16> poison, <8 x i32> zeroinitializer
  %68 = freeze <8 x i16> %67
  %69 = and <8 x i16> %68, <i16 1, i16 2, i16 4, i16 8, i16 16, i16 32, i16 64, i16 128>
  %70 = icmp ne <8 x i16> %69, zeroinitializer
  %71 = bitcast <8 x i1> %70 to i8
  %72 = icmp eq i8 %71, 0
  %73 = select i1 %72, i1 %65, i1 false
  br i1 %73, label %75, label %74

74:                                               ; preds = %61, %57, %53, %49, %40
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 3750, ptr noundef nonnull @.str.8) #24
  br label %75

75:                                               ; preds = %61, %74
  %76 = lshr i16 %44, 8
  %77 = and i16 %76, 7
  %78 = zext i16 %77 to i32
  %79 = zext i8 %46 to i32
  %80 = shl nuw nsw i32 %79, 8
  %81 = or i32 %80, %78
  %82 = icmp eq ptr %42, null
  br i1 %82, label %122, label %83

83:                                               ; preds = %75
  store i64 56, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %84 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %85 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  %86 = ptrtoint ptr %84 to i64
  %87 = ptrtoint ptr %85 to i64
  %88 = sub i64 %86, %87
  %89 = icmp slt i64 %88, 56
  br i1 %89, label %90, label %93

90:                                               ; preds = %83
  tail call void @_obstack_newchunk(ptr noundef nonnull @parser_obstack, i32 noundef 56) #24
  %91 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %92 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  br label %93

93:                                               ; preds = %90, %83
  %94 = phi ptr [ %85, %83 ], [ %92, %90 ]
  %95 = phi i64 [ 56, %83 ], [ %91, %90 ]
  %96 = getelementptr inbounds i8, ptr %94, i64 %95
  %97 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  %98 = icmp eq ptr %96, %97
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  %101 = or i8 %100, 2
  store i8 %101, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  br label %102

102:                                              ; preds = %93, %99
  %103 = ptrtoint ptr %97 to i64
  store i64 %103, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %104 = ptrtoint ptr %96 to i64
  %105 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 6), align 8, !tbaa !139
  %106 = sext i32 %105 to i64
  %107 = add nsw i64 %106, %104
  %108 = xor i32 %105, -1
  %109 = sext i32 %108 to i64
  %110 = and i64 %107, %109
  %111 = inttoptr i64 %110 to ptr
  %112 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 1), align 8, !tbaa !140
  %113 = ptrtoint ptr %112 to i64
  %114 = sub i64 %110, %113
  %115 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %116 = ptrtoint ptr %115 to i64
  %117 = sub i64 %116, %113
  %118 = icmp sgt i64 %114, %117
  %119 = select i1 %118, ptr %115, ptr %111
  store ptr %119, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8
  store ptr %119, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  store i32 4, ptr %97, align 8, !tbaa !143
  %120 = getelementptr inbounds %struct.c_declarator, ptr %97, i64 0, i32 1
  store ptr %1, ptr %120, align 8, !tbaa !144
  %121 = getelementptr inbounds %struct.c_declarator, ptr %97, i64 0, i32 3
  store ptr %42, ptr %121, align 8, !tbaa !16
  br label %122

122:                                              ; preds = %75, %102, %21
  %123 = phi ptr [ %97, %102 ], [ %1, %75 ], [ %1, %21 ]
  %124 = phi i32 [ %81, %102 ], [ %81, %75 ], [ 0, %21 ]
  store i32 3, ptr %16, align 8, !tbaa !143
  %125 = getelementptr inbounds %struct.c_declarator, ptr %16, i64 0, i32 1
  store ptr %123, ptr %125, align 8, !tbaa !144
  %126 = getelementptr inbounds %struct.c_declarator, ptr %16, i64 0, i32 3
  store i32 %124, ptr %126, align 8, !tbaa !16
  ret ptr %16
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @build_null_declspecs() local_unnamed_addr #9 {
  store i64 56, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %1 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %2 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  %3 = ptrtoint ptr %1 to i64
  %4 = ptrtoint ptr %2 to i64
  %5 = sub i64 %3, %4
  %6 = icmp slt i64 %5, 56
  br i1 %6, label %7, label %10

7:                                                ; preds = %0
  tail call void @_obstack_newchunk(ptr noundef nonnull @parser_obstack, i32 noundef 56) #24
  %8 = load i64, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %9 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8, !tbaa !137
  br label %10

10:                                               ; preds = %0, %7
  %11 = phi ptr [ %2, %0 ], [ %9, %7 ]
  %12 = phi i64 [ 56, %0 ], [ %8, %7 ]
  %13 = getelementptr inbounds i8, ptr %11, i64 %12
  %14 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  %15 = icmp eq ptr %13, %14
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = load i8, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  %18 = or i8 %17, 2
  store i8 %18, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 10), align 8
  br label %19

19:                                               ; preds = %10, %16
  %20 = ptrtoint ptr %14 to i64
  store i64 %20, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 5), align 8, !tbaa !134
  %21 = ptrtoint ptr %13 to i64
  %22 = load i32, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 6), align 8, !tbaa !139
  %23 = sext i32 %22 to i64
  %24 = add nsw i64 %23, %21
  %25 = xor i32 %22, -1
  %26 = sext i32 %25 to i64
  %27 = and i64 %24, %26
  %28 = inttoptr i64 %27 to ptr
  %29 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 1), align 8, !tbaa !140
  %30 = ptrtoint ptr %29 to i64
  %31 = sub i64 %27, %30
  %32 = load ptr, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 4), align 8, !tbaa !136
  %33 = ptrtoint ptr %32 to i64
  %34 = sub i64 %33, %30
  %35 = icmp sgt i64 %31, %34
  %36 = select i1 %35, ptr %32, ptr %28
  store ptr %36, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 3), align 8
  store ptr %36, ptr getelementptr inbounds (%struct.obstack, ptr @parser_obstack, i64 0, i32 2), align 8, !tbaa !138
  %37 = getelementptr inbounds %struct.c_declspecs, ptr %14, i64 0, i32 6
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %14, i8 0, i64 40, i1 false)
  store i8 1, ptr %37, align 8
  %38 = getelementptr inbounds %struct.c_declspecs, ptr %14, i64 0, i32 7
  store i32 0, ptr %38, align 4, !tbaa !129
  %39 = getelementptr inbounds %struct.c_declspecs, ptr %14, i64 0, i32 8
  %40 = load i16, ptr %39, align 8
  %41 = and i16 %40, -4096
  store i16 %41, ptr %39, align 8
  %42 = getelementptr inbounds %struct.c_declspecs, ptr %14, i64 0, i32 9
  store i8 0, ptr %42, align 2, !tbaa !131
  ret ptr %14
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @declspecs_add_addrspace(ptr noundef returned %0, i8 noundef zeroext %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 6
  %4 = load i8, ptr %3, align 8
  %5 = or i8 %4, 10
  store i8 %5, ptr %3, align 8
  %6 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 9
  %7 = load i8, ptr %6, align 2, !tbaa !131
  %8 = icmp eq i8 %7, 0
  %9 = icmp eq i8 %7, %1
  %10 = or i1 %8, %9
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = tail call ptr @c_addr_space_name(i8 noundef zeroext %1) #24
  %13 = load i8, ptr %6, align 2, !tbaa !131
  %14 = tail call ptr @c_addr_space_name(i8 noundef zeroext %13) #24
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.130, ptr noundef %12, ptr noundef %14) #24
  br label %16

15:                                               ; preds = %2
  store i8 %1, ptr %6, align 2, !tbaa !131
  br label %16

16:                                               ; preds = %15, %11
  ret ptr %0
}

declare ptr @c_addr_space_name(i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @declspecs_add_qual(ptr noundef returned %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 6
  %4 = load i8, ptr %3, align 8
  %5 = or i8 %4, 10
  store i8 %5, ptr %3, align 8
  %6 = load i64, ptr %1, align 8
  %7 = and i64 %6, 8590000127
  %8 = icmp eq i64 %7, 8589934593
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 8469, ptr noundef nonnull @.str.8) #24
  br label %10

10:                                               ; preds = %2, %9
  %11 = getelementptr inbounds %struct.c_common_identifier, ptr %1, i64 0, i32 1, i32 2
  %12 = load i8, ptr %11, align 1, !tbaa !36
  switch i8 %12, label %28 [
    i8 3, label %13
    i8 9, label %18
    i8 12, label %23
  ]

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %15 = load i16, ptr %14, align 8
  %16 = lshr i16 %15, 8
  %17 = or i16 %15, 256
  store i16 %17, ptr %14, align 8
  br label %29

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %20 = load i16, ptr %19, align 8
  %21 = lshr i16 %20, 9
  %22 = or i16 %20, 512
  store i16 %22, ptr %19, align 8
  br label %29

23:                                               ; preds = %10
  %24 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %25 = load i16, ptr %24, align 8
  %26 = lshr i16 %25, 10
  %27 = or i16 %25, 1024
  store i16 %27, ptr %24, align 8
  br label %29

28:                                               ; preds = %10
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 8486, ptr noundef nonnull @.str.8) #24
  br label %39

29:                                               ; preds = %23, %18, %13
  %30 = phi i16 [ %26, %23 ], [ %21, %18 ], [ %16, %13 ]
  %31 = and i16 %30, 1
  %32 = icmp eq i16 %31, 0
  %33 = load i32, ptr @flag_isoc99, align 4
  %34 = icmp ne i32 %33, 0
  %35 = select i1 %32, i1 true, i1 %34
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  %37 = load i32, ptr @input_location, align 4, !tbaa !20
  %38 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %37, i32 noundef 834, ptr noundef nonnull @.str.131, ptr noundef nonnull %1) #24
  br label %39

39:                                               ; preds = %28, %36, %29
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @declspecs_add_type(i32 noundef %0, ptr noundef returned %1, ptr nocapture noundef readonly byval(%struct.c_typespec) align 8 %2) local_unnamed_addr #9 {
  %4 = alloca %struct.expanded_location, align 8
  %5 = getelementptr inbounds %struct.c_typespec, ptr %2, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !187
  %7 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 6
  %8 = load i8, ptr %7, align 8
  %9 = or i8 %8, 14
  store i8 %9, ptr %7, align 8
  %10 = load i64, ptr %6, align 8
  %11 = and i64 %10, 1073741824
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = or i8 %8, -114
  store i8 %14, ptr %7, align 8
  %15 = load i64, ptr %6, align 8
  br label %16

16:                                               ; preds = %13, %3
  %17 = phi i8 [ %14, %13 ], [ %9, %3 ]
  %18 = phi i64 [ %15, %13 ], [ %10, %3 ]
  %19 = and i64 %18, 8590000127
  %20 = icmp eq i64 %19, 8589934593
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = load ptr, ptr %1, align 8, !tbaa !127
  br label %383

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.c_common_identifier, ptr %6, i64 0, i32 1, i32 2
  %25 = load i8, ptr %24, align 1, !tbaa !36
  %26 = icmp eq i8 %25, 65
  %27 = load ptr, ptr %1, align 8, !tbaa !127
  br i1 %26, label %383, label %28

28:                                               ; preds = %23
  %29 = icmp eq ptr %27, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %28
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.132) #24
  br label %492

31:                                               ; preds = %28
  %32 = icmp ult i8 %25, 27
  br i1 %32, label %33, label %189

33:                                               ; preds = %31
  switch i8 %25, label %183 [
    i8 2, label %34
    i8 7, label %67
    i8 10, label %88
    i8 1, label %108
    i8 13, label %128
    i8 15, label %159
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %36 = load i16, ptr %35, align 8
  %37 = and i16 %36, 2
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.133) #24
  br label %492

40:                                               ; preds = %34
  %41 = and i16 %36, 1
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 4
  %45 = load i32, ptr %44, align 8, !tbaa !133
  %46 = icmp eq i32 %45, 6
  br i1 %46, label %47, label %48

47:                                               ; preds = %43
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.134) #24
  br label %492

48:                                               ; preds = %43
  tail call void (i32, i32, ptr, ...) @pedwarn_c90(i32 noundef %0, i32 noundef 125, ptr noundef nonnull @.str.135) #24
  %49 = load i16, ptr %35, align 8
  %50 = or i16 %49, 2
  store i16 %50, ptr %35, align 8
  br label %492

51:                                               ; preds = %40
  %52 = and i16 %36, 4
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.136) #24
  br label %492

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 4
  %57 = load i32, ptr %56, align 8, !tbaa !133
  switch i32 %57, label %65 [
    i32 1, label %58
    i32 2, label %59
    i32 3, label %60
    i32 5, label %61
    i32 7, label %62
    i32 8, label %63
    i32 9, label %64
  ]

58:                                               ; preds = %55
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.137) #24
  br label %492

59:                                               ; preds = %55
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.138) #24
  br label %492

60:                                               ; preds = %55
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.139) #24
  br label %492

61:                                               ; preds = %55
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.140) #24
  br label %492

62:                                               ; preds = %55
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.141) #24
  br label %492

63:                                               ; preds = %55
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.142) #24
  br label %492

64:                                               ; preds = %55
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.143) #24
  br label %492

65:                                               ; preds = %55
  %66 = or i16 %36, 1
  store i16 %66, ptr %35, align 8
  br label %492

67:                                               ; preds = %33
  %68 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %69 = load i16, ptr %68, align 8
  %70 = trunc i16 %69 to i8
  %71 = lshr i8 %70, 2
  %72 = and i16 %69, 1
  %73 = icmp eq i16 %72, 0
  br i1 %73, label %75, label %74

74:                                               ; preds = %67
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.136) #24
  br label %184

75:                                               ; preds = %67
  %76 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 4
  %77 = load i32, ptr %76, align 8, !tbaa !133
  switch i32 %77, label %86 [
    i32 1, label %78
    i32 2, label %79
    i32 3, label %80
    i32 5, label %81
    i32 6, label %82
    i32 7, label %83
    i32 8, label %84
    i32 9, label %85
  ]

78:                                               ; preds = %75
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.144) #24
  br label %184

79:                                               ; preds = %75
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.145) #24
  br label %184

80:                                               ; preds = %75
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.146) #24
  br label %184

81:                                               ; preds = %75
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.147) #24
  br label %184

82:                                               ; preds = %75
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.148) #24
  br label %184

83:                                               ; preds = %75
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.149) #24
  br label %184

84:                                               ; preds = %75
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.150) #24
  br label %184

85:                                               ; preds = %75
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.151) #24
  br label %184

86:                                               ; preds = %75
  %87 = or i16 %69, 4
  store i16 %87, ptr %68, align 8
  br label %184

88:                                               ; preds = %33
  %89 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %90 = load i16, ptr %89, align 8
  %91 = trunc i16 %90 to i8
  %92 = lshr i8 %91, 3
  %93 = and i16 %90, 16
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %96, label %95

95:                                               ; preds = %88
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.152) #24
  br label %184

96:                                               ; preds = %88
  %97 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 4
  %98 = load i32, ptr %97, align 8, !tbaa !133
  switch i32 %98, label %106 [
    i32 1, label %99
    i32 2, label %100
    i32 5, label %101
    i32 6, label %102
    i32 7, label %103
    i32 8, label %104
    i32 9, label %105
  ]

99:                                               ; preds = %96
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.153) #24
  br label %184

100:                                              ; preds = %96
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.154) #24
  br label %184

101:                                              ; preds = %96
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.155) #24
  br label %184

102:                                              ; preds = %96
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.156) #24
  br label %184

103:                                              ; preds = %96
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.157) #24
  br label %184

104:                                              ; preds = %96
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.158) #24
  br label %184

105:                                              ; preds = %96
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.159) #24
  br label %184

106:                                              ; preds = %96
  %107 = or i16 %90, 8
  store i16 %107, ptr %89, align 8
  br label %184

108:                                              ; preds = %33
  %109 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %110 = load i16, ptr %109, align 8
  %111 = trunc i16 %110 to i8
  %112 = lshr i8 %111, 4
  %113 = and i16 %110, 8
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %108
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.152) #24
  br label %184

116:                                              ; preds = %108
  %117 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 4
  %118 = load i32, ptr %117, align 8, !tbaa !133
  switch i32 %118, label %126 [
    i32 1, label %119
    i32 2, label %120
    i32 5, label %121
    i32 6, label %122
    i32 7, label %123
    i32 8, label %124
    i32 9, label %125
  ]

119:                                              ; preds = %116
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.160) #24
  br label %184

120:                                              ; preds = %116
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.161) #24
  br label %184

121:                                              ; preds = %116
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.162) #24
  br label %184

122:                                              ; preds = %116
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.163) #24
  br label %184

123:                                              ; preds = %116
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.164) #24
  br label %184

124:                                              ; preds = %116
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.165) #24
  br label %184

125:                                              ; preds = %116
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.166) #24
  br label %184

126:                                              ; preds = %116
  %127 = or i16 %110, 16
  store i16 %127, ptr %109, align 8
  br label %184

128:                                              ; preds = %33
  %129 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %130 = load i16, ptr %129, align 8
  %131 = trunc i16 %130 to i8
  %132 = lshr i8 %131, 5
  %133 = load i32, ptr @flag_isoc99, align 4, !tbaa !20
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %142

135:                                              ; preds = %128
  %136 = load i32, ptr @input_location, align 4, !tbaa !20
  call void @expand_location(ptr nonnull sret(%struct.expanded_location) align 8 %4, i32 noundef %136) #24
  %137 = getelementptr inbounds %struct.expanded_location, ptr %4, i64 0, i32 3
  %138 = load i8, ptr %137, align 8, !tbaa !57
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %135
  %141 = call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef 834, ptr noundef nonnull @.str.167) #24
  br label %142

142:                                              ; preds = %140, %135, %128
  %143 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 4
  %144 = load i32, ptr %143, align 8, !tbaa !133
  switch i32 %144, label %152 [
    i32 1, label %145
    i32 2, label %146
    i32 7, label %147
    i32 8, label %148
    i32 9, label %149
    i32 10, label %150
    i32 11, label %151
  ]

145:                                              ; preds = %142
  call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.168) #24
  br label %184

146:                                              ; preds = %142
  call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.169) #24
  br label %184

147:                                              ; preds = %142
  call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.170) #24
  br label %184

148:                                              ; preds = %142
  call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.171) #24
  br label %184

149:                                              ; preds = %142
  call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.172) #24
  br label %184

150:                                              ; preds = %142
  call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.173) #24
  br label %184

151:                                              ; preds = %142
  call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.174) #24
  br label %184

152:                                              ; preds = %142
  %153 = load i16, ptr %129, align 8
  %154 = and i16 %153, 2048
  %155 = icmp eq i16 %154, 0
  br i1 %155, label %157, label %156

156:                                              ; preds = %152
  call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.175) #24
  br label %184

157:                                              ; preds = %152
  %158 = or i16 %153, 32
  store i16 %158, ptr %129, align 8
  br label %184

159:                                              ; preds = %33
  %160 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %161 = load i16, ptr %160, align 8
  %162 = lshr i16 %161, 11
  %163 = trunc i16 %162 to i8
  %164 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef 834, ptr noundef nonnull @.str.176) #24
  %165 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 4
  %166 = load i32, ptr %165, align 8, !tbaa !133
  switch i32 %166, label %176 [
    i32 1, label %167
    i32 2, label %168
    i32 3, label %169
    i32 4, label %170
    i32 5, label %171
    i32 6, label %172
    i32 7, label %173
    i32 8, label %174
    i32 9, label %175
  ]

167:                                              ; preds = %159
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.177) #24
  br label %184

168:                                              ; preds = %159
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.178) #24
  br label %184

169:                                              ; preds = %159
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.179) #24
  br label %184

170:                                              ; preds = %159
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.180) #24
  br label %184

171:                                              ; preds = %159
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.181) #24
  br label %184

172:                                              ; preds = %159
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.182) #24
  br label %184

173:                                              ; preds = %159
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.183) #24
  br label %184

174:                                              ; preds = %159
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.184) #24
  br label %184

175:                                              ; preds = %159
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.185) #24
  br label %184

176:                                              ; preds = %159
  %177 = load i16, ptr %160, align 8
  %178 = and i16 %177, 32
  %179 = icmp eq i16 %178, 0
  br i1 %179, label %181, label %180

180:                                              ; preds = %176
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.186) #24
  br label %184

181:                                              ; preds = %176
  %182 = or i16 %177, 2048
  store i16 %182, ptr %160, align 8
  br label %184

183:                                              ; preds = %33
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 8782, ptr noundef nonnull @.str.8) #24
  br label %492

184:                                              ; preds = %167, %169, %171, %173, %175, %181, %180, %174, %172, %170, %168, %145, %147, %149, %151, %157, %156, %150, %148, %146, %115, %120, %122, %124, %126, %125, %123, %121, %119, %95, %100, %102, %104, %106, %105, %103, %101, %99, %74, %79, %81, %83, %85, %86, %84, %82, %80, %78
  %185 = phi i8 [ %163, %167 ], [ %163, %168 ], [ %163, %169 ], [ %163, %170 ], [ %163, %171 ], [ %163, %172 ], [ %163, %173 ], [ %163, %174 ], [ %163, %175 ], [ %163, %180 ], [ %163, %181 ], [ %132, %145 ], [ %132, %146 ], [ %132, %147 ], [ %132, %148 ], [ %132, %149 ], [ %132, %150 ], [ %132, %151 ], [ %132, %156 ], [ %132, %157 ], [ %112, %115 ], [ %112, %119 ], [ %112, %120 ], [ %112, %121 ], [ %112, %122 ], [ %112, %123 ], [ %112, %124 ], [ %112, %125 ], [ %112, %126 ], [ %92, %95 ], [ %92, %99 ], [ %92, %100 ], [ %92, %101 ], [ %92, %102 ], [ %92, %103 ], [ %92, %104 ], [ %92, %105 ], [ %92, %106 ], [ %71, %74 ], [ %71, %78 ], [ %71, %79 ], [ %71, %80 ], [ %71, %81 ], [ %71, %82 ], [ %71, %83 ], [ %71, %84 ], [ %71, %85 ], [ %71, %86 ]
  %186 = and i8 %185, 1
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %492, label %188

188:                                              ; preds = %184
  call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.131, ptr noundef nonnull %6) #24
  br label %492

189:                                              ; preds = %31
  %190 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 4
  %191 = load i32, ptr %190, align 8, !tbaa !133
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %194, label %193

193:                                              ; preds = %189
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.132) #24
  br label %492

194:                                              ; preds = %189
  switch i8 %25, label %386 [
    i8 32, label %195
    i8 69, label %222
    i8 29, label %249
    i8 28, label %264
    i8 30, label %271
    i8 31, label %294
    i8 60, label %317
    i8 61, label %317
    i8 62, label %317
    i8 63, label %365
    i8 64, label %365
  ]

195:                                              ; preds = %194
  %196 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %197 = load i16, ptr %196, align 8
  %198 = and i16 %197, 1
  %199 = icmp eq i16 %198, 0
  br i1 %199, label %201, label %200

200:                                              ; preds = %195
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.137) #24
  br label %492

201:                                              ; preds = %195
  %202 = and i16 %197, 4
  %203 = icmp eq i16 %202, 0
  br i1 %203, label %205, label %204

204:                                              ; preds = %201
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.144) #24
  br label %492

205:                                              ; preds = %201
  %206 = and i16 %197, 8
  %207 = icmp eq i16 %206, 0
  br i1 %207, label %209, label %208

208:                                              ; preds = %205
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.153) #24
  br label %492

209:                                              ; preds = %205
  %210 = and i16 %197, 16
  %211 = icmp eq i16 %210, 0
  br i1 %211, label %213, label %212

212:                                              ; preds = %209
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.160) #24
  br label %492

213:                                              ; preds = %209
  %214 = and i16 %197, 32
  %215 = icmp eq i16 %214, 0
  br i1 %215, label %217, label %216

216:                                              ; preds = %213
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.168) #24
  br label %492

217:                                              ; preds = %213
  %218 = and i16 %197, 2048
  %219 = icmp eq i16 %218, 0
  br i1 %219, label %221, label %220

220:                                              ; preds = %217
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.177) #24
  br label %492

221:                                              ; preds = %217
  store i32 1, ptr %190, align 8, !tbaa !133
  br label %492

222:                                              ; preds = %194
  %223 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %224 = load i16, ptr %223, align 8
  %225 = and i16 %224, 1
  %226 = icmp eq i16 %225, 0
  br i1 %226, label %228, label %227

227:                                              ; preds = %222
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.138) #24
  br label %492

228:                                              ; preds = %222
  %229 = and i16 %224, 4
  %230 = icmp eq i16 %229, 0
  br i1 %230, label %232, label %231

231:                                              ; preds = %228
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.145) #24
  br label %492

232:                                              ; preds = %228
  %233 = and i16 %224, 8
  %234 = icmp eq i16 %233, 0
  br i1 %234, label %236, label %235

235:                                              ; preds = %232
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.154) #24
  br label %492

236:                                              ; preds = %232
  %237 = and i16 %224, 16
  %238 = icmp eq i16 %237, 0
  br i1 %238, label %240, label %239

239:                                              ; preds = %236
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.161) #24
  br label %492

240:                                              ; preds = %236
  %241 = and i16 %224, 32
  %242 = icmp eq i16 %241, 0
  br i1 %242, label %244, label %243

243:                                              ; preds = %240
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.169) #24
  br label %492

244:                                              ; preds = %240
  %245 = and i16 %224, 2048
  %246 = icmp eq i16 %245, 0
  br i1 %246, label %248, label %247

247:                                              ; preds = %244
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.178) #24
  br label %492

248:                                              ; preds = %244
  store i32 2, ptr %190, align 8, !tbaa !133
  br label %492

249:                                              ; preds = %194
  %250 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %251 = load i16, ptr %250, align 8
  %252 = and i16 %251, 1
  %253 = icmp eq i16 %252, 0
  br i1 %253, label %255, label %254

254:                                              ; preds = %249
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.139) #24
  br label %492

255:                                              ; preds = %249
  %256 = and i16 %251, 4
  %257 = icmp eq i16 %256, 0
  br i1 %257, label %259, label %258

258:                                              ; preds = %255
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.146) #24
  br label %492

259:                                              ; preds = %255
  %260 = and i16 %251, 2048
  %261 = icmp eq i16 %260, 0
  br i1 %261, label %263, label %262

262:                                              ; preds = %259
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.179) #24
  br label %492

263:                                              ; preds = %259
  store i32 3, ptr %190, align 8, !tbaa !133
  br label %492

264:                                              ; preds = %194
  %265 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %266 = load i16, ptr %265, align 8
  %267 = and i16 %266, 2048
  %268 = icmp eq i16 %267, 0
  br i1 %268, label %270, label %269

269:                                              ; preds = %264
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.180) #24
  br label %492

270:                                              ; preds = %264
  store i32 4, ptr %190, align 8, !tbaa !133
  br label %492

271:                                              ; preds = %194
  %272 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %273 = load i16, ptr %272, align 8
  %274 = and i16 %273, 1
  %275 = icmp eq i16 %274, 0
  br i1 %275, label %277, label %276

276:                                              ; preds = %271
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.140) #24
  br label %492

277:                                              ; preds = %271
  %278 = and i16 %273, 4
  %279 = icmp eq i16 %278, 0
  br i1 %279, label %281, label %280

280:                                              ; preds = %277
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.147) #24
  br label %492

281:                                              ; preds = %277
  %282 = and i16 %273, 8
  %283 = icmp eq i16 %282, 0
  br i1 %283, label %285, label %284

284:                                              ; preds = %281
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.155) #24
  br label %492

285:                                              ; preds = %281
  %286 = and i16 %273, 16
  %287 = icmp eq i16 %286, 0
  br i1 %287, label %289, label %288

288:                                              ; preds = %285
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.162) #24
  br label %492

289:                                              ; preds = %285
  %290 = and i16 %273, 2048
  %291 = icmp eq i16 %290, 0
  br i1 %291, label %293, label %292

292:                                              ; preds = %289
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.181) #24
  br label %492

293:                                              ; preds = %289
  store i32 5, ptr %190, align 8, !tbaa !133
  br label %492

294:                                              ; preds = %194
  %295 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %296 = load i16, ptr %295, align 8
  %297 = and i16 %296, 2
  %298 = icmp eq i16 %297, 0
  br i1 %298, label %300, label %299

299:                                              ; preds = %294
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.134) #24
  br label %492

300:                                              ; preds = %294
  %301 = and i16 %296, 4
  %302 = icmp eq i16 %301, 0
  br i1 %302, label %304, label %303

303:                                              ; preds = %300
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.148) #24
  br label %492

304:                                              ; preds = %300
  %305 = and i16 %296, 8
  %306 = icmp eq i16 %305, 0
  br i1 %306, label %308, label %307

307:                                              ; preds = %304
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.156) #24
  br label %492

308:                                              ; preds = %304
  %309 = and i16 %296, 16
  %310 = icmp eq i16 %309, 0
  br i1 %310, label %312, label %311

311:                                              ; preds = %308
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.163) #24
  br label %492

312:                                              ; preds = %308
  %313 = and i16 %296, 2048
  %314 = icmp eq i16 %313, 0
  br i1 %314, label %316, label %315

315:                                              ; preds = %312
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.182) #24
  br label %492

316:                                              ; preds = %312
  store i32 6, ptr %190, align 8, !tbaa !133
  br label %492

317:                                              ; preds = %194, %194, %194
  %318 = icmp eq i8 %25, 60
  %319 = icmp eq i8 %25, 61
  %320 = select i1 %319, ptr @.str.188, ptr @.str.189
  %321 = select i1 %318, ptr @.str.187, ptr %320
  %322 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %323 = load i16, ptr %322, align 8
  %324 = and i16 %323, 2
  %325 = icmp eq i16 %324, 0
  br i1 %325, label %328, label %326

326:                                              ; preds = %317
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.190, ptr noundef nonnull %321) #24
  %327 = load i16, ptr %322, align 8
  br label %328

328:                                              ; preds = %326, %317
  %329 = phi i16 [ %327, %326 ], [ %323, %317 ]
  %330 = and i16 %329, 1
  %331 = icmp eq i16 %330, 0
  br i1 %331, label %333, label %332

332:                                              ; preds = %328
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.191, ptr noundef nonnull %321) #24
  br label %358

333:                                              ; preds = %328
  %334 = and i16 %329, 4
  %335 = icmp eq i16 %334, 0
  br i1 %335, label %337, label %336

336:                                              ; preds = %333
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.192, ptr noundef nonnull %321) #24
  br label %358

337:                                              ; preds = %333
  %338 = and i16 %329, 8
  %339 = icmp eq i16 %338, 0
  br i1 %339, label %341, label %340

340:                                              ; preds = %337
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.193, ptr noundef nonnull %321) #24
  br label %358

341:                                              ; preds = %337
  %342 = and i16 %329, 16
  %343 = icmp eq i16 %342, 0
  br i1 %343, label %345, label %344

344:                                              ; preds = %341
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.194, ptr noundef nonnull %321) #24
  br label %358

345:                                              ; preds = %341
  %346 = and i16 %329, 32
  %347 = icmp eq i16 %346, 0
  br i1 %347, label %349, label %348

348:                                              ; preds = %345
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.195, ptr noundef nonnull %321) #24
  br label %358

349:                                              ; preds = %345
  %350 = and i16 %329, 2048
  %351 = icmp eq i16 %350, 0
  br i1 %351, label %353, label %352

352:                                              ; preds = %349
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.196, ptr noundef nonnull %321) #24
  br label %358

353:                                              ; preds = %349
  br i1 %318, label %354, label %355

354:                                              ; preds = %353
  store i32 7, ptr %190, align 8, !tbaa !133
  br label %358

355:                                              ; preds = %353
  br i1 %319, label %356, label %357

356:                                              ; preds = %355
  store i32 8, ptr %190, align 8, !tbaa !133
  br label %358

357:                                              ; preds = %355
  store i32 9, ptr %190, align 8, !tbaa !133
  br label %358

358:                                              ; preds = %336, %344, %352, %356, %357, %354, %348, %340, %332
  %359 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 19), align 8, !tbaa !252
  %360 = tail call zeroext i8 %359() #24
  %361 = icmp eq i8 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %358
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.197) #24
  br label %363

363:                                              ; preds = %362, %358
  %364 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef 834, ptr noundef nonnull @.str.198) #24
  br label %492

365:                                              ; preds = %194, %194
  %366 = icmp eq i8 %25, 63
  %367 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %368 = load i16, ptr %367, align 8
  %369 = and i16 %368, 32
  %370 = icmp eq i16 %369, 0
  br i1 %370, label %373, label %371

371:                                              ; preds = %365
  %372 = select i1 %366, ptr @.str.199, ptr @.str.200
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.195, ptr noundef nonnull %372) #24
  br label %376

373:                                              ; preds = %365
  br i1 %366, label %374, label %375

374:                                              ; preds = %373
  store i32 10, ptr %190, align 8, !tbaa !133
  br label %376

375:                                              ; preds = %373
  store i32 11, ptr %190, align 8, !tbaa !133
  br label %376

376:                                              ; preds = %374, %375, %371
  %377 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 20), align 8, !tbaa !253
  %378 = tail call zeroext i8 %377() #24
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %380, label %381

380:                                              ; preds = %376
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.201) #24
  br label %381

381:                                              ; preds = %380, %376
  %382 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %0, i32 noundef 834, ptr noundef nonnull @.str.202) #24
  br label %492

383:                                              ; preds = %21, %23
  %384 = phi ptr [ %22, %21 ], [ %27, %23 ]
  %385 = icmp eq ptr %384, null
  br i1 %385, label %386, label %395

386:                                              ; preds = %194, %383
  %387 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 4
  %388 = load i32, ptr %387, align 8, !tbaa !133
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %395

390:                                              ; preds = %386
  %391 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 8
  %392 = load i16, ptr %391, align 8
  %393 = and i16 %392, 61
  %394 = icmp eq i16 %393, 0
  br i1 %394, label %396, label %395

395:                                              ; preds = %390, %386, %383
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.132) #24
  br label %492

396:                                              ; preds = %390
  %397 = trunc i64 %18 to i16
  switch i16 %397, label %460 [
    i16 35, label %398
    i16 1, label %436
    i16 0, label %492
  ]

398:                                              ; preds = %396
  %399 = getelementptr inbounds %struct.tree_common, ptr %6, i64 0, i32 2
  %400 = load ptr, ptr %399, align 8, !tbaa !16
  %401 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %402 = icmp eq ptr %400, %401
  br i1 %402, label %492, label %403

403:                                              ; preds = %398
  store ptr %400, ptr %1, align 8, !tbaa !127
  %404 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 6
  %405 = load ptr, ptr %404, align 8, !tbaa !16
  %406 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 2
  store ptr %405, ptr %406, align 8, !tbaa !132
  %407 = or i8 %17, 16
  store i8 %407, ptr %7, align 8
  %408 = getelementptr inbounds %struct.tree_decl_common, ptr %6, i64 0, i32 2
  %409 = load i64, ptr %408, align 8
  %410 = lshr i64 %409, 10
  %411 = trunc i64 %410 to i8
  %412 = and i8 %411, 64
  %413 = and i8 %407, -65
  %414 = or i8 %412, %413
  store i8 %414, ptr %7, align 8
  %415 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %492, label %417

417:                                              ; preds = %403
  %418 = getelementptr inbounds %struct.tree_decl_minimal, ptr %6, i64 0, i32 3
  %419 = load ptr, ptr %418, align 8, !tbaa !16
  %420 = getelementptr inbounds %struct.lang_identifier, ptr %419, i64 0, i32 1
  %421 = load ptr, ptr %420, align 8, !tbaa !25
  %422 = getelementptr inbounds %struct.c_binding, ptr %421, i64 0, i32 5
  %423 = load i32, ptr %422, align 8
  %424 = icmp sgt i32 %423, -1
  br i1 %424, label %429, label %425

425:                                              ; preds = %417
  %426 = tail call zeroext i8 (i32, i32, ptr, ...) @warning_at(i32 noundef %0, i32 noundef 49, ptr noundef nonnull @.str.203, ptr noundef nonnull %6) #24
  %427 = load i32, ptr @warn_cxx_compat, align 4, !tbaa !20
  %428 = icmp ne i32 %427, 0
  br label %429

429:                                              ; preds = %425, %417
  %430 = phi i1 [ %428, %425 ], [ true, %417 ]
  %431 = load ptr, ptr @struct_parse_info, align 8
  %432 = icmp ne ptr %431, null
  %433 = select i1 %430, i1 %432, i1 false
  br i1 %433, label %434, label %492

434:                                              ; preds = %429
  %435 = getelementptr inbounds %struct.c_struct_parse_info, ptr %431, i64 0, i32 2
  tail call fastcc void @VEC_tree_heap_safe_push(ptr noundef nonnull %435, ptr noundef nonnull %6)
  br label %492

436:                                              ; preds = %396
  %437 = getelementptr inbounds %struct.lang_identifier, ptr %6, i64 0, i32 1
  %438 = load ptr, ptr %437, align 8, !tbaa !25
  %439 = icmp eq ptr %438, null
  br i1 %439, label %453, label %440

440:                                              ; preds = %436
  %441 = getelementptr inbounds %struct.c_binding, ptr %438, i64 0, i32 5
  %442 = load i32, ptr %441, align 8
  %443 = and i32 %442, 268435456
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %453

445:                                              ; preds = %440
  %446 = getelementptr inbounds %struct.c_binding, ptr %438, i64 0, i32 1
  %447 = load ptr, ptr %446, align 8, !tbaa !32
  %448 = icmp eq ptr %447, null
  br i1 %448, label %453, label %449

449:                                              ; preds = %445
  %450 = load i64, ptr %447, align 8
  %451 = and i64 %450, 65535
  %452 = icmp eq i64 %451, 35
  br i1 %452, label %454, label %453

453:                                              ; preds = %436, %440, %449, %445
  tail call void (i32, ptr, ...) @error_at(i32 noundef %0, ptr noundef nonnull @.str.204, ptr noundef nonnull %6) #24
  br label %492

454:                                              ; preds = %449
  %455 = getelementptr inbounds %struct.tree_common, ptr %447, i64 0, i32 2
  %456 = load ptr, ptr %455, align 8, !tbaa !16
  %457 = load ptr, ptr @global_trees, align 16, !tbaa !5
  %458 = icmp eq ptr %456, %457
  br i1 %458, label %492, label %459

459:                                              ; preds = %454
  store ptr %456, ptr %1, align 8, !tbaa !127
  br label %492

460:                                              ; preds = %396
  %461 = load i32, ptr %2, align 8
  %462 = and i32 %461, -2
  %463 = icmp eq i32 %462, 2
  br i1 %463, label %464, label %466

464:                                              ; preds = %460
  %465 = or i8 %17, 32
  br label %489

466:                                              ; preds = %460
  %467 = icmp eq i32 %461, 6
  br i1 %467, label %468, label %491

468:                                              ; preds = %466
  %469 = or i8 %17, 16
  store i8 %469, ptr %7, align 8
  %470 = getelementptr inbounds %struct.c_typespec, ptr %2, i64 0, i32 2
  %471 = load ptr, ptr %470, align 8, !tbaa !183
  %472 = icmp eq ptr %471, null
  br i1 %472, label %491, label %473

473:                                              ; preds = %468
  %474 = getelementptr inbounds %struct.c_declspecs, ptr %1, i64 0, i32 1
  %475 = load ptr, ptr %474, align 8, !tbaa !149
  %476 = icmp eq ptr %475, null
  br i1 %476, label %482, label %477

477:                                              ; preds = %473
  %478 = getelementptr inbounds %struct.tree_common, ptr %471, i64 0, i32 2
  %479 = load ptr, ptr %478, align 8, !tbaa !16
  %480 = tail call ptr @build2_stat(i32 noundef 52, ptr noundef %479, ptr noundef nonnull %475, ptr noundef nonnull %471) #24
  %481 = load i8, ptr %7, align 8
  br label %482

482:                                              ; preds = %473, %477
  %483 = phi i8 [ %481, %477 ], [ %469, %473 ]
  %484 = phi ptr [ %480, %477 ], [ %471, %473 ]
  store ptr %484, ptr %474, align 8, !tbaa !149
  %485 = getelementptr inbounds %struct.c_typespec, ptr %2, i64 0, i32 3
  %486 = load i8, ptr %485, align 8, !tbaa !185
  %487 = or i8 %486, -2
  %488 = and i8 %487, %483
  br label %489

489:                                              ; preds = %482, %464
  %490 = phi i8 [ %465, %464 ], [ %488, %482 ]
  store i8 %490, ptr %7, align 8
  br label %491

491:                                              ; preds = %489, %468, %466
  store ptr %6, ptr %1, align 8, !tbaa !127
  br label %492

492:                                              ; preds = %403, %65, %64, %63, %62, %61, %60, %59, %58, %54, %48, %47, %39, %183, %30, %193, %381, %363, %188, %184, %204, %212, %220, %221, %216, %208, %200, %231, %239, %247, %248, %243, %235, %227, %258, %263, %262, %254, %270, %269, %280, %288, %293, %292, %284, %276, %303, %311, %316, %315, %307, %299, %395, %491, %398, %434, %429, %459, %454, %453, %396
  ret ptr %1
}

declare void @pedwarn_c90(i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @declspecs_add_scspec(ptr noundef returned %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 6
  %4 = load i8, ptr %3, align 8
  %5 = or i8 %4, 2
  store i8 %5, ptr %3, align 8
  %6 = load i64, ptr %1, align 8
  %7 = and i64 %6, 8590000127
  %8 = icmp eq i64 %7, 8589934593
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9099, ptr noundef nonnull @.str.8) #24
  %10 = load i8, ptr %3, align 8
  br label %11

11:                                               ; preds = %2, %9
  %12 = phi i8 [ %5, %2 ], [ %10, %9 ]
  %13 = getelementptr inbounds %struct.c_common_identifier, ptr %1, i64 0, i32 1, i32 2
  %14 = load i8, ptr %13, align 1, !tbaa !36
  %15 = and i8 %12, 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 147, ptr noundef nonnull @.str.205, ptr noundef nonnull %1) #24
  br label %19

19:                                               ; preds = %17, %11
  switch i8 %14, label %48 [
    i8 8, label %20
    i8 14, label %24
    i8 11, label %49
    i8 4, label %34
    i8 5, label %40
    i8 0, label %41
    i8 6, label %47
  ]

20:                                               ; preds = %19
  %21 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %22 = load i16, ptr %21, align 8
  %23 = or i16 %22, 64
  store i16 %23, ptr %21, align 8
  br label %78

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %26 = load i16, ptr %25, align 8
  %27 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 5
  %28 = load i32, ptr %27, align 4, !tbaa !130
  switch i32 %28, label %32 [
    i32 1, label %29
    i32 3, label %30
    i32 5, label %31
  ]

29:                                               ; preds = %24
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.206) #24
  br label %56

30:                                               ; preds = %24
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.207) #24
  br label %56

31:                                               ; preds = %24
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.208) #24
  br label %56

32:                                               ; preds = %24
  %33 = or i16 %26, 128
  store i16 %33, ptr %25, align 8
  br label %56

34:                                               ; preds = %19
  %35 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %36 = load i16, ptr %35, align 8
  %37 = and i16 %36, 128
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.209) #24
  br label %49

40:                                               ; preds = %19
  br label %49

41:                                               ; preds = %19
  %42 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %43 = load i16, ptr %42, align 8
  %44 = and i16 %43, 128
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %41
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.210) #24
  br label %49

47:                                               ; preds = %19
  br label %49

48:                                               ; preds = %19
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9147, ptr noundef nonnull @.str.8) #24
  br label %78

49:                                               ; preds = %47, %46, %41, %40, %39, %34, %19
  %50 = phi i1 [ true, %19 ], [ false, %34 ], [ false, %39 ], [ true, %40 ], [ true, %41 ], [ true, %46 ], [ true, %47 ]
  %51 = phi i1 [ true, %19 ], [ true, %34 ], [ true, %39 ], [ true, %40 ], [ false, %41 ], [ false, %46 ], [ true, %47 ]
  %52 = phi i32 [ 1, %19 ], [ 2, %34 ], [ 2, %39 ], [ 3, %40 ], [ 4, %41 ], [ 4, %46 ], [ 5, %47 ]
  %53 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 5
  %54 = load i32, ptr %53, align 4, !tbaa !130
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %60, label %62

56:                                               ; preds = %30, %32, %31, %29
  %57 = and i16 %26, 128
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %56
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.131, ptr noundef nonnull %1) #24
  br label %78

60:                                               ; preds = %49
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.131, ptr noundef nonnull %1) #24
  %61 = load i32, ptr %53, align 4, !tbaa !130
  br label %62

62:                                               ; preds = %49, %60
  %63 = phi i32 [ %54, %49 ], [ %61, %60 ]
  %64 = icmp eq i32 %63, 0
  %65 = icmp eq i32 %52, %63
  %66 = or i1 %64, %65
  br i1 %66, label %68, label %67

67:                                               ; preds = %62
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.211) #24
  br label %78

68:                                               ; preds = %62
  store i32 %52, ptr %53, align 4, !tbaa !130
  %69 = and i1 %50, %51
  br i1 %69, label %70, label %78

70:                                               ; preds = %68
  %71 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %72 = load i16, ptr %71, align 8
  %73 = and i16 %72, 128
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %70
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.212, ptr noundef nonnull %1) #24
  %76 = load i16, ptr %71, align 8
  %77 = and i16 %76, -129
  store i16 %77, ptr %71, align 8
  br label %78

78:                                               ; preds = %48, %20, %56, %59, %67, %75, %70, %68
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @declspecs_add_attrs(ptr noundef returned %0, ptr noundef %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !145
  %5 = tail call ptr @chainon(ptr noundef %1, ptr noundef %4) #24
  store ptr %5, ptr %3, align 8, !tbaa !145
  %6 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 6
  %7 = load i8, ptr %6, align 8
  %8 = or i8 %7, 2
  store i8 %8, ptr %6, align 8
  ret ptr %0
}

declare ptr @chainon(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @finish_declspecs(ptr noundef returned %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr %0, align 8, !tbaa !127
  %3 = icmp eq ptr %2, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %6 = load i16, ptr %5, align 8
  %7 = and i16 %6, 63
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %342, label %9

9:                                                ; preds = %4
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9198, ptr noundef nonnull @.str.8) #24
  br label %342

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 4
  %12 = load i32, ptr %11, align 8, !tbaa !133
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %57

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %16 = load i16, ptr %15, align 8
  %17 = and i16 %16, 2048
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %34, label %19

19:                                               ; preds = %14
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.213) #24
  %20 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 20), align 8, !tbaa !253
  %21 = tail call zeroext i8 %20() #24
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  tail call void (ptr, ...) @error(ptr noundef nonnull @.str.201) #24
  br label %24

24:                                               ; preds = %19, %23
  store i32 10, ptr %11, align 8, !tbaa !133
  %25 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %26 = load i16, ptr %25, align 8
  %27 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 6
  %28 = trunc i16 %26 to i8
  %29 = load i8, ptr %27, align 8
  %30 = shl i8 %28, 3
  %31 = and i8 %30, 64
  %32 = and i8 %29, -65
  %33 = or i8 %31, %32
  store i8 %33, ptr %27, align 8
  br label %191

34:                                               ; preds = %14
  %35 = and i16 %16, 29
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %34
  store i32 4, ptr %11, align 8, !tbaa !133
  br label %47

38:                                               ; preds = %34
  %39 = and i16 %16, 32
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %38
  store i32 6, ptr %11, align 8, !tbaa !133
  %42 = load i32, ptr @input_location, align 4, !tbaa !20
  %43 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %42, i32 noundef 834, ptr noundef nonnull @.str.214) #24
  %44 = load i32, ptr %11, align 8, !tbaa !133
  br label %57

45:                                               ; preds = %38
  store i32 4, ptr %11, align 8, !tbaa !133
  %46 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 7
  store i32 1, ptr %46, align 4, !tbaa !129
  br label %47

47:                                               ; preds = %45, %37
  %48 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %49 = load i16, ptr %48, align 8
  %50 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 6
  %51 = trunc i16 %49 to i8
  %52 = load i8, ptr %50, align 8
  %53 = shl i8 %51, 3
  %54 = and i8 %53, 64
  %55 = and i8 %52, -65
  %56 = or i8 %54, %55
  store i8 %56, ptr %50, align 8
  br label %107

57:                                               ; preds = %41, %10
  %58 = phi i32 [ %44, %41 ], [ %12, %10 ]
  %59 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 8
  %60 = load i16, ptr %59, align 8
  %61 = getelementptr inbounds %struct.c_declspecs, ptr %0, i64 0, i32 6
  %62 = trunc i16 %60 to i8
  %63 = load i8, ptr %61, align 8
  %64 = shl i8 %62, 3
  %65 = and i8 %64, 64
  %66 = and i8 %63, -65
  %67 = or i8 %65, %66
  store i8 %67, ptr %61, align 8
  switch i32 %58, label %341 [
    i32 1, label %68
    i32 2, label %74
    i32 3, label %80
    i32 4, label %107
    i32 5, label %147
    i32 6, label %159
    i32 7, label %178
    i32 8, label %178
    i32 9, label %178
    i32 10, label %191
    i32 11, label %267
  ]

68:                                               ; preds = %57
  %69 = and i16 %60, 61
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %68
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9249, ptr noundef nonnull @.str.8) #24
  br label %72

72:                                               ; preds = %68, %71
  %73 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 38), align 16, !tbaa !5
  store ptr %73, ptr %0, align 8, !tbaa !127
  br label %342

74:                                               ; preds = %57
  %75 = and i16 %60, 61
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %78, label %77

77:                                               ; preds = %74
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9255, ptr noundef nonnull @.str.8) #24
  br label %78

78:                                               ; preds = %74, %77
  %79 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 47), align 8, !tbaa !5
  store ptr %79, ptr %0, align 8, !tbaa !127
  br label %342

80:                                               ; preds = %57
  %81 = and i16 %60, 5
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9259, ptr noundef nonnull @.str.8) #24
  %84 = load i16, ptr %59, align 8
  br label %85

85:                                               ; preds = %80, %83
  %86 = phi i16 [ %60, %80 ], [ %84, %83 ]
  %87 = and i16 %86, 24
  %88 = icmp eq i16 %87, 24
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9260, ptr noundef nonnull @.str.8) #24
  %90 = load i16, ptr %59, align 8
  br label %91

91:                                               ; preds = %85, %89
  %92 = phi i16 [ %86, %85 ], [ %90, %89 ]
  %93 = and i16 %92, 8
  %94 = icmp eq i16 %93, 0
  %95 = and i16 %92, 16
  %96 = icmp eq i16 %95, 0
  %97 = select i1 %96, ptr @integer_types, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 2)
  %98 = select i1 %94, ptr %97, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 1)
  %99 = load ptr, ptr %98, align 8, !tbaa !5
  store ptr %99, ptr %0, align 8, !tbaa !127
  %100 = and i16 %92, 32
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %342, label %102

102:                                              ; preds = %91
  %103 = load i32, ptr @input_location, align 4, !tbaa !20
  %104 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %103, i32 noundef 834, ptr noundef nonnull @.str.215) #24
  %105 = load ptr, ptr %0, align 8, !tbaa !127
  %106 = tail call ptr @build_complex_type(ptr noundef %105) #24
  store ptr %106, ptr %0, align 8, !tbaa !127
  br label %342

107:                                              ; preds = %47, %57
  %108 = phi i16 [ %49, %47 ], [ %60, %57 ]
  %109 = phi ptr [ %48, %47 ], [ %59, %57 ]
  %110 = and i16 %108, 5
  %111 = icmp eq i16 %110, 5
  br i1 %111, label %112, label %114

112:                                              ; preds = %107
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9275, ptr noundef nonnull @.str.8) #24
  %113 = load i16, ptr %109, align 8
  br label %114

114:                                              ; preds = %107, %112
  %115 = phi i16 [ %108, %107 ], [ %113, %112 ]
  %116 = and i16 %115, 24
  %117 = icmp eq i16 %116, 24
  br i1 %117, label %118, label %120

118:                                              ; preds = %114
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9276, ptr noundef nonnull @.str.8) #24
  %119 = load i16, ptr %109, align 8
  br label %120

120:                                              ; preds = %114, %118
  %121 = phi i16 [ %115, %114 ], [ %119, %118 ]
  %122 = and i16 %121, 2
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %124, label %132

124:                                              ; preds = %120
  %125 = and i16 %121, 1
  %126 = icmp eq i16 %125, 0
  br i1 %126, label %127, label %132

127:                                              ; preds = %124
  %128 = and i16 %121, 4
  %129 = icmp eq i16 %128, 0
  %130 = select i1 %129, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 6), ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 4)
  %131 = select i1 %129, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 3)
  br label %132

132:                                              ; preds = %124, %120, %127
  %133 = phi ptr [ %130, %127 ], [ getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 10), %120 ], [ getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 8), %124 ]
  %134 = phi ptr [ %131, %127 ], [ getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 9), %120 ], [ getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 7), %124 ]
  %135 = and i16 %121, 16
  %136 = icmp eq i16 %135, 0
  %137 = load ptr, ptr %133, align 16
  %138 = load ptr, ptr %134, align 8
  %139 = select i1 %136, ptr %138, ptr %137
  store ptr %139, ptr %0, align 8, !tbaa !127
  %140 = and i16 %121, 32
  %141 = icmp eq i16 %140, 0
  br i1 %141, label %342, label %142

142:                                              ; preds = %132
  %143 = load i32, ptr @input_location, align 4, !tbaa !20
  %144 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %143, i32 noundef 834, ptr noundef nonnull @.str.215) #24
  %145 = load ptr, ptr %0, align 8, !tbaa !127
  %146 = tail call ptr @build_complex_type(ptr noundef %145) #24
  store ptr %146, ptr %0, align 8, !tbaa !127
  br label %342

147:                                              ; preds = %57
  %148 = and i16 %60, 29
  %149 = icmp eq i16 %148, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %147
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9302, ptr noundef nonnull @.str.8) #24
  %151 = load i16, ptr %59, align 8
  br label %152

152:                                              ; preds = %147, %150
  %153 = phi i16 [ %60, %147 ], [ %151, %150 ]
  %154 = and i16 %153, 32
  %155 = icmp eq i16 %154, 0
  %156 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 28), align 16
  %157 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 31), align 8
  %158 = select i1 %155, ptr %157, ptr %156
  store ptr %158, ptr %0, align 8, !tbaa !127
  br label %342

159:                                              ; preds = %57
  %160 = and i16 %60, 30
  %161 = icmp eq i16 %160, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %159
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9309, ptr noundef nonnull @.str.8) #24
  %163 = load i16, ptr %59, align 8
  br label %164

164:                                              ; preds = %159, %162
  %165 = phi i16 [ %60, %159 ], [ %163, %162 ]
  %166 = and i16 %165, 1
  %167 = icmp eq i16 %166, 0
  %168 = and i16 %165, 32
  %169 = icmp eq i16 %168, 0
  br i1 %167, label %174, label %170

170:                                              ; preds = %164
  %171 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 30), align 16
  %172 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 33), align 8
  %173 = select i1 %169, ptr %172, ptr %171
  store ptr %173, ptr %0, align 8, !tbaa !127
  br label %342

174:                                              ; preds = %164
  %175 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 29), align 8
  %176 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 32), align 16
  %177 = select i1 %169, ptr %176, ptr %175
  store ptr %177, ptr %0, align 8, !tbaa !127
  br label %342

178:                                              ; preds = %57, %57, %57
  %179 = and i16 %60, 63
  %180 = icmp eq i16 %179, 0
  br i1 %180, label %183, label %181

181:                                              ; preds = %178
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9327, ptr noundef nonnull @.str.8) #24
  %182 = load i32, ptr %11, align 8, !tbaa !133
  br label %183

183:                                              ; preds = %178, %181
  %184 = phi i32 [ %58, %178 ], [ %182, %181 ]
  switch i32 %184, label %189 [
    i32 7, label %185
    i32 8, label %187
  ]

185:                                              ; preds = %183
  %186 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 49), align 8, !tbaa !5
  store ptr %186, ptr %0, align 8, !tbaa !127
  br label %342

187:                                              ; preds = %183
  %188 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 50), align 16, !tbaa !5
  store ptr %188, ptr %0, align 8, !tbaa !127
  br label %342

189:                                              ; preds = %183
  %190 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 51), align 8, !tbaa !5
  store ptr %190, ptr %0, align 8, !tbaa !127
  br label %342

191:                                              ; preds = %24, %57
  %192 = phi i16 [ %26, %24 ], [ %60, %57 ]
  %193 = phi ptr [ %25, %24 ], [ %59, %57 ]
  %194 = and i16 %192, 32
  %195 = icmp eq i16 %194, 0
  br i1 %195, label %197, label %196

196:                                              ; preds = %191
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9336, ptr noundef nonnull @.str.8) #24
  br label %197

197:                                              ; preds = %191, %196
  %198 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 20), align 8, !tbaa !253
  %199 = tail call zeroext i8 %198() #24
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %197
  %202 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  store ptr %202, ptr %0, align 8, !tbaa !127
  br label %342

203:                                              ; preds = %197
  %204 = load i16, ptr %193, align 8
  %205 = and i16 %204, 2048
  %206 = icmp eq i16 %205, 0
  %207 = and i16 %204, 2
  %208 = icmp eq i16 %207, 0
  br i1 %206, label %238, label %209

209:                                              ; preds = %203
  br i1 %208, label %216, label %210

210:                                              ; preds = %209
  %211 = and i16 %204, 16
  %212 = icmp eq i16 %211, 0
  %213 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 64), align 16
  %214 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 60), align 16
  %215 = select i1 %212, ptr %214, ptr %213
  store ptr %215, ptr %0, align 8, !tbaa !127
  br label %342

216:                                              ; preds = %209
  %217 = and i16 %204, 1
  %218 = icmp eq i16 %217, 0
  br i1 %218, label %225, label %219

219:                                              ; preds = %216
  %220 = and i16 %204, 16
  %221 = icmp eq i16 %220, 0
  %222 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 63), align 8
  %223 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 59), align 8
  %224 = select i1 %221, ptr %223, ptr %222
  store ptr %224, ptr %0, align 8, !tbaa !127
  br label %342

225:                                              ; preds = %216
  %226 = and i16 %204, 4
  %227 = icmp eq i16 %226, 0
  %228 = and i16 %204, 16
  %229 = icmp eq i16 %228, 0
  br i1 %227, label %234, label %230

230:                                              ; preds = %225
  %231 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 61), align 8
  %232 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 57), align 8
  %233 = select i1 %229, ptr %232, ptr %231
  store ptr %233, ptr %0, align 8, !tbaa !127
  br label %342

234:                                              ; preds = %225
  %235 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 62), align 16
  %236 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 58), align 16
  %237 = select i1 %229, ptr %236, ptr %235
  store ptr %237, ptr %0, align 8, !tbaa !127
  br label %342

238:                                              ; preds = %203
  br i1 %208, label %245, label %239

239:                                              ; preds = %238
  %240 = and i16 %204, 16
  %241 = icmp eq i16 %240, 0
  %242 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 72), align 16
  %243 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 68), align 16
  %244 = select i1 %241, ptr %243, ptr %242
  store ptr %244, ptr %0, align 8, !tbaa !127
  br label %342

245:                                              ; preds = %238
  %246 = and i16 %204, 1
  %247 = icmp eq i16 %246, 0
  br i1 %247, label %254, label %248

248:                                              ; preds = %245
  %249 = and i16 %204, 16
  %250 = icmp eq i16 %249, 0
  %251 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 71), align 8
  %252 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 67), align 8
  %253 = select i1 %250, ptr %252, ptr %251
  store ptr %253, ptr %0, align 8, !tbaa !127
  br label %342

254:                                              ; preds = %245
  %255 = and i16 %204, 4
  %256 = icmp eq i16 %255, 0
  %257 = and i16 %204, 16
  %258 = icmp eq i16 %257, 0
  br i1 %256, label %263, label %259

259:                                              ; preds = %254
  %260 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 69), align 8
  %261 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 65), align 8
  %262 = select i1 %258, ptr %261, ptr %260
  store ptr %262, ptr %0, align 8, !tbaa !127
  br label %342

263:                                              ; preds = %254
  %264 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 70), align 16
  %265 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 66), align 16
  %266 = select i1 %258, ptr %265, ptr %264
  store ptr %266, ptr %0, align 8, !tbaa !127
  br label %342

267:                                              ; preds = %57
  %268 = and i16 %60, 32
  %269 = icmp eq i16 %268, 0
  br i1 %269, label %271, label %270

270:                                              ; preds = %267
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9379, ptr noundef nonnull @.str.8) #24
  br label %271

271:                                              ; preds = %267, %270
  %272 = load ptr, ptr getelementptr inbounds (%struct.gcc_target, ptr @targetm, i64 0, i32 20), align 8, !tbaa !253
  %273 = tail call zeroext i8 %272() #24
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %275, label %277

275:                                              ; preds = %271
  %276 = load ptr, ptr getelementptr inbounds ([11 x ptr], ptr @integer_types, i64 0, i64 5), align 8, !tbaa !5
  store ptr %276, ptr %0, align 8, !tbaa !127
  br label %342

277:                                              ; preds = %271
  %278 = load i16, ptr %59, align 8
  %279 = and i16 %278, 2048
  %280 = icmp eq i16 %279, 0
  %281 = and i16 %278, 2
  %282 = icmp eq i16 %281, 0
  br i1 %280, label %312, label %283

283:                                              ; preds = %277
  br i1 %282, label %290, label %284

284:                                              ; preds = %283
  %285 = and i16 %278, 16
  %286 = icmp eq i16 %285, 0
  %287 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 80), align 16
  %288 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 76), align 16
  %289 = select i1 %286, ptr %288, ptr %287
  store ptr %289, ptr %0, align 8, !tbaa !127
  br label %342

290:                                              ; preds = %283
  %291 = and i16 %278, 1
  %292 = icmp eq i16 %291, 0
  br i1 %292, label %299, label %293

293:                                              ; preds = %290
  %294 = and i16 %278, 16
  %295 = icmp eq i16 %294, 0
  %296 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 79), align 8
  %297 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 75), align 8
  %298 = select i1 %295, ptr %297, ptr %296
  store ptr %298, ptr %0, align 8, !tbaa !127
  br label %342

299:                                              ; preds = %290
  %300 = and i16 %278, 4
  %301 = icmp eq i16 %300, 0
  %302 = and i16 %278, 16
  %303 = icmp eq i16 %302, 0
  br i1 %301, label %308, label %304

304:                                              ; preds = %299
  %305 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 77), align 8
  %306 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 73), align 8
  %307 = select i1 %303, ptr %306, ptr %305
  store ptr %307, ptr %0, align 8, !tbaa !127
  br label %342

308:                                              ; preds = %299
  %309 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 78), align 16
  %310 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 74), align 16
  %311 = select i1 %303, ptr %310, ptr %309
  store ptr %311, ptr %0, align 8, !tbaa !127
  br label %342

312:                                              ; preds = %277
  br i1 %282, label %319, label %313

313:                                              ; preds = %312
  %314 = and i16 %278, 16
  %315 = icmp eq i16 %314, 0
  %316 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 88), align 16
  %317 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 84), align 16
  %318 = select i1 %315, ptr %317, ptr %316
  store ptr %318, ptr %0, align 8, !tbaa !127
  br label %342

319:                                              ; preds = %312
  %320 = and i16 %278, 1
  %321 = icmp eq i16 %320, 0
  br i1 %321, label %328, label %322

322:                                              ; preds = %319
  %323 = and i16 %278, 16
  %324 = icmp eq i16 %323, 0
  %325 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 87), align 8
  %326 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 83), align 8
  %327 = select i1 %324, ptr %326, ptr %325
  store ptr %327, ptr %0, align 8, !tbaa !127
  br label %342

328:                                              ; preds = %319
  %329 = and i16 %278, 4
  %330 = icmp eq i16 %329, 0
  %331 = and i16 %278, 16
  %332 = icmp eq i16 %331, 0
  br i1 %330, label %337, label %333

333:                                              ; preds = %328
  %334 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 85), align 8
  %335 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 81), align 8
  %336 = select i1 %332, ptr %335, ptr %334
  store ptr %336, ptr %0, align 8, !tbaa !127
  br label %342

337:                                              ; preds = %328
  %338 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 86), align 16
  %339 = load ptr, ptr getelementptr inbounds ([131 x ptr], ptr @global_trees, i64 0, i64 82), align 16
  %340 = select i1 %332, ptr %339, ptr %338
  store ptr %340, ptr %0, align 8, !tbaa !127
  br label %342

341:                                              ; preds = %57
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9422, ptr noundef nonnull @.str.8) #24
  br label %342

342:                                              ; preds = %72, %78, %152, %341, %102, %91, %142, %132, %174, %170, %187, %189, %185, %219, %234, %230, %210, %248, %263, %259, %239, %201, %293, %308, %304, %284, %322, %337, %333, %313, %275, %9, %4
  ret ptr %0
}

declare ptr @build_complex_type(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @c_write_global_declarations() local_unnamed_addr #9 {
  %1 = alloca i32, align 4
  %2 = load ptr, ptr @pch_file, align 8, !tbaa !5
  %3 = icmp eq ptr %2, null
  %4 = load i32, ptr @flag_syntax_only, align 4
  %5 = icmp eq i32 %4, 0
  %6 = select i1 %3, i1 %5, i1 false
  br i1 %6, label %7, label %95

7:                                                ; preds = %0
  %8 = tail call ptr @pop_scope()
  store ptr %8, ptr @ext_block, align 8, !tbaa !5
  store ptr null, ptr @external_scope, align 8, !tbaa !5
  %9 = load ptr, ptr @current_scope, align 8, !tbaa !5
  %10 = icmp eq ptr %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @fancy_abort(ptr noundef nonnull @.str.7, i32 noundef 9501, ptr noundef nonnull @.str.8) #24
  %12 = load ptr, ptr @ext_block, align 8, !tbaa !5
  br label %13

13:                                               ; preds = %7, %11
  %14 = phi ptr [ %8, %7 ], [ %12, %11 ]
  %15 = icmp eq ptr %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.tree_block, ptr %14, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %1) #24
  %19 = call ptr @dump_begin(i32 noundef 2, ptr noundef nonnull %1) #24
  %20 = icmp ne ptr %19, null
  %21 = icmp ne ptr %18, null
  %22 = select i1 %20, i1 %21, i1 false
  br i1 %22, label %23, label %26

23:                                               ; preds = %16
  %24 = load i32, ptr %1, align 4, !tbaa !20
  %25 = and i32 %24, -3
  call void @dump_node(ptr noundef nonnull %18, i32 noundef %25, ptr noundef nonnull %19) #24
  call void @dump_end(i32 noundef 2, ptr noundef nonnull %19) #24
  br label %26

26:                                               ; preds = %23, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %1) #24
  br label %27

27:                                               ; preds = %26, %13
  %28 = load ptr, ptr @all_translation_units, align 8, !tbaa !16
  %29 = icmp eq ptr %28, null
  br i1 %29, label %39, label %30

30:                                               ; preds = %27, %30
  %31 = phi ptr [ %37, %30 ], [ %28, %27 ]
  %32 = getelementptr inbounds %struct.tree_decl_common, ptr %31, i64 0, i32 5
  %33 = load ptr, ptr %32, align 8, !tbaa !16
  %34 = getelementptr inbounds %struct.tree_block, ptr %33, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !16
  call fastcc void @c_write_global_declarations_1(ptr noundef %35)
  %36 = getelementptr inbounds %struct.tree_common, ptr %31, i64 0, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !16
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %30, !llvm.loop !254

39:                                               ; preds = %30, %27
  %40 = load ptr, ptr @ext_block, align 8, !tbaa !5
  %41 = getelementptr inbounds %struct.tree_block, ptr %40, i64 0, i32 3
  %42 = load ptr, ptr %41, align 8, !tbaa !16
  call fastcc void @c_write_global_declarations_1(ptr noundef %42)
  call void @cgraph_finalize_compilation_unit() #24
  %43 = load ptr, ptr @global_dc, align 8, !tbaa !5
  %44 = getelementptr inbounds %struct.diagnostic_context, ptr %43, i64 0, i32 1, i64 4
  %45 = load i32, ptr %44, align 8, !tbaa !20
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %94

47:                                               ; preds = %39
  %48 = getelementptr inbounds %struct.diagnostic_context, ptr %43, i64 0, i32 1, i64 5
  %49 = load i32, ptr %48, align 4, !tbaa !20
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %94

51:                                               ; preds = %47
  %52 = load i8, ptr @timevar_enable, align 1, !tbaa !16
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  call void @timevar_push_1(i32 noundef 166) #24
  br label %55

55:                                               ; preds = %54, %51
  %56 = load ptr, ptr @all_translation_units, align 8, !tbaa !16
  %57 = icmp eq ptr %56, null
  br i1 %57, label %77, label %58

58:                                               ; preds = %55, %73
  %59 = phi ptr [ %75, %73 ], [ %56, %55 ]
  %60 = getelementptr inbounds %struct.tree_decl_common, ptr %59, i64 0, i32 5
  %61 = load ptr, ptr %60, align 8, !tbaa !16
  %62 = getelementptr inbounds %struct.tree_block, ptr %61, i64 0, i32 3
  %63 = load ptr, ptr %62, align 8, !tbaa !16
  %64 = icmp eq ptr %63, null
  br i1 %64, label %73, label %65

65:                                               ; preds = %58, %65
  %66 = phi ptr [ %71, %65 ], [ %63, %58 ]
  %67 = load ptr, ptr @debug_hooks, align 8, !tbaa !5
  %68 = getelementptr inbounds %struct.gcc_debug_hooks, ptr %67, i64 0, i32 17
  %69 = load ptr, ptr %68, align 8, !tbaa !255
  call void %69(ptr noundef nonnull %66) #24
  %70 = getelementptr inbounds %struct.tree_common, ptr %66, i64 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !16
  %72 = icmp eq ptr %71, null
  br i1 %72, label %73, label %65, !llvm.loop !256

73:                                               ; preds = %65, %58
  %74 = getelementptr inbounds %struct.tree_common, ptr %59, i64 0, i32 1
  %75 = load ptr, ptr %74, align 8, !tbaa !16
  %76 = icmp eq ptr %75, null
  br i1 %76, label %77, label %58, !llvm.loop !257

77:                                               ; preds = %73, %55
  %78 = load ptr, ptr @ext_block, align 8, !tbaa !5
  %79 = getelementptr inbounds %struct.tree_block, ptr %78, i64 0, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !16
  %81 = icmp eq ptr %80, null
  br i1 %81, label %90, label %82

82:                                               ; preds = %77, %82
  %83 = phi ptr [ %88, %82 ], [ %80, %77 ]
  %84 = load ptr, ptr @debug_hooks, align 8, !tbaa !5
  %85 = getelementptr inbounds %struct.gcc_debug_hooks, ptr %84, i64 0, i32 17
  %86 = load ptr, ptr %85, align 8, !tbaa !255
  call void %86(ptr noundef nonnull %83) #24
  %87 = getelementptr inbounds %struct.tree_common, ptr %83, i64 0, i32 1
  %88 = load ptr, ptr %87, align 8, !tbaa !16
  %89 = icmp eq ptr %88, null
  br i1 %89, label %90, label %82, !llvm.loop !256

90:                                               ; preds = %82, %77
  %91 = load i8, ptr @timevar_enable, align 1, !tbaa !16
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %90
  call void @timevar_pop_1(i32 noundef 166) #24
  br label %94

94:                                               ; preds = %90, %93, %47, %39
  store ptr null, ptr @ext_block, align 8, !tbaa !5
  br label %95

95:                                               ; preds = %0, %94
  ret void
}

declare ptr @dump_begin(i32 noundef, ptr noundef) local_unnamed_addr #3

declare void @dump_node(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare void @dump_end(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @c_write_global_declarations_1(ptr noundef %0) unnamed_addr #9 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %47, label %3

3:                                                ; preds = %1, %25
  %4 = phi ptr [ %27, %25 ], [ %0, %1 ]
  %5 = load i64, ptr %4, align 8
  %6 = and i64 %5, 65535
  %7 = icmp eq i64 %6, 29
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.tree_decl_common, ptr %4, i64 0, i32 5
  %10 = load ptr, ptr %9, align 8, !tbaa !16
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %25

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.tree_decl_common, ptr %4, i64 0, i32 2
  %14 = load i64, ptr %13, align 8
  %15 = and i64 %5, 134217728
  %16 = icmp ne i64 %15, 0
  %17 = and i64 %14, 34603008
  %18 = icmp ne i64 %17, 34603008
  %19 = or i1 %16, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %12
  %21 = load i32, ptr @input_location, align 4, !tbaa !20
  %22 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %21, i32 noundef 0, ptr noundef nonnull @.str.375, ptr noundef nonnull %4) #24
  %23 = load i64, ptr %4, align 8
  %24 = or i64 %23, 8388608
  store i64 %24, ptr %4, align 8
  br label %25

25:                                               ; preds = %20, %12, %8, %3
  tail call void @wrapup_global_declaration_1(ptr noundef nonnull %4) #24
  %26 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !16
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %3, !llvm.loop !258

29:                                               ; preds = %25, %37
  %30 = phi i8 [ %38, %37 ], [ 0, %25 ]
  %31 = phi ptr [ %39, %37 ], [ %0, %25 ]
  %32 = tail call zeroext i8 @wrapup_global_declaration_2(ptr noundef nonnull %31) #24
  %33 = or i8 %32, %30
  %34 = getelementptr inbounds %struct.tree_common, ptr %31, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !16
  %36 = icmp eq ptr %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %29, %40
  %38 = phi i8 [ %33, %29 ], [ 0, %40 ]
  %39 = phi ptr [ %35, %29 ], [ %0, %40 ]
  br label %29, !llvm.loop !259

40:                                               ; preds = %29
  %41 = icmp eq i8 %33, 0
  br i1 %41, label %42, label %37

42:                                               ; preds = %40, %42
  %43 = phi ptr [ %45, %42 ], [ %0, %40 ]
  tail call void @check_global_declaration_1(ptr noundef nonnull %43) #24
  %44 = getelementptr inbounds %struct.tree_common, ptr %43, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !16
  %46 = icmp eq ptr %45, null
  br i1 %46, label %47, label %42, !llvm.loop !260

47:                                               ; preds = %42, %1
  ret void
}

declare void @cgraph_finalize_compilation_unit() local_unnamed_addr #3

declare void @timevar_push_1(i32 noundef) local_unnamed_addr #3

declare void @timevar_pop_1(i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_c_inline_static(ptr noundef %0) #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %34, label %3

3:                                                ; preds = %1, %7
  %4 = phi ptr [ %9, %7 ], [ %0, %1 ]
  %5 = tail call i32 @ggc_set_mark(ptr noundef nonnull %4) #24
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.c_inline_static, ptr %4, i64 0, i32 4
  %9 = load ptr, ptr %8, align 8, !tbaa !42
  %10 = icmp ult ptr %9, inttoptr (i64 2 to ptr)
  br i1 %10, label %11, label %3, !llvm.loop !261

11:                                               ; preds = %3, %7
  %12 = phi ptr [ %4, %3 ], [ %9, %7 ]
  %13 = icmp eq ptr %12, %0
  br i1 %13, label %34, label %14

14:                                               ; preds = %11, %31
  %15 = phi ptr [ %32, %31 ], [ %0, %11 ]
  %16 = getelementptr inbounds %struct.c_inline_static, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !39
  %18 = icmp eq ptr %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %17)
  br label %20

20:                                               ; preds = %14, %19
  %21 = getelementptr inbounds %struct.c_inline_static, ptr %15, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !40
  %23 = icmp eq ptr %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %22)
  br label %25

25:                                               ; preds = %20, %24
  %26 = getelementptr inbounds %struct.c_inline_static, ptr %15, i64 0, i32 4
  %27 = load ptr, ptr %26, align 8, !tbaa !42
  %28 = icmp eq ptr %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  tail call void @gt_ggc_mx_c_inline_static(ptr noundef nonnull %27)
  %30 = load ptr, ptr %26, align 8, !tbaa !42
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi ptr [ %30, %29 ], [ null, %25 ]
  %33 = icmp eq ptr %32, %12
  br i1 %33, label %34, label %14, !llvm.loop !262

34:                                               ; preds = %31, %1, %11
  ret void
}

declare i32 @ggc_set_mark(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_lang_tree_node(ptr noundef %0) #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %1508, label %3

3:                                                ; preds = %1, %7
  %4 = phi ptr [ %14, %7 ], [ %0, %1 ]
  %5 = tail call i32 @ggc_set_mark(ptr noundef nonnull %4) #24
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %16

7:                                                ; preds = %3
  %8 = load i64, ptr %4, align 8
  %9 = and i64 %8, 65535
  %10 = icmp eq i64 %9, 8
  %11 = getelementptr inbounds %struct.tree_type, ptr %4, i64 0, i32 15
  %12 = getelementptr inbounds %struct.tree_common, ptr %4, i64 0, i32 1
  %13 = select i1 %10, ptr %11, ptr %12
  %14 = load ptr, ptr %13, align 8, !tbaa !16
  %15 = icmp ult ptr %14, inttoptr (i64 2 to ptr)
  br i1 %15, label %16, label %3, !llvm.loop !263

16:                                               ; preds = %3, %7
  %17 = phi ptr [ %4, %3 ], [ %14, %7 ]
  %18 = icmp eq ptr %17, %0
  br i1 %18, label %1508, label %19

19:                                               ; preds = %16, %1499
  %20 = phi ptr [ %1506, %1499 ], [ %0, %16 ]
  %21 = load i64, ptr %20, align 8
  %22 = and i64 %21, 65535
  %23 = icmp eq i64 %22, 1
  br i1 %23, label %1450, label %24

24:                                               ; preds = %19
  %25 = tail call i32 @tree_node_structure(ptr noundef nonnull %20) #24
  switch i32 %25, label %1499 [
    i32 33, label %1440
    i32 1, label %26
    i32 2, label %36
    i32 3, label %46
    i32 4, label %61
    i32 5, label %76
    i32 6, label %91
    i32 7, label %101
    i32 8, label %121
    i32 9, label %134
    i32 10, label %154
    i32 11, label %205
    i32 12, label %261
    i32 16, label %352
    i32 13, label %418
    i32 15, label %489
    i32 14, label %565
    i32 17, label %641
    i32 18, label %697
    i32 19, label %758
    i32 20, label %814
    i32 21, label %905
    i32 22, label %1016
    i32 23, label %1136
    i32 24, label %1156
    i32 25, label %1180
    i32 26, label %1224
    i32 27, label %1249
    i32 28, label %1294
    i32 29, label %1358
    i32 30, label %1378
    i32 31, label %1393
    i32 32, label %1430
  ]

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !16
  %29 = icmp eq ptr %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %28)
  br label %31

31:                                               ; preds = %26, %30
  %32 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %33 = load ptr, ptr %32, align 8, !tbaa !16
  %34 = icmp eq ptr %33, null
  br i1 %34, label %1499, label %35

35:                                               ; preds = %31
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %33)
  br label %1499

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !16
  %39 = icmp eq ptr %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %38)
  br label %41

41:                                               ; preds = %36, %40
  %42 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %43 = load ptr, ptr %42, align 8, !tbaa !16
  %44 = icmp eq ptr %43, null
  br i1 %44, label %1499, label %45

45:                                               ; preds = %41
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %43)
  br label %1499

46:                                               ; preds = %24
  %47 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !16
  %49 = icmp eq ptr %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %48)
  br label %51

51:                                               ; preds = %46, %50
  %52 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %53 = load ptr, ptr %52, align 8, !tbaa !16
  %54 = icmp eq ptr %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %51
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %53)
  br label %56

56:                                               ; preds = %51, %55
  %57 = getelementptr inbounds %struct.tree_real_cst, ptr %20, i64 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !16
  %59 = icmp eq ptr %58, null
  br i1 %59, label %1499, label %60

60:                                               ; preds = %56
  tail call void @gt_ggc_mx_real_value(ptr noundef nonnull %58) #24
  br label %1499

61:                                               ; preds = %24
  %62 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %63 = load ptr, ptr %62, align 8, !tbaa !16
  %64 = icmp eq ptr %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %63)
  br label %66

66:                                               ; preds = %61, %65
  %67 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %68 = load ptr, ptr %67, align 8, !tbaa !16
  %69 = icmp eq ptr %68, null
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %68)
  br label %71

71:                                               ; preds = %66, %70
  %72 = getelementptr inbounds %struct.tree_fixed_cst, ptr %20, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8, !tbaa !16
  %74 = icmp eq ptr %73, null
  br i1 %74, label %1499, label %75

75:                                               ; preds = %71
  tail call void @gt_ggc_mx_fixed_value(ptr noundef nonnull %73) #24
  br label %1499

76:                                               ; preds = %24
  %77 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %78 = load ptr, ptr %77, align 8, !tbaa !16
  %79 = icmp eq ptr %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %76
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %78)
  br label %81

81:                                               ; preds = %76, %80
  %82 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %83 = load ptr, ptr %82, align 8, !tbaa !16
  %84 = icmp eq ptr %83, null
  br i1 %84, label %86, label %85

85:                                               ; preds = %81
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %83)
  br label %86

86:                                               ; preds = %81, %85
  %87 = getelementptr inbounds %struct.tree_vector, ptr %20, i64 0, i32 1
  %88 = load ptr, ptr %87, align 8, !tbaa !16
  %89 = icmp eq ptr %88, null
  br i1 %89, label %1499, label %90

90:                                               ; preds = %86
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %88)
  br label %1499

91:                                               ; preds = %24
  %92 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %93 = load ptr, ptr %92, align 8, !tbaa !16
  %94 = icmp eq ptr %93, null
  br i1 %94, label %96, label %95

95:                                               ; preds = %91
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %93)
  br label %96

96:                                               ; preds = %91, %95
  %97 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %98 = load ptr, ptr %97, align 8, !tbaa !16
  %99 = icmp eq ptr %98, null
  br i1 %99, label %1499, label %100

100:                                              ; preds = %96
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %98)
  br label %1499

101:                                              ; preds = %24
  %102 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %103 = load ptr, ptr %102, align 8, !tbaa !16
  %104 = icmp eq ptr %103, null
  br i1 %104, label %106, label %105

105:                                              ; preds = %101
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %103)
  br label %106

106:                                              ; preds = %101, %105
  %107 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %108 = load ptr, ptr %107, align 8, !tbaa !16
  %109 = icmp eq ptr %108, null
  br i1 %109, label %111, label %110

110:                                              ; preds = %106
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %108)
  br label %111

111:                                              ; preds = %106, %110
  %112 = getelementptr inbounds %struct.tree_complex, ptr %20, i64 0, i32 1
  %113 = load ptr, ptr %112, align 8, !tbaa !16
  %114 = icmp eq ptr %113, null
  br i1 %114, label %116, label %115

115:                                              ; preds = %111
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %113)
  br label %116

116:                                              ; preds = %111, %115
  %117 = getelementptr inbounds %struct.tree_complex, ptr %20, i64 0, i32 2
  %118 = load ptr, ptr %117, align 8, !tbaa !16
  %119 = icmp eq ptr %118, null
  br i1 %119, label %1499, label %120

120:                                              ; preds = %116
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %118)
  br label %1499

121:                                              ; preds = %24
  %122 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %123 = load ptr, ptr %122, align 8, !tbaa !16
  %124 = icmp eq ptr %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %123)
  br label %126

126:                                              ; preds = %121, %125
  %127 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %128 = load ptr, ptr %127, align 8, !tbaa !16
  %129 = icmp eq ptr %128, null
  br i1 %129, label %131, label %130

130:                                              ; preds = %126
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %128)
  br label %131

131:                                              ; preds = %130, %126
  %132 = getelementptr inbounds %struct.tree_identifier, ptr %20, i64 0, i32 1
  %133 = load ptr, ptr %132, align 8, !tbaa !16
  tail call void @gt_ggc_m_S(ptr noundef %133) #24
  br label %1499

134:                                              ; preds = %24
  %135 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %136 = load ptr, ptr %135, align 8, !tbaa !16
  %137 = icmp eq ptr %136, null
  br i1 %137, label %139, label %138

138:                                              ; preds = %134
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %136)
  br label %139

139:                                              ; preds = %134, %138
  %140 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %141 = load ptr, ptr %140, align 8, !tbaa !16
  %142 = icmp eq ptr %141, null
  br i1 %142, label %144, label %143

143:                                              ; preds = %139
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %141)
  br label %144

144:                                              ; preds = %139, %143
  %145 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 3
  %146 = load ptr, ptr %145, align 8, !tbaa !16
  %147 = icmp eq ptr %146, null
  br i1 %147, label %149, label %148

148:                                              ; preds = %144
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %146)
  br label %149

149:                                              ; preds = %144, %148
  %150 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 4
  %151 = load ptr, ptr %150, align 8, !tbaa !16
  %152 = icmp eq ptr %151, null
  br i1 %152, label %1499, label %153

153:                                              ; preds = %149
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %151)
  br label %1499

154:                                              ; preds = %24
  %155 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %156 = load ptr, ptr %155, align 8, !tbaa !16
  %157 = icmp eq ptr %156, null
  br i1 %157, label %159, label %158

158:                                              ; preds = %154
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %156)
  br label %159

159:                                              ; preds = %154, %158
  %160 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %161 = load ptr, ptr %160, align 8, !tbaa !16
  %162 = icmp eq ptr %161, null
  br i1 %162, label %164, label %163

163:                                              ; preds = %159
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %161)
  br label %164

164:                                              ; preds = %159, %163
  %165 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 3
  %166 = load ptr, ptr %165, align 8, !tbaa !16
  %167 = icmp eq ptr %166, null
  br i1 %167, label %169, label %168

168:                                              ; preds = %164
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %166)
  br label %169

169:                                              ; preds = %164, %168
  %170 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 4
  %171 = load ptr, ptr %170, align 8, !tbaa !16
  %172 = icmp eq ptr %171, null
  br i1 %172, label %174, label %173

173:                                              ; preds = %169
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %171)
  br label %174

174:                                              ; preds = %169, %173
  %175 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 1
  %176 = load ptr, ptr %175, align 8, !tbaa !16
  %177 = icmp eq ptr %176, null
  br i1 %177, label %179, label %178

178:                                              ; preds = %174
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %176)
  br label %179

179:                                              ; preds = %174, %178
  %180 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 4
  %181 = load ptr, ptr %180, align 8, !tbaa !16
  %182 = icmp eq ptr %181, null
  br i1 %182, label %184, label %183

183:                                              ; preds = %179
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %181)
  br label %184

184:                                              ; preds = %179, %183
  %185 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 5
  %186 = load ptr, ptr %185, align 8, !tbaa !16
  %187 = icmp eq ptr %186, null
  br i1 %187, label %189, label %188

188:                                              ; preds = %184
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %186)
  br label %189

189:                                              ; preds = %184, %188
  %190 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 6
  %191 = load ptr, ptr %190, align 8, !tbaa !16
  %192 = icmp eq ptr %191, null
  br i1 %192, label %194, label %193

193:                                              ; preds = %189
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %191)
  br label %194

194:                                              ; preds = %189, %193
  %195 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 7
  %196 = load ptr, ptr %195, align 8, !tbaa !16
  %197 = icmp eq ptr %196, null
  br i1 %197, label %199, label %198

198:                                              ; preds = %194
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %196)
  br label %199

199:                                              ; preds = %194, %198
  %200 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 8
  %201 = load ptr, ptr %200, align 8, !tbaa !16
  %202 = icmp ult ptr %201, inttoptr (i64 2 to ptr)
  br i1 %202, label %1499, label %203

203:                                              ; preds = %199
  %204 = tail call i32 @ggc_set_mark(ptr noundef nonnull %201) #24
  br label %1499

205:                                              ; preds = %24
  %206 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %207 = load ptr, ptr %206, align 8, !tbaa !16
  %208 = icmp eq ptr %207, null
  br i1 %208, label %210, label %209

209:                                              ; preds = %205
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %207)
  br label %210

210:                                              ; preds = %205, %209
  %211 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %212 = load ptr, ptr %211, align 8, !tbaa !16
  %213 = icmp eq ptr %212, null
  br i1 %213, label %215, label %214

214:                                              ; preds = %210
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %212)
  br label %215

215:                                              ; preds = %210, %214
  %216 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 3
  %217 = load ptr, ptr %216, align 8, !tbaa !16
  %218 = icmp eq ptr %217, null
  br i1 %218, label %220, label %219

219:                                              ; preds = %215
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %217)
  br label %220

220:                                              ; preds = %215, %219
  %221 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 4
  %222 = load ptr, ptr %221, align 8, !tbaa !16
  %223 = icmp eq ptr %222, null
  br i1 %223, label %225, label %224

224:                                              ; preds = %220
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %222)
  br label %225

225:                                              ; preds = %220, %224
  %226 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 1
  %227 = load ptr, ptr %226, align 8, !tbaa !16
  %228 = icmp eq ptr %227, null
  br i1 %228, label %230, label %229

229:                                              ; preds = %225
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %227)
  br label %230

230:                                              ; preds = %225, %229
  %231 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 4
  %232 = load ptr, ptr %231, align 8, !tbaa !16
  %233 = icmp eq ptr %232, null
  br i1 %233, label %235, label %234

234:                                              ; preds = %230
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %232)
  br label %235

235:                                              ; preds = %230, %234
  %236 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 5
  %237 = load ptr, ptr %236, align 8, !tbaa !16
  %238 = icmp eq ptr %237, null
  br i1 %238, label %240, label %239

239:                                              ; preds = %235
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %237)
  br label %240

240:                                              ; preds = %235, %239
  %241 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 6
  %242 = load ptr, ptr %241, align 8, !tbaa !16
  %243 = icmp eq ptr %242, null
  br i1 %243, label %245, label %244

244:                                              ; preds = %240
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %242)
  br label %245

245:                                              ; preds = %240, %244
  %246 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 7
  %247 = load ptr, ptr %246, align 8, !tbaa !16
  %248 = icmp eq ptr %247, null
  br i1 %248, label %250, label %249

249:                                              ; preds = %245
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %247)
  br label %250

250:                                              ; preds = %245, %249
  %251 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 8
  %252 = load ptr, ptr %251, align 8, !tbaa !16
  %253 = icmp ult ptr %252, inttoptr (i64 2 to ptr)
  br i1 %253, label %256, label %254

254:                                              ; preds = %250
  %255 = tail call i32 @ggc_set_mark(ptr noundef nonnull %252) #24
  br label %256

256:                                              ; preds = %250, %254
  %257 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %20, i64 0, i32 1
  %258 = load ptr, ptr %257, align 8, !tbaa !16
  %259 = icmp eq ptr %258, null
  br i1 %259, label %1499, label %260

260:                                              ; preds = %256
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %258) #24
  br label %1499

261:                                              ; preds = %24
  %262 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %263 = load ptr, ptr %262, align 8, !tbaa !16
  %264 = icmp eq ptr %263, null
  br i1 %264, label %266, label %265

265:                                              ; preds = %261
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %263)
  br label %266

266:                                              ; preds = %261, %265
  %267 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %268 = load ptr, ptr %267, align 8, !tbaa !16
  %269 = icmp eq ptr %268, null
  br i1 %269, label %271, label %270

270:                                              ; preds = %266
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %268)
  br label %271

271:                                              ; preds = %266, %270
  %272 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 3
  %273 = load ptr, ptr %272, align 8, !tbaa !16
  %274 = icmp eq ptr %273, null
  br i1 %274, label %276, label %275

275:                                              ; preds = %271
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %273)
  br label %276

276:                                              ; preds = %271, %275
  %277 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 4
  %278 = load ptr, ptr %277, align 8, !tbaa !16
  %279 = icmp eq ptr %278, null
  br i1 %279, label %281, label %280

280:                                              ; preds = %276
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %278)
  br label %281

281:                                              ; preds = %276, %280
  %282 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 1
  %283 = load ptr, ptr %282, align 8, !tbaa !16
  %284 = icmp eq ptr %283, null
  br i1 %284, label %286, label %285

285:                                              ; preds = %281
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %283)
  br label %286

286:                                              ; preds = %281, %285
  %287 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 4
  %288 = load ptr, ptr %287, align 8, !tbaa !16
  %289 = icmp eq ptr %288, null
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %288)
  br label %291

291:                                              ; preds = %286, %290
  %292 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 5
  %293 = load ptr, ptr %292, align 8, !tbaa !16
  %294 = icmp eq ptr %293, null
  br i1 %294, label %296, label %295

295:                                              ; preds = %291
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %293)
  br label %296

296:                                              ; preds = %291, %295
  %297 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 6
  %298 = load ptr, ptr %297, align 8, !tbaa !16
  %299 = icmp eq ptr %298, null
  br i1 %299, label %301, label %300

300:                                              ; preds = %296
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %298)
  br label %301

301:                                              ; preds = %296, %300
  %302 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 7
  %303 = load ptr, ptr %302, align 8, !tbaa !16
  %304 = icmp eq ptr %303, null
  br i1 %304, label %306, label %305

305:                                              ; preds = %301
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %303)
  br label %306

306:                                              ; preds = %301, %305
  %307 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 8
  %308 = load ptr, ptr %307, align 8, !tbaa !16
  %309 = icmp ult ptr %308, inttoptr (i64 2 to ptr)
  br i1 %309, label %312, label %310

310:                                              ; preds = %306
  %311 = tail call i32 @ggc_set_mark(ptr noundef nonnull %308) #24
  br label %312

312:                                              ; preds = %306, %310
  %313 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %20, i64 0, i32 1
  %314 = load ptr, ptr %313, align 8, !tbaa !16
  %315 = icmp eq ptr %314, null
  br i1 %315, label %317, label %316

316:                                              ; preds = %312
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %314) #24
  br label %317

317:                                              ; preds = %312, %316
  %318 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 1
  %319 = load ptr, ptr %318, align 8, !tbaa !16
  %320 = icmp eq ptr %319, null
  br i1 %320, label %322, label %321

321:                                              ; preds = %317
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %319)
  br label %322

322:                                              ; preds = %317, %321
  %323 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 2
  %324 = load ptr, ptr %323, align 8, !tbaa !16
  %325 = icmp eq ptr %324, null
  br i1 %325, label %327, label %326

326:                                              ; preds = %322
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %324)
  br label %327

327:                                              ; preds = %322, %326
  %328 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 3
  %329 = load ptr, ptr %328, align 8, !tbaa !16
  %330 = icmp eq ptr %329, null
  br i1 %330, label %332, label %331

331:                                              ; preds = %327
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %329)
  br label %332

332:                                              ; preds = %327, %331
  %333 = getelementptr inbounds %struct.tree_decl_non_common, ptr %20, i64 0, i32 1
  %334 = load ptr, ptr %333, align 8, !tbaa !16
  %335 = icmp eq ptr %334, null
  br i1 %335, label %337, label %336

336:                                              ; preds = %332
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %334)
  br label %337

337:                                              ; preds = %332, %336
  %338 = getelementptr inbounds %struct.tree_decl_non_common, ptr %20, i64 0, i32 2
  %339 = load ptr, ptr %338, align 8, !tbaa !16
  %340 = icmp eq ptr %339, null
  br i1 %340, label %342, label %341

341:                                              ; preds = %337
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %339)
  br label %342

342:                                              ; preds = %337, %341
  %343 = getelementptr inbounds %struct.tree_decl_non_common, ptr %20, i64 0, i32 3
  %344 = load ptr, ptr %343, align 8, !tbaa !16
  %345 = icmp eq ptr %344, null
  br i1 %345, label %347, label %346

346:                                              ; preds = %342
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %344)
  br label %347

347:                                              ; preds = %342, %346
  %348 = getelementptr inbounds %struct.tree_decl_non_common, ptr %20, i64 0, i32 4
  %349 = load ptr, ptr %348, align 8, !tbaa !16
  %350 = icmp eq ptr %349, null
  br i1 %350, label %1499, label %351

351:                                              ; preds = %347
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %349)
  br label %1499

352:                                              ; preds = %24
  %353 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %354 = load ptr, ptr %353, align 8, !tbaa !16
  %355 = icmp eq ptr %354, null
  br i1 %355, label %357, label %356

356:                                              ; preds = %352
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %354)
  br label %357

357:                                              ; preds = %352, %356
  %358 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %359 = load ptr, ptr %358, align 8, !tbaa !16
  %360 = icmp eq ptr %359, null
  br i1 %360, label %362, label %361

361:                                              ; preds = %357
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %359)
  br label %362

362:                                              ; preds = %357, %361
  %363 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 3
  %364 = load ptr, ptr %363, align 8, !tbaa !16
  %365 = icmp eq ptr %364, null
  br i1 %365, label %367, label %366

366:                                              ; preds = %362
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %364)
  br label %367

367:                                              ; preds = %362, %366
  %368 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 4
  %369 = load ptr, ptr %368, align 8, !tbaa !16
  %370 = icmp eq ptr %369, null
  br i1 %370, label %372, label %371

371:                                              ; preds = %367
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %369)
  br label %372

372:                                              ; preds = %367, %371
  %373 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 1
  %374 = load ptr, ptr %373, align 8, !tbaa !16
  %375 = icmp eq ptr %374, null
  br i1 %375, label %377, label %376

376:                                              ; preds = %372
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %374)
  br label %377

377:                                              ; preds = %372, %376
  %378 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 4
  %379 = load ptr, ptr %378, align 8, !tbaa !16
  %380 = icmp eq ptr %379, null
  br i1 %380, label %382, label %381

381:                                              ; preds = %377
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %379)
  br label %382

382:                                              ; preds = %377, %381
  %383 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 5
  %384 = load ptr, ptr %383, align 8, !tbaa !16
  %385 = icmp eq ptr %384, null
  br i1 %385, label %387, label %386

386:                                              ; preds = %382
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %384)
  br label %387

387:                                              ; preds = %382, %386
  %388 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 6
  %389 = load ptr, ptr %388, align 8, !tbaa !16
  %390 = icmp eq ptr %389, null
  br i1 %390, label %392, label %391

391:                                              ; preds = %387
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %389)
  br label %392

392:                                              ; preds = %387, %391
  %393 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 7
  %394 = load ptr, ptr %393, align 8, !tbaa !16
  %395 = icmp eq ptr %394, null
  br i1 %395, label %397, label %396

396:                                              ; preds = %392
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %394)
  br label %397

397:                                              ; preds = %392, %396
  %398 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 8
  %399 = load ptr, ptr %398, align 8, !tbaa !16
  %400 = icmp ult ptr %399, inttoptr (i64 2 to ptr)
  br i1 %400, label %403, label %401

401:                                              ; preds = %397
  %402 = tail call i32 @ggc_set_mark(ptr noundef nonnull %399) #24
  br label %403

403:                                              ; preds = %397, %401
  %404 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %20, i64 0, i32 1
  %405 = load ptr, ptr %404, align 8, !tbaa !16
  %406 = icmp eq ptr %405, null
  br i1 %406, label %408, label %407

407:                                              ; preds = %403
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %405) #24
  br label %408

408:                                              ; preds = %403, %407
  %409 = getelementptr inbounds %struct.tree_parm_decl, ptr %20, i64 0, i32 1
  %410 = load ptr, ptr %409, align 8, !tbaa !16
  %411 = icmp eq ptr %410, null
  br i1 %411, label %413, label %412

412:                                              ; preds = %408
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %410) #24
  br label %413

413:                                              ; preds = %408, %412
  %414 = getelementptr inbounds %struct.tree_parm_decl, ptr %20, i64 0, i32 2
  %415 = load ptr, ptr %414, align 8, !tbaa !16
  %416 = icmp eq ptr %415, null
  br i1 %416, label %1499, label %417

417:                                              ; preds = %413
  tail call void @gt_ggc_mx_var_ann_d(ptr noundef nonnull %415) #24
  br label %1499

418:                                              ; preds = %24
  %419 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %420 = load ptr, ptr %419, align 8, !tbaa !16
  %421 = icmp eq ptr %420, null
  br i1 %421, label %423, label %422

422:                                              ; preds = %418
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %420)
  br label %423

423:                                              ; preds = %418, %422
  %424 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %425 = load ptr, ptr %424, align 8, !tbaa !16
  %426 = icmp eq ptr %425, null
  br i1 %426, label %428, label %427

427:                                              ; preds = %423
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %425)
  br label %428

428:                                              ; preds = %423, %427
  %429 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 3
  %430 = load ptr, ptr %429, align 8, !tbaa !16
  %431 = icmp eq ptr %430, null
  br i1 %431, label %433, label %432

432:                                              ; preds = %428
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %430)
  br label %433

433:                                              ; preds = %428, %432
  %434 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 4
  %435 = load ptr, ptr %434, align 8, !tbaa !16
  %436 = icmp eq ptr %435, null
  br i1 %436, label %438, label %437

437:                                              ; preds = %433
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %435)
  br label %438

438:                                              ; preds = %433, %437
  %439 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 1
  %440 = load ptr, ptr %439, align 8, !tbaa !16
  %441 = icmp eq ptr %440, null
  br i1 %441, label %443, label %442

442:                                              ; preds = %438
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %440)
  br label %443

443:                                              ; preds = %438, %442
  %444 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 4
  %445 = load ptr, ptr %444, align 8, !tbaa !16
  %446 = icmp eq ptr %445, null
  br i1 %446, label %448, label %447

447:                                              ; preds = %443
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %445)
  br label %448

448:                                              ; preds = %443, %447
  %449 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 5
  %450 = load ptr, ptr %449, align 8, !tbaa !16
  %451 = icmp eq ptr %450, null
  br i1 %451, label %453, label %452

452:                                              ; preds = %448
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %450)
  br label %453

453:                                              ; preds = %448, %452
  %454 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 6
  %455 = load ptr, ptr %454, align 8, !tbaa !16
  %456 = icmp eq ptr %455, null
  br i1 %456, label %458, label %457

457:                                              ; preds = %453
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %455)
  br label %458

458:                                              ; preds = %453, %457
  %459 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 7
  %460 = load ptr, ptr %459, align 8, !tbaa !16
  %461 = icmp eq ptr %460, null
  br i1 %461, label %463, label %462

462:                                              ; preds = %458
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %460)
  br label %463

463:                                              ; preds = %458, %462
  %464 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 8
  %465 = load ptr, ptr %464, align 8, !tbaa !16
  %466 = icmp ult ptr %465, inttoptr (i64 2 to ptr)
  br i1 %466, label %469, label %467

467:                                              ; preds = %463
  %468 = tail call i32 @ggc_set_mark(ptr noundef nonnull %465) #24
  br label %469

469:                                              ; preds = %463, %467
  %470 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %20, i64 0, i32 1
  %471 = load ptr, ptr %470, align 8, !tbaa !16
  %472 = icmp eq ptr %471, null
  br i1 %472, label %474, label %473

473:                                              ; preds = %469
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %471) #24
  br label %474

474:                                              ; preds = %469, %473
  %475 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 1
  %476 = load ptr, ptr %475, align 8, !tbaa !16
  %477 = icmp eq ptr %476, null
  br i1 %477, label %479, label %478

478:                                              ; preds = %474
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %476)
  br label %479

479:                                              ; preds = %474, %478
  %480 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 2
  %481 = load ptr, ptr %480, align 8, !tbaa !16
  %482 = icmp eq ptr %481, null
  br i1 %482, label %484, label %483

483:                                              ; preds = %479
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %481)
  br label %484

484:                                              ; preds = %479, %483
  %485 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 3
  %486 = load ptr, ptr %485, align 8, !tbaa !16
  %487 = icmp eq ptr %486, null
  br i1 %487, label %1499, label %488

488:                                              ; preds = %484
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %486)
  br label %1499

489:                                              ; preds = %24
  %490 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %491 = load ptr, ptr %490, align 8, !tbaa !16
  %492 = icmp eq ptr %491, null
  br i1 %492, label %494, label %493

493:                                              ; preds = %489
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %491)
  br label %494

494:                                              ; preds = %489, %493
  %495 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %496 = load ptr, ptr %495, align 8, !tbaa !16
  %497 = icmp eq ptr %496, null
  br i1 %497, label %499, label %498

498:                                              ; preds = %494
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %496)
  br label %499

499:                                              ; preds = %494, %498
  %500 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 3
  %501 = load ptr, ptr %500, align 8, !tbaa !16
  %502 = icmp eq ptr %501, null
  br i1 %502, label %504, label %503

503:                                              ; preds = %499
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %501)
  br label %504

504:                                              ; preds = %499, %503
  %505 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 4
  %506 = load ptr, ptr %505, align 8, !tbaa !16
  %507 = icmp eq ptr %506, null
  br i1 %507, label %509, label %508

508:                                              ; preds = %504
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %506)
  br label %509

509:                                              ; preds = %504, %508
  %510 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 1
  %511 = load ptr, ptr %510, align 8, !tbaa !16
  %512 = icmp eq ptr %511, null
  br i1 %512, label %514, label %513

513:                                              ; preds = %509
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %511)
  br label %514

514:                                              ; preds = %509, %513
  %515 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 4
  %516 = load ptr, ptr %515, align 8, !tbaa !16
  %517 = icmp eq ptr %516, null
  br i1 %517, label %519, label %518

518:                                              ; preds = %514
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %516)
  br label %519

519:                                              ; preds = %514, %518
  %520 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 5
  %521 = load ptr, ptr %520, align 8, !tbaa !16
  %522 = icmp eq ptr %521, null
  br i1 %522, label %524, label %523

523:                                              ; preds = %519
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %521)
  br label %524

524:                                              ; preds = %519, %523
  %525 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 6
  %526 = load ptr, ptr %525, align 8, !tbaa !16
  %527 = icmp eq ptr %526, null
  br i1 %527, label %529, label %528

528:                                              ; preds = %524
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %526)
  br label %529

529:                                              ; preds = %524, %528
  %530 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 7
  %531 = load ptr, ptr %530, align 8, !tbaa !16
  %532 = icmp eq ptr %531, null
  br i1 %532, label %534, label %533

533:                                              ; preds = %529
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %531)
  br label %534

534:                                              ; preds = %529, %533
  %535 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 8
  %536 = load ptr, ptr %535, align 8, !tbaa !16
  %537 = icmp ult ptr %536, inttoptr (i64 2 to ptr)
  br i1 %537, label %540, label %538

538:                                              ; preds = %534
  %539 = tail call i32 @ggc_set_mark(ptr noundef nonnull %536) #24
  br label %540

540:                                              ; preds = %534, %538
  %541 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %20, i64 0, i32 1
  %542 = load ptr, ptr %541, align 8, !tbaa !16
  %543 = icmp eq ptr %542, null
  br i1 %543, label %545, label %544

544:                                              ; preds = %540
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %542) #24
  br label %545

545:                                              ; preds = %540, %544
  %546 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 1
  %547 = load ptr, ptr %546, align 8, !tbaa !16
  %548 = icmp eq ptr %547, null
  br i1 %548, label %550, label %549

549:                                              ; preds = %545
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %547)
  br label %550

550:                                              ; preds = %545, %549
  %551 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 2
  %552 = load ptr, ptr %551, align 8, !tbaa !16
  %553 = icmp eq ptr %552, null
  br i1 %553, label %555, label %554

554:                                              ; preds = %550
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %552)
  br label %555

555:                                              ; preds = %550, %554
  %556 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 3
  %557 = load ptr, ptr %556, align 8, !tbaa !16
  %558 = icmp eq ptr %557, null
  br i1 %558, label %560, label %559

559:                                              ; preds = %555
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %557)
  br label %560

560:                                              ; preds = %555, %559
  %561 = getelementptr inbounds %struct.tree_var_decl, ptr %20, i64 0, i32 1
  %562 = load ptr, ptr %561, align 8, !tbaa !16
  %563 = icmp eq ptr %562, null
  br i1 %563, label %1499, label %564

564:                                              ; preds = %560
  tail call void @gt_ggc_mx_var_ann_d(ptr noundef nonnull %562) #24
  br label %1499

565:                                              ; preds = %24
  %566 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %567 = load ptr, ptr %566, align 8, !tbaa !16
  %568 = icmp eq ptr %567, null
  br i1 %568, label %570, label %569

569:                                              ; preds = %565
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %567)
  br label %570

570:                                              ; preds = %565, %569
  %571 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %572 = load ptr, ptr %571, align 8, !tbaa !16
  %573 = icmp eq ptr %572, null
  br i1 %573, label %575, label %574

574:                                              ; preds = %570
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %572)
  br label %575

575:                                              ; preds = %570, %574
  %576 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 3
  %577 = load ptr, ptr %576, align 8, !tbaa !16
  %578 = icmp eq ptr %577, null
  br i1 %578, label %580, label %579

579:                                              ; preds = %575
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %577)
  br label %580

580:                                              ; preds = %575, %579
  %581 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 4
  %582 = load ptr, ptr %581, align 8, !tbaa !16
  %583 = icmp eq ptr %582, null
  br i1 %583, label %585, label %584

584:                                              ; preds = %580
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %582)
  br label %585

585:                                              ; preds = %580, %584
  %586 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 1
  %587 = load ptr, ptr %586, align 8, !tbaa !16
  %588 = icmp eq ptr %587, null
  br i1 %588, label %590, label %589

589:                                              ; preds = %585
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %587)
  br label %590

590:                                              ; preds = %585, %589
  %591 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 4
  %592 = load ptr, ptr %591, align 8, !tbaa !16
  %593 = icmp eq ptr %592, null
  br i1 %593, label %595, label %594

594:                                              ; preds = %590
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %592)
  br label %595

595:                                              ; preds = %590, %594
  %596 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 5
  %597 = load ptr, ptr %596, align 8, !tbaa !16
  %598 = icmp eq ptr %597, null
  br i1 %598, label %600, label %599

599:                                              ; preds = %595
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %597)
  br label %600

600:                                              ; preds = %595, %599
  %601 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 6
  %602 = load ptr, ptr %601, align 8, !tbaa !16
  %603 = icmp eq ptr %602, null
  br i1 %603, label %605, label %604

604:                                              ; preds = %600
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %602)
  br label %605

605:                                              ; preds = %600, %604
  %606 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 7
  %607 = load ptr, ptr %606, align 8, !tbaa !16
  %608 = icmp eq ptr %607, null
  br i1 %608, label %610, label %609

609:                                              ; preds = %605
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %607)
  br label %610

610:                                              ; preds = %605, %609
  %611 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 8
  %612 = load ptr, ptr %611, align 8, !tbaa !16
  %613 = icmp ult ptr %612, inttoptr (i64 2 to ptr)
  br i1 %613, label %616, label %614

614:                                              ; preds = %610
  %615 = tail call i32 @ggc_set_mark(ptr noundef nonnull %612) #24
  br label %616

616:                                              ; preds = %610, %614
  %617 = getelementptr inbounds %struct.tree_field_decl, ptr %20, i64 0, i32 1
  %618 = load ptr, ptr %617, align 8, !tbaa !16
  %619 = icmp eq ptr %618, null
  br i1 %619, label %621, label %620

620:                                              ; preds = %616
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %618)
  br label %621

621:                                              ; preds = %616, %620
  %622 = getelementptr inbounds %struct.tree_field_decl, ptr %20, i64 0, i32 2
  %623 = load ptr, ptr %622, align 8, !tbaa !16
  %624 = icmp eq ptr %623, null
  br i1 %624, label %626, label %625

625:                                              ; preds = %621
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %623)
  br label %626

626:                                              ; preds = %621, %625
  %627 = getelementptr inbounds %struct.tree_field_decl, ptr %20, i64 0, i32 3
  %628 = load ptr, ptr %627, align 8, !tbaa !16
  %629 = icmp eq ptr %628, null
  br i1 %629, label %631, label %630

630:                                              ; preds = %626
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %628)
  br label %631

631:                                              ; preds = %626, %630
  %632 = getelementptr inbounds %struct.tree_field_decl, ptr %20, i64 0, i32 4
  %633 = load ptr, ptr %632, align 8, !tbaa !16
  %634 = icmp eq ptr %633, null
  br i1 %634, label %636, label %635

635:                                              ; preds = %631
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %633)
  br label %636

636:                                              ; preds = %631, %635
  %637 = getelementptr inbounds %struct.tree_field_decl, ptr %20, i64 0, i32 5
  %638 = load ptr, ptr %637, align 8, !tbaa !16
  %639 = icmp eq ptr %638, null
  br i1 %639, label %1499, label %640

640:                                              ; preds = %636
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %638)
  br label %1499

641:                                              ; preds = %24
  %642 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %643 = load ptr, ptr %642, align 8, !tbaa !16
  %644 = icmp eq ptr %643, null
  br i1 %644, label %646, label %645

645:                                              ; preds = %641
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %643)
  br label %646

646:                                              ; preds = %641, %645
  %647 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %648 = load ptr, ptr %647, align 8, !tbaa !16
  %649 = icmp eq ptr %648, null
  br i1 %649, label %651, label %650

650:                                              ; preds = %646
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %648)
  br label %651

651:                                              ; preds = %646, %650
  %652 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 3
  %653 = load ptr, ptr %652, align 8, !tbaa !16
  %654 = icmp eq ptr %653, null
  br i1 %654, label %656, label %655

655:                                              ; preds = %651
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %653)
  br label %656

656:                                              ; preds = %651, %655
  %657 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 4
  %658 = load ptr, ptr %657, align 8, !tbaa !16
  %659 = icmp eq ptr %658, null
  br i1 %659, label %661, label %660

660:                                              ; preds = %656
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %658)
  br label %661

661:                                              ; preds = %656, %660
  %662 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 1
  %663 = load ptr, ptr %662, align 8, !tbaa !16
  %664 = icmp eq ptr %663, null
  br i1 %664, label %666, label %665

665:                                              ; preds = %661
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %663)
  br label %666

666:                                              ; preds = %661, %665
  %667 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 4
  %668 = load ptr, ptr %667, align 8, !tbaa !16
  %669 = icmp eq ptr %668, null
  br i1 %669, label %671, label %670

670:                                              ; preds = %666
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %668)
  br label %671

671:                                              ; preds = %666, %670
  %672 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 5
  %673 = load ptr, ptr %672, align 8, !tbaa !16
  %674 = icmp eq ptr %673, null
  br i1 %674, label %676, label %675

675:                                              ; preds = %671
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %673)
  br label %676

676:                                              ; preds = %671, %675
  %677 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 6
  %678 = load ptr, ptr %677, align 8, !tbaa !16
  %679 = icmp eq ptr %678, null
  br i1 %679, label %681, label %680

680:                                              ; preds = %676
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %678)
  br label %681

681:                                              ; preds = %676, %680
  %682 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 7
  %683 = load ptr, ptr %682, align 8, !tbaa !16
  %684 = icmp eq ptr %683, null
  br i1 %684, label %686, label %685

685:                                              ; preds = %681
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %683)
  br label %686

686:                                              ; preds = %681, %685
  %687 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 8
  %688 = load ptr, ptr %687, align 8, !tbaa !16
  %689 = icmp ult ptr %688, inttoptr (i64 2 to ptr)
  br i1 %689, label %692, label %690

690:                                              ; preds = %686
  %691 = tail call i32 @ggc_set_mark(ptr noundef nonnull %688) #24
  br label %692

692:                                              ; preds = %686, %690
  %693 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %20, i64 0, i32 1
  %694 = load ptr, ptr %693, align 8, !tbaa !16
  %695 = icmp eq ptr %694, null
  br i1 %695, label %1499, label %696

696:                                              ; preds = %692
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %694) #24
  br label %1499

697:                                              ; preds = %24
  %698 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %699 = load ptr, ptr %698, align 8, !tbaa !16
  %700 = icmp eq ptr %699, null
  br i1 %700, label %702, label %701

701:                                              ; preds = %697
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %699)
  br label %702

702:                                              ; preds = %697, %701
  %703 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %704 = load ptr, ptr %703, align 8, !tbaa !16
  %705 = icmp eq ptr %704, null
  br i1 %705, label %707, label %706

706:                                              ; preds = %702
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %704)
  br label %707

707:                                              ; preds = %702, %706
  %708 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 3
  %709 = load ptr, ptr %708, align 8, !tbaa !16
  %710 = icmp eq ptr %709, null
  br i1 %710, label %712, label %711

711:                                              ; preds = %707
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %709)
  br label %712

712:                                              ; preds = %707, %711
  %713 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 4
  %714 = load ptr, ptr %713, align 8, !tbaa !16
  %715 = icmp eq ptr %714, null
  br i1 %715, label %717, label %716

716:                                              ; preds = %712
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %714)
  br label %717

717:                                              ; preds = %712, %716
  %718 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 1
  %719 = load ptr, ptr %718, align 8, !tbaa !16
  %720 = icmp eq ptr %719, null
  br i1 %720, label %722, label %721

721:                                              ; preds = %717
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %719)
  br label %722

722:                                              ; preds = %717, %721
  %723 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 4
  %724 = load ptr, ptr %723, align 8, !tbaa !16
  %725 = icmp eq ptr %724, null
  br i1 %725, label %727, label %726

726:                                              ; preds = %722
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %724)
  br label %727

727:                                              ; preds = %722, %726
  %728 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 5
  %729 = load ptr, ptr %728, align 8, !tbaa !16
  %730 = icmp eq ptr %729, null
  br i1 %730, label %732, label %731

731:                                              ; preds = %727
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %729)
  br label %732

732:                                              ; preds = %727, %731
  %733 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 6
  %734 = load ptr, ptr %733, align 8, !tbaa !16
  %735 = icmp eq ptr %734, null
  br i1 %735, label %737, label %736

736:                                              ; preds = %732
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %734)
  br label %737

737:                                              ; preds = %732, %736
  %738 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 7
  %739 = load ptr, ptr %738, align 8, !tbaa !16
  %740 = icmp eq ptr %739, null
  br i1 %740, label %742, label %741

741:                                              ; preds = %737
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %739)
  br label %742

742:                                              ; preds = %737, %741
  %743 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 8
  %744 = load ptr, ptr %743, align 8, !tbaa !16
  %745 = icmp ult ptr %744, inttoptr (i64 2 to ptr)
  br i1 %745, label %748, label %746

746:                                              ; preds = %742
  %747 = tail call i32 @ggc_set_mark(ptr noundef nonnull %744) #24
  br label %748

748:                                              ; preds = %742, %746
  %749 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %20, i64 0, i32 1
  %750 = load ptr, ptr %749, align 8, !tbaa !16
  %751 = icmp eq ptr %750, null
  br i1 %751, label %753, label %752

752:                                              ; preds = %748
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %750) #24
  br label %753

753:                                              ; preds = %748, %752
  %754 = getelementptr inbounds %struct.tree_result_decl, ptr %20, i64 0, i32 1
  %755 = load ptr, ptr %754, align 8, !tbaa !16
  %756 = icmp eq ptr %755, null
  br i1 %756, label %1499, label %757

757:                                              ; preds = %753
  tail call void @gt_ggc_mx_var_ann_d(ptr noundef nonnull %755) #24
  br label %1499

758:                                              ; preds = %24
  %759 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %760 = load ptr, ptr %759, align 8, !tbaa !16
  %761 = icmp eq ptr %760, null
  br i1 %761, label %763, label %762

762:                                              ; preds = %758
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %760)
  br label %763

763:                                              ; preds = %758, %762
  %764 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %765 = load ptr, ptr %764, align 8, !tbaa !16
  %766 = icmp eq ptr %765, null
  br i1 %766, label %768, label %767

767:                                              ; preds = %763
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %765)
  br label %768

768:                                              ; preds = %763, %767
  %769 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 3
  %770 = load ptr, ptr %769, align 8, !tbaa !16
  %771 = icmp eq ptr %770, null
  br i1 %771, label %773, label %772

772:                                              ; preds = %768
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %770)
  br label %773

773:                                              ; preds = %768, %772
  %774 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 4
  %775 = load ptr, ptr %774, align 8, !tbaa !16
  %776 = icmp eq ptr %775, null
  br i1 %776, label %778, label %777

777:                                              ; preds = %773
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %775)
  br label %778

778:                                              ; preds = %773, %777
  %779 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 1
  %780 = load ptr, ptr %779, align 8, !tbaa !16
  %781 = icmp eq ptr %780, null
  br i1 %781, label %783, label %782

782:                                              ; preds = %778
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %780)
  br label %783

783:                                              ; preds = %778, %782
  %784 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 4
  %785 = load ptr, ptr %784, align 8, !tbaa !16
  %786 = icmp eq ptr %785, null
  br i1 %786, label %788, label %787

787:                                              ; preds = %783
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %785)
  br label %788

788:                                              ; preds = %783, %787
  %789 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 5
  %790 = load ptr, ptr %789, align 8, !tbaa !16
  %791 = icmp eq ptr %790, null
  br i1 %791, label %793, label %792

792:                                              ; preds = %788
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %790)
  br label %793

793:                                              ; preds = %788, %792
  %794 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 6
  %795 = load ptr, ptr %794, align 8, !tbaa !16
  %796 = icmp eq ptr %795, null
  br i1 %796, label %798, label %797

797:                                              ; preds = %793
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %795)
  br label %798

798:                                              ; preds = %793, %797
  %799 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 7
  %800 = load ptr, ptr %799, align 8, !tbaa !16
  %801 = icmp eq ptr %800, null
  br i1 %801, label %803, label %802

802:                                              ; preds = %798
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %800)
  br label %803

803:                                              ; preds = %798, %802
  %804 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 8
  %805 = load ptr, ptr %804, align 8, !tbaa !16
  %806 = icmp ult ptr %805, inttoptr (i64 2 to ptr)
  br i1 %806, label %809, label %807

807:                                              ; preds = %803
  %808 = tail call i32 @ggc_set_mark(ptr noundef nonnull %805) #24
  br label %809

809:                                              ; preds = %803, %807
  %810 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %20, i64 0, i32 1
  %811 = load ptr, ptr %810, align 8, !tbaa !16
  %812 = icmp eq ptr %811, null
  br i1 %812, label %1499, label %813

813:                                              ; preds = %809
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %811) #24
  br label %1499

814:                                              ; preds = %24
  %815 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %816 = load ptr, ptr %815, align 8, !tbaa !16
  %817 = icmp eq ptr %816, null
  br i1 %817, label %819, label %818

818:                                              ; preds = %814
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %816)
  br label %819

819:                                              ; preds = %814, %818
  %820 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %821 = load ptr, ptr %820, align 8, !tbaa !16
  %822 = icmp eq ptr %821, null
  br i1 %822, label %824, label %823

823:                                              ; preds = %819
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %821)
  br label %824

824:                                              ; preds = %819, %823
  %825 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 3
  %826 = load ptr, ptr %825, align 8, !tbaa !16
  %827 = icmp eq ptr %826, null
  br i1 %827, label %829, label %828

828:                                              ; preds = %824
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %826)
  br label %829

829:                                              ; preds = %824, %828
  %830 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 4
  %831 = load ptr, ptr %830, align 8, !tbaa !16
  %832 = icmp eq ptr %831, null
  br i1 %832, label %834, label %833

833:                                              ; preds = %829
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %831)
  br label %834

834:                                              ; preds = %829, %833
  %835 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 1
  %836 = load ptr, ptr %835, align 8, !tbaa !16
  %837 = icmp eq ptr %836, null
  br i1 %837, label %839, label %838

838:                                              ; preds = %834
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %836)
  br label %839

839:                                              ; preds = %834, %838
  %840 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 4
  %841 = load ptr, ptr %840, align 8, !tbaa !16
  %842 = icmp eq ptr %841, null
  br i1 %842, label %844, label %843

843:                                              ; preds = %839
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %841)
  br label %844

844:                                              ; preds = %839, %843
  %845 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 5
  %846 = load ptr, ptr %845, align 8, !tbaa !16
  %847 = icmp eq ptr %846, null
  br i1 %847, label %849, label %848

848:                                              ; preds = %844
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %846)
  br label %849

849:                                              ; preds = %844, %848
  %850 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 6
  %851 = load ptr, ptr %850, align 8, !tbaa !16
  %852 = icmp eq ptr %851, null
  br i1 %852, label %854, label %853

853:                                              ; preds = %849
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %851)
  br label %854

854:                                              ; preds = %849, %853
  %855 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 7
  %856 = load ptr, ptr %855, align 8, !tbaa !16
  %857 = icmp eq ptr %856, null
  br i1 %857, label %859, label %858

858:                                              ; preds = %854
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %856)
  br label %859

859:                                              ; preds = %854, %858
  %860 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 8
  %861 = load ptr, ptr %860, align 8, !tbaa !16
  %862 = icmp ult ptr %861, inttoptr (i64 2 to ptr)
  br i1 %862, label %865, label %863

863:                                              ; preds = %859
  %864 = tail call i32 @ggc_set_mark(ptr noundef nonnull %861) #24
  br label %865

865:                                              ; preds = %859, %863
  %866 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %20, i64 0, i32 1
  %867 = load ptr, ptr %866, align 8, !tbaa !16
  %868 = icmp eq ptr %867, null
  br i1 %868, label %870, label %869

869:                                              ; preds = %865
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %867) #24
  br label %870

870:                                              ; preds = %865, %869
  %871 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 1
  %872 = load ptr, ptr %871, align 8, !tbaa !16
  %873 = icmp eq ptr %872, null
  br i1 %873, label %875, label %874

874:                                              ; preds = %870
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %872)
  br label %875

875:                                              ; preds = %870, %874
  %876 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 2
  %877 = load ptr, ptr %876, align 8, !tbaa !16
  %878 = icmp eq ptr %877, null
  br i1 %878, label %880, label %879

879:                                              ; preds = %875
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %877)
  br label %880

880:                                              ; preds = %875, %879
  %881 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 3
  %882 = load ptr, ptr %881, align 8, !tbaa !16
  %883 = icmp eq ptr %882, null
  br i1 %883, label %885, label %884

884:                                              ; preds = %880
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %882)
  br label %885

885:                                              ; preds = %880, %884
  %886 = getelementptr inbounds %struct.tree_decl_non_common, ptr %20, i64 0, i32 1
  %887 = load ptr, ptr %886, align 8, !tbaa !16
  %888 = icmp eq ptr %887, null
  br i1 %888, label %890, label %889

889:                                              ; preds = %885
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %887)
  br label %890

890:                                              ; preds = %885, %889
  %891 = getelementptr inbounds %struct.tree_decl_non_common, ptr %20, i64 0, i32 2
  %892 = load ptr, ptr %891, align 8, !tbaa !16
  %893 = icmp eq ptr %892, null
  br i1 %893, label %895, label %894

894:                                              ; preds = %890
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %892)
  br label %895

895:                                              ; preds = %890, %894
  %896 = getelementptr inbounds %struct.tree_decl_non_common, ptr %20, i64 0, i32 3
  %897 = load ptr, ptr %896, align 8, !tbaa !16
  %898 = icmp eq ptr %897, null
  br i1 %898, label %900, label %899

899:                                              ; preds = %895
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %897)
  br label %900

900:                                              ; preds = %895, %899
  %901 = getelementptr inbounds %struct.tree_decl_non_common, ptr %20, i64 0, i32 4
  %902 = load ptr, ptr %901, align 8, !tbaa !16
  %903 = icmp eq ptr %902, null
  br i1 %903, label %1499, label %904

904:                                              ; preds = %900
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %902)
  br label %1499

905:                                              ; preds = %24
  %906 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %907 = load ptr, ptr %906, align 8, !tbaa !16
  %908 = icmp eq ptr %907, null
  br i1 %908, label %910, label %909

909:                                              ; preds = %905
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %907)
  br label %910

910:                                              ; preds = %905, %909
  %911 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %912 = load ptr, ptr %911, align 8, !tbaa !16
  %913 = icmp eq ptr %912, null
  br i1 %913, label %915, label %914

914:                                              ; preds = %910
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %912)
  br label %915

915:                                              ; preds = %910, %914
  %916 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 3
  %917 = load ptr, ptr %916, align 8, !tbaa !16
  %918 = icmp eq ptr %917, null
  br i1 %918, label %920, label %919

919:                                              ; preds = %915
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %917)
  br label %920

920:                                              ; preds = %915, %919
  %921 = getelementptr inbounds %struct.tree_decl_minimal, ptr %20, i64 0, i32 4
  %922 = load ptr, ptr %921, align 8, !tbaa !16
  %923 = icmp eq ptr %922, null
  br i1 %923, label %925, label %924

924:                                              ; preds = %920
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %922)
  br label %925

925:                                              ; preds = %920, %924
  %926 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 1
  %927 = load ptr, ptr %926, align 8, !tbaa !16
  %928 = icmp eq ptr %927, null
  br i1 %928, label %930, label %929

929:                                              ; preds = %925
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %927)
  br label %930

930:                                              ; preds = %925, %929
  %931 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 4
  %932 = load ptr, ptr %931, align 8, !tbaa !16
  %933 = icmp eq ptr %932, null
  br i1 %933, label %935, label %934

934:                                              ; preds = %930
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %932)
  br label %935

935:                                              ; preds = %930, %934
  %936 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 5
  %937 = load ptr, ptr %936, align 8, !tbaa !16
  %938 = icmp eq ptr %937, null
  br i1 %938, label %940, label %939

939:                                              ; preds = %935
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %937)
  br label %940

940:                                              ; preds = %935, %939
  %941 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 6
  %942 = load ptr, ptr %941, align 8, !tbaa !16
  %943 = icmp eq ptr %942, null
  br i1 %943, label %945, label %944

944:                                              ; preds = %940
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %942)
  br label %945

945:                                              ; preds = %940, %944
  %946 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 7
  %947 = load ptr, ptr %946, align 8, !tbaa !16
  %948 = icmp eq ptr %947, null
  br i1 %948, label %950, label %949

949:                                              ; preds = %945
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %947)
  br label %950

950:                                              ; preds = %945, %949
  %951 = getelementptr inbounds %struct.tree_decl_common, ptr %20, i64 0, i32 8
  %952 = load ptr, ptr %951, align 8, !tbaa !16
  %953 = icmp ult ptr %952, inttoptr (i64 2 to ptr)
  br i1 %953, label %956, label %954

954:                                              ; preds = %950
  %955 = tail call i32 @ggc_set_mark(ptr noundef nonnull %952) #24
  br label %956

956:                                              ; preds = %950, %954
  %957 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %20, i64 0, i32 1
  %958 = load ptr, ptr %957, align 8, !tbaa !16
  %959 = icmp eq ptr %958, null
  br i1 %959, label %961, label %960

960:                                              ; preds = %956
  tail call void @gt_ggc_mx_rtx_def(ptr noundef nonnull %958) #24
  br label %961

961:                                              ; preds = %956, %960
  %962 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 1
  %963 = load ptr, ptr %962, align 8, !tbaa !16
  %964 = icmp eq ptr %963, null
  br i1 %964, label %966, label %965

965:                                              ; preds = %961
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %963)
  br label %966

966:                                              ; preds = %961, %965
  %967 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 2
  %968 = load ptr, ptr %967, align 8, !tbaa !16
  %969 = icmp eq ptr %968, null
  br i1 %969, label %971, label %970

970:                                              ; preds = %966
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %968)
  br label %971

971:                                              ; preds = %966, %970
  %972 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %20, i64 0, i32 3
  %973 = load ptr, ptr %972, align 8, !tbaa !16
  %974 = icmp eq ptr %973, null
  br i1 %974, label %976, label %975

975:                                              ; preds = %971
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %973)
  br label %976

976:                                              ; preds = %971, %975
  %977 = getelementptr inbounds %struct.tree_decl_non_common, ptr %20, i64 0, i32 1
  %978 = load ptr, ptr %977, align 8, !tbaa !16
  %979 = icmp eq ptr %978, null
  br i1 %979, label %981, label %980

980:                                              ; preds = %976
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %978)
  br label %981

981:                                              ; preds = %976, %980
  %982 = getelementptr inbounds %struct.tree_decl_non_common, ptr %20, i64 0, i32 2
  %983 = load ptr, ptr %982, align 8, !tbaa !16
  %984 = icmp eq ptr %983, null
  br i1 %984, label %986, label %985

985:                                              ; preds = %981
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %983)
  br label %986

986:                                              ; preds = %981, %985
  %987 = getelementptr inbounds %struct.tree_decl_non_common, ptr %20, i64 0, i32 3
  %988 = load ptr, ptr %987, align 8, !tbaa !16
  %989 = icmp eq ptr %988, null
  br i1 %989, label %991, label %990

990:                                              ; preds = %986
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %988)
  br label %991

991:                                              ; preds = %986, %990
  %992 = getelementptr inbounds %struct.tree_decl_non_common, ptr %20, i64 0, i32 4
  %993 = load ptr, ptr %992, align 8, !tbaa !16
  %994 = icmp eq ptr %993, null
  br i1 %994, label %996, label %995

995:                                              ; preds = %991
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %993)
  br label %996

996:                                              ; preds = %991, %995
  %997 = getelementptr inbounds %struct.tree_function_decl, ptr %20, i64 0, i32 1
  %998 = load ptr, ptr %997, align 8, !tbaa !16
  %999 = icmp eq ptr %998, null
  br i1 %999, label %1001, label %1000

1000:                                             ; preds = %996
  tail call void @gt_ggc_mx_function(ptr noundef nonnull %998) #24
  br label %1001

1001:                                             ; preds = %996, %1000
  %1002 = getelementptr inbounds %struct.tree_function_decl, ptr %20, i64 0, i32 2
  %1003 = load ptr, ptr %1002, align 8, !tbaa !16
  %1004 = icmp eq ptr %1003, null
  br i1 %1004, label %1006, label %1005

1005:                                             ; preds = %1001
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1003)
  br label %1006

1006:                                             ; preds = %1001, %1005
  %1007 = getelementptr inbounds %struct.tree_function_decl, ptr %20, i64 0, i32 3
  %1008 = load ptr, ptr %1007, align 8, !tbaa !16
  %1009 = icmp eq ptr %1008, null
  br i1 %1009, label %1011, label %1010

1010:                                             ; preds = %1006
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1008)
  br label %1011

1011:                                             ; preds = %1006, %1010
  %1012 = getelementptr inbounds %struct.tree_function_decl, ptr %20, i64 0, i32 4
  %1013 = load ptr, ptr %1012, align 8, !tbaa !16
  %1014 = icmp eq ptr %1013, null
  br i1 %1014, label %1499, label %1015

1015:                                             ; preds = %1011
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1013)
  br label %1499

1016:                                             ; preds = %24
  %1017 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %1018 = load ptr, ptr %1017, align 8, !tbaa !16
  %1019 = icmp eq ptr %1018, null
  br i1 %1019, label %1021, label %1020

1020:                                             ; preds = %1016
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1018)
  br label %1021

1021:                                             ; preds = %1016, %1020
  %1022 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %1023 = load ptr, ptr %1022, align 8, !tbaa !16
  %1024 = icmp eq ptr %1023, null
  br i1 %1024, label %1026, label %1025

1025:                                             ; preds = %1021
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1023)
  br label %1026

1026:                                             ; preds = %1021, %1025
  %1027 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 1
  %1028 = load ptr, ptr %1027, align 8, !tbaa !16
  %1029 = icmp eq ptr %1028, null
  br i1 %1029, label %1031, label %1030

1030:                                             ; preds = %1026
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1028)
  br label %1031

1031:                                             ; preds = %1026, %1030
  %1032 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 2
  %1033 = load ptr, ptr %1032, align 8, !tbaa !16
  %1034 = icmp eq ptr %1033, null
  br i1 %1034, label %1036, label %1035

1035:                                             ; preds = %1031
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1033)
  br label %1036

1036:                                             ; preds = %1031, %1035
  %1037 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 3
  %1038 = load ptr, ptr %1037, align 8, !tbaa !16
  %1039 = icmp eq ptr %1038, null
  br i1 %1039, label %1041, label %1040

1040:                                             ; preds = %1036
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1038)
  br label %1041

1041:                                             ; preds = %1036, %1040
  %1042 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 4
  %1043 = load ptr, ptr %1042, align 8, !tbaa !16
  %1044 = icmp eq ptr %1043, null
  br i1 %1044, label %1046, label %1045

1045:                                             ; preds = %1041
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1043)
  br label %1046

1046:                                             ; preds = %1041, %1045
  %1047 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 9
  %1048 = load ptr, ptr %1047, align 8, !tbaa !16
  %1049 = icmp eq ptr %1048, null
  br i1 %1049, label %1051, label %1050

1050:                                             ; preds = %1046
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1048)
  br label %1051

1051:                                             ; preds = %1046, %1050
  %1052 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 10
  %1053 = load ptr, ptr %1052, align 8, !tbaa !16
  %1054 = icmp eq ptr %1053, null
  br i1 %1054, label %1056, label %1055

1055:                                             ; preds = %1051
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1053)
  br label %1056

1056:                                             ; preds = %1055, %1051
  %1057 = load ptr, ptr @debug_hooks, align 8, !tbaa !5
  %1058 = icmp eq ptr %1057, @sdb_debug_hooks
  %1059 = icmp eq ptr %1057, @dwarf2_debug_hooks
  %1060 = select i1 %1059, i32 2, i32 0
  %1061 = select i1 %1058, i32 1, i32 %1060
  switch i32 %1061, label %1070 [
    i32 2, label %1065
    i32 1, label %1062
  ]

1062:                                             ; preds = %1056
  %1063 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 11
  %1064 = load ptr, ptr %1063, align 8, !tbaa !16
  tail call void @gt_ggc_m_S(ptr noundef %1064) #24
  br label %1070

1065:                                             ; preds = %1056
  %1066 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 11
  %1067 = load ptr, ptr %1066, align 8, !tbaa !16
  %1068 = icmp eq ptr %1067, null
  br i1 %1068, label %1070, label %1069

1069:                                             ; preds = %1065
  tail call void @gt_ggc_mx_die_struct(ptr noundef nonnull %1067) #24
  br label %1070

1070:                                             ; preds = %1062, %1069, %1065, %1056
  %1071 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 12
  %1072 = load ptr, ptr %1071, align 8, !tbaa !16
  %1073 = icmp eq ptr %1072, null
  br i1 %1073, label %1075, label %1074

1074:                                             ; preds = %1070
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1072)
  br label %1075

1075:                                             ; preds = %1070, %1074
  %1076 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 13
  %1077 = load ptr, ptr %1076, align 8, !tbaa !16
  %1078 = icmp eq ptr %1077, null
  br i1 %1078, label %1080, label %1079

1079:                                             ; preds = %1075
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1077)
  br label %1080

1080:                                             ; preds = %1075, %1079
  %1081 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 14
  %1082 = load ptr, ptr %1081, align 8, !tbaa !16
  %1083 = icmp eq ptr %1082, null
  br i1 %1083, label %1085, label %1084

1084:                                             ; preds = %1080
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1082)
  br label %1085

1085:                                             ; preds = %1080, %1084
  %1086 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 15
  %1087 = load ptr, ptr %1086, align 8, !tbaa !16
  %1088 = icmp eq ptr %1087, null
  br i1 %1088, label %1090, label %1089

1089:                                             ; preds = %1085
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1087)
  br label %1090

1090:                                             ; preds = %1085, %1089
  %1091 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 16
  %1092 = load ptr, ptr %1091, align 8, !tbaa !16
  %1093 = icmp eq ptr %1092, null
  br i1 %1093, label %1095, label %1094

1094:                                             ; preds = %1090
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1092)
  br label %1095

1095:                                             ; preds = %1090, %1094
  %1096 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 17
  %1097 = load ptr, ptr %1096, align 8, !tbaa !16
  %1098 = icmp eq ptr %1097, null
  br i1 %1098, label %1100, label %1099

1099:                                             ; preds = %1095
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1097)
  br label %1100

1100:                                             ; preds = %1095, %1099
  %1101 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 18
  %1102 = load ptr, ptr %1101, align 8, !tbaa !16
  %1103 = icmp eq ptr %1102, null
  br i1 %1103, label %1105, label %1104

1104:                                             ; preds = %1100
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1102)
  br label %1105

1105:                                             ; preds = %1100, %1104
  %1106 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 19
  %1107 = load ptr, ptr %1106, align 8, !tbaa !16
  %1108 = icmp eq ptr %1107, null
  br i1 %1108, label %1110, label %1109

1109:                                             ; preds = %1105
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1107)
  br label %1110

1110:                                             ; preds = %1105, %1109
  %1111 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 20
  %1112 = load ptr, ptr %1111, align 8, !tbaa !16
  %1113 = icmp ult ptr %1112, inttoptr (i64 2 to ptr)
  br i1 %1113, label %1499, label %1114

1114:                                             ; preds = %1110
  %1115 = tail call i32 @ggc_set_mark(ptr noundef nonnull %1112) #24
  %1116 = icmp eq i32 %1115, 0
  br i1 %1116, label %1117, label %1499

1117:                                             ; preds = %1114
  %1118 = load ptr, ptr %1112, align 8, !tbaa !204
  %1119 = icmp eq ptr %1118, null
  br i1 %1119, label %1121, label %1120

1120:                                             ; preds = %1117
  tail call void @gt_ggc_mx_sorted_fields_type(ptr noundef nonnull %1118) #24
  br label %1121

1121:                                             ; preds = %1120, %1117
  %1122 = getelementptr inbounds %struct.lang_type, ptr %1112, i64 0, i32 1
  %1123 = load ptr, ptr %1122, align 8, !tbaa !164
  %1124 = icmp eq ptr %1123, null
  br i1 %1124, label %1126, label %1125

1125:                                             ; preds = %1121
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1123)
  br label %1126

1126:                                             ; preds = %1125, %1121
  %1127 = getelementptr inbounds %struct.lang_type, ptr %1112, i64 0, i32 2
  %1128 = load ptr, ptr %1127, align 8, !tbaa !166
  %1129 = icmp eq ptr %1128, null
  br i1 %1129, label %1131, label %1130

1130:                                             ; preds = %1126
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1128)
  br label %1131

1131:                                             ; preds = %1130, %1126
  %1132 = getelementptr inbounds %struct.lang_type, ptr %1112, i64 0, i32 3
  %1133 = load ptr, ptr %1132, align 8, !tbaa !264
  %1134 = icmp eq ptr %1133, null
  br i1 %1134, label %1499, label %1135

1135:                                             ; preds = %1131
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1133)
  br label %1499

1136:                                             ; preds = %24
  %1137 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %1138 = load ptr, ptr %1137, align 8, !tbaa !16
  %1139 = icmp eq ptr %1138, null
  br i1 %1139, label %1141, label %1140

1140:                                             ; preds = %1136
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1138)
  br label %1141

1141:                                             ; preds = %1136, %1140
  %1142 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %1143 = load ptr, ptr %1142, align 8, !tbaa !16
  %1144 = icmp eq ptr %1143, null
  br i1 %1144, label %1146, label %1145

1145:                                             ; preds = %1141
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1143)
  br label %1146

1146:                                             ; preds = %1141, %1145
  %1147 = getelementptr inbounds %struct.tree_list, ptr %20, i64 0, i32 1
  %1148 = load ptr, ptr %1147, align 8, !tbaa !16
  %1149 = icmp eq ptr %1148, null
  br i1 %1149, label %1151, label %1150

1150:                                             ; preds = %1146
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1148)
  br label %1151

1151:                                             ; preds = %1146, %1150
  %1152 = getelementptr inbounds %struct.tree_list, ptr %20, i64 0, i32 2
  %1153 = load ptr, ptr %1152, align 8, !tbaa !16
  %1154 = icmp eq ptr %1153, null
  br i1 %1154, label %1499, label %1155

1155:                                             ; preds = %1151
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1153)
  br label %1499

1156:                                             ; preds = %24
  %1157 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %1158 = load ptr, ptr %1157, align 8, !tbaa !16
  %1159 = icmp eq ptr %1158, null
  br i1 %1159, label %1161, label %1160

1160:                                             ; preds = %1156
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1158)
  br label %1161

1161:                                             ; preds = %1156, %1160
  %1162 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %1163 = load ptr, ptr %1162, align 8, !tbaa !16
  %1164 = icmp eq ptr %1163, null
  br i1 %1164, label %1166, label %1165

1165:                                             ; preds = %1161
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1163)
  br label %1166

1166:                                             ; preds = %1165, %1161
  %1167 = getelementptr inbounds %struct.tree_vec, ptr %20, i64 0, i32 1
  %1168 = load i32, ptr %1167, align 8, !tbaa !16
  %1169 = sext i32 %1168 to i64
  %1170 = icmp eq i32 %1168, 0
  br i1 %1170, label %1499, label %1171

1171:                                             ; preds = %1166, %1177
  %1172 = phi i64 [ %1178, %1177 ], [ 0, %1166 ]
  %1173 = getelementptr inbounds %struct.tree_vec, ptr %20, i64 0, i32 2, i64 %1172
  %1174 = load ptr, ptr %1173, align 8, !tbaa !16
  %1175 = icmp eq ptr %1174, null
  br i1 %1175, label %1177, label %1176

1176:                                             ; preds = %1171
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1174)
  br label %1177

1177:                                             ; preds = %1171, %1176
  %1178 = add i64 %1172, 1
  %1179 = icmp eq i64 %1178, %1169
  br i1 %1179, label %1499, label %1171, !llvm.loop !265

1180:                                             ; preds = %24
  %1181 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %1182 = load ptr, ptr %1181, align 8, !tbaa !16
  %1183 = icmp eq ptr %1182, null
  br i1 %1183, label %1185, label %1184

1184:                                             ; preds = %1180
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1182)
  br label %1185

1185:                                             ; preds = %1180, %1184
  %1186 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %1187 = load ptr, ptr %1186, align 8, !tbaa !16
  %1188 = icmp eq ptr %1187, null
  br i1 %1188, label %1190, label %1189

1189:                                             ; preds = %1185
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1187)
  br label %1190

1190:                                             ; preds = %1185, %1189
  %1191 = getelementptr inbounds %struct.tree_exp, ptr %20, i64 0, i32 2
  %1192 = load ptr, ptr %1191, align 8, !tbaa !16
  %1193 = icmp eq ptr %1192, null
  br i1 %1193, label %1195, label %1194

1194:                                             ; preds = %1190
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1192)
  br label %1195

1195:                                             ; preds = %1190, %1194
  %1196 = load i64, ptr %20, align 8
  %1197 = and i64 %1196, 65535
  %1198 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %1197
  %1199 = load i32, ptr %1198, align 4, !tbaa !16
  %1200 = icmp eq i32 %1199, 9
  br i1 %1200, label %1201, label %1206

1201:                                             ; preds = %1195
  %1202 = getelementptr inbounds %struct.tree_exp, ptr %20, i64 0, i32 3
  %1203 = load ptr, ptr %1202, align 8, !tbaa !16
  %1204 = getelementptr inbounds %struct.tree_int_cst, ptr %1203, i64 0, i32 1
  %1205 = load i64, ptr %1204, align 8, !tbaa !16
  br label %1210

1206:                                             ; preds = %1195
  %1207 = getelementptr inbounds [0 x i8], ptr @tree_code_length, i64 0, i64 %1197
  %1208 = load i8, ptr %1207, align 1, !tbaa !16
  %1209 = zext i8 %1208 to i64
  br label %1210

1210:                                             ; preds = %1201, %1206
  %1211 = phi i64 [ %1205, %1201 ], [ %1209, %1206 ]
  %1212 = shl i64 %1211, 32
  %1213 = ashr exact i64 %1212, 32
  %1214 = icmp eq i64 %1212, 0
  br i1 %1214, label %1499, label %1215

1215:                                             ; preds = %1210, %1221
  %1216 = phi i64 [ %1222, %1221 ], [ 0, %1210 ]
  %1217 = getelementptr inbounds %struct.tree_exp, ptr %20, i64 0, i32 3, i64 %1216
  %1218 = load ptr, ptr %1217, align 8, !tbaa !16
  %1219 = icmp eq ptr %1218, null
  br i1 %1219, label %1221, label %1220

1220:                                             ; preds = %1215
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1218)
  br label %1221

1221:                                             ; preds = %1215, %1220
  %1222 = add i64 %1216, 1
  %1223 = icmp eq i64 %1222, %1213
  br i1 %1223, label %1499, label %1215, !llvm.loop !266

1224:                                             ; preds = %24
  %1225 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %1226 = load ptr, ptr %1225, align 8, !tbaa !16
  %1227 = icmp eq ptr %1226, null
  br i1 %1227, label %1229, label %1228

1228:                                             ; preds = %1224
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1226)
  br label %1229

1229:                                             ; preds = %1224, %1228
  %1230 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %1231 = load ptr, ptr %1230, align 8, !tbaa !16
  %1232 = icmp eq ptr %1231, null
  br i1 %1232, label %1234, label %1233

1233:                                             ; preds = %1229
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1231)
  br label %1234

1234:                                             ; preds = %1229, %1233
  %1235 = getelementptr inbounds %struct.tree_ssa_name, ptr %20, i64 0, i32 1
  %1236 = load ptr, ptr %1235, align 8, !tbaa !16
  %1237 = icmp eq ptr %1236, null
  br i1 %1237, label %1239, label %1238

1238:                                             ; preds = %1234
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1236)
  br label %1239

1239:                                             ; preds = %1234, %1238
  %1240 = getelementptr inbounds %struct.tree_ssa_name, ptr %20, i64 0, i32 2
  %1241 = load ptr, ptr %1240, align 8, !tbaa !16
  %1242 = icmp eq ptr %1241, null
  br i1 %1242, label %1244, label %1243

1243:                                             ; preds = %1239
  tail call void @gt_ggc_mx_gimple_statement_d(ptr noundef nonnull %1241) #24
  br label %1244

1244:                                             ; preds = %1239, %1243
  %1245 = getelementptr inbounds %struct.tree_ssa_name, ptr %20, i64 0, i32 4
  %1246 = load ptr, ptr %1245, align 8, !tbaa !16
  %1247 = icmp eq ptr %1246, null
  br i1 %1247, label %1499, label %1248

1248:                                             ; preds = %1244
  tail call void @gt_ggc_mx_ptr_info_def(ptr noundef nonnull %1246) #24
  br label %1499

1249:                                             ; preds = %24
  %1250 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %1251 = load ptr, ptr %1250, align 8, !tbaa !16
  %1252 = icmp eq ptr %1251, null
  br i1 %1252, label %1254, label %1253

1253:                                             ; preds = %1249
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1251)
  br label %1254

1254:                                             ; preds = %1249, %1253
  %1255 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %1256 = load ptr, ptr %1255, align 8, !tbaa !16
  %1257 = icmp eq ptr %1256, null
  br i1 %1257, label %1259, label %1258

1258:                                             ; preds = %1254
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1256)
  br label %1259

1259:                                             ; preds = %1254, %1258
  %1260 = getelementptr inbounds %struct.tree_block, ptr %20, i64 0, i32 3
  %1261 = load ptr, ptr %1260, align 8, !tbaa !16
  %1262 = icmp eq ptr %1261, null
  br i1 %1262, label %1264, label %1263

1263:                                             ; preds = %1259
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1261)
  br label %1264

1264:                                             ; preds = %1259, %1263
  %1265 = getelementptr inbounds %struct.tree_block, ptr %20, i64 0, i32 4
  %1266 = load ptr, ptr %1265, align 8, !tbaa !16
  %1267 = icmp eq ptr %1266, null
  br i1 %1267, label %1269, label %1268

1268:                                             ; preds = %1264
  tail call void @gt_ggc_mx_VEC_tree_gc(ptr noundef nonnull %1266) #24
  br label %1269

1269:                                             ; preds = %1264, %1268
  %1270 = getelementptr inbounds %struct.tree_block, ptr %20, i64 0, i32 5
  %1271 = load ptr, ptr %1270, align 8, !tbaa !16
  %1272 = icmp eq ptr %1271, null
  br i1 %1272, label %1274, label %1273

1273:                                             ; preds = %1269
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1271)
  br label %1274

1274:                                             ; preds = %1269, %1273
  %1275 = getelementptr inbounds %struct.tree_block, ptr %20, i64 0, i32 6
  %1276 = load ptr, ptr %1275, align 8, !tbaa !16
  %1277 = icmp eq ptr %1276, null
  br i1 %1277, label %1279, label %1278

1278:                                             ; preds = %1274
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1276)
  br label %1279

1279:                                             ; preds = %1274, %1278
  %1280 = getelementptr inbounds %struct.tree_block, ptr %20, i64 0, i32 7
  %1281 = load ptr, ptr %1280, align 8, !tbaa !16
  %1282 = icmp eq ptr %1281, null
  br i1 %1282, label %1284, label %1283

1283:                                             ; preds = %1279
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1281)
  br label %1284

1284:                                             ; preds = %1279, %1283
  %1285 = getelementptr inbounds %struct.tree_block, ptr %20, i64 0, i32 8
  %1286 = load ptr, ptr %1285, align 8, !tbaa !16
  %1287 = icmp eq ptr %1286, null
  br i1 %1287, label %1289, label %1288

1288:                                             ; preds = %1284
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1286)
  br label %1289

1289:                                             ; preds = %1284, %1288
  %1290 = getelementptr inbounds %struct.tree_block, ptr %20, i64 0, i32 9
  %1291 = load ptr, ptr %1290, align 8, !tbaa !16
  %1292 = icmp eq ptr %1291, null
  br i1 %1292, label %1499, label %1293

1293:                                             ; preds = %1289
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1291)
  br label %1499

1294:                                             ; preds = %24
  %1295 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %1296 = load ptr, ptr %1295, align 8, !tbaa !16
  %1297 = icmp eq ptr %1296, null
  br i1 %1297, label %1299, label %1298

1298:                                             ; preds = %1294
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1296)
  br label %1299

1299:                                             ; preds = %1294, %1298
  %1300 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %1301 = load ptr, ptr %1300, align 8, !tbaa !16
  %1302 = icmp eq ptr %1301, null
  br i1 %1302, label %1304, label %1303

1303:                                             ; preds = %1299
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1301)
  br label %1304

1304:                                             ; preds = %1299, %1303
  %1305 = getelementptr inbounds %struct.tree_binfo, ptr %20, i64 0, i32 1
  %1306 = load ptr, ptr %1305, align 8, !tbaa !16
  %1307 = icmp eq ptr %1306, null
  br i1 %1307, label %1309, label %1308

1308:                                             ; preds = %1304
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1306)
  br label %1309

1309:                                             ; preds = %1304, %1308
  %1310 = getelementptr inbounds %struct.tree_binfo, ptr %20, i64 0, i32 2
  %1311 = load ptr, ptr %1310, align 8, !tbaa !16
  %1312 = icmp eq ptr %1311, null
  br i1 %1312, label %1314, label %1313

1313:                                             ; preds = %1309
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1311)
  br label %1314

1314:                                             ; preds = %1309, %1313
  %1315 = getelementptr inbounds %struct.tree_binfo, ptr %20, i64 0, i32 3
  %1316 = load ptr, ptr %1315, align 8, !tbaa !16
  %1317 = icmp eq ptr %1316, null
  br i1 %1317, label %1319, label %1318

1318:                                             ; preds = %1314
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1316)
  br label %1319

1319:                                             ; preds = %1314, %1318
  %1320 = getelementptr inbounds %struct.tree_binfo, ptr %20, i64 0, i32 4
  %1321 = load ptr, ptr %1320, align 8, !tbaa !16
  %1322 = icmp eq ptr %1321, null
  br i1 %1322, label %1324, label %1323

1323:                                             ; preds = %1319
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1321)
  br label %1324

1324:                                             ; preds = %1319, %1323
  %1325 = getelementptr inbounds %struct.tree_binfo, ptr %20, i64 0, i32 5
  %1326 = load ptr, ptr %1325, align 8, !tbaa !16
  %1327 = icmp eq ptr %1326, null
  br i1 %1327, label %1329, label %1328

1328:                                             ; preds = %1324
  tail call void @gt_ggc_mx_VEC_tree_gc(ptr noundef nonnull %1326) #24
  br label %1329

1329:                                             ; preds = %1324, %1328
  %1330 = getelementptr inbounds %struct.tree_binfo, ptr %20, i64 0, i32 6
  %1331 = load ptr, ptr %1330, align 8, !tbaa !16
  %1332 = icmp eq ptr %1331, null
  br i1 %1332, label %1334, label %1333

1333:                                             ; preds = %1329
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1331)
  br label %1334

1334:                                             ; preds = %1329, %1333
  %1335 = getelementptr inbounds %struct.tree_binfo, ptr %20, i64 0, i32 7
  %1336 = load ptr, ptr %1335, align 8, !tbaa !16
  %1337 = icmp eq ptr %1336, null
  br i1 %1337, label %1339, label %1338

1338:                                             ; preds = %1334
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1336)
  br label %1339

1339:                                             ; preds = %1334, %1338
  %1340 = getelementptr inbounds %struct.tree_binfo, ptr %20, i64 0, i32 8
  %1341 = load ptr, ptr %1340, align 8, !tbaa !16
  %1342 = icmp eq ptr %1341, null
  br i1 %1342, label %1344, label %1343

1343:                                             ; preds = %1339
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1341)
  br label %1344

1344:                                             ; preds = %1343, %1339
  %1345 = getelementptr inbounds %struct.tree_binfo, ptr %20, i64 0, i32 9
  %1346 = load i32, ptr %1345, align 8, !tbaa !16
  %1347 = zext i32 %1346 to i64
  %1348 = icmp eq i32 %1346, 0
  br i1 %1348, label %1499, label %1349

1349:                                             ; preds = %1344, %1355
  %1350 = phi i64 [ %1356, %1355 ], [ 0, %1344 ]
  %1351 = getelementptr inbounds %struct.tree_binfo, ptr %20, i64 0, i32 9, i32 0, i32 2, i64 %1350
  %1352 = load ptr, ptr %1351, align 8, !tbaa !16
  %1353 = icmp eq ptr %1352, null
  br i1 %1353, label %1355, label %1354

1354:                                             ; preds = %1349
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1352)
  br label %1355

1355:                                             ; preds = %1349, %1354
  %1356 = add nuw nsw i64 %1350, 1
  %1357 = icmp eq i64 %1356, %1347
  br i1 %1357, label %1499, label %1349, !llvm.loop !267

1358:                                             ; preds = %24
  %1359 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %1360 = load ptr, ptr %1359, align 8, !tbaa !16
  %1361 = icmp eq ptr %1360, null
  br i1 %1361, label %1363, label %1362

1362:                                             ; preds = %1358
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1360)
  br label %1363

1363:                                             ; preds = %1358, %1362
  %1364 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %1365 = load ptr, ptr %1364, align 8, !tbaa !16
  %1366 = icmp eq ptr %1365, null
  br i1 %1366, label %1368, label %1367

1367:                                             ; preds = %1363
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1365)
  br label %1368

1368:                                             ; preds = %1363, %1367
  %1369 = getelementptr inbounds %struct.tree_statement_list, ptr %20, i64 0, i32 1
  %1370 = load ptr, ptr %1369, align 8, !tbaa !16
  %1371 = icmp eq ptr %1370, null
  br i1 %1371, label %1373, label %1372

1372:                                             ; preds = %1368
  tail call void @gt_ggc_mx_tree_statement_list_node(ptr noundef nonnull %1370) #24
  br label %1373

1373:                                             ; preds = %1368, %1372
  %1374 = getelementptr inbounds %struct.tree_statement_list, ptr %20, i64 0, i32 2
  %1375 = load ptr, ptr %1374, align 8, !tbaa !16
  %1376 = icmp eq ptr %1375, null
  br i1 %1376, label %1499, label %1377

1377:                                             ; preds = %1373
  tail call void @gt_ggc_mx_tree_statement_list_node(ptr noundef nonnull %1375) #24
  br label %1499

1378:                                             ; preds = %24
  %1379 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %1380 = load ptr, ptr %1379, align 8, !tbaa !16
  %1381 = icmp eq ptr %1380, null
  br i1 %1381, label %1383, label %1382

1382:                                             ; preds = %1378
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1380)
  br label %1383

1383:                                             ; preds = %1378, %1382
  %1384 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %1385 = load ptr, ptr %1384, align 8, !tbaa !16
  %1386 = icmp eq ptr %1385, null
  br i1 %1386, label %1388, label %1387

1387:                                             ; preds = %1383
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1385)
  br label %1388

1388:                                             ; preds = %1383, %1387
  %1389 = getelementptr inbounds %struct.tree_constructor, ptr %20, i64 0, i32 1
  %1390 = load ptr, ptr %1389, align 8, !tbaa !16
  %1391 = icmp eq ptr %1390, null
  br i1 %1391, label %1499, label %1392

1392:                                             ; preds = %1388
  tail call void @gt_ggc_mx_VEC_constructor_elt_gc(ptr noundef nonnull %1390) #24
  br label %1499

1393:                                             ; preds = %24
  %1394 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %1395 = load ptr, ptr %1394, align 8, !tbaa !16
  %1396 = icmp eq ptr %1395, null
  br i1 %1396, label %1398, label %1397

1397:                                             ; preds = %1393
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1395)
  br label %1398

1398:                                             ; preds = %1393, %1397
  %1399 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %1400 = load ptr, ptr %1399, align 8, !tbaa !16
  %1401 = icmp eq ptr %1400, null
  br i1 %1401, label %1403, label %1402

1402:                                             ; preds = %1398
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1400)
  br label %1403

1403:                                             ; preds = %1398, %1402
  %1404 = getelementptr inbounds %struct.tree_omp_clause, ptr %20, i64 0, i32 4
  %1405 = load ptr, ptr %1404, align 8, !tbaa !16
  %1406 = icmp eq ptr %1405, null
  br i1 %1406, label %1408, label %1407

1407:                                             ; preds = %1403
  tail call void @gt_ggc_mx_gimple_seq_d(ptr noundef nonnull %1405) #24
  br label %1408

1408:                                             ; preds = %1403, %1407
  %1409 = getelementptr inbounds %struct.tree_omp_clause, ptr %20, i64 0, i32 5
  %1410 = load ptr, ptr %1409, align 8, !tbaa !16
  %1411 = icmp eq ptr %1410, null
  br i1 %1411, label %1413, label %1412

1412:                                             ; preds = %1408
  tail call void @gt_ggc_mx_gimple_seq_d(ptr noundef nonnull %1410) #24
  br label %1413

1413:                                             ; preds = %1412, %1408
  %1414 = getelementptr inbounds %struct.tree_omp_clause, ptr %20, i64 0, i32 2
  %1415 = load i32, ptr %1414, align 4, !tbaa !16
  %1416 = zext i32 %1415 to i64
  %1417 = getelementptr inbounds [0 x i8], ptr @omp_clause_num_ops, i64 0, i64 %1416
  %1418 = load i8, ptr %1417, align 1, !tbaa !16
  %1419 = zext i8 %1418 to i64
  %1420 = icmp eq i8 %1418, 0
  br i1 %1420, label %1499, label %1421

1421:                                             ; preds = %1413, %1427
  %1422 = phi i64 [ %1428, %1427 ], [ 0, %1413 ]
  %1423 = getelementptr inbounds %struct.tree_omp_clause, ptr %20, i64 0, i32 6, i64 %1422
  %1424 = load ptr, ptr %1423, align 8, !tbaa !16
  %1425 = icmp eq ptr %1424, null
  br i1 %1425, label %1427, label %1426

1426:                                             ; preds = %1421
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1424)
  br label %1427

1427:                                             ; preds = %1421, %1426
  %1428 = add nuw nsw i64 %1422, 1
  %1429 = icmp eq i64 %1428, %1419
  br i1 %1429, label %1499, label %1421, !llvm.loop !268

1430:                                             ; preds = %24
  %1431 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %1432 = load ptr, ptr %1431, align 8, !tbaa !16
  %1433 = icmp eq ptr %1432, null
  br i1 %1433, label %1435, label %1434

1434:                                             ; preds = %1430
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1432)
  br label %1435

1435:                                             ; preds = %1430, %1434
  %1436 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %1437 = load ptr, ptr %1436, align 8, !tbaa !16
  %1438 = icmp eq ptr %1437, null
  br i1 %1438, label %1499, label %1439

1439:                                             ; preds = %1435
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1437)
  br label %1499

1440:                                             ; preds = %24
  %1441 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %1442 = load ptr, ptr %1441, align 8, !tbaa !16
  %1443 = icmp eq ptr %1442, null
  br i1 %1443, label %1445, label %1444

1444:                                             ; preds = %1440
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1442)
  br label %1445

1445:                                             ; preds = %1440, %1444
  %1446 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %1447 = load ptr, ptr %1446, align 8, !tbaa !16
  %1448 = icmp eq ptr %1447, null
  br i1 %1448, label %1499, label %1449

1449:                                             ; preds = %1445
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1447)
  br label %1499

1450:                                             ; preds = %19
  %1451 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %1452 = load ptr, ptr %1451, align 8, !tbaa !16
  %1453 = icmp eq ptr %1452, null
  br i1 %1453, label %1455, label %1454

1454:                                             ; preds = %1450
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1452)
  br label %1455

1455:                                             ; preds = %1450, %1454
  %1456 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 2
  %1457 = load ptr, ptr %1456, align 8, !tbaa !16
  %1458 = icmp eq ptr %1457, null
  br i1 %1458, label %1460, label %1459

1459:                                             ; preds = %1455
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %1457)
  br label %1460

1460:                                             ; preds = %1459, %1455
  %1461 = getelementptr inbounds %struct.c_common_identifier, ptr %20, i64 0, i32 1
  %1462 = load ptr, ptr %1461, align 8, !tbaa !16
  tail call void @gt_ggc_m_S(ptr noundef %1462) #24
  %1463 = getelementptr inbounds %struct.c_common_identifier, ptr %20, i64 0, i32 1, i32 3
  %1464 = load i16, ptr %1463, align 2
  %1465 = lshr i16 %1464, 6
  %1466 = zext i16 %1465 to i32
  %1467 = and i32 %1466, 64
  %1468 = icmp eq i32 %1467, 0
  br i1 %1468, label %1469, label %1484

1469:                                             ; preds = %1460
  %1470 = and i16 %1464, 63
  switch i16 %1470, label %1484 [
    i16 1, label %1471
    i16 2, label %1479
  ]

1471:                                             ; preds = %1469
  %1472 = and i32 %1466, 4
  %1473 = icmp eq i32 %1472, 0
  br i1 %1473, label %1474, label %1484

1474:                                             ; preds = %1471
  %1475 = getelementptr inbounds %struct.c_common_identifier, ptr %20, i64 0, i32 1, i32 4
  %1476 = load ptr, ptr %1475, align 8, !tbaa !16
  %1477 = icmp eq ptr %1476, null
  br i1 %1477, label %1484, label %1478

1478:                                             ; preds = %1474
  tail call void @gt_ggc_mx_cpp_macro(ptr noundef nonnull %1476) #24
  br label %1484

1479:                                             ; preds = %1469
  %1480 = getelementptr inbounds %struct.c_common_identifier, ptr %20, i64 0, i32 1, i32 4
  %1481 = load ptr, ptr %1480, align 8, !tbaa !16
  %1482 = icmp eq ptr %1481, null
  br i1 %1482, label %1484, label %1483

1483:                                             ; preds = %1479
  tail call void @gt_ggc_mx_answer(ptr noundef nonnull %1481) #24
  br label %1484

1484:                                             ; preds = %1471, %1469, %1460, %1478, %1474, %1483, %1479
  %1485 = getelementptr inbounds %struct.lang_identifier, ptr %20, i64 0, i32 1
  %1486 = load ptr, ptr %1485, align 8, !tbaa !16
  %1487 = icmp eq ptr %1486, null
  br i1 %1487, label %1489, label %1488

1488:                                             ; preds = %1484
  tail call void @gt_ggc_mx_c_binding(ptr noundef nonnull %1486)
  br label %1489

1489:                                             ; preds = %1484, %1488
  %1490 = getelementptr inbounds %struct.lang_identifier, ptr %20, i64 0, i32 2
  %1491 = load ptr, ptr %1490, align 8, !tbaa !16
  %1492 = icmp eq ptr %1491, null
  br i1 %1492, label %1494, label %1493

1493:                                             ; preds = %1489
  tail call void @gt_ggc_mx_c_binding(ptr noundef nonnull %1491)
  br label %1494

1494:                                             ; preds = %1489, %1493
  %1495 = getelementptr inbounds %struct.lang_identifier, ptr %20, i64 0, i32 3
  %1496 = load ptr, ptr %1495, align 8, !tbaa !16
  %1497 = icmp eq ptr %1496, null
  br i1 %1497, label %1499, label %1498

1498:                                             ; preds = %1494
  tail call void @gt_ggc_mx_c_binding(ptr noundef nonnull %1496)
  br label %1499

1499:                                             ; preds = %1427, %1355, %1221, %1177, %1413, %1344, %1210, %1166, %199, %1135, %1131, %1114, %203, %1494, %1498, %131, %35, %31, %45, %41, %60, %56, %75, %71, %90, %86, %100, %96, %120, %116, %153, %149, %260, %256, %351, %347, %417, %413, %488, %484, %564, %560, %640, %636, %696, %692, %757, %753, %813, %809, %904, %900, %1015, %1011, %1110, %1155, %1151, %1248, %1244, %1293, %1289, %1377, %1373, %1392, %1388, %1439, %1435, %1449, %1445, %24
  %1500 = load i64, ptr %20, align 8
  %1501 = and i64 %1500, 65535
  %1502 = icmp eq i64 %1501, 8
  %1503 = getelementptr inbounds %struct.tree_type, ptr %20, i64 0, i32 15
  %1504 = getelementptr inbounds %struct.tree_common, ptr %20, i64 0, i32 1
  %1505 = select i1 %1502, ptr %1503, ptr %1504
  %1506 = load ptr, ptr %1505, align 8, !tbaa !16
  %1507 = icmp eq ptr %1506, %17
  br i1 %1507, label %1508, label %19, !llvm.loop !269

1508:                                             ; preds = %1499, %1, %16
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_VEC_c_goto_bindings_p_gc(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #24
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %31

6:                                                ; preds = %3
  %7 = load i32, ptr %0, align 8, !tbaa !270
  %8 = zext i32 %7 to i64
  %9 = icmp eq i32 %7, 0
  br i1 %9, label %31, label %10

10:                                               ; preds = %6, %28
  %11 = phi i64 [ %29, %28 ], [ 0, %6 ]
  %12 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %0, i64 0, i32 2, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !5
  %14 = icmp ult ptr %13, inttoptr (i64 2 to ptr)
  br i1 %14, label %28, label %15

15:                                               ; preds = %10
  %16 = tail call i32 @ggc_set_mark(ptr noundef nonnull %13) #24
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.c_goto_bindings, ptr %13, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !118
  %21 = icmp eq ptr %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  tail call void @gt_ggc_mx_c_scope(ptr noundef nonnull %20)
  br label %23

23:                                               ; preds = %22, %18
  %24 = getelementptr inbounds %struct.c_goto_bindings, ptr %13, i64 0, i32 1, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !119
  %26 = icmp eq ptr %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @gt_ggc_mx_c_binding(ptr noundef nonnull %25)
  br label %28

28:                                               ; preds = %10, %27, %23, %15
  %29 = add nuw nsw i64 %11, 1
  %30 = icmp eq i64 %29, %8
  br i1 %30, label %31, label %10, !llvm.loop !272

31:                                               ; preds = %28, %6, %1, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_c_goto_bindings(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #24
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.c_goto_bindings, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !118
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @gt_ggc_mx_c_scope(ptr noundef nonnull %8)
  br label %11

11:                                               ; preds = %6, %10
  %12 = getelementptr inbounds %struct.c_goto_bindings, ptr %0, i64 0, i32 1, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !119
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @gt_ggc_mx_c_binding(ptr noundef nonnull %13)
  br label %16

16:                                               ; preds = %1, %11, %15, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_c_scope(ptr noundef %0) #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %41, label %3

3:                                                ; preds = %1, %7
  %4 = phi ptr [ %8, %7 ], [ %0, %1 ]
  %5 = tail call i32 @ggc_set_mark(ptr noundef nonnull %4) #24
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = load ptr, ptr %4, align 8, !tbaa !47
  %9 = icmp ult ptr %8, inttoptr (i64 2 to ptr)
  br i1 %9, label %10, label %3, !llvm.loop !273

10:                                               ; preds = %3, %7
  %11 = phi ptr [ %4, %3 ], [ %8, %7 ]
  %12 = icmp eq ptr %11, %0
  br i1 %12, label %41, label %13

13:                                               ; preds = %10, %38
  %14 = phi ptr [ %39, %38 ], [ %0, %10 ]
  %15 = load ptr, ptr %14, align 8, !tbaa !47
  %16 = icmp eq ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @gt_ggc_mx_c_scope(ptr noundef nonnull %15)
  br label %18

18:                                               ; preds = %13, %17
  %19 = getelementptr inbounds %struct.c_scope, ptr %14, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !45
  %21 = icmp eq ptr %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  tail call void @gt_ggc_mx_c_scope(ptr noundef nonnull %20)
  br label %23

23:                                               ; preds = %18, %22
  %24 = getelementptr inbounds %struct.c_scope, ptr %14, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !48
  %26 = icmp eq ptr %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @gt_ggc_mx_c_binding(ptr noundef nonnull %25)
  br label %28

28:                                               ; preds = %23, %27
  %29 = getelementptr inbounds %struct.c_scope, ptr %14, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !49
  %31 = icmp eq ptr %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %28
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %30)
  br label %33

33:                                               ; preds = %28, %32
  %34 = getelementptr inbounds %struct.c_scope, ptr %14, i64 0, i32 4
  %35 = load ptr, ptr %34, align 8, !tbaa !62
  %36 = icmp eq ptr %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %35)
  br label %38

38:                                               ; preds = %37, %33
  %39 = load ptr, ptr %14, align 8, !tbaa !47
  %40 = icmp eq ptr %39, %11
  br i1 %40, label %41, label %13, !llvm.loop !274

41:                                               ; preds = %38, %1, %10
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_c_binding(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %49, label %3

3:                                                ; preds = %1, %7
  %4 = phi ptr [ %9, %7 ], [ %0, %1 ]
  %5 = tail call i32 @ggc_set_mark(ptr noundef nonnull %4) #24
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.c_binding, ptr %4, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !60
  %10 = icmp ult ptr %9, inttoptr (i64 2 to ptr)
  br i1 %10, label %11, label %3, !llvm.loop !275

11:                                               ; preds = %3, %7
  %12 = phi ptr [ %4, %3 ], [ %9, %7 ]
  %13 = icmp eq ptr %12, %0
  br i1 %13, label %49, label %14

14:                                               ; preds = %11, %46
  %15 = phi ptr [ %47, %46 ], [ %0, %11 ]
  %16 = getelementptr inbounds %struct.c_binding, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !32
  %18 = load i64, ptr %17, align 8
  %19 = and i64 %18, 65535
  %20 = icmp eq i64 %19, 30
  %21 = load ptr, ptr %15, align 8, !tbaa !16
  %22 = icmp eq ptr %21, null
  br i1 %20, label %25, label %23

23:                                               ; preds = %14
  br i1 %22, label %27, label %24

24:                                               ; preds = %23
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %21)
  br label %27

25:                                               ; preds = %14
  br i1 %22, label %27, label %26

26:                                               ; preds = %25
  tail call void @gt_ggc_mx_c_label_vars(ptr noundef nonnull %21)
  br label %27

27:                                               ; preds = %24, %23, %26, %25
  %28 = load ptr, ptr %16, align 8, !tbaa !32
  %29 = icmp eq ptr %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %28)
  br label %31

31:                                               ; preds = %27, %30
  %32 = getelementptr inbounds %struct.c_binding, ptr %15, i64 0, i32 2
  %33 = load ptr, ptr %32, align 8, !tbaa !51
  %34 = icmp eq ptr %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %33)
  br label %36

36:                                               ; preds = %31, %35
  %37 = getelementptr inbounds %struct.c_binding, ptr %15, i64 0, i32 3
  %38 = load ptr, ptr %37, align 8, !tbaa !60
  %39 = icmp eq ptr %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @gt_ggc_mx_c_binding(ptr noundef nonnull %38)
  br label %41

41:                                               ; preds = %36, %40
  %42 = getelementptr inbounds %struct.c_binding, ptr %15, i64 0, i32 4
  %43 = load ptr, ptr %42, align 8, !tbaa !52
  %44 = icmp eq ptr %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  tail call void @gt_ggc_mx_c_binding(ptr noundef nonnull %43)
  br label %46

46:                                               ; preds = %45, %41
  %47 = load ptr, ptr %37, align 8, !tbaa !60
  %48 = icmp eq ptr %47, %12
  br i1 %48, label %49, label %14, !llvm.loop !276

49:                                               ; preds = %46, %1, %11
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_c_label_vars(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %57, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #24
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %57

6:                                                ; preds = %3
  %7 = load ptr, ptr %0, align 8, !tbaa !112
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @gt_ggc_mx_c_label_vars(ptr noundef nonnull %7)
  br label %10

10:                                               ; preds = %6, %9
  %11 = getelementptr inbounds %struct.c_label_vars, ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !113
  %13 = icmp eq ptr %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @gt_ggc_mx_c_scope(ptr noundef nonnull %12)
  br label %15

15:                                               ; preds = %10, %14
  %16 = getelementptr inbounds %struct.c_label_vars, ptr %0, i64 0, i32 1, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !64
  %18 = icmp eq ptr %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @gt_ggc_mx_c_binding(ptr noundef nonnull %17)
  br label %20

20:                                               ; preds = %15, %19
  %21 = getelementptr inbounds %struct.c_label_vars, ptr %0, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !53
  %23 = icmp eq ptr %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @gt_ggc_mx_VEC_tree_gc(ptr noundef nonnull %22) #24
  br label %25

25:                                               ; preds = %20, %24
  %26 = getelementptr inbounds %struct.c_label_vars, ptr %0, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8, !tbaa !69
  %28 = icmp ult ptr %27, inttoptr (i64 2 to ptr)
  br i1 %28, label %57, label %29

29:                                               ; preds = %25
  %30 = tail call i32 @ggc_set_mark(ptr noundef nonnull %27) #24
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %57

32:                                               ; preds = %29
  %33 = load i32, ptr %27, align 8, !tbaa !270
  %34 = zext i32 %33 to i64
  %35 = icmp eq i32 %33, 0
  br i1 %35, label %57, label %36

36:                                               ; preds = %32, %54
  %37 = phi i64 [ %55, %54 ], [ 0, %32 ]
  %38 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %27, i64 0, i32 2, i64 %37
  %39 = load ptr, ptr %38, align 8, !tbaa !5
  %40 = icmp ult ptr %39, inttoptr (i64 2 to ptr)
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = tail call i32 @ggc_set_mark(ptr noundef nonnull %39) #24
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.c_goto_bindings, ptr %39, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !118
  %47 = icmp eq ptr %46, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %44
  tail call void @gt_ggc_mx_c_scope(ptr noundef nonnull %46)
  br label %49

49:                                               ; preds = %48, %44
  %50 = getelementptr inbounds %struct.c_goto_bindings, ptr %39, i64 0, i32 1, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !119
  %52 = icmp eq ptr %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  tail call void @gt_ggc_mx_c_binding(ptr noundef nonnull %51)
  br label %54

54:                                               ; preds = %53, %49, %41, %36
  %55 = add nuw nsw i64 %37, 1
  %56 = icmp eq i64 %55, %34
  br i1 %56, label %57, label %36, !llvm.loop !272

57:                                               ; preds = %54, %32, %29, %1, %25, %3
  ret void
}

declare void @gt_ggc_mx_VEC_tree_gc(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_language_function(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #24
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %20

6:                                                ; preds = %3
  %7 = load ptr, ptr %0, align 8, !tbaa !277
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %7)
  br label %10

10:                                               ; preds = %6, %9
  %11 = getelementptr inbounds %struct.language_function, ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !240
  %13 = icmp eq ptr %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %12)
  br label %15

15:                                               ; preds = %10, %14
  %16 = getelementptr inbounds %struct.language_function, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !243
  %18 = icmp eq ptr %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %17)
  br label %20

20:                                               ; preds = %1, %15, %19, %3
  ret void
}

declare i32 @tree_node_structure(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_mx_real_value(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_mx_fixed_value(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_m_S(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_lang_decl(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #24
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

declare void @gt_ggc_mx_rtx_def(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_mx_var_ann_d(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_mx_function(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_mx_die_struct(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_ggc_mx_lang_type(ptr noundef %0) local_unnamed_addr #9 {
  %2 = icmp ult ptr %0, inttoptr (i64 2 to ptr)
  br i1 %2, label %25, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @ggc_set_mark(ptr noundef nonnull %0) #24
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %25

6:                                                ; preds = %3
  %7 = load ptr, ptr %0, align 8, !tbaa !204
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @gt_ggc_mx_sorted_fields_type(ptr noundef nonnull %7) #24
  br label %10

10:                                               ; preds = %6, %9
  %11 = getelementptr inbounds %struct.lang_type, ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !164
  %13 = icmp eq ptr %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %12)
  br label %15

15:                                               ; preds = %10, %14
  %16 = getelementptr inbounds %struct.lang_type, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !166
  %18 = icmp eq ptr %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %17)
  br label %20

20:                                               ; preds = %15, %19
  %21 = getelementptr inbounds %struct.lang_type, ptr %0, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !264
  %23 = icmp eq ptr %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @gt_ggc_mx_lang_tree_node(ptr noundef nonnull %22)
  br label %25

25:                                               ; preds = %1, %20, %24, %3
  ret void
}

declare void @gt_ggc_mx_gimple_statement_d(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_mx_ptr_info_def(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_mx_tree_statement_list_node(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_mx_VEC_constructor_elt_gc(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_mx_gimple_seq_d(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_mx_cpp_macro(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_mx_answer(ptr noundef) local_unnamed_addr #3

declare void @gt_ggc_mx_sorted_fields_type(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_c_inline_static(ptr noundef %0) #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_15c_inline_static, i32 noundef 3) #24
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %32, label %6

4:                                                ; preds = %6
  %5 = icmp eq ptr %9, %0
  br i1 %5, label %32, label %12

6:                                                ; preds = %1, %6
  %7 = phi ptr [ %9, %6 ], [ %0, %1 ]
  %8 = getelementptr inbounds %struct.c_inline_static, ptr %7, i64 0, i32 4
  %9 = load ptr, ptr %8, align 8, !tbaa !42
  %10 = tail call i32 @gt_pch_note_object(ptr noundef %9, ptr noundef %9, ptr noundef nonnull @gt_pch_p_15c_inline_static, i32 noundef 3) #24
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %4, label %6, !llvm.loop !278

12:                                               ; preds = %4, %29
  %13 = phi ptr [ %30, %29 ], [ %0, %4 ]
  %14 = getelementptr inbounds %struct.c_inline_static, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !39
  %16 = icmp eq ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %12
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %15)
  br label %18

18:                                               ; preds = %12, %17
  %19 = getelementptr inbounds %struct.c_inline_static, ptr %13, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !40
  %21 = icmp eq ptr %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %20)
  br label %23

23:                                               ; preds = %18, %22
  %24 = getelementptr inbounds %struct.c_inline_static, ptr %13, i64 0, i32 4
  %25 = load ptr, ptr %24, align 8, !tbaa !42
  %26 = icmp eq ptr %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  tail call void @gt_pch_nx_c_inline_static(ptr noundef nonnull %25)
  %28 = load ptr, ptr %24, align 8, !tbaa !42
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi ptr [ %28, %27 ], [ null, %23 ]
  %31 = icmp eq ptr %30, %9
  br i1 %31, label %32, label %12, !llvm.loop !279

32:                                               ; preds = %29, %1, %4
  ret void
}

declare i32 @gt_pch_note_object(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_15c_inline_static(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #9 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.c_inline_static, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #24
  %8 = getelementptr inbounds %struct.c_inline_static, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %8, ptr noundef %3) #24
  %9 = getelementptr inbounds %struct.c_inline_static, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %9, ptr noundef %3) #24
  br label %10

10:                                               ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_lang_tree_node(ptr noundef %0) #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_14lang_tree_node, i32 noundef 133) #24
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %1485, label %6

4:                                                ; preds = %6
  %5 = icmp eq ptr %14, %0
  br i1 %5, label %1485, label %17

6:                                                ; preds = %1, %6
  %7 = phi ptr [ %14, %6 ], [ %0, %1 ]
  %8 = load i64, ptr %7, align 8
  %9 = and i64 %8, 65535
  %10 = icmp eq i64 %9, 8
  %11 = getelementptr inbounds %struct.tree_type, ptr %7, i64 0, i32 15
  %12 = getelementptr inbounds %struct.tree_common, ptr %7, i64 0, i32 1
  %13 = select i1 %10, ptr %11, ptr %12
  %14 = load ptr, ptr %13, align 8, !tbaa !16
  %15 = tail call i32 @gt_pch_note_object(ptr noundef %14, ptr noundef %14, ptr noundef nonnull @gt_pch_p_14lang_tree_node, i32 noundef 133) #24
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %4, label %6, !llvm.loop !280

17:                                               ; preds = %4, %1476
  %18 = phi ptr [ %1483, %1476 ], [ %0, %4 ]
  %19 = load i64, ptr %18, align 8
  %20 = and i64 %19, 65535
  %21 = icmp eq i64 %20, 1
  br i1 %21, label %1427, label %22

22:                                               ; preds = %17
  %23 = tail call i32 @tree_node_structure(ptr noundef nonnull %18) #24
  switch i32 %23, label %1476 [
    i32 33, label %1417
    i32 1, label %24
    i32 2, label %34
    i32 3, label %44
    i32 4, label %59
    i32 5, label %74
    i32 6, label %89
    i32 7, label %99
    i32 8, label %119
    i32 9, label %132
    i32 10, label %152
    i32 11, label %203
    i32 12, label %259
    i32 16, label %350
    i32 13, label %416
    i32 15, label %487
    i32 14, label %563
    i32 17, label %639
    i32 18, label %695
    i32 19, label %756
    i32 20, label %812
    i32 21, label %903
    i32 22, label %1014
    i32 23, label %1113
    i32 24, label %1133
    i32 25, label %1157
    i32 26, label %1201
    i32 27, label %1226
    i32 28, label %1271
    i32 29, label %1335
    i32 30, label %1355
    i32 31, label %1370
    i32 32, label %1407
  ]

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !16
  %27 = icmp eq ptr %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %26)
  br label %29

29:                                               ; preds = %24, %28
  %30 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !16
  %32 = icmp eq ptr %31, null
  br i1 %32, label %1476, label %33

33:                                               ; preds = %29
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %31)
  br label %1476

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !16
  %37 = icmp eq ptr %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %34
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %36)
  br label %39

39:                                               ; preds = %34, %38
  %40 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %41 = load ptr, ptr %40, align 8, !tbaa !16
  %42 = icmp eq ptr %41, null
  br i1 %42, label %1476, label %43

43:                                               ; preds = %39
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %41)
  br label %1476

44:                                               ; preds = %22
  %45 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !16
  %47 = icmp eq ptr %46, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %44
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %46)
  br label %49

49:                                               ; preds = %44, %48
  %50 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %51 = load ptr, ptr %50, align 8, !tbaa !16
  %52 = icmp eq ptr %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %51)
  br label %54

54:                                               ; preds = %49, %53
  %55 = getelementptr inbounds %struct.tree_real_cst, ptr %18, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !16
  %57 = icmp eq ptr %56, null
  br i1 %57, label %1476, label %58

58:                                               ; preds = %54
  tail call void @gt_pch_nx_real_value(ptr noundef nonnull %56) #24
  br label %1476

59:                                               ; preds = %22
  %60 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !16
  %62 = icmp eq ptr %61, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %59
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %61)
  br label %64

64:                                               ; preds = %59, %63
  %65 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %66 = load ptr, ptr %65, align 8, !tbaa !16
  %67 = icmp eq ptr %66, null
  br i1 %67, label %69, label %68

68:                                               ; preds = %64
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %66)
  br label %69

69:                                               ; preds = %64, %68
  %70 = getelementptr inbounds %struct.tree_fixed_cst, ptr %18, i64 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !16
  %72 = icmp eq ptr %71, null
  br i1 %72, label %1476, label %73

73:                                               ; preds = %69
  tail call void @gt_pch_nx_fixed_value(ptr noundef nonnull %71) #24
  br label %1476

74:                                               ; preds = %22
  %75 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %76 = load ptr, ptr %75, align 8, !tbaa !16
  %77 = icmp eq ptr %76, null
  br i1 %77, label %79, label %78

78:                                               ; preds = %74
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %76)
  br label %79

79:                                               ; preds = %74, %78
  %80 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %81 = load ptr, ptr %80, align 8, !tbaa !16
  %82 = icmp eq ptr %81, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %79
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %81)
  br label %84

84:                                               ; preds = %79, %83
  %85 = getelementptr inbounds %struct.tree_vector, ptr %18, i64 0, i32 1
  %86 = load ptr, ptr %85, align 8, !tbaa !16
  %87 = icmp eq ptr %86, null
  br i1 %87, label %1476, label %88

88:                                               ; preds = %84
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %86)
  br label %1476

89:                                               ; preds = %22
  %90 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %91 = load ptr, ptr %90, align 8, !tbaa !16
  %92 = icmp eq ptr %91, null
  br i1 %92, label %94, label %93

93:                                               ; preds = %89
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %91)
  br label %94

94:                                               ; preds = %89, %93
  %95 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %96 = load ptr, ptr %95, align 8, !tbaa !16
  %97 = icmp eq ptr %96, null
  br i1 %97, label %1476, label %98

98:                                               ; preds = %94
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %96)
  br label %1476

99:                                               ; preds = %22
  %100 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %101 = load ptr, ptr %100, align 8, !tbaa !16
  %102 = icmp eq ptr %101, null
  br i1 %102, label %104, label %103

103:                                              ; preds = %99
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %101)
  br label %104

104:                                              ; preds = %99, %103
  %105 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %106 = load ptr, ptr %105, align 8, !tbaa !16
  %107 = icmp eq ptr %106, null
  br i1 %107, label %109, label %108

108:                                              ; preds = %104
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %106)
  br label %109

109:                                              ; preds = %104, %108
  %110 = getelementptr inbounds %struct.tree_complex, ptr %18, i64 0, i32 1
  %111 = load ptr, ptr %110, align 8, !tbaa !16
  %112 = icmp eq ptr %111, null
  br i1 %112, label %114, label %113

113:                                              ; preds = %109
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %111)
  br label %114

114:                                              ; preds = %109, %113
  %115 = getelementptr inbounds %struct.tree_complex, ptr %18, i64 0, i32 2
  %116 = load ptr, ptr %115, align 8, !tbaa !16
  %117 = icmp eq ptr %116, null
  br i1 %117, label %1476, label %118

118:                                              ; preds = %114
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %116)
  br label %1476

119:                                              ; preds = %22
  %120 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %121 = load ptr, ptr %120, align 8, !tbaa !16
  %122 = icmp eq ptr %121, null
  br i1 %122, label %124, label %123

123:                                              ; preds = %119
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %121)
  br label %124

124:                                              ; preds = %119, %123
  %125 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %126 = load ptr, ptr %125, align 8, !tbaa !16
  %127 = icmp eq ptr %126, null
  br i1 %127, label %129, label %128

128:                                              ; preds = %124
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %126)
  br label %129

129:                                              ; preds = %128, %124
  %130 = getelementptr inbounds %struct.tree_identifier, ptr %18, i64 0, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !16
  tail call void @gt_pch_n_S(ptr noundef %131) #24
  br label %1476

132:                                              ; preds = %22
  %133 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %134 = load ptr, ptr %133, align 8, !tbaa !16
  %135 = icmp eq ptr %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %132
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %134)
  br label %137

137:                                              ; preds = %132, %136
  %138 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %139 = load ptr, ptr %138, align 8, !tbaa !16
  %140 = icmp eq ptr %139, null
  br i1 %140, label %142, label %141

141:                                              ; preds = %137
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %139)
  br label %142

142:                                              ; preds = %137, %141
  %143 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 3
  %144 = load ptr, ptr %143, align 8, !tbaa !16
  %145 = icmp eq ptr %144, null
  br i1 %145, label %147, label %146

146:                                              ; preds = %142
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %144)
  br label %147

147:                                              ; preds = %142, %146
  %148 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 4
  %149 = load ptr, ptr %148, align 8, !tbaa !16
  %150 = icmp eq ptr %149, null
  br i1 %150, label %1476, label %151

151:                                              ; preds = %147
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %149)
  br label %1476

152:                                              ; preds = %22
  %153 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %154 = load ptr, ptr %153, align 8, !tbaa !16
  %155 = icmp eq ptr %154, null
  br i1 %155, label %157, label %156

156:                                              ; preds = %152
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %154)
  br label %157

157:                                              ; preds = %152, %156
  %158 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %159 = load ptr, ptr %158, align 8, !tbaa !16
  %160 = icmp eq ptr %159, null
  br i1 %160, label %162, label %161

161:                                              ; preds = %157
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %159)
  br label %162

162:                                              ; preds = %157, %161
  %163 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 3
  %164 = load ptr, ptr %163, align 8, !tbaa !16
  %165 = icmp eq ptr %164, null
  br i1 %165, label %167, label %166

166:                                              ; preds = %162
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %164)
  br label %167

167:                                              ; preds = %162, %166
  %168 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 4
  %169 = load ptr, ptr %168, align 8, !tbaa !16
  %170 = icmp eq ptr %169, null
  br i1 %170, label %172, label %171

171:                                              ; preds = %167
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %169)
  br label %172

172:                                              ; preds = %167, %171
  %173 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 1
  %174 = load ptr, ptr %173, align 8, !tbaa !16
  %175 = icmp eq ptr %174, null
  br i1 %175, label %177, label %176

176:                                              ; preds = %172
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %174)
  br label %177

177:                                              ; preds = %172, %176
  %178 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 4
  %179 = load ptr, ptr %178, align 8, !tbaa !16
  %180 = icmp eq ptr %179, null
  br i1 %180, label %182, label %181

181:                                              ; preds = %177
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %179)
  br label %182

182:                                              ; preds = %177, %181
  %183 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 5
  %184 = load ptr, ptr %183, align 8, !tbaa !16
  %185 = icmp eq ptr %184, null
  br i1 %185, label %187, label %186

186:                                              ; preds = %182
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %184)
  br label %187

187:                                              ; preds = %182, %186
  %188 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 6
  %189 = load ptr, ptr %188, align 8, !tbaa !16
  %190 = icmp eq ptr %189, null
  br i1 %190, label %192, label %191

191:                                              ; preds = %187
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %189)
  br label %192

192:                                              ; preds = %187, %191
  %193 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %194 = load ptr, ptr %193, align 8, !tbaa !16
  %195 = icmp eq ptr %194, null
  br i1 %195, label %197, label %196

196:                                              ; preds = %192
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %194)
  br label %197

197:                                              ; preds = %192, %196
  %198 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 8
  %199 = load ptr, ptr %198, align 8, !tbaa !16
  %200 = icmp eq ptr %199, null
  br i1 %200, label %1476, label %201

201:                                              ; preds = %197
  %202 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %199, ptr noundef nonnull %199, ptr noundef nonnull @gt_pch_p_9lang_decl, i32 noundef 136) #24
  br label %1476

203:                                              ; preds = %22
  %204 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %205 = load ptr, ptr %204, align 8, !tbaa !16
  %206 = icmp eq ptr %205, null
  br i1 %206, label %208, label %207

207:                                              ; preds = %203
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %205)
  br label %208

208:                                              ; preds = %203, %207
  %209 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %210 = load ptr, ptr %209, align 8, !tbaa !16
  %211 = icmp eq ptr %210, null
  br i1 %211, label %213, label %212

212:                                              ; preds = %208
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %210)
  br label %213

213:                                              ; preds = %208, %212
  %214 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 3
  %215 = load ptr, ptr %214, align 8, !tbaa !16
  %216 = icmp eq ptr %215, null
  br i1 %216, label %218, label %217

217:                                              ; preds = %213
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %215)
  br label %218

218:                                              ; preds = %213, %217
  %219 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 4
  %220 = load ptr, ptr %219, align 8, !tbaa !16
  %221 = icmp eq ptr %220, null
  br i1 %221, label %223, label %222

222:                                              ; preds = %218
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %220)
  br label %223

223:                                              ; preds = %218, %222
  %224 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 1
  %225 = load ptr, ptr %224, align 8, !tbaa !16
  %226 = icmp eq ptr %225, null
  br i1 %226, label %228, label %227

227:                                              ; preds = %223
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %225)
  br label %228

228:                                              ; preds = %223, %227
  %229 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 4
  %230 = load ptr, ptr %229, align 8, !tbaa !16
  %231 = icmp eq ptr %230, null
  br i1 %231, label %233, label %232

232:                                              ; preds = %228
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %230)
  br label %233

233:                                              ; preds = %228, %232
  %234 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 5
  %235 = load ptr, ptr %234, align 8, !tbaa !16
  %236 = icmp eq ptr %235, null
  br i1 %236, label %238, label %237

237:                                              ; preds = %233
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %235)
  br label %238

238:                                              ; preds = %233, %237
  %239 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 6
  %240 = load ptr, ptr %239, align 8, !tbaa !16
  %241 = icmp eq ptr %240, null
  br i1 %241, label %243, label %242

242:                                              ; preds = %238
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %240)
  br label %243

243:                                              ; preds = %238, %242
  %244 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %245 = load ptr, ptr %244, align 8, !tbaa !16
  %246 = icmp eq ptr %245, null
  br i1 %246, label %248, label %247

247:                                              ; preds = %243
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %245)
  br label %248

248:                                              ; preds = %243, %247
  %249 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 8
  %250 = load ptr, ptr %249, align 8, !tbaa !16
  %251 = icmp eq ptr %250, null
  br i1 %251, label %254, label %252

252:                                              ; preds = %248
  %253 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %250, ptr noundef nonnull %250, ptr noundef nonnull @gt_pch_p_9lang_decl, i32 noundef 136) #24
  br label %254

254:                                              ; preds = %248, %252
  %255 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %18, i64 0, i32 1
  %256 = load ptr, ptr %255, align 8, !tbaa !16
  %257 = icmp eq ptr %256, null
  br i1 %257, label %1476, label %258

258:                                              ; preds = %254
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %256) #24
  br label %1476

259:                                              ; preds = %22
  %260 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %261 = load ptr, ptr %260, align 8, !tbaa !16
  %262 = icmp eq ptr %261, null
  br i1 %262, label %264, label %263

263:                                              ; preds = %259
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %261)
  br label %264

264:                                              ; preds = %259, %263
  %265 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %266 = load ptr, ptr %265, align 8, !tbaa !16
  %267 = icmp eq ptr %266, null
  br i1 %267, label %269, label %268

268:                                              ; preds = %264
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %266)
  br label %269

269:                                              ; preds = %264, %268
  %270 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 3
  %271 = load ptr, ptr %270, align 8, !tbaa !16
  %272 = icmp eq ptr %271, null
  br i1 %272, label %274, label %273

273:                                              ; preds = %269
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %271)
  br label %274

274:                                              ; preds = %269, %273
  %275 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 4
  %276 = load ptr, ptr %275, align 8, !tbaa !16
  %277 = icmp eq ptr %276, null
  br i1 %277, label %279, label %278

278:                                              ; preds = %274
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %276)
  br label %279

279:                                              ; preds = %274, %278
  %280 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 1
  %281 = load ptr, ptr %280, align 8, !tbaa !16
  %282 = icmp eq ptr %281, null
  br i1 %282, label %284, label %283

283:                                              ; preds = %279
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %281)
  br label %284

284:                                              ; preds = %279, %283
  %285 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 4
  %286 = load ptr, ptr %285, align 8, !tbaa !16
  %287 = icmp eq ptr %286, null
  br i1 %287, label %289, label %288

288:                                              ; preds = %284
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %286)
  br label %289

289:                                              ; preds = %284, %288
  %290 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 5
  %291 = load ptr, ptr %290, align 8, !tbaa !16
  %292 = icmp eq ptr %291, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %289
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %291)
  br label %294

294:                                              ; preds = %289, %293
  %295 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 6
  %296 = load ptr, ptr %295, align 8, !tbaa !16
  %297 = icmp eq ptr %296, null
  br i1 %297, label %299, label %298

298:                                              ; preds = %294
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %296)
  br label %299

299:                                              ; preds = %294, %298
  %300 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %301 = load ptr, ptr %300, align 8, !tbaa !16
  %302 = icmp eq ptr %301, null
  br i1 %302, label %304, label %303

303:                                              ; preds = %299
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %301)
  br label %304

304:                                              ; preds = %299, %303
  %305 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 8
  %306 = load ptr, ptr %305, align 8, !tbaa !16
  %307 = icmp eq ptr %306, null
  br i1 %307, label %310, label %308

308:                                              ; preds = %304
  %309 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %306, ptr noundef nonnull %306, ptr noundef nonnull @gt_pch_p_9lang_decl, i32 noundef 136) #24
  br label %310

310:                                              ; preds = %304, %308
  %311 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %18, i64 0, i32 1
  %312 = load ptr, ptr %311, align 8, !tbaa !16
  %313 = icmp eq ptr %312, null
  br i1 %313, label %315, label %314

314:                                              ; preds = %310
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %312) #24
  br label %315

315:                                              ; preds = %310, %314
  %316 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 1
  %317 = load ptr, ptr %316, align 8, !tbaa !16
  %318 = icmp eq ptr %317, null
  br i1 %318, label %320, label %319

319:                                              ; preds = %315
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %317)
  br label %320

320:                                              ; preds = %315, %319
  %321 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 2
  %322 = load ptr, ptr %321, align 8, !tbaa !16
  %323 = icmp eq ptr %322, null
  br i1 %323, label %325, label %324

324:                                              ; preds = %320
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %322)
  br label %325

325:                                              ; preds = %320, %324
  %326 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 3
  %327 = load ptr, ptr %326, align 8, !tbaa !16
  %328 = icmp eq ptr %327, null
  br i1 %328, label %330, label %329

329:                                              ; preds = %325
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %327)
  br label %330

330:                                              ; preds = %325, %329
  %331 = getelementptr inbounds %struct.tree_decl_non_common, ptr %18, i64 0, i32 1
  %332 = load ptr, ptr %331, align 8, !tbaa !16
  %333 = icmp eq ptr %332, null
  br i1 %333, label %335, label %334

334:                                              ; preds = %330
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %332)
  br label %335

335:                                              ; preds = %330, %334
  %336 = getelementptr inbounds %struct.tree_decl_non_common, ptr %18, i64 0, i32 2
  %337 = load ptr, ptr %336, align 8, !tbaa !16
  %338 = icmp eq ptr %337, null
  br i1 %338, label %340, label %339

339:                                              ; preds = %335
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %337)
  br label %340

340:                                              ; preds = %335, %339
  %341 = getelementptr inbounds %struct.tree_decl_non_common, ptr %18, i64 0, i32 3
  %342 = load ptr, ptr %341, align 8, !tbaa !16
  %343 = icmp eq ptr %342, null
  br i1 %343, label %345, label %344

344:                                              ; preds = %340
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %342)
  br label %345

345:                                              ; preds = %340, %344
  %346 = getelementptr inbounds %struct.tree_decl_non_common, ptr %18, i64 0, i32 4
  %347 = load ptr, ptr %346, align 8, !tbaa !16
  %348 = icmp eq ptr %347, null
  br i1 %348, label %1476, label %349

349:                                              ; preds = %345
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %347)
  br label %1476

350:                                              ; preds = %22
  %351 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %352 = load ptr, ptr %351, align 8, !tbaa !16
  %353 = icmp eq ptr %352, null
  br i1 %353, label %355, label %354

354:                                              ; preds = %350
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %352)
  br label %355

355:                                              ; preds = %350, %354
  %356 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %357 = load ptr, ptr %356, align 8, !tbaa !16
  %358 = icmp eq ptr %357, null
  br i1 %358, label %360, label %359

359:                                              ; preds = %355
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %357)
  br label %360

360:                                              ; preds = %355, %359
  %361 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 3
  %362 = load ptr, ptr %361, align 8, !tbaa !16
  %363 = icmp eq ptr %362, null
  br i1 %363, label %365, label %364

364:                                              ; preds = %360
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %362)
  br label %365

365:                                              ; preds = %360, %364
  %366 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 4
  %367 = load ptr, ptr %366, align 8, !tbaa !16
  %368 = icmp eq ptr %367, null
  br i1 %368, label %370, label %369

369:                                              ; preds = %365
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %367)
  br label %370

370:                                              ; preds = %365, %369
  %371 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 1
  %372 = load ptr, ptr %371, align 8, !tbaa !16
  %373 = icmp eq ptr %372, null
  br i1 %373, label %375, label %374

374:                                              ; preds = %370
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %372)
  br label %375

375:                                              ; preds = %370, %374
  %376 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 4
  %377 = load ptr, ptr %376, align 8, !tbaa !16
  %378 = icmp eq ptr %377, null
  br i1 %378, label %380, label %379

379:                                              ; preds = %375
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %377)
  br label %380

380:                                              ; preds = %375, %379
  %381 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 5
  %382 = load ptr, ptr %381, align 8, !tbaa !16
  %383 = icmp eq ptr %382, null
  br i1 %383, label %385, label %384

384:                                              ; preds = %380
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %382)
  br label %385

385:                                              ; preds = %380, %384
  %386 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 6
  %387 = load ptr, ptr %386, align 8, !tbaa !16
  %388 = icmp eq ptr %387, null
  br i1 %388, label %390, label %389

389:                                              ; preds = %385
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %387)
  br label %390

390:                                              ; preds = %385, %389
  %391 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %392 = load ptr, ptr %391, align 8, !tbaa !16
  %393 = icmp eq ptr %392, null
  br i1 %393, label %395, label %394

394:                                              ; preds = %390
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %392)
  br label %395

395:                                              ; preds = %390, %394
  %396 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 8
  %397 = load ptr, ptr %396, align 8, !tbaa !16
  %398 = icmp eq ptr %397, null
  br i1 %398, label %401, label %399

399:                                              ; preds = %395
  %400 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %397, ptr noundef nonnull %397, ptr noundef nonnull @gt_pch_p_9lang_decl, i32 noundef 136) #24
  br label %401

401:                                              ; preds = %395, %399
  %402 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %18, i64 0, i32 1
  %403 = load ptr, ptr %402, align 8, !tbaa !16
  %404 = icmp eq ptr %403, null
  br i1 %404, label %406, label %405

405:                                              ; preds = %401
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %403) #24
  br label %406

406:                                              ; preds = %401, %405
  %407 = getelementptr inbounds %struct.tree_parm_decl, ptr %18, i64 0, i32 1
  %408 = load ptr, ptr %407, align 8, !tbaa !16
  %409 = icmp eq ptr %408, null
  br i1 %409, label %411, label %410

410:                                              ; preds = %406
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %408) #24
  br label %411

411:                                              ; preds = %406, %410
  %412 = getelementptr inbounds %struct.tree_parm_decl, ptr %18, i64 0, i32 2
  %413 = load ptr, ptr %412, align 8, !tbaa !16
  %414 = icmp eq ptr %413, null
  br i1 %414, label %1476, label %415

415:                                              ; preds = %411
  tail call void @gt_pch_nx_var_ann_d(ptr noundef nonnull %413) #24
  br label %1476

416:                                              ; preds = %22
  %417 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %418 = load ptr, ptr %417, align 8, !tbaa !16
  %419 = icmp eq ptr %418, null
  br i1 %419, label %421, label %420

420:                                              ; preds = %416
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %418)
  br label %421

421:                                              ; preds = %416, %420
  %422 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %423 = load ptr, ptr %422, align 8, !tbaa !16
  %424 = icmp eq ptr %423, null
  br i1 %424, label %426, label %425

425:                                              ; preds = %421
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %423)
  br label %426

426:                                              ; preds = %421, %425
  %427 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 3
  %428 = load ptr, ptr %427, align 8, !tbaa !16
  %429 = icmp eq ptr %428, null
  br i1 %429, label %431, label %430

430:                                              ; preds = %426
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %428)
  br label %431

431:                                              ; preds = %426, %430
  %432 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 4
  %433 = load ptr, ptr %432, align 8, !tbaa !16
  %434 = icmp eq ptr %433, null
  br i1 %434, label %436, label %435

435:                                              ; preds = %431
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %433)
  br label %436

436:                                              ; preds = %431, %435
  %437 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 1
  %438 = load ptr, ptr %437, align 8, !tbaa !16
  %439 = icmp eq ptr %438, null
  br i1 %439, label %441, label %440

440:                                              ; preds = %436
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %438)
  br label %441

441:                                              ; preds = %436, %440
  %442 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 4
  %443 = load ptr, ptr %442, align 8, !tbaa !16
  %444 = icmp eq ptr %443, null
  br i1 %444, label %446, label %445

445:                                              ; preds = %441
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %443)
  br label %446

446:                                              ; preds = %441, %445
  %447 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 5
  %448 = load ptr, ptr %447, align 8, !tbaa !16
  %449 = icmp eq ptr %448, null
  br i1 %449, label %451, label %450

450:                                              ; preds = %446
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %448)
  br label %451

451:                                              ; preds = %446, %450
  %452 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 6
  %453 = load ptr, ptr %452, align 8, !tbaa !16
  %454 = icmp eq ptr %453, null
  br i1 %454, label %456, label %455

455:                                              ; preds = %451
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %453)
  br label %456

456:                                              ; preds = %451, %455
  %457 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %458 = load ptr, ptr %457, align 8, !tbaa !16
  %459 = icmp eq ptr %458, null
  br i1 %459, label %461, label %460

460:                                              ; preds = %456
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %458)
  br label %461

461:                                              ; preds = %456, %460
  %462 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 8
  %463 = load ptr, ptr %462, align 8, !tbaa !16
  %464 = icmp eq ptr %463, null
  br i1 %464, label %467, label %465

465:                                              ; preds = %461
  %466 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %463, ptr noundef nonnull %463, ptr noundef nonnull @gt_pch_p_9lang_decl, i32 noundef 136) #24
  br label %467

467:                                              ; preds = %461, %465
  %468 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %18, i64 0, i32 1
  %469 = load ptr, ptr %468, align 8, !tbaa !16
  %470 = icmp eq ptr %469, null
  br i1 %470, label %472, label %471

471:                                              ; preds = %467
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %469) #24
  br label %472

472:                                              ; preds = %467, %471
  %473 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 1
  %474 = load ptr, ptr %473, align 8, !tbaa !16
  %475 = icmp eq ptr %474, null
  br i1 %475, label %477, label %476

476:                                              ; preds = %472
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %474)
  br label %477

477:                                              ; preds = %472, %476
  %478 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 2
  %479 = load ptr, ptr %478, align 8, !tbaa !16
  %480 = icmp eq ptr %479, null
  br i1 %480, label %482, label %481

481:                                              ; preds = %477
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %479)
  br label %482

482:                                              ; preds = %477, %481
  %483 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 3
  %484 = load ptr, ptr %483, align 8, !tbaa !16
  %485 = icmp eq ptr %484, null
  br i1 %485, label %1476, label %486

486:                                              ; preds = %482
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %484)
  br label %1476

487:                                              ; preds = %22
  %488 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %489 = load ptr, ptr %488, align 8, !tbaa !16
  %490 = icmp eq ptr %489, null
  br i1 %490, label %492, label %491

491:                                              ; preds = %487
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %489)
  br label %492

492:                                              ; preds = %487, %491
  %493 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %494 = load ptr, ptr %493, align 8, !tbaa !16
  %495 = icmp eq ptr %494, null
  br i1 %495, label %497, label %496

496:                                              ; preds = %492
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %494)
  br label %497

497:                                              ; preds = %492, %496
  %498 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 3
  %499 = load ptr, ptr %498, align 8, !tbaa !16
  %500 = icmp eq ptr %499, null
  br i1 %500, label %502, label %501

501:                                              ; preds = %497
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %499)
  br label %502

502:                                              ; preds = %497, %501
  %503 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 4
  %504 = load ptr, ptr %503, align 8, !tbaa !16
  %505 = icmp eq ptr %504, null
  br i1 %505, label %507, label %506

506:                                              ; preds = %502
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %504)
  br label %507

507:                                              ; preds = %502, %506
  %508 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 1
  %509 = load ptr, ptr %508, align 8, !tbaa !16
  %510 = icmp eq ptr %509, null
  br i1 %510, label %512, label %511

511:                                              ; preds = %507
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %509)
  br label %512

512:                                              ; preds = %507, %511
  %513 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 4
  %514 = load ptr, ptr %513, align 8, !tbaa !16
  %515 = icmp eq ptr %514, null
  br i1 %515, label %517, label %516

516:                                              ; preds = %512
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %514)
  br label %517

517:                                              ; preds = %512, %516
  %518 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 5
  %519 = load ptr, ptr %518, align 8, !tbaa !16
  %520 = icmp eq ptr %519, null
  br i1 %520, label %522, label %521

521:                                              ; preds = %517
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %519)
  br label %522

522:                                              ; preds = %517, %521
  %523 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 6
  %524 = load ptr, ptr %523, align 8, !tbaa !16
  %525 = icmp eq ptr %524, null
  br i1 %525, label %527, label %526

526:                                              ; preds = %522
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %524)
  br label %527

527:                                              ; preds = %522, %526
  %528 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %529 = load ptr, ptr %528, align 8, !tbaa !16
  %530 = icmp eq ptr %529, null
  br i1 %530, label %532, label %531

531:                                              ; preds = %527
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %529)
  br label %532

532:                                              ; preds = %527, %531
  %533 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 8
  %534 = load ptr, ptr %533, align 8, !tbaa !16
  %535 = icmp eq ptr %534, null
  br i1 %535, label %538, label %536

536:                                              ; preds = %532
  %537 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %534, ptr noundef nonnull %534, ptr noundef nonnull @gt_pch_p_9lang_decl, i32 noundef 136) #24
  br label %538

538:                                              ; preds = %532, %536
  %539 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %18, i64 0, i32 1
  %540 = load ptr, ptr %539, align 8, !tbaa !16
  %541 = icmp eq ptr %540, null
  br i1 %541, label %543, label %542

542:                                              ; preds = %538
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %540) #24
  br label %543

543:                                              ; preds = %538, %542
  %544 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 1
  %545 = load ptr, ptr %544, align 8, !tbaa !16
  %546 = icmp eq ptr %545, null
  br i1 %546, label %548, label %547

547:                                              ; preds = %543
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %545)
  br label %548

548:                                              ; preds = %543, %547
  %549 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 2
  %550 = load ptr, ptr %549, align 8, !tbaa !16
  %551 = icmp eq ptr %550, null
  br i1 %551, label %553, label %552

552:                                              ; preds = %548
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %550)
  br label %553

553:                                              ; preds = %548, %552
  %554 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 3
  %555 = load ptr, ptr %554, align 8, !tbaa !16
  %556 = icmp eq ptr %555, null
  br i1 %556, label %558, label %557

557:                                              ; preds = %553
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %555)
  br label %558

558:                                              ; preds = %553, %557
  %559 = getelementptr inbounds %struct.tree_var_decl, ptr %18, i64 0, i32 1
  %560 = load ptr, ptr %559, align 8, !tbaa !16
  %561 = icmp eq ptr %560, null
  br i1 %561, label %1476, label %562

562:                                              ; preds = %558
  tail call void @gt_pch_nx_var_ann_d(ptr noundef nonnull %560) #24
  br label %1476

563:                                              ; preds = %22
  %564 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %565 = load ptr, ptr %564, align 8, !tbaa !16
  %566 = icmp eq ptr %565, null
  br i1 %566, label %568, label %567

567:                                              ; preds = %563
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %565)
  br label %568

568:                                              ; preds = %563, %567
  %569 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %570 = load ptr, ptr %569, align 8, !tbaa !16
  %571 = icmp eq ptr %570, null
  br i1 %571, label %573, label %572

572:                                              ; preds = %568
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %570)
  br label %573

573:                                              ; preds = %568, %572
  %574 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 3
  %575 = load ptr, ptr %574, align 8, !tbaa !16
  %576 = icmp eq ptr %575, null
  br i1 %576, label %578, label %577

577:                                              ; preds = %573
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %575)
  br label %578

578:                                              ; preds = %573, %577
  %579 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 4
  %580 = load ptr, ptr %579, align 8, !tbaa !16
  %581 = icmp eq ptr %580, null
  br i1 %581, label %583, label %582

582:                                              ; preds = %578
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %580)
  br label %583

583:                                              ; preds = %578, %582
  %584 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 1
  %585 = load ptr, ptr %584, align 8, !tbaa !16
  %586 = icmp eq ptr %585, null
  br i1 %586, label %588, label %587

587:                                              ; preds = %583
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %585)
  br label %588

588:                                              ; preds = %583, %587
  %589 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 4
  %590 = load ptr, ptr %589, align 8, !tbaa !16
  %591 = icmp eq ptr %590, null
  br i1 %591, label %593, label %592

592:                                              ; preds = %588
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %590)
  br label %593

593:                                              ; preds = %588, %592
  %594 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 5
  %595 = load ptr, ptr %594, align 8, !tbaa !16
  %596 = icmp eq ptr %595, null
  br i1 %596, label %598, label %597

597:                                              ; preds = %593
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %595)
  br label %598

598:                                              ; preds = %593, %597
  %599 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 6
  %600 = load ptr, ptr %599, align 8, !tbaa !16
  %601 = icmp eq ptr %600, null
  br i1 %601, label %603, label %602

602:                                              ; preds = %598
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %600)
  br label %603

603:                                              ; preds = %598, %602
  %604 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %605 = load ptr, ptr %604, align 8, !tbaa !16
  %606 = icmp eq ptr %605, null
  br i1 %606, label %608, label %607

607:                                              ; preds = %603
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %605)
  br label %608

608:                                              ; preds = %603, %607
  %609 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 8
  %610 = load ptr, ptr %609, align 8, !tbaa !16
  %611 = icmp eq ptr %610, null
  br i1 %611, label %614, label %612

612:                                              ; preds = %608
  %613 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %610, ptr noundef nonnull %610, ptr noundef nonnull @gt_pch_p_9lang_decl, i32 noundef 136) #24
  br label %614

614:                                              ; preds = %608, %612
  %615 = getelementptr inbounds %struct.tree_field_decl, ptr %18, i64 0, i32 1
  %616 = load ptr, ptr %615, align 8, !tbaa !16
  %617 = icmp eq ptr %616, null
  br i1 %617, label %619, label %618

618:                                              ; preds = %614
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %616)
  br label %619

619:                                              ; preds = %614, %618
  %620 = getelementptr inbounds %struct.tree_field_decl, ptr %18, i64 0, i32 2
  %621 = load ptr, ptr %620, align 8, !tbaa !16
  %622 = icmp eq ptr %621, null
  br i1 %622, label %624, label %623

623:                                              ; preds = %619
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %621)
  br label %624

624:                                              ; preds = %619, %623
  %625 = getelementptr inbounds %struct.tree_field_decl, ptr %18, i64 0, i32 3
  %626 = load ptr, ptr %625, align 8, !tbaa !16
  %627 = icmp eq ptr %626, null
  br i1 %627, label %629, label %628

628:                                              ; preds = %624
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %626)
  br label %629

629:                                              ; preds = %624, %628
  %630 = getelementptr inbounds %struct.tree_field_decl, ptr %18, i64 0, i32 4
  %631 = load ptr, ptr %630, align 8, !tbaa !16
  %632 = icmp eq ptr %631, null
  br i1 %632, label %634, label %633

633:                                              ; preds = %629
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %631)
  br label %634

634:                                              ; preds = %629, %633
  %635 = getelementptr inbounds %struct.tree_field_decl, ptr %18, i64 0, i32 5
  %636 = load ptr, ptr %635, align 8, !tbaa !16
  %637 = icmp eq ptr %636, null
  br i1 %637, label %1476, label %638

638:                                              ; preds = %634
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %636)
  br label %1476

639:                                              ; preds = %22
  %640 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %641 = load ptr, ptr %640, align 8, !tbaa !16
  %642 = icmp eq ptr %641, null
  br i1 %642, label %644, label %643

643:                                              ; preds = %639
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %641)
  br label %644

644:                                              ; preds = %639, %643
  %645 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %646 = load ptr, ptr %645, align 8, !tbaa !16
  %647 = icmp eq ptr %646, null
  br i1 %647, label %649, label %648

648:                                              ; preds = %644
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %646)
  br label %649

649:                                              ; preds = %644, %648
  %650 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 3
  %651 = load ptr, ptr %650, align 8, !tbaa !16
  %652 = icmp eq ptr %651, null
  br i1 %652, label %654, label %653

653:                                              ; preds = %649
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %651)
  br label %654

654:                                              ; preds = %649, %653
  %655 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 4
  %656 = load ptr, ptr %655, align 8, !tbaa !16
  %657 = icmp eq ptr %656, null
  br i1 %657, label %659, label %658

658:                                              ; preds = %654
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %656)
  br label %659

659:                                              ; preds = %654, %658
  %660 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 1
  %661 = load ptr, ptr %660, align 8, !tbaa !16
  %662 = icmp eq ptr %661, null
  br i1 %662, label %664, label %663

663:                                              ; preds = %659
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %661)
  br label %664

664:                                              ; preds = %659, %663
  %665 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 4
  %666 = load ptr, ptr %665, align 8, !tbaa !16
  %667 = icmp eq ptr %666, null
  br i1 %667, label %669, label %668

668:                                              ; preds = %664
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %666)
  br label %669

669:                                              ; preds = %664, %668
  %670 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 5
  %671 = load ptr, ptr %670, align 8, !tbaa !16
  %672 = icmp eq ptr %671, null
  br i1 %672, label %674, label %673

673:                                              ; preds = %669
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %671)
  br label %674

674:                                              ; preds = %669, %673
  %675 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 6
  %676 = load ptr, ptr %675, align 8, !tbaa !16
  %677 = icmp eq ptr %676, null
  br i1 %677, label %679, label %678

678:                                              ; preds = %674
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %676)
  br label %679

679:                                              ; preds = %674, %678
  %680 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %681 = load ptr, ptr %680, align 8, !tbaa !16
  %682 = icmp eq ptr %681, null
  br i1 %682, label %684, label %683

683:                                              ; preds = %679
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %681)
  br label %684

684:                                              ; preds = %679, %683
  %685 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 8
  %686 = load ptr, ptr %685, align 8, !tbaa !16
  %687 = icmp eq ptr %686, null
  br i1 %687, label %690, label %688

688:                                              ; preds = %684
  %689 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %686, ptr noundef nonnull %686, ptr noundef nonnull @gt_pch_p_9lang_decl, i32 noundef 136) #24
  br label %690

690:                                              ; preds = %684, %688
  %691 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %18, i64 0, i32 1
  %692 = load ptr, ptr %691, align 8, !tbaa !16
  %693 = icmp eq ptr %692, null
  br i1 %693, label %1476, label %694

694:                                              ; preds = %690
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %692) #24
  br label %1476

695:                                              ; preds = %22
  %696 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %697 = load ptr, ptr %696, align 8, !tbaa !16
  %698 = icmp eq ptr %697, null
  br i1 %698, label %700, label %699

699:                                              ; preds = %695
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %697)
  br label %700

700:                                              ; preds = %695, %699
  %701 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %702 = load ptr, ptr %701, align 8, !tbaa !16
  %703 = icmp eq ptr %702, null
  br i1 %703, label %705, label %704

704:                                              ; preds = %700
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %702)
  br label %705

705:                                              ; preds = %700, %704
  %706 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 3
  %707 = load ptr, ptr %706, align 8, !tbaa !16
  %708 = icmp eq ptr %707, null
  br i1 %708, label %710, label %709

709:                                              ; preds = %705
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %707)
  br label %710

710:                                              ; preds = %705, %709
  %711 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 4
  %712 = load ptr, ptr %711, align 8, !tbaa !16
  %713 = icmp eq ptr %712, null
  br i1 %713, label %715, label %714

714:                                              ; preds = %710
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %712)
  br label %715

715:                                              ; preds = %710, %714
  %716 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 1
  %717 = load ptr, ptr %716, align 8, !tbaa !16
  %718 = icmp eq ptr %717, null
  br i1 %718, label %720, label %719

719:                                              ; preds = %715
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %717)
  br label %720

720:                                              ; preds = %715, %719
  %721 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 4
  %722 = load ptr, ptr %721, align 8, !tbaa !16
  %723 = icmp eq ptr %722, null
  br i1 %723, label %725, label %724

724:                                              ; preds = %720
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %722)
  br label %725

725:                                              ; preds = %720, %724
  %726 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 5
  %727 = load ptr, ptr %726, align 8, !tbaa !16
  %728 = icmp eq ptr %727, null
  br i1 %728, label %730, label %729

729:                                              ; preds = %725
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %727)
  br label %730

730:                                              ; preds = %725, %729
  %731 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 6
  %732 = load ptr, ptr %731, align 8, !tbaa !16
  %733 = icmp eq ptr %732, null
  br i1 %733, label %735, label %734

734:                                              ; preds = %730
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %732)
  br label %735

735:                                              ; preds = %730, %734
  %736 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %737 = load ptr, ptr %736, align 8, !tbaa !16
  %738 = icmp eq ptr %737, null
  br i1 %738, label %740, label %739

739:                                              ; preds = %735
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %737)
  br label %740

740:                                              ; preds = %735, %739
  %741 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 8
  %742 = load ptr, ptr %741, align 8, !tbaa !16
  %743 = icmp eq ptr %742, null
  br i1 %743, label %746, label %744

744:                                              ; preds = %740
  %745 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %742, ptr noundef nonnull %742, ptr noundef nonnull @gt_pch_p_9lang_decl, i32 noundef 136) #24
  br label %746

746:                                              ; preds = %740, %744
  %747 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %18, i64 0, i32 1
  %748 = load ptr, ptr %747, align 8, !tbaa !16
  %749 = icmp eq ptr %748, null
  br i1 %749, label %751, label %750

750:                                              ; preds = %746
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %748) #24
  br label %751

751:                                              ; preds = %746, %750
  %752 = getelementptr inbounds %struct.tree_result_decl, ptr %18, i64 0, i32 1
  %753 = load ptr, ptr %752, align 8, !tbaa !16
  %754 = icmp eq ptr %753, null
  br i1 %754, label %1476, label %755

755:                                              ; preds = %751
  tail call void @gt_pch_nx_var_ann_d(ptr noundef nonnull %753) #24
  br label %1476

756:                                              ; preds = %22
  %757 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %758 = load ptr, ptr %757, align 8, !tbaa !16
  %759 = icmp eq ptr %758, null
  br i1 %759, label %761, label %760

760:                                              ; preds = %756
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %758)
  br label %761

761:                                              ; preds = %756, %760
  %762 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %763 = load ptr, ptr %762, align 8, !tbaa !16
  %764 = icmp eq ptr %763, null
  br i1 %764, label %766, label %765

765:                                              ; preds = %761
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %763)
  br label %766

766:                                              ; preds = %761, %765
  %767 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 3
  %768 = load ptr, ptr %767, align 8, !tbaa !16
  %769 = icmp eq ptr %768, null
  br i1 %769, label %771, label %770

770:                                              ; preds = %766
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %768)
  br label %771

771:                                              ; preds = %766, %770
  %772 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 4
  %773 = load ptr, ptr %772, align 8, !tbaa !16
  %774 = icmp eq ptr %773, null
  br i1 %774, label %776, label %775

775:                                              ; preds = %771
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %773)
  br label %776

776:                                              ; preds = %771, %775
  %777 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 1
  %778 = load ptr, ptr %777, align 8, !tbaa !16
  %779 = icmp eq ptr %778, null
  br i1 %779, label %781, label %780

780:                                              ; preds = %776
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %778)
  br label %781

781:                                              ; preds = %776, %780
  %782 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 4
  %783 = load ptr, ptr %782, align 8, !tbaa !16
  %784 = icmp eq ptr %783, null
  br i1 %784, label %786, label %785

785:                                              ; preds = %781
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %783)
  br label %786

786:                                              ; preds = %781, %785
  %787 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 5
  %788 = load ptr, ptr %787, align 8, !tbaa !16
  %789 = icmp eq ptr %788, null
  br i1 %789, label %791, label %790

790:                                              ; preds = %786
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %788)
  br label %791

791:                                              ; preds = %786, %790
  %792 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 6
  %793 = load ptr, ptr %792, align 8, !tbaa !16
  %794 = icmp eq ptr %793, null
  br i1 %794, label %796, label %795

795:                                              ; preds = %791
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %793)
  br label %796

796:                                              ; preds = %791, %795
  %797 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %798 = load ptr, ptr %797, align 8, !tbaa !16
  %799 = icmp eq ptr %798, null
  br i1 %799, label %801, label %800

800:                                              ; preds = %796
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %798)
  br label %801

801:                                              ; preds = %796, %800
  %802 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 8
  %803 = load ptr, ptr %802, align 8, !tbaa !16
  %804 = icmp eq ptr %803, null
  br i1 %804, label %807, label %805

805:                                              ; preds = %801
  %806 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %803, ptr noundef nonnull %803, ptr noundef nonnull @gt_pch_p_9lang_decl, i32 noundef 136) #24
  br label %807

807:                                              ; preds = %801, %805
  %808 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %18, i64 0, i32 1
  %809 = load ptr, ptr %808, align 8, !tbaa !16
  %810 = icmp eq ptr %809, null
  br i1 %810, label %1476, label %811

811:                                              ; preds = %807
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %809) #24
  br label %1476

812:                                              ; preds = %22
  %813 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %814 = load ptr, ptr %813, align 8, !tbaa !16
  %815 = icmp eq ptr %814, null
  br i1 %815, label %817, label %816

816:                                              ; preds = %812
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %814)
  br label %817

817:                                              ; preds = %812, %816
  %818 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %819 = load ptr, ptr %818, align 8, !tbaa !16
  %820 = icmp eq ptr %819, null
  br i1 %820, label %822, label %821

821:                                              ; preds = %817
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %819)
  br label %822

822:                                              ; preds = %817, %821
  %823 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 3
  %824 = load ptr, ptr %823, align 8, !tbaa !16
  %825 = icmp eq ptr %824, null
  br i1 %825, label %827, label %826

826:                                              ; preds = %822
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %824)
  br label %827

827:                                              ; preds = %822, %826
  %828 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 4
  %829 = load ptr, ptr %828, align 8, !tbaa !16
  %830 = icmp eq ptr %829, null
  br i1 %830, label %832, label %831

831:                                              ; preds = %827
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %829)
  br label %832

832:                                              ; preds = %827, %831
  %833 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 1
  %834 = load ptr, ptr %833, align 8, !tbaa !16
  %835 = icmp eq ptr %834, null
  br i1 %835, label %837, label %836

836:                                              ; preds = %832
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %834)
  br label %837

837:                                              ; preds = %832, %836
  %838 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 4
  %839 = load ptr, ptr %838, align 8, !tbaa !16
  %840 = icmp eq ptr %839, null
  br i1 %840, label %842, label %841

841:                                              ; preds = %837
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %839)
  br label %842

842:                                              ; preds = %837, %841
  %843 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 5
  %844 = load ptr, ptr %843, align 8, !tbaa !16
  %845 = icmp eq ptr %844, null
  br i1 %845, label %847, label %846

846:                                              ; preds = %842
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %844)
  br label %847

847:                                              ; preds = %842, %846
  %848 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 6
  %849 = load ptr, ptr %848, align 8, !tbaa !16
  %850 = icmp eq ptr %849, null
  br i1 %850, label %852, label %851

851:                                              ; preds = %847
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %849)
  br label %852

852:                                              ; preds = %847, %851
  %853 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %854 = load ptr, ptr %853, align 8, !tbaa !16
  %855 = icmp eq ptr %854, null
  br i1 %855, label %857, label %856

856:                                              ; preds = %852
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %854)
  br label %857

857:                                              ; preds = %852, %856
  %858 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 8
  %859 = load ptr, ptr %858, align 8, !tbaa !16
  %860 = icmp eq ptr %859, null
  br i1 %860, label %863, label %861

861:                                              ; preds = %857
  %862 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %859, ptr noundef nonnull %859, ptr noundef nonnull @gt_pch_p_9lang_decl, i32 noundef 136) #24
  br label %863

863:                                              ; preds = %857, %861
  %864 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %18, i64 0, i32 1
  %865 = load ptr, ptr %864, align 8, !tbaa !16
  %866 = icmp eq ptr %865, null
  br i1 %866, label %868, label %867

867:                                              ; preds = %863
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %865) #24
  br label %868

868:                                              ; preds = %863, %867
  %869 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 1
  %870 = load ptr, ptr %869, align 8, !tbaa !16
  %871 = icmp eq ptr %870, null
  br i1 %871, label %873, label %872

872:                                              ; preds = %868
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %870)
  br label %873

873:                                              ; preds = %868, %872
  %874 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 2
  %875 = load ptr, ptr %874, align 8, !tbaa !16
  %876 = icmp eq ptr %875, null
  br i1 %876, label %878, label %877

877:                                              ; preds = %873
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %875)
  br label %878

878:                                              ; preds = %873, %877
  %879 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 3
  %880 = load ptr, ptr %879, align 8, !tbaa !16
  %881 = icmp eq ptr %880, null
  br i1 %881, label %883, label %882

882:                                              ; preds = %878
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %880)
  br label %883

883:                                              ; preds = %878, %882
  %884 = getelementptr inbounds %struct.tree_decl_non_common, ptr %18, i64 0, i32 1
  %885 = load ptr, ptr %884, align 8, !tbaa !16
  %886 = icmp eq ptr %885, null
  br i1 %886, label %888, label %887

887:                                              ; preds = %883
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %885)
  br label %888

888:                                              ; preds = %883, %887
  %889 = getelementptr inbounds %struct.tree_decl_non_common, ptr %18, i64 0, i32 2
  %890 = load ptr, ptr %889, align 8, !tbaa !16
  %891 = icmp eq ptr %890, null
  br i1 %891, label %893, label %892

892:                                              ; preds = %888
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %890)
  br label %893

893:                                              ; preds = %888, %892
  %894 = getelementptr inbounds %struct.tree_decl_non_common, ptr %18, i64 0, i32 3
  %895 = load ptr, ptr %894, align 8, !tbaa !16
  %896 = icmp eq ptr %895, null
  br i1 %896, label %898, label %897

897:                                              ; preds = %893
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %895)
  br label %898

898:                                              ; preds = %893, %897
  %899 = getelementptr inbounds %struct.tree_decl_non_common, ptr %18, i64 0, i32 4
  %900 = load ptr, ptr %899, align 8, !tbaa !16
  %901 = icmp eq ptr %900, null
  br i1 %901, label %1476, label %902

902:                                              ; preds = %898
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %900)
  br label %1476

903:                                              ; preds = %22
  %904 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %905 = load ptr, ptr %904, align 8, !tbaa !16
  %906 = icmp eq ptr %905, null
  br i1 %906, label %908, label %907

907:                                              ; preds = %903
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %905)
  br label %908

908:                                              ; preds = %903, %907
  %909 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %910 = load ptr, ptr %909, align 8, !tbaa !16
  %911 = icmp eq ptr %910, null
  br i1 %911, label %913, label %912

912:                                              ; preds = %908
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %910)
  br label %913

913:                                              ; preds = %908, %912
  %914 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 3
  %915 = load ptr, ptr %914, align 8, !tbaa !16
  %916 = icmp eq ptr %915, null
  br i1 %916, label %918, label %917

917:                                              ; preds = %913
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %915)
  br label %918

918:                                              ; preds = %913, %917
  %919 = getelementptr inbounds %struct.tree_decl_minimal, ptr %18, i64 0, i32 4
  %920 = load ptr, ptr %919, align 8, !tbaa !16
  %921 = icmp eq ptr %920, null
  br i1 %921, label %923, label %922

922:                                              ; preds = %918
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %920)
  br label %923

923:                                              ; preds = %918, %922
  %924 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 1
  %925 = load ptr, ptr %924, align 8, !tbaa !16
  %926 = icmp eq ptr %925, null
  br i1 %926, label %928, label %927

927:                                              ; preds = %923
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %925)
  br label %928

928:                                              ; preds = %923, %927
  %929 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 4
  %930 = load ptr, ptr %929, align 8, !tbaa !16
  %931 = icmp eq ptr %930, null
  br i1 %931, label %933, label %932

932:                                              ; preds = %928
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %930)
  br label %933

933:                                              ; preds = %928, %932
  %934 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 5
  %935 = load ptr, ptr %934, align 8, !tbaa !16
  %936 = icmp eq ptr %935, null
  br i1 %936, label %938, label %937

937:                                              ; preds = %933
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %935)
  br label %938

938:                                              ; preds = %933, %937
  %939 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 6
  %940 = load ptr, ptr %939, align 8, !tbaa !16
  %941 = icmp eq ptr %940, null
  br i1 %941, label %943, label %942

942:                                              ; preds = %938
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %940)
  br label %943

943:                                              ; preds = %938, %942
  %944 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 7
  %945 = load ptr, ptr %944, align 8, !tbaa !16
  %946 = icmp eq ptr %945, null
  br i1 %946, label %948, label %947

947:                                              ; preds = %943
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %945)
  br label %948

948:                                              ; preds = %943, %947
  %949 = getelementptr inbounds %struct.tree_decl_common, ptr %18, i64 0, i32 8
  %950 = load ptr, ptr %949, align 8, !tbaa !16
  %951 = icmp eq ptr %950, null
  br i1 %951, label %954, label %952

952:                                              ; preds = %948
  %953 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %950, ptr noundef nonnull %950, ptr noundef nonnull @gt_pch_p_9lang_decl, i32 noundef 136) #24
  br label %954

954:                                              ; preds = %948, %952
  %955 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %18, i64 0, i32 1
  %956 = load ptr, ptr %955, align 8, !tbaa !16
  %957 = icmp eq ptr %956, null
  br i1 %957, label %959, label %958

958:                                              ; preds = %954
  tail call void @gt_pch_nx_rtx_def(ptr noundef nonnull %956) #24
  br label %959

959:                                              ; preds = %954, %958
  %960 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 1
  %961 = load ptr, ptr %960, align 8, !tbaa !16
  %962 = icmp eq ptr %961, null
  br i1 %962, label %964, label %963

963:                                              ; preds = %959
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %961)
  br label %964

964:                                              ; preds = %959, %963
  %965 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 2
  %966 = load ptr, ptr %965, align 8, !tbaa !16
  %967 = icmp eq ptr %966, null
  br i1 %967, label %969, label %968

968:                                              ; preds = %964
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %966)
  br label %969

969:                                              ; preds = %964, %968
  %970 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %18, i64 0, i32 3
  %971 = load ptr, ptr %970, align 8, !tbaa !16
  %972 = icmp eq ptr %971, null
  br i1 %972, label %974, label %973

973:                                              ; preds = %969
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %971)
  br label %974

974:                                              ; preds = %969, %973
  %975 = getelementptr inbounds %struct.tree_decl_non_common, ptr %18, i64 0, i32 1
  %976 = load ptr, ptr %975, align 8, !tbaa !16
  %977 = icmp eq ptr %976, null
  br i1 %977, label %979, label %978

978:                                              ; preds = %974
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %976)
  br label %979

979:                                              ; preds = %974, %978
  %980 = getelementptr inbounds %struct.tree_decl_non_common, ptr %18, i64 0, i32 2
  %981 = load ptr, ptr %980, align 8, !tbaa !16
  %982 = icmp eq ptr %981, null
  br i1 %982, label %984, label %983

983:                                              ; preds = %979
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %981)
  br label %984

984:                                              ; preds = %979, %983
  %985 = getelementptr inbounds %struct.tree_decl_non_common, ptr %18, i64 0, i32 3
  %986 = load ptr, ptr %985, align 8, !tbaa !16
  %987 = icmp eq ptr %986, null
  br i1 %987, label %989, label %988

988:                                              ; preds = %984
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %986)
  br label %989

989:                                              ; preds = %984, %988
  %990 = getelementptr inbounds %struct.tree_decl_non_common, ptr %18, i64 0, i32 4
  %991 = load ptr, ptr %990, align 8, !tbaa !16
  %992 = icmp eq ptr %991, null
  br i1 %992, label %994, label %993

993:                                              ; preds = %989
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %991)
  br label %994

994:                                              ; preds = %989, %993
  %995 = getelementptr inbounds %struct.tree_function_decl, ptr %18, i64 0, i32 1
  %996 = load ptr, ptr %995, align 8, !tbaa !16
  %997 = icmp eq ptr %996, null
  br i1 %997, label %999, label %998

998:                                              ; preds = %994
  tail call void @gt_pch_nx_function(ptr noundef nonnull %996) #24
  br label %999

999:                                              ; preds = %994, %998
  %1000 = getelementptr inbounds %struct.tree_function_decl, ptr %18, i64 0, i32 2
  %1001 = load ptr, ptr %1000, align 8, !tbaa !16
  %1002 = icmp eq ptr %1001, null
  br i1 %1002, label %1004, label %1003

1003:                                             ; preds = %999
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1001)
  br label %1004

1004:                                             ; preds = %999, %1003
  %1005 = getelementptr inbounds %struct.tree_function_decl, ptr %18, i64 0, i32 3
  %1006 = load ptr, ptr %1005, align 8, !tbaa !16
  %1007 = icmp eq ptr %1006, null
  br i1 %1007, label %1009, label %1008

1008:                                             ; preds = %1004
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1006)
  br label %1009

1009:                                             ; preds = %1004, %1008
  %1010 = getelementptr inbounds %struct.tree_function_decl, ptr %18, i64 0, i32 4
  %1011 = load ptr, ptr %1010, align 8, !tbaa !16
  %1012 = icmp eq ptr %1011, null
  br i1 %1012, label %1476, label %1013

1013:                                             ; preds = %1009
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1011)
  br label %1476

1014:                                             ; preds = %22
  %1015 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %1016 = load ptr, ptr %1015, align 8, !tbaa !16
  %1017 = icmp eq ptr %1016, null
  br i1 %1017, label %1019, label %1018

1018:                                             ; preds = %1014
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1016)
  br label %1019

1019:                                             ; preds = %1014, %1018
  %1020 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %1021 = load ptr, ptr %1020, align 8, !tbaa !16
  %1022 = icmp eq ptr %1021, null
  br i1 %1022, label %1024, label %1023

1023:                                             ; preds = %1019
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1021)
  br label %1024

1024:                                             ; preds = %1019, %1023
  %1025 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 1
  %1026 = load ptr, ptr %1025, align 8, !tbaa !16
  %1027 = icmp eq ptr %1026, null
  br i1 %1027, label %1029, label %1028

1028:                                             ; preds = %1024
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1026)
  br label %1029

1029:                                             ; preds = %1024, %1028
  %1030 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 2
  %1031 = load ptr, ptr %1030, align 8, !tbaa !16
  %1032 = icmp eq ptr %1031, null
  br i1 %1032, label %1034, label %1033

1033:                                             ; preds = %1029
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1031)
  br label %1034

1034:                                             ; preds = %1029, %1033
  %1035 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 3
  %1036 = load ptr, ptr %1035, align 8, !tbaa !16
  %1037 = icmp eq ptr %1036, null
  br i1 %1037, label %1039, label %1038

1038:                                             ; preds = %1034
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1036)
  br label %1039

1039:                                             ; preds = %1034, %1038
  %1040 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 4
  %1041 = load ptr, ptr %1040, align 8, !tbaa !16
  %1042 = icmp eq ptr %1041, null
  br i1 %1042, label %1044, label %1043

1043:                                             ; preds = %1039
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1041)
  br label %1044

1044:                                             ; preds = %1039, %1043
  %1045 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 9
  %1046 = load ptr, ptr %1045, align 8, !tbaa !16
  %1047 = icmp eq ptr %1046, null
  br i1 %1047, label %1049, label %1048

1048:                                             ; preds = %1044
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1046)
  br label %1049

1049:                                             ; preds = %1044, %1048
  %1050 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 10
  %1051 = load ptr, ptr %1050, align 8, !tbaa !16
  %1052 = icmp eq ptr %1051, null
  br i1 %1052, label %1054, label %1053

1053:                                             ; preds = %1049
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1051)
  br label %1054

1054:                                             ; preds = %1053, %1049
  %1055 = load ptr, ptr @debug_hooks, align 8, !tbaa !5
  %1056 = icmp eq ptr %1055, @sdb_debug_hooks
  %1057 = icmp eq ptr %1055, @dwarf2_debug_hooks
  %1058 = select i1 %1057, i32 2, i32 0
  %1059 = select i1 %1056, i32 1, i32 %1058
  switch i32 %1059, label %1068 [
    i32 2, label %1063
    i32 1, label %1060
  ]

1060:                                             ; preds = %1054
  %1061 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 11
  %1062 = load ptr, ptr %1061, align 8, !tbaa !16
  tail call void @gt_pch_n_S(ptr noundef %1062) #24
  br label %1068

1063:                                             ; preds = %1054
  %1064 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 11
  %1065 = load ptr, ptr %1064, align 8, !tbaa !16
  %1066 = icmp eq ptr %1065, null
  br i1 %1066, label %1068, label %1067

1067:                                             ; preds = %1063
  tail call void @gt_pch_nx_die_struct(ptr noundef nonnull %1065) #24
  br label %1068

1068:                                             ; preds = %1060, %1067, %1063, %1054
  %1069 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 12
  %1070 = load ptr, ptr %1069, align 8, !tbaa !16
  %1071 = icmp eq ptr %1070, null
  br i1 %1071, label %1073, label %1072

1072:                                             ; preds = %1068
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1070)
  br label %1073

1073:                                             ; preds = %1068, %1072
  %1074 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 13
  %1075 = load ptr, ptr %1074, align 8, !tbaa !16
  %1076 = icmp eq ptr %1075, null
  br i1 %1076, label %1078, label %1077

1077:                                             ; preds = %1073
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1075)
  br label %1078

1078:                                             ; preds = %1073, %1077
  %1079 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 14
  %1080 = load ptr, ptr %1079, align 8, !tbaa !16
  %1081 = icmp eq ptr %1080, null
  br i1 %1081, label %1083, label %1082

1082:                                             ; preds = %1078
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1080)
  br label %1083

1083:                                             ; preds = %1078, %1082
  %1084 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 15
  %1085 = load ptr, ptr %1084, align 8, !tbaa !16
  %1086 = icmp eq ptr %1085, null
  br i1 %1086, label %1088, label %1087

1087:                                             ; preds = %1083
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1085)
  br label %1088

1088:                                             ; preds = %1083, %1087
  %1089 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 16
  %1090 = load ptr, ptr %1089, align 8, !tbaa !16
  %1091 = icmp eq ptr %1090, null
  br i1 %1091, label %1093, label %1092

1092:                                             ; preds = %1088
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1090)
  br label %1093

1093:                                             ; preds = %1088, %1092
  %1094 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 17
  %1095 = load ptr, ptr %1094, align 8, !tbaa !16
  %1096 = icmp eq ptr %1095, null
  br i1 %1096, label %1098, label %1097

1097:                                             ; preds = %1093
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1095)
  br label %1098

1098:                                             ; preds = %1093, %1097
  %1099 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 18
  %1100 = load ptr, ptr %1099, align 8, !tbaa !16
  %1101 = icmp eq ptr %1100, null
  br i1 %1101, label %1103, label %1102

1102:                                             ; preds = %1098
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1100)
  br label %1103

1103:                                             ; preds = %1098, %1102
  %1104 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 19
  %1105 = load ptr, ptr %1104, align 8, !tbaa !16
  %1106 = icmp eq ptr %1105, null
  br i1 %1106, label %1108, label %1107

1107:                                             ; preds = %1103
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1105)
  br label %1108

1108:                                             ; preds = %1103, %1107
  %1109 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 20
  %1110 = load ptr, ptr %1109, align 8, !tbaa !16
  %1111 = icmp eq ptr %1110, null
  br i1 %1111, label %1476, label %1112

1112:                                             ; preds = %1108
  tail call void @gt_pch_nx_lang_type(ptr noundef nonnull %1110)
  br label %1476

1113:                                             ; preds = %22
  %1114 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %1115 = load ptr, ptr %1114, align 8, !tbaa !16
  %1116 = icmp eq ptr %1115, null
  br i1 %1116, label %1118, label %1117

1117:                                             ; preds = %1113
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1115)
  br label %1118

1118:                                             ; preds = %1113, %1117
  %1119 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %1120 = load ptr, ptr %1119, align 8, !tbaa !16
  %1121 = icmp eq ptr %1120, null
  br i1 %1121, label %1123, label %1122

1122:                                             ; preds = %1118
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1120)
  br label %1123

1123:                                             ; preds = %1118, %1122
  %1124 = getelementptr inbounds %struct.tree_list, ptr %18, i64 0, i32 1
  %1125 = load ptr, ptr %1124, align 8, !tbaa !16
  %1126 = icmp eq ptr %1125, null
  br i1 %1126, label %1128, label %1127

1127:                                             ; preds = %1123
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1125)
  br label %1128

1128:                                             ; preds = %1123, %1127
  %1129 = getelementptr inbounds %struct.tree_list, ptr %18, i64 0, i32 2
  %1130 = load ptr, ptr %1129, align 8, !tbaa !16
  %1131 = icmp eq ptr %1130, null
  br i1 %1131, label %1476, label %1132

1132:                                             ; preds = %1128
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1130)
  br label %1476

1133:                                             ; preds = %22
  %1134 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %1135 = load ptr, ptr %1134, align 8, !tbaa !16
  %1136 = icmp eq ptr %1135, null
  br i1 %1136, label %1138, label %1137

1137:                                             ; preds = %1133
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1135)
  br label %1138

1138:                                             ; preds = %1133, %1137
  %1139 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %1140 = load ptr, ptr %1139, align 8, !tbaa !16
  %1141 = icmp eq ptr %1140, null
  br i1 %1141, label %1143, label %1142

1142:                                             ; preds = %1138
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1140)
  br label %1143

1143:                                             ; preds = %1142, %1138
  %1144 = getelementptr inbounds %struct.tree_vec, ptr %18, i64 0, i32 1
  %1145 = load i32, ptr %1144, align 8, !tbaa !16
  %1146 = sext i32 %1145 to i64
  %1147 = icmp eq i32 %1145, 0
  br i1 %1147, label %1476, label %1148

1148:                                             ; preds = %1143, %1154
  %1149 = phi i64 [ %1155, %1154 ], [ 0, %1143 ]
  %1150 = getelementptr inbounds %struct.tree_vec, ptr %18, i64 0, i32 2, i64 %1149
  %1151 = load ptr, ptr %1150, align 8, !tbaa !16
  %1152 = icmp eq ptr %1151, null
  br i1 %1152, label %1154, label %1153

1153:                                             ; preds = %1148
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1151)
  br label %1154

1154:                                             ; preds = %1148, %1153
  %1155 = add i64 %1149, 1
  %1156 = icmp eq i64 %1155, %1146
  br i1 %1156, label %1476, label %1148, !llvm.loop !281

1157:                                             ; preds = %22
  %1158 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %1159 = load ptr, ptr %1158, align 8, !tbaa !16
  %1160 = icmp eq ptr %1159, null
  br i1 %1160, label %1162, label %1161

1161:                                             ; preds = %1157
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1159)
  br label %1162

1162:                                             ; preds = %1157, %1161
  %1163 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %1164 = load ptr, ptr %1163, align 8, !tbaa !16
  %1165 = icmp eq ptr %1164, null
  br i1 %1165, label %1167, label %1166

1166:                                             ; preds = %1162
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1164)
  br label %1167

1167:                                             ; preds = %1162, %1166
  %1168 = getelementptr inbounds %struct.tree_exp, ptr %18, i64 0, i32 2
  %1169 = load ptr, ptr %1168, align 8, !tbaa !16
  %1170 = icmp eq ptr %1169, null
  br i1 %1170, label %1172, label %1171

1171:                                             ; preds = %1167
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1169)
  br label %1172

1172:                                             ; preds = %1167, %1171
  %1173 = load i64, ptr %18, align 8
  %1174 = and i64 %1173, 65535
  %1175 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %1174
  %1176 = load i32, ptr %1175, align 4, !tbaa !16
  %1177 = icmp eq i32 %1176, 9
  br i1 %1177, label %1178, label %1183

1178:                                             ; preds = %1172
  %1179 = getelementptr inbounds %struct.tree_exp, ptr %18, i64 0, i32 3
  %1180 = load ptr, ptr %1179, align 8, !tbaa !16
  %1181 = getelementptr inbounds %struct.tree_int_cst, ptr %1180, i64 0, i32 1
  %1182 = load i64, ptr %1181, align 8, !tbaa !16
  br label %1187

1183:                                             ; preds = %1172
  %1184 = getelementptr inbounds [0 x i8], ptr @tree_code_length, i64 0, i64 %1174
  %1185 = load i8, ptr %1184, align 1, !tbaa !16
  %1186 = zext i8 %1185 to i64
  br label %1187

1187:                                             ; preds = %1178, %1183
  %1188 = phi i64 [ %1182, %1178 ], [ %1186, %1183 ]
  %1189 = shl i64 %1188, 32
  %1190 = ashr exact i64 %1189, 32
  %1191 = icmp eq i64 %1189, 0
  br i1 %1191, label %1476, label %1192

1192:                                             ; preds = %1187, %1198
  %1193 = phi i64 [ %1199, %1198 ], [ 0, %1187 ]
  %1194 = getelementptr inbounds %struct.tree_exp, ptr %18, i64 0, i32 3, i64 %1193
  %1195 = load ptr, ptr %1194, align 8, !tbaa !16
  %1196 = icmp eq ptr %1195, null
  br i1 %1196, label %1198, label %1197

1197:                                             ; preds = %1192
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1195)
  br label %1198

1198:                                             ; preds = %1192, %1197
  %1199 = add i64 %1193, 1
  %1200 = icmp eq i64 %1199, %1190
  br i1 %1200, label %1476, label %1192, !llvm.loop !282

1201:                                             ; preds = %22
  %1202 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %1203 = load ptr, ptr %1202, align 8, !tbaa !16
  %1204 = icmp eq ptr %1203, null
  br i1 %1204, label %1206, label %1205

1205:                                             ; preds = %1201
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1203)
  br label %1206

1206:                                             ; preds = %1201, %1205
  %1207 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %1208 = load ptr, ptr %1207, align 8, !tbaa !16
  %1209 = icmp eq ptr %1208, null
  br i1 %1209, label %1211, label %1210

1210:                                             ; preds = %1206
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1208)
  br label %1211

1211:                                             ; preds = %1206, %1210
  %1212 = getelementptr inbounds %struct.tree_ssa_name, ptr %18, i64 0, i32 1
  %1213 = load ptr, ptr %1212, align 8, !tbaa !16
  %1214 = icmp eq ptr %1213, null
  br i1 %1214, label %1216, label %1215

1215:                                             ; preds = %1211
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1213)
  br label %1216

1216:                                             ; preds = %1211, %1215
  %1217 = getelementptr inbounds %struct.tree_ssa_name, ptr %18, i64 0, i32 2
  %1218 = load ptr, ptr %1217, align 8, !tbaa !16
  %1219 = icmp eq ptr %1218, null
  br i1 %1219, label %1221, label %1220

1220:                                             ; preds = %1216
  tail call void @gt_pch_nx_gimple_statement_d(ptr noundef nonnull %1218) #24
  br label %1221

1221:                                             ; preds = %1216, %1220
  %1222 = getelementptr inbounds %struct.tree_ssa_name, ptr %18, i64 0, i32 4
  %1223 = load ptr, ptr %1222, align 8, !tbaa !16
  %1224 = icmp eq ptr %1223, null
  br i1 %1224, label %1476, label %1225

1225:                                             ; preds = %1221
  tail call void @gt_pch_nx_ptr_info_def(ptr noundef nonnull %1223) #24
  br label %1476

1226:                                             ; preds = %22
  %1227 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %1228 = load ptr, ptr %1227, align 8, !tbaa !16
  %1229 = icmp eq ptr %1228, null
  br i1 %1229, label %1231, label %1230

1230:                                             ; preds = %1226
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1228)
  br label %1231

1231:                                             ; preds = %1226, %1230
  %1232 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %1233 = load ptr, ptr %1232, align 8, !tbaa !16
  %1234 = icmp eq ptr %1233, null
  br i1 %1234, label %1236, label %1235

1235:                                             ; preds = %1231
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1233)
  br label %1236

1236:                                             ; preds = %1231, %1235
  %1237 = getelementptr inbounds %struct.tree_block, ptr %18, i64 0, i32 3
  %1238 = load ptr, ptr %1237, align 8, !tbaa !16
  %1239 = icmp eq ptr %1238, null
  br i1 %1239, label %1241, label %1240

1240:                                             ; preds = %1236
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1238)
  br label %1241

1241:                                             ; preds = %1236, %1240
  %1242 = getelementptr inbounds %struct.tree_block, ptr %18, i64 0, i32 4
  %1243 = load ptr, ptr %1242, align 8, !tbaa !16
  %1244 = icmp eq ptr %1243, null
  br i1 %1244, label %1246, label %1245

1245:                                             ; preds = %1241
  tail call void @gt_pch_nx_VEC_tree_gc(ptr noundef nonnull %1243) #24
  br label %1246

1246:                                             ; preds = %1241, %1245
  %1247 = getelementptr inbounds %struct.tree_block, ptr %18, i64 0, i32 5
  %1248 = load ptr, ptr %1247, align 8, !tbaa !16
  %1249 = icmp eq ptr %1248, null
  br i1 %1249, label %1251, label %1250

1250:                                             ; preds = %1246
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1248)
  br label %1251

1251:                                             ; preds = %1246, %1250
  %1252 = getelementptr inbounds %struct.tree_block, ptr %18, i64 0, i32 6
  %1253 = load ptr, ptr %1252, align 8, !tbaa !16
  %1254 = icmp eq ptr %1253, null
  br i1 %1254, label %1256, label %1255

1255:                                             ; preds = %1251
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1253)
  br label %1256

1256:                                             ; preds = %1251, %1255
  %1257 = getelementptr inbounds %struct.tree_block, ptr %18, i64 0, i32 7
  %1258 = load ptr, ptr %1257, align 8, !tbaa !16
  %1259 = icmp eq ptr %1258, null
  br i1 %1259, label %1261, label %1260

1260:                                             ; preds = %1256
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1258)
  br label %1261

1261:                                             ; preds = %1256, %1260
  %1262 = getelementptr inbounds %struct.tree_block, ptr %18, i64 0, i32 8
  %1263 = load ptr, ptr %1262, align 8, !tbaa !16
  %1264 = icmp eq ptr %1263, null
  br i1 %1264, label %1266, label %1265

1265:                                             ; preds = %1261
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1263)
  br label %1266

1266:                                             ; preds = %1261, %1265
  %1267 = getelementptr inbounds %struct.tree_block, ptr %18, i64 0, i32 9
  %1268 = load ptr, ptr %1267, align 8, !tbaa !16
  %1269 = icmp eq ptr %1268, null
  br i1 %1269, label %1476, label %1270

1270:                                             ; preds = %1266
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1268)
  br label %1476

1271:                                             ; preds = %22
  %1272 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %1273 = load ptr, ptr %1272, align 8, !tbaa !16
  %1274 = icmp eq ptr %1273, null
  br i1 %1274, label %1276, label %1275

1275:                                             ; preds = %1271
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1273)
  br label %1276

1276:                                             ; preds = %1271, %1275
  %1277 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %1278 = load ptr, ptr %1277, align 8, !tbaa !16
  %1279 = icmp eq ptr %1278, null
  br i1 %1279, label %1281, label %1280

1280:                                             ; preds = %1276
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1278)
  br label %1281

1281:                                             ; preds = %1276, %1280
  %1282 = getelementptr inbounds %struct.tree_binfo, ptr %18, i64 0, i32 1
  %1283 = load ptr, ptr %1282, align 8, !tbaa !16
  %1284 = icmp eq ptr %1283, null
  br i1 %1284, label %1286, label %1285

1285:                                             ; preds = %1281
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1283)
  br label %1286

1286:                                             ; preds = %1281, %1285
  %1287 = getelementptr inbounds %struct.tree_binfo, ptr %18, i64 0, i32 2
  %1288 = load ptr, ptr %1287, align 8, !tbaa !16
  %1289 = icmp eq ptr %1288, null
  br i1 %1289, label %1291, label %1290

1290:                                             ; preds = %1286
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1288)
  br label %1291

1291:                                             ; preds = %1286, %1290
  %1292 = getelementptr inbounds %struct.tree_binfo, ptr %18, i64 0, i32 3
  %1293 = load ptr, ptr %1292, align 8, !tbaa !16
  %1294 = icmp eq ptr %1293, null
  br i1 %1294, label %1296, label %1295

1295:                                             ; preds = %1291
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1293)
  br label %1296

1296:                                             ; preds = %1291, %1295
  %1297 = getelementptr inbounds %struct.tree_binfo, ptr %18, i64 0, i32 4
  %1298 = load ptr, ptr %1297, align 8, !tbaa !16
  %1299 = icmp eq ptr %1298, null
  br i1 %1299, label %1301, label %1300

1300:                                             ; preds = %1296
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1298)
  br label %1301

1301:                                             ; preds = %1296, %1300
  %1302 = getelementptr inbounds %struct.tree_binfo, ptr %18, i64 0, i32 5
  %1303 = load ptr, ptr %1302, align 8, !tbaa !16
  %1304 = icmp eq ptr %1303, null
  br i1 %1304, label %1306, label %1305

1305:                                             ; preds = %1301
  tail call void @gt_pch_nx_VEC_tree_gc(ptr noundef nonnull %1303) #24
  br label %1306

1306:                                             ; preds = %1301, %1305
  %1307 = getelementptr inbounds %struct.tree_binfo, ptr %18, i64 0, i32 6
  %1308 = load ptr, ptr %1307, align 8, !tbaa !16
  %1309 = icmp eq ptr %1308, null
  br i1 %1309, label %1311, label %1310

1310:                                             ; preds = %1306
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1308)
  br label %1311

1311:                                             ; preds = %1306, %1310
  %1312 = getelementptr inbounds %struct.tree_binfo, ptr %18, i64 0, i32 7
  %1313 = load ptr, ptr %1312, align 8, !tbaa !16
  %1314 = icmp eq ptr %1313, null
  br i1 %1314, label %1316, label %1315

1315:                                             ; preds = %1311
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1313)
  br label %1316

1316:                                             ; preds = %1311, %1315
  %1317 = getelementptr inbounds %struct.tree_binfo, ptr %18, i64 0, i32 8
  %1318 = load ptr, ptr %1317, align 8, !tbaa !16
  %1319 = icmp eq ptr %1318, null
  br i1 %1319, label %1321, label %1320

1320:                                             ; preds = %1316
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1318)
  br label %1321

1321:                                             ; preds = %1320, %1316
  %1322 = getelementptr inbounds %struct.tree_binfo, ptr %18, i64 0, i32 9
  %1323 = load i32, ptr %1322, align 8, !tbaa !16
  %1324 = zext i32 %1323 to i64
  %1325 = icmp eq i32 %1323, 0
  br i1 %1325, label %1476, label %1326

1326:                                             ; preds = %1321, %1332
  %1327 = phi i64 [ %1333, %1332 ], [ 0, %1321 ]
  %1328 = getelementptr inbounds %struct.tree_binfo, ptr %18, i64 0, i32 9, i32 0, i32 2, i64 %1327
  %1329 = load ptr, ptr %1328, align 8, !tbaa !16
  %1330 = icmp eq ptr %1329, null
  br i1 %1330, label %1332, label %1331

1331:                                             ; preds = %1326
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1329)
  br label %1332

1332:                                             ; preds = %1326, %1331
  %1333 = add nuw nsw i64 %1327, 1
  %1334 = icmp eq i64 %1333, %1324
  br i1 %1334, label %1476, label %1326, !llvm.loop !283

1335:                                             ; preds = %22
  %1336 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %1337 = load ptr, ptr %1336, align 8, !tbaa !16
  %1338 = icmp eq ptr %1337, null
  br i1 %1338, label %1340, label %1339

1339:                                             ; preds = %1335
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1337)
  br label %1340

1340:                                             ; preds = %1335, %1339
  %1341 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %1342 = load ptr, ptr %1341, align 8, !tbaa !16
  %1343 = icmp eq ptr %1342, null
  br i1 %1343, label %1345, label %1344

1344:                                             ; preds = %1340
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1342)
  br label %1345

1345:                                             ; preds = %1340, %1344
  %1346 = getelementptr inbounds %struct.tree_statement_list, ptr %18, i64 0, i32 1
  %1347 = load ptr, ptr %1346, align 8, !tbaa !16
  %1348 = icmp eq ptr %1347, null
  br i1 %1348, label %1350, label %1349

1349:                                             ; preds = %1345
  tail call void @gt_pch_nx_tree_statement_list_node(ptr noundef nonnull %1347) #24
  br label %1350

1350:                                             ; preds = %1345, %1349
  %1351 = getelementptr inbounds %struct.tree_statement_list, ptr %18, i64 0, i32 2
  %1352 = load ptr, ptr %1351, align 8, !tbaa !16
  %1353 = icmp eq ptr %1352, null
  br i1 %1353, label %1476, label %1354

1354:                                             ; preds = %1350
  tail call void @gt_pch_nx_tree_statement_list_node(ptr noundef nonnull %1352) #24
  br label %1476

1355:                                             ; preds = %22
  %1356 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %1357 = load ptr, ptr %1356, align 8, !tbaa !16
  %1358 = icmp eq ptr %1357, null
  br i1 %1358, label %1360, label %1359

1359:                                             ; preds = %1355
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1357)
  br label %1360

1360:                                             ; preds = %1355, %1359
  %1361 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %1362 = load ptr, ptr %1361, align 8, !tbaa !16
  %1363 = icmp eq ptr %1362, null
  br i1 %1363, label %1365, label %1364

1364:                                             ; preds = %1360
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1362)
  br label %1365

1365:                                             ; preds = %1360, %1364
  %1366 = getelementptr inbounds %struct.tree_constructor, ptr %18, i64 0, i32 1
  %1367 = load ptr, ptr %1366, align 8, !tbaa !16
  %1368 = icmp eq ptr %1367, null
  br i1 %1368, label %1476, label %1369

1369:                                             ; preds = %1365
  tail call void @gt_pch_nx_VEC_constructor_elt_gc(ptr noundef nonnull %1367) #24
  br label %1476

1370:                                             ; preds = %22
  %1371 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %1372 = load ptr, ptr %1371, align 8, !tbaa !16
  %1373 = icmp eq ptr %1372, null
  br i1 %1373, label %1375, label %1374

1374:                                             ; preds = %1370
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1372)
  br label %1375

1375:                                             ; preds = %1370, %1374
  %1376 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %1377 = load ptr, ptr %1376, align 8, !tbaa !16
  %1378 = icmp eq ptr %1377, null
  br i1 %1378, label %1380, label %1379

1379:                                             ; preds = %1375
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1377)
  br label %1380

1380:                                             ; preds = %1375, %1379
  %1381 = getelementptr inbounds %struct.tree_omp_clause, ptr %18, i64 0, i32 4
  %1382 = load ptr, ptr %1381, align 8, !tbaa !16
  %1383 = icmp eq ptr %1382, null
  br i1 %1383, label %1385, label %1384

1384:                                             ; preds = %1380
  tail call void @gt_pch_nx_gimple_seq_d(ptr noundef nonnull %1382) #24
  br label %1385

1385:                                             ; preds = %1380, %1384
  %1386 = getelementptr inbounds %struct.tree_omp_clause, ptr %18, i64 0, i32 5
  %1387 = load ptr, ptr %1386, align 8, !tbaa !16
  %1388 = icmp eq ptr %1387, null
  br i1 %1388, label %1390, label %1389

1389:                                             ; preds = %1385
  tail call void @gt_pch_nx_gimple_seq_d(ptr noundef nonnull %1387) #24
  br label %1390

1390:                                             ; preds = %1389, %1385
  %1391 = getelementptr inbounds %struct.tree_omp_clause, ptr %18, i64 0, i32 2
  %1392 = load i32, ptr %1391, align 4, !tbaa !16
  %1393 = zext i32 %1392 to i64
  %1394 = getelementptr inbounds [0 x i8], ptr @omp_clause_num_ops, i64 0, i64 %1393
  %1395 = load i8, ptr %1394, align 1, !tbaa !16
  %1396 = zext i8 %1395 to i64
  %1397 = icmp eq i8 %1395, 0
  br i1 %1397, label %1476, label %1398

1398:                                             ; preds = %1390, %1404
  %1399 = phi i64 [ %1405, %1404 ], [ 0, %1390 ]
  %1400 = getelementptr inbounds %struct.tree_omp_clause, ptr %18, i64 0, i32 6, i64 %1399
  %1401 = load ptr, ptr %1400, align 8, !tbaa !16
  %1402 = icmp eq ptr %1401, null
  br i1 %1402, label %1404, label %1403

1403:                                             ; preds = %1398
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1401)
  br label %1404

1404:                                             ; preds = %1398, %1403
  %1405 = add nuw nsw i64 %1399, 1
  %1406 = icmp eq i64 %1405, %1396
  br i1 %1406, label %1476, label %1398, !llvm.loop !284

1407:                                             ; preds = %22
  %1408 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %1409 = load ptr, ptr %1408, align 8, !tbaa !16
  %1410 = icmp eq ptr %1409, null
  br i1 %1410, label %1412, label %1411

1411:                                             ; preds = %1407
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1409)
  br label %1412

1412:                                             ; preds = %1407, %1411
  %1413 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %1414 = load ptr, ptr %1413, align 8, !tbaa !16
  %1415 = icmp eq ptr %1414, null
  br i1 %1415, label %1476, label %1416

1416:                                             ; preds = %1412
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1414)
  br label %1476

1417:                                             ; preds = %22
  %1418 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %1419 = load ptr, ptr %1418, align 8, !tbaa !16
  %1420 = icmp eq ptr %1419, null
  br i1 %1420, label %1422, label %1421

1421:                                             ; preds = %1417
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1419)
  br label %1422

1422:                                             ; preds = %1417, %1421
  %1423 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %1424 = load ptr, ptr %1423, align 8, !tbaa !16
  %1425 = icmp eq ptr %1424, null
  br i1 %1425, label %1476, label %1426

1426:                                             ; preds = %1422
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1424)
  br label %1476

1427:                                             ; preds = %17
  %1428 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %1429 = load ptr, ptr %1428, align 8, !tbaa !16
  %1430 = icmp eq ptr %1429, null
  br i1 %1430, label %1432, label %1431

1431:                                             ; preds = %1427
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1429)
  br label %1432

1432:                                             ; preds = %1427, %1431
  %1433 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 2
  %1434 = load ptr, ptr %1433, align 8, !tbaa !16
  %1435 = icmp eq ptr %1434, null
  br i1 %1435, label %1437, label %1436

1436:                                             ; preds = %1432
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %1434)
  br label %1437

1437:                                             ; preds = %1436, %1432
  %1438 = getelementptr inbounds %struct.c_common_identifier, ptr %18, i64 0, i32 1
  %1439 = load ptr, ptr %1438, align 8, !tbaa !16
  tail call void @gt_pch_n_S(ptr noundef %1439) #24
  %1440 = getelementptr inbounds %struct.c_common_identifier, ptr %18, i64 0, i32 1, i32 3
  %1441 = load i16, ptr %1440, align 2
  %1442 = lshr i16 %1441, 6
  %1443 = zext i16 %1442 to i32
  %1444 = and i32 %1443, 64
  %1445 = icmp eq i32 %1444, 0
  br i1 %1445, label %1446, label %1461

1446:                                             ; preds = %1437
  %1447 = and i16 %1441, 63
  switch i16 %1447, label %1461 [
    i16 1, label %1448
    i16 2, label %1456
  ]

1448:                                             ; preds = %1446
  %1449 = and i32 %1443, 4
  %1450 = icmp eq i32 %1449, 0
  br i1 %1450, label %1451, label %1461

1451:                                             ; preds = %1448
  %1452 = getelementptr inbounds %struct.c_common_identifier, ptr %18, i64 0, i32 1, i32 4
  %1453 = load ptr, ptr %1452, align 8, !tbaa !16
  %1454 = icmp eq ptr %1453, null
  br i1 %1454, label %1461, label %1455

1455:                                             ; preds = %1451
  tail call void @gt_pch_nx_cpp_macro(ptr noundef nonnull %1453) #24
  br label %1461

1456:                                             ; preds = %1446
  %1457 = getelementptr inbounds %struct.c_common_identifier, ptr %18, i64 0, i32 1, i32 4
  %1458 = load ptr, ptr %1457, align 8, !tbaa !16
  %1459 = icmp eq ptr %1458, null
  br i1 %1459, label %1461, label %1460

1460:                                             ; preds = %1456
  tail call void @gt_pch_nx_answer(ptr noundef nonnull %1458) #24
  br label %1461

1461:                                             ; preds = %1448, %1446, %1437, %1455, %1451, %1460, %1456
  %1462 = getelementptr inbounds %struct.lang_identifier, ptr %18, i64 0, i32 1
  %1463 = load ptr, ptr %1462, align 8, !tbaa !16
  %1464 = icmp eq ptr %1463, null
  br i1 %1464, label %1466, label %1465

1465:                                             ; preds = %1461
  tail call void @gt_pch_nx_c_binding(ptr noundef nonnull %1463)
  br label %1466

1466:                                             ; preds = %1461, %1465
  %1467 = getelementptr inbounds %struct.lang_identifier, ptr %18, i64 0, i32 2
  %1468 = load ptr, ptr %1467, align 8, !tbaa !16
  %1469 = icmp eq ptr %1468, null
  br i1 %1469, label %1471, label %1470

1470:                                             ; preds = %1466
  tail call void @gt_pch_nx_c_binding(ptr noundef nonnull %1468)
  br label %1471

1471:                                             ; preds = %1466, %1470
  %1472 = getelementptr inbounds %struct.lang_identifier, ptr %18, i64 0, i32 3
  %1473 = load ptr, ptr %1472, align 8, !tbaa !16
  %1474 = icmp eq ptr %1473, null
  br i1 %1474, label %1476, label %1475

1475:                                             ; preds = %1471
  tail call void @gt_pch_nx_c_binding(ptr noundef nonnull %1473)
  br label %1476

1476:                                             ; preds = %1404, %1332, %1198, %1154, %1390, %1321, %1187, %1143, %1471, %1475, %129, %33, %29, %43, %39, %58, %54, %73, %69, %88, %84, %98, %94, %118, %114, %151, %147, %201, %197, %258, %254, %349, %345, %415, %411, %486, %482, %562, %558, %638, %634, %694, %690, %755, %751, %811, %807, %902, %898, %1013, %1009, %1112, %1108, %1132, %1128, %1225, %1221, %1270, %1266, %1354, %1350, %1369, %1365, %1416, %1412, %1426, %1422, %22
  %1477 = load i64, ptr %18, align 8
  %1478 = and i64 %1477, 65535
  %1479 = icmp eq i64 %1478, 8
  %1480 = getelementptr inbounds %struct.tree_type, ptr %18, i64 0, i32 15
  %1481 = getelementptr inbounds %struct.tree_common, ptr %18, i64 0, i32 1
  %1482 = select i1 %1479, ptr %1480, ptr %1481
  %1483 = load ptr, ptr %1482, align 8, !tbaa !16
  %1484 = icmp eq ptr %1483, %14
  br i1 %1484, label %1485, label %17, !llvm.loop !285

1485:                                             ; preds = %1476, %1, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_VEC_c_goto_bindings_p_gc(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_24VEC_c_goto_bindings_p_gc, i32 noundef 4) #24
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %29, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr %0, align 8, !tbaa !270
  %6 = zext i32 %5 to i64
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %29, label %8

8:                                                ; preds = %4, %26
  %9 = phi i64 [ %27, %26 ], [ 0, %4 ]
  %10 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %0, i64 0, i32 2, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !5
  %12 = icmp eq ptr %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %8
  %14 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %11, ptr noundef nonnull %11, ptr noundef nonnull @gt_pch_p_15c_goto_bindings, i32 noundef 5) #24
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.c_goto_bindings, ptr %11, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !118
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @gt_pch_nx_c_scope(ptr noundef nonnull %18)
  br label %21

21:                                               ; preds = %20, %16
  %22 = getelementptr inbounds %struct.c_goto_bindings, ptr %11, i64 0, i32 1, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !119
  %24 = icmp eq ptr %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @gt_pch_nx_c_binding(ptr noundef nonnull %23)
  br label %26

26:                                               ; preds = %25, %21, %13, %8
  %27 = add nuw nsw i64 %9, 1
  %28 = icmp eq i64 %27, %6
  br i1 %28, label %29, label %8, !llvm.loop !286

29:                                               ; preds = %26, %4, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_24VEC_c_goto_bindings_p_gc(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #9 {
  %5 = load i32, ptr %1, align 8, !tbaa !270
  %6 = zext i32 %5 to i64
  %7 = icmp ne i32 %5, 0
  %8 = icmp eq ptr %1, %0
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %15

10:                                               ; preds = %4, %10
  %11 = phi i64 [ %13, %10 ], [ 0, %4 ]
  %12 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %1, i64 0, i32 2, i64 %11
  tail call void %2(ptr noundef nonnull %12, ptr noundef %3) #24
  %13 = add nuw nsw i64 %11, 1
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %15, label %10, !llvm.loop !287

15:                                               ; preds = %10, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_c_goto_bindings(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_15c_goto_bindings, i32 noundef 5) #24
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %14, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.c_goto_bindings, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !118
  %7 = icmp eq ptr %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @gt_pch_nx_c_scope(ptr noundef nonnull %6)
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %struct.c_goto_bindings, ptr %0, i64 0, i32 1, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !119
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @gt_pch_nx_c_binding(ptr noundef nonnull %11)
  br label %14

14:                                               ; preds = %9, %13, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_15c_goto_bindings(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #9 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.c_goto_bindings, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #24
  %8 = getelementptr inbounds %struct.c_goto_bindings, ptr %1, i64 0, i32 1, i32 1
  tail call void %2(ptr noundef nonnull %8, ptr noundef %3) #24
  br label %9

9:                                                ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_c_scope(ptr noundef %0) #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_7c_scope, i32 noundef 6) #24
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %39, label %6

4:                                                ; preds = %6
  %5 = icmp eq ptr %8, %0
  br i1 %5, label %39, label %11

6:                                                ; preds = %1, %6
  %7 = phi ptr [ %8, %6 ], [ %0, %1 ]
  %8 = load ptr, ptr %7, align 8, !tbaa !47
  %9 = tail call i32 @gt_pch_note_object(ptr noundef %8, ptr noundef %8, ptr noundef nonnull @gt_pch_p_7c_scope, i32 noundef 6) #24
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %4, label %6, !llvm.loop !288

11:                                               ; preds = %4, %36
  %12 = phi ptr [ %37, %36 ], [ %0, %4 ]
  %13 = load ptr, ptr %12, align 8, !tbaa !47
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @gt_pch_nx_c_scope(ptr noundef nonnull %13)
  br label %16

16:                                               ; preds = %11, %15
  %17 = getelementptr inbounds %struct.c_scope, ptr %12, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !45
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @gt_pch_nx_c_scope(ptr noundef nonnull %18)
  br label %21

21:                                               ; preds = %16, %20
  %22 = getelementptr inbounds %struct.c_scope, ptr %12, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !48
  %24 = icmp eq ptr %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @gt_pch_nx_c_binding(ptr noundef nonnull %23)
  br label %26

26:                                               ; preds = %21, %25
  %27 = getelementptr inbounds %struct.c_scope, ptr %12, i64 0, i32 3
  %28 = load ptr, ptr %27, align 8, !tbaa !49
  %29 = icmp eq ptr %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %28)
  br label %31

31:                                               ; preds = %26, %30
  %32 = getelementptr inbounds %struct.c_scope, ptr %12, i64 0, i32 4
  %33 = load ptr, ptr %32, align 8, !tbaa !62
  %34 = icmp eq ptr %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %33)
  br label %36

36:                                               ; preds = %35, %31
  %37 = load ptr, ptr %12, align 8, !tbaa !47
  %38 = icmp eq ptr %37, %8
  br i1 %38, label %39, label %11, !llvm.loop !289

39:                                               ; preds = %36, %1, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_c_binding(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_9c_binding, i32 noundef 7) #24
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %47, label %6

4:                                                ; preds = %6
  %5 = icmp eq ptr %9, %0
  br i1 %5, label %47, label %12

6:                                                ; preds = %1, %6
  %7 = phi ptr [ %9, %6 ], [ %0, %1 ]
  %8 = getelementptr inbounds %struct.c_binding, ptr %7, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !60
  %10 = tail call i32 @gt_pch_note_object(ptr noundef %9, ptr noundef %9, ptr noundef nonnull @gt_pch_p_9c_binding, i32 noundef 7) #24
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %4, label %6, !llvm.loop !290

12:                                               ; preds = %4, %44
  %13 = phi ptr [ %45, %44 ], [ %0, %4 ]
  %14 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !32
  %16 = load i64, ptr %15, align 8
  %17 = and i64 %16, 65535
  %18 = icmp eq i64 %17, 30
  %19 = load ptr, ptr %13, align 8, !tbaa !16
  %20 = icmp eq ptr %19, null
  br i1 %18, label %23, label %21

21:                                               ; preds = %12
  br i1 %20, label %25, label %22

22:                                               ; preds = %21
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %19)
  br label %25

23:                                               ; preds = %12
  br i1 %20, label %25, label %24

24:                                               ; preds = %23
  tail call void @gt_pch_nx_c_label_vars(ptr noundef nonnull %19)
  br label %25

25:                                               ; preds = %22, %21, %24, %23
  %26 = load ptr, ptr %14, align 8, !tbaa !32
  %27 = icmp eq ptr %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %26)
  br label %29

29:                                               ; preds = %25, %28
  %30 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !51
  %32 = icmp eq ptr %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %31)
  br label %34

34:                                               ; preds = %29, %33
  %35 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !60
  %37 = icmp eq ptr %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %34
  tail call void @gt_pch_nx_c_binding(ptr noundef nonnull %36)
  br label %39

39:                                               ; preds = %34, %38
  %40 = getelementptr inbounds %struct.c_binding, ptr %13, i64 0, i32 4
  %41 = load ptr, ptr %40, align 8, !tbaa !52
  %42 = icmp eq ptr %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call void @gt_pch_nx_c_binding(ptr noundef nonnull %41)
  br label %44

44:                                               ; preds = %43, %39
  %45 = load ptr, ptr %35, align 8, !tbaa !60
  %46 = icmp eq ptr %45, %9
  br i1 %46, label %47, label %12, !llvm.loop !291

47:                                               ; preds = %44, %1, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_7c_scope(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #9 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %11

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #24
  %7 = getelementptr inbounds %struct.c_scope, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #24
  %8 = getelementptr inbounds %struct.c_scope, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %8, ptr noundef %3) #24
  %9 = getelementptr inbounds %struct.c_scope, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %9, ptr noundef %3) #24
  %10 = getelementptr inbounds %struct.c_scope, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %10, ptr noundef %3) #24
  br label %11

11:                                               ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_9c_binding(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #9 {
  %5 = getelementptr inbounds %struct.c_binding, ptr %1, i64 0, i32 1
  %6 = icmp eq ptr %1, %0
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void %2(ptr noundef nonnull %1, ptr noundef %3) #24
  br label %8

8:                                                ; preds = %4, %7
  %9 = icmp eq ptr %1, %0
  br i1 %9, label %10, label %14

10:                                               ; preds = %8
  tail call void %2(ptr noundef nonnull %5, ptr noundef %3) #24
  %11 = getelementptr inbounds %struct.c_binding, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %11, ptr noundef %3) #24
  %12 = getelementptr inbounds %struct.c_binding, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %12, ptr noundef %3) #24
  %13 = getelementptr inbounds %struct.c_binding, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %13, ptr noundef %3) #24
  br label %14

14:                                               ; preds = %8, %10
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_c_label_vars(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_12c_label_vars, i32 noundef 8) #24
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %55, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr %0, align 8, !tbaa !112
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @gt_pch_nx_c_label_vars(ptr noundef nonnull %5)
  br label %8

8:                                                ; preds = %4, %7
  %9 = getelementptr inbounds %struct.c_label_vars, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !113
  %11 = icmp eq ptr %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @gt_pch_nx_c_scope(ptr noundef nonnull %10)
  br label %13

13:                                               ; preds = %8, %12
  %14 = getelementptr inbounds %struct.c_label_vars, ptr %0, i64 0, i32 1, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !64
  %16 = icmp eq ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @gt_pch_nx_c_binding(ptr noundef nonnull %15)
  br label %18

18:                                               ; preds = %13, %17
  %19 = getelementptr inbounds %struct.c_label_vars, ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !53
  %21 = icmp eq ptr %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  tail call void @gt_pch_nx_VEC_tree_gc(ptr noundef nonnull %20) #24
  br label %23

23:                                               ; preds = %18, %22
  %24 = getelementptr inbounds %struct.c_label_vars, ptr %0, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8, !tbaa !69
  %26 = icmp eq ptr %25, null
  br i1 %26, label %55, label %27

27:                                               ; preds = %23
  %28 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %25, ptr noundef nonnull %25, ptr noundef nonnull @gt_pch_p_24VEC_c_goto_bindings_p_gc, i32 noundef 4) #24
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %55, label %30

30:                                               ; preds = %27
  %31 = load i32, ptr %25, align 8, !tbaa !270
  %32 = zext i32 %31 to i64
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %55, label %34

34:                                               ; preds = %30, %52
  %35 = phi i64 [ %53, %52 ], [ 0, %30 ]
  %36 = getelementptr inbounds %struct.VEC_c_goto_bindings_p_base, ptr %25, i64 0, i32 2, i64 %35
  %37 = load ptr, ptr %36, align 8, !tbaa !5
  %38 = icmp eq ptr %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = tail call i32 @gt_pch_note_object(ptr noundef nonnull %37, ptr noundef nonnull %37, ptr noundef nonnull @gt_pch_p_15c_goto_bindings, i32 noundef 5) #24
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %52, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.c_goto_bindings, ptr %37, i64 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !118
  %45 = icmp eq ptr %44, null
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  tail call void @gt_pch_nx_c_scope(ptr noundef nonnull %44)
  br label %47

47:                                               ; preds = %46, %42
  %48 = getelementptr inbounds %struct.c_goto_bindings, ptr %37, i64 0, i32 1, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !119
  %50 = icmp eq ptr %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  tail call void @gt_pch_nx_c_binding(ptr noundef nonnull %49)
  br label %52

52:                                               ; preds = %51, %47, %39, %34
  %53 = add nuw nsw i64 %35, 1
  %54 = icmp eq i64 %53, %32
  br i1 %54, label %55, label %34, !llvm.loop !286

55:                                               ; preds = %52, %30, %27, %23, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_12c_label_vars(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #9 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %11

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #24
  %7 = getelementptr inbounds %struct.c_label_vars, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #24
  %8 = getelementptr inbounds %struct.c_label_vars, ptr %1, i64 0, i32 1, i32 1
  tail call void %2(ptr noundef nonnull %8, ptr noundef %3) #24
  %9 = getelementptr inbounds %struct.c_label_vars, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %9, ptr noundef %3) #24
  %10 = getelementptr inbounds %struct.c_label_vars, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %10, ptr noundef %3) #24
  br label %11

11:                                               ; preds = %4, %6
  ret void
}

declare void @gt_pch_nx_VEC_tree_gc(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_language_function(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_17language_function, i32 noundef 117) #24
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %18, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr %0, align 8, !tbaa !277
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %5)
  br label %8

8:                                                ; preds = %4, %7
  %9 = getelementptr inbounds %struct.language_function, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !240
  %11 = icmp eq ptr %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %10)
  br label %13

13:                                               ; preds = %8, %12
  %14 = getelementptr inbounds %struct.language_function, ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !243
  %16 = icmp eq ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %15)
  br label %18

18:                                               ; preds = %13, %17, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_17language_function(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #9 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #24
  %7 = getelementptr inbounds %struct.language_function, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #24
  %8 = getelementptr inbounds %struct.language_function, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %8, ptr noundef %3) #24
  br label %9

9:                                                ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_14lang_tree_node(ptr noundef readnone %0, ptr noundef %1, ptr noundef readonly %2, ptr noundef %3) #9 {
  %5 = load i64, ptr %1, align 8
  %6 = and i64 %5, 65535
  %7 = icmp eq i64 %6, 1
  br i1 %7, label %438, label %8

8:                                                ; preds = %4
  %9 = tail call i32 @tree_node_structure(ptr noundef nonnull %1) #24
  switch i32 %9, label %467 [
    i32 33, label %433
    i32 1, label %10
    i32 2, label %15
    i32 3, label %20
    i32 4, label %26
    i32 5, label %32
    i32 6, label %38
    i32 7, label %43
    i32 8, label %50
    i32 9, label %56
    i32 10, label %63
    i32 11, label %76
    i32 12, label %90
    i32 16, label %111
    i32 13, label %127
    i32 15, label %144
    i32 14, label %162
    i32 17, label %180
    i32 18, label %194
    i32 19, label %209
    i32 20, label %223
    i32 21, label %244
    i32 22, label %269
    i32 23, label %301
    i32 24, label %308
    i32 25, label %322
    i32 26, label %354
    i32 27, label %362
    i32 28, label %374
    i32 29, label %396
    i32 30, label %403
    i32 31, label %409
    i32 32, label %428
  ]

10:                                               ; preds = %8
  %11 = icmp eq ptr %1, %0
  br i1 %11, label %12, label %467

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %13, ptr noundef %3) #24
  %14 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  br label %465

15:                                               ; preds = %8
  %16 = icmp eq ptr %1, %0
  br i1 %16, label %17, label %467

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %18, ptr noundef %3) #24
  %19 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  br label %465

20:                                               ; preds = %8
  %21 = icmp eq ptr %1, %0
  br i1 %21, label %22, label %467

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %23, ptr noundef %3) #24
  %24 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %24, ptr noundef %3) #24
  %25 = getelementptr inbounds %struct.tree_real_cst, ptr %1, i64 0, i32 1
  br label %465

26:                                               ; preds = %8
  %27 = icmp eq ptr %1, %0
  br i1 %27, label %28, label %467

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %29, ptr noundef %3) #24
  %30 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %30, ptr noundef %3) #24
  %31 = getelementptr inbounds %struct.tree_fixed_cst, ptr %1, i64 0, i32 1
  br label %465

32:                                               ; preds = %8
  %33 = icmp eq ptr %1, %0
  br i1 %33, label %34, label %467

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %35, ptr noundef %3) #24
  %36 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %36, ptr noundef %3) #24
  %37 = getelementptr inbounds %struct.tree_vector, ptr %1, i64 0, i32 1
  br label %465

38:                                               ; preds = %8
  %39 = icmp eq ptr %1, %0
  br i1 %39, label %40, label %467

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %41, ptr noundef %3) #24
  %42 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  br label %465

43:                                               ; preds = %8
  %44 = icmp eq ptr %1, %0
  br i1 %44, label %45, label %467

45:                                               ; preds = %43
  %46 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %46, ptr noundef %3) #24
  %47 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %47, ptr noundef %3) #24
  %48 = getelementptr inbounds %struct.tree_complex, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %48, ptr noundef %3) #24
  %49 = getelementptr inbounds %struct.tree_complex, ptr %1, i64 0, i32 2
  br label %465

50:                                               ; preds = %8
  %51 = icmp eq ptr %1, %0
  br i1 %51, label %52, label %467

52:                                               ; preds = %50
  %53 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %53, ptr noundef %3) #24
  %54 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %54, ptr noundef %3) #24
  %55 = getelementptr inbounds %struct.tree_identifier, ptr %1, i64 0, i32 1
  br label %465

56:                                               ; preds = %8
  %57 = icmp eq ptr %1, %0
  br i1 %57, label %58, label %467

58:                                               ; preds = %56
  %59 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %59, ptr noundef %3) #24
  %60 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %60, ptr noundef %3) #24
  %61 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %61, ptr noundef %3) #24
  %62 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  br label %465

63:                                               ; preds = %8
  %64 = icmp eq ptr %1, %0
  br i1 %64, label %65, label %467

65:                                               ; preds = %63
  %66 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %66, ptr noundef %3) #24
  %67 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %67, ptr noundef %3) #24
  %68 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %68, ptr noundef %3) #24
  %69 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %69, ptr noundef %3) #24
  %70 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %70, ptr noundef %3) #24
  %71 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %71, ptr noundef %3) #24
  %72 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %72, ptr noundef %3) #24
  %73 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %73, ptr noundef %3) #24
  %74 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %74, ptr noundef %3) #24
  %75 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 8
  br label %465

76:                                               ; preds = %8
  %77 = icmp eq ptr %1, %0
  br i1 %77, label %78, label %467

78:                                               ; preds = %76
  %79 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %79, ptr noundef %3) #24
  %80 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %80, ptr noundef %3) #24
  %81 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %81, ptr noundef %3) #24
  %82 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %82, ptr noundef %3) #24
  %83 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %83, ptr noundef %3) #24
  %84 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %84, ptr noundef %3) #24
  %85 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %85, ptr noundef %3) #24
  %86 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %86, ptr noundef %3) #24
  %87 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %87, ptr noundef %3) #24
  %88 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 8
  tail call void %2(ptr noundef nonnull %88, ptr noundef %3) #24
  %89 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %1, i64 0, i32 1
  br label %465

90:                                               ; preds = %8
  %91 = icmp eq ptr %1, %0
  br i1 %91, label %92, label %467

92:                                               ; preds = %90
  %93 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %93, ptr noundef %3) #24
  %94 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %94, ptr noundef %3) #24
  %95 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %95, ptr noundef %3) #24
  %96 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %96, ptr noundef %3) #24
  %97 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %97, ptr noundef %3) #24
  %98 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %98, ptr noundef %3) #24
  %99 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %99, ptr noundef %3) #24
  %100 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %100, ptr noundef %3) #24
  %101 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %101, ptr noundef %3) #24
  %102 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 8
  tail call void %2(ptr noundef nonnull %102, ptr noundef %3) #24
  %103 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %103, ptr noundef %3) #24
  %104 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %104, ptr noundef %3) #24
  %105 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %105, ptr noundef %3) #24
  %106 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %106, ptr noundef %3) #24
  %107 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %107, ptr noundef %3) #24
  %108 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %108, ptr noundef %3) #24
  %109 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %109, ptr noundef %3) #24
  %110 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 4
  br label %465

111:                                              ; preds = %8
  %112 = icmp eq ptr %1, %0
  br i1 %112, label %113, label %467

113:                                              ; preds = %111
  %114 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %114, ptr noundef %3) #24
  %115 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %115, ptr noundef %3) #24
  %116 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %116, ptr noundef %3) #24
  %117 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %117, ptr noundef %3) #24
  %118 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %118, ptr noundef %3) #24
  %119 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %119, ptr noundef %3) #24
  %120 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %120, ptr noundef %3) #24
  %121 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %121, ptr noundef %3) #24
  %122 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %122, ptr noundef %3) #24
  %123 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 8
  tail call void %2(ptr noundef nonnull %123, ptr noundef %3) #24
  %124 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %124, ptr noundef %3) #24
  %125 = getelementptr inbounds %struct.tree_parm_decl, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %125, ptr noundef %3) #24
  %126 = getelementptr inbounds %struct.tree_parm_decl, ptr %1, i64 0, i32 2
  br label %465

127:                                              ; preds = %8
  %128 = icmp eq ptr %1, %0
  br i1 %128, label %129, label %467

129:                                              ; preds = %127
  %130 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %130, ptr noundef %3) #24
  %131 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %131, ptr noundef %3) #24
  %132 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %132, ptr noundef %3) #24
  %133 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %133, ptr noundef %3) #24
  %134 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %134, ptr noundef %3) #24
  %135 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %135, ptr noundef %3) #24
  %136 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %136, ptr noundef %3) #24
  %137 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %137, ptr noundef %3) #24
  %138 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %138, ptr noundef %3) #24
  %139 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 8
  tail call void %2(ptr noundef nonnull %139, ptr noundef %3) #24
  %140 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %140, ptr noundef %3) #24
  %141 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %141, ptr noundef %3) #24
  %142 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %142, ptr noundef %3) #24
  %143 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 3
  br label %465

144:                                              ; preds = %8
  %145 = icmp eq ptr %1, %0
  br i1 %145, label %146, label %467

146:                                              ; preds = %144
  %147 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %147, ptr noundef %3) #24
  %148 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %148, ptr noundef %3) #24
  %149 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %149, ptr noundef %3) #24
  %150 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %150, ptr noundef %3) #24
  %151 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %151, ptr noundef %3) #24
  %152 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %152, ptr noundef %3) #24
  %153 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %153, ptr noundef %3) #24
  %154 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %154, ptr noundef %3) #24
  %155 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %155, ptr noundef %3) #24
  %156 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 8
  tail call void %2(ptr noundef nonnull %156, ptr noundef %3) #24
  %157 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %157, ptr noundef %3) #24
  %158 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %158, ptr noundef %3) #24
  %159 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %159, ptr noundef %3) #24
  %160 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %160, ptr noundef %3) #24
  %161 = getelementptr inbounds %struct.tree_var_decl, ptr %1, i64 0, i32 1
  br label %465

162:                                              ; preds = %8
  %163 = icmp eq ptr %1, %0
  br i1 %163, label %164, label %467

164:                                              ; preds = %162
  %165 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %165, ptr noundef %3) #24
  %166 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %166, ptr noundef %3) #24
  %167 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %167, ptr noundef %3) #24
  %168 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %168, ptr noundef %3) #24
  %169 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %169, ptr noundef %3) #24
  %170 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %170, ptr noundef %3) #24
  %171 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %171, ptr noundef %3) #24
  %172 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %172, ptr noundef %3) #24
  %173 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %173, ptr noundef %3) #24
  %174 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 8
  tail call void %2(ptr noundef nonnull %174, ptr noundef %3) #24
  %175 = getelementptr inbounds %struct.tree_field_decl, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %175, ptr noundef %3) #24
  %176 = getelementptr inbounds %struct.tree_field_decl, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %176, ptr noundef %3) #24
  %177 = getelementptr inbounds %struct.tree_field_decl, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %177, ptr noundef %3) #24
  %178 = getelementptr inbounds %struct.tree_field_decl, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %178, ptr noundef %3) #24
  %179 = getelementptr inbounds %struct.tree_field_decl, ptr %1, i64 0, i32 5
  br label %465

180:                                              ; preds = %8
  %181 = icmp eq ptr %1, %0
  br i1 %181, label %182, label %467

182:                                              ; preds = %180
  %183 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %183, ptr noundef %3) #24
  %184 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %184, ptr noundef %3) #24
  %185 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %185, ptr noundef %3) #24
  %186 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %186, ptr noundef %3) #24
  %187 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %187, ptr noundef %3) #24
  %188 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %188, ptr noundef %3) #24
  %189 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %189, ptr noundef %3) #24
  %190 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %190, ptr noundef %3) #24
  %191 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %191, ptr noundef %3) #24
  %192 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 8
  tail call void %2(ptr noundef nonnull %192, ptr noundef %3) #24
  %193 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %1, i64 0, i32 1
  br label %465

194:                                              ; preds = %8
  %195 = icmp eq ptr %1, %0
  br i1 %195, label %196, label %467

196:                                              ; preds = %194
  %197 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %197, ptr noundef %3) #24
  %198 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %198, ptr noundef %3) #24
  %199 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %199, ptr noundef %3) #24
  %200 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %200, ptr noundef %3) #24
  %201 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %201, ptr noundef %3) #24
  %202 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %202, ptr noundef %3) #24
  %203 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %203, ptr noundef %3) #24
  %204 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %204, ptr noundef %3) #24
  %205 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %205, ptr noundef %3) #24
  %206 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 8
  tail call void %2(ptr noundef nonnull %206, ptr noundef %3) #24
  %207 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %207, ptr noundef %3) #24
  %208 = getelementptr inbounds %struct.tree_result_decl, ptr %1, i64 0, i32 1
  br label %465

209:                                              ; preds = %8
  %210 = icmp eq ptr %1, %0
  br i1 %210, label %211, label %467

211:                                              ; preds = %209
  %212 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %212, ptr noundef %3) #24
  %213 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %213, ptr noundef %3) #24
  %214 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %214, ptr noundef %3) #24
  %215 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %215, ptr noundef %3) #24
  %216 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %216, ptr noundef %3) #24
  %217 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %217, ptr noundef %3) #24
  %218 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %218, ptr noundef %3) #24
  %219 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %219, ptr noundef %3) #24
  %220 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %220, ptr noundef %3) #24
  %221 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 8
  tail call void %2(ptr noundef nonnull %221, ptr noundef %3) #24
  %222 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %1, i64 0, i32 1
  br label %465

223:                                              ; preds = %8
  %224 = icmp eq ptr %1, %0
  br i1 %224, label %225, label %467

225:                                              ; preds = %223
  %226 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %226, ptr noundef %3) #24
  %227 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %227, ptr noundef %3) #24
  %228 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %228, ptr noundef %3) #24
  %229 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %229, ptr noundef %3) #24
  %230 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %230, ptr noundef %3) #24
  %231 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %231, ptr noundef %3) #24
  %232 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %232, ptr noundef %3) #24
  %233 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %233, ptr noundef %3) #24
  %234 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %234, ptr noundef %3) #24
  %235 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 8
  tail call void %2(ptr noundef nonnull %235, ptr noundef %3) #24
  %236 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %236, ptr noundef %3) #24
  %237 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %237, ptr noundef %3) #24
  %238 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %238, ptr noundef %3) #24
  %239 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %239, ptr noundef %3) #24
  %240 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %240, ptr noundef %3) #24
  %241 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %241, ptr noundef %3) #24
  %242 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %242, ptr noundef %3) #24
  %243 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 4
  br label %465

244:                                              ; preds = %8
  %245 = icmp eq ptr %1, %0
  br i1 %245, label %246, label %467

246:                                              ; preds = %244
  %247 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %247, ptr noundef %3) #24
  %248 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %248, ptr noundef %3) #24
  %249 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %249, ptr noundef %3) #24
  %250 = getelementptr inbounds %struct.tree_decl_minimal, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %250, ptr noundef %3) #24
  %251 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %251, ptr noundef %3) #24
  %252 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %252, ptr noundef %3) #24
  %253 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %253, ptr noundef %3) #24
  %254 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %254, ptr noundef %3) #24
  %255 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %255, ptr noundef %3) #24
  %256 = getelementptr inbounds %struct.tree_decl_common, ptr %1, i64 0, i32 8
  tail call void %2(ptr noundef nonnull %256, ptr noundef %3) #24
  %257 = getelementptr inbounds %struct.tree_decl_with_rtl, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %257, ptr noundef %3) #24
  %258 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %258, ptr noundef %3) #24
  %259 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %259, ptr noundef %3) #24
  %260 = getelementptr inbounds %struct.tree_decl_with_vis, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %260, ptr noundef %3) #24
  %261 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %261, ptr noundef %3) #24
  %262 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %262, ptr noundef %3) #24
  %263 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %263, ptr noundef %3) #24
  %264 = getelementptr inbounds %struct.tree_decl_non_common, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %264, ptr noundef %3) #24
  %265 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %265, ptr noundef %3) #24
  %266 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %266, ptr noundef %3) #24
  %267 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %267, ptr noundef %3) #24
  %268 = getelementptr inbounds %struct.tree_function_decl, ptr %1, i64 0, i32 4
  br label %465

269:                                              ; preds = %8
  %270 = icmp eq ptr %1, %0
  br i1 %270, label %271, label %280

271:                                              ; preds = %269
  %272 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %272, ptr noundef %3) #24
  %273 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %273, ptr noundef %3) #24
  %274 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %274, ptr noundef %3) #24
  %275 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %275, ptr noundef %3) #24
  %276 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %276, ptr noundef %3) #24
  %277 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %277, ptr noundef %3) #24
  %278 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 9
  tail call void %2(ptr noundef nonnull %278, ptr noundef %3) #24
  %279 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 10
  tail call void %2(ptr noundef nonnull %279, ptr noundef %3) #24
  br label %280

280:                                              ; preds = %269, %271
  %281 = load ptr, ptr @debug_hooks, align 8, !tbaa !5
  %282 = icmp eq ptr %281, @sdb_debug_hooks
  %283 = icmp eq ptr %281, @dwarf2_debug_hooks
  %284 = select i1 %283, i32 2, i32 0
  %285 = select i1 %282, i32 1, i32 %284
  switch i32 %285, label %288 [
    i32 2, label %287
    i32 1, label %286
  ]

286:                                              ; preds = %280
  br i1 %270, label %289, label %467

287:                                              ; preds = %280
  br i1 %270, label %289, label %467

288:                                              ; preds = %280
  br i1 %270, label %291, label %467

289:                                              ; preds = %287, %286
  %290 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 11
  tail call void %2(ptr noundef nonnull %290, ptr noundef %3) #24
  br label %291

291:                                              ; preds = %289, %288
  %292 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 12
  tail call void %2(ptr noundef nonnull %292, ptr noundef %3) #24
  %293 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 13
  tail call void %2(ptr noundef nonnull %293, ptr noundef %3) #24
  %294 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 14
  tail call void %2(ptr noundef nonnull %294, ptr noundef %3) #24
  %295 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 15
  tail call void %2(ptr noundef nonnull %295, ptr noundef %3) #24
  %296 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 16
  tail call void %2(ptr noundef nonnull %296, ptr noundef %3) #24
  %297 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 17
  tail call void %2(ptr noundef nonnull %297, ptr noundef %3) #24
  %298 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 18
  tail call void %2(ptr noundef nonnull %298, ptr noundef %3) #24
  %299 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 19
  tail call void %2(ptr noundef nonnull %299, ptr noundef %3) #24
  %300 = getelementptr inbounds %struct.tree_type, ptr %1, i64 0, i32 20
  br label %465

301:                                              ; preds = %8
  %302 = icmp eq ptr %1, %0
  br i1 %302, label %303, label %467

303:                                              ; preds = %301
  %304 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %304, ptr noundef %3) #24
  %305 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %305, ptr noundef %3) #24
  %306 = getelementptr inbounds %struct.tree_list, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %306, ptr noundef %3) #24
  %307 = getelementptr inbounds %struct.tree_list, ptr %1, i64 0, i32 2
  br label %465

308:                                              ; preds = %8
  %309 = icmp eq ptr %1, %0
  br i1 %309, label %310, label %467

310:                                              ; preds = %308
  %311 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %311, ptr noundef %3) #24
  %312 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %312, ptr noundef %3) #24
  %313 = getelementptr inbounds %struct.tree_vec, ptr %1, i64 0, i32 1
  %314 = load i32, ptr %313, align 8, !tbaa !16
  %315 = sext i32 %314 to i64
  %316 = icmp eq i32 %314, 0
  br i1 %316, label %467, label %317

317:                                              ; preds = %310, %317
  %318 = phi i64 [ %320, %317 ], [ 0, %310 ]
  %319 = getelementptr inbounds %struct.tree_vec, ptr %1, i64 0, i32 2, i64 %318
  tail call void %2(ptr noundef nonnull %319, ptr noundef %3) #24
  %320 = add i64 %318, 1
  %321 = icmp eq i64 %320, %315
  br i1 %321, label %467, label %317, !llvm.loop !292

322:                                              ; preds = %8
  %323 = icmp ne ptr %1, %0
  br i1 %323, label %328, label %324

324:                                              ; preds = %322
  %325 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %325, ptr noundef %3) #24
  %326 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %326, ptr noundef %3) #24
  %327 = getelementptr inbounds %struct.tree_exp, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %327, ptr noundef %3) #24
  br label %328

328:                                              ; preds = %322, %324
  %329 = load i64, ptr %1, align 8
  %330 = and i64 %329, 65535
  %331 = getelementptr inbounds [0 x i32], ptr @tree_code_type, i64 0, i64 %330
  %332 = load i32, ptr %331, align 4, !tbaa !16
  %333 = icmp eq i32 %332, 9
  br i1 %333, label %334, label %339

334:                                              ; preds = %328
  %335 = getelementptr inbounds %struct.tree_exp, ptr %1, i64 0, i32 3
  %336 = load ptr, ptr %335, align 8, !tbaa !16
  %337 = getelementptr inbounds %struct.tree_int_cst, ptr %336, i64 0, i32 1
  %338 = load i64, ptr %337, align 8, !tbaa !16
  br label %343

339:                                              ; preds = %328
  %340 = getelementptr inbounds [0 x i8], ptr @tree_code_length, i64 0, i64 %330
  %341 = load i8, ptr %340, align 1, !tbaa !16
  %342 = zext i8 %341 to i64
  br label %343

343:                                              ; preds = %334, %339
  %344 = phi i64 [ %338, %334 ], [ %342, %339 ]
  %345 = shl i64 %344, 32
  %346 = ashr exact i64 %345, 32
  %347 = icmp eq i64 %345, 0
  %348 = or i1 %347, %323
  br i1 %348, label %467, label %349

349:                                              ; preds = %343, %349
  %350 = phi i64 [ %352, %349 ], [ 0, %343 ]
  %351 = getelementptr inbounds %struct.tree_exp, ptr %1, i64 0, i32 3, i64 %350
  tail call void %2(ptr noundef nonnull %351, ptr noundef %3) #24
  %352 = add i64 %350, 1
  %353 = icmp eq i64 %352, %346
  br i1 %353, label %467, label %349, !llvm.loop !293

354:                                              ; preds = %8
  %355 = icmp eq ptr %1, %0
  br i1 %355, label %356, label %467

356:                                              ; preds = %354
  %357 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %357, ptr noundef %3) #24
  %358 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %358, ptr noundef %3) #24
  %359 = getelementptr inbounds %struct.tree_ssa_name, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %359, ptr noundef %3) #24
  %360 = getelementptr inbounds %struct.tree_ssa_name, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %360, ptr noundef %3) #24
  %361 = getelementptr inbounds %struct.tree_ssa_name, ptr %1, i64 0, i32 4
  br label %465

362:                                              ; preds = %8
  %363 = icmp eq ptr %1, %0
  br i1 %363, label %364, label %467

364:                                              ; preds = %362
  %365 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %365, ptr noundef %3) #24
  %366 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %366, ptr noundef %3) #24
  %367 = getelementptr inbounds %struct.tree_block, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %367, ptr noundef %3) #24
  %368 = getelementptr inbounds %struct.tree_block, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %368, ptr noundef %3) #24
  %369 = getelementptr inbounds %struct.tree_block, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %369, ptr noundef %3) #24
  %370 = getelementptr inbounds %struct.tree_block, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %370, ptr noundef %3) #24
  %371 = getelementptr inbounds %struct.tree_block, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %371, ptr noundef %3) #24
  %372 = getelementptr inbounds %struct.tree_block, ptr %1, i64 0, i32 8
  tail call void %2(ptr noundef nonnull %372, ptr noundef %3) #24
  %373 = getelementptr inbounds %struct.tree_block, ptr %1, i64 0, i32 9
  br label %465

374:                                              ; preds = %8
  %375 = icmp eq ptr %1, %0
  br i1 %375, label %376, label %467

376:                                              ; preds = %374
  %377 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %377, ptr noundef %3) #24
  %378 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %378, ptr noundef %3) #24
  %379 = getelementptr inbounds %struct.tree_binfo, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %379, ptr noundef %3) #24
  %380 = getelementptr inbounds %struct.tree_binfo, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %380, ptr noundef %3) #24
  %381 = getelementptr inbounds %struct.tree_binfo, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %381, ptr noundef %3) #24
  %382 = getelementptr inbounds %struct.tree_binfo, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %382, ptr noundef %3) #24
  %383 = getelementptr inbounds %struct.tree_binfo, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %383, ptr noundef %3) #24
  %384 = getelementptr inbounds %struct.tree_binfo, ptr %1, i64 0, i32 6
  tail call void %2(ptr noundef nonnull %384, ptr noundef %3) #24
  %385 = getelementptr inbounds %struct.tree_binfo, ptr %1, i64 0, i32 7
  tail call void %2(ptr noundef nonnull %385, ptr noundef %3) #24
  %386 = getelementptr inbounds %struct.tree_binfo, ptr %1, i64 0, i32 8
  tail call void %2(ptr noundef nonnull %386, ptr noundef %3) #24
  %387 = getelementptr inbounds %struct.tree_binfo, ptr %1, i64 0, i32 9
  %388 = load i32, ptr %387, align 8, !tbaa !16
  %389 = zext i32 %388 to i64
  %390 = icmp eq i32 %388, 0
  br i1 %390, label %467, label %391

391:                                              ; preds = %376, %391
  %392 = phi i64 [ %394, %391 ], [ 0, %376 ]
  %393 = getelementptr inbounds %struct.tree_binfo, ptr %1, i64 0, i32 9, i32 0, i32 2, i64 %392
  tail call void %2(ptr noundef nonnull %393, ptr noundef %3) #24
  %394 = add nuw nsw i64 %392, 1
  %395 = icmp eq i64 %394, %389
  br i1 %395, label %467, label %391, !llvm.loop !294

396:                                              ; preds = %8
  %397 = icmp eq ptr %1, %0
  br i1 %397, label %398, label %467

398:                                              ; preds = %396
  %399 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %399, ptr noundef %3) #24
  %400 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %400, ptr noundef %3) #24
  %401 = getelementptr inbounds %struct.tree_statement_list, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %401, ptr noundef %3) #24
  %402 = getelementptr inbounds %struct.tree_statement_list, ptr %1, i64 0, i32 2
  br label %465

403:                                              ; preds = %8
  %404 = icmp eq ptr %1, %0
  br i1 %404, label %405, label %467

405:                                              ; preds = %403
  %406 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %406, ptr noundef %3) #24
  %407 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %407, ptr noundef %3) #24
  %408 = getelementptr inbounds %struct.tree_constructor, ptr %1, i64 0, i32 1
  br label %465

409:                                              ; preds = %8
  %410 = icmp eq ptr %1, %0
  br i1 %410, label %411, label %467

411:                                              ; preds = %409
  %412 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %412, ptr noundef %3) #24
  %413 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %413, ptr noundef %3) #24
  %414 = getelementptr inbounds %struct.tree_omp_clause, ptr %1, i64 0, i32 4
  tail call void %2(ptr noundef nonnull %414, ptr noundef %3) #24
  %415 = getelementptr inbounds %struct.tree_omp_clause, ptr %1, i64 0, i32 5
  tail call void %2(ptr noundef nonnull %415, ptr noundef %3) #24
  %416 = getelementptr inbounds %struct.tree_omp_clause, ptr %1, i64 0, i32 2
  %417 = load i32, ptr %416, align 4, !tbaa !16
  %418 = zext i32 %417 to i64
  %419 = getelementptr inbounds [0 x i8], ptr @omp_clause_num_ops, i64 0, i64 %418
  %420 = load i8, ptr %419, align 1, !tbaa !16
  %421 = zext i8 %420 to i64
  %422 = icmp eq i8 %420, 0
  br i1 %422, label %467, label %423

423:                                              ; preds = %411, %423
  %424 = phi i64 [ %426, %423 ], [ 0, %411 ]
  %425 = getelementptr inbounds %struct.tree_omp_clause, ptr %1, i64 0, i32 6, i64 %424
  tail call void %2(ptr noundef nonnull %425, ptr noundef %3) #24
  %426 = add nuw nsw i64 %424, 1
  %427 = icmp eq i64 %426, %421
  br i1 %427, label %467, label %423, !llvm.loop !295

428:                                              ; preds = %8
  %429 = icmp eq ptr %1, %0
  br i1 %429, label %430, label %467

430:                                              ; preds = %428
  %431 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %431, ptr noundef %3) #24
  %432 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  br label %465

433:                                              ; preds = %8
  %434 = icmp eq ptr %1, %0
  br i1 %434, label %435, label %467

435:                                              ; preds = %433
  %436 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %436, ptr noundef %3) #24
  %437 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  br label %465

438:                                              ; preds = %4
  %439 = icmp eq ptr %1, %0
  br i1 %439, label %440, label %444

440:                                              ; preds = %438
  %441 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %441, ptr noundef %3) #24
  %442 = getelementptr inbounds %struct.tree_common, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %442, ptr noundef %3) #24
  %443 = getelementptr inbounds %struct.c_common_identifier, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %443, ptr noundef %3) #24
  br label %444

444:                                              ; preds = %438, %440
  %445 = getelementptr inbounds %struct.c_common_identifier, ptr %1, i64 0, i32 1, i32 3
  %446 = load i16, ptr %445, align 2
  %447 = lshr i16 %446, 6
  %448 = zext i16 %447 to i32
  %449 = and i32 %448, 64
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %458

451:                                              ; preds = %444
  %452 = and i16 %446, 63
  switch i16 %452, label %458 [
    i16 1, label %453
    i16 2, label %457
  ]

453:                                              ; preds = %451
  %454 = and i32 %448, 4
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %456, label %458

456:                                              ; preds = %453
  br i1 %439, label %459, label %467

457:                                              ; preds = %451
  br i1 %439, label %459, label %467

458:                                              ; preds = %453, %451, %444
  br i1 %439, label %461, label %467

459:                                              ; preds = %457, %456
  %460 = getelementptr inbounds %struct.c_common_identifier, ptr %1, i64 0, i32 1, i32 4
  tail call void %2(ptr noundef nonnull %460, ptr noundef %3) #24
  br label %461

461:                                              ; preds = %459, %458
  %462 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %462, ptr noundef %3) #24
  %463 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %463, ptr noundef %3) #24
  %464 = getelementptr inbounds %struct.lang_identifier, ptr %1, i64 0, i32 3
  br label %465

465:                                              ; preds = %435, %430, %405, %398, %364, %356, %303, %291, %246, %225, %211, %196, %182, %164, %146, %129, %113, %92, %78, %65, %58, %52, %45, %40, %34, %28, %22, %17, %12, %461
  %466 = phi ptr [ %464, %461 ], [ %14, %12 ], [ %19, %17 ], [ %25, %22 ], [ %31, %28 ], [ %37, %34 ], [ %42, %40 ], [ %49, %45 ], [ %55, %52 ], [ %62, %58 ], [ %75, %65 ], [ %89, %78 ], [ %110, %92 ], [ %126, %113 ], [ %143, %129 ], [ %161, %146 ], [ %179, %164 ], [ %193, %182 ], [ %208, %196 ], [ %222, %211 ], [ %243, %225 ], [ %268, %246 ], [ %300, %291 ], [ %307, %303 ], [ %361, %356 ], [ %373, %364 ], [ %402, %398 ], [ %408, %405 ], [ %432, %430 ], [ %437, %435 ]
  tail call void %2(ptr noundef nonnull %466, ptr noundef %3) #24
  br label %467

467:                                              ; preds = %423, %391, %349, %317, %465, %409, %374, %343, %308, %411, %376, %310, %457, %456, %458, %433, %428, %403, %396, %362, %354, %301, %287, %286, %288, %244, %223, %209, %194, %180, %162, %144, %127, %111, %90, %76, %63, %56, %50, %43, %38, %32, %26, %20, %15, %10, %8
  ret void
}

declare void @gt_pch_nx_real_value(ptr noundef) local_unnamed_addr #3

declare void @gt_pch_nx_fixed_value(ptr noundef) local_unnamed_addr #3

declare void @gt_pch_n_S(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_lang_decl(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_9lang_decl, i32 noundef 136) #24
  ret void
}

declare void @gt_pch_nx_rtx_def(ptr noundef) local_unnamed_addr #3

declare void @gt_pch_nx_var_ann_d(ptr noundef) local_unnamed_addr #3

declare void @gt_pch_nx_function(ptr noundef) local_unnamed_addr #3

declare void @gt_pch_nx_die_struct(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_nx_lang_type(ptr noundef %0) local_unnamed_addr #9 {
  %2 = tail call i32 @gt_pch_note_object(ptr noundef %0, ptr noundef %0, ptr noundef nonnull @gt_pch_p_9lang_type, i32 noundef 137) #24
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %25, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr %0, align 8, !tbaa !204
  %6 = icmp eq ptr %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  tail call void @gt_pch_nx_sorted_fields_type(ptr noundef nonnull %5) #24
  %8 = load ptr, ptr %0, align 8, !tbaa !204
  br label %9

9:                                                ; preds = %7, %4
  %10 = phi ptr [ %8, %7 ], [ null, %4 ]
  tail call void @gt_pch_note_reorder(ptr noundef %10, ptr noundef %10, ptr noundef nonnull @resort_sorted_fields) #24
  %11 = getelementptr inbounds %struct.lang_type, ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !164
  %13 = icmp eq ptr %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %12)
  br label %15

15:                                               ; preds = %9, %14
  %16 = getelementptr inbounds %struct.lang_type, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !166
  %18 = icmp eq ptr %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %17)
  br label %20

20:                                               ; preds = %15, %19
  %21 = getelementptr inbounds %struct.lang_type, ptr %0, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !264
  %23 = icmp eq ptr %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @gt_pch_nx_lang_tree_node(ptr noundef nonnull %22)
  br label %25

25:                                               ; preds = %20, %24, %1
  ret void
}

declare void @gt_pch_nx_gimple_statement_d(ptr noundef) local_unnamed_addr #3

declare void @gt_pch_nx_ptr_info_def(ptr noundef) local_unnamed_addr #3

declare void @gt_pch_nx_tree_statement_list_node(ptr noundef) local_unnamed_addr #3

declare void @gt_pch_nx_VEC_constructor_elt_gc(ptr noundef) local_unnamed_addr #3

declare void @gt_pch_nx_gimple_seq_d(ptr noundef) local_unnamed_addr #3

declare void @gt_pch_nx_cpp_macro(ptr noundef) local_unnamed_addr #3

declare void @gt_pch_nx_answer(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local void @gt_pch_p_9lang_decl(ptr nocapture %0, ptr nocapture %1, ptr nocapture %2, ptr nocapture %3) #10 {
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @gt_pch_p_9lang_type(ptr noundef readnone %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) #9 {
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  tail call void %2(ptr noundef %1, ptr noundef %3) #24
  %7 = getelementptr inbounds %struct.lang_type, ptr %1, i64 0, i32 1
  tail call void %2(ptr noundef nonnull %7, ptr noundef %3) #24
  %8 = getelementptr inbounds %struct.lang_type, ptr %1, i64 0, i32 2
  tail call void %2(ptr noundef nonnull %8, ptr noundef %3) #24
  %9 = getelementptr inbounds %struct.lang_type, ptr %1, i64 0, i32 3
  tail call void %2(ptr noundef nonnull %9, ptr noundef %3) #24
  br label %10

10:                                               ; preds = %4, %6
  ret void
}

declare void @gt_pch_nx_sorted_fields_type(ptr noundef) local_unnamed_addr #3

declare void @gt_pch_note_reorder(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @resort_sorted_fields(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #3

declare ptr @vec_gc_p_reserve(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @c_type_promotes_to(ptr noundef) local_unnamed_addr #3

declare ptr @decl_assembler_name(ptr noundef) local_unnamed_addr #3

declare void @merge_weak(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @gimple_set_body(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @gimple_body(ptr noundef) local_unnamed_addr #3

declare ptr @copy_list(ptr noundef) local_unnamed_addr #3

declare i64 @tree_code_size(i32 noundef) local_unnamed_addr #3

declare void @make_decl_rtl(ptr noundef) local_unnamed_addr #3

declare void @cgraph_mark_if_needed(ptr noundef) local_unnamed_addr #3

declare ptr @make_tree_vector() local_unnamed_addr #3

declare ptr @vec_gc_p_reserve_exact(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @fname_as_string(i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #22

declare ptr @build_array_type(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @build_index_type(ptr noundef) local_unnamed_addr #3

declare ptr @c_build_qualified_type(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @build_string(i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @size_binop_loc(i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @ggc_free(ptr noundef) local_unnamed_addr #3

declare void @warn_deprecated_use(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @unsigned_type_for(ptr noundef) local_unnamed_addr #3

declare ptr @strip_array_types(ptr noundef) local_unnamed_addr #3

declare ptr @c_common_signed_type(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @warn_variable_length_array(ptr noundef %0, i64 %1) unnamed_addr #9 {
  %3 = trunc i64 %1 to i32
  %4 = lshr i32 %3, 17
  %5 = and i32 %4, 1
  %6 = load i32, ptr @flag_isoc99, align 4, !tbaa !20
  %7 = icmp eq i32 %6, 0
  %8 = load i32, ptr @pedantic, align 4
  %9 = icmp ne i32 %8, 0
  %10 = select i1 %7, i1 %9, i1 false
  %11 = load i32, ptr @warn_vla, align 4
  %12 = icmp ne i32 %11, 0
  %13 = select i1 %10, i1 %12, i1 false
  br i1 %13, label %14, label %28

14:                                               ; preds = %2
  %15 = icmp eq i32 %5, 0
  %16 = icmp eq ptr %0, null
  %17 = load i32, ptr @input_location, align 4, !tbaa !20
  br i1 %15, label %23, label %18

18:                                               ; preds = %14
  br i1 %16, label %21, label %19

19:                                               ; preds = %18
  %20 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %17, i32 noundef 234, ptr noundef nonnull @.str.333, ptr noundef nonnull %0) #24
  br label %43

21:                                               ; preds = %18
  %22 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %17, i32 noundef 234, ptr noundef nonnull @.str.334) #24
  br label %43

23:                                               ; preds = %14
  br i1 %16, label %26, label %24

24:                                               ; preds = %23
  %25 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %17, i32 noundef 234, ptr noundef nonnull @.str.335, ptr noundef nonnull %0) #24
  br label %43

26:                                               ; preds = %23
  %27 = tail call zeroext i8 (i32, i32, ptr, ...) @pedwarn(i32 noundef %17, i32 noundef 234, ptr noundef nonnull @.str.336) #24
  br label %43

28:                                               ; preds = %2
  %29 = icmp sgt i32 %11, 0
  br i1 %29, label %30, label %43

30:                                               ; preds = %28
  %31 = icmp eq i32 %5, 0
  %32 = icmp eq ptr %0, null
  br i1 %31, label %38, label %33

33:                                               ; preds = %30
  br i1 %32, label %36, label %34

34:                                               ; preds = %33
  %35 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 234, ptr noundef nonnull @.str.337, ptr noundef nonnull %0) #24
  br label %43

36:                                               ; preds = %33
  %37 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 234, ptr noundef nonnull @.str.338) #24
  br label %43

38:                                               ; preds = %30
  br i1 %32, label %41, label %39

39:                                               ; preds = %38
  %40 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 234, ptr noundef nonnull @.str.339, ptr noundef nonnull %0) #24
  br label %43

41:                                               ; preds = %38
  %42 = tail call zeroext i8 (i32, ptr, ...) @warning(i32 noundef 234, ptr noundef nonnull @.str.340) #24
  br label %43

43:                                               ; preds = %28, %39, %41, %34, %36, %21, %19, %26, %24
  ret void
}

declare ptr @build_range_type(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @fold_build2_stat_loc(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @build_qualified_type(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @build_distinct_type_copy(ptr noundef) local_unnamed_addr #3

declare void @put_pending_sizes(ptr noundef) local_unnamed_addr #3

declare ptr @build_pointer_type(ptr noundef) local_unnamed_addr #3

declare ptr @build_decl_attribute_variant(ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @decl_default_tls_model(ptr noundef) local_unnamed_addr #3

declare void @c_apply_type_quals_to_decl(i32 noundef, ptr noundef) local_unnamed_addr #3

declare zeroext i8 @c_mark_addressable(ptr noundef) local_unnamed_addr #3

declare ptr @save_expr(ptr noundef) local_unnamed_addr #3

declare ptr @skip_simple_arithmetic(ptr noundef) local_unnamed_addr #3

declare void @put_pending_size(ptr noundef) local_unnamed_addr #3

declare ptr @identifier_to_locale(ptr noundef) local_unnamed_addr #3

declare i32 @compare_tree_int(ptr noundef, i64 noundef) local_unnamed_addr #3

declare ptr @build_int_cst(ptr noundef, i64 noundef) local_unnamed_addr #3

declare ptr @vec_heap_p_reserve_exact(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @vec_heap_p_reserve(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @htab_create(i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @htab_find_slot(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @htab_delete(ptr noundef) local_unnamed_addr #3

declare ptr @pointer_set_create() local_unnamed_addr #3

declare i32 @pointer_set_insert(ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @pointer_set_contains(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @pointer_set_destroy(ptr noundef) local_unnamed_addr #3

declare ptr @build_variant_type_copy(ptr noundef) local_unnamed_addr #3

declare void @wrapup_global_declaration_1(ptr noundef) local_unnamed_addr #3

declare zeroext i8 @wrapup_global_declaration_2(ptr noundef) local_unnamed_addr #3

declare void @check_global_declaration_1(ptr noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #23

attributes #0 = { inlinehint nofree nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { nofree nounwind "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { inlinehint nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { inlinehint mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #5 = { inlinehint mustprogress nofree nounwind sspstrong willreturn memory(read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #6 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { inlinehint mustprogress nofree nounwind sspstrong willreturn uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { mustprogress nofree nounwind willreturn "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #14 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #15 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #16 = { nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #17 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #18 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: write) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #19 = { nofree nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #20 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #21 = { nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #22 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #23 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #24 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !6, i64 8}
!10 = !{!"_IO_FILE", !11, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !11, i64 112, !11, i64 116, !12, i64 120, !13, i64 128, !7, i64 130, !7, i64 131, !6, i64 136, !12, i64 144, !6, i64 152, !6, i64 160, !6, i64 168, !6, i64 176, !12, i64 184, !11, i64 192, !7, i64 196}
!11 = !{!"int", !7, i64 0}
!12 = !{!"long", !7, i64 0}
!13 = !{!"short", !7, i64 0}
!14 = !{!10, !6, i64 16}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = !{!7, !7, i64 0}
!17 = !{!10, !6, i64 40}
!18 = !{!10, !6, i64 48}
!19 = !{!10, !11, i64 0}
!20 = !{!11, !11, i64 0}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.mustprogress"}
!23 = !{!24, !6, i64 0}
!24 = !{!"stmt_tree_s", !6, i64 0, !11, i64 8}
!25 = !{!26, !6, i64 56}
!26 = !{!"lang_identifier", !27, i64 0, !6, i64 56, !6, i64 64, !6, i64 72}
!27 = !{!"c_common_identifier", !28, i64 0, !30, i64 24}
!28 = !{!"tree_common", !29, i64 0, !6, i64 8, !6, i64 16}
!29 = !{!"tree_base", !11, i64 0, !11, i64 2, !11, i64 2, !11, i64 2, !11, i64 2, !11, i64 2, !11, i64 2, !11, i64 2, !11, i64 2, !11, i64 3, !11, i64 3, !11, i64 3, !11, i64 3, !11, i64 3, !11, i64 3, !11, i64 3, !11, i64 3, !11, i64 4, !11, i64 4, !11, i64 4, !11, i64 4, !11, i64 4, !11, i64 4, !11, i64 4, !11, i64 4, !11, i64 5, !11, i64 5, !11, i64 5, !11, i64 5, !11, i64 7}
!30 = !{!"cpp_hashnode", !31, i64 0, !11, i64 16, !11, i64 16, !7, i64 17, !11, i64 18, !11, i64 18, !7, i64 24}
!31 = !{!"ht_identifier", !6, i64 0, !11, i64 8, !11, i64 12}
!32 = !{!33, !6, i64 8}
!33 = !{!"c_binding", !7, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !11, i64 40, !11, i64 43, !11, i64 43, !11, i64 43, !11, i64 43, !11, i64 44}
!34 = !{!26, !6, i64 64}
!35 = !{!26, !6, i64 72}
!36 = !{!27, !7, i64 41}
!37 = !{!38, !11, i64 0}
!38 = !{!"c_inline_static", !11, i64 0, !6, i64 8, !6, i64 16, !7, i64 24, !6, i64 32}
!39 = !{!38, !6, i64 8}
!40 = !{!38, !6, i64 16}
!41 = !{!38, !7, i64 24}
!42 = !{!38, !6, i64 32}
!43 = distinct !{!43, !22}
!44 = distinct !{!44, !22}
!45 = !{!46, !6, i64 8}
!46 = !{!"c_scope", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !11, i64 40, !11, i64 43, !11, i64 43, !11, i64 43, !11, i64 43, !11, i64 44, !11, i64 44, !11, i64 44}
!47 = !{!46, !6, i64 0}
!48 = !{!46, !6, i64 16}
!49 = !{!46, !6, i64 24}
!50 = distinct !{!50, !22}
!51 = !{!33, !6, i64 16}
!52 = !{!33, !6, i64 32}
!53 = !{!54, !6, i64 32}
!54 = !{!"c_label_vars", !6, i64 0, !55, i64 8, !6, i64 32, !6, i64 40}
!55 = !{!"c_spot_bindings", !6, i64 0, !6, i64 8, !11, i64 16, !7, i64 20}
!56 = distinct !{!56, !22}
!57 = !{!58, !7, i64 16}
!58 = !{!"", !6, i64 0, !11, i64 8, !11, i64 12, !7, i64 16}
!59 = !{!33, !11, i64 44}
!60 = !{!33, !6, i64 24}
!61 = distinct !{!61, !22}
!62 = !{!46, !6, i64 32}
!63 = !{!55, !6, i64 0}
!64 = !{!54, !6, i64 16}
!65 = !{!55, !6, i64 8}
!66 = !{!67, !11, i64 4}
!67 = !{!"VEC_tree_base", !11, i64 0, !11, i64 4, !7, i64 8}
!68 = !{!67, !11, i64 0}
!69 = !{!54, !6, i64 40}
!70 = !{!71, !11, i64 0}
!71 = !{!"VEC_c_goto_bindings_p_base", !11, i64 0, !11, i64 4, !7, i64 8}
!72 = distinct !{!72, !22}
!73 = distinct !{!73, !22}
!74 = distinct !{!74, !22}
!75 = distinct !{!75, !22}
!76 = distinct !{!76, !22}
!77 = distinct !{!77, !22}
!78 = !{!54, !11, i64 24}
!79 = !{!80, !11, i64 24}
!80 = !{!"c_goto_bindings", !11, i64 0, !55, i64 8}
!81 = distinct !{!81, !82}
!82 = !{!"llvm.loop.unroll.disable"}
!83 = distinct !{!83, !22}
!84 = distinct !{!84, !22}
!85 = !{!55, !11, i64 16}
!86 = !{!54, !7, i64 28}
!87 = !{!80, !7, i64 28}
!88 = distinct !{!88, !22}
!89 = distinct !{!89, !22}
!90 = distinct !{!90, !22}
!91 = !{i8 0, i8 2}
!92 = distinct !{!92, !22}
!93 = distinct !{!93, !22}
!94 = distinct !{!94, !22}
!95 = distinct !{!95, !22}
!96 = distinct !{!96, !22}
!97 = !{!98, !6, i64 808}
!98 = !{!"gcc_target", !99, i64 0, !101, i64 368, !102, i64 664, !11, i64 744, !6, i64 752, !6, i64 760, !6, i64 768, !6, i64 776, !6, i64 784, !6, i64 792, !6, i64 800, !6, i64 808, !6, i64 816, !6, i64 824, !6, i64 832, !6, i64 840, !6, i64 848, !6, i64 856, !6, i64 864, !6, i64 872, !6, i64 880, !6, i64 888, !6, i64 896, !6, i64 904, !6, i64 912, !6, i64 920, !6, i64 928, !6, i64 936, !6, i64 944, !6, i64 952, !6, i64 960, !6, i64 968, !6, i64 976, !6, i64 984, !6, i64 992, !6, i64 1000, !6, i64 1008, !6, i64 1016, !6, i64 1024, !6, i64 1032, !6, i64 1040, !6, i64 1048, !6, i64 1056, !12, i64 1064, !12, i64 1072, !6, i64 1080, !6, i64 1088, !6, i64 1096, !6, i64 1104, !6, i64 1112, !6, i64 1120, !6, i64 1128, !6, i64 1136, !6, i64 1144, !6, i64 1152, !6, i64 1160, !6, i64 1168, !103, i64 1176, !6, i64 1232, !6, i64 1240, !6, i64 1248, !6, i64 1256, !6, i64 1264, !6, i64 1272, !6, i64 1280, !6, i64 1288, !6, i64 1296, !6, i64 1304, !6, i64 1312, !6, i64 1320, !6, i64 1328, !6, i64 1336, !6, i64 1344, !6, i64 1352, !6, i64 1360, !6, i64 1368, !6, i64 1376, !6, i64 1384, !6, i64 1392, !6, i64 1400, !6, i64 1408, !6, i64 1416, !6, i64 1424, !6, i64 1432, !6, i64 1440, !6, i64 1448, !6, i64 1456, !12, i64 1464, !104, i64 1472, !6, i64 1664, !6, i64 1672, !6, i64 1680, !6, i64 1688, !6, i64 1696, !6, i64 1704, !6, i64 1712, !6, i64 1720, !6, i64 1728, !6, i64 1736, !6, i64 1744, !6, i64 1752, !6, i64 1760, !6, i64 1768, !6, i64 1776, !105, i64 1784, !106, i64 1792, !107, i64 1896, !108, i64 1968, !6, i64 2016, !7, i64 2024, !7, i64 2025, !7, i64 2026, !7, i64 2027, !7, i64 2028, !7, i64 2029, !7, i64 2030, !7, i64 2031, !7, i64 2032, !7, i64 2033, !7, i64 2034, !7, i64 2035}
!99 = !{!"asm_out", !6, i64 0, !6, i64 8, !6, i64 16, !100, i64 24, !100, i64 56, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !6, i64 120, !6, i64 128, !6, i64 136, !6, i64 144, !6, i64 152, !6, i64 160, !6, i64 168, !6, i64 176, !6, i64 184, !6, i64 192, !6, i64 200, !6, i64 208, !6, i64 216, !6, i64 224, !6, i64 232, !6, i64 240, !6, i64 248, !6, i64 256, !6, i64 264, !6, i64 272, !6, i64 280, !6, i64 288, !6, i64 296, !6, i64 304, !6, i64 312, !6, i64 320, !6, i64 328, !6, i64 336, !6, i64 344, !6, i64 352, !6, i64 360}
!100 = !{!"asm_int_op", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24}
!101 = !{!"sched", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !6, i64 120, !6, i64 128, !6, i64 136, !6, i64 144, !6, i64 152, !6, i64 160, !6, i64 168, !6, i64 176, !6, i64 184, !6, i64 192, !6, i64 200, !6, i64 208, !6, i64 216, !6, i64 224, !6, i64 232, !6, i64 240, !6, i64 248, !6, i64 256, !6, i64 264, !6, i64 272, !6, i64 280, !6, i64 288}
!102 = !{!"vectorize", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72}
!103 = !{!"addr_space", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48}
!104 = !{!"calls", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !6, i64 120, !6, i64 128, !6, i64 136, !6, i64 144, !6, i64 152, !6, i64 160, !6, i64 168, !6, i64 176, !6, i64 184}
!105 = !{!"c", !6, i64 0}
!106 = !{!"cxx", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96}
!107 = !{!"emutls", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !7, i64 64, !7, i64 65}
!108 = !{!"target_option_hooks", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40}
!109 = distinct !{!109, !22}
!110 = distinct !{!110, !22}
!111 = distinct !{!111, !22}
!112 = !{!54, !6, i64 0}
!113 = !{!54, !6, i64 8}
!114 = !{!80, !11, i64 0}
!115 = !{!55, !7, i64 20}
!116 = !{!71, !11, i64 4}
!117 = distinct !{!117, !22}
!118 = !{!80, !6, i64 8}
!119 = !{!80, !6, i64 16}
!120 = distinct !{!120, !22}
!121 = distinct !{!121, !22}
!122 = distinct !{!122, !22}
!123 = distinct !{!123, !22}
!124 = distinct !{!124, !22}
!125 = distinct !{!125, !22}
!126 = !{!13, !13, i64 0}
!127 = !{!128, !6, i64 0}
!128 = !{!"c_declspecs", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !7, i64 32, !7, i64 36, !11, i64 40, !11, i64 40, !11, i64 40, !11, i64 40, !11, i64 40, !11, i64 40, !11, i64 40, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 48, !11, i64 48, !11, i64 48, !11, i64 48, !11, i64 48, !11, i64 48, !11, i64 48, !11, i64 49, !11, i64 49, !11, i64 49, !11, i64 49, !7, i64 50}
!129 = !{!128, !11, i64 44}
!130 = !{!128, !7, i64 36}
!131 = !{!128, !7, i64 50}
!132 = !{!128, !6, i64 16}
!133 = !{!128, !7, i64 32}
!134 = !{!135, !12, i64 40}
!135 = !{!"obstack", !12, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !12, i64 40, !11, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !11, i64 80, !11, i64 80, !11, i64 80}
!136 = !{!135, !6, i64 32}
!137 = !{!135, !6, i64 24}
!138 = !{!135, !6, i64 16}
!139 = !{!135, !11, i64 48}
!140 = !{!135, !6, i64 8}
!141 = !{!142, !11, i64 16}
!142 = !{!"c_declarator", !7, i64 0, !6, i64 8, !11, i64 16, !7, i64 24}
!143 = !{!142, !7, i64 0}
!144 = !{!142, !6, i64 8}
!145 = !{!128, !6, i64 24}
!146 = !{!147, !6, i64 0}
!147 = !{!"c_type_name", !6, i64 0, !6, i64 8}
!148 = !{!147, !6, i64 8}
!149 = !{!128, !6, i64 8}
!150 = distinct !{!150, !22}
!151 = distinct !{!151, !22}
!152 = distinct !{!152, !22}
!153 = distinct !{!153, !22}
!154 = distinct !{!154, !22}
!155 = distinct !{!155, !22}
!156 = !{!98, !6, i64 1696}
!157 = !{!158, !6, i64 16}
!158 = !{!"c_arg_info", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !11, i64 40}
!159 = !{!158, !6, i64 0}
!160 = !{!98, !6, i64 1688}
!161 = distinct !{!161, !22}
!162 = !{!158, !6, i64 32}
!163 = distinct !{!163, !22}
!164 = !{!165, !6, i64 8}
!165 = !{!"lang_type", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24}
!166 = !{!165, !6, i64 16}
!167 = distinct !{!167, !22}
!168 = !{!98, !6, i64 1480}
!169 = distinct !{!169, !22}
!170 = distinct !{!170, !22}
!171 = !{!172, !11, i64 0}
!172 = !{!"VEC_constructor_elt_base", !11, i64 0, !11, i64 4, !7, i64 8}
!173 = !{!174, !6, i64 8}
!174 = !{!"constructor_elt_d", !6, i64 0, !6, i64 8}
!175 = !{!176, !6, i64 8}
!176 = !{!"c_parm", !6, i64 0, !6, i64 8, !6, i64 16}
!177 = !{!176, !6, i64 16}
!178 = !{!176, !6, i64 0}
!179 = distinct !{!179, !22}
!180 = distinct !{!180, !22}
!181 = !{!158, !6, i64 8}
!182 = !{!158, !6, i64 24}
!183 = !{!184, !6, i64 16}
!184 = !{!"c_typespec", !7, i64 0, !6, i64 8, !6, i64 16, !7, i64 24}
!185 = !{!184, !7, i64 24}
!186 = !{!184, !7, i64 0}
!187 = !{!184, !6, i64 8}
!188 = !{!189, !6, i64 0}
!189 = !{!"c_struct_parse_info", !6, i64 0, !6, i64 8, !6, i64 16}
!190 = !{!189, !6, i64 8}
!191 = !{!189, !6, i64 16}
!192 = !{!193, !11, i64 4}
!193 = !{!"VEC_c_binding_ptr_base", !11, i64 0, !11, i64 4, !7, i64 8}
!194 = !{!193, !11, i64 0}
!195 = distinct !{!195, !22}
!196 = distinct !{!196, !22}
!197 = distinct !{!197, !22}
!198 = distinct !{!198, !22}
!199 = distinct !{!199, !22}
!200 = distinct !{!200, !22}
!201 = distinct !{!201, !22}
!202 = distinct !{!202, !22}
!203 = distinct !{!203, !22}
!204 = !{!165, !6, i64 0}
!205 = distinct !{!205, !22}
!206 = !{!207, !11, i64 0}
!207 = !{!"sorted_fields_type", !11, i64 0, !7, i64 8}
!208 = distinct !{!208, !22}
!209 = distinct !{!209, !22}
!210 = distinct !{!210, !22}
!211 = distinct !{!211, !22}
!212 = distinct !{!212, !22}
!213 = distinct !{!213, !22}
!214 = distinct !{!214, !22}
!215 = distinct !{!215, !22}
!216 = !{!217, !6, i64 0}
!217 = !{!"c_enum_contents", !6, i64 0, !11, i64 8}
!218 = !{!217, !11, i64 8}
!219 = distinct !{!219, !22}
!220 = distinct !{!220, !22}
!221 = distinct !{!221, !22}
!222 = distinct !{!222, !22}
!223 = distinct !{!223, !22}
!224 = distinct !{!224, !22}
!225 = distinct !{!225, !22}
!226 = distinct !{!226, !22}
!227 = distinct !{!227, !22}
!228 = distinct !{!228, !22}
!229 = distinct !{!229, !22}
!230 = distinct !{!230, !22}
!231 = distinct !{!231, !22}
!232 = distinct !{!232, !22}
!233 = distinct !{!233, !22}
!234 = distinct !{!234, !22}
!235 = !{!236, !11, i64 116}
!236 = !{!"function", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !11, i64 104, !11, i64 108, !11, i64 112, !11, i64 116, !11, i64 120, !11, i64 124, !6, i64 128, !11, i64 136, !11, i64 137, !11, i64 138, !11, i64 138, !11, i64 138, !11, i64 138, !11, i64 138, !11, i64 138, !11, i64 138, !11, i64 139, !11, i64 139, !11, i64 139, !11, i64 139, !11, i64 139, !11, i64 139, !11, i64 139}
!237 = distinct !{!237, !22}
!238 = !{!236, !6, i64 88}
!239 = !{i64 0, i64 8, !5, i64 8, i64 4, !20}
!240 = !{!241, !6, i64 16}
!241 = !{!"language_function", !242, i64 0, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60}
!242 = !{!"c_language_function", !24, i64 0}
!243 = !{!241, !6, i64 24}
!244 = !{!241, !6, i64 32}
!245 = !{!241, !6, i64 40}
!246 = !{!241, !11, i64 48}
!247 = !{!241, !11, i64 52}
!248 = !{!241, !11, i64 56}
!249 = !{!241, !11, i64 60}
!250 = !{!251, !6, i64 144}
!251 = !{!"gcc_debug_hooks", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !6, i64 120, !6, i64 128, !6, i64 136, !6, i64 144, !6, i64 152, !6, i64 160, !6, i64 168, !6, i64 176, !6, i64 184, !6, i64 192, !6, i64 200, !6, i64 208, !6, i64 216, !6, i64 224, !6, i64 232, !6, i64 240, !11, i64 248}
!252 = !{!98, !6, i64 872}
!253 = !{!98, !6, i64 880}
!254 = distinct !{!254, !22}
!255 = !{!251, !6, i64 136}
!256 = distinct !{!256, !22}
!257 = distinct !{!257, !22}
!258 = distinct !{!258, !22}
!259 = distinct !{!259, !22}
!260 = distinct !{!260, !22}
!261 = distinct !{!261, !22}
!262 = distinct !{!262, !22}
!263 = distinct !{!263, !22}
!264 = !{!165, !6, i64 24}
!265 = distinct !{!265, !22}
!266 = distinct !{!266, !22}
!267 = distinct !{!267, !22}
!268 = distinct !{!268, !22}
!269 = distinct !{!269, !22}
!270 = !{!271, !11, i64 0}
!271 = !{!"VEC_c_goto_bindings_p_gc", !71, i64 0}
!272 = distinct !{!272, !22}
!273 = distinct !{!273, !22}
!274 = distinct !{!274, !22}
!275 = distinct !{!275, !22}
!276 = distinct !{!276, !22}
!277 = !{!241, !6, i64 0}
!278 = distinct !{!278, !22}
!279 = distinct !{!279, !22}
!280 = distinct !{!280, !22}
!281 = distinct !{!281, !22}
!282 = distinct !{!282, !22}
!283 = distinct !{!283, !22}
!284 = distinct !{!284, !22}
!285 = distinct !{!285, !22}
!286 = distinct !{!286, !22}
!287 = distinct !{!287, !22}
!288 = distinct !{!288, !22}
!289 = distinct !{!289, !22}
!290 = distinct !{!290, !22}
!291 = distinct !{!291, !22}
!292 = distinct !{!292, !22}
!293 = distinct !{!293, !22}
!294 = distinct !{!294, !22}
!295 = distinct !{!295, !22}
